================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 17:30:44
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
from abc import ABC, abstractmethod
from collections import defaultdict
from typing import Dict, Tuple, List

class Unit(ABC):
    @abstractmethod
    def to_base(self) -> int:
        pass

    @classmethod
    @abstractmethod
    def from_base(cls, value: int) -> 'Unit':
        pass

class WeightUnit(Unit):
    """
    Represents weight in 'ボッコ'(Bokko) units.
    1 Bokko unit weight = 2^x grams, x >= 0 integer.
    For the problem, weight is given as integer count of Bokko units.
    """
    def __init__(self, bokko: int):
        if bokko < 0:
            raise ValueError("Bokko unit must be non-negative")
        self.bokko = bokko

    def to_base(self) -> int:
        # Base weight unit: 1 gram
        # But problem only manipulates Bokko units as integers, so base is Bokko units directly
        return self.bokko

    @classmethod
    def from_base(cls, value: int) -> 'WeightUnit':
        if value < 0:
            raise ValueError("Base weight must be non-negative")
        return cls(value)

    def __add__(self, other: 'WeightUnit') -> 'WeightUnit':
        return WeightUnit(self.bokko + other.bokko)

    def __eq__(self, other) -> bool:
        if not isinstance(other, WeightUnit):
            return False
        return self.bokko == other.bokko

    def __lt__(self, other: 'WeightUnit') -> bool:
        return self.bokko < other.bokko

    def __hash__(self):
        return hash(self.bokko)

    def __repr__(self):
        return f"WeightUnit({self.bokko})"

class QuantityUnit(Unit):
    """
    Represents quantity in 'マルグ'(Marugu) units.
    1 Marugu unit = 2^y items, y >= 0 integer.
    Here quantity stored as integer count of Marugu units.
    """
    def __init__(self, marugu: int):
        if marugu < 0:
            raise ValueError("Marugu unit must be non-negative")
        self.marugu = marugu

    def to_base(self) -> int:
        # Base quantity unit is the Marugu count itself; the problem does not specify conversions for y
        return self.marugu

    @classmethod
    def from_base(cls, value: int) -> 'QuantityUnit':
        if value < 0:
            raise ValueError("Base quantity must be non-negative")
        return cls(value)

    def __add__(self, other: 'QuantityUnit') -> 'QuantityUnit':
        return QuantityUnit(self.marugu + other.marugu)

    def __eq__(self, other) -> bool:
        if not isinstance(other, QuantityUnit):
            return False
        return self.marugu == other.marugu

    def __repr__(self):
        return f"QuantityUnit({self.marugu})"

class AlloyChunk:
    """
    Represents a single chunk of alloy:
    weight: WeightUnit
    quantity: QuantityUnit
    """
    def __init__(self, weight: WeightUnit, quantity: QuantityUnit):
        self.weight = weight
        self.quantity = quantity

    def total_weight(self) -> int:
        # total weight in Bokko units * counts in Marugu units (sum total weight)
        return self.weight.to_base() * self.quantity.to_base()

    def __repr__(self):
        return f"AlloyChunk(weight={self.weight.bokko}, quantity={self.quantity.marugu})"

class CollectionVehicle:
    """
    Represents a vehicle collecting a certain amount of alloy chunks.
    """
    def __init__(self, chunk: AlloyChunk):
        self.chunk = chunk

    def total_weight(self) -> int:
        return self.chunk.total_weight()

    def __repr__(self):
        return f"CollectionVehicle({self.chunk})"

class AlloyRecyclingSystem:
    """
    Handles collecting alloy chunks from vehicles and recombining them.
    """

    def __init__(self):
        self.vehicles: List[CollectionVehicle] = []

    def add_vehicle_data(self, a_i: int, b_i: int):
        weight = WeightUnit(a_i)
        quantity = QuantityUnit(b_i)
        chunk = AlloyChunk(weight, quantity)
        vehicle = CollectionVehicle(chunk)
        self.vehicles.append(vehicle)

    def total_weight(self) -> int:
        # sum all chunk total weights
        return sum(v.total_weight() for v in self.vehicles)

    def regenerate_min_chunks(self) -> List[AlloyChunk]:
        # sum total weight from all vehicles
        total_weight = self.total_weight()

        # The problem wants to minimize the number of chunks after regen.
        # Minimizing number of chunks means make the quantity to zero (storage in one chunk),
        # and set weight to total_weight, quantity 0 (which corresponds to 1 item)

        # We must convert total_weight (grams in bokko units * marugu counts) into (bokko, marugu).

        # Based on problem statement,
        # The 'marugu' unit is 2^y items.
        # We want to find x,y such that 2^x * 2^y = total_weight
        # But we don't know x,y, and problem does not give those.

        # The input/output format treats a,b as the bokko weight and marugu counts.
        # Actually, the problem expects output of chunks with b=0, as sample shows.

        # So minimizing chunk count means all combined into some chunks with b=0.

        # The sample merges all chunks weight sums, outputting one or more chunks with b=0.

        # Since b=0 means quantity = 1 (2^0=1).

        # We can combine all into single chunk with quantity=1, weight=total_weight.

        # However, the problem example shows multiple chunks if input contains multiple different weights.

        # Reconsider:

        # Because weight unit is 2^x grams, quantity unit 2^y items, total mass:
        # total_mass_grams = sum a_i * 2^x * b_i * 2^y

        # But we only know a_i and b_i.

        # The problem does not specify x and y, so we treat a_i and b_i as integers and calculate weight = a_i * b_i

        # Then we want to find minimal number of chunks each having quantity = 2^y and weight = 2^x, so total mass:

        # Minimal number of chunks is obtained by writing total_mass = sum of weight_i * quantity_i, each weight_i and quantity_i are integers.

        # But with no other constraint, minimal chunk count is achieved by choosing all quantity_i=0 -> quantity=1 and weight_i = total_mass (since b=0 means quantity=1).

        # The problem suggests "weight of small units" in bokko units and quantity units in marugu.

        # HOWEVER, the 'Sample Output 1' gives TWO lines:

        # 3 0
        # 5 0

        # Where sum a_i * b_i from input is:
        # 2*1 + 1*3 + 2*2 = 2 + 3 + 4 = 9

        # Output weights sum: 3 + 5 = 8 ?

        # Output quantities are 0 meaning quantity=1 each.

        # Contradiction? Wait, sample output 1 is:
        # 3 0
        # 5 0

        # Sum of weights = 3 + 5 = 8 < 9 input total weight

        # Why? It means the problem is to output chunks in (a,b) such that sum a_i * 2^x * b_i * 2^y = input total mass.

        # The problem gives no x,y and no transformations, so likely a_i and b_i are exponents for 2^x and 2^y:

        # Actually problem statement says:

        # "x" is the exponent in the weight unit 2^x grams

        # Similarly for y

        # Each chunk weight = a_i * 2^x grams

        # Number of item = b_i * 2^y

        # So total mass from chunk i = a_i * 2^x * b_i * 2^y = a_i * b_i * 2^{x+y}

        # But x,y are unknown but same for all

        # So total mass = (sum a_i * b_i) * 2^{x+y}

        # Since 2^{x+y} is constant but unknown, as is x,y >=0, to minimize chunk count

        # The problem is to express sum over chunks: a_i*b_i with minimal number of chunks a_j*b_j with total sum equal.

        # The solution is to find minimal partition of sum(a_i * b_i)

        # Which equals minimal number of addends adding to sum.

        # Minimum chunks = number of 1s in the binary representation of sum(a_i*b_i)

        # Because each chunk has weight and quantity in units of powers of two.

        # So minimal chunk count equals popcount of sum(a_i*b_i).

        # Each chunk corresponds to a power of two.

        # So, decompose total sum = sum of powers of 2, output each power as a chunk with a_j = power and b_j = 0

        # But as sample output 1 shows output 3 0 and 5 0, sums to 8, but input sum is 9

        # Sample input 1: (2 1, 1 3, 2 2)

        # sum a_i * b_i = 2*1 + 1*3 + 2*2 = 2 + 3 + 4 = 9

        # Output is 3 0 and 5 0, sum 3 +5 =8 not 9 : discrepancy

        # re-check sample output 1: "3 0" and "5 0" ?

        # The problem's sample output seems inconsistent as posted?

        # Wait original output is:

        # Sample Output 1
        # 3 0
        # 5 0

        # That's 3 and 5 weight with zero quantity, zero quantity means 2^0=1 item each chunk

        # Total weight = sum weight * quantity = (3 * 1) + (5 * 1) = 8

        # Input total mass = 9 ? 

        # There's a note in the problem statement or a discrepancy ?

        # Ah, re-check problem statement:

        # Output must be sorted by weight ascending.

        # Perhaps the minimal number of chunks are those that when merged by common divisors.

        # Another idea: sum all total weights = sum_i a_i * b_i

        # Output chunks weight and quantity b_j (marugu units) that multiply to the elements of binary representation of total weight.

        # Maybe quantity b_j might be non-zero.

        # But problem output has only zeros in output samples, might mean quantity fixed 1.

        # Possibly, we can store total weight as sum of powers of two (numbers with quantity=0)

        # 9 = 8 + 1

        # So output chunks with weight 1 and 8

        # but sample output is 3 and 5

        # 3 + 5 = 8 only

        # So is it typo in sample output ?

        # Maybe 3 and 5 are a and b are exponent indices, not exact number.

        # Guess: a_i and b_i are exponents for 2^x and 2^y

        # Then weight per chunk: mass_i = 2^{a_i} * 2^{b_i} = 2^{a_i + b_i}

        # So mass per chunk is 2^{a_i + b_i}. So mass is just power of 2.

        # So input lines give exponents a_i,b_i.

        # Sample input 1:

        # 3
        # 2 1  -> mass = 2^{2+1} = 2^3 =8
        # 1 3  -> mass = 2^{1+3} = 2^4 = 16
        # 2 2  -> mass = 2^{2+2} =2^4=16

        # Total mass = 8 + 16 +16 = 40

        # Output 3 0 and 5 0 means:

        # 2^{3+0}=8 and 2^{5+0}=32

        # sum = 8+32 =40

        # This matches total mass!

        # So the input and output units represent powers of 2 on exponentials.

        # The problem states:

        # weight = 2^a, quantity =2^b, total mass per chunk = 2^{a+b}

        # The problem wants minimal number of chunks such that sum of 2^{a_j + b_j} = total mass.

        # Since mass is a power of 2 exponent, it's sum of powers of two.

        # Thus, we get total mass exponent by summing 2^{a_i + b_i}.

        # Then minimal chunk number is popcount of total mass.

        # Then output chunks with a and b where a+b is exponent of each bit set in total mass.

        # How to split exponent into a and b?

        # Output requires a_j, b_j such that a_j+b_j equals the bit position.

        # Since problem wants minimal chunks = popcount, we can in output set b_j=0 for all, a_j=bit positions

        # Or set a_j=bit positions, b_j=0

        # So final output is output bits of total mass as pairs (a_j,b_j)

        # Sample output 1:

        # bits in 40 (binary 101000):

        # positions (zero-based): bits set at 3 and 5 (counting from LSB as position 0)

        # bit 3: 8

        # bit 5: 32

        # output:

        # 3 0

        # 5 0

        # Exactly sample output.

        # Therefore the problem is to:

        # 1. compute total mass = sum 2^{a_i + b_i}

        # 2. decompose total mass into powers of two

        # 3. for each power of two set bit at position k output a chunk a_j=k, b_j=0 sorting by a_j ascending

        # Now implement this.

class InputProcessor:
    """
    Parses input data into appropriate objects.
    """

    def __init__(self):
        self.N: int = 0
        self.exponents: List[Tuple[int,int]] = []

    def read_input(self):
        self.N = int(input())
        for _ in range(self.N):
            a_i, b_i = map(int, input().split())
            self.exponents.append((a_i, b_i))

class AlloyRecyclingSolver:
    """
    Solution solver operating on exponents to minimize chunk count.
    """

    def __init__(self, exponent_pairs: List[Tuple[int,int]]):
        self.exponent_pairs = exponent_pairs

    def total_mass_bitsum(self) -> int:
        total = 0
        for a,b in self.exponent_pairs:
            total += 2 ** (a + b)
        return total

    def decompose_mass(self, total_mass: int) -> List[Tuple[int,int]]:
        """
        Decompose total_mass (integer) into powers of two.
        Return list of (a_j,b_j) pairs such that a_j + b_j = bit position.
        Choose b_j=0 for minimal complexity.
        """
        chunks = []
        bit_pos = 0
        while total_mass > 0:
            if total_mass & 1:
                chunks.append((bit_pos, 0))
            total_mass >>= 1
            bit_pos += 1
        return sorted(chunks,key=lambda x: x[0])

    def solve(self) -> List[Tuple[int,int]]:
        total_mass = self.total_mass_bitsum()
        return self.decompose_mass(total_mass)

def main():
    input_processor = InputProcessor()
    input_processor.read_input()

    solver = AlloyRecyclingSolver(input_processor.exponents)
    answer = solver.solve()
    for a, b in answer:
        print(a, b)

if __name__ == '__main__':
    main()
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'from' (ID: 2845)
  → Token d'amorce (pas de prédiction)

Token 1: ' abc' (ID: 75094)
  → Token d'amorce (pas de prédiction)

Token 2: ' import' (ID: 1588)
  → Token d'amorce (pas de prédiction)

Token 3: ' ABC' (ID: 33047)
  Prédit: ' ABC'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ABC' → logprob: -0.1270483285188675
    2. 'ABC' → logprob: -2.1270482540130615
    3. 'AB' → logprob: -10.00204849243164
    4. ' A' → logprob: -10.37704849243164
    5. 'ABCDE' → logprob: -11.25204849243164
    6. 'abc' → logprob: -11.75204849243164
    7. 'abstract' → logprob: -12.25204849243164
    8. 'A' → logprob: -12.37704849243164
    9. ' ' → logprob: -12.75204849243164
    10. ' ' → logprob: -12.75204849243164

Token 4: ',' (ID: 11)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.44743484258651733
    2. ',' → logprob: -1.072434902191162
    3. 'import' → logprob: -4.822434902191162
    4. '<|end|>' → logprob: -5.822434902191162
    5. ':' → logprob: -6.072434902191162
    6. '```' → logprob: -6.322434902191162
    7. ' ,' → logprob: -7.197434902191162
    8. ' .' → logprob: -7.697434902191162
    9. ' import' → logprob: -8.322434425354004
    10. '.I' → logprob: -8.572434425354004

Token 5: ' abstract' (ID: 13004)
  Prédit: 'abstract'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'abstract' → logprob: -0.48451441526412964
    2. ' abstract' → logprob: -0.9845144152641296
    3. 'Abstract' → logprob: -4.609514236450195
    4. ' ' → logprob: -9.109514236450195
    5. '.abstract' → logprob: -9.234514236450195
    6. 'Meta' → logprob: -10.109514236450195
    7. ' ABC' → logprob: -10.359514236450195
    8. ' Abstract' → logprob: -10.359514236450195
    9. ' A' → logprob: -10.859514236450195
    10. '```' → logprob: -10.984514236450195

Token 6: 'method' (ID: 8697)
  Prédit: 'method'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'method' → logprob: -2.7133641196996905e-05
    2. 'classmethod' → logprob: -10.62502670288086
    3. 'staticmethod' → logprob: -13.75002670288086
    4. 'meth' → logprob: -14.12502670288086
    5. '_method' → logprob: -15.50002670288086
    6. 'm' → logprob: -15.50002670288086
    7. 'ethod' → logprob: -15.75002670288086
    8. ' method' → logprob: -15.87502670288086
    9. 'abstract' → logprob: -16.12502670288086
    10. 'met' → logprob: -16.50002670288086

Token 7: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.19592909514904022
    2. '```' → logprob: -2.4459290504455566
    3. '

' → logprob: -3.3209290504455566
    4. '\n' → logprob: -4.195929050445557
    5. 'class' → logprob: -4.570929050445557
    6. '
' → logprob: -4.820929050445557
    7. '' → logprob: -5.320929050445557
    8. '\' → logprob: -5.445929050445557
    9. '``' → logprob: -5.445929050445557
    10. '<|end|>' → logprob: -6.570929050445557

Token 8: 'from' (ID: 2845)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.1726326197385788
    2. '

' → logprob: -2.1726326942443848
    3. '```' → logprob: -3.5476326942443848
    4. 'class' → logprob: -4.422632694244385
    5. '' → logprob: -7.047632694244385
    6. '
' → logprob: -7.047632694244385
    7. '\n' → logprob: -7.672632694244385
    8. '``' → logprob: -7.672632694244385
    9. ' 

' → logprob: -8.297632217407227
    10. '
 
' → logprob: -8.672632217407227

Token 9: ' collections' (ID: 22690)
  Prédit: ' typing'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' typing' → logprob: -0.02580157481133938
    2. ' collections' → logprob: -4.025801658630371
    3. ' dat' → logprob: -5.525801658630371
    4. 'typing' → logprob: -6.525801658630371
    5. ' io' → logprob: -7.650801658630371
    6. ' abc' → logprob: -8.025801658630371
    7. ' os' → logprob: -8.275801658630371
    8. ' sys' → logprob: -8.400801658630371
    9. 'collections' → logprob: -8.650801658630371
    10. ' math' → logprob: -8.775801658630371

Token 10: ' import' (ID: 1588)
  Prédit: ' import'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' import' → logprob: -0.48001614212989807
    2. 'import' → logprob: -0.9800161123275757
    3. '.' → logprob: -5.480016231536865
    4. '```' → logprob: -7.230016231536865
    5. '_' → logprob: -8.230015754699707
    6. ' ' → logprob: -8.355015754699707
    7. '_import' → logprob: -9.105015754699707
    8. 's' → logprob: -9.105015754699707
    9. '<|end|>' → logprob: -9.480015754699707
    10. '.import' → logprob: -10.355015754699707

Token 11: ' defaultdict' (ID: 107098)
  Prédit: ' abc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' abc' → logprob: -0.24578531086444855
    2. ' defaultdict' → logprob: -1.8707853555679321
    3. ' deque' → logprob: -3.1207852363586426
    4. 'deque' → logprob: -4.495785236358643
    5. 'abc' → logprob: -4.995785236358643
    6. ' named' → logprob: -6.620785236358643
    7. ' Ordered' → logprob: -8.7457857131958
    8. ' Counter' → logprob: -8.9957857131958
    9. 'named' → logprob: -9.3707857131958
    10. ' ' → logprob: -9.9957857131958

Token 12: '
' (ID: 198)
  Prédit: '

'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '

' → logprob: -0.2998090386390686
    2. '
' → logprob: -1.4248089790344238
    3. 'class' → logprob: -4.549808979034424
    4. '```' → logprob: -5.924808979034424
    5. '


' → logprob: -6.424808979034424
    6. '
' → logprob: -6.424808979034424
    7. '\n' → logprob: -6.924808979034424
    8. '' → logprob: -8.424809455871582
    9. '``' → logprob: -8.549809455871582
    10. '`

' → logprob: -8.549809455871582

Token 13: 'from' (ID: 2845)
  Prédit: '

'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '

' → logprob: -0.5094359517097473
    2. '
' → logprob: -1.0094358921051025
    3. 'class' → logprob: -3.5094358921051025
    4. '


' → logprob: -6.384436130523682
    5. '```' → logprob: -6.759436130523682
    6. '\n' → logprob: -7.384436130523682
    7. '
' → logprob: -7.634436130523682
    8. '`

' → logprob: -8.134435653686523
    9. 'import' → logprob: -9.134435653686523
    10. ' class' → logprob: -9.134435653686523

Token 14: ' typing' (ID: 34152)
  Prédit: ' typing'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' typing' → logprob: -0.27883705496788025
    2. ' itertools' → logprob: -2.653836965560913
    3. ' enum' → logprob: -3.028836965560913
    4. ' datetime' → logprob: -3.778836965560913
    5. ' ' → logprob: -3.903836965560913
    6. ' threading' → logprob: -4.153837203979492
    7. ' collections' → logprob: -4.403837203979492
    8. ' dat' → logprob: -4.403837203979492
    9. ' json' → logprob: -4.778837203979492
    10. ' functools' → logprob: -4.903837203979492

Token 15: ' import' (ID: 1588)
  Prédit: ' import'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' import' → logprob: -0.47751620411872864
    2. 'import' → logprob: -1.1025161743164062
    3. '.' → logprob: -3.6025161743164062
    4. '<|end|>' → logprob: -4.227516174316406
    5. ' ' → logprob: -6.102516174316406
    6. '<|end|>' → logprob: -6.977516174316406
    7. '```' → logprob: -7.602516174316406
    8. '[' → logprob: -8.227516174316406
    9. ' as' → logprob: -8.352516174316406
    10. ')' → logprob: -8.352516174316406

Token 16: ' Dict' (ID: 55179)
  Prédit: ' Default'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Default' → logprob: -1.1302751302719116
    2. ' Dict' → logprob: -1.1302751302719116
    3. ' defaultdict' → logprob: -1.7552751302719116
    4. ' List' → logprob: -1.8802751302719116
    5. ' Any' → logprob: -4.255275249481201
    6. 'Default' → logprob: -5.255275249481201
    7. 'Dict' → logprob: -5.630275249481201
    8. ' default' → logprob: -6.630275249481201
    9. ' ' → logprob: -7.005275249481201
    10. ' Callable' → logprob: -7.255275249481201

Token 17: ',' (ID: 11)
  Prédit: '

'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '

' → logprob: -0.05885028839111328
    2. '
' → logprob: -3.4338502883911133
    3. ',' → logprob: -3.9338502883911133
    4. '```' → logprob: -6.433850288391113
    5. '<|end|>' → logprob: -7.058850288391113
    6. 'class' → logprob: -7.058850288391113
    7. '


' → logprob: -7.183850288391113
    8. ',

' → logprob: -7.558850288391113
    9. '<|end|>' → logprob: -8.808850288391113
    10. '[' → logprob: -9.058850288391113

Token 18: ' Tuple' (ID: 50841)
  Prédit: 'List'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'List' → logprob: -0.5413174033164978
    2. 'Any' → logprob: -1.4163174629211426
    3. ' List' → logprob: -2.0413174629211426
    4. 'Set' → logprob: -4.416317462921143
    5. ' Any' → logprob: -4.416317462921143
    6. 'Iterable' → logprob: -5.291317462921143
    7. 'Callable' → logprob: -5.791317462921143
    8. 'Optional' → logprob: -5.916317462921143
    9. 'Default' → logprob: -6.041317462921143
    10. 'Union' → logprob: -6.291317462921143

Token 19: ',' (ID: 11)
  Prédit: '

'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '

' → logprob: -0.06719096004962921
    2. '
' → logprob: -3.4421908855438232
    3. 'class' → logprob: -3.5671908855438232
    4. '```' → logprob: -6.067191123962402
    5. '\n' → logprob: -6.942191123962402
    6. '


' → logprob: -7.192191123962402
    7. 'import' → logprob: -8.817191123962402
    8. ',' → logprob: -8.942191123962402
    9. '
' → logprob: -9.442191123962402
    10. ' class' → logprob: -9.692191123962402

Token 20: ' List' (ID: 2655)
  Prédit: ' List'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' List' → logprob: -0.8656108975410461
    2. 'List' → logprob: -1.2406108379364014
    3. 'Any' → logprob: -2.3656108379364014
    4. ' Callable' → logprob: -2.7406108379364014
    5. ' Any' → logprob: -3.2406108379364014
    6. 'Callable' → logprob: -3.8656108379364014
    7. 'Set' → logprob: -4.1156110763549805
    8. ' Optional' → logprob: -4.2406110763549805
    9. 'Optional' → logprob: -4.4906110763549805
    10. ' Union' → logprob: -4.8656110763549805

Token 21: '

' (ID: 279)
  Prédit: '

'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '

' → logprob: -0.49032092094421387
    2. 'class' → logprob: -1.6153209209442139
    3. '
' → logprob: -1.7403209209442139
    4. '\n' → logprob: -5.115321159362793
    5. '```' → logprob: -5.240321159362793
    6. '


' → logprob: -7.240321159362793
    7. '
' → logprob: -7.990321159362793
    8. ' class' → logprob: -8.240321159362793
    9. '<class' → logprob: -9.115321159362793
    10. '' → logprob: -9.115321159362793

Token 22: 'class' (ID: 1444)
  Prédit: 'class'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'class' → logprob: -0.013092117384076118
    2. '
' → logprob: -4.513092041015625
    3. 'c' → logprob: -6.888092041015625
    4. '

' → logprob: -8.013092041015625
    5. '\n' → logprob: -8.013092041015625
    6. '```' → logprob: -8.513092041015625
    7. ' class' → logprob: -9.888092041015625
    8. '
' → logprob: -10.513092041015625
    9. '' → logprob: -11.013092041015625
    10. 'clas' → logprob: -11.638092041015625

Token 23: ' Unit' (ID: 14856)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.14665722846984863
    2. ' Abstract' → logprob: -2.3966572284698486
    3. ' Serializer' → logprob: -5.1466569900512695
    4. ' Task' → logprob: -5.5216569900512695
    5. ' Shape' → logprob: -5.5216569900512695
    6. ' Token' → logprob: -5.6466569900512695
    7. ' Parser' → logprob: -5.8966569900512695
    8. ' My' → logprob: -5.8966569900512695
    9. ' Data' → logprob: -6.0216569900512695
    10. ' Base' → logprob: -6.2716569900512695

Token 24: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.3945429027080536
    2. ':' → logprob: -1.144542932510376
    3. '(Abstract' → logprob: -4.894542694091797
    4. ' :' → logprob: -10.894542694091797
    5. '):' → logprob: -10.894542694091797
    6. '(Base' → logprob: -10.894542694091797
    7. '():' → logprob: -11.269542694091797
    8. '```' → logprob: -11.269542694091797
    9. '(Unit' → logprob: -11.394542694091797
    10. 'Abstract' → logprob: -11.519542694091797

Token 25: 'ABC' (ID: 44197)
  Prédit: 'ABC'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ABC' → logprob: -0.03406345471739769
    2. ' ABC' → logprob: -3.4090633392333984
    3. ')' → logprob: -8.534063339233398
    4. 'Abstract' → logprob: -9.659063339233398
    5. 'AB' → logprob: -9.909063339233398
    6. 'abc' → logprob: -10.409063339233398
    7. 'ABCDE' → logprob: -11.034063339233398
    8. '):' → logprob: -11.284063339233398
    9. ' ' → logprob: -11.409063339233398
    10. 'A' → logprob: -11.659063339233398

Token 26: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.06199020519852638
    2. ')' → logprob: -2.811990261077881
    3. ':' → logprob: -11.436989784240723
    4. ')>' → logprob: -12.311989784240723
    5. '):
' → logprob: -12.936989784240723
    6. ' ):' → logprob: -13.186989784240723
    7. ',' → logprob: -13.561989784240723
    8. '):

' → logprob: -14.811989784240723
    9. ')：' → logprob: -15.186989784240723
    10. ' )' → logprob: -15.311989784240723

Token 27: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.06848911195993423
    2. '   ' → logprob: -2.8184890747070312
    3. ' :' → logprob: -5.943489074707031
    4. '<|end|>' → logprob: -7.318489074707031
    5. '    ' → logprob: -7.443489074707031
    6. ':
' → logprob: -7.693489074707031
    7. ')' → logprob: -7.693489074707031
    8. '    
' → logprob: -8.068489074707031
    9. ' ' → logprob: -8.193489074707031
    10. ''' → logprob: -8.693489074707031

Token 28: ' @' (ID: 759)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.26499518752098083
    2. '    ' → logprob: -2.2649950981140137
    3. 'def' → logprob: -2.6399950981140137
    4. ' def' → logprob: -3.7649950981140137
    5. '    
' → logprob: -3.8899950981140137
    6. ' ' → logprob: -5.139995098114014
    7. '@' (adapté à ' @') → logprob: -6.014995098114014
    8. ' 
' → logprob: -6.264995098114014
    9. '  ' → logprob: -7.389995098114014
    10. '
' → logprob: -7.764995098114014

Token 29: 'abstract' (ID: 31332)
  Prédit: 'abstract'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'abstract' → logprob: -3.650518920039758e-06
    2. 'ab' → logprob: -13.375003814697266
    3. 'abs' → logprob: -13.625003814697266
    4. 'abc' → logprob: -14.375003814697266
    5. 'staticmethod' → logprob: -16.125003814697266
    6. ' abstract' → logprob: -16.125003814697266
    7. 'property' → logprob: -16.625003814697266
    8. '.abstract' → logprob: -17.125003814697266
    9. 'classmethod' → logprob: -17.625003814697266
    10. 'a' → logprob: -18.250003814697266

Token 30: 'method' (ID: 8697)
  Prédit: 'method'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'method' → logprob: -0.0011751054553315043
    2. '_method' → logprob: -6.7511749267578125
    3. 'meth' → logprob: -13.001174926757812
    4. 'classmethod' → logprob: -13.626174926757812
    5. '_' → logprob: -15.126174926757812
    6. 'm' → logprob: -15.251174926757812
    7. 'staticmethod' → logprob: -15.376174926757812
    8. 'ethod' → logprob: -16.251174926757812
    9. '	method' → logprob: -16.376174926757812
    10. 'abstract' → logprob: -16.501174926757812

Token 31: '
' (ID: 198)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.25022023916244507
    2. '(' → logprob: -2.37522029876709
    3. ' def' → logprob: -3.00022029876709
    4. '\' → logprob: -3.50022029876709
    5. 'method' → logprob: -3.75022029876709
    6. '
' → logprob: -5.12522029876709
    7. ' ' → logprob: -5.37522029876709
    8. '`' → logprob: -5.87522029876709
    9. '<|end|>' → logprob: -6.50022029876709
    10. '   ' → logprob: -6.75022029876709

Token 32: '   ' (ID: 271)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.4822375774383545
    2. 'def' → logprob: -1.2322375774383545
    3. 'method' → logprob: -3.4822375774383545
    4. ' def' → logprob: -3.6072375774383545
    5. '\' → logprob: -4.732237815856934
    6. '
' → logprob: -5.232237815856934
    7. ' ' → logprob: -5.857237815856934
    8. '    
' → logprob: -6.232237815856934
    9. '<|end|>' → logprob: -6.607237815856934
    10. '(
' → logprob: -6.857237815856934

Token 33: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.06583575904369354
    2. 'method' → logprob: -3.06583571434021
    3. ' def' → logprob: -4.190835952758789
    4. '
' → logprob: -7.440835952758789
    5. ' ' → logprob: -8.065835952758789
    6. 'property' → logprob: -8.065835952758789
    7. '`' → logprob: -8.315835952758789
    8. 'classmethod' → logprob: -8.440835952758789
    9. '```' → logprob: -9.690835952758789
    10. 'staticmethod' → logprob: -9.940835952758789

Token 34: ' to' (ID: 316)
  Prédit: ' calculate'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' calculate' → logprob: -0.7415626645088196
    2. ' convert' → logprob: -1.7415626049041748
    3. ' execute' → logprob: -2.241562604904175
    4. ' get' → logprob: -2.241562604904175
    5. ' evaluate' → logprob: -3.616562604904175
    6. ' apply' → logprob: -3.991562604904175
    7. ' process' → logprob: -4.491562843322754
    8. ' area' → logprob: -4.866562843322754
    9. ' perform' → logprob: -5.116562843322754
    10. ' attack' → logprob: -5.491562843322754

Token 35: '_base' (ID: 17096)
  Prédit: '_dict'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_dict' → logprob: -0.8979806303977966
    2. '_string' → logprob: -1.5229806900024414
    3. '_' → logprob: -1.6479806900024414
    4. '_bytes' → logprob: -2.3979806900024414
    5. '_base' → logprob: -3.7729806900024414
    6. '_unit' → logprob: -4.272980690002441
    7. '_json' → logprob: -5.147980690002441
    8. '_m' → logprob: -5.397980690002441
    9. '_meter' → logprob: -5.522980690002441
    10. '_tuple' → logprob: -5.647980690002441

Token 36: '(self' (ID: 2402)
  Prédit: '_unit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_unit' → logprob: -0.13469180464744568
    2. '_' → logprob: -2.1346917152404785
    3. '_units' → logprob: -5.8846917152404785
    4. '(' → logprob: -6.5096917152404785
    5. '_token' → logprob: -6.7596917152404785
    6. 'unit' → logprob: -7.5096917152404785
    7. '_currency' → logprob: -7.5096917152404785
    8. '_value' → logprob: -8.884692192077637
    9. '_space' → logprob: -9.884692192077637
    10. '46' → logprob: -9.884692192077637

Token 37: ')' (ID: 8)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.13514938950538635
    2. ')' → logprob: -2.5101494789123535
    3. ',' → logprob: -3.1351494789123535
    4. '_unit' → logprob: -7.5101494789123535
    5. 'unit' → logprob: -7.6351494789123535
    6. 'self' → logprob: -9.010149002075195
    7. ' ,' → logprob: -9.260149002075195
    8. '   ' → logprob: -9.385149002075195
    9. '):
' → logprob: -9.510149002075195
    10. 'system' → logprob: -10.385149002075195

Token 38: ' ->' (ID: 2747)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.06191815435886383
    2. '(' → logprob: -2.936918258666992
    3. '():' → logprob: -5.311918258666992
    4. ':' → logprob: -6.686918258666992
    5. '   ' → logprob: -8.561918258666992
    6. 'self' → logprob: -8.686918258666992
    7. ' (' → logprob: -9.061918258666992
    8. '```' → logprob: -9.311918258666992
    9. '(s' → logprob: -9.811918258666992
    10. 'def' → logprob: -10.311918258666992

Token 39: ' int' (ID: 677)
  Prédit: ' float'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' float' → logprob: -0.12711530923843384
    2. 'float' → logprob: -2.377115249633789
    3. ' Tuple' → logprob: -4.627115249633789
    4. ' int' → logprob: -4.752115249633789
    5. ' None' → logprob: -6.002115249633789
    6. ' str' → logprob: -6.252115249633789
    7. 'int' → logprob: -6.627115249633789
    8. ' '' → logprob: -7.377115249633789
    9. 'Tuple' → logprob: -7.752115249633789
    10. ' ' → logprob: -7.752115249633789

Token 40: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0010731808142736554
    2. '():' → logprob: -7.251073360443115
    3. '(' → logprob: -8.501072883605957
    4. '   ' → logprob: -10.126072883605957
    5. ' :' → logprob: -10.251072883605957
    6. '<|end|>' → logprob: -10.876072883605957
    7. ':return' → logprob: -11.001072883605957
    8. '):' → logprob: -11.251072883605957
    9. ':def' → logprob: -11.876072883605957
    10. ':
' → logprob: -12.001072883605957

Token 41: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 42: ' pass' (ID: 1853)
  Prédit: 'pass'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pass' (adapté à ' pass') → logprob: -0.08245569467544556
    2. ' pass' → logprob: -2.832455635070801
    3. '...' → logprob: -4.457455635070801
    4. '       ' → logprob: -4.957455635070801
    5. '   ' → logprob: -7.207455635070801
    6. '<|end|>' → logprob: -8.3324556350708
    7. '	pass' → logprob: -8.7074556350708
    8. '    ' → logprob: -8.9574556350708
    9. '\n' → logprob: -9.0824556350708
    10. '  ' → logprob: -9.7074556350708

Token 43: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.5116130709648132
    2. '

' → logprob: -1.011613130569458
    3. '


' → logprob: -3.761613130569458
    4. '    
' → logprob: -5.386612892150879
    5. '   ' → logprob: -6.136612892150879
    6. ' 
' → logprob: -6.636612892150879
    7. '<|end|>' → logprob: -6.636612892150879
    8. '\n' → logprob: -7.261612892150879
    9. '



' → logprob: -7.511612892150879
    10. ' 

' → logprob: -7.761612892150879

Token 44: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.22145988047122955
    2. '

' → logprob: -1.8464598655700684
    3. 'class' → logprob: -4.221459865570068
    4. '<|end|>' → logprob: -5.096459865570068
    5. '


' → logprob: -5.221459865570068
    6. '\n' → logprob: -5.471459865570068
    7. '    
' → logprob: -5.471459865570068
    8. '   ' → logprob: -5.721459865570068
    9. '<|end|>' → logprob: -7.596459865570068
    10. '```' → logprob: -7.721459865570068

Token 45: ' @' (ID: 759)
  Prédit: 'class'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'class' → logprob: -0.16588975489139557
    2. '
' → logprob: -1.9158897399902344
    3. '

' → logprob: -5.790889739990234
    4. '    
' → logprob: -7.290889739990234
    5. ' class' → logprob: -7.415889739990234
    6. '   ' → logprob: -7.540889739990234
    7. '<|end|>' → logprob: -8.165889739990234
    8. '```' → logprob: -8.790889739990234
    9. '<|end|>' → logprob: -9.165889739990234
    10. ' ' → logprob: -10.165889739990234

Token 46: 'classmethod' (ID: 64680)
  Prédit: 'abstract'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'abstract' → logprob: -0.10235954821109772
    2. 'property' → logprob: -2.4773595333099365
    3. 'classmethod' → logprob: -4.852359771728516
    4. 'staticmethod' → logprob: -5.227359771728516
    5. 'dat' → logprob: -9.602359771728516
    6. 'abc' → logprob: -9.727359771728516
    7. 'abs' → logprob: -11.852359771728516
    8. 'unit' → logprob: -12.102359771728516
    9. 'class' → logprob: -12.227359771728516
    10. 'ab' → logprob: -13.227359771728516

Token 47: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 48: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5967438220977783
    2. 'def' → logprob: -1.3467438220977783
    3. '<|end|>' → logprob: -2.4717438220977783
    4. '
' → logprob: -2.8467438220977783
    5. ' def' → logprob: -3.4717438220977783
    6. '<|end|>' → logprob: -5.221743583679199
    7. '    
' → logprob: -6.221743583679199
    8. '  ' → logprob: -6.471743583679199
    9. '    ' → logprob: -6.846743583679199
    10. ' ' → logprob: -6.846743583679199

Token 49: ' @' (ID: 759)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.1574760228395462
    2. 'abstract' → logprob: -2.2824759483337402
    3. '@' (adapté à ' @') → logprob: -3.5324759483337402
    4. ' def' → logprob: -4.40747594833374
    5. '
' → logprob: -6.53247594833374
    6. '   ' → logprob: -8.157476425170898
    7. ' abstract' → logprob: -8.532476425170898
    8. ' @' → logprob: -8.532476425170898
    9. '@property' → logprob: -10.407476425170898
    10. '```' → logprob: -10.782476425170898

Token 50: 'abstract' (ID: 31332)
  Prédit: 'abstract'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'abstract' → logprob: -0.00010437761375214905
    2. 'property' → logprob: -10.000103950500488
    3. 'staticmethod' → logprob: -10.250103950500488
    4. 'classmethod' → logprob: -11.250103950500488
    5. 'abc' → logprob: -12.250103950500488
    6. 'ab' → logprob: -12.625103950500488
    7. ' abstract' → logprob: -13.250103950500488
    8. 'abs' → logprob: -14.500103950500488
    9. '.abstract' → logprob: -16.125104904174805
    10. 'over' → logprob: -18.000104904174805

Token 51: 'method' (ID: 8697)
  Prédit: 'method'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'method' → logprob: -1.0206720617134124e-05
    2. 'classmethod' → logprob: -12.25001049041748
    3. '_method' → logprob: -12.62501049041748
    4. 'def' → logprob: -13.87501049041748
    5. ' method' → logprob: -14.25001049041748
    6. 'staticmethod' → logprob: -15.25001049041748
    7. ' ' → logprob: -16.750009536743164
    8. 'meth' → logprob: -16.750009536743164
    9. 'ethod' → logprob: -17.000009536743164
    10. 'token' → logprob: -17.250009536743164

Token 52: '
' (ID: 198)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.13166651129722595
    2. '
' → logprob: -2.131666421890259
    3. '\' → logprob: -6.256666660308838
    4. ' def' → logprob: -6.756666660308838
    5. '<|end|>' → logprob: -7.506666660308838
    6. '   ' → logprob: -7.881666660308838
    7. '```' → logprob: -8.38166618347168
    8. '
' → logprob: -8.50666618347168
    9. '    
' → logprob: -9.75666618347168
    10. '	def' → logprob: -10.13166618347168

Token 53: '   ' (ID: 271)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.07744546234607697
    2. 'method' → logprob: -2.8274455070495605
    3. '
' → logprob: -4.2024455070495605
    4. ' def' → logprob: -8.327445030212402
    5. '    
' → logprob: -10.202445030212402
    6. '
' → logprob: -10.452445030212402
    7. '   ' → logprob: -10.827445030212402
    8. 'property' → logprob: -10.827445030212402
    9. 'abstract' → logprob: -11.202445030212402
    10. '```' → logprob: -11.452445030212402

Token 54: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.0003631137660704553
    2. 'property' → logprob: -8.75036334991455
    3. ' def' → logprob: -9.25036334991455
    4. '
' → logprob: -9.62536334991455
    5. 'abstract' → logprob: -10.62536334991455
    6. 'classmethod' → logprob: -11.12536334991455
    7. 'staticmethod' → logprob: -14.00036334991455
    8. 'from' → logprob: -14.37536334991455
    9. 'abc' → logprob: -15.37536334991455
    10. '  
' → logprob: -15.37536334991455

Token 55: ' from' (ID: 591)
  Prédit: ' convert'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' convert' → logprob: -1.1644526720046997
    2. ' def' → logprob: -1.9144526720046997
    3. 'convert' → logprob: -1.9144526720046997
    4. ' from' → logprob: -2.03945255279541
    5. 'name' → logprob: -2.41445255279541
    6. 'from' → logprob: -2.66445255279541
    7. ' name' → logprob: -3.41445255279541
    8. ' unit' → logprob: -3.53945255279541
    9. ' conversion' → logprob: -4.16445255279541
    10. 'def' → logprob: -4.41445255279541

Token 56: '_base' (ID: 17096)
  Prédit: '_base'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_base' → logprob: -2.1888679839321412e-05
    2. 'base' → logprob: -11.250021934509277
    3. '_string' → logprob: -12.875021934509277
    4. '_bytes' → logprob: -13.500021934509277
    5. '_' → logprob: -13.625021934509277
    6. '_unit' → logprob: -13.625021934509277
    7. '_value' → logprob: -14.625021934509277
    8. '_code' → logprob: -15.250021934509277
    9. 'Base' → logprob: -15.375021934509277
    10. '(cls' → logprob: -15.500021934509277

Token 57: '(cls' (ID: 46446)
  Prédit: '(cls'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(cls' → logprob: -0.0003100791363976896
    2. 'cls' → logprob: -8.750309944152832
    3. '(' → logprob: -8.875309944152832
    4. '   ' → logprob: -12.125309944152832
    5. ' (' → logprob: -14.000309944152832
    6. '(
' → logprob: -14.000309944152832
    7. 'classmethod' → logprob: -14.125309944152832
    8. ' cls' → logprob: -14.250309944152832
    9. '```' → logprob: -14.250309944152832
    10. '_cls' → logprob: -14.500309944152832

Token 58: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00033760786755010486
    2. ' ,' → logprob: -8.000337600708008
    3. '<|end|>' → logprob: -13.875337600708008
    4. '‌,' → logprob: -15.125337600708008
    5. 'cls' → logprob: -15.625337600708008
    6. ',
' → logprob: -15.625337600708008
    7. ')' → logprob: -15.750337600708008
    8. ',value' → logprob: -16.625337600708008
    9. ',class' → logprob: -16.625337600708008
    10. '   ' → logprob: -16.875337600708008

Token 59: ' value' (ID: 1432)
  Prédit: ' value'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' value' → logprob: -0.37305566668510437
    2. 'value' → logprob: -1.2480556964874268
    3. ' base' → logprob: -3.8730556964874268
    4. 'base' → logprob: -6.623055458068848
    5. ' cls' → logprob: -7.123055458068848
    6. 'cls' → logprob: -7.998055458068848
    7. ' amount' → logprob: -8.248055458068848
    8. 'amount' → logprob: -8.998055458068848
    9. '```' → logprob: -9.248055458068848
    10. ' val' → logprob: -9.248055458068848

Token 60: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.01859797164797783
    2. '):' → logprob: -4.1435980796813965
    3. ':int' → logprob: -6.2685980796813965
    4. ')' → logprob: -7.3935980796813965
    5. ' :' → logprob: -10.643597602844238
    6. ' ):' → logprob: -11.518597602844238
    7. ',' → logprob: -11.893597602844238
    8. '=' → logprob: -13.018597602844238
    9. '   ' → logprob: -13.518597602844238
    10. '):
' → logprob: -13.768597602844238

Token 61: ' int' (ID: 677)
  Prédit: ' int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.23164768517017365
    2. 'int' → logprob: -1.6066477298736572
    3. '<|end|>' → logprob: -5.731647491455078
    4. ')' → logprob: -6.231647491455078
    5. '[int' → logprob: -7.981647491455078
    6. ' )' → logprob: -8.731647491455078
    7. ':int' → logprob: -8.856647491455078
    8. ' ' → logprob: -9.231647491455078
    9. ']int' → logprob: -9.356647491455078
    10. '<|end|>' → logprob: -9.856647491455078

Token 62: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.016059592366218567
    2. '):' → logprob: -4.141059398651123
    3. '   ' → logprob: -11.391059875488281
    4. ')->' → logprob: -12.141059875488281
    5. ' )' → logprob: -12.266059875488281
    6. ':' → logprob: -13.516059875488281
    7. ',' → logprob: -14.016059875488281
    8. '):
' → logprob: -14.891059875488281
    9. ' ):' → logprob: -15.391059875488281
    10. ' ' → logprob: -15.516059875488281

Token 63: ' ->' (ID: 2747)
  Prédit: ' ->'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ->' → logprob: -0.44878703355789185
    2. '->' → logprob: -1.573786973953247
    3. ':' → logprob: -1.948786973953247
    4. ')' → logprob: -5.073787212371826
    5. '):' → logprob: -5.948787212371826
    6. ')->' → logprob: -6.323787212371826
    7. '   ' → logprob: -7.073787212371826
    8. '       ' → logprob: -9.198786735534668
    9. ' :' → logprob: -9.323786735534668
    10. '<|end|>' → logprob: -10.073786735534668

Token 64: ' '' (ID: 461)
  Prédit: ' ''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' '' → logprob: -0.5731613039970398
    2. ''' → logprob: -1.1981613636016846
    3. '"' → logprob: -3.4481613636016846
    4. ' "' → logprob: -3.6981613636016846
    5. '<|end|>' → logprob: -4.0731611251831055
    6. ''s' → logprob: -4.4481611251831055
    7. 'cls' → logprob: -4.5731611251831055
    8. 'None' → logprob: -4.9481611251831055
    9. ' ' → logprob: -4.9481611251831055
    10. ' cls' → logprob: -5.8231611251831055

Token 65: 'Unit' (ID: 6728)
  Prédit: 'Unit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Unit' → logprob: -1.9027791495318525e-05
    2. '<Unit' → logprob: -11.250019073486328
    3. 'unit' → logprob: -13.125019073486328
    4. ' Unit' → logprob: -13.750019073486328
    5. 'Uni' → logprob: -14.125019073486328
    6. '.Unit' → logprob: -15.000019073486328
    7. 'cls' → logprob: -15.000019073486328
    8. '_unit' → logprob: -15.250019073486328
    9. '_UNIT' → logprob: -15.500019073486328
    10. 'Uint' → logprob: -15.750019073486328

Token 66: '':
' (ID: 7669)
  Prédit: '':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '':' → logprob: -0.04615822806954384
    2. ''' → logprob: -3.1711583137512207
    3. ''):' → logprob: -6.046158313751221
    4. '):' → logprob: -7.671158313751221
    5. ')':' → logprob: -9.296157836914062
    6. ''>' → logprob: -9.671157836914062
    7. '')' → logprob: -10.046157836914062
    8. '':'' → logprob: -10.546157836914062
    9. '<|end|>' → logprob: -10.796157836914062
    10. '':
' → logprob: -10.796157836914062

Token 67: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.18077264726161957
    2. '<|end|>' → logprob: -2.055772542953491
    3. '   ' → logprob: -3.930772542953491
    4. ' pass' → logprob: -4.30577278137207
    5. 'pass' → logprob: -6.43077278137207
    6. ':' → logprob: -7.30577278137207
    7. '<|end|>' → logprob: -8.18077278137207
    8. '\n' → logprob: -8.18077278137207
    9. '	pass' → logprob: -8.30577278137207
    10. '
' → logprob: -8.43077278137207

Token 68: ' pass' (ID: 1853)
  Prédit: 'pass'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pass' (adapté à ' pass') → logprob: -0.45612865686416626
    2. '       ' → logprob: -1.2061285972595215
    3. ' pass' → logprob: -2.7061285972595215
    4. '   ' → logprob: -9.33112907409668
    5. '	pass' → logprob: -10.58112907409668
    6. '...' → logprob: -13.45612907409668
    7. '```' → logprob: -13.70612907409668
    8. '      ' → logprob: -14.83112907409668
    9. '     ' → logprob: -14.83112907409668
    10. ' ' → logprob: -15.08112907409668

Token 69: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.12421724200248718
    2. '

' → logprob: -2.4992172718048096
    3. 'class' → logprob: -3.4992172718048096
    4. '<|end|>' → logprob: -5.4992170333862305
    5. '


' → logprob: -9.12421703338623
    6. '<|end|>' → logprob: -9.49921703338623
    7. ' class' → logprob: -9.99921703338623
    8. '```' → logprob: -10.74921703338623
    9. '
' → logprob: -10.87421703338623
    10. '<class' → logprob: -11.12421703338623

Token 70: 'class' (ID: 1444)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.2355584055185318
    2. 'class' → logprob: -1.6105583906173706
    3. '

' → logprob: -4.61055850982666
    4. '
' → logprob: -9.61055850982666
    5. ' class' → logprob: -10.73555850982666
    6. '```' → logprob: -10.98555850982666
    7. '


' → logprob: -11.36055850982666
    8. '  
' → logprob: -12.11055850982666
    9. '    
' → logprob: -12.48555850982666
    10. '<class' → logprob: -12.48555850982666

Token 71: ' Weight' (ID: 19983)
  Prédit: ' Length'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Length' → logprob: -0.004956935532391071
    2. ' Meter' → logprob: -5.8799567222595215
    3. ' Distance' → logprob: -7.2549567222595215
    4. 'Length' → logprob: -7.3799567222595215
    5. ' Quantity' → logprob: -8.00495719909668
    6. ' Unit' → logprob: -9.37995719909668
    7. ' Kil' → logprob: -9.50495719909668
    8. ' Measurement' → logprob: -9.62995719909668
    9. ' Temperature' → logprob: -9.75495719909668
    10. ' Weight' → logprob: -9.87995719909668

Token 72: 'Unit' (ID: 6728)
  Prédit: 'Unit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Unit' → logprob: -1.1001571416854858
    2. '(' → logprob: -1.4751571416854858
    3. ':' → logprob: -1.4751571416854858
    4. '(Unit' → logprob: -1.6001571416854858
    5. '):' → logprob: -5.100157260894775
    6. '<Unit' → logprob: -7.725157260894775
    7. ' Unit' → logprob: -7.975157260894775
    8. '():' → logprob: -8.225156784057617
    9. ' :' → logprob: -8.475156784057617
    10. 'Units' → logprob: -8.850156784057617

Token 73: '(Unit' (ID: 124951)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.7455440163612366
    2. '(Unit' → logprob: -0.7455440163612366
    3. ':' → logprob: -2.995543956756592
    4. '):' → logprob: -7.870543956756592
    5. '(Abstract' → logprob: -8.24554443359375
    6. ' :' → logprob: -8.49554443359375
    7. '():' → logprob: -9.99554443359375
    8. '(Enum' → logprob: -10.24554443359375
    9. '(U' → logprob: -10.87054443359375
    10. '<Unit' → logprob: -11.12054443359375

Token 74: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0006752623594366014
    2. ')' → logprob: -7.625675201416016
    3. '):
' → logprob: -9.125675201416016
    4. ' ):' → logprob: -10.000675201416016
    5. ':' → logprob: -10.500675201416016
    6. ',' → logprob: -12.375675201416016
    7. '):
' → logprob: -15.250675201416016
    8. '   ' → logprob: -15.375675201416016
    9. '):

' → logprob: -15.375675201416016
    10. ' )' → logprob: -16.125675201416016

Token 75: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.003388502635061741
    2. ' KG' → logprob: -6.878388404846191
    3. ' def' → logprob: -7.253388404846191
    4. ' kg' → logprob: -7.628388404846191
    5. 'def' → logprob: -8.253388404846191
    6. 'kg' → logprob: -8.378388404846191
    7. 'KG' → logprob: -8.628388404846191
    8. 'GRAM' → logprob: -8.878388404846191
    9. 'class' → logprob: -9.628388404846191
    10. 'K' → logprob: -10.503388404846191

Token 76: ' """
' (ID: 7037)
  Prédit: ' def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' def' → logprob: -1.3917083740234375
    2. 'def' → logprob: -1.3917083740234375
    3. 'GRAM' → logprob: -2.2667083740234375
    4. 'conversion' → logprob: -2.7667083740234375
    5. ' conversion' → logprob: -3.2667083740234375
    6. '   ' → logprob: -3.2667083740234375
    7. ' _' → logprob: -3.6417083740234375
    8. '_base' → logprob: -3.7667083740234375
    9. 'base' → logprob: -4.1417083740234375
    10. '_' → logprob: -4.1417083740234375

Token 77: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1845579445362091
    2. ' def' → logprob: -2.0595579147338867
    3. 'def' → logprob: -3.4345579147338867
    4. '    ' → logprob: -5.184557914733887
    5. ' ' → logprob: -7.559557914733887
    6. '  ' → logprob: -7.809557914733887
    7. '_' → logprob: -8.309557914733887
    8. '       ' → logprob: -8.309557914733887
    9. ' """' → logprob: -8.434557914733887
    10. ' K' → logprob: -8.809557914733887

Token 78: ' Represents' (ID: 84592)
  Prédit: 'Rep'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Rep' → logprob: -0.6612241268157959
    2. 'Units' → logprob: -2.161224126815796
    3. ' """
' → logprob: -2.536224126815796
    4. '"""' → logprob: -3.036224126815796
    5. ' Represents' → logprob: -3.161224126815796
    6. '"""
' → logprob: -3.286224126815796
    7. 'Weight' → logprob: -3.661224126815796
    8. ' Units' → logprob: -3.911224126815796
    9. 'Base' → logprob: -4.161224365234375
    10. ' """' → logprob: -4.286224365234375

Token 79: ' weight' (ID: 6049)
  Prédit: ' a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.5687999725341797
    2. ' weight' → logprob: -0.9437999725341797
    3. 'weight' → logprob: -4.44379997253418
    4. ' weights' → logprob: -4.69379997253418
    5. ' mass' → logprob: -4.81879997253418
    6. ' units' → logprob: -5.06879997253418
    7. 'a' → logprob: -5.06879997253418
    8. ' an' → logprob: -6.69379997253418
    9. ' different' → logprob: -7.81879997253418
    10. ' the' → logprob: -7.94379997253418

Token 80: ' in' (ID: 306)
  Prédit: ' units'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' units' → logprob: -0.08698556572198868
    2. ' in' → logprob: -2.5869855880737305
    3. '   ' → logprob: -5.5869855880737305
    4. 'units' → logprob: -5.7119855880737305
    5. ' unit' → logprob: -8.58698558807373
    6. ' (' → logprob: -8.58698558807373
    7. 'in' → logprob: -8.96198558807373
    8. ':' → logprob: -9.33698558807373
    9. ' measurement' → logprob: -9.46198558807373
    10. ' conversion' → logprob: -9.96198558807373

Token 81: ' '' (ID: 461)
  Prédit: ' grams'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' grams' → logprob: -0.42196834087371826
    2. 'grams' → logprob: -1.1719683408737183
    3. 'kil' → logprob: -3.796968460083008
    4. ' kilograms' → logprob: -4.796968460083008
    5. 'gram' → logprob: -5.921968460083008
    6. ' gram' → logprob: -7.921968460083008
    7. 'g' → logprob: -9.171968460083008
    8. 'units' → logprob: -9.796968460083008
    9. '   ' → logprob: -9.921968460083008
    10. '```' → logprob: -9.921968460083008

Token 82: 'ボ' (ID: 44965)
  Prédit: 'grams'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'grams' → logprob: -0.052508383989334106
    2. 'kil' → logprob: -3.4275083541870117
    3. ' grams' → logprob: -4.802508354187012
    4. 'gram' → logprob: -5.552508354187012
    5. 'kg' → logprob: -6.052508354187012
    6. 'g' → logprob: -6.052508354187012
    7. ' kilograms' → logprob: -7.802508354187012
    8. 'mill' → logprob: -7.927508354187012
    9. 'p' → logprob: -8.052508354187012
    10. 'ounces' → logprob: -8.802508354187012

Token 83: 'ッ' (ID: 6660)
  Prédit: 'ルト'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ルト' → logprob: -0.7082153558731079
    2. 'ン' → logprob: -1.333215355873108
    3. 'ー' → logprob: -2.7082152366638184
    4. 'ト' → logprob: -3.3332152366638184
    5. 'ル' → logprob: -3.5832152366638184
    6. '```' → logprob: -3.8332152366638184
    7. 'ンド' → logprob: -4.333215236663818
    8. 'ク' → logprob: -4.645715236663818
    9. 'ーン' → logprob: -4.645715236663818
    10. 'ッ' → logprob: -4.833215236663818

Token 84: 'コ' (ID: 12504)
  Prédit: 'ク'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ク' → logprob: -0.15738335251808167
    2. 'ト' → logprob: -2.532383441925049
    3. 'ル' → logprob: -4.157383441925049
    4. '```' → logprob: -4.407383441925049
    5. 'ルト' → logprob: -4.657383441925049
    6. 'クト' → logprob: -5.719883441925049
    7. 'グ' → logprob: -5.969883441925049
    8. 'к' → logprob: -6.532383441925049
    9. 'キ' → logprob: -6.719883441925049
    10. 'k' → logprob: -7.032383441925049

Token 85: ''(' (ID: 117019)
  Prédit: 'グ'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'グ' → logprob: -0.46793168783187866
    2. 'ン' → logprob: -1.2179317474365234
    3. 'ム' → logprob: -4.217931747436523
    4. 'リ' → logprob: -4.467931747436523
    5. 'ル' → logprob: -4.717931747436523
    6. 'g' → logprob: -4.842931747436523
    7. ''' → logprob: -5.217931747436523
    8. 's' → logprob: -5.217931747436523
    9. 'grams' → logprob: -5.717931747436523
    10. 'ロ' → logprob: -5.967931747436523

Token 86: 'B' (ID: 33)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.270692378282547
    2. 'g' → logprob: -2.0206923484802246
    3. 'grams' → logprob: -3.2706923484802246
    4. 'グ' → logprob: -3.5206923484802246
    5. 'gram' → logprob: -4.145692348480225
    6. ' grams' → logprob: -5.020692348480225
    7. 'units' → logprob: -6.145692348480225
    8. '')' → logprob: -6.395692348480225
    9. '   ' → logprob: -7.020692348480225
    10. ' g' → logprob: -7.145692348480225

Token 87: 'ok' (ID: 525)
  Prédit: 'コ'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'コ' → logprob: -0.010377568192780018
    2. ')' → logprob: -5.635377407073975
    3. '코' → logprob: -6.260377407073975
    4. 'こ' → logprob: -7.010377407073975
    5. 'ン' → logprob: -7.135377407073975
    6. 'ッ' → logprob: -7.260377407073975
    7. 'ko' → logprob: -7.635377407073975
    8. '')' → logprob: -7.885377407073975
    9. 'к' → logprob: -8.385377883911133
    10. 'ク' → logprob: -8.760377883911133

Token 88: 'ko' (ID: 3593)
  Prédit: 'コ'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'コ' → logprob: -0.2318526655435562
    2. 'ン' → logprob: -2.4818527698516846
    3. ')' → logprob: -2.7318527698516846
    4. 'リ' → logprob: -3.7318527698516846
    5. 'こ' → logprob: -4.4818525314331055
    6. 'ロ' → logprob: -4.8568525314331055
    7. 'ー' → logprob: -5.6068525314331055
    8. '코' → logprob: -6.3568525314331055
    9. '')' → logprob: -6.4818525314331055
    10. 'ko' → logprob: -6.9818525314331055

Token 89: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.10293431580066681
    2. ').' → logprob: -2.3529343605041504
    3. '),' → logprob: -6.35293436050415
    4. '単' → logprob: -8.477933883666992
    5. ',' → logprob: -8.602933883666992
    6. ')。' → logprob: -9.227933883666992
    7. '   ' → logprob: -9.477933883666992
    8. 'units' → logprob: -9.977933883666992
    9. '):' → logprob: -9.977933883666992
    10. ')
' → logprob: -10.352933883666992

Token 90: ' units' (ID: 13306)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.4601074755191803
    2. '   ' → logprob: -1.335107445716858
    3. ',' → logprob: -3.3351075649261475
    4. ').' → logprob: -3.4601075649261475
    5. '.' → logprob: -4.585107326507568
    6. ' ' → logprob: -5.335107326507568
    7. '"""' → logprob: -5.960107326507568
    8. ':' → logprob: -5.960107326507568
    9. ' units' → logprob: -6.085107326507568
    10. '):' → logprob: -6.460107326507568

Token 91: '.
' (ID: 558)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2727797329425812
    2. '.' → logprob: -1.8977797031402588
    3. ':' → logprob: -3.147779703140259
    4. ')' → logprob: -3.647779703140259
    5. '"""' → logprob: -4.897779941558838
    6. '):' → logprob: -5.272779941558838
    7. ''' → logprob: -5.772779941558838
    8. ',' → logprob: -6.897779941558838
    9. '```' → logprob: -7.022779941558838
    10. ''''' → logprob: -7.772779941558838

Token 92: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.038226816803216934
    2. '"""' → logprob: -3.538226842880249
    3. ')' → logprob: -5.03822660446167
    4. '```' → logprob: -7.16322660446167
    5. '    ' → logprob: -8.288227081298828
    6. '
' → logprob: -8.413227081298828
    7. '"""
' → logprob: -8.413227081298828
    8. '    
' → logprob: -9.413227081298828
    9. ' """' → logprob: -9.663227081298828
    10. '""' → logprob: -9.913227081298828

Token 93: ' ' (ID: 220)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.22950905561447144
    2. '"""' → logprob: -1.6045091152191162
    3. '"""
' → logprob: -6.729508876800537
    4. ' """' → logprob: -7.104508876800537
    5. ')' → logprob: -7.104508876800537
    6. '    ' → logprob: -8.229509353637695
    7. '"""

' → logprob: -8.479509353637695
    8. '```' → logprob: -8.479509353637695
    9. '"' → logprob: -8.979509353637695
    10. ' """
' → logprob: -8.979509353637695

Token 94: '1' (ID: 16)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06674890965223312
    2. '"""' → logprob: -2.816748857498169
    3. ')' → logprob: -5.941749095916748
    4. '    ' → logprob: -6.816749095916748
    5. '```' → logprob: -8.06674861907959
    6. ' """' → logprob: -8.56674861907959
    7. '    
' → logprob: -8.69174861907959
    8. 'def' → logprob: -9.56674861907959
    9. '"' → logprob: -9.69174861907959
    10. '`' → logprob: -10.31674861907959

Token 95: ' Bok' (ID: 111854)
  Prédit: 'ボ'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ボ' → logprob: -0.2616578936576843
    2. ' ボ' → logprob: -1.511657953262329
    3. ' bok' → logprob: -6.13665771484375
    4. 'B' → logprob: -6.38665771484375
    5. '0' → logprob: -7.01165771484375
    6. 'キ' → logprob: -7.88665771484375
    7. ' kg' → logprob: -7.94915771484375
    8. ' ' → logprob: -8.01165771484375
    9. '1' → logprob: -8.19915771484375
    10. '000' → logprob: -8.38665771484375

Token 96: 'ko' (ID: 3593)
  Prédit: 'ko'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ko' → logprob: -0.010352088138461113
    2. 'こ' → logprob: -4.88535213470459
    3. 'コ' → logprob: -6.88535213470459
    4. 'ко' → logprob: -7.01035213470459
    5. '코' → logprob: -8.38535213470459
    6. 'っ' → logprob: -8.63535213470459
    7. 'k' → logprob: -8.63535213470459
    8. '=' → logprob: -10.26035213470459
    9. '```' → logprob: -10.76035213470459
    10. 'к' → logprob: -11.01035213470459

Token 97: ' unit' (ID: 7670)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.4193304181098938
    2. '=' → logprob: -1.169330358505249
    3. ' is' → logprob: -3.669330358505249
    4. ' equals' → logprob: -5.669330596923828
    5. 'は' → logprob: -6.544330596923828
    6. '   ' → logprob: -8.044330596923828
    7. 'is' → logprob: -8.169330596923828
    8. '＝' → logprob: -8.169330596923828
    9. 'equals' → logprob: -8.919330596923828
    10. ' ' → logprob: -9.044330596923828

Token 98: ' weight' (ID: 6049)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.13620616495609283
    2. '=' → logprob: -2.5112061500549316
    3. ' is' → logprob: -3.5112061500549316
    4. ' equals' → logprob: -4.261206150054932
    5. 'は' → logprob: -6.636206150054932
    6. '＝' → logprob: -8.63620662689209
    7. 'is' → logprob: -8.76120662689209
    8. 'equals' → logprob: -9.13620662689209
    9. ' ' → logprob: -9.26120662689209
    10. ' は' → logprob: -9.26120662689209

Token 99: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.17210756242275238
    2. '=' → logprob: -2.297107458114624
    3. ' is' → logprob: -2.922107458114624
    4. ' equals' → logprob: -6.172107696533203
    5. '   ' → logprob: -6.922107696533203
    6. 'is' → logprob: -8.172107696533203
    7. ' corresponds' → logprob: -9.297107696533203
    8. 'は' → logprob: -9.797107696533203
    9. ' ' → logprob: -9.922107696533203
    10. ' has' → logprob: -10.672107696533203

Token 100: ' ' (ID: 220)
  Prédit: '100'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '100' → logprob: -0.12834322452545166
    2. '10' → logprob: -2.503343105316162
    3. ' ' → logprob: -4.628343105316162
    4. '102' → logprob: -5.378343105316162
    5. '500' → logprob: -5.753343105316162
    6. '50' → logprob: -6.503343105316162
    7. '12' → logprob: -6.628343105316162
    8. '16' → logprob: -6.753343105316162
    9. '5' → logprob: -6.878343105316162
    10. '200' → logprob: -6.878343105316162

Token 101: '2' (ID: 17)
  Prédit: '100'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '100' → logprob: -0.18570934236049652
    2. '10' → logprob: -2.185709238052368
    3. '500' → logprob: -4.310709476470947
    4. '102' → logprob: -5.185709476470947
    5. '50' → logprob: -5.310709476470947
    6. '5' → logprob: -5.435709476470947
    7. '3' → logprob: -6.310709476470947
    8. '200' → logprob: -6.310709476470947
    9. '250' → logprob: -6.310709476470947
    10. '150' → logprob: -6.685709476470947

Token 102: '^' (ID: 61)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -1.2649296522140503
    2. ' *' → logprob: -1.7649296522140503
    3. '50' → logprob: -1.8899296522140503
    4. '5' → logprob: -2.13992977142334
    5. ' **' → logprob: -2.38992977142334
    6. '00' → logprob: -2.63992977142334
    7. '**' → logprob: -3.13992977142334
    8. '.' → logprob: -3.76492977142334
    9. '*' → logprob: -4.26492977142334
    10. ' ' → logprob: -4.26492977142334

Token 103: 'x' (ID: 87)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '10' → logprob: -0.06301352381706238
    2. '20' → logprob: -4.063013553619385
    3. '16' → logprob: -4.813013553619385
    4. '8' → logprob: -5.563013553619385
    5. '3' → logprob: -5.688013553619385
    6. '13' → logprob: -5.688013553619385
    7. '5' → logprob: -5.813013553619385
    8. '12' → logprob: -5.813013553619385
    9. '0' → logprob: -5.813013553619385
    10. '40' → logprob: -6.063013553619385

Token 104: ' grams' (ID: 55637)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 105: ',' (ID: 11)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.846001148223877
    2. ')' → logprob: -1.971001148223877
    3. '
' → logprob: -1.971001148223877
    4. '<|end|>' → logprob: -1.971001148223877
    5. ' ' → logprob: -3.721001148223877
    6. '2' → logprob: -4.221001148223877
    7. '1' → logprob: -4.346001148223877
    8. '    ' → logprob: -4.346001148223877
    9. '\n' → logprob: -4.721001148223877
    10. '.' → logprob: -4.721001148223877

Token 106: ' x' (ID: 1215)
  Prédit: ' where'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' where' → logprob: -0.12083789706230164
    2. '   ' → logprob: -2.370837926864624
    3. 'where' → logprob: -5.120837688446045
    4. ' with' → logprob: -5.245837688446045
    5. ' x' → logprob: -5.620837688446045
    6. '    ' → logprob: -6.620837688446045
    7. ' ' → logprob: -6.870837688446045
    8. ' and' → logprob: -7.245837688446045
    9. 'x' → logprob: -7.745837688446045
    10. '"""' → logprob: -8.245838165283203

Token 107: ' >=' (ID: 5064)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.14560386538505554
    2. ' =' → logprob: -2.020603895187378
    3. '<|end|>' → logprob: -6.520603656768799
    4. ' is' → logprob: -7.145603656768799
    5. ' ' → logprob: -8.520604133605957
    6. '<|end|>' → logprob: -9.020604133605957
    7. '   ' → logprob: -9.520604133605957
    8. ':' → logprob: -9.645604133605957
    9. ')' → logprob: -10.020604133605957
    10. '=int' → logprob: -10.770604133605957

Token 108: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.055518973618745804
    2. ' ' → logprob: -2.930518865585327
    3. '1' → logprob: -7.555519104003906
    4. '-' → logprob: -9.805519104003906
    5. ' -' → logprob: -10.430519104003906
    6. '2' → logprob: -11.680519104003906
    7. '3' → logprob: -12.180519104003906
    8. '   ' → logprob: -12.868019104003906
    9. '4' → logprob: -12.930519104003906
    10. '6' → logprob: -13.180519104003906

Token 109: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0036161087919026613
    2. '1' → logprob: -5.7536163330078125
    3. ' ' → logprob: -8.753616333007812
    4. '2' → logprob: -9.503616333007812
    5. '3' → logprob: -9.628616333007812
    6. '-' → logprob: -10.378616333007812
    7. '10' → logprob: -10.503616333007812
    8. '4' → logprob: -10.753616333007812
    9. '6' → logprob: -11.191116333007812
    10. '5' → logprob: -11.378616333007812

Token 110: ' integer' (ID: 16336)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.052220579236745834
    2. '
' → logprob: -3.677220582962036
    3. ')' → logprob: -4.677220344543457
    4. '\n' → logprob: -5.052220344543457
    5. '.' → logprob: -6.177220344543457
    6. '    ' → logprob: -6.427220344543457
    7. '<|end|>' → logprob: -6.427220344543457
    8. ',' → logprob: -6.927220344543457
    9. '"""' → logprob: -6.927220344543457
    10. '    
' → logprob: -7.802220344543457

Token 111: '.
' (ID: 558)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06779579818248749
    2. ')' → logprob: -3.692795753479004
    3. '.' → logprob: -3.942795753479004
    4. '
' → logprob: -4.817795753479004
    5. ',' → logprob: -5.692795753479004
    6. '<|end|>' → logprob: -5.692795753479004
    7. '"""' → logprob: -6.442795753479004
    8. '<|end|>' → logprob: -6.567795753479004
    9. '

' → logprob: -7.317795753479004
    10. '```' → logprob: -7.692795753479004

Token 112: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0034777168184518814
    2. '    ' → logprob: -6.753477573394775
    3. ')' → logprob: -7.003477573394775
    4. ' """' → logprob: -7.628477573394775
    5. '"""' → logprob: -8.378478050231934
    6. '<|end|>' → logprob: -8.753478050231934
    7. '```' → logprob: -9.003478050231934
    8. '
' → logprob: -9.378478050231934
    9. ' ' → logprob: -9.503478050231934
    10. '    
' → logprob: -9.628478050231934

Token 113: ' For' (ID: 2214)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.08087852597236633
    2. '
' → logprob: -3.330878496170044
    3. '    ' → logprob: -3.830878496170044
    4. '    
' → logprob: -4.455878734588623
    5. ' def' → logprob: -6.705878734588623
    6. 'def' → logprob: -6.830878734588623
    7. ')' → logprob: -6.830878734588623
    8. ' 
' → logprob: -6.955878734588623
    9. '"""' → logprob: -7.330878734588623
    10. ' """' → logprob: -7.455878734588623

Token 114: ' the' (ID: 290)
  Prédit: ' example'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' example' → logprob: -0.18026965856552124
    2. ' the' → logprob: -3.055269718170166
    3. 'example' → logprob: -3.430269718170166
    4. ' x' → logprob: -4.055269718170166
    5. ' simplicity' → logprob: -4.180269718170166
    6. ' def' → logprob: -4.430269718170166
    7. ' this' → logprob: -4.805269718170166
    8. ' now' → logprob: -5.055269718170166
    9. ' conversion' → logprob: -5.680269718170166
    10. ' a' → logprob: -5.805269718170166

Token 115: ' problem' (ID: 4792)
  Prédit: 'example'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'example' → logprob: -0.7707390189170837
    2. 'def' → logprob: -1.3957390785217285
    3. 'class' → logprob: -2.5207390785217285
    4. ' sake' → logprob: -2.7707390785217285
    5. 'given' → logprob: -3.2707390785217285
    6. 'purpose' → logprob: -3.5207390785217285
    7. 's' → logprob: -4.2707390785217285
    8. 'current' → logprob: -4.3957390785217285
    9. 'unit' → logprob: -5.0207390785217285
    10. 'next' → logprob: -5.0207390785217285

Token 116: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.5742167234420776
    2. ')' → logprob: -1.5742167234420776
    3. ':' → logprob: -2.699216842651367
    4. '   ' → logprob: -3.074216842651367
    5. ' ,' → logprob: -3.199216842651367
    6. '<|end|>' → logprob: -3.699216842651367
    7. ' ' → logprob: -4.199216842651367
    8. '):' → logprob: -5.324216842651367
    9. '<|end|>' → logprob: -5.824216842651367
    10. ' class' → logprob: -6.074216842651367

Token 117: ' weight' (ID: 6049)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -1.401529312133789
    2. ' the' → logprob: -1.401529312133789
    3. '1' → logprob: -2.026529312133789
    4. ' we' → logprob: -2.651529312133789
    5. 'we' → logprob: -2.776529312133789
    6. ' x' → logprob: -2.776529312133789
    7. 'the' → logprob: -2.776529312133789
    8. '   ' → logprob: -2.901529312133789
    9. 'def' → logprob: -4.151529312133789
    10. ' def' → logprob: -4.151529312133789

Token 118: ' is' (ID: 382)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6334896087646484
    2. ' is' → logprob: -1.5084896087646484
    3. ' must' → logprob: -3.0084896087646484
    4. ' in' → logprob: -3.2584896087646484
    5. ' =' → logprob: -4.008489608764648
    6. '_in' → logprob: -4.258489608764648
    7. '=' → logprob: -4.258489608764648
    8. '_unit' → logprob: -4.258489608764648
    9. ' can' → logprob: -4.508489608764648
    10. ' units' → logprob: -4.883489608764648

Token 119: ' given' (ID: 4335)
  Prédit: ' always'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' always' → logprob: -0.62708979845047
    2. ' given' → logprob: -2.502089738845825
    3. 'always' → logprob: -2.627089738845825
    4. ' represented' → logprob: -2.752089738845825
    5. ' stored' → logprob: -3.002089738845825
    6. '   ' → logprob: -3.127089738845825
    7. ' measured' → logprob: -3.502089738845825
    8. ' expressed' → logprob: -3.627089738845825
    9. 'stored' → logprob: -3.627089738845825
    10. 'given' → logprob: -3.877089738845825

Token 120: ' as' (ID: 472)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.6031664609909058
    2. ' as' → logprob: -0.8531664609909058
    3. 'in' → logprob: -4.978166580200195
    4. '<|end|>' → logprob: -5.228166580200195
    5. ',' → logprob: -5.478166580200195
    6. '<|end|>' → logprob: -5.978166580200195
    7. 'as' → logprob: -6.228166580200195
    8. '   ' → logprob: -6.853166580200195
    9. ' ,' → logprob: -6.978166580200195
    10. ' =' → logprob: -7.103166580200195

Token 121: ' integer' (ID: 16336)
  Prédit: ' an'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' an' → logprob: -0.31014910340309143
    2. ' a' → logprob: -2.5601491928100586
    3. ' grams' → logprob: -2.5601491928100586
    4. 'an' → logprob: -2.9351491928100586
    5. 'a' → logprob: -4.060149192810059
    6. ' integers' → logprob: -4.435149192810059
    7. ' the' → logprob: -5.060149192810059
    8. ' ' → logprob: -5.435149192810059
    9. 'int' → logprob: -5.685149192810059
    10. 'grams' → logprob: -6.435149192810059

Token 122: ' count' (ID: 3605)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' in' → logprob: -1.1976395845413208
    2. ')' → logprob: -1.5726395845413208
    3. '<|end|>' → logprob: -1.6976395845413208
    4. '   ' → logprob: -2.9476394653320312
    5. ' grams' → logprob: -3.0726394653320312
    6. ',' → logprob: -3.0726394653320312
    7. '
' → logprob: -3.5726394653320312
    8. '<|end|>' → logprob: -3.6976394653320312
    9. ' values' → logprob: -4.072639465332031
    10. ':' → logprob: -4.072639465332031

Token 123: ' of' (ID: 328)
  Prédit: ' of'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' of' → logprob: -0.215478777885437
    2. '   ' → logprob: -2.2154788970947266
    3. ' in' → logprob: -3.4654788970947266
    4. ',' → logprob: -3.9654788970947266
    5. 's' → logprob: -4.715478897094727
    6. ' ,' → logprob: -5.465478897094727
    7. '<|end|>' → logprob: -5.590478897094727
    8. '<|end|>' → logprob: -5.840478897094727
    9. 'of' → logprob: -6.090478897094727
    10. '    ' → logprob: -6.340478897094727

Token 124: ' Bok' (ID: 111854)
  Prédit: ' grams'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' grams' → logprob: -0.21922138333320618
    2. 'grams' → logprob: -1.9692213535308838
    3. ' bytes' → logprob: -4.344221591949463
    4. 'ボ' → logprob: -5.094221591949463
    5. ' bok' → logprob: -5.219221591949463
    6. ' the' → logprob: -5.719221591949463
    7. ' tokens' → logprob: -5.719221591949463
    8. ' units' → logprob: -6.094221591949463
    9. ' Bok' → logprob: -6.219221591949463
    10. ' ボ' → logprob: -6.219221591949463

Token 125: 'ko' (ID: 3593)
  Prédit: 'ko'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ko' → logprob: -0.015283756889402866
    2. 'k' → logprob: -5.140283584594727
    3. 'こ' → logprob: -5.265283584594727
    4. 'コ' → logprob: -6.140283584594727
    5. 'ко' → logprob: -6.515283584594727
    6. 'к' → logprob: -9.515283584594727
    7. ' ko' → logprob: -10.140283584594727
    8. 'o' → logprob: -10.265283584594727
    9. 'kok' → logprob: -10.390283584594727
    10. ' ' → logprob: -10.390283584594727

Token 126: ' units' (ID: 13306)
  Prédit: ' units'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' units' → logprob: -0.13454698026180267
    2. 'units' → logprob: -2.759546995162964
    3. 's' → logprob: -3.009546995162964
    4. '<|end|>' → logprob: -5.259546756744385
    5. ')' → logprob: -5.509546756744385
    6. '_units' → logprob: -6.384546756744385
    7. '<|end|>' → logprob: -6.634546756744385
    8. ',' → logprob: -8.134547233581543
    9. ' unit' → logprob: -9.384547233581543
    10. '単' → logprob: -9.884547233581543

Token 127: '.
' (ID: 558)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5120130777359009
    2. '.' → logprob: -1.6370130777359009
    3. '<|end|>' → logprob: -2.1370129585266113
    4. ',' → logprob: -3.1370129585266113
    5. ':' → logprob: -3.8870129585266113
    6. '<|end|>' → logprob: -4.262012958526611
    7. ')' → logprob: -5.262012958526611
    8. '
' → logprob: -7.262012958526611
    9. ' and' → logprob: -7.512012958526611
    10. '):' → logprob: -7.512012958526611

Token 128: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0527118556201458
    2. '<|end|>' → logprob: -3.4277119636535645
    3. '```' → logprob: -5.0527119636535645
    4. ')' → logprob: -5.3027119636535645
    5. '<|end|>' → logprob: -5.6777119636535645
    6. '"""' → logprob: -6.3027119636535645
    7. '
' → logprob: -6.6777119636535645
    8. '    
' → logprob: -9.052711486816406
    9. 'class' → logprob: -9.052711486816406
    10. '#' → logprob: -9.427711486816406

Token 129: ' """
' (ID: 7037)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.36426714062690735
    2. 'def' → logprob: -1.239267110824585
    3. ')' → logprob: -4.739267349243164
    4. ' def' → logprob: -5.739267349243164
    5. '
' → logprob: -6.739267349243164
    6. '#' → logprob: -7.489267349243164
    7. '    ' → logprob: -7.614267349243164
    8. 'class' → logprob: -8.114267349243164
    9. '```' → logprob: -8.364267349243164
    10. '"""' → logprob: -8.614267349243164

Token 130: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.18595938384532928
    2. 'def' → logprob: -1.8109593391418457
    3. '    
' → logprob: -5.560959339141846
    4. '
' → logprob: -6.310959339141846
    5. '    ' → logprob: -8.185959815979004
    6. ' def' → logprob: -9.060959815979004
    7. 'class' → logprob: -9.310959815979004
    8. '#' → logprob: -11.685959815979004
    9. '  ' → logprob: -11.810959815979004
    10. '   
' → logprob: -11.935959815979004

Token 131: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.10086493194103241
    2. ' def' → logprob: -2.350864887237549
    3. '_base' → logprob: -8.225865364074707
    4. '_def' → logprob: -9.350865364074707
    5. '   ' → logprob: -9.725865364074707
    6. 'value' → logprob: -9.975865364074707
    7. '_value' → logprob: -9.975865364074707
    8. '_b' → logprob: -10.975865364074707
    9. 'base' → logprob: -10.975865364074707
    10. '_factor' → logprob: -11.350865364074707

Token 132: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.007507129572331905
    2. '__' → logprob: -5.13250732421875
    3. ' to' → logprob: -6.75750732421875
    4. 'to' → logprob: -8.13250732421875
    5. 'init' → logprob: -9.63250732421875
    6. '_init' → logprob: -10.25750732421875
    7. ' init' → logprob: -11.25750732421875
    8. ' def' → logprob: -12.25750732421875
    9. '_to' → logprob: -13.63250732421875
    10. 'def' → logprob: -13.88250732421875

Token 133: 'init' (ID: 3287)
  Prédit: 'init'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: 0.0
    2. 'int' → logprob: -17.625
    3. 'post' → logprob: -17.75
    4. 'new' → logprob: -18.125
    5. ' init' → logprob: -18.375
    6. 'eq' → logprob: -18.375
    7. 'str' → logprob: -19.5
    8. 'doc' → logprob: -20.375
    9. 'repr' → logprob: -20.5
    10. 'call' → logprob: -20.5

Token 134: '__(' (ID: 8241)
  Prédit: '__('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.0010900930501520634
    2. '__' → logprob: -6.876090049743652
    3. '(self' → logprob: -10.501090049743652
    4. '__(
' → logprob: -10.626090049743652
    5. '__((' → logprob: -12.876090049743652
    6. '__('' → logprob: -13.751090049743652
    7. '(' → logprob: -14.126090049743652
    8. '__(*' → logprob: -14.251090049743652
    9. '_(' → logprob: -15.501090049743652
    10. 'self' → logprob: -16.12609100341797

Token 135: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.00018029935017693788
    2. ' self' → logprob: -8.6251802444458
    3. ',' → logprob: -15.3751802444458
    4. '(self' → logprob: -15.6251802444458
    5. 'value' → logprob: -15.6251802444458
    6. '
' → logprob: -16.125181198120117
    7. '	self' → logprob: -16.875181198120117
    8. ' ' → logprob: -17.250181198120117
    9. '0' → logprob: -17.375181198120117
    10. 'def' → logprob: -18.250181198120117

Token 136: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.004189044702798128
    2. 'self' → logprob: -5.5041890144348145
    3. ' ,' → logprob: -9.254189491271973
    4. ' self' → logprob: -12.254189491271973
    5. '_,' → logprob: -12.879189491271973
    6. ',self' → logprob: -13.254189491271973
    7. ',value' → logprob: -13.379189491271973
    8. 'value' → logprob: -13.629189491271973
    9. '__,' → logprob: -13.879189491271973
    10. 'def' → logprob: -15.004189491271973

Token 137: ' bok' (ID: 35768)
  Prédit: 'value'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'value' → logprob: -0.2502341568470001
    2. 'self' → logprob: -2.1252341270446777
    3. 'bok' → logprob: -3.0002341270446777
    4. 'count' → logprob: -3.6252341270446777
    5. 'units' → logprob: -4.625234127044678
    6. 'weight' → logprob: -4.750234127044678
    7. ' value' → logprob: -5.625234127044678
    8. ' self' → logprob: -6.750234127044678
    9. ' bok' → logprob: -7.750234127044678
    10. 'unit' → logprob: -7.750234127044678

Token 138: 'ko' (ID: 3593)
  Prédit: 'ko'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ko' → logprob: -0.0006373812211677432
    2. 'k' → logprob: -7.750637531280518
    3. 'ко' → logprob: -8.75063705444336
    4. 'こ' → logprob: -11.25063705444336
    5. 'o' → logprob: -12.00063705444336
    6. ' ko' → logprob: -12.25063705444336
    7. '```' → logprob: -13.00063705444336
    8. 'ku' → logprob: -13.12563705444336
    9. '_' → logprob: -13.37563705444336
    10. 'к' → logprob: -13.62563705444336

Token 139: ':' (ID: 25)
  Prédit: '_count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_count' → logprob: -0.6773882508277893
    2. 's' → logprob: -1.3023881912231445
    3. '_units' → logprob: -1.8023881912231445
    4. ':' → logprob: -3.0523881912231445
    5. '):' → logprob: -6.0523881912231445
    6. '):
' → logprob: -6.1773881912231445
    7. '_weight' → logprob: -6.5523881912231445
    8. ')' → logprob: -7.4273881912231445
    9. '_value' → logprob: -7.6773881912231445
    10. '_amount' → logprob: -8.427388191223145

Token 140: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.2812405228614807
    2. ' int' → logprob: -1.406240463256836
    3. ':int' → logprob: -10.406240463256836
    4. ' ' → logprob: -10.781240463256836
    5. ')' → logprob: -11.031240463256836
    6. '[int' → logprob: -12.531240463256836
    7. '1' → logprob: -12.906240463256836
    8. '):
' → logprob: -13.031240463256836
    9. '(int' → logprob: -13.031240463256836
    10. '	int' → logprob: -13.281240463256836

Token 141: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.01531557273119688
    2. '):
' → logprob: -4.765315532684326
    3. ')' → logprob: -5.015315532684326
    4. ':' → logprob: -10.390316009521484
    5. '):
' → logprob: -11.640316009521484
    6. ' ):' → logprob: -13.265316009521484
    7. '=' → logprob: -13.890316009521484
    8. '):

' → logprob: -15.640316009521484
    9. ',' → logprob: -15.765316009521484
    10. '   ' → logprob: -15.890316009521484

Token 142: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0004773824184667319
    2. 'self' → logprob: -8.00047779083252
    3. ' self' → logprob: -8.87547779083252
    4. '   ' → logprob: -13.50047779083252
    5. ' ' → logprob: -14.87547779083252
    6. '	self' → logprob: -16.375476837158203
    7. ',' → logprob: -16.500476837158203
    8. 'super' → logprob: -16.625476837158203
    9. '      ' → logprob: -16.875476837158203
    10. '    ' → logprob: -17.000476837158203

Token 143: ' if' (ID: 538)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.862044095993042
    2. 'self' → logprob: -0.862044095993042
    3. ' self' → logprob: -1.862044095993042
    4. 'super' → logprob: -10.862044334411621
    5. '   ' → logprob: -11.112044334411621
    6. ' super' → logprob: -12.237044334411621
    7. '	self' → logprob: -12.237044334411621
    8. '      ' → logprob: -13.237044334411621
    9. ' ' → logprob: -13.362044334411621
    10. '           ' → logprob: -14.362044334411621

Token 144: ' bok' (ID: 35768)
  Prédit: ' bok'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' bok' → logprob: -0.038084860891103745
    2. 'bok' → logprob: -3.2880847454071045
    3. 'b' → logprob: -11.038084983825684
    4. ' not' → logprob: -11.038084983825684
    5. ' boka' → logprob: -12.788084983825684
    6. ' buk' → logprob: -13.413084983825684
    7. 'not' → logprob: -13.663084983825684
    8. ' ' → logprob: -14.038084983825684
    9. ' bob' → logprob: -14.288084983825684
    10. ' isinstance' → logprob: -14.538084983825684

Token 145: 'ko' (ID: 3593)
  Prédit: 'ko'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ko' → logprob: -4.310693111619912e-05
    2. 'ко' → logprob: -10.500042915344238
    3. ' ko' → logprob: -11.875042915344238
    4. 'k' → logprob: -12.625042915344238
    5. 'こ' → logprob: -12.750042915344238
    6. 'bo' → logprob: -13.875042915344238
    7. 'o' → logprob: -14.875042915344238
    8. '
' → logprob: -15.500042915344238
    9. '```' → logprob: -16.000043869018555
    10. '

' → logprob: -16.500043869018555

Token 146: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.03337525203824043
    2. '<' → logprob: -3.5333752632141113
    3. ' <=' → logprob: -5.658375263214111
    4. '<=' → logprob: -9.533374786376953
    5. ' ' → logprob: -10.033374786376953
    6. ' >=' → logprob: -12.408374786376953
    7. ' >' → logprob: -12.658374786376953
    8. '<|end|>' → logprob: -13.783374786376953
    9. '<int' → logprob: -13.908374786376953
    10. '   ' → logprob: -13.908374786376953

Token 147: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0002980432182084769
    2. ' ' → logprob: -8.125298500061035
    3. '=' → logprob: -13.625298500061035
    4. '1' → logprob: -14.625298500061035
    5. '۰' → logprob: -15.750298500061035
    6. '   ' → logprob: -16.31279754638672
    7. '```' → logprob: -16.93779754638672
    8. '０' → logprob: -17.93779754638672
    9. '٠' → logprob: -18.12529754638672
    10. '০' → logprob: -18.50029754638672

Token 148: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -4.596781946020201e-05
    2. ' ' → logprob: -10.000045776367188
    3. '=' → logprob: -15.000045776367188
    4. '۰' → logprob: -15.875045776367188
    5. '1' → logprob: -16.125045776367188
    6. '０' → logprob: -17.375045776367188
    7. '   ' → logprob: -17.562545776367188
    8. '০' → logprob: -18.250045776367188
    9. '٠' → logprob: -18.250045776367188
    10. '```' → logprob: -18.687545776367188

Token 149: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.4743252098560333
    2. ':' → logprob: -0.9743251800537109
    3. '):
' → logprob: -9.349325180053711
    4. '       ' → logprob: -9.849325180053711
    5. ' or' → logprob: -10.724325180053711
    6. ',' → logprob: -10.724325180053711
    7. ' :
' → logprob: -10.974325180053711
    8. '           ' → logprob: -11.099325180053711
    9. ':
' → logprob: -11.849325180053711
    10. '():
' → logprob: -11.974325180053711

Token 150: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.021537236869335175
    2. ' raise' → logprob: -4.0215373039245605
    3. '            ' → logprob: -6.8965373039245605
    4. 'raise' → logprob: -7.0215373039245605
    5. 'Value' → logprob: -7.2715373039245605
    6. ' Value' → logprob: -7.5215373039245605
    7. '        ' → logprob: -9.271536827087402
    8. ',' → logprob: -10.771536827087402
    9. '       ' → logprob: -10.896536827087402
    10. '               ' → logprob: -11.271536827087402

Token 151: ' raise' (ID: 9338)
  Prédit: 'raise'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'raise' (adapté à ' raise') → logprob: -0.48556122183799744
    2. ' raise' → logprob: -0.9855612516403198
    3. '           ' → logprob: -4.485561370849609
    4. '	raise' → logprob: -8.98556137084961
    5. 'Raise' → logprob: -11.23556137084961
    6. '_raise' → logprob: -12.61056137084961
    7. '```' → logprob: -13.36056137084961
    8. 'raises' → logprob: -13.48556137084961
    9. '
' → logprob: -13.98556137084961
    10. 'Value' → logprob: -14.48556137084961

Token 152: ' Value' (ID: 9963)
  Prédit: ' Value'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Value' → logprob: -0.1602276712656021
    2. 'Value' → logprob: -1.910227656364441
    3. '	Value' → logprob: -13.03522777557373
    4. '_value' → logprob: -14.03522777557373
    5. '_Value' → logprob: -15.78522777557373
    6. ' value' → logprob: -16.285226821899414
    7. 'value' → logprob: -16.535226821899414
    8. ' ' → logprob: -16.785226821899414
    9. '<Value' → logprob: -16.910226821899414
    10. '(Value' → logprob: -17.160226821899414

Token 153: 'Error' (ID: 2255)
  Prédit: 'Error'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Error' → logprob: -0.00901160016655922
    2. 'rror' → logprob: -5.009011745452881
    3. 'Value' → logprob: -6.134011745452881
    4. 'ror' → logprob: -9.509011268615723
    5. 'r' → logprob: -10.384011268615723
    6. '   ' → logprob: -11.384011268615723
    7. '       ' → logprob: -12.634011268615723
    8. 'Val' → logprob: -13.634011268615723
    9. 'error' → logprob: -14.384011268615723
    10. '           ' → logprob: -14.759011268615723

Token 154: '("' (ID: 568)
  Prédit: '("'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '("' → logprob: -0.0007694864762015641
    2. '(' → logprob: -7.75076961517334
    3. '('' → logprob: -8.00076961517334
    4. '(
' → logprob: -13.50076961517334
    5. '       ' → logprob: -14.62576961517334
    6. ':' → logprob: -14.87576961517334
    7. '("'' → logprob: -14.87576961517334
    8. ',' → logprob: -15.12576961517334
    9. '"' → logprob: -15.12576961517334
    10. '           ' → logprob: -15.25076961517334

Token 155: 'B' (ID: 33)
  Prédit: ' bok'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' bok' → logprob: -0.8294989466667175
    2. 'bok' → logprob: -1.0794990062713623
    3. 'B' → logprob: -2.0794990062713623
    4. ' Bok' → logprob: -3.0794990062713623
    5. 'Weight' → logprob: -3.2044990062713623
    6. 'b' → logprob: -5.579498767852783
    7. ' Weight' → logprob: -5.704498767852783
    8. ' B' → logprob: -6.954498767852783
    9. 'Value' → logprob: -7.079498767852783
    10. 'Unit' → logprob: -7.329498767852783

Token 156: 'ok' (ID: 525)
  Prédit: 'ok'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ok' → logprob: -0.0017380056669935584
    2. ' bok' → logprob: -7.00173807144165
    3. 'bok' → logprob: -8.251737594604492
    4. 'o' → logprob: -8.751737594604492
    5. 'okk' → logprob: -9.626737594604492
    6. 'okka' → logprob: -9.876737594604492
    7. 'ок' → logprob: -9.876737594604492
    8. ' ok' → logprob: -9.876737594604492
    9. ' ' → logprob: -10.376737594604492
    10. 'ook' → logprob: -10.751737594604492

Token 157: 'ko' (ID: 3593)
  Prédit: 'ko'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ko' → logprob: -2.0100624169572257e-05
    2. 'ко' → logprob: -11.000020027160645
    3. 'こ' → logprob: -13.625020027160645
    4. 'bo' → logprob: -13.875020027160645
    5. '```' → logprob: -15.000020027160645
    6. 'k' → logprob: -15.625020027160645
    7. ' ko' → logprob: -15.875020027160645
    8. 'コ' → logprob: -15.875020027160645
    9. '코' → logprob: -16.37502098083496
    10. '
' → logprob: -16.50002098083496

Token 158: ' unit' (ID: 7670)
  Prédit: ' must'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' must' → logprob: -0.30476468801498413
    2. ' units' → logprob: -2.304764747619629
    3. ' value' → logprob: -2.804764747619629
    4. ' count' → logprob: -3.429764747619629
    5. ' cannot' → logprob: -3.804764747619629
    6. 'units' → logprob: -4.429764747619629
    7. ' unit' → logprob: -4.679764747619629
    8. 'must' → logprob: -4.804764747619629
    9. ' should' → logprob: -5.679764747619629
    10. 'value' → logprob: -5.679764747619629

Token 159: ' must' (ID: 2804)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.9587971568107605
    2. ' must' → logprob: -1.0837972164154053
    3. ' count' → logprob: -1.9587972164154053
    4. ' cannot' → logprob: -2.2087972164154053
    5. ' value' → logprob: -3.8337972164154053
    6. 'count' → logprob: -5.958796977996826
    7. 'must' → logprob: -7.208796977996826
    8. '値' → logprob: -7.708796977996826
    9. 'cannot' → logprob: -7.708796977996826
    10. '不能' → logprob: -8.333797454833984

Token 160: ' be' (ID: 413)
  Prédit: ' be'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' be' → logprob: -0.0038096921052783728
    2. ' not' → logprob: -6.253809928894043
    3. '>=' → logprob: -7.003809928894043
    4. ' >=' → logprob: -7.503809928894043
    5. 'not' → logprob: -8.128809928894043
    6. 'be' → logprob: -9.003809928894043
    7. ' ' → logprob: -14.378809928894043
    8. '	be' → logprob: -14.878809928894043
    9. '   ' → logprob: -15.503809928894043
    10. ' have' → logprob: -15.753809928894043

Token 161: ' non' (ID: 2893)
  Prédit: 'non'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'non' → logprob: -0.018167732283473015
    2. ' non' → logprob: -4.018167495727539
    3. 'a' → logprob: -11.643167495727539
    4. '0' → logprob: -12.643167495727539
    5. '>=' → logprob: -12.643167495727539
    6. '非' → logprob: -13.143167495727539
    7. ' a' → logprob: -15.018167495727539
    8. ' >=' → logprob: -15.893167495727539
    9. 'nonnull' → logprob: -17.14316749572754
    10. ' ' → logprob: -17.39316749572754

Token 162: '-negative' (ID: 126970)
  Prédit: '-negative'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-negative' → logprob: -0.014502058736979961
    2. 'negative' → logprob: -4.264502048492432
    3. '-' → logprob: -8.13950252532959
    4. 'Negative' → logprob: -10.88950252532959
    5. ' negative' → logprob: -11.13950252532959
    6. '   ' → logprob: -11.51450252532959
    7. '_negative' → logprob: -13.26450252532959
    8. '-neg' → logprob: -13.63950252532959
    9. ' negativo' → logprob: -15.13950252532959
    10. '-
' → logprob: -16.764501571655273

Token 163: '")
' (ID: 1896)
  Prédit: '")'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '")' → logprob: -0.08418098092079163
    2. ')")' → logprob: -2.959181070327759
    3. '")
' → logprob: -4.33418083190918
    4. ')")
' → logprob: -5.20918083190918
    5. ' ")' → logprob: -5.58418083190918
    6. ')' → logprob: -5.58418083190918
    7. ' integer' → logprob: -6.58418083190918
    8. ' )' → logprob: -7.58418083190918
    9. ' value' → logprob: -8.70918083190918
    10. '")
' → logprob: -8.83418083190918

Token 164: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0018365412252023816
    2. 'self' → logprob: -6.376836776733398
    3. ' self' → logprob: -9.001836776733398
    4. '   ' → logprob: -11.751836776733398
    5. '	' → logprob: -14.501836776733398
    6. '        
' → logprob: -14.626836776733398
    7. '           ' → logprob: -14.751836776733398
    8. '```' → logprob: -14.876836776733398
    9. '	self' → logprob: -14.876836776733398
    10. '
' → logprob: -15.251836776733398

Token 165: ' self' (ID: 1051)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03676200285553932
    2. 'self' (adapté à ' self') → logprob: -3.411761999130249
    3. ' self' → logprob: -5.786762237548828
    4. '   ' → logprob: -10.411762237548828
    5. '	self' → logprob: -11.911762237548828
    6. '	' → logprob: -12.786762237548828
    7. ' ' → logprob: -13.911762237548828
    8. '           ' → logprob: -14.286762237548828
    9. ' ' → logprob: -14.661762237548828
    10. '      ' → logprob: -15.161762237548828

Token 166: '.b' (ID: 1292)
  Prédit: '.b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.b' → logprob: -0.038176897913217545
    2. '.' → logprob: -3.288177013397217
    3. ' .' → logprob: -9.038176536560059
    4. '._' → logprob: -11.288176536560059
    5. 'b' → logprob: -13.163176536560059
    6. '.B' → logprob: -14.788176536560059
    7. '.б' → logprob: -15.163176536560059
    8. '．' → logprob: -15.413176536560059
    9. '​.' → logprob: -15.413176536560059
    10. '.bmp' → logprob: -16.163177490234375

Token 167: 'ok' (ID: 525)
  Prédit: 'ok'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ok' → logprob: -0.0002998312993440777
    2. 'o' → logprob: -8.250299453735352
    3. 'k' → logprob: -10.750299453735352
    4. 'okk' → logprob: -12.625299453735352
    5. 'okho' → logprob: -12.625299453735352
    6. ' ok' → logprob: -13.125299453735352
    7. 'occo' → logprob: -13.500299453735352
    8. 'okka' → logprob: -13.875299453735352
    9. '	ok' → logprob: -13.875299453735352
    10. '   ' → logprob: -14.125299453735352

Token 168: 'ko' (ID: 3593)
  Prédit: 'ko'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ko' → logprob: -0.4749416708946228
    2. 'o' → logprob: -0.9749416708946228
    3. 'こ' → logprob: -7.474941730499268
    4. 'ко' → logprob: -9.22494125366211
    5. 'k' → logprob: -9.72494125366211
    6. ' ko' → logprob: -10.09994125366211
    7. 'о' → logprob: -10.72494125366211
    8. 'bo' → logprob: -10.84994125366211
    9. ' o' → logprob: -11.47494125366211
    10. '	o' → logprob: -11.84994125366211

Token 169: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6931525468826294
    2. ' =' → logprob: -0.6931525468826294
    3. ' ' → logprob: -12.19315242767334
    4. '=b' → logprob: -15.56815242767334
    5. '=int' → logprob: -16.568153381347656
    6. ')' → logprob: -16.943153381347656
    7. '＝' → logprob: -17.443153381347656
    8. '=}' → logprob: -17.568153381347656
    9. '=value' → logprob: -17.693153381347656
    10. '    ' → logprob: -18.068153381347656

Token 170: ' bok' (ID: 35768)
  Prédit: 'bok'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bok' → logprob: -0.28122952580451965
    2. ' bok' → logprob: -1.4062294960021973
    3. 'b' → logprob: -10.031229972839355
    4. ' ' → logprob: -11.406229972839355
    5. 'buk' → logprob: -12.281229972839355
    6. '	b' → logprob: -13.156229972839355
    7. '   ' → logprob: -13.531229972839355
    8. 'bob' → logprob: -13.656229972839355
    9. 'bak' → logprob: -13.656229972839355
    10. 'bk' → logprob: -13.656229972839355

Token 171: 'ko' (ID: 3593)
  Prédit: 'ko'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ko' → logprob: -0.00023607931507285684
    2. 'o' → logprob: -8.625236511230469
    3. 'ко' → logprob: -10.625236511230469
    4. 'こ' → logprob: -10.750236511230469
    5. ' ko' → logprob: -11.875236511230469
    6. ' ' → logprob: -14.500236511230469
    7. '```' → logprob: -14.750236511230469
    8. 'bo' → logprob: -14.875236511230469
    9. 'k' → logprob: -15.000236511230469
    10. '
' → logprob: -15.125236511230469

Token 172: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 173: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 174: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.0032949901651591063
    2. ' def' → logprob: -5.753294944763184
    3. '   ' → logprob: -9.128294944763184
    4. '@property' → logprob: -11.753294944763184
    5. ')' → logprob: -14.378294944763184
    6. '@' → logprob: -15.878294944763184
    7. '	def' → logprob: -16.8782958984375
    8. '    ' → logprob: -17.1282958984375
    9. '       ' → logprob: -18.1282958984375
    10. ' ' → logprob: -18.2532958984375

Token 175: ' to' (ID: 316)
  Prédit: ' to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' to' → logprob: -0.25192973017692566
    2. 'to' → logprob: -1.501929759979248
    3. '_to' → logprob: -14.50192928314209
    4. ' ' → logprob: -16.001930236816406
    5. '   ' → logprob: -17.626930236816406
    6. '	to' → logprob: -18.126930236816406
    7. '.to' → logprob: -18.751930236816406
    8. ' ' → logprob: -18.876930236816406
    9. '  ' → logprob: -19.126930236816406
    10. ' def' → logprob: -19.126930236816406

Token 176: '_base' (ID: 17096)
  Prédit: '_base'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_base' → logprob: -1.0802738870552275e-05
    2. '_' → logprob: -11.75001049041748
    3. ' _' → logprob: -13.00001049041748
    4. 'Base' → logprob: -15.37501049041748
    5. '_Base' → logprob: -16.375011444091797
    6. ' Base' → logprob: -16.500011444091797
    7. '_BASE' → logprob: -16.750011444091797
    8. '_b' → logprob: -17.250011444091797
    9. '_space' → logprob: -17.500011444091797
    10. '_bas' → logprob: -17.500011444091797

Token 177: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.3198908269405365
    2. '(' → logprob: -1.8198908567428589
    3. '()' → logprob: -2.1948907375335693
    4. '(
' → logprob: -8.319890975952148
    5. '(

' → logprob: -10.819890975952148
    6. '   ' → logprob: -11.069890975952148
    7. ' ()' → logprob: -11.319890975952148
    8. 'def' → logprob: -11.319890975952148
    9. ' (' → logprob: -11.319890975952148
    10. '():' → logprob: -12.069890975952148

Token 178: ')' (ID: 8)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.03392621874809265
    2. '():' → logprob: -4.033926010131836
    3. '())' → logprob: -5.033926010131836
    4. ')' → logprob: -5.158926010131836
    5. '(' → logprob: -6.658926010131836
    6. ' ()' → logprob: -7.658926010131836
    7. ' )' → logprob: -7.908926010131836
    8. '():
' → logprob: -8.408926010131836
    9. '()*' → logprob: -8.408926010131836
    10. '()
' → logprob: -8.783926010131836

Token 179: ' ->' (ID: 2747)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -1.2919776439666748
    2. ')' → logprob: -1.4169776439666748
    3. ' ->' → logprob: -1.4169776439666748
    4. '->' → logprob: -1.6669776439666748
    5. ':
' → logprob: -4.041977882385254
    6. '   ' → logprob: -4.541977882385254
    7. ':return' → logprob: -4.541977882385254
    8. '       ' → logprob: -5.541977882385254
    9. '):' → logprob: -6.166977882385254
    10. '(' → logprob: -6.541977882385254

Token 180: ' int' (ID: 677)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.03145803138613701
    2. ' self' → logprob: -3.5314581394195557
    3. 'int' → logprob: -6.406457901000977
    4. '2' → logprob: -10.906457901000977
    5. ' int' → logprob: -11.156457901000977
    6. 'return' → logprob: -11.656457901000977
    7. '1' → logprob: -11.906457901000977
    8. '(self' → logprob: -13.156457901000977
    9. ' ' → logprob: -13.781457901000977
    10. '0' → logprob: -13.906457901000977

Token 181: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.3929457664489746
    2. ':' → logprob: -1.1429457664489746
    3. '       ' → logprob: -5.142945766448975
    4. '   ' → logprob: -9.142946243286133
    5. ':
' → logprob: -10.267946243286133
    6. '):
' → logprob: -10.642946243286133
    7. ':return' → logprob: -10.642946243286133
    8. 'return' → logprob: -11.892946243286133
    9. '():
' → logprob: -12.517946243286133
    10. ' return' → logprob: -13.517946243286133

Token 182: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7670390009880066
    2. 'return' → logprob: -0.7670390009880066
    3. ' return' → logprob: -2.6420390605926514
    4. 'self' → logprob: -12.14203929901123
    5. '2' → logprob: -13.76703929901123
    6. '        
' → logprob: -14.01703929901123
    7. '
' → logprob: -14.14203929901123
    8. '0' → logprob: -14.26703929901123
    9. '   ' → logprob: -14.51703929901123
    10. '	return' → logprob: -14.89203929901123

Token 183: ' #' (ID: 1069)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.4468046724796295
    2. 'return' → logprob: -1.0718046426773071
    3. ' self' → logprob: -4.821804523468018
    4. ' return' → logprob: -5.071804523468018
    5. '       ' → logprob: -5.696804523468018
    6. '2' → logprob: -8.571805000305176
    7. '   ' → logprob: -10.446805000305176
    8. '1' → logprob: -11.071805000305176
    9. '           ' → logprob: -12.071805000305176
    10. '0' → logprob: -12.321805000305176

Token 184: ' Base' (ID: 8729)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.0019556330516934395
    2. '       ' → logprob: -6.751955509185791
    3. ' return' → logprob: -7.251955509185791
    4. 'self' → logprob: -9.62695598602295
    5. '#' → logprob: -12.62695598602295
    6. '2' → logprob: -12.75195598602295
    7. '   ' → logprob: -13.00195598602295
    8. '1' → logprob: -14.75195598602295
    9. '           ' → logprob: -14.75195598602295
    10. 'b' → logprob: -15.00195598602295

Token 185: ' weight' (ID: 6049)
  Prédit: ' return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.07583443820476532
    2. 'return' → logprob: -2.8258345127105713
    3. ' ' → logprob: -4.825834274291992
    4. ' self' → logprob: -6.575834274291992
    5. ' =' → logprob: -6.950834274291992
    6. '=' → logprob: -7.325834274291992
    7. '2' → logprob: -7.450834274291992
    8. '1' → logprob: -7.700834274291992
    9. 'self' → logprob: -7.950834274291992
    10. '       ' → logprob: -8.075834274291992

Token 186: ' unit' (ID: 7670)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.10230088979005814
    2. '       ' → logprob: -3.4773008823394775
    3. '=' → logprob: -3.6023008823394775
    4. '   ' → logprob: -4.102301120758057
    5. ':' → logprob: -4.352301120758057
    6. ' ' → logprob: -6.852301120758057
    7. 's' → logprob: -6.977301120758057
    8. ' *' → logprob: -7.102301120758057
    9. '(' → logprob: -7.352301120758057
    10. '<|end|>' → logprob: -7.352301120758057

Token 187: ':' (ID: 25)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.33571556210517883
    2. '=' → logprob: -1.8357155323028564
    3. ' return' → logprob: -2.9607155323028564
    4. '       ' → logprob: -3.4607155323028564
    5. 'return' → logprob: -3.9607155323028564
    6. ':' → logprob: -4.0857157707214355
    7. '   ' → logprob: -6.7107157707214355
    8. '1' → logprob: -6.9607157707214355
    9. ' ' → logprob: -7.3357157707214355
    10. ':
' → logprob: -7.7107157707214355

Token 188: ' ' (ID: 220)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.6140730381011963
    2. '1' → logprob: -0.9890730381011963
    3. ' self' → logprob: -2.6140730381011963
    4. 'grams' → logprob: -5.364072799682617
    5. 'gram' → logprob: -5.739072799682617
    6. ' ' → logprob: -5.739072799682617
    7. ' grams' → logprob: -6.989072799682617
    8. '2' → logprob: -7.239072799682617
    9. '   ' → logprob: -8.114072799682617
    10. 'g' → logprob: -8.489072799682617

Token 189: '1' (ID: 16)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.47552192211151123
    2. '1' → logprob: -0.9755219221115112
    3. '2' → logprob: -7.100522041320801
    4. 'grams' → logprob: -7.725522041320801
    5. 'gram' → logprob: -8.9755220413208
    6. ' self' → logprob: -10.7255220413208
    7. 'g' → logprob: -11.3505220413208
    8. '(self' → logprob: -12.9755220413208
    9. 'gr' → logprob: -13.1005220413208
    10. '0' → logprob: -13.1005220413208

Token 190: ' gram' (ID: 40134)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 191: '
' (ID: 198)
  Prédit: ' *'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' *' → logprob: -1.2657618522644043
    2. '1' → logprob: -1.3907618522644043
    3. ' **' → logprob: -1.8907618522644043
    4. ' ' → logprob: -2.2657618522644043
    5. '**' → logprob: -2.7657618522644043
    6. ' return' → logprob: -3.0157618522644043
    7. '   ' → logprob: -3.8907618522644043
    8. ':' → logprob: -4.265761852264404
    9. '       ' → logprob: -4.265761852264404
    10. 'return' → logprob: -4.765761852264404

Token 192: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2755913734436035
    2. 'return' → logprob: -1.6505913734436035
    3. ' return' → logprob: -3.0255913734436035
    4. '   ' → logprob: -8.150590896606445
    5. '1' → logprob: -10.650590896606445
    6. '
' → logprob: -10.650590896606445
    7. '        
' → logprob: -11.025590896606445
    8. '	return' → logprob: -11.400590896606445
    9. '           ' → logprob: -12.150590896606445
    10. '0' → logprob: -12.275590896606445

Token 193: ' #' (ID: 1069)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.0006284446571953595
    2. ' return' → logprob: -7.625628471374512
    3. '       ' → logprob: -8.875628471374512
    4. '   ' → logprob: -16.125627517700195
    5. '```' → logprob: -16.375627517700195
    6. '2' → logprob: -16.500627517700195
    7. '1' → logprob: -16.625627517700195
    8. '	return' → logprob: -16.875627517700195
    9. 'result' → logprob: -17.125627517700195
    10. '#' (adapté à ' #') → logprob: -17.250627517700195

Token 194: ' But' (ID: 3072)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.00012725738633889705
    2. ' return' → logprob: -9.000126838684082
    3. 'result' → logprob: -13.375126838684082
    4. '       ' → logprob: -13.750126838684082
    5. '#' → logprob: -15.000126838684082
    6. '   ' → logprob: -15.000126838684082
    7. 'weight' → logprob: -15.625126838684082
    8. 'value' → logprob: -16.1251277923584
    9. '```' → logprob: -16.6251277923584
    10. '
' → logprob: -16.6251277923584

Token 195: ' problem' (ID: 4792)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.3611825406551361
    2. ' return' → logprob: -1.2361825704574585
    3. '#' → logprob: -5.486182689666748
    4. ' the' → logprob: -5.611182689666748
    5. '   ' → logprob: -6.611182689666748
    6. '       ' → logprob: -6.986182689666748
    7. 'weight' → logprob: -7.486182689666748
    8. ' #' → logprob: -7.861182689666748
    9. ' weight' → logprob: -8.36118221282959
    10. ' here' → logprob: -8.73618221282959

Token 196: ' only' (ID: 1606)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -1.3361867666244507
    2. '   ' → logprob: -1.4611867666244507
    3. 'def' → logprob: -2.2111868858337402
    4. ' is' → logprob: -2.9611868858337402
    5. '       ' → logprob: -2.9611868858337402
    6. 'return' → logprob: -3.0861868858337402
    7. '<|end|>' → logprob: -3.0861868858337402
    8. ' *' → logprob: -3.2111868858337402
    9. ':return' → logprob: -3.3361868858337402
    10. ' return' → logprob: -3.3361868858337402

Token 197: ' manip' (ID: 20526)
  Prédit: 'returns'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'returns' → logprob: -0.9017807841300964
    2. 'counts' → logprob: -1.2767808437347412
    3. 'stores' → logprob: -2.026780843734741
    4. ' returns' → logprob: -3.276780843734741
    5. 'return' → logprob: -3.401780843734741
    6. 'def' → logprob: -3.651780843734741
    7. 'needs' → logprob: -4.151780605316162
    8. ' stores' → logprob: -4.151780605316162
    9. 'rep' → logprob: -4.526780605316162
    10. 'calcul' → logprob: -4.651780605316162

Token 198: 'ulates' (ID: 52494)
  Prédit: 'ulates'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ulates' → logprob: -0.18022505939006805
    2. 'ulate' → logprob: -1.8052250146865845
    3. 'ulated' → logprob: -8.430225372314453
    4. 'ul' → logprob: -9.305225372314453
    5. 'late' → logprob: -10.305225372314453
    6. 'lates' → logprob: -10.430225372314453
    7. '```' → logprob: -10.680225372314453
    8. 'ulating' → logprob: -10.805225372314453
    9. '#' → logprob: -11.430225372314453
    10. 'def' → logprob: -11.930225372314453

Token 199: ' Bok' (ID: 111854)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.08892495185136795
    2. ' self' → logprob: -2.5889248847961426
    3. 'the' → logprob: -5.588924884796143
    4. ' the' → logprob: -5.838924884796143
    5. ' integers' → logprob: -6.713924884796143
    6. 'bok' → logprob: -7.213924884796143
    7. ' bok' → logprob: -7.713924884796143
    8. 'inte' → logprob: -8.2139253616333
    9. '2' → logprob: -8.9639253616333
    10. 'integer' → logprob: -9.0889253616333

Token 200: 'ko' (ID: 3593)
  Prédit: 'ko'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ko' → logprob: -0.00016957100888248533
    2. 'ко' → logprob: -9.25016975402832
    3. 'こ' → logprob: -9.75016975402832
    4. ' ko' → logprob: -12.25016975402832
    5. 'o' → logprob: -13.00016975402832
    6. 'k' → logprob: -13.75016975402832
    7. '   ' → logprob: -14.00016975402832
    8. 'bo' → logprob: -14.00016975402832
    9. '```' → logprob: -14.00016975402832
    10. ' ' → logprob: -14.75016975402832

Token 201: ' units' (ID: 13306)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 202: ' as' (ID: 472)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.14825080335140228
    2. '<|end|>' → logprob: -2.6482508182525635
    3. '   ' → logprob: -3.6482508182525635
    4. '<|end|>' → logprob: -4.398250579833984
    5. '
' → logprob: -5.023250579833984
    6. '        
' → logprob: -5.773250579833984
    7. 'return' → logprob: -5.898250579833984
    8. '    
' → logprob: -6.148250579833984
    9. '\n' → logprob: -6.273250579833984
    10. '    ' → logprob: -6.523250579833984

Token 203: ' integers' (ID: 54912)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.14165529608726501
    2. ' self' → logprob: -2.891655206680298
    3. 'inte' → logprob: -3.141655206680298
    4. ' integers' → logprob: -4.266655445098877
    5. 'is' → logprob: -4.391655445098877
    6. 'integer' → logprob: -5.766655445098877
    7. 'an' → logprob: -6.641655445098877
    8. 'int' → logprob: -7.016655445098877
    9. ' is' → logprob: -7.016655445098877
    10. ' integer' → logprob: -8.266654968261719

Token 204: ',' (ID: 11)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.14099889993667603
    2. '
' → logprob: -2.5159988403320312
    3. '   ' → logprob: -4.390998840332031
    4. 'return' → logprob: -4.640998840332031
    5. '<|end|>' → logprob: -4.640998840332031
    6. ' return' → logprob: -5.390998840332031
    7. '        
' → logprob: -5.390998840332031
    8. '<|end|>' → logprob: -6.015998840332031
    9. '  
' → logprob: -7.015998840332031
    10. ' 
' → logprob: -7.015998840332031

Token 205: ' so' (ID: 813)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4079662263393402
    2. 'return' → logprob: -1.4079662561416626
    3. ' return' → logprob: -2.407966136932373
    4. '        ' → logprob: -9.157966613769531
    5. 'self' → logprob: -9.657966613769531
    6. ' ' → logprob: -10.157966613769531
    7. '   ' → logprob: -10.407966613769531
    8. '           ' → logprob: -10.782966613769531
    9. ' and' → logprob: -11.407966613769531
    10. ' self' → logprob: -11.657966613769531

Token 206: ' base' (ID: 3611)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.0033592702820897102
    2. ' return' → logprob: -6.128359317779541
    3. '       ' → logprob: -6.753359317779541
    4. 'self' → logprob: -12.128358840942383
    5. '   ' → logprob: -14.253358840942383
    6. 'raise' → logprob: -16.003358840942383
    7. '           ' → logprob: -16.128358840942383
    8. '	return' → logprob: -16.253358840942383
    9. '{return' → logprob: -16.503358840942383
    10. '```' → logprob: -17.253358840942383

Token 207: ' is' (ID: 382)
  Prédit: 'weight'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'weight' → logprob: -1.0341624021530151
    2. '<|end|>' → logprob: -1.4091624021530151
    3. 'unit' → logprob: -2.1591625213623047
    4. ' unit' → logprob: -2.2841625213623047
    5. ' weight' → logprob: -2.7841625213623047
    6. 'value' → logprob: -3.6591625213623047
    7. '_weight' → logprob: -3.7841625213623047
    8. '<|end|>' → logprob: -4.159162521362305
    9. ' value' → logprob: -5.034162521362305
    10. ' =' → logprob: -5.159162521362305

Token 208: ' Bok' (ID: 111854)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.41783541440963745
    2. 'self' → logprob: -1.1678354740142822
    3. ' self' → logprob: -3.5428354740142822
    4. ' ' → logprob: -6.667835235595703
    5. '   ' → logprob: -9.042835235595703
    6. '0' → logprob: -9.417835235595703
    7. '2' → logprob: -10.667835235595703
    8. 'the' → logprob: -11.542835235595703
    9. '    ' → logprob: -11.855335235595703
    10. 'int' → logprob: -11.855335235595703

Token 209: 'ko' (ID: 3593)
  Prédit: 'ko'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ko' → logprob: -0.0033532092347741127
    2. 'o' → logprob: -6.378353118896484
    3. 'k' → logprob: -7.253353118896484
    4. ' ko' → logprob: -8.003353118896484
    5. 'ко' → logprob: -8.003353118896484
    6. ' ' → logprob: -10.003353118896484
    7. '```' → logprob: -10.503353118896484
    8. '  ' → logprob: -11.253353118896484
    9. '   ' → logprob: -11.315853118896484
    10. '`' → logprob: -11.378353118896484

Token 210: ' units' (ID: 13306)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.9806559085845947
    2. '
' → logprob: -2.3556559085845947
    3. '<|end|>' → logprob: -2.3556559085845947
    4. '.b' → logprob: -2.4806559085845947
    5. '       ' → logprob: -2.7306559085845947
    6. 'b' → logprob: -2.9806559085845947
    7. ')' → logprob: -2.9806559085845947
    8. '<|end|>' → logprob: -3.3556559085845947
    9. '.' → logprob: -3.7306559085845947
    10. '_b' → logprob: -3.8556559085845947

Token 211: ' directly' (ID: 8516)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -1.1913790702819824
    2. '   ' → logprob: -1.4413790702819824
    3. '       ' → logprob: -1.9413790702819824
    4. 'return' → logprob: -2.4413790702819824
    5. '<|end|>' → logprob: -2.5663790702819824
    6. ' return' → logprob: -3.0663790702819824
    7. '<|end|>' → logprob: -3.3163790702819824
    8. '    
' → logprob: -3.8163790702819824
    9. ' *' → logprob: -4.191379070281982
    10. '    ' → logprob: -5.566379070281982

Token 212: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.025679348036646843
    2. 'return' → logprob: -4.025679111480713
    3. '
' → logprob: -5.275679111480713
    4. ' return' → logprob: -6.150679111480713
    5. '        
' → logprob: -9.650679588317871
    6. '   ' → logprob: -9.900679588317871
    7. '    
' → logprob: -10.150679588317871
    8. '<|end|>' → logprob: -10.525679588317871
    9. ',' → logprob: -11.150679588317871
    10. '	return' → logprob: -11.775679588317871

Token 213: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0029604658484458923
    2. 'return' → logprob: -6.252960681915283
    3. ' return' → logprob: -6.877960681915283
    4. '   ' → logprob: -14.377960205078125
    5. '```' → logprob: -15.377960205078125
    6. '           ' → logprob: -16.752960205078125
    7. '	return' → logprob: -16.752960205078125
    8. '{return' → logprob: -17.377960205078125
    9. '      ' → logprob: -17.377960205078125
    10. '	' → logprob: -17.502960205078125

Token 214: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.011949462816119194
    2. '       ' → logprob: -4.51194953918457
    3. ' return' → logprob: -7.01194953918457
    4. '   ' → logprob: -16.38694953918457
    5. '	return' → logprob: -16.38694953918457
    6. '```' → logprob: -18.76194953918457
    7. '{return' → logprob: -18.76194953918457
    8. ':return' → logprob: -19.13694953918457
    9. ' ' → logprob: -20.26194953918457
    10. 'eturn' → logprob: -20.26194953918457

Token 215: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -5.836499985889532e-05
    2. ' self' → logprob: -9.7500581741333
    3. '       ' → logprob: -19.250059127807617
    4. '   ' → logprob: -21.625059127807617
    5. '	self' → logprob: -22.000059127807617
    6. '(self' → logprob: -22.750059127807617
    7. '[self' → logprob: -24.500059127807617
    8. '0' → logprob: -25.250059127807617
    9. ' ' → logprob: -25.250059127807617
    10. '           ' → logprob: -25.250059127807617

Token 216: '.b' (ID: 1292)
  Prédit: '.b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.b' → logprob: -0.00026658078422769904
    2. '.' → logprob: -8.625267028808594
    3. ' .' → logprob: -9.375267028808594
    4. '.s' → logprob: -13.625267028808594
    5. '.б' → logprob: -15.750267028808594
    6. ').' → logprob: -15.875267028808594
    7. 'b' → logprob: -16.375267028808594
    8. '.value' → logprob: -17.000267028808594
    9. '.bo' → logprob: -17.000267028808594
    10. '.B' → logprob: -17.125267028808594

Token 217: 'ok' (ID: 525)
  Prédit: 'ok'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ok' → logprob: -7.822646693966817e-06
    2. 'o' → logprob: -12.500007629394531
    3. 'k' → logprob: -13.500007629394531
    4. 'okho' → logprob: -13.750007629394531
    5. ' ok' → logprob: -14.875007629394531
    6. 'okk' → logprob: -15.250007629394531
    7. ''ok' → logprob: -15.625007629394531
    8. 'Ok' → logprob: -16.00000762939453
    9. 'okka' → logprob: -16.00000762939453
    10. '	ok' → logprob: -16.12500762939453

Token 218: 'ko' (ID: 3593)
  Prédit: 'ko'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ko' → logprob: -0.63266521692276
    2. 'o' → logprob: -0.75766521692276
    3. 'k' → logprob: -11.132665634155273
    4. 'ro' → logprob: -11.382665634155273
    5. ' o' → logprob: -12.007665634155273
    6. '0' → logprob: -12.007665634155273
    7. 'ok' → logprob: -12.132665634155273
    8. ' ' → logprob: -12.132665634155273
    9. 'ко' → logprob: -12.882665634155273
    10. '```' → logprob: -13.007665634155273

Token 219: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 220: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6915280818939209
    2. '@' → logprob: -0.8165280818939209
    3. 'def' → logprob: -3.316528081893921
    4. '<|end|>' → logprob: -4.5665283203125
    5. '@property' → logprob: -5.6915283203125
    6. '    
' → logprob: -6.6915283203125
    7. '```' → logprob: -6.8165283203125
    8. ' def' → logprob: -6.8165283203125
    9. ' ' → logprob: -7.0665283203125
    10. '@return' → logprob: -7.5665283203125

Token 221: ' @' (ID: 759)
  Prédit: '@'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '@' (adapté à ' @') → logprob: -0.00028266964363865554
    2. '   ' → logprob: -8.500282287597656
    3. 'def' → logprob: -9.875282287597656
    4. 'classmethod' → logprob: -11.250282287597656
    5. ' @' → logprob: -12.250282287597656
    6. '@property' → logprob: -12.750282287597656
    7. '@return' → logprob: -13.375282287597656
    8. '@
' → logprob: -13.500282287597656
    9. '@class' → logprob: -13.500282287597656
    10. '@param' → logprob: -14.250282287597656

Token 222: 'classmethod' (ID: 64680)
  Prédit: 'classmethod'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'classmethod' → logprob: -3.7697225252486533e-06
    2. 'staticmethod' → logprob: -12.500003814697266
    3. 'from' → logprob: -18.125003814697266
    4. 'abstract' → logprob: -18.375003814697266
    5. 'class' → logprob: -18.625003814697266
    6. '@' → logprob: -19.250003814697266
    7. 'property' → logprob: -19.375003814697266
    8. 'cls' → logprob: -21.375003814697266
    9. 'classname' → logprob: -23.000003814697266
    10. '@class' → logprob: -24.875003814697266

Token 223: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.07759726792573929
    2. 'def' → logprob: -2.7025973796844482
    3. '
' → logprob: -4.952597141265869
    4. ' def' → logprob: -7.702597141265869
    5. '@' → logprob: -9.327597618103027
    6. '
' → logprob: -12.327597618103027
    7. '	def' → logprob: -12.452597618103027
    8. '    
' → logprob: -12.702597618103027
    9. '```' → logprob: -12.702597618103027
    10. '  ' → logprob: -12.827597618103027

Token 224: '   ' (ID: 271)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.3028479218482971
    2. '   ' → logprob: -1.4278478622436523
    3. '
' → logprob: -4.052847862243652
    4. '@' → logprob: -6.552847862243652
    5. ' def' → logprob: -6.677847862243652
    6. '<|end|>' → logprob: -7.677847862243652
    7. '	def' → logprob: -8.427847862243652
    8. 'classmethod' → logprob: -8.427847862243652
    9. '    
' → logprob: -8.927847862243652
    10. '```' → logprob: -10.177847862243652

Token 225: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -3.607391408877447e-05
    2. 'from' → logprob: -10.750036239624023
    3. '
' → logprob: -11.250036239624023
    4. ' def' → logprob: -13.750036239624023
    5. 'abstract' → logprob: -15.250036239624023
    6. '   ' → logprob: -16.250036239624023
    7. 'classmethod' → logprob: -16.750036239624023
    8. '    
' → logprob: -18.375036239624023
    9. '  
' → logprob: -19.000036239624023
    10. '	def' → logprob: -19.375036239624023

Token 226: ' from' (ID: 591)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'from' → logprob: -4.584861744660884e-05
    2. ' from' → logprob: -10.125045776367188
    3. 'def' → logprob: -12.125045776367188
    4. '
' → logprob: -15.750045776367188
    5. 'classmethod' → logprob: -16.500045776367188
    6. 'From' → logprob: -18.125045776367188
    7. '.from' → logprob: -18.125045776367188
    8. ' ' → logprob: -18.500045776367188
    9. ' def' → logprob: -18.625045776367188
    10. '   ' → logprob: -18.750045776367188

Token 227: '_base' (ID: 17096)
  Prédit: '_base'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_base' → logprob: 0.0
    2. 'base' → logprob: -18.0
    3. 'Base' → logprob: -18.375
    4. '_Base' → logprob: -19.0
    5. '_' → logprob: -19.75
    6. '_BASE' → logprob: -20.375
    7. '_bas' → logprob: -20.375
    8. '_basis' → logprob: -20.75
    9. ' base' → logprob: -21.125
    10. '_unit' → logprob: -22.0

Token 228: '(cls' (ID: 46446)
  Prédit: '(cls'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(cls' → logprob: -7.5649528298527e-05
    2. 'cls' → logprob: -9.500075340270996
    3. ' cls' → logprob: -14.125075340270996
    4. '(' → logprob: -17.125076293945312
    5. '```' → logprob: -18.000076293945312
    6. '   ' → logprob: -18.625076293945312
    7. '.cls' → logprob: -18.750076293945312
    8. '_cls' → logprob: -18.750076293945312
    9. ' (' → logprob: -18.875076293945312
    10. '(cl' → logprob: -19.250076293945312

Token 229: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0015359314857050776
    2. '(cls' → logprob: -6.751535892486572
    3. ' ,' → logprob: -8.50153636932373
    4. ' (' → logprob: -9.87653636932373
    5. '(value' → logprob: -9.87653636932373
    6. '(' → logprob: -10.62653636932373
    7. ')' → logprob: -11.00153636932373
    8. ',value' → logprob: -11.37653636932373
    9. 'cls' → logprob: -13.00153636932373
    10. ')(' → logprob: -13.12653636932373

Token 230: ' value' (ID: 1432)
  Prédit: 'value'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'value' → logprob: -0.012357420288026333
    2. ' value' → logprob: -4.512357234954834
    3. 'bok' → logprob: -7.137357234954834
    4. 'b' → logprob: -7.762357234954834
    5. 'cls' → logprob: -10.137357711791992
    6. ' bok' → logprob: -10.887357711791992
    7. '0' → logprob: -12.387357711791992
    8. ' ' → logprob: -12.762357711791992
    9. '_value' → logprob: -13.137357711791992
    10. 'unit' → logprob: -13.262357711791992

Token 231: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.18269389867782593
    2. '):' → logprob: -1.8076939582824707
    3. '):
' → logprob: -6.057693958282471
    4. ')' → logprob: -8.432693481445312
    5. ' ):' → logprob: -8.682693481445312
    6. '=' → logprob: -9.432693481445312
    7. ':int' → logprob: -10.057693481445312
    8. '(value' → logprob: -10.807693481445312
    9. 'value' → logprob: -10.932693481445312
    10. ',' → logprob: -11.057693481445312

Token 232: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.4740811586380005
    2. ' int' → logprob: -0.9740811586380005
    3. 'value' → logprob: -13.224081039428711
    4. '[int' → logprob: -14.474081039428711
    5. '0' → logprob: -14.599081039428711
    6. '(int' → logprob: -14.849081039428711
    7. ' value' → logprob: -15.099081039428711
    8. '<int' → logprob: -15.599081039428711
    9. ':int' → logprob: -15.849081039428711
    10. ' ' → logprob: -15.974081039428711

Token 233: ')' (ID: 8)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.020043790340423584
    2. ')' → logprob: -4.395043849945068
    3. '):
' → logprob: -4.895043849945068
    4. '):
' → logprob: -11.39504337310791
    5. ':' → logprob: -12.02004337310791
    6. ' ):' → logprob: -13.39504337310791
    7. ')->' → logprob: -13.52004337310791
    8. '):

' → logprob: -13.77004337310791
    9. '   ' → logprob: -14.52004337310791
    10. '       ' → logprob: -15.52004337310791

Token 234: ' ->' (ID: 2747)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.02372511476278305
    2. ':
' → logprob: -3.8987250328063965
    3. '       ' → logprob: -6.3987250328063965
    4. '):
' → logprob: -7.1487250328063965
    5. '):' → logprob: -8.023725509643555
    6. '->' → logprob: -9.273725509643555
    7. ':return' → logprob: -9.273725509643555
    8. '   ' → logprob: -9.648725509643555
    9. ')' → logprob: -10.648725509643555
    10. ',' → logprob: -10.773725509643555

Token 235: ' '' (ID: 461)
  Prédit: 'Weight'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Weight' → logprob: -0.0306404959410429
    2. ' Weight' → logprob: -3.5306406021118164
    3. 'cls' → logprob: -7.280640602111816
    4. ' cls' → logprob: -9.155640602111816
    5. ''' → logprob: -10.280640602111816
    6. '_weight' → logprob: -10.905640602111816
    7. ' '' → logprob: -11.155640602111816
    8. ' weight' → logprob: -11.655640602111816
    9. 'Unit' → logprob: -12.280640602111816
    10. 'weight' → logprob: -12.530640602111816

Token 236: 'Weight' (ID: 10843)
  Prédit: 'Weight'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Weight' → logprob: -3.128163257315464e-07
    2. ' Weight' → logprob: -16.0
    3. 'Unit' → logprob: -16.375
    4. 'Weighted' → logprob: -17.75
    5. '_weight' → logprob: -19.625
    6. 'weight' → logprob: -20.5
    7. 'Weights' → logprob: -21.0
    8. 'We' → logprob: -21.5
    9. 'cls' → logprob: -21.5
    10. '   ' → logprob: -21.75

Token 237: 'Unit' (ID: 6728)
  Prédit: 'Unit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Unit' → logprob: 0.0
    2. '<Unit' → logprob: -17.75
    3. 'unit' → logprob: -18.0
    4. '_unit' → logprob: -18.875
    5. '(Unit' → logprob: -19.125
    6. 'Weight' → logprob: -19.875
    7. 'Units' → logprob: -19.875
    8. ' Unit' → logprob: -20.375
    9. '```' → logprob: -20.75
    10. '.Unit' → logprob: -20.875

Token 238: '':
' (ID: 7669)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.15521781146526337
    2. '):
' → logprob: -2.2802178859710693
    3. ':' → logprob: -3.6552178859710693
    4. '':' → logprob: -4.90521764755249
    5. ':
' → logprob: -5.15521764755249
    6. '':
' → logprob: -6.78021764755249
    7. ')' → logprob: -7.90521764755249
    8. '   ' → logprob: -8.905218124389648
    9. ''):
' → logprob: -8.905218124389648
    10. '):
' → logprob: -8.905218124389648

Token 239: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0008821651572361588
    2. ' return' → logprob: -7.625882148742676
    3. 'return' → logprob: -7.875882148742676
    4. '   ' → logprob: -11.375882148742676
    5. '
' → logprob: -13.000882148742676
    6. '        
' → logprob: -16.500883102416992
    7. '	return' → logprob: -16.625883102416992
    8. '	   ' → logprob: -16.750883102416992
    9. '{return' → logprob: -16.875883102416992
    10. '[' → logprob: -17.000883102416992

Token 240: ' if' (ID: 538)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.10039106011390686
    2. '       ' → logprob: -2.600391149520874
    3. ' return' → logprob: -3.850391149520874
    4. '   ' → logprob: -15.350391387939453
    5. '	return' → logprob: -16.350391387939453
    6. '{return' → logprob: -17.475391387939453
    7. '
' → logprob: -18.100391387939453
    8. '```' → logprob: -18.475391387939453
    9. 'if' (adapté à ' if') → logprob: -19.225391387939453
    10. ' ' → logprob: -19.225391387939453

Token 241: ' value' (ID: 1432)
  Prédit: 'value'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'value' → logprob: -0.1602245420217514
    2. ' value' → logprob: -1.9102245569229126
    3. '"value' → logprob: -16.53522491455078
    4. 'alue' → logprob: -16.66022491455078
    5. ''value' → logprob: -16.91022491455078
    6. '	value' → logprob: -17.28522491455078
    7. 'Value' → logprob: -17.53522491455078
    8. ' ' → logprob: -17.53522491455078
    9. '$value' → logprob: -17.53522491455078
    10. ')value' → logprob: -18.16022491455078

Token 242: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.018184473738074303
    2. '<' → logprob: -4.018184661865234
    3. ' ' → logprob: -10.768184661865234
    4. '<|end|>' → logprob: -11.518184661865234
    5. '<int' → logprob: -13.768184661865234
    6. '<class' → logprob: -14.143184661865234
    7. ')' → logprob: -15.393184661865234
    8. '[' → logprob: -16.143184661865234
    9. '<|end|>' → logprob: -16.268184661865234
    10. '<context' → logprob: -16.268184661865234

Token 243: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0019288709154352546
    2. ' ' → logprob: -6.251928806304932
    3. '=' → logprob: -15.25192928314209
    4. '۰' → logprob: -18.251928329467773
    5. '   ' → logprob: -20.251928329467773
    6. '1' → logprob: -20.626928329467773
    7. '
' → logprob: -20.751928329467773
    8. '０' → logprob: -20.751928329467773
    9. '<|end|>' → logprob: -20.751928329467773
    10. '```' → logprob: -21.064428329467773

Token 244: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -6.2729995988775045e-06
    2. ' ' → logprob: -12.000006675720215
    3. '=' → logprob: -17.8750057220459
    4. '۰' → logprob: -19.3750057220459
    5. '<|end|>' → logprob: -20.1250057220459
    6. '```' → logprob: -20.8750057220459
    7. '00' → logprob: -21.2500057220459
    8. 'def' → logprob: -21.6250057220459
    9. '   ' → logprob: -21.6250057220459
    10. '０' → logprob: -22.0000057220459

Token 245: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.14816415309906006
    2. ':
' → logprob: -2.0231642723083496
    3. '       ' → logprob: -6.39816427230835
    4. '<|end|>' → logprob: -6.52316427230835
    5. '):
' → logprob: -7.52316427230835
    6. ')' → logprob: -7.52316427230835
    7. '           ' → logprob: -7.64816427230835
    8. '):' → logprob: -8.523163795471191
    9. ' or' → logprob: -8.523163795471191
    10. '<|end|>' → logprob: -8.898163795471191

Token 246: '           ' (ID: 352)
  Prédit: ' raise'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' raise' → logprob: -0.9058853983879089
    2. '           ' → logprob: -1.1558854579925537
    3. 'raise' → logprob: -1.2808854579925537
    4. '       ' → logprob: -6.155885219573975
    5. 'return' → logprob: -7.280885219573975
    6. ' return' → logprob: -7.905885219573975
    7. '	raise' → logprob: -10.405885696411133
    8. 'value' → logprob: -11.905885696411133
    9. 'Value' → logprob: -12.280885696411133
    10. '        ' → logprob: -12.280885696411133

Token 247: ' raise' (ID: 9338)
  Prédit: 'raise'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'raise' (adapté à ' raise') → logprob: -0.0033849377650767565
    2. ' raise' → logprob: -5.753385066986084
    3. '           ' → logprob: -8.503384590148926
    4. 'return' → logprob: -12.878384590148926
    5. '	raise' → logprob: -13.628384590148926
    6. '       ' → logprob: -15.378384590148926
    7. '_raise' → logprob: -16.253385543823242
    8. 'raises' → logprob: -16.378385543823242
    9. '            ' → logprob: -16.878385543823242
    10. '               ' → logprob: -17.128385543823242

Token 248: ' Value' (ID: 9963)
  Prédit: ' Value'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Value' → logprob: -0.38687241077423096
    2. 'Value' → logprob: -1.136872410774231
    3. ' value' → logprob: -14.386872291564941
    4. '_value' → logprob: -15.011872291564941
    5. '	Value' → logprob: -15.011872291564941
    6. '_Value' → logprob: -16.261873245239258
    7. 'value' → logprob: -16.511873245239258
    8. ' ' → logprob: -18.011873245239258
    9. '(Value' → logprob: -18.261873245239258
    10. '.Value' → logprob: -18.386873245239258

Token 249: 'Error' (ID: 2255)
  Prédit: 'Error'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Error' → logprob: -4.320199877838604e-07
    2. 'Value' → logprob: -15.25
    3. 'rror' → logprob: -15.875
    4. 'error' → logprob: -20.625
    5. 'alue' → logprob: -22.625
    6. ' Error' → logprob: -22.625
    7. 'ror' → logprob: -23.375
    8. 'Erro' → logprob: -23.875
    9. 'SError' → logprob: -24.625
    10. 'Er' → logprob: -24.625

Token 250: '("' (ID: 568)
  Prédit: '("'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '("' → logprob: -1.4855663721391466e-05
    2. '(' → logprob: -11.125015258789062
    3. '('' → logprob: -16.750015258789062
    4. '(
' → logprob: -18.375015258789062
    5. '(f' → logprob: -18.875015258789062
    6. '("'' → logprob: -19.375015258789062
    7. '("")' → logprob: -20.125015258789062
    8. '()' → logprob: -21.000015258789062
    9. '"' → logprob: -21.750015258789062
    10. '("
' → logprob: -22.000015258789062

Token 251: 'Base' (ID: 4882)
  Prédit: 'value'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'value' → logprob: -0.02119697816669941
    2. 'Value' → logprob: -4.0211968421936035
    3. 'B' → logprob: -6.5211968421936035
    4. 'Weight' → logprob: -6.7711968421936035
    5. 'weight' → logprob: -8.896197319030762
    6. ' value' → logprob: -9.021197319030762
    7. '"value' → logprob: -9.896197319030762
    8. 'Negative' → logprob: -10.271197319030762
    9. 'Unit' → logprob: -10.646197319030762
    10. 'bok' → logprob: -11.646197319030762

Token 252: ' weight' (ID: 6049)
  Prédit: ' value'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' value' → logprob: -0.6334245800971985
    2. 'value' → logprob: -0.8834245800971985
    3. '<|end|>' → logprob: -3.2584245204925537
    4. ' unit' → logprob: -5.133424758911133
    5. '_value' → logprob: -5.758424758911133
    6. ' ' → logprob: -6.258424758911133
    7. 'unit' → logprob: -6.383424758911133
    8. ')' → logprob: -6.758424758911133
    9. '<|end|>' → logprob: -7.008424758911133
    10. 'Value' → logprob: -7.383424758911133

Token 253: ' must' (ID: 2804)
  Prédit: ' value'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' value' → logprob: -0.2825579047203064
    2. 'value' → logprob: -1.5325579643249512
    3. ' unit' → logprob: -4.157557964324951
    4. 'unit' → logprob: -5.407557964324951
    5. ' must' → logprob: -5.532557964324951
    6. ' units' → logprob: -5.532557964324951
    7. ' cannot' → logprob: -7.157557964324951
    8. 'units' → logprob: -7.657557964324951
    9. 'must' → logprob: -8.407557487487793
    10. 'cannot' → logprob: -9.032557487487793

Token 254: ' be' (ID: 413)
  Prédit: ' be'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' be' → logprob: -0.026962287724018097
    2. ' not' → logprob: -3.7769622802734375
    3. 'not' → logprob: -6.0269622802734375
    4. 'be' → logprob: -6.6519622802734375
    5. '>=' → logprob: -12.901962280273438
    6. 'cannot' → logprob: -14.026962280273438
    7. ' >=' → logprob: -14.526962280273438
    8. ' cannot' → logprob: -14.776962280273438
    9. '	be' → logprob: -15.276962280273438
    10. '<|end|>' → logprob: -15.401962280273438

Token 255: ' non' (ID: 2893)
  Prédit: 'non'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'non' → logprob: -0.31332889199256897
    2. ' non' → logprob: -1.3133288621902466
    3. '0' → logprob: -9.688328742980957
    4. 'n' → logprob: -13.563328742980957
    5. '_non' → logprob: -13.563328742980957
    6. ' ' → logprob: -14.188328742980957
    7. 'nonnull' → logprob: -14.563328742980957
    8. '非' → logprob: -14.563328742980957
    9. 'negative' → logprob: -14.938328742980957
    10. '>=' → logprob: -15.813328742980957

Token 256: '-negative' (ID: 126970)
  Prédit: 'negative'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'negative' → logprob: -0.20680071413516998
    2. '-negative' → logprob: -1.7068006992340088
    3. '0' → logprob: -5.456800937652588
    4. ' negative' → logprob: -6.956800937652588
    5. 'Negative' → logprob: -9.08180046081543
    6. '_negative' → logprob: -10.20680046081543
    7. 'zero' → logprob: -13.95680046081543
    8. ' ' → logprob: -14.08180046081543
    9. '-' → logprob: -14.70680046081543
    10. 'empty' → logprob: -15.83180046081543

Token 257: '")
' (ID: 1896)
  Prédit: '")
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '")
' → logprob: -0.04235003516077995
    2. '")' → logprob: -3.2923500537872314
    3. ')")
' → logprob: -5.917349815368652
    4. '       ' → logprob: -7.417349815368652
    5. '")
' → logprob: -7.417349815368652
    6. ')' → logprob: -8.792349815368652
    7. ')
' → logprob: -8.917349815368652
    8. ')")' → logprob: -9.792349815368652
    9. ' ")
' → logprob: -10.667349815368652
    10. ''")
' → logprob: -11.042349815368652

Token 258: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00036561701563186944
    2. 'return' → logprob: -8.625365257263184
    3. ' return' → logprob: -8.750365257263184
    4. '
' → logprob: -10.750365257263184
    5. '<|end|>' → logprob: -13.625365257263184
    6. '	' → logprob: -13.875365257263184
    7. '   ' → logprob: -13.875365257263184
    8. '        
' → logprob: -14.375365257263184
    9. '           ' → logprob: -14.500365257263184
    10. '	return' → logprob: -14.750365257263184

Token 259: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.028360269963741302
    2. '       ' → logprob: -3.778360366821289
    3. ' return' → logprob: -5.278360366821289
    4. '   ' → logprob: -14.528360366821289
    5. '	return' → logprob: -15.028360366821289
    6. '
' → logprob: -15.903360366821289
    7. '{return' → logprob: -17.90336036682129
    8. ':return' → logprob: -18.77836036682129
    9. '        
' → logprob: -19.27836036682129
    10. '```' → logprob: -19.27836036682129

Token 260: ' cls' (ID: 26133)
  Prédit: 'cls'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cls' → logprob: -0.017353946343064308
    2. ' cls' → logprob: -4.2673540115356445
    3. 'Weight' → logprob: -5.7673540115356445
    4. ' Weight' → logprob: -9.767354011535645
    5. 'Cls' → logprob: -17.142353057861328
    6. '(cls' → logprob: -17.267353057861328
    7. 'cl' → logprob: -18.642353057861328
    8. '   ' → logprob: -19.267353057861328
    9. 'Weighted' → logprob: -19.642353057861328
    10. 'Weights' → logprob: -19.892353057861328

Token 261: '(value' (ID: 6333)
  Prédit: '(value'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(value' → logprob: -0.00010044389637187123
    2. '(' → logprob: -9.250100135803223
    3. 'value' → logprob: -12.375100135803223
    4. '(weight' → logprob: -17.00010108947754
    5. '(Value' → logprob: -18.62510108947754
    6. '(b' → logprob: -19.37510108947754
    7. ' (' → logprob: -20.12510108947754
    8. ')value' → logprob: -20.12510108947754
    9. '```' → logprob: -20.25010108947754
    10. '"value' → logprob: -20.37510108947754

Token 262: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -2.45848218582978e-06
    2. ')
' → logprob: -13.87500286102295
    3. '<|end|>' → logprob: -14.00000286102295
    4. ' )' → logprob: -14.75000286102295
    5. ')return' → logprob: -16.125001907348633
    6. '<|end|>' → logprob: -16.500001907348633
    7. '),' → logprob: -18.125001907348633
    8. ')

' → logprob: -18.375001907348633
    9. ')}' → logprob: -18.375001907348633
    10. '   ' → logprob: -18.375001907348633

Token 263: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 264: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.3390938341617584
    2. '   ' → logprob: -1.339093804359436
    3. '<|end|>' → logprob: -3.8390939235687256
    4. 'class' → logprob: -6.5890936851501465
    5. ' def' → logprob: -6.7140936851501465
    6. ')' → logprob: -8.089094161987305
    7. ' ' → logprob: -8.589094161987305
    8. '#' → logprob: -8.589094161987305
    9. '```' → logprob: -8.964094161987305
    10. '    
' → logprob: -8.964094161987305

Token 265: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.12713776528835297
    2. '__' → logprob: -2.1271376609802246
    3. ' ' → logprob: -9.502138137817383
    4. ' add' → logprob: -10.252138137817383
    5. '_add' → logprob: -10.252138137817383
    6. ' ' → logprob: -11.127138137817383
    7. ' _' → logprob: -11.252138137817383
    8. 'add' → logprob: -11.252138137817383
    9. ' def' → logprob: -12.002138137817383
    10. '_repr' → logprob: -12.252138137817383

Token 266: 'add' (ID: 964)
  Prédit: 'eq'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'eq' → logprob: -0.10363224893808365
    2. 'repr' → logprob: -2.3536322116851807
    3. 'str' → logprob: -5.85363245010376
    4. 'add' → logprob: -8.103631973266602
    5. 'init' → logprob: -8.353631973266602
    6. 'int' → logprob: -11.353631973266602
    7. 'lt' → logprob: -14.353631973266602
    8. 'mul' → logprob: -16.4786319732666
    9. 'hash' → logprob: -18.6036319732666
    10. ' eq' → logprob: -19.6036319732666

Token 267: '__(' (ID: 8241)
  Prédit: '__('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.4746834933757782
    2. '__' → logprob: -0.9746835231781006
    3. '_' → logprob: -8.34968376159668
    4. '(' → logprob: -8.84968376159668
    5. '__('' → logprob: -9.22468376159668
    6. '__(
' → logprob: -9.22468376159668
    7. '__((' → logprob: -11.72468376159668
    8. '__("' → logprob: -11.72468376159668
    9. '(self' → logprob: -12.34968376159668
    10. '__(*' → logprob: -12.59968376159668

Token 268: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0024930182844400406
    2. ' self' → logprob: -6.002492904663086
    3. 'other' → logprob: -11.002492904663086
    4. ' other' → logprob: -14.377492904663086
    5. ' ' → logprob: -16.002492904663086
    6. '   ' → logprob: -18.002492904663086
    7. '(self' → logprob: -18.252492904663086
    8. ',' → logprob: -19.127492904663086
    9. '	self' → logprob: -19.752492904663086
    10. ')' → logprob: -20.002492904663086

Token 269: ',' (ID: 11)
  Prédit: '__('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.4744469225406647
    2. '__' → logprob: -0.9744468927383423
    3. '__((' → logprob: -9.224447250366211
    4. '__(*' → logprob: -9.724447250366211
    5. '__(
' → logprob: -9.974447250366211
    6. 'self' → logprob: -10.099447250366211
    7. '(self' → logprob: -10.224447250366211
    8. '__('' → logprob: -10.724447250366211
    9. '(' → logprob: -10.849447250366211
    10. '__,' → logprob: -10.974447250366211

Token 270: ' other' (ID: 1273)
  Prédit: ' other'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' other' → logprob: -0.5759406089782715
    2. 'other' → logprob: -0.8259406089782715
    3. ' o' → logprob: -14.70094108581543
    4. '(other' → logprob: -15.07594108581543
    5. 'Other' → logprob: -15.07594108581543
    6. ' oth' → logprob: -16.82594108581543
    7. '_other' → logprob: -17.20094108581543
    8. 'o' → logprob: -17.32594108581543
    9. 'oth' → logprob: -17.57594108581543
    10. '.other' → logprob: -17.70094108581543

Token 271: ':' (ID: 25)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.039422936737537384
    2. ':' → logprob: -3.5394229888916016
    3. '):
' → logprob: -5.414422988891602
    4. ')' → logprob: -5.664422988891602
    5. ' ):' → logprob: -6.914422988891602
    6. '<|end|>' → logprob: -7.789422988891602
    7. '<|end|>' → logprob: -9.164422988891602
    8. ' :' → logprob: -9.539422988891602
    9. '):
' → logprob: -10.414422988891602
    10. ' ' → logprob: -10.914422988891602

Token 272: ' '' (ID: 461)
  Prédit: ' other'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' other' → logprob: -0.8116008043289185
    2. 'Weight' → logprob: -1.5616008043289185
    3. ' Weight' → logprob: -2.061600685119629
    4. 'other' → logprob: -2.561600685119629
    5. ' ' → logprob: -2.686600685119629
    6. ' weight' → logprob: -3.561600685119629
    7. ')' → logprob: -3.686600685119629
    8. ' '' → logprob: -5.561600685119629
    9. '<|end|>' → logprob: -5.561600685119629
    10. 'weight' → logprob: -6.061600685119629

Token 273: 'Weight' (ID: 10843)
  Prédit: 'Weight'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Weight' → logprob: -0.0052342405542731285
    2. ' Weight' → logprob: -5.255234241485596
    3. 'Unit' → logprob: -15.505233764648438
    4. 'Weighted' → logprob: -16.005233764648438
    5. ' weight' → logprob: -16.130233764648438
    6. '.Weight' → logprob: -17.255233764648438
    7. '_weight' → logprob: -18.130233764648438
    8. ' ' → logprob: -18.380233764648438
    9. 'Weights' → logprob: -18.755233764648438
    10. ' ' → logprob: -19.005233764648438

Token 274: 'Unit' (ID: 6728)
  Prédit: 'Unit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Unit' → logprob: -1.9361264946837764e-07
    2. 'Weight' → logprob: -16.25
    3. '<Unit' → logprob: -17.75
    4. ' Unit' → logprob: -18.0
    5. '(Unit' → logprob: -19.25
    6. '_UNIT' → logprob: -20.875
    7. '_unit' → logprob: -21.125
    8. 'Units' → logprob: -21.25
    9. '.Unit' → logprob: -21.5
    10. ' unit' → logprob: -21.75

Token 275: '')' (ID: 1542)
  Prédit: '')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '')' → logprob: -0.011677202768623829
    2. ''):' → logprob: -5.011677265167236
    3. ')' → logprob: -5.636677265167236
    4. ''):
' → logprob: -6.636677265167236
    5. '):' → logprob: -10.511676788330078
    6. ' ')' → logprob: -10.636676788330078
    7. ''):
' → logprob: -11.761676788330078
    8. ':' → logprob: -12.511676788330078
    9. ' '' → logprob: -12.636676788330078
    10. '")' → logprob: -13.261676788330078

Token 276: ' ->' (ID: 2747)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.002238993300125003
    2. '):' → logprob: -6.127239227294922
    3. ':
' → logprob: -10.752239227294922
    4. '():' → logprob: -11.752239227294922
    5. '):
' → logprob: -11.877239227294922
    6. ')' → logprob: -12.002239227294922
    7. ':return' → logprob: -12.252239227294922
    8. '->' → logprob: -13.502239227294922
    9. '<|end|>' → logprob: -14.377239227294922
    10. ']:' → logprob: -14.377239227294922

Token 277: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.0943448469042778
    2. ' '' → logprob: -2.8443448543548584
    3. 'Weight' → logprob: -3.4693448543548584
    4. ' Weight' → logprob: -7.344344615936279
    5. ''s' → logprob: -10.094345092773438
    6. 'Unit' → logprob: -11.594345092773438
    7. '"' → logprob: -11.844345092773438
    8. ''S' → logprob: -13.219345092773438
    9. ''class' → logprob: -13.469345092773438
    10. ''int' → logprob: -13.594345092773438

Token 278: 'Weight' (ID: 10843)
  Prédit: 'Weight'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Weight' → logprob: -0.0052342405542731285
    2. ' Weight' → logprob: -5.255234241485596
    3. ' weight' → logprob: -15.255233764648438
    4. 'Weighted' → logprob: -15.755233764648438
    5. '.Weight' → logprob: -16.880233764648438
    6. '_weight' → logprob: -17.130233764648438
    7. 'Unit' → logprob: -17.505233764648438
    8. 'We' → logprob: -17.630233764648438
    9. 'Weights' → logprob: -17.880233764648438
    10. 'weight' → logprob: -18.255233764648438

Token 279: 'Unit' (ID: 6728)
  Prédit: 'Unit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Unit' → logprob: -4.60414821645827e-06
    2. 'Weight' → logprob: -12.375004768371582
    3. '<Unit' → logprob: -16.000003814697266
    4. 'unit' → logprob: -16.375003814697266
    5. ' Unit' → logprob: -17.125003814697266
    6. '(Unit' → logprob: -17.500003814697266
    7. 'Units' → logprob: -18.000003814697266
    8. 'User' → logprob: -18.250003814697266
    9. 'Uint' → logprob: -18.375003814697266
    10. '[' → logprob: -18.375003814697266

Token 280: '':
' (ID: 7669)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.11653225123882294
    2. ':
' → logprob: -2.241532325744629
    3. '':' → logprob: -6.491532325744629
    4. '):
' → logprob: -7.116532325744629
    5. '):' → logprob: -7.366532325744629
    6. '':
' → logprob: -7.616532325744629
    7. '():
' → logprob: -9.366532325744629
    8. '<|end|>' → logprob: -10.741532325744629
    9. ''' → logprob: -10.991532325744629
    10. '   ' → logprob: -11.116532325744629

Token 281: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.007623184472322464
    2. ' 
' → logprob: -5.882623195648193
    3. ' return' → logprob: -6.632623195648193
    4. 'return' → logprob: -7.132623195648193
    5. '   ' → logprob: -7.257623195648193
    6. '        
' → logprob: -7.632623195648193
    7. '    ' → logprob: -7.757623195648193
    8. ' if' → logprob: -8.132622718811035
    9. '  
' → logprob: -9.132622718811035
    10. '+' → logprob: -9.382622718811035

Token 282: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.17094510793685913
    2. '       ' → logprob: -1.920945167541504
    3. ' return' → logprob: -4.545945167541504
    4. 'if' → logprob: -10.545945167541504
    5. 'result' → logprob: -11.920945167541504
    6. '        
' → logprob: -12.545945167541504
    7. '```' → logprob: -13.045945167541504
    8. 'Return' → logprob: -13.295945167541504
    9. '{return' → logprob: -13.295945167541504
    10. ':return' → logprob: -13.420945167541504

Token 283: ' Weight' (ID: 19983)
  Prédit: 'Weight'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Weight' → logprob: -0.01818939670920372
    2. ' Weight' → logprob: -4.018189430236816
    3. 'self' → logprob: -10.518189430236816
    4. 'Type' → logprob: -11.643189430236816
    5. 'type' → logprob: -13.393189430236816
    6. ' self' → logprob: -13.518189430236816
    7. ' type' → logprob: -14.268189430236816
    8. 'weight' → logprob: -16.8931884765625
    9. ' weight' → logprob: -17.1431884765625
    10. 'cls' → logprob: -17.2681884765625

Token 284: 'Unit' (ID: 6728)
  Prédit: 'Unit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Unit' → logprob: 0.0
    2. '(Unit' → logprob: -18.5
    3. 'Weight' → logprob: -18.875
    4. '<Unit' → logprob: -19.0
    5. 'unit' → logprob: -19.875
    6. '_unit' → logprob: -20.25
    7. '(' → logprob: -20.375
    8. 'Units' → logprob: -21.0
    9. 'Uint' → logprob: -21.25
    10. 'User' → logprob: -21.25

Token 285: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -1.759734732331708e-05
    2. '(' → logprob: -11.000017166137695
    3. 'self' → logprob: -14.000017166137695
    4. '((' → logprob: -18.250017166137695
    5. '(max' → logprob: -19.125017166137695
    6. ' (' → logprob: -20.375017166137695
    7. '(
' → logprob: -20.500017166137695
    8. '(this' → logprob: -20.875017166137695
    9. '(min' → logprob: -21.750017166137695
    10. ' self' → logprob: -22.000017166137695

Token 286: '.b' (ID: 1292)
  Prédit: '.b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.b' → logprob: -0.003178901970386505
    2. '.' → logprob: -5.75317907333374
    3. ' .' → logprob: -14.628178596496582
    4. 'b' → logprob: -14.753178596496582
    5. '.б' → logprob: -15.878178596496582
    6. ').' → logprob: -16.1281795501709
    7. '.bump' → logprob: -17.2531795501709
    8. '.B' → logprob: -17.2531795501709
    9. '.s' → logprob: -17.5031795501709
    10. '	b' → logprob: -17.8781795501709

Token 287: 'ok' (ID: 525)
  Prédit: 'ok'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ok' → logprob: -1.5332478142227046e-05
    2. 'o' → logprob: -12.625015258789062
    3. 'okho' → logprob: -12.750015258789062
    4. '.ok' → logprob: -13.500015258789062
    5. 'ob' → logprob: -14.000015258789062
    6. 'k' → logprob: -14.250015258789062
    7. '	ok' → logprob: -14.500015258789062
    8. '_ok' → logprob: -14.750015258789062
    9. '

' → logprob: -14.875015258789062
    10. 'okka' → logprob: -14.875015258789062

Token 288: 'ko' (ID: 3593)
  Prédit: 'ko'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ko' → logprob: -0.00018625585653353482
    2. 'ко' → logprob: -9.1251859664917
    3. ' ko' → logprob: -10.6251859664917
    4. 'o' → logprob: -11.1251859664917
    5. 'k' → logprob: -11.3751859664917
    6. 'bo' → logprob: -12.5001859664917
    7. '```' → logprob: -12.9376859664917
    8. '   ' → logprob: -13.0001859664917
    9. 'co' → logprob: -13.5001859664917
    10. 'こ' → logprob: -13.5001859664917

Token 289: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.20141343772411346
    2. '+' → logprob: -1.7014133930206299
    3. '+self' → logprob: -16.826414108276367
    4. ' +
' → logprob: -17.701414108276367
    5. '+b' → logprob: -18.576414108276367
    6. ' ' → logprob: -18.701414108276367
    7. '+
' → logprob: -18.826414108276367
    8. ' ' → logprob: -18.826414108276367
    9. '＋' → logprob: -19.326414108276367
    10. ' plus' → logprob: -19.701414108276367

Token 290: ' other' (ID: 1273)
  Prédit: 'other'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'other' → logprob: -0.38687339425086975
    2. ' other' → logprob: -1.1368733644485474
    3. '(other' → logprob: -13.261873245239258
    4. '1' → logprob: -15.011873245239258
    5. '_other' → logprob: -15.761873245239258
    6. 'Other' → logprob: -16.511873245239258
    7. ' ' → logprob: -16.761873245239258
    8. '.other' → logprob: -17.511873245239258
    9. 'OTHER' → logprob: -19.511873245239258
    10. 'others' → logprob: -19.761873245239258

Token 291: '.b' (ID: 1292)
  Prédit: '.b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.b' → logprob: -7.505351095460355e-05
    2. '.' → logprob: -9.625075340270996
    3. ' .' → logprob: -12.625075340270996
    4. '.б' → logprob: -13.125075340270996
    5. ').' → logprob: -13.625075340270996
    6. '.wicket' → logprob: -15.000075340270996
    7. '```' → logprob: -15.375075340270996
    8. '.bukkit' → logprob: -15.625075340270996
    9. '.pkl' → logprob: -15.750075340270996
    10. '​.' → logprob: -16.00007438659668

Token 292: 'ok' (ID: 525)
  Prédit: 'ok'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ok' → logprob: -0.00018280261429026723
    2. '.b' → logprob: -9.37518310546875
    3. '.ok' → logprob: -9.87518310546875
    4. '.' → logprob: -11.62518310546875
    5. '```' → logprob: -11.62518310546875
    6. 'b' → logprob: -11.87518310546875
    7. 'bok' → logprob: -12.37518310546875
    8. 'ок' → logprob: -12.50018310546875
    9. 'okho' → logprob: -13.12518310546875
    10. ' bok' → logprob: -13.50018310546875

Token 293: 'ko' (ID: 3593)
  Prédit: 'ko'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ko' → logprob: -0.00015109812375158072
    2. 'ко' → logprob: -9.250150680541992
    3. 'bo' → logprob: -10.250150680541992
    4. '```' → logprob: -13.125150680541992
    5. 'o' → logprob: -13.250150680541992
    6. '`' → logprob: -13.375150680541992
    7. '_' → logprob: -13.375150680541992
    8. '
' → logprob: -13.687650680541992
    9. 'こ' → logprob: -13.687650680541992
    10. '

' → logprob: -13.937650680541992

Token 294: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -4.320199877838604e-07
    2. ' )' → logprob: -15.625
    3. ')
' → logprob: -16.25
    4. '<|end|>' → logprob: -16.625
    5. '),' → logprob: -17.875
    6. ')return' → logprob: -18.125
    7. ')}' → logprob: -18.75
    8. ')#' → logprob: -19.25
    9. '}' → logprob: -19.875
    10. '   ' → logprob: -20.25

Token 295: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 296: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.023361360654234886
    2. '<|end|>' → logprob: -4.1483612060546875
    3. ' def' → logprob: -5.0233612060546875
    4. '   ' → logprob: -7.7733612060546875
    5. '```' → logprob: -9.523361206054688
    6. ')' → logprob: -9.523361206054688
    7. '.' → logprob: -9.648361206054688
    8. ' ' → logprob: -10.273361206054688
    9. '<|end|>' → logprob: -11.523361206054688
    10. '#' → logprob: -11.898361206054688

Token 297: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.011578945443034172
    2. '__' → logprob: -5.0115790367126465
    3. ' def' → logprob: -5.3865790367126465
    4. 'def' → logprob: -8.261578559875488
    5. ' ' → logprob: -11.511578559875488
    6. '.__' → logprob: -13.011578559875488
    7. ' ==' → logprob: -14.011578559875488
    8. ' ' → logprob: -14.136578559875488
    9. ' _' → logprob: -14.261578559875488
    10. ' =' → logprob: -15.386578559875488

Token 298: 'eq' (ID: 21725)
  Prédit: 'eq'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'eq' → logprob: -0.13158729672431946
    2. 'sub' → logprob: -2.131587266921997
    3. 'repr' → logprob: -5.381587505340576
    4. 'str' → logprob: -10.631587028503418
    5. 'mul' → logprob: -10.756587028503418
    6. 'r' → logprob: -13.131587028503418
    7. 'lt' → logprob: -15.131587028503418
    8. ' eq' → logprob: -17.381587982177734
    9. 'init' → logprob: -17.756587982177734
    10. 'i' → logprob: -18.006587982177734

Token 299: '__(' (ID: 8241)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.048900503665208817
    2. '__(' → logprob: -3.048900604248047
    3. '__((' → logprob: -8.673900604248047
    4. '__('' → logprob: -9.298900604248047
    5. '__(*' → logprob: -10.423900604248047
    6. '__(
' → logprob: -12.298900604248047
    7. '==' → logprob: -12.423900604248047
    8. '__("' → logprob: -12.673900604248047
    9. '__.__' → logprob: -12.923900604248047
    10. '(' → logprob: -13.298900604248047

Token 300: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0001294030516874045
    2. ' self' → logprob: -9.875129699707031
    3. '__' → logprob: -10.625129699707031
    4. 'other' → logprob: -10.875129699707031
    5. '__(' → logprob: -11.375129699707031
    6. ''' → logprob: -11.625129699707031
    7. ')' → logprob: -11.750129699707031
    8. '(self' → logprob: -12.875129699707031
    9. ''s' → logprob: -13.625129699707031
    10. '=' → logprob: -14.375129699707031

Token 301: ',' (ID: 11)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '__' → logprob: -0.12754520773887634
    2. '__(' → logprob: -2.127545118331909
    3. '__((' → logprob: -8.002545356750488
    4. '__('' → logprob: -8.752545356750488
    5. '__(*' → logprob: -9.627545356750488
    6. '(' → logprob: -10.127545356750488
    7. '__(
' → logprob: -11.627545356750488
    8. '__.__' → logprob: -12.377545356750488
    9. '__("' → logprob: -13.252545356750488
    10. '__,' → logprob: -14.127545356750488

Token 302: ' other' (ID: 1273)
  Prédit: 'other'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'other' → logprob: -0.16022849082946777
    2. ' other' → logprob: -1.9102284908294678
    3. 'self' → logprob: -12.410228729248047
    4. 'Other' → logprob: -15.660228729248047
    5. ' self' → logprob: -17.285228729248047
    6. '(other' → logprob: -17.910228729248047
    7. '_other' → logprob: -19.910228729248047
    8. '.other' → logprob: -19.910228729248047
    9. 'oth' → logprob: -21.285228729248047
    10. ' oth' → logprob: -21.535228729248047

Token 303: ')' (ID: 8)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.04241150990128517
    2. ')' → logprob: -3.5424115657806396
    3. '):' → logprob: -4.7924113273620605
    4. ' :' → logprob: -6.4174113273620605
    5. ',' → logprob: -6.6674113273620605
    6. '<|end|>' → logprob: -7.1674113273620605
    7. '<|end|>' → logprob: -8.417411804199219
    8. '):
' → logprob: -9.042411804199219
    9. ' )' → logprob: -9.417411804199219
    10. ')==' → logprob: -10.792411804199219

Token 304: ' ->' (ID: 2747)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -1.1549006700515747
    2. '(self' → logprob: -1.4049006700515747
    3. ')' → logprob: -1.5299006700515747
    4. ',' → logprob: -2.654900550842285
    5. 'self' → logprob: -3.529900550842285
    6. '<|end|>' → logprob: -3.529900550842285
    7. ' self' → logprob: -3.654900550842285
    8. ' if' → logprob: -4.029900550842285
    9. '(' → logprob: -4.029900550842285
    10. ' (' → logprob: -5.154900550842285

Token 305: ' bool' (ID: 3792)
  Prédit: ' isinstance'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' isinstance' → logprob: -0.021334676072001457
    2. 'is' → logprob: -3.896334648132324
    3. 'False' → logprob: -7.396334648132324
    4. 'bool' → logprob: -9.396334648132324
    5. ' bool' → logprob: -10.771334648132324
    6. 'True' → logprob: -10.896334648132324
    7. ' False' → logprob: -11.021334648132324
    8. ' is' → logprob: -11.146334648132324
    9. 'Not' → logprob: -12.146334648132324
    10. 'Bool' → logprob: -12.896334648132324

Token 306: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0032518659718334675
    2. ':
' → logprob: -5.878252029418945
    3. '<|end|>' → logprob: -8.878252029418945
    4. '=' → logprob: -9.003252029418945
    5. ' and' → logprob: -9.878252029418945
    6. ',' → logprob: -11.003252029418945
    7. '<|end|>' → logprob: -11.128252029418945
    8. ':

' → logprob: -11.503252029418945
    9. '=True' → logprob: -11.503252029418945
    10. ' :' → logprob: -11.628252029418945

Token 307: '       ' (ID: 309)
  Prédit: ' isinstance'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' isinstance' → logprob: -0.2411881685256958
    2. 'is' → logprob: -1.9911881685256958
    3. '       ' → logprob: -2.7411880493164062
    4. 'return' → logprob: -4.616188049316406
    5. ' return' → logprob: -6.366188049316406
    6. '   ' → logprob: -6.491188049316406
    7. ' is' → logprob: -9.866188049316406
    8. 'self' → logprob: -10.241188049316406
    9. '(is' → logprob: -10.866188049316406
    10. '    ' → logprob: -11.116188049316406

Token 308: ' if' (ID: 538)
  Prédit: 'is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'is' → logprob: -0.008420956321060658
    2. 'return' → logprob: -5.258420944213867
    3. ' isinstance' → logprob: -5.758420944213867
    4. ' return' → logprob: -12.133420944213867
    5. '       ' → logprob: -12.258420944213867
    6. '   ' → logprob: -12.258420944213867
    7. '(is' → logprob: -12.258420944213867
    8. 'self' → logprob: -12.508420944213867
    9. 'if' (adapté à ' if') → logprob: -13.383420944213867
    10. 'not' → logprob: -14.008420944213867

Token 309: ' not' (ID: 625)
  Prédit: 'not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'not' → logprob: -0.575996458530426
    2. ' not' → logprob: -0.825996458530426
    3. ' isinstance' → logprob: -9.825996398925781
    4. 'other' → logprob: -12.950996398925781
    5. 'is' → logprob: -14.575996398925781
    6. '	not' → logprob: -15.450996398925781
    7. ' other' → logprob: -17.20099639892578
    8. '(not' → logprob: -18.45099639892578
    9. 'Not' → logprob: -18.70099639892578
    10. 'self' → logprob: -19.07599639892578

Token 310: ' isinstance' (ID: 25889)
  Prédit: 'is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'is' → logprob: -0.01815064437687397
    2. ' isinstance' → logprob: -4.018150806427002
    3. '(is' → logprob: -14.143150329589844
    4. 'Is' → logprob: -17.268150329589844
    5. '
' → logprob: -18.393150329589844
    6. 'has' → logprob: -18.393150329589844
    7. ' is' → logprob: -18.768150329589844
    8. 'other' → logprob: -19.018150329589844
    9. 'instance' → logprob: -19.643150329589844
    10. '.is' → logprob: -20.143150329589844

Token 311: '(other' (ID: 32550)
  Prédit: '(other'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(other' → logprob: -1.318681188422488e-05
    2. 'other' → logprob: -11.25001335144043
    3. ' other' → logprob: -16.37501335144043
    4. '(self' → logprob: -17.12501335144043
    5. 'Other' → logprob: -17.62501335144043
    6. '(' → logprob: -19.87501335144043
    7. '_other' → logprob: -22.75001335144043
    8. 'OTHER' → logprob: -22.75001335144043
    9. '.other' → logprob: -23.25001335144043
    10. 'self' → logprob: -24.12501335144043

Token 312: ',' (ID: 11)
  Prédit: '(other'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(other' → logprob: -4.143808109802194e-05
    2. 'other' → logprob: -10.500041007995605
    3. '(self' → logprob: -11.375041007995605
    4. '(' → logprob: -13.500041007995605
    5. ',' → logprob: -14.125041007995605
    6. ' other' → logprob: -16.500041961669922
    7. ' (' → logprob: -16.750041961669922
    8. 'self' → logprob: -17.000041961669922
    9. 'Other' → logprob: -17.625041961669922
    10. '(or' → logprob: -20.625041961669922

Token 313: ' Weight' (ID: 19983)
  Prédit: 'Weight'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Weight' → logprob: -7.541112427134067e-05
    2. ' Weight' → logprob: -9.500075340270996
    3. 'Unit' → logprob: -15.250075340270996
    4. 'self' → logprob: -16.500076293945312
    5. 'Weighted' → logprob: -16.500076293945312
    6. 'Weights' → logprob: -17.250076293945312
    7. 'Type' → logprob: -19.625076293945312
    8. 'Width' → logprob: -19.875076293945312
    9. '.Weight' → logprob: -20.125076293945312
    10. ' ' → logprob: -20.625076293945312

Token 314: 'Unit' (ID: 6728)
  Prédit: 'Unit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Unit' → logprob: -7.896309739408025e-07
    2. 'Weight' → logprob: -14.500000953674316
    3. '<Unit' → logprob: -15.500000953674316
    4. 'unit' → logprob: -16.875
    5. ' Unit' → logprob: -18.25
    6. '(Unit' → logprob: -18.375
    7. 'User' → logprob: -19.75
    8. '.Unit' → logprob: -20.5
    9. '_unit' → logprob: -21.5
    10. ')' → logprob: -21.625

Token 315: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.10023266077041626
    2. '):' → logprob: -2.3502326011657715
    3. ')' → logprob: -10.97523307800293
    4. '):
' → logprob: -12.35023307800293
    5. '):

' → logprob: -12.60023307800293
    6. ' ):
' → logprob: -14.22523307800293
    7. 'self' → logprob: -15.60023307800293
    8. ' ):' → logprob: -15.85023307800293
    9. 'Weight' → logprob: -16.72523307800293
    10. ':' → logprob: -16.85023307800293

Token 316: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.16157972812652588
    2. 'return' → logprob: -2.1615796089172363
    3. '       ' → logprob: -3.7865796089172363
    4. ' return' → logprob: -4.536579608917236
    5. 'True' → logprob: -7.911579608917236
    6. 'False' → logprob: -8.536580085754395
    7. '
' → logprob: -10.286580085754395
    8. '   ' → logprob: -10.786580085754395
    9. ' True' → logprob: -10.786580085754395
    10. ':return' → logprob: -11.161580085754395

Token 317: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.4755021333694458
    2. 'False' → logprob: -0.9755021333694458
    3. ' return' → logprob: -7.350502014160156
    4. '       ' → logprob: -7.350502014160156
    5. '           ' → logprob: -9.725502014160156
    6. ' False' → logprob: -9.850502014160156
    7. '
' → logprob: -11.600502014160156
    8. '   ' → logprob: -11.975502014160156
    9. 'Not' → logprob: -12.975502014160156
    10. 'Return' → logprob: -13.100502014160156

Token 318: ' False' (ID: 7983)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'False' → logprob: -0.00026419671485200524
    2. 'Not' → logprob: -8.250264167785645
    3. ' False' → logprob: -12.750264167785645
    4. ' Not' → logprob: -19.37526512145996
    5. '(False' → logprob: -20.00026512145996
    6. '=False' → logprob: -21.62526512145996
    7. 'false' → logprob: -22.12526512145996
    8. '   ' → logprob: -22.62526512145996
    9. 'True' → logprob: -23.25026512145996
    10. '```' → logprob: -23.37526512145996

Token 319: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0002625278721097857
    2. ' or' → logprob: -9.000262260437012
    3. ' and' → logprob: -10.000262260437012
    4. '
' → logprob: -10.875262260437012
    5. 'return' → logprob: -11.000262260437012
    6. ' return' → logprob: -11.750262260437012
    7. '           ' → logprob: -12.000262260437012
    8. '   ' → logprob: -12.250262260437012
    9. '        
' → logprob: -12.250262260437012
    10. '	' → logprob: -12.375262260437012

Token 320: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0007185076246969402
    2. 'return' → logprob: -7.625718593597412
    3. ' return' → logprob: -8.750718116760254
    4. '
' → logprob: -9.625718116760254
    5. '        
' → logprob: -12.875718116760254
    6. '           ' → logprob: -14.375718116760254
    7. '   ' → logprob: -14.375718116760254
    8. '	' → logprob: -14.875718116760254
    9. ' 
' → logprob: -15.375718116760254
    10. '	return' → logprob: -15.500718116760254

Token 321: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.0103691928088665
    2. ' return' → logprob: -5.260369300842285
    3. '       ' → logprob: -5.385369300842285
    4. '
' → logprob: -7.760369300842285
    5. 'self' → logprob: -9.135369300842285
    6. '{return' → logprob: -13.135369300842285
    7. '	return' → logprob: -14.010369300842285
    8. '        
' → logprob: -14.260369300842285
    9. '   ' → logprob: -14.510369300842285
    10. ' self' → logprob: -15.510369300842285

Token 322: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.006715370807796717
    2. ' self' → logprob: -5.006715297698975
    3. '(self' → logprob: -18.756715774536133
    4. '   ' → logprob: -20.131715774536133
    5. '	self' → logprob: -20.506715774536133
    6. '       ' → logprob: -21.506715774536133
    7. 'Self' → logprob: -22.506715774536133
    8. ' ' → logprob: -22.506715774536133
    9. ' ' → logprob: -22.881715774536133
    10. '[self' → logprob: -23.131715774536133

Token 323: '.b' (ID: 1292)
  Prédit: '.b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.b' → logprob: -4.2987729102605954e-05
    2. '.' → logprob: -10.125042915344238
    3. 'b' → logprob: -13.500042915344238
    4. ' .' → logprob: -14.750042915344238
    5. '.б' → logprob: -15.250042915344238
    6. '.bukkit' → logprob: -15.500042915344238
    7. '.weight' → logprob: -16.375043869018555
    8. '.to' → logprob: -16.625043869018555
    9. '.wicket' → logprob: -16.625043869018555
    10. '.eql' → logprob: -16.625043869018555

Token 324: 'ok' (ID: 525)
  Prédit: 'ok'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ok' → logprob: -4.246537173457909e-06
    2. 'k' → logprob: -13.500003814697266
    3. 'okho' → logprob: -14.875003814697266
    4. 'bok' → logprob: -15.250003814697266
    5. 'ок' → logprob: -15.500003814697266
    6. 'OK' → logprob: -15.625003814697266
    7. 'o' → logprob: -15.625003814697266
    8. '
' → logprob: -15.750003814697266
    9. 'kok' → logprob: -15.875003814697266
    10. '```' → logprob: -16.000003814697266

Token 325: 'ko' (ID: 3593)
  Prédit: 'ko'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ko' → logprob: -0.0004884536610916257
    2. 'o' → logprob: -7.75048828125
    3. 'ко' → logprob: -10.75048828125
    4. 'bo' → logprob: -11.12548828125
    5. 'k' → logprob: -12.50048828125
    6. 'ok' → logprob: -12.62548828125
    7. 'kok' → logprob: -13.00048828125
    8. 'co' → logprob: -13.75048828125
    9. 'oko' → logprob: -13.93798828125
    10. ' ko' → logprob: -14.00048828125

Token 326: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.023245595395565033
    2. '==' → logprob: -3.7732455730438232
    3. '=' → logprob: -17.148244857788086
    4. ' ' → logprob: -17.523244857788086
    5. ' ' → logprob: -17.773244857788086
    6. ')==' → logprob: -17.898244857788086
    7. '===' → logprob: -18.023244857788086
    8. '==
' → logprob: -18.023244857788086
    9. '()==' → logprob: -18.898244857788086
    10. '   ' → logprob: -18.898244857788086

Token 327: ' other' (ID: 1273)
  Prédit: 'other'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'other' → logprob: -0.006715370807796717
    2. ' other' → logprob: -5.006715297698975
    3. '(other' → logprob: -21.381715774536133
    4. 'Other' → logprob: -21.381715774536133
    5. '.other' → logprob: -21.881715774536133
    6. '_other' → logprob: -22.506715774536133
    7. 'self' → logprob: -22.506715774536133
    8. '其他' → logprob: -25.006715774536133
    9. 'OTHER' → logprob: -26.131715774536133
    10. '
' → logprob: -26.881715774536133

Token 328: '.b' (ID: 1292)
  Prédit: '.b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.b' → logprob: -8.256334695033729e-05
    2. 'b' → logprob: -9.750082969665527
    3. '.' → logprob: -11.000082969665527
    4. ' .' → logprob: -11.875082969665527
    5. 'bok' → logprob: -15.625082969665527
    6. '.bukkit' → logprob: -16.25008201599121
    7. '	b' → logprob: -16.75008201599121
    8. '.б' → logprob: -16.87508201599121
    9. '.ok' → logprob: -16.87508201599121
    10. 'B' → logprob: -17.62508201599121

Token 329: 'ok' (ID: 525)
  Prédit: 'ok'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ok' → logprob: -6.869017852295656e-06
    2. 'ko' → logprob: -13.000006675720215
    3. 'k' → logprob: -13.625006675720215
    4. 'okho' → logprob: -13.875006675720215
    5. 'o' → logprob: -14.250006675720215
    6. 'ок' → logprob: -14.625006675720215
    7. 'bok' → logprob: -15.125006675720215
    8. '
' → logprob: -15.875006675720215
    9. 'b' → logprob: -16.12500762939453
    10. 'kok' → logprob: -16.62500762939453

Token 330: 'ko' (ID: 3593)
  Prédit: 'ko'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ko' → logprob: -3.857719275401905e-05
    2. 'こ' → logprob: -10.875038146972656
    3. 'ко' → logprob: -11.000038146972656
    4. 'bo' → logprob: -13.250038146972656
    5. 'k' → logprob: -15.375038146972656
    6. 'o' → logprob: -15.375038146972656
    7. ' ko' → logprob: -16.250038146972656
    8. '코' → logprob: -16.500038146972656
    9. 'コ' → logprob: -16.500038146972656
    10. '```' → logprob: -16.750038146972656

Token 331: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 332: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1856466680765152
    2. '<|end|>' → logprob: -1.810646653175354
    3. '
' → logprob: -5.5606465339660645
    4. 'def' → logprob: -6.9356465339660645
    5. '<|end|>' → logprob: -8.560647010803223
    6. '    
' → logprob: -8.560647010803223
    7. ' ' → logprob: -9.060647010803223
    8. ':' → logprob: -9.435647010803223
    9. '    ' → logprob: -9.435647010803223
    10. '```' → logprob: -9.435647010803223

Token 333: ' def' (ID: 1056)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.9078139662742615
    2. '<|end|>' → logprob: -0.9078139662742615
    3. 'def' (adapté à ' def') → logprob: -1.6578140258789062
    4. '```' → logprob: -7.907814025878906
    5. '<|end|>' → logprob: -7.907814025878906
    6. '
' → logprob: -8.032814025878906
    7. ' def' → logprob: -8.032814025878906
    8. '...' → logprob: -8.282814025878906
    9. '@dat' → logprob: -8.282814025878906
    10. '#' → logprob: -8.782814025878906

Token 334: ' __' (ID: 2516)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.01822591759264469
    2. ' __' → logprob: -4.018226146697998
    3. 'def' → logprob: -10.01822566986084
    4. 'repr' → logprob: -10.39322566986084
    5. ' def' → logprob: -14.89322566986084
    6. '.__' → logprob: -15.64322566986084
    7. '_repr' → logprob: -15.64322566986084
    8. ' repr' → logprob: -17.018226623535156
    9. '   ' → logprob: -18.018226623535156
    10. '___' → logprob: -18.143226623535156

Token 335: 'lt' (ID: 3199)
  Prédit: 'repr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'repr' → logprob: -0.10089079290628433
    2. 'str' → logprob: -2.350890874862671
    3. 'lt' → logprob: -7.600890636444092
    4. 'hash' → logprob: -8.60089111328125
    5. 'int' → logprob: -18.85089111328125
    6. 'le' → logprob: -19.60089111328125
    7. 'mul' → logprob: -19.72589111328125
    8. '_repr' → logprob: -20.72589111328125
    9. 'rep' → logprob: -20.85089111328125
    10. 'init' → logprob: -20.97589111328125

Token 336: '__(' (ID: 8241)
  Prédit: '__('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.0297914557158947
    2. '__' → logprob: -3.5297913551330566
    3. '__('' → logprob: -10.904791831970215
    4. '__(
' → logprob: -11.154791831970215
    5. '__((' → logprob: -12.154791831970215
    6. '__(*' → logprob: -13.904791831970215
    7. '(' → logprob: -14.029791831970215
    8. '__("' → logprob: -14.529791831970215
    9. '(self' → logprob: -14.529791831970215
    10. '__.__' → logprob: -15.904791831970215

Token 337: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0002100965939462185
    2. ' self' → logprob: -8.75020980834961
    3. 'other' → logprob: -9.87520980834961
    4. ' other' → logprob: -16.25020980834961
    5. 'Other' → logprob: -17.62520980834961
    6. '(self' → logprob: -17.87520980834961
    7. '	self' → logprob: -19.50020980834961
    8. ' ' → logprob: -19.62520980834961
    9. 'Self' → logprob: -19.87520980834961
    10. '
' → logprob: -20.37520980834961

Token 338: ',' (ID: 11)
  Prédit: '__('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.004597684368491173
    2. '(self' → logprob: -5.5045976638793945
    3. '(' → logprob: -7.8795976638793945
    4. '__' → logprob: -9.254597663879395
    5. '__(
' → logprob: -10.754597663879395
    6. '__('' → logprob: -11.004597663879395
    7. '__((' → logprob: -13.379597663879395
    8. '_(' → logprob: -13.504597663879395
    9. '<>(' → logprob: -13.754597663879395
    10. 'self' → logprob: -13.879597663879395

Token 339: ' other' (ID: 1273)
  Prédit: ' other'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' other' → logprob: -0.31326448917388916
    2. 'other' → logprob: -1.3132644891738892
    3. 'self' → logprob: -13.438264846801758
    4. 'Other' → logprob: -13.688264846801758
    5. ' self' → logprob: -16.063264846801758
    6. '(other' → logprob: -16.688264846801758
    7. ' ' → logprob: -19.063264846801758
    8. '.other' → logprob: -19.438264846801758
    9. '_other' → logprob: -19.563264846801758
    10. ' Other' → logprob: -21.313264846801758

Token 340: ':' (ID: 25)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.5786983966827393
    2. ':' → logprob: -1.2036983966827393
    3. ')' → logprob: -2.0786983966827393
    4. '):' → logprob: -4.95369815826416
    5. ' :' → logprob: -5.82869815826416
    6. ' ,' → logprob: -6.95369815826416
    7. ' (' → logprob: -6.95369815826416
    8. '<|end|>' → logprob: -7.70369815826416
    9. '(' → logprob: -7.95369815826416
    10. '       ' → logprob: -8.07869815826416

Token 341: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.4742501676082611
    2. ' '' → logprob: -0.9742501974105835
    3. ''s' → logprob: -9.224249839782715
    4. 'Weight' → logprob: -10.099249839782715
    5. ' Weight' → logprob: -11.599249839782715
    6. ''value' → logprob: -12.224249839782715
    7. ' ' → logprob: -12.474249839782715
    8. ''S' → logprob: -13.224249839782715
    9. ''m' → logprob: -13.224249839782715
    10. ''type' → logprob: -13.474249839782715

Token 342: 'Weight' (ID: 10843)
  Prédit: 'Weight'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Weight' → logprob: -3.292907877039397e-06
    2. 'Unit' → logprob: -12.75000286102295
    3. ' Weight' → logprob: -14.75000286102295
    4. '_weight' → logprob: -17.750003814697266
    5. '.Weight' → logprob: -17.875003814697266
    6. 'Value' → logprob: -19.500003814697266
    7. 'weight' → logprob: -19.500003814697266
    8. 'Weighted' → logprob: -19.625003814697266
    9. 'Weights' → logprob: -20.500003814697266
    10. '_WEIGHT' → logprob: -20.750003814697266

Token 343: 'Unit' (ID: 6728)
  Prédit: 'Unit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Unit' → logprob: -3.054500666621607e-06
    2. 'unit' → logprob: -13.12500286102295
    3. 'Weight' → logprob: -15.37500286102295
    4. '<Unit' → logprob: -15.37500286102295
    5. ')' → logprob: -15.50000286102295
    6. '')' → logprob: -16.375003814697266
    7. ' Unit' → logprob: -16.625003814697266
    8. '```' → logprob: -16.750003814697266
    9. '_unit' → logprob: -17.125003814697266
    10. '`)' → logprob: -18.375003814697266

Token 344: '')' (ID: 1542)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.47408756613731384
    2. '')' → logprob: -0.9740875959396362
    3. '):' → logprob: -12.724087715148926
    4. ''):
' → logprob: -12.724087715148926
    5. ')'' → logprob: -13.349087715148926
    6. ''):' → logprob: -14.099087715148926
    7. '):
' → logprob: -14.099087715148926
    8. ''' → logprob: -14.224087715148926
    9. '")' → logprob: -15.474087715148926
    10. ' ')' → logprob: -15.724087715148926

Token 345: ' ->' (ID: 2747)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.16380926966667175
    2. ')' → logprob: -2.038809299468994
    3. '(self' → logprob: -5.288809299468994
    4. '->' → logprob: -5.538809299468994
    5. '       ' → logprob: -5.788809299468994
    6. ' ->' → logprob: -6.038809299468994
    7. ',' → logprob: -6.913809299468994
    8. '   ' → logprob: -6.913809299468994
    9. ':return' → logprob: -7.038809299468994
    10. '<|end|>' → logprob: -7.163809299468994

Token 346: ' bool' (ID: 3792)
  Prédit: 'bool'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bool' → logprob: -0.0004307884373702109
    2. ' bool' → logprob: -7.750430583953857
    3. 'True' → logprob: -17.500431060791016
    4. '<bool' → logprob: -17.750431060791016
    5. ''' → logprob: -18.000431060791016
    6. '	bool' → logprob: -18.625431060791016
    7. 'object' → logprob: -19.750431060791016
    8. 'int' → logprob: -19.875431060791016
    9. ' ' → logprob: -20.000431060791016
    10. '.bool' → logprob: -20.250431060791016

Token 347: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.00042292833677493036
    2. ':
' → logprob: -7.875422954559326
    3. '       ' → logprob: -11.250422477722168
    4. ':return' → logprob: -11.625422477722168
    5. '):' → logprob: -11.750422477722168
    6. '():' → logprob: -12.375422477722168
    7. ' :' → logprob: -12.625422477722168
    8. ',' → logprob: -13.500422477722168
    9. '   ' → logprob: -13.750422477722168
    10. '<|end|>' → logprob: -14.125422477722168

Token 348: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4742356240749359
    2. 'return' → logprob: -1.2242356538772583
    3. ' return' → logprob: -2.9742355346679688
    4. 'self' → logprob: -3.4742355346679688
    5. ' self' → logprob: -6.474235534667969
    6. '	return' → logprob: -10.849235534667969
    7. '   ' → logprob: -11.349235534667969
    8. '	' → logprob: -13.224235534667969
    9. '	self' → logprob: -13.349235534667969
    10. ' ' → logprob: -13.474235534667969

Token 349: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.001531885820440948
    2. 'self' → logprob: -6.751532077789307
    3. ' return' → logprob: -8.501531600952148
    4. '       ' → logprob: -8.751531600952148
    5. ' self' → logprob: -15.876531600952148
    6. '	return' → logprob: -16.12653160095215
    7. '
' → logprob: -18.12653160095215
    8. '   ' → logprob: -18.12653160095215
    9. '{return' → logprob: -20.00153160095215
    10. '(self' → logprob: -20.12653160095215

Token 350: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0485873706638813
    2. ' self' → logprob: -3.0485873222351074
    3. '	self' → logprob: -17.548587799072266
    4. '   ' → logprob: -18.048587799072266
    5. ' ' → logprob: -18.673587799072266
    6. '(self' → logprob: -18.798587799072266
    7. ' ' → logprob: -19.048587799072266
    8. '       ' → logprob: -19.798587799072266
    9. 'Self' → logprob: -19.923587799072266
    10. '_self' → logprob: -21.298587799072266

Token 351: '.b' (ID: 1292)
  Prédit: '.b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.b' → logprob: -7.839121826691553e-05
    2. '.' → logprob: -9.500078201293945
    3. ' .' → logprob: -12.750078201293945
    4. '.bo' → logprob: -15.375078201293945
    5. '.б' → logprob: -15.875078201293945
    6. 'b' → logprob: -15.875078201293945
    7. '.weight' → logprob: -17.125078201293945
    8. '.bukkit' → logprob: -18.000078201293945
    9. '.to' → logprob: -18.125078201293945
    10. '.B' → logprob: -18.500078201293945

Token 352: 'ok' (ID: 525)
  Prédit: 'ok'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ok' → logprob: -9.014684110297821e-06
    2. 'k' → logprob: -12.625008583068848
    3. 'okho' → logprob: -14.375008583068848
    4. 'o' → logprob: -14.750008583068848
    5. '(self' → logprob: -14.875008583068848
    6. 'self' → logprob: -15.000008583068848
    7. '.ok' → logprob: -15.125008583068848
    8. 'okka' → logprob: -15.125008583068848
    9. 'ikko' → logprob: -15.375008583068848
    10. 'ок' → logprob: -15.375008583068848

Token 353: 'ko' (ID: 3593)
  Prédit: 'ko'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ko' → logprob: -5.3120038501219824e-05
    2. 'ко' → logprob: -10.500053405761719
    3. 'こ' → logprob: -11.375053405761719
    4. 'bo' → logprob: -12.000053405761719
    5. 'o' → logprob: -12.875053405761719
    6. 'コ' → logprob: -14.125053405761719
    7. 'ok' → logprob: -14.375053405761719
    8. '```' → logprob: -14.625053405761719
    9. '코' → logprob: -14.625053405761719
    10. 'co' → logprob: -14.875053405761719

Token 354: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.00861729308962822
    2. '<' → logprob: -4.758617401123047
    3. ' ' → logprob: -12.883617401123047
    4. '[' → logprob: -17.008617401123047
    5. '<int' → logprob: -17.133617401123047
    6. '.' → logprob: -17.633617401123047
    7. ' ' → logprob: -18.133617401123047
    8. '  ' → logprob: -18.258617401123047
    9. '<class' → logprob: -18.258617401123047
    10. '<size' → logprob: -18.633617401123047

Token 355: ' other' (ID: 1273)
  Prédit: 'other'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'other' → logprob: -0.1269284337759018
    2. ' other' → logprob: -2.1269283294677734
    3. '(other' → logprob: -15.751928329467773
    4. 'self' → logprob: -15.876928329467773
    5. '.other' → logprob: -17.251928329467773
    6. 'Other' → logprob: -18.626928329467773
    7. '_other' → logprob: -19.751928329467773
    8. ' self' → logprob: -20.251928329467773
    9. '其他' → logprob: -21.251928329467773
    10. 'oth' → logprob: -21.251928329467773

Token 356: '.b' (ID: 1292)
  Prédit: '.b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.b' → logprob: -0.0025936115998774767
    2. '.' → logprob: -6.127593517303467
    3. ' .' → logprob: -7.877593517303467
    4. 'b' → logprob: -10.627593994140625
    5. '.other' → logprob: -13.377593994140625
    6. '.б' → logprob: -14.002593994140625
    7. '.wicket' → logprob: -15.002593994140625
    8. ').' → logprob: -15.502593994140625
    9. '<|end|>' → logprob: -15.502593994140625
    10. 'B' → logprob: -15.627593994140625

Token 357: 'ok' (ID: 525)
  Prédit: 'ok'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ok' → logprob: -1.1279553291387856e-05
    2. 'k' → logprob: -13.125011444091797
    3. 'Weight' → logprob: -13.625011444091797
    4. 'o' → logprob: -13.750011444091797
    5. 'okho' → logprob: -13.750011444091797
    6. 'ок' → logprob: -13.875011444091797
    7. 'bok' → logprob: -13.875011444091797
    8. 'ko' → logprob: -14.625011444091797
    9. 'okk' → logprob: -14.875011444091797
    10. 'ikko' → logprob: -14.875011444091797

Token 358: 'ko' (ID: 3593)
  Prédit: 'ko'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ko' → logprob: -0.00010616567305987701
    2. 'ко' → logprob: -9.500105857849121
    3. 'こ' → logprob: -10.875105857849121
    4. 'o' → logprob: -12.125105857849121
    5. 'bo' → logprob: -12.375105857849121
    6. '코' → logprob: -14.625105857849121
    7. 'コ' → logprob: -14.750105857849121
    8. '```' → logprob: -15.000105857849121
    9. 'k' → logprob: -15.500105857849121
    10. ' ko' → logprob: -15.625105857849121

Token 359: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 360: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 361: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.0714687779545784
    2. '   ' → logprob: -2.8214688301086426
    3. '<|end|>' → logprob: -5.321468830108643
    4. ' def' → logprob: -5.446468830108643
    5. '<|end|>' → logprob: -9.446468353271484
    6. '	def' → logprob: -9.946468353271484
    7. ' ' → logprob: -10.946468353271484
    8. '#' → logprob: -10.946468353271484
    9. '    
' → logprob: -11.071468353271484
    10. '```' → logprob: -11.196468353271484

Token 362: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.2519320547580719
    2. '__' → logprob: -1.5019320249557495
    3. 'def' → logprob: -13.251932144165039
    4. ' def' → logprob: -14.126932144165039
    5. ' ' → logprob: -15.501932144165039
    6. '.__' → logprob: -16.12693214416504
    7. 'to' → logprob: -16.62693214416504
    8. ' to' → logprob: -16.87693214416504
    9. '   ' → logprob: -17.50193214416504
    10. ' ' → logprob: -17.62693214416504

Token 363: 'hash' (ID: 16909)
  Prédit: 'repr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'repr' → logprob: -0.1015983521938324
    2. 'str' → logprob: -2.3515982627868652
    3. 'le' → logprob: -6.601598262786865
    4. 'hash' → logprob: -10.351598739624023
    5. 'gt' → logprob: -15.101598739624023
    6. 'mul' → logprob: -15.726598739624023
    7. 'sub' → logprob: -16.851598739624023
    8. 'r' → logprob: -17.101598739624023
    9. 'rep' → logprob: -17.226598739624023
    10. 'ge' → logprob: -17.601598739624023

Token 364: '__(' (ID: 8241)
  Prédit: '__('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.00253023742698133
    2. '__' → logprob: -6.252530097961426
    3. '__(
' → logprob: -7.752530097961426
    4. '(self' → logprob: -9.127530097961426
    5. '__('' → logprob: -10.252530097961426
    6. '__((' → logprob: -10.877530097961426
    7. '(' → logprob: -12.252530097961426
    8. '__(*' → logprob: -13.127530097961426
    9. '__("' → logprob: -13.502530097961426
    10. '__:' → logprob: -15.377530097961426

Token 365: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -1.7432603272027336e-06
    2. ' self' → logprob: -13.500001907348633
    3. ')' → logprob: -16.125001907348633
    4. '(self' → logprob: -16.875001907348633
    5. '   ' → logprob: -17.625001907348633
    6. '	self' → logprob: -18.750001907348633
    7. '
' → logprob: -19.125001907348633
    8. '       ' → logprob: -19.625001907348633
    9. ')(' → logprob: -20.500001907348633
    10. 'return' → logprob: -20.500001907348633

Token 366: '):
' (ID: 1883)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.0026616237591952085
    2. '(' → logprob: -6.00266170501709
    3. '__(' → logprob: -8.87766170501709
    4. 'self' → logprob: -11.12766170501709
    5. ' (' → logprob: -11.62766170501709
    6. '()' → logprob: -12.25266170501709
    7. ')(' → logprob: -12.37766170501709
    8. ')' → logprob: -12.75266170501709
    9. '():' → logprob: -12.75266170501709
    10. ' self' → logprob: -13.25266170501709

Token 367: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0408981591463089
    2. 'return' → logprob: -3.665898084640503
    3. '   ' → logprob: -4.415898323059082
    4. ' return' → logprob: -6.040898323059082
    5. '	return' → logprob: -11.790898323059082
    6. 'self' → logprob: -12.165898323059082
    7. '           ' → logprob: -13.290898323059082
    8. ':return' → logprob: -13.290898323059082
    9. '      ' → logprob: -13.415898323059082
    10. '	' → logprob: -13.415898323059082

Token 368: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.0078281844034791
    2. ' return' → logprob: -5.257828235626221
    3. '       ' → logprob: -6.007828235626221
    4. '   ' → logprob: -9.007827758789062
    5. '	return' → logprob: -11.757827758789062
    6. '{return' → logprob: -14.632827758789062
    7. '
' → logprob: -15.007827758789062
    8. ':return' → logprob: -15.382827758789062
    9. '```' → logprob: -16.382827758789062
    10. '           ' → logprob: -17.007827758789062

Token 369: ' hash' (ID: 10691)
  Prédit: 'hash'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'hash' → logprob: -7.672236824873835e-05
    2. ' hash' → logprob: -9.500076293945312
    3. 'self' → logprob: -13.250076293945312
    4. ' self' → logprob: -19.750076293945312
    5. '(hash' → logprob: -20.875076293945312
    6. '	hash' → logprob: -21.250076293945312
    7. '   ' → logprob: -21.500076293945312
    8. 'h' → logprob: -23.250076293945312
    9. 'Hash' → logprob: -23.375076293945312
    10. '.hash' → logprob: -23.750076293945312

Token 370: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.00016468366084154695
    2. '((' → logprob: -8.750164985656738
    3. '(' → logprob: -12.000164985656738
    4. ' (' → logprob: -17.625164031982422
    5. 'self' → logprob: -18.125164031982422
    6. '(
' → logprob: -20.375164031982422
    7. '(tuple' → logprob: -21.250164031982422
    8. '(s' → logprob: -22.250164031982422
    9. '(this' → logprob: -23.125164031982422
    10. '(obj' → logprob: -23.375164031982422

Token 371: '.b' (ID: 1292)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.27436894178390503
    2. '.b' → logprob: -1.6493690013885498
    3. 'self' → logprob: -3.14936900138855
    4. '(' → logprob: -5.649368762969971
    5. '(b' → logprob: -7.274368762969971
    6. ' (' → logprob: -8.399369239807129
    7. ')' → logprob: -8.774369239807129
    8. 'b' → logprob: -9.024369239807129
    9. ' self' → logprob: -9.024369239807129
    10. '('' → logprob: -11.024369239807129

Token 372: 'ok' (ID: 525)
  Prédit: 'ok'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ok' → logprob: -0.0004341261519584805
    2. 'k' → logprob: -7.875433921813965
    3. '.ok' → logprob: -11.375433921813965
    4. 'o' → logprob: -11.625433921813965
    5. 'okho' → logprob: -11.625433921813965
    6. 'bok' → logprob: -12.875433921813965
    7. ''ok' → logprob: -13.250433921813965
    8. 'ikko' → logprob: -13.375433921813965
    9. ''' → logprob: -13.375433921813965
    10. 'Ok' → logprob: -13.500433921813965

Token 373: 'ko' (ID: 3593)
  Prédit: 'ko'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ko' → logprob: -3.1186566047836095e-05
    2. 'ко' → logprob: -10.625031471252441
    3. 'bo' → logprob: -13.000031471252441
    4. 'o' → logprob: -13.625031471252441
    5. 'k' → logprob: -13.750031471252441
    6. ' ko' → logprob: -14.625031471252441
    7. '
' → logprob: -15.000031471252441
    8. '```' → logprob: -15.250031471252441
    9. 'こ' → logprob: -16.125030517578125
    10. 'co' → logprob: -16.250030517578125

Token 374: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.7432603272027336e-06
    2. ')
' → logprob: -13.750001907348633
    3. '   ' → logprob: -15.625001907348633
    4. '}' → logprob: -15.875001907348633
    5. ' )' → logprob: -16.125001907348633
    6. '<|end|>' → logprob: -16.250001907348633
    7. ')return' → logprob: -16.750001907348633
    8. ')}' → logprob: -18.250001907348633
    9. '),' → logprob: -18.500001907348633
    10. ')

' → logprob: -19.250001907348633

Token 375: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 376: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.4385751187801361
    2. '   ' → logprob: -1.0635751485824585
    3. 'pass' → logprob: -5.313575267791748
    4. ' def' → logprob: -6.063575267791748
    5. ' pass' → logprob: -7.688575267791748
    6. '```' → logprob: -7.688575267791748
    7. 'class' → logprob: -7.813575267791748
    8. '<|end|>' → logprob: -7.938575267791748
    9. '
' → logprob: -8.06357479095459
    10. '#' → logprob: -8.93857479095459

Token 377: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.02979053184390068
    2. '__' → logprob: -3.5297906398773193
    3. ' def' → logprob: -10.904790878295898
    4. 'repr' → logprob: -11.904790878295898
    5. '_repr' → logprob: -12.279790878295898
    6. 'def' → logprob: -12.404790878295898
    7. '.__' → logprob: -12.779790878295898
    8. ' ' → logprob: -14.029790878295898
    9. ' str' → logprob: -14.029790878295898
    10. ' repr' → logprob: -14.529790878295898

Token 378: 'repr' (ID: 67002)
  Prédit: 'repr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'repr' → logprob: -0.3132616877555847
    2. 'str' → logprob: -1.3132617473602295
    3. ' str' → logprob: -21.188261032104492
    4. 'rep' → logprob: -21.313261032104492
    5. '_repr' → logprob: -22.438261032104492
    6. ' repr' → logprob: -22.438261032104492
    7. 'init' → logprob: -23.188261032104492
    8. 'int' → logprob: -23.188261032104492
    9. 'string' → logprob: -23.563261032104492
    10. 'Str' → logprob: -23.813261032104492

Token 379: '__(' (ID: 8241)
  Prédit: '__('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.03199329599738121
    2. '__('' → logprob: -3.9069933891296387
    3. '__' → logprob: -4.656993389129639
    4. '__(
' → logprob: -6.531993389129639
    5. '__("' → logprob: -7.906993389129639
    6. '__((' → logprob: -10.28199291229248
    7. '(self' → logprob: -11.03199291229248
    8. '(' → logprob: -11.65699291229248
    9. '__(*' → logprob: -12.15699291229248
    10. '__(/*!' → logprob: -14.03199291229248

Token 380: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.00016659092216286808
    2. 'f' → logprob: -9.000166893005371
    3. ')' → logprob: -10.375166893005371
    4. ' self' → logprob: -11.375166893005371
    5. 'Self' → logprob: -15.250166893005371
    6. '(self' → logprob: -17.000165939331055
    7. ''s' → logprob: -17.250165939331055
    8. '	self' → logprob: -17.250165939331055
    9. ' f' → logprob: -18.000165939331055
    10. '$self' → logprob: -18.000165939331055

Token 381: '):
' (ID: 1883)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '__' → logprob: -0.5282139778137207
    2. '__('' → logprob: -1.6532139778137207
    3. '__)' → logprob: -1.6532139778137207
    4. '__(' → logprob: -3.9032139778137207
    5. '__("' → logprob: -6.028213977813721
    6. '__(
' → logprob: -6.153213977813721
    7. '__)
' → logprob: -7.028213977813721
    8. 'self' → logprob: -8.153213500976562
    9. '__.__' → logprob: -8.278213500976562
    10. '__).' → logprob: -8.278213500976562

Token 382: '       ' (ID: 309)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.22935952246189117
    2. '       ' → logprob: -1.72935950756073
    3. ' f' → logprob: -3.7293596267700195
    4. 'return' → logprob: -5.8543596267700195
    5. '   ' → logprob: -7.6043596267700195
    6. ' return' → logprob: -8.72935962677002
    7. '           ' → logprob: -12.10435962677002
    8. 'F' → logprob: -12.22935962677002
    9. 'Return' → logprob: -12.60435962677002
    10. '(f' → logprob: -13.35435962677002

Token 383: ' return' (ID: 622)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.019700912758708
    2. 'return' (adapté à ' return') → logprob: -4.01970100402832
    3. ' f' → logprob: -6.76970100402832
    4. '   ' → logprob: -8.51970100402832
    5. '       ' → logprob: -8.89470100402832
    6. ' return' → logprob: -9.89470100402832
    7. 'Weight' → logprob: -11.39470100402832
    8. '           ' → logprob: -14.14470100402832
    9. '```' → logprob: -14.14470100402832
    10. '     ' → logprob: -14.39470100402832

Token 384: ' f' (ID: 285)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.011047814972698689
    2. ' f' → logprob: -4.511047840118408
    3. 'Weight' → logprob: -16.76104736328125
    4. ' ' → logprob: -19.76104736328125
    5. '"' → logprob: -19.88604736328125
    6. ' Weight' → logprob: -19.88604736328125
    7. ''f' → logprob: -20.13604736328125
    8. '   ' → logprob: -20.26104736328125
    9. '(f' → logprob: -20.38604736328125
    10. 'F' → logprob: -20.51104736328125

Token 385: '"' (ID: 1)
  Prédit: 'Weight'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Weight' → logprob: -0.0060505010187625885
    2. 'f' → logprob: -5.1310505867004395
    3. ' Weight' → logprob: -10.006050109863281
    4. '"' → logprob: -10.256050109863281
    5. 'Weights' → logprob: -11.256050109863281
    6. 'Weighted' → logprob: -11.256050109863281
    7. ' f' → logprob: -11.881050109863281
    8. ''' → logprob: -12.881050109863281
    9. '.Weight' → logprob: -13.131050109863281
    10. '<' → logprob: -13.881050109863281

Token 386: 'Weight' (ID: 10843)
  Prédit: 'Weight'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Weight' → logprob: -5.200166469876422e-06
    2. '{' → logprob: -12.750004768371582
    3. ' Weight' → logprob: -13.875004768371582
    4. '"' → logprob: -14.750004768371582
    5. 'f' → logprob: -15.125004768371582
    6. ''' → logprob: -15.375004768371582
    7. 'weight' → logprob: -16.0000057220459
    8. 'B' → logprob: -16.5000057220459
    9. '_weight' → logprob: -16.7500057220459
    10. 'Weighted' → logprob: -16.8750057220459

Token 387: 'Unit' (ID: 6728)
  Prédit: 'Unit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Unit' → logprob: -1.9361264946837764e-07
    2. '(' → logprob: -16.875
    3. '(Unit' → logprob: -17.0
    4. '<Unit' → logprob: -17.375
    5. 'Weight' → logprob: -20.375
    6. '```' → logprob: -20.875
    7. ' Unit' → logprob: -21.125
    8. '"' → logprob: -21.25
    9. '.Unit' → logprob: -21.625
    10. 'User' → logprob: -22.0

Token 388: '({' (ID: 3972)
  Prédit: '({'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '({' → logprob: -0.2598668932914734
    2. '(b' → logprob: -1.5098669528961182
    3. '(' → logprob: -5.259866714477539
    4. '(self' → logprob: -6.134866714477539
    5. '(f' → logprob: -8.134866714477539
    6. '(B' → logprob: -8.759866714477539
    7. '('{' → logprob: -10.384866714477539
    8. '("' → logprob: -11.134866714477539
    9. '("{' → logprob: -11.759866714477539
    10. '(bot' → logprob: -11.884866714477539

Token 389: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: 0.0
    2. ' self' → logprob: -18.25
    3. '{' → logprob: -18.75
    4. 'str' → logprob: -22.875
    5. '(self' → logprob: -23.0
    6. '   ' → logprob: -23.25
    7. '       ' → logprob: -24.0
    8. 'b' → logprob: -24.0
    9. 'f' → logprob: -24.25
    10. 'repr' → logprob: -24.25

Token 390: '.b' (ID: 1292)
  Prédit: '.b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.b' → logprob: -2.816093228830141e-06
    2. '.' → logprob: -13.12500286102295
    3. ' .' → logprob: -14.25000286102295
    4. 'b' → logprob: -17.250001907348633
    5. '}.' → logprob: -18.125001907348633
    6. ').' → logprob: -18.250001907348633
    7. '".' → logprob: -18.500001907348633
    8. '	b' → logprob: -18.750001907348633
    9. '.B' → logprob: -18.875001907348633
    10. ''.' → logprob: -19.500001907348633

Token 391: 'ok' (ID: 525)
  Prédit: 'ok'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ok' → logprob: -0.00048501143464818597
    2. ''' → logprob: -8.50048542022705
    3. 'k' → logprob: -8.62548542022705
    4. ''ok' → logprob: -10.50048542022705
    5. 'self' → logprob: -10.87548542022705
    6. 'bok' → logprob: -11.62548542022705
    7. 'okho' → logprob: -11.75048542022705
    8. '')' → logprob: -12.12548542022705
    9. 'o' → logprob: -12.62548542022705
    10. 'ko' → logprob: -12.75048542022705

Token 392: 'ko' (ID: 3593)
  Prédit: 'ko'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ko' → logprob: -8.983476436696947e-05
    2. 'ко' → logprob: -9.750089645385742
    3. ' ko' → logprob: -11.000089645385742
    4. 'o' → logprob: -11.875089645385742
    5. 'bo' → logprob: -13.125089645385742
    6. '   ' → logprob: -13.875089645385742
    7. '```' → logprob: -14.500089645385742
    8. '  ' → logprob: -14.750089645385742
    9. 'こ' → logprob: -14.750089645385742
    10. '`' → logprob: -15.250089645385742

Token 393: '})' (ID: 9263)
  Prédit: '})'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '})' → logprob: -0.016696017235517502
    2. ')"' → logprob: -4.266695976257324
    3. ')' → logprob: -6.016695976257324
    4. '))' → logprob: -10.016695976257324
    5. ')}' → logprob: -11.141695976257324
    6. '>)' → logprob: -11.641695976257324
    7. ' })' → logprob: -11.641695976257324
    8. ')")' → logprob: -12.016695976257324
    9. '"})' → logprob: -13.266695976257324
    10. ')`' → logprob: -13.516695976257324

Token 394: '"

' (ID: 2678)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.4804098904132843
    2. '<|end|>' → logprob: -0.9804098606109619
    3. '")' → logprob: -5.605410099029541
    4. '<|end|>' → logprob: -6.730410099029541
    5. '```' → logprob: -7.730410099029541
    6. '"' → logprob: -7.855410099029541
    7. '\n' → logprob: -8.105409622192383
    8. '}' → logprob: -9.355409622192383
    9. '">' → logprob: -9.730409622192383
    10. '')' → logprob: -10.355409622192383

Token 395: 'class' (ID: 1444)
  Prédit: 'class'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'class' → logprob: -0.007688731886446476
    2. '
' → logprob: -5.632688522338867
    3. '<|end|>' → logprob: -6.007688522338867
    4. ' class' → logprob: -7.132688522338867
    5. '<|end|>' → logprob: -7.882688522338867
    6. '

' → logprob: -8.757688522338867
    7. '```' → logprob: -9.132688522338867
    8. '#' → logprob: -10.007688522338867
    9. '<class' → logprob: -10.632688522338867
    10. 'def' → logprob: -11.257688522338867

Token 396: ' Quantity' (ID: 65944)
  Prédit: 'Length'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Length' → logprob: -1.6202305555343628
    2. 'Volume' → logprob: -2.1202306747436523
    3. 'Count' → logprob: -2.3702306747436523
    4. ' Length' → logprob: -2.4952306747436523
    5. 'Distance' → logprob: -2.6202306747436523
    6. 'Value' → logprob: -2.7452306747436523
    7. 'Quantity' → logprob: -3.4952306747436523
    8. ' Volume' → logprob: -3.4952306747436523
    9. 'Price' → logprob: -3.6202306747436523
    10. 'Weight' → logprob: -3.6202306747436523

Token 397: 'Unit' (ID: 6728)
  Prédit: '(Unit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(Unit' → logprob: -0.27283090353012085
    2. ':' → logprob: -2.1478309631347656
    3. '(' → logprob: -2.2728309631347656
    4. 'Unit' → logprob: -4.022830963134766
    5. '(unit' → logprob: -7.897830963134766
    6. '<Unit' → logprob: -8.397830963134766
    7. '(User' → logprob: -8.772830963134766
    8. '():' → logprob: -8.897830963134766
    9. ':
' → logprob: -10.022830963134766
    10. '_unit' → logprob: -10.522830963134766

Token 398: '(Unit' (ID: 124951)
  Prédit: '(Unit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(Unit' → logprob: -0.007218380458652973
    2. '(' → logprob: -5.257218360900879
    3. ':' → logprob: -6.257218360900879
    4. '(User' → logprob: -10.757218360900879
    5. '(unit' → logprob: -10.757218360900879
    6. '<Unit' → logprob: -11.257218360900879
    7. 'Unit' → logprob: -12.507218360900879
    8. '(Abstract' → logprob: -13.382218360900879
    9. '():' → logprob: -13.382218360900879
    10. '(unittest' → logprob: -14.757218360900879

Token 399: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.6932113766670227
    2. '):' → logprob: -0.6932113766670227
    3. '):
' → logprob: -10.318211555480957
    4. ')' → logprob: -10.568211555480957
    5. '):

' → logprob: -12.318211555480957
    6. ',' → logprob: -14.943211555480957
    7. '(' → logprob: -16.19321060180664
    8. '   ' → logprob: -16.69321060180664
    9. ':' → logprob: -16.69321060180664
    10. ' ):' → logprob: -17.06821060180664

Token 400: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.17464445531368256
    2. '):
' → logprob: -3.1746444702148438
    3. '<|end|>' → logprob: -3.2996444702148438
    4. ':' → logprob: -3.9246444702148438
    5. '):' → logprob: -4.049644470214844
    6. ':
' → logprob: -4.174644470214844
    7. '(' → logprob: -4.424644470214844
    8. ')' → logprob: -5.049644470214844
    9. 'Quantity' → logprob: -5.674644470214844
    10. 'def' → logprob: -6.049644470214844

Token 401: ' """
' (ID: 7037)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1378527581691742
    2. 'def' → logprob: -2.762852668762207
    3. ' def' → logprob: -3.012852668762207
    4. 'class' → logprob: -5.012852668762207
    5. '(' → logprob: -5.137852668762207
    6. ' ' → logprob: -7.012852668762207
    7. '
' → logprob: -7.137852668762207
    8. '<|end|>' → logprob: -7.637852668762207
    9. '...' → logprob: -8.387852668762207
    10. '  ' → logprob: -8.387852668762207

Token 402: '   ' (ID: 271)
  Prédit: '"""
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"""
' → logprob: -0.11775381863117218
    2. '"' → logprob: -3.492753744125366
    3. '   ' → logprob: -3.492753744125366
    4. '"
' → logprob: -4.492753982543945
    5. 'ABC' → logprob: -4.742753982543945
    6. '):
' → logprob: -4.867753982543945
    7. ')' → logprob: -5.367753982543945
    8. 'class' → logprob: -5.617753982543945
    9. 'str' → logprob: -5.742753982543945
    10. ')
' → logprob: -5.867753982543945

Token 403: ' Represents' (ID: 84592)
  Prédit: '"""
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '"""
' → logprob: -0.03627651184797287
    2. '   ' → logprob: -4.161276340484619
    3. '
' → logprob: -4.286276340484619
    4. 'def' → logprob: -5.911276340484619
    5. '"""' → logprob: -7.036276340484619
    6. '"' → logprob: -7.786276340484619
    7. '<|end|>' → logprob: -8.286276817321777
    8. 'class' → logprob: -8.536276817321777
    9. ''''
' → logprob: -8.536276817321777
    10. ' """
' → logprob: -8.536276817321777

Token 404: ' quantity' (ID: 17245)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.03478950634598732
    2. ' int' → logprob: -3.534789562225342
    3. '(int' → logprob: -6.909789562225342
    4. 'class' → logprob: -7.534789562225342
    5. 'Quantity' → logprob: -7.534789562225342
    6. 'quantity' → logprob: -7.534789562225342
    7. 'object' → logprob: -7.659789562225342
    8. 'def' → logprob: -8.034789085388184
    9. '):
' → logprob: -8.534789085388184
    10. '
' → logprob: -8.659789085388184

Token 405: ' in' (ID: 306)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -1.1029746532440186
    2. '(' → logprob: -1.9779746532440186
    3. ' in' → logprob: -2.3529746532440186
    4. ' of' → logprob: -2.3529746532440186
    5. '<|end|>' → logprob: -2.3529746532440186
    6. ' (' → logprob: -3.2279746532440186
    7. ',' → logprob: -3.3529746532440186
    8. '<|end|>' → logprob: -3.4779746532440186
    9. '   ' → logprob: -3.6029746532440186
    10. '(int' → logprob: -3.8529746532440186

Token 406: ' '' (ID: 461)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.4330461621284485
    2. ' int' → logprob: -1.3080461025238037
    3. ' units' → logprob: -3.9330461025238037
    4. 'units' → logprob: -4.933046340942383
    5. ' integer' → logprob: -5.183046340942383
    6. ' '' → logprob: -5.308046340942383
    7. '整数' → logprob: -5.308046340942383
    8. ''' → logprob: -5.433046340942383
    9. 'count' → logprob: -5.558046340942383
    10. ' integers' → logprob: -5.933046340942383

Token 407: 'マ' (ID: 17768)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.23283928632736206
    2. ' int' → logprob: -2.107839345932007
    3. '個' → logprob: -3.732839345932007
    4. 'ボ' → logprob: -4.357839107513428
    5. 'units' → logprob: -5.420339107513428
    6. 'count' → logprob: -5.857839107513428
    7. 'つ' → logprob: -5.857839107513428
    8. 'quantity' → logprob: -5.920339107513428
    9. 'unit' → logprob: -6.107839107513428
    10. 'B' → logprob: -6.107839107513428

Token 408: 'ル' (ID: 7052)
  Prédit: 'ス'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ス' → logprob: -0.4558447003364563
    2. 'ッ' → logprob: -2.0808446407318115
    3. 'ル' → logprob: -2.7058446407318115
    4. 'ーク' → logprob: -2.9558446407318115
    5. 'ン' → logprob: -3.0808446407318115
    6. 'ジ' → logprob: -4.205844879150391
    7. 'ース' → logprob: -5.330844879150391
    8. 'ト' → logprob: -5.643344879150391
    9. 'ツ' → logprob: -5.768344879150391
    10. 'イ' → logprob: -5.768344879150391

Token 409: 'グ' (ID: 13094)
  Prédit: 'ル'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ル' → logprob: -0.4451460838317871
    2. 'ク' → logprob: -2.570146083831787
    3. '(' → logprob: -3.070146083831787
    4. 's' → logprob: -3.195146083831787
    5. 'ン' → logprob: -3.320146083831787
    6. ''' → logprob: -3.445146083831787
    7. '()' → logprob: -3.695146083831787
    8. 'ス' → logprob: -4.195146083831787
    9. 'ーク' → logprob: -4.320146083831787
    10. '丸' → logprob: -4.945146083831787

Token 410: ''(' (ID: 117019)
  Prédit: 'ン'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ン' → logprob: -0.5000786185264587
    2. 'ス' → logprob: -2.1250786781311035
    3. '```' → logprob: -2.6250786781311035
    4. 'マ' → logprob: -2.7500786781311035
    5. 'ー' → logprob: -3.3750786781311035
    6. 'ク' → logprob: -4.3750786781311035
    7. 'ール' → logprob: -4.8750786781311035
    8. 'ル' → logprob: -5.1250786781311035
    9. 'ム' → logprob: -5.1250786781311035
    10. 'リ' → logprob: -5.3750786781311035

Token 411: 'Mar' (ID: 11272)
  Prédit: 'Mar'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Mar' → logprob: -0.4212666451931
    2. 'Quantity' → logprob: -1.5462666749954224
    3. 'int' → logprob: -2.921266555786133
    4. ')' → logprob: -4.546266555786133
    5. ' Mar' → logprob: -4.796266555786133
    6. 'M' → logprob: -4.921266555786133
    7. 'Qty' → logprob: -5.046266555786133
    8. '丸' → logprob: -5.171266555786133
    9. 'Count' → logprob: -5.421266555786133
    10. 'マ' → logprob: -5.421266555786133

Token 412: 'ugu' (ID: 8060)
  Prédit: 'ク'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ク' → logprob: -0.1603754311800003
    2. 'ル' → logprob: -3.1603753566741943
    3. 'ーク' → logprob: -3.2853753566741943
    4. 'ン' → logprob: -3.7853753566741943
    5. 'ー' → logprob: -4.910375595092773
    6. 'k' → logprob: -5.035375595092773
    7. 'ス' → logprob: -6.035375595092773
    8. 'x' → logprob: -6.160375595092773
    9. 'ック' → logprob: -6.160375595092773
    10. 'く' → logprob: -6.160375595092773

Token 413: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.05292873457074165
    2. '):' → logprob: -3.1779286861419678
    3. '):
' → logprob: -4.802928924560547
    4. '')' → logprob: -8.177928924560547
    5. ')(' → logprob: -8.802928924560547
    6. 's' → logprob: -8.927928924560547
    7. 'units' → logprob: -8.927928924560547
    8. ')
' → logprob: -9.052928924560547
    9. ')：' → logprob: -9.177928924560547
    10. 'Unit' → logprob: -9.427928924560547

Token 414: ' units' (ID: 13306)
  Prédit: 'units'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'units' → logprob: -0.6670802235603333
    2. ' units' → logprob: -0.9170802235603333
    3. ')' → logprob: -3.9170801639556885
    4. '(' → logprob: -4.167080402374268
    5. ' (' → logprob: -4.167080402374268
    6. 'unit' → logprob: -4.792080402374268
    7. '):' → logprob: -5.292080402374268
    8. '単' → logprob: -5.542080402374268
    9. ':' → logprob: -5.667080402374268
    10. '):
' → logprob: -5.792080402374268

Token 415: '.
' (ID: 558)
  Prédit: '):
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.2270381897687912
    2. '):' → logprob: -1.6020381450653076
    3. ')' → logprob: -7.727038383483887
    4. '(' → logprob: -8.102038383483887
    5. '   ' → logprob: -8.602038383483887
    6. ''):
' → logprob: -8.852038383483887
    7. '):
' → logprob: -9.352038383483887
    8. ':' → logprob: -9.352038383483887
    9. ':
' → logprob: -9.352038383483887
    10. ',' → logprob: -9.602038383483887

Token 416: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.009002981707453728
    2. ')' → logprob: -5.134003162384033
    3. ')
' → logprob: -6.509003162384033
    4. '"""
' → logprob: -6.634003162384033
    5. '
' → logprob: -9.759002685546875
    6. '"""' → logprob: -9.884002685546875
    7. 'def' → logprob: -10.509002685546875
    8. ' ' → logprob: -10.884002685546875
    9. '  ' → logprob: -11.134002685546875
    10. '```' → logprob: -11.134002685546875

Token 417: ' ' (ID: 220)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03978031873703003
    2. '"""
' → logprob: -3.789780378341675
    3. 'def' → logprob: -5.414780139923096
    4. '
' → logprob: -5.539780139923096
    5. '"""' → logprob: -5.789780139923096
    6. ' def' → logprob: -6.289780139923096
    7. 'class' → logprob: -6.664780139923096
    8. ')' → logprob: -7.664780139923096
    9. '<|end|>' → logprob: -8.289780616760254
    10. '```' → logprob: -8.414780616760254

Token 418: '1' (ID: 16)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.05161088705062866
    2. ')' → logprob: -3.9266109466552734
    3. '"""
' → logprob: -4.176610946655273
    4. ')
' → logprob: -4.551610946655273
    5. '):
' → logprob: -7.176610946655273
    6. 'def' → logprob: -7.301610946655273
    7. ':
' → logprob: -7.551610946655273
    8. '
' → logprob: -7.551610946655273
    9. '(' → logprob: -7.801610946655273
    10. ':' → logprob: -7.801610946655273

Token 419: ' Mar' (ID: 3145)
  Prédit: 'マ'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'マ' → logprob: -0.5702481865882874
    2. ' マ' → logprob: -1.9452481269836426
    3. 'mar' → logprob: -2.0702481269836426
    4. 'def' → logprob: -2.8202481269836426
    5. ' mar' → logprob: -3.0702481269836426
    6. ' def' → logprob: -3.6952481269836426
    7. 'unit' → logprob: -4.070248126983643
    8. ' unit' → logprob: -5.320248126983643
    9. 'quantity' → logprob: -5.320248126983643
    10. ' quantity' → logprob: -6.320248126983643

Token 420: 'ugu' (ID: 8060)
  Prédit: 'グ'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'グ' → logprob: -0.12907187640666962
    2. 'ぐ' → logprob: -3.1290719509124756
    3. 'gu' → logprob: -3.2540719509124756
    4. 'ugu' → logprob: -5.0040717124938965
    5. '   ' → logprob: -5.3790717124938965
    6. 'ug' → logprob: -5.5040717124938965
    7. 'ル' → logprob: -5.7540717124938965
    8. 'ク' → logprob: -5.8790717124938965
    9. 'う' → logprob: -6.0040717124938965
    10. '       ' → logprob: -6.0040717124938965

Token 421: ' unit' (ID: 7670)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -1.2287746667861938
    2. ' =' → logprob: -1.2287746667861938
    3. '(' → logprob: -2.2287745475769043
    4. ' unit' → logprob: -2.2287745475769043
    5. '=' → logprob: -2.3537745475769043
    6. 'unit' → logprob: -3.4787745475769043
    7. ' (' → logprob: -3.7287745475769043
    8. ')' → logprob: -4.353774547576904
    9. '(unit' → logprob: -4.603774547576904
    10. ' is' → logprob: -6.103774547576904

Token 422: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0931946411728859
    2. ' =' → logprob: -2.7181947231292725
    3. ':' → logprob: -3.8431947231292725
    4. '<|end|>' → logprob: -7.343194484710693
    5. '(' → logprob: -7.968194484710693
    6. ')' → logprob: -8.343194961547852
    7. ' is' → logprob: -9.343194961547852
    8. ' (' → logprob: -9.718194961547852
    9. 'def' → logprob: -9.968194961547852
    10. '<|end|>' → logprob: -10.343194961547852

Token 423: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.07404981553554535
    2. 'int' → logprob: -3.074049711227417
    3. ' ' → logprob: -4.074049949645996
    4. ' int' → logprob: -4.824049949645996
    5. '2' → logprob: -11.324049949645996
    6. '10' → logprob: -11.324049949645996
    7. '0' → logprob: -11.949049949645996
    8. '
' → logprob: -11.949049949645996
    9. '(int' → logprob: -12.449049949645996
    10. '   ' → logprob: -12.511549949645996

Token 424: '2' (ID: 17)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.029895931482315063
    2. 'int' → logprob: -3.5298960208892822
    3. ' ' → logprob: -10.279895782470703
    4. '10' → logprob: -10.529895782470703
    5. '2' → logprob: -10.904895782470703
    6. ' int' → logprob: -11.404895782470703
    7. 'unit' → logprob: -11.779895782470703
    8. '100' → logprob: -11.904895782470703
    9. '0' → logprob: -12.654895782470703
    10. 'units' → logprob: -12.779895782470703

Token 425: '^' (ID: 61)
  Prédit: '**'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '**' → logprob: -0.16284804046154022
    2. '^' → logprob: -2.0378479957580566
    3. ' **' → logprob: -4.162847995758057
    4. '<|end|>' → logprob: -5.662847995758057
    5. '#' → logprob: -8.537848472595215
    6. '<|end|>' → logprob: -8.787848472595215
    7. '0' → logprob: -8.912848472595215
    8. '*' → logprob: -9.037848472595215
    9. '```' → logprob: -9.412848472595215
    10. ')' → logprob: -10.162848472595215

Token 426: 'y' (ID: 88)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.3153496980667114
    2. 'x' → logprob: -1.3153496980667114
    3. 'quantity' → logprob: -7.065349578857422
    4. '<|end|>' → logprob: -7.690349578857422
    5. 'self' → logprob: -8.690349578857422
    6. '1' → logprob: -9.190349578857422
    7. ' ' → logprob: -9.190349578857422
    8. 'Quantity' → logprob: -9.440349578857422
    9. '<|end|>' → logprob: -10.190349578857422
    10. '32' → logprob: -10.690349578857422

Token 427: ' items' (ID: 4732)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.8850975036621094
    2. 'y' → logprob: -1.8850975036621094
    3. ')' → logprob: -2.1350975036621094
    4. '<|end|>' → logprob: -2.2600975036621094
    5. ' y' → logprob: -2.6350975036621094
    6. ' units' → logprob: -2.7600975036621094
    7. ' x' → logprob: -3.0100975036621094
    8. ' spaces' → logprob: -5.260097503662109
    9. '<|end|>' → logprob: -5.760097503662109
    10. '*' → logprob: -5.885097503662109

Token 428: ',' (ID: 11)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7849631309509277
    2. '<|end|>' → logprob: -0.9099631309509277
    3. ',' → logprob: -2.7849631309509277
    4. ')' → logprob: -2.9099631309509277
    5. '<|end|>' → logprob: -3.7849631309509277
    6. '.' → logprob: -7.409963130950928
    7. '```' → logprob: -8.284963607788086
    8. ' (' → logprob: -8.284963607788086
    9. ')
' → logprob: -8.409963607788086
    10. '...' → logprob: -8.784963607788086

Token 429: ' y' (ID: 342)
  Prédit: ' y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' y' → logprob: -0.030222365632653236
    2. 'y' → logprob: -3.7802224159240723
    3. '<|end|>' → logprob: -5.780222415924072
    4. '   ' → logprob: -6.155222415924072
    5. ' ' → logprob: -6.905222415924072
    6. ')' → logprob: -8.280221939086914
    7. '<|end|>' → logprob: -8.405221939086914
    8. '0' → logprob: -10.030221939086914
    9. '#' → logprob: -10.655221939086914
    10. '...' → logprob: -10.905221939086914

Token 430: ' >=' (ID: 5064)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.31764331459999084
    2. '>=' → logprob: -1.9426432847976685
    3. ' >=' → logprob: -2.442643404006958
    4. ' =' → logprob: -3.442643404006958
    5. ')' → logprob: -5.317643165588379
    6. '≥' → logprob: -5.942643165588379
    7. ')>=' → logprob: -7.067643165588379
    8. '<|end|>' → logprob: -7.067643165588379
    9. ':' → logprob: -9.067643165588379
    10. '=None' → logprob: -9.067643165588379

Token 431: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0429999977350235
    2. ' ' → logprob: -3.1679999828338623
    3. ' ' → logprob: -15.043000221252441
    4. '   ' → logprob: -15.543000221252441
    5. 'int' → logprob: -16.605499267578125
    6. '1' → logprob: -16.792999267578125
    7. '  ' → logprob: -17.105499267578125
    8. '```' → logprob: -17.355499267578125
    9. '...' → logprob: -18.167999267578125
    10. '[' → logprob: -18.355499267578125

Token 432: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -5.1689596148207784e-05
    2. ' ' → logprob: -9.875051498413086
    3. 'int' → logprob: -16.375051498413086
    4. '<|end|>' → logprob: -17.500051498413086
    5. '1' → logprob: -17.875051498413086
    6. '...' → logprob: -18.750051498413086
    7. '```' → logprob: -18.750051498413086
    8. '[' → logprob: -19.500051498413086
    9. '۰' → logprob: -19.937551498413086
    10. '
' → logprob: -20.000051498413086

Token 433: ' integer' (ID: 16336)
  Prédit: ' integer'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' integer' → logprob: -0.45310497283935547
    2. 'integer' → logprob: -1.7031049728393555
    3. ')' → logprob: -1.9531049728393555
    4. '<|end|>' → logprob: -4.3281049728393555
    5. '   ' → logprob: -4.4531049728393555
    6. 'int' → logprob: -4.9531049728393555
    7. '```' → logprob: -5.8281049728393555
    8. '
' → logprob: -6.2031049728393555
    9. '<|end|>' → logprob: -6.5781049728393555
    10. ')
' → logprob: -7.7031049728393555

Token 434: '.
' (ID: 558)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.18934662640094757
    2. '<|end|>' → logprob: -2.1893465518951416
    3. ')' → logprob: -2.9393465518951416
    4. '<|end|>' → logprob: -5.064346790313721
    5. ')
' → logprob: -7.564346790313721
    6. '
' → logprob: -8.314346313476562
    7. '.' → logprob: -9.064346313476562
    8. '```' → logprob: -9.189346313476562
    9. ',' → logprob: -9.564346313476562
    10. '  ' → logprob: -10.189346313476562

Token 435: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0010353106772527099
    2. ')' → logprob: -8.001035690307617
    3. '
' → logprob: -8.251035690307617
    4. 'def' → logprob: -8.376035690307617
    5. '<|end|>' → logprob: -9.251035690307617
    6. '<|end|>' → logprob: -10.626035690307617
    7. '```' → logprob: -10.876035690307617
    8. ' def' → logprob: -11.251035690307617
    9. ')
' → logprob: -11.251035690307617
    10. '"""' → logprob: -11.751035690307617

Token 436: ' Here' (ID: 7306)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.023309767246246338
    2. 'def' → logprob: -4.148309707641602
    3. ' def' → logprob: -5.148309707641602
    4. '
' → logprob: -6.898309707641602
    5. 'class' → logprob: -8.398309707641602
    6. '"""' → logprob: -10.023309707641602
    7. '"""
' → logprob: -10.148309707641602
    8. '	def' → logprob: -10.398309707641602
    9. ')' → logprob: -10.648309707641602
    10. '```' → logprob: -11.023309707641602

Token 437: ' quantity' (ID: 17245)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6288517117500305
    2. 'def' → logprob: -1.5038516521453857
    3. '<|end|>' → logprob: -2.0038516521453857
    4. '<|end|>' → logprob: -2.6288516521453857
    5. ' def' → logprob: -4.378851890563965
    6. '...' → logprob: -5.128851890563965
    7. 'class' → logprob: -5.253851890563965
    8. '続きを' → logprob: -5.378851890563965
    9. ''s' → logprob: -6.253851890563965
    10. ',' → logprob: -6.628851890563965

Token 438: ' stored' (ID: 16240)
  Prédit: ' is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.4226672649383545
    2. '   ' → logprob: -1.9226672649383545
    3. ':' → logprob: -2.9226672649383545
    4. 'def' → logprob: -3.0476672649383545
    5. ' def' → logprob: -3.9226672649383545
    6. '=' → logprob: -4.047667503356934
    7. ' represents' → logprob: -4.047667503356934
    8. 'is' → logprob: -4.172667503356934
    9. ' in' → logprob: -4.672667503356934
    10. ')' → logprob: -5.672667503356934

Token 439: ' as' (ID: 472)
  Prédit: ' as'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' as' → logprob: -0.07226433604955673
    2. 'as' → logprob: -3.1972644329071045
    3. ' in' → logprob: -4.822264194488525
    4. 'in' → logprob: -4.822264194488525
    5. '   ' → logprob: -5.197264194488525
    6. ':' → logprob: -5.947264194488525
    7. '=' → logprob: -6.697264194488525
    8. ' =' → logprob: -6.947264194488525
    9. ',' → logprob: -7.072264194488525
    10. ' is' → logprob: -7.322264194488525

Token 440: ' integer' (ID: 16336)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.0949837937951088
    2. 'an' → logprob: -3.0949838161468506
    3. ' an' → logprob: -3.7199838161468506
    4. ' int' → logprob: -4.4699835777282715
    5. 'self' → logprob: -5.5949835777282715
    6. 'integer' → logprob: -5.8449835777282715
    7. 'the' → logprob: -6.7199835777282715
    8. ' integer' → logprob: -7.5949835777282715
    9. ' the' → logprob: -7.5949835777282715
    10. '整数' → logprob: -8.34498405456543

Token 441: ' count' (ID: 3605)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5825037360191345
    2. ':' → logprob: -1.8325037956237793
    3. '):
' → logprob: -2.8325037956237793
    4. '):' → logprob: -3.2075037956237793
    5. ' quantity' → logprob: -3.3325037956237793
    6. ')' → logprob: -3.5825037956237793
    7. ',' → logprob: -4.207503795623779
    8. '       ' → logprob: -4.332503795623779
    9. 'def' → logprob: -4.457503795623779
    10. 'count' → logprob: -4.707503795623779

Token 442: ' of' (ID: 328)
  Prédit: ' of'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' of' → logprob: -0.34238263964653015
    2. '<|end|>' → logprob: -1.4673826694488525
    3. '<|end|>' → logprob: -3.8423826694488525
    4. '   ' → logprob: -3.8423826694488525
    5. 'of' → logprob: -4.467382431030273
    6. ')' → logprob: -5.717382431030273
    7. '  ' → logprob: -7.967382431030273
    8. '.' → logprob: -8.467382431030273
    9. ' ' → logprob: -8.842382431030273
    10. ',' → logprob: -8.967382431030273

Token 443: ' Mar' (ID: 3145)
  Prédit: ' mar'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' mar' → logprob: -0.6971654295921326
    2. 'mar' → logprob: -0.9471654295921326
    3. 'items' → logprob: -3.0721654891967773
    4. ' items' → logprob: -3.5721654891967773
    5. ' units' → logprob: -4.197165489196777
    6. 'units' → logprob: -4.197165489196777
    7. 'Mar' → logprob: -5.572165489196777
    8. 'マ' → logprob: -6.197165489196777
    9. ' Mar' → logprob: -6.822165489196777
    10. 'self' → logprob: -7.697165489196777

Token 444: 'ugu' (ID: 8060)
  Prédit: 'ugu'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ugu' → logprob: -0.02600044757127762
    2. 'gu' → logprob: -4.026000499725342
    3. 'ug' → logprob: -5.526000499725342
    4. 'グ' → logprob: -6.276000499725342
    5. 'ぐ' → logprob: -7.401000499725342
    6. 'u' → logprob: -8.401000022888184
    7. 'qu' → logprob: -8.526000022888184
    8. 'g' → logprob: -8.651000022888184
    9. 'lugu' → logprob: -8.776000022888184
    10. 'う' → logprob: -9.401000022888184

Token 445: ' units' (ID: 13306)
  Prédit: ' units'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' units' → logprob: -0.10142248123884201
    2. 'units' → logprob: -2.4764225482940674
    3. ')' → logprob: -4.601422309875488
    4. 's' → logprob: -6.976422309875488
    5. '_units' → logprob: -7.851422309875488
    6. '):
' → logprob: -8.351422309875488
    7. '<|end|>' → logprob: -8.351422309875488
    8. '<|end|>' → logprob: -9.351422309875488
    9. '):' → logprob: -9.476422309875488
    10. 'Units' → logprob: -9.726422309875488

Token 446: '.
' (ID: 558)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.19151921570301056
    2. ')' → logprob: -2.816519260406494
    3. ':' → logprob: -3.691519260406494
    4. '<|end|>' → logprob: -3.691519260406494
    5. '):
' → logprob: -3.816519260406494
    6. '.' → logprob: -4.191519260406494
    7. '<|end|>' → logprob: -4.441519260406494
    8. ',' → logprob: -5.191519260406494
    9. '):' → logprob: -5.191519260406494
    10. 'def' → logprob: -7.191519260406494

Token 447: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0005160979344509542
    2. ')' → logprob: -8.250515937805176
    3. '
' → logprob: -9.250515937805176
    4. ')
' → logprob: -9.500515937805176
    5. 'def' → logprob: -10.000515937805176
    6. '"""
' → logprob: -10.875515937805176
    7. '  ' → logprob: -12.625515937805176
    8. '```' → logprob: -12.750515937805176
    9. '"""' → logprob: -13.000515937805176
    10. 'class' → logprob: -13.125515937805176

Token 448: ' """
' (ID: 7037)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.004148561041802168
    2. '"""' → logprob: -5.879148483276367
    3. 'def' → logprob: -7.129148483276367
    4. '"""
' (adapté à ' """
') → logprob: -8.379148483276367
    5. '```' → logprob: -8.504148483276367
    6. '
' → logprob: -10.254148483276367
    7. ')' → logprob: -10.754148483276367
    8. ' def' → logprob: -10.879148483276367
    9. 'class' → logprob: -11.379148483276367
    10. '<|end|>' → logprob: -12.754148483276367

Token 449: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.008460679091513157
    2. 'def' → logprob: -4.883460521697998
    3. ' def' → logprob: -7.258460521697998
    4. 'class' → logprob: -9.133460998535156
    5. '```' → logprob: -11.258460998535156
    6. ' ' → logprob: -11.508460998535156
    7. '  ' → logprob: -12.008460998535156
    8. '    ' → logprob: -12.508460998535156
    9. ' class' → logprob: -13.008460998535156
    10. '
' → logprob: -13.508460998535156

Token 450: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.41433948278427124
    2. 'class' → logprob: -1.164339542388916
    3. ' def' → logprob: -3.664339542388916
    4. '   ' → logprob: -6.664339542388916
    5. ' class' → logprob: -8.539339065551758
    6. '	def' → logprob: -13.539339065551758
    7. '```' → logprob: -14.289339065551758
    8. '
' → logprob: -16.164339065551758
    9. ' ' → logprob: -16.664339065551758
    10. '...' → logprob: -17.289339065551758

Token 451: ' __' (ID: 2516)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.31990113854408264
    2. 'init' → logprob: -1.3199011087417603
    3. 'def' → logprob: -5.694900989532471
    4. '_init' → logprob: -6.069900989532471
    5. ' __' → logprob: -7.069900989532471
    6. '```' → logprob: -10.444901466369629
    7. 'classmethod' → logprob: -10.944901466369629
    8. '_' → logprob: -10.944901466369629
    9. ' def' → logprob: -11.944901466369629
    10. '___' → logprob: -12.819901466369629

Token 452: 'init' (ID: 3287)
  Prédit: 'init'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: -7.896309739408025e-07
    2. 'class' → logprob: -15.125000953674316
    3. 'def' → logprob: -16.125
    4. '_init' → logprob: -16.375
    5. ' init' → logprob: -16.5
    6. '_' → logprob: -17.625
    7. 'classmethod' → logprob: -17.875
    8. '```' → logprob: -18.0
    9. '(init' → logprob: -18.0
    10. 'code' → logprob: -18.375

Token 453: '__(' (ID: 8241)
  Prédit: '__('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.008500047028064728
    2. '(self' → logprob: -5.008500099182129
    3. '(' → logprob: -7.008500099182129
    4. 'self' → logprob: -7.633500099182129
    5. ',' → logprob: -8.633500099182129
    6. '__' → logprob: -9.008500099182129
    7. '__(
' → logprob: -10.258500099182129
    8. 'def' → logprob: -10.883500099182129
    9. ' (' → logprob: -11.008500099182129
    10. '_(' → logprob: -11.633500099182129

Token 454: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -5.633853652398102e-05
    2. ' self' → logprob: -9.875056266784668
    3. ',' → logprob: -12.875056266784668
    4. 'quantity' → logprob: -13.250056266784668
    5. '0' → logprob: -16.000057220458984
    6. '(self' → logprob: -16.125057220458984
    7. 'quant' → logprob: -17.375057220458984
    8. '
' → logprob: -17.500057220458984
    9. ',self' → logprob: -17.625057220458984
    10. 'mar' → logprob: -17.750057220458984

Token 455: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0024821963161230087
    2. 'self' → logprob: -6.0024824142456055
    3. ',self' → logprob: -12.377482414245605
    4. ' ,' → logprob: -14.002482414245605
    5. '(self' → logprob: -14.377482414245605
    6. ' self' → logprob: -14.502482414245605
    7. 'def' → logprob: -15.877482414245605
    8. '__,' → logprob: -16.12748146057129
    9. '，' → logprob: -17.25248146057129
    10. '(' → logprob: -17.37748146057129

Token 456: ' mar' (ID: 2674)
  Prédit: 'mar'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mar' → logprob: -0.01157128531485796
    2. 'quantity' → logprob: -5.261571407318115
    3. ' mar' → logprob: -5.261571407318115
    4. 'm' → logprob: -7.761571407318115
    5. ' quantity' → logprob: -8.261570930480957
    6. 'value' → logprob: -8.761570930480957
    7. 'count' → logprob: -10.261570930480957
    8. 'quant' → logprob: -10.386570930480957
    9. 'y' → logprob: -10.511570930480957
    10. 'units' → logprob: -10.761570930480957

Token 457: 'ugu' (ID: 8060)
  Prédit: 'gu'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'gu' → logprob: -0.12773585319519043
    2. 'ugu' → logprob: -2.1277358531951904
    3. 'ug' → logprob: -8.62773609161377
    4. '```' → logprob: -8.62773609161377
    5. 'гу' → logprob: -9.25273609161377
    6. 'u' → logprob: -9.25273609161377
    7. 'lugu' → logprob: -9.62773609161377
    8. 'ぐ' → logprob: -9.87773609161377
    9. ' gu' → logprob: -10.75273609161377
    10. 'g' → logprob: -10.75273609161377

Token 458: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -3.833878508885391e-05
    2. ':int' → logprob: -10.625038146972656
    3. '):' → logprob: -11.750038146972656
    4. ' :' → logprob: -12.375038146972656
    5. '):
' → logprob: -14.375038146972656
    6. '=' → logprob: -14.625038146972656
    7. 'int' → logprob: -14.750038146972656
    8. '   ' → logprob: -15.375038146972656
    9. ')' → logprob: -16.000038146972656
    10. '：' → logprob: -16.875038146972656

Token 459: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.011048528365790844
    2. ' int' → logprob: -4.511048316955566
    3. '0' → logprob: -14.386048316955566
    4. '(int' → logprob: -16.761049270629883
    5. ':int' → logprob: -17.761049270629883
    6. ' ' → logprob: -18.011049270629883
    7. '[int' → logprob: -18.011049270629883
    8. '	int' → logprob: -18.386049270629883
    9. '   ' → logprob: -18.761049270629883
    10. '1' → logprob: -18.761049270629883

Token 460: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.47416990995407104
    2. '):
' → logprob: -0.974169909954071
    3. '):
' → logprob: -10.099169731140137
    4. ':' → logprob: -10.849169731140137
    5. '       ' → logprob: -11.224169731140137
    6. ')' → logprob: -11.349169731140137
    7. '   ' → logprob: -12.724169731140137
    8. '):

' → logprob: -13.474169731140137
    9. '<|end|>' → logprob: -14.224169731140137
    10. ' ):' → logprob: -14.724169731140137

Token 461: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00014585316239390522
    2. 'if' → logprob: -9.50014591217041
    3. ' if' → logprob: -9.62514591217041
    4. '   ' → logprob: -12.75014591217041
    5. '	' → logprob: -14.25014591217041
    6. '```' → logprob: -14.75014591217041
    7. '<|end|>' → logprob: -15.25014591217041
    8. ' ' → logprob: -15.50014591217041
    9. '           ' → logprob: -15.62514591217041
    10. '	   ' → logprob: -15.87514591217041

Token 462: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.16077037155628204
    2. ' if' → logprob: -1.9107704162597656
    3. '       ' → logprob: -7.785770416259766
    4. 'mar' → logprob: -9.660770416259766
    5. 'self' → logprob: -9.785770416259766
    6. ' mar' → logprob: -11.660770416259766
    7. ' self' → logprob: -13.410770416259766
    8. '   ' → logprob: -15.910770416259766
    9. '        ' → logprob: -16.535770416259766
    10. '	if' → logprob: -16.660770416259766

Token 463: ' mar' (ID: 2674)
  Prédit: 'mar'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mar' → logprob: -0.3868757486343384
    2. ' mar' → logprob: -1.1368757486343384
    3. 'm' → logprob: -13.136876106262207
    4. ' ' → logprob: -14.761876106262207
    5. '   ' → logprob: -15.261876106262207
    6. 'ma' → logprob: -15.761876106262207
    7. '0' → logprob: -15.886876106262207
    8. '_mar' → logprob: -16.01187515258789
    9. 'Mar' → logprob: -16.01187515258789
    10. ' marl' → logprob: -16.13687515258789

Token 464: 'ugu' (ID: 8060)
  Prédit: 'mar'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mar' → logprob: -0.25655820965766907
    2. 'ugu' → logprob: -1.6315581798553467
    3. 'gu' → logprob: -3.6315581798553467
    4. ' mar' → logprob: -6.006558418273926
    5. 'マ' → logprob: -7.506558418273926
    6. 'r' → logprob: -8.256558418273926
    7. '```' → logprob: -8.506558418273926
    8. 'm' → logprob: -9.006558418273926
    9. 'lugu' → logprob: -9.131558418273926
    10. ' ' → logprob: -9.256558418273926

Token 465: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.3132631182670593
    2. '<' → logprob: -1.313263177871704
    3. ' ' → logprob: -14.063262939453125
    4. '<int' → logprob: -15.063262939453125
    5. '<class' → logprob: -16.188262939453125
    6. '<len' → logprob: -17.063262939453125
    7. '[' → logprob: -17.438262939453125
    8. ' <=' → logprob: -17.563262939453125
    9. '<m' → logprob: -17.688262939453125
    10. '<size' → logprob: -17.813262939453125

Token 466: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.002805467927828431
    2. ' ' → logprob: -5.877805233001709
    3. '   ' → logprob: -14.502805709838867
    4. '=' → logprob: -16.627805709838867
    5. '       ' → logprob: -17.127805709838867
    6. '۰' → logprob: -18.127805709838867
    7. '  ' → logprob: -18.440305709838867
    8. '    ' → logprob: -18.815305709838867
    9. '[' → logprob: -19.315305709838867
    10. ',' → logprob: -19.440305709838867

Token 467: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -9.014684110297821e-06
    2. ' ' → logprob: -11.625008583068848
    3. '=' → logprob: -18.250009536743164
    4. '   ' → logprob: -18.750009536743164
    5. '۰' → logprob: -19.625009536743164
    6. 'def' → logprob: -20.875009536743164
    7. '```' → logprob: -21.375009536743164
    8. '[' → logprob: -21.375009536743164
    9. '
' → logprob: -21.625009536743164
    10. '       ' → logprob: -21.625009536743164

Token 468: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.15272456407546997
    2. ':
' → logprob: -2.027724504470825
    3. '           ' → logprob: -5.152724742889404
    4. '<|end|>' → logprob: -5.902724742889404
    5. '):
' → logprob: -7.402724742889404
    6. '       ' → logprob: -7.652724742889404
    7. '):' → logprob: -9.027724266052246
    8. '<|end|>' → logprob: -9.152724266052246
    9. ',' → logprob: -9.902724266052246
    10. '():
' → logprob: -10.027724266052246

Token 469: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.08592569082975388
    2. ' raise' → logprob: -2.585925579071045
    3. 'raise' → logprob: -4.960925579071045
    4. '            ' → logprob: -13.585926055908203
    5. '	raise' → logprob: -13.960926055908203
    6. '       ' → logprob: -14.460926055908203
    7. '```' → logprob: -14.585926055908203
    8. '          ' → logprob: -14.585926055908203
    9. '               ' → logprob: -15.085926055908203
    10. 'Raise' → logprob: -15.210926055908203

Token 470: ' raise' (ID: 9338)
  Prédit: ' raise'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' raise' → logprob: -0.47411012649536133
    2. 'raise' (adapté à ' raise') → logprob: -0.9741101264953613
    3. '           ' → logprob: -10.349109649658203
    4. 'Value' → logprob: -14.349109649658203
    5. '	raise' → logprob: -15.474109649658203
    6. '       ' → logprob: -16.224109649658203
    7. 'Raise' → logprob: -16.224109649658203
    8. '_raise' → logprob: -16.724109649658203
    9. '```' → logprob: -17.474109649658203
    10. 'raises' → logprob: -17.599109649658203

Token 471: ' Value' (ID: 9963)
  Prédit: 'Value'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Value' → logprob: -0.014163628220558167
    2. ' Value' → logprob: -4.264163494110107
    3. '_value' → logprob: -16.014163970947266
    4. 'value' → logprob: -17.264163970947266
    5. ' value' → logprob: -18.139163970947266
    6. '	Value' → logprob: -18.139163970947266
    7. '_Value' → logprob: -19.014163970947266
    8. '0' → logprob: -19.764163970947266
    9. '.Value' → logprob: -20.264163970947266
    10. '(Value' → logprob: -20.264163970947266

Token 472: 'Error' (ID: 2255)
  Prédit: 'Value'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Value' → logprob: -0.12693408131599426
    2. 'Error' → logprob: -2.126934051513672
    3. ' Value' → logprob: -12.126934051513672
    4. 'Val' → logprob: -15.251934051513672
    5. '(Value' → logprob: -16.626934051513672
    6. '_value' → logprob: -16.876934051513672
    7. '	Value' → logprob: -16.876934051513672
    8. '```' → logprob: -17.501934051513672
    9. '.Value' → logprob: -17.876934051513672
    10. 'alue' → logprob: -18.001934051513672

Token 473: '("' (ID: 568)
  Prédit: '("'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '("' → logprob: -7.3458322731312364e-06
    2. '(' → logprob: -11.875007629394531
    3. '('' → logprob: -15.250007629394531
    4. '       ' → logprob: -17.87500762939453
    5. '(
' → logprob: -18.00000762939453
    6. '"' → logprob: -18.25000762939453
    7. ' ("' → logprob: -18.50000762939453
    8. '           ' → logprob: -19.00000762939453
    9. ':' → logprob: -19.75000762939453
    10. '(f' → logprob: -20.00000762939453

Token 474: 'Mar' (ID: 11272)
  Prédit: 'mar'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mar' → logprob: -0.00016921341011766344
    2. ' mar' → logprob: -8.750168800354004
    3. 'Mar' → logprob: -12.000168800354004
    4. 'Value' → logprob: -12.500168800354004
    5. 'm' → logprob: -16.12516975402832
    6. 'Quantity' → logprob: -16.12516975402832
    7. 'The' → logprob: -16.50016975402832
    8. 'Code' → logprob: -16.50016975402832
    9. 'mal' → logprob: -16.75016975402832
    10. 'Please' → logprob: -17.25016975402832

Token 475: 'ugu' (ID: 8060)
  Prédit: 'gu'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'gu' → logprob: -0.4757730960845947
    2. 'ugu' → logprob: -0.9757730960845947
    3. '```' → logprob: -7.600772857666016
    4. 'mar' → logprob: -8.600772857666016
    5. 'グ' → logprob: -8.725772857666016
    6. 'ug' → logprob: -8.725772857666016
    7. ' ' → logprob: -8.850772857666016
    8. 'lugu' → logprob: -9.725772857666016
    9. 'гу' → logprob: -9.975772857666016
    10. '   ' → logprob: -9.975772857666016

Token 476: ' unit' (ID: 7670)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -1.197910189628601
    2. ' units' → logprob: -1.947910189628601
    3. '<|end|>' → logprob: -2.0729103088378906
    4. '_units' → logprob: -2.1979103088378906
    5. ')' → logprob: -2.5729103088378906
    6. 'Unit' → logprob: -3.3229103088378906
    7. ' unit' → logprob: -3.4479103088378906
    8. '_unit' → logprob: -3.5729103088378906
    9. '):
' → logprob: -3.6979103088378906
    10. '<Unit' → logprob: -3.6979103088378906

Token 477: ' must' (ID: 2804)
  Prédit: ' must'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' must' → logprob: -0.014412997290492058
    2. 'must' → logprob: -4.514412879943848
    3. ')' → logprob: -6.014412879943848
    4. '<|end|>' → logprob: -8.014412879943848
    5. 'Must' → logprob: -9.014412879943848
    6. ' is' → logprob: -9.139412879943848
    7. ' units' → logprob: -9.889412879943848
    8. '<|end|>' → logprob: -10.139412879943848
    9. ':' → logprob: -10.389412879943848
    10. ' )' → logprob: -10.764412879943848

Token 478: ' be' (ID: 413)
  Prédit: ' be'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' be' → logprob: -0.06546669453382492
    2. ' not' → logprob: -3.5654666423797607
    3. '0' → logprob: -4.56546688079834
    4. 'not' → logprob: -4.56546688079834
    5. 'be' → logprob: -4.81546688079834
    6. ' mar' → logprob: -5.69046688079834
    7. ' ' → logprob: -6.69046688079834
    8. 'mar' → logprob: -7.31546688079834
    9. 'must' → logprob: -8.06546688079834
    10. ' must' → logprob: -8.69046688079834

Token 479: ' non' (ID: 2893)
  Prédit: 'non'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'non' → logprob: -0.0015036711702123284
    2. ' non' → logprob: -6.5015034675598145
    3. '0' → logprob: -13.626503944396973
    4. 'nonnull' → logprob: -16.376502990722656
    5. '_non' → logprob: -16.501502990722656
    6. 'n' → logprob: -17.126502990722656
    7. 'Non' → logprob: -19.251502990722656
    8. 'not' → logprob: -20.001502990722656
    9. '(non' → logprob: -20.001502990722656
    10. ' ' → logprob: -20.001502990722656

Token 480: '-negative' (ID: 126970)
  Prédit: 'negative'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'negative' → logprob: -0.4718776345252991
    2. '0' → logprob: -1.2218775749206543
    3. '_negative' → logprob: -2.8468775749206543
    4. '-negative' → logprob: -3.8468775749206543
    5. 'Negative' → logprob: -6.346877574920654
    6. ' negative' → logprob: -8.721878051757812
    7. 'zero' → logprob: -8.846878051757812
    8. '_zero' → logprob: -10.721878051757812
    9. ' ' → logprob: -10.971878051757812
    10. '   ' → logprob: -11.471878051757812

Token 481: '")
' (ID: 1896)
  Prédit: '")
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '")
' → logprob: -0.017957700416445732
    2. ')
' → logprob: -5.01795768737793
    3. '       ' → logprob: -5.14295768737793
    4. ')")
' → logprob: -5.64295768737793
    5. '")' → logprob: -6.51795768737793
    6. ')' → logprob: -8.26795768737793
    7. ' ")
' → logprob: -10.64295768737793
    8. '")
' → logprob: -10.89295768737793
    9. ')")' → logprob: -11.39295768737793
    10. '   ' → logprob: -12.89295768737793

Token 482: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -4.668304245569743e-05
    2. 'self' → logprob: -10.250046730041504
    3. ',' → logprob: -12.375046730041504
    4. '	' → logprob: -13.250046730041504
    5. '[' → logprob: -13.875046730041504
    6. '```' → logprob: -14.375046730041504
    7. '<|end|>' → logprob: -14.500046730041504
    8. '   ' → logprob: -14.500046730041504
    9. '
' → logprob: -14.625046730041504
    10. '​' → logprob: -14.750046730041504

Token 483: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.009318608790636063
    2. '       ' → logprob: -4.759318828582764
    3. ' self' → logprob: -7.259318828582764
    4. '	self' → logprob: -15.634318351745605
    5. '   ' → logprob: -16.384319305419922
    6. '
' → logprob: -17.009319305419922
    7. '(self' → logprob: -17.384319305419922
    8. 'def' → logprob: -18.384319305419922
    9. '```' → logprob: -18.384319305419922
    10. ' ' → logprob: -18.884319305419922

Token 484: '.mar' (ID: 107988)
  Prédit: 'mar'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mar' → logprob: -0.04895669221878052
    2. ' mar' → logprob: -3.6739566326141357
    3. '.mar' → logprob: -3.9239566326141357
    4. '_mar' → logprob: -6.173956871032715
    5. 'm' → logprob: -9.298956871032715
    6. '.' → logprob: -9.423956871032715
    7. ' =' → logprob: -9.673956871032715
    8. ' .' → logprob: -9.798956871032715
    9. 'мар' → logprob: -9.923956871032715
    10. '.m' → logprob: -10.548956871032715

Token 485: 'ugu' (ID: 8060)
  Prédit: 'ugu'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ugu' → logprob: -0.006917364429682493
    2. 'gu' → logprob: -5.006917476654053
    3. '```' → logprob: -8.881916999816895
    4. 'ug' → logprob: -11.256916999816895
    5. '``' → logprob: -11.756916999816895
    6. '
' → logprob: -11.881916999816895
    7. 'グ' → logprob: -11.881916999816895
    8. 'гу' → logprob: -12.506916999816895
    9. '_gu' → logprob: -12.756916999816895
    10. 'ぐ' → logprob: -12.756916999816895

Token 486: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.016036715358495712
    2. ' =' → logprob: -4.141036510467529
    3. ')' → logprob: -13.516036987304688
    4. ':' → logprob: -14.391036987304688
    5. '=int' → logprob: -16.016036987304688
    6. '   ' → logprob: -16.141036987304688
    7. ')=' → logprob: -16.391036987304688
    8. '=self' → logprob: -16.391036987304688
    9. '<|end|>' → logprob: -16.516036987304688
    10. '+=' → logprob: -16.766036987304688

Token 487: ' mar' (ID: 2674)
  Prédit: 'mar'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mar' → logprob: -0.06196970492601395
    2. ' mar' → logprob: -2.811969757080078
    3. 'm' → logprob: -14.811969757080078
    4. ' ' → logprob: -15.686969757080078
    5. '   ' → logprob: -15.936969757080078
    6. ' ' → logprob: -15.936969757080078
    7. '0' → logprob: -16.186969757080078
    8. ' marl' → logprob: -16.374469757080078
    9. 'Mar' → logprob: -16.374469757080078
    10. '_mar' → logprob: -16.436969757080078

Token 488: 'ugu' (ID: 8060)
  Prédit: 'ugu'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ugu' → logprob: -0.0013504724483937025
    2. 'gu' → logprob: -6.626350402832031
    3. '```' → logprob: -11.751350402832031
    4. 'ogu' → logprob: -13.001350402832031
    5. 'гу' → logprob: -13.376350402832031
    6. 'る' → logprob: -13.626350402832031
    7. 'ugo' → logprob: -13.751350402832031
    8. 'igu' → logprob: -14.001350402832031
    9. 'ぐ' → logprob: -14.376350402832031
    10. 'u' → logprob: -14.501350402832031

Token 489: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 490: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 491: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.023313844576478004
    2. ' def' → logprob: -3.7733137607574463
    3. '
' → logprob: -10.273313522338867
    4. '   ' → logprob: -10.398313522338867
    5. ' ' → logprob: -13.773313522338867
    6. '```' → logprob: -13.898313522338867
    7. ' 
' → logprob: -15.023313522338867
    8. '	def' → logprob: -15.148313522338867
    9. '    
' → logprob: -15.273313522338867
    10. ':def' → logprob: -15.773313522338867

Token 492: ' to' (ID: 316)
  Prédit: 'to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'to' → logprob: -0.003734403057023883
    2. 'def' → logprob: -6.128734588623047
    3. ' to' → logprob: -6.503734588623047
    4. ' def' → logprob: -10.128734588623047
    5. 'mar' → logprob: -12.378734588623047
    6. ' mar' → logprob: -13.003734588623047
    7. '__' → logprob: -13.128734588623047
    8. '   ' → logprob: -14.753734588623047
    9. '```' → logprob: -14.878734588623047
    10. '.to' → logprob: -15.128734588623047

Token 493: '_base' (ID: 17096)
  Prédit: '_base'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_base' → logprob: -0.04858975484967232
    2. 'base' → logprob: -3.0485897064208984
    3. 'Base' → logprob: -13.798589706420898
    4. ' base' → logprob: -14.298589706420898
    5. 'mar' → logprob: -15.673589706420898
    6. '_' → logprob: -16.1735897064209
    7. '_bas' → logprob: -16.1735897064209
    8. 'to' → logprob: -16.2985897064209
    9. '_mar' → logprob: -16.7985897064209
    10. '__' → logprob: -17.0485897064209

Token 494: '(self' (ID: 2402)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0011873723706230521
    2. '(' → logprob: -7.126187324523926
    3. '(self' → logprob: -7.876187324523926
    4. ')' → logprob: -13.751187324523926
    5. '(
' → logprob: -13.876187324523926
    6. ' ()' → logprob: -15.001187324523926
    7. '```' → logprob: -15.126187324523926
    8. 'def' → logprob: -15.751187324523926
    9. '()
' → logprob: -15.876187324523926
    10. '())' → logprob: -16.251188278198242

Token 495: ')' (ID: 8)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.2519746720790863
    2. ')' → logprob: -1.5019747018814087
    3. '(' → logprob: -11.126975059509277
    4. ' ()' → logprob: -11.626975059509277
    5. '())' → logprob: -11.751975059509277
    6. '(self' → logprob: -11.751975059509277
    7. ' )' → logprob: -12.626975059509277
    8. '   ' → logprob: -13.876975059509277
    9. '```' → logprob: -14.376975059509277
    10. 'self' → logprob: -14.876975059509277

Token 496: ' ->' (ID: 2747)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.635669469833374
    2. '()' → logprob: -0.885669469833374
    3. '(' → logprob: -3.385669469833374
    4. ')' → logprob: -3.760669469833374
    5. '->' → logprob: -7.635669708251953
    6. ' ->' → logprob: -9.135669708251953
    7. 'self' → logprob: -9.260669708251953
    8. 'def' → logprob: -9.635669708251953
    9. '(
' → logprob: -10.385669708251953
    10. 'return' → logprob: -10.635669708251953

Token 497: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.06216665729880333
    2. 'self' → logprob: -2.812166690826416
    3. ' int' → logprob: -8.687166213989258
    4. ' self' → logprob: -10.437166213989258
    5. 'return' → logprob: -14.187166213989258
    6. '   ' → logprob: -16.437166213989258
    7. 'def' → logprob: -17.062166213989258
    8. '<int' → logprob: -17.187166213989258
    9. '[int' → logprob: -17.187166213989258
    10. '(int' → logprob: -17.562166213989258

Token 498: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.547568678855896
    2. ':
' → logprob: -1.047568678855896
    3. '       ' → logprob: -2.9225687980651855
    4. '():
' → logprob: -4.7975687980651855
    5. 'return' → logprob: -5.6725687980651855
    6. '():' → logprob: -6.4225687980651855
    7. '()' → logprob: -6.5475687980651855
    8. ':return' → logprob: -6.9225687980651855
    9. '):
' → logprob: -7.9225687980651855
    10. '   ' → logprob: -8.297568321228027

Token 499: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.008648133836686611
    2. 'return' → logprob: -4.758647918701172
    3. ' return' → logprob: -10.383647918701172
    4. '	' → logprob: -13.633647918701172
    5. '   ' → logprob: -14.383647918701172
    6. '```' → logprob: -14.883647918701172
    7. '	return' → logprob: -15.383647918701172
    8. 'self' → logprob: -16.508647918701172
    9. '{return' → logprob: -16.758647918701172
    10. '	   ' → logprob: -16.883647918701172

Token 500: ' #' (ID: 1069)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.2018207460641861
    2. '       ' → logprob: -1.951820731163025
    3. 'self' → logprob: -3.2018208503723145
    4. ' return' → logprob: -9.826820373535156
    5. ' self' → logprob: -14.576820373535156
    6. '0' → logprob: -14.826820373535156
    7. '#' (adapté à ' #') → logprob: -15.576820373535156
    8. '   ' → logprob: -15.951820373535156
    9. '	return' → logprob: -16.951820373535156
    10. '{return' → logprob: -16.951820373535156

Token 501: ' Base' (ID: 8729)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.005777699872851372
    2. 'self' → logprob: -5.505777835845947
    3. '       ' → logprob: -6.505777835845947
    4. ' return' → logprob: -8.505777359008789
    5. 'mar' → logprob: -15.505777359008789
    6. 'def' → logprob: -15.630777359008789
    7. ' self' → logprob: -16.38077735900879
    8. '   ' → logprob: -16.63077735900879
    9. '#' → logprob: -16.88077735900879
    10. 'Mar' → logprob: -17.00577735900879

Token 502: ' quantity' (ID: 17245)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.5289303064346313
    2. '   ' → logprob: -1.5289303064346313
    3. 'mar' → logprob: -1.9039303064346313
    4. '       ' → logprob: -3.653930187225342
    5. 'def' → logprob: -5.028930187225342
    6. 'unit' → logprob: -5.903930187225342
    7. '```' → logprob: -5.903930187225342
    8. 'quantity' → logprob: -6.153930187225342
    9. ' return' → logprob: -6.153930187225342
    10. ' mar' → logprob: -6.778930187225342

Token 503: ' unit' (ID: 7670)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.17787592113018036
    2. 'return' → logprob: -2.1778759956359863
    3. '=' → logprob: -3.8028759956359863
    4. ' =' → logprob: -3.8028759956359863
    5. '   ' → logprob: -6.177875995635986
    6. ':' → logprob: -6.802875995635986
    7. ' return' → logprob: -7.302875995635986
    8. 'def' → logprob: -7.427875995635986
    9. '```' → logprob: -7.802875995635986
    10. ':return' → logprob: -9.927875518798828

Token 504: ' is' (ID: 382)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00803101621568203
    2. 'return' → logprob: -4.883030891418457
    3. ' return' → logprob: -8.008030891418457
    4. '=' → logprob: -10.008030891418457
    5. ':' → logprob: -10.508030891418457
    6. ' =' → logprob: -11.383030891418457
    7. '   ' → logprob: -13.133030891418457
    8. '<|end|>' → logprob: -13.883030891418457
    9. '#' → logprob: -14.133030891418457
    10. '(' → logprob: -14.258030891418457

Token 505: ' the' (ID: 290)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.01117797289043665
    2. ' self' → logprob: -4.511178016662598
    3. '1' → logprob: -9.011178016662598
    4. '0' → logprob: -13.011178016662598
    5. '   ' → logprob: -13.136178016662598
    6. '2' → logprob: -13.636178016662598
    7. '       ' → logprob: -14.261178016662598
    8. 'the' → logprob: -14.261178016662598
    9. '	self' → logprob: -14.761178016662598
    10. ' ' → logprob: -15.261178016662598

Token 506: ' Mar' (ID: 3145)
  Prédit: 'mar'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'mar' → logprob: -0.07707040011882782
    2. '1' → logprob: -2.827070474624634
    3. ' mar' → logprob: -4.327070236206055
    4. 'self' → logprob: -7.327070236206055
    5. 'quantity' → logprob: -7.702070236206055
    6. ' quantity' → logprob: -8.327070236206055
    7. ' ' → logprob: -8.702070236206055
    8. ' self' → logprob: -10.077070236206055
    9. 'item' → logprob: -10.202070236206055
    10. '   ' → logprob: -10.202070236206055

Token 507: 'ugu' (ID: 8060)
  Prédit: 'ugu'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ugu' → logprob: -0.0005318254698067904
    2. 'gu' → logprob: -7.8755316734313965
    3. 'ug' → logprob: -9.750532150268555
    4. 'グ' → logprob: -10.250532150268555
    5. 'гу' → logprob: -11.125532150268555
    6. 'угу' → logprob: -11.750532150268555
    7. 'lugu' → logprob: -12.000532150268555
    8. '\xef\xbd' → logprob: -12.875532150268555
    9. ' ' → logprob: -13.250532150268555
    10. 'r' → logprob: -13.375532150268555

Token 508: ' count' (ID: 3605)
  Prédit: 'unit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'unit' → logprob: -0.31512853503227234
    2. 'self' → logprob: -1.5651285648345947
    3. '<|end|>' → logprob: -4.190128326416016
    4. '       ' → logprob: -4.440128326416016
    5. '   ' → logprob: -4.690128326416016
    6. ' unit' → logprob: -4.940128326416016
    7. 'units' → logprob: -5.315128326416016
    8. '<|end|>' → logprob: -5.440128326416016
    9. '_unit' → logprob: -6.315128326416016
    10. '.unit' → logprob: -6.565128326416016

Token 509: ' itself' (ID: 8807)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.009787493385374546
    2. 'return' → logprob: -4.634787559509277
    3. ' return' → logprob: -10.759787559509277
    4. '   ' → logprob: -11.759787559509277
    5. '
' → logprob: -13.509787559509277
    6. '```' → logprob: -15.384787559509277
    7. '	return' → logprob: -15.759787559509277
    8. '           ' → logprob: -16.00978660583496
    9. '        
' → logprob: -16.25978660583496
    10. ':' → logprob: -16.25978660583496

Token 510: ';' (ID: 26)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0033156692516058683
    2. 'return' → logprob: -5.753315448760986
    3. '
' → logprob: -9.503315925598145
    4. ' return' → logprob: -10.253315925598145
    5. '```' → logprob: -11.503315925598145
    6. '   ' → logprob: -12.003315925598145
    7. '\n' → logprob: -12.628315925598145
    8. '	' → logprob: -13.003315925598145
    9. '        
' → logprob: -13.753315925598145
    10. '()' → logprob: -14.378315925598145

Token 511: ' the' (ID: 290)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.20250432193279266
    2. '       ' → logprob: -1.702504277229309
    3. ' return' → logprob: -6.8275041580200195
    4. '   ' → logprob: -12.07750415802002
    5. '	return' → logprob: -13.95250415802002
    6. 'def' → logprob: -15.82750415802002
    7. '```' → logprob: -16.827505111694336
    8. ' ' → logprob: -17.077505111694336
    9. '           ' → logprob: -17.452505111694336
    10. '
' → logprob: -17.702505111694336

Token 512: ' problem' (ID: 4792)
  Prédit: 'mar'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'mar' → logprob: -4.4849443838757e-06
    2. ' mar' → logprob: -13.000004768371582
    3. 'self' → logprob: -13.500004768371582
    4. '.mar' → logprob: -14.625004768371582
    5. '```' → logprob: -16.250003814697266
    6. 'return' → logprob: -17.000003814697266
    7. 'marshal' → logprob: -17.250003814697266
    8. '
' → logprob: -17.500003814697266
    9. 'marvin' → logprob: -17.500003814697266
    10. 'm' → logprob: -17.625003814697266

Token 513: ' does' (ID: 2226)
  Prédit: 'returns'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'returns' → logprob: -0.5829989314079285
    2. '       ' → logprob: -1.5829989910125732
    3. '   ' → logprob: -2.4579989910125732
    4. ' returns' → logprob: -3.2079989910125732
    5. 'contin' → logprob: -3.3329989910125732
    6. 'return' → logprob: -3.8329989910125732
    7. ' only' → logprob: -4.582998752593994
    8. 'def' → logprob: -4.707998752593994
    9. 'only' → logprob: -4.707998752593994
    10. '```' → logprob: -4.707998752593994

Token 514: ' not' (ID: 625)
  Prédit: 'not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'not' → logprob: -0.029774906113743782
    2. ' not' → logprob: -3.5297749042510986
    3. 'n't' → logprob: -10.90477466583252
    4. 'self' → logprob: -12.65477466583252
    5. 'return' → logprob: -13.40477466583252
    6. '   ' → logprob: -14.77977466583252
    7. '       ' → logprob: -15.02977466583252
    8. 'n' → logprob: -15.77977466583252
    9. 'nothing' → logprob: -15.90477466583252
    10. '```' → logprob: -16.279775619506836

Token 515: ' specify' (ID: 27018)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.07071889191865921
    2. 'count' → logprob: -2.945719003677368
    3. 'continue' → logprob: -4.945718765258789
    4. 'consider' → logprob: -5.570718765258789
    5. ' return' → logprob: -6.195718765258789
    6. 'def' → logprob: -7.570718765258789
    7. 'mar' → logprob: -7.570718765258789
    8. 'store' → logprob: -7.820718765258789
    9. 't' → logprob: -7.945718765258789
    10. '       ' → logprob: -8.445718765258789

Token 516: ' conversions' (ID: 74370)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.08744398504495621
    2. 'return' → logprob: -2.5874440670013428
    3. ' self' → logprob: -5.837443828582764
    4. '       ' → logprob: -5.837443828582764
    5. 'the' → logprob: -6.462443828582764
    6. ' return' → logprob: -8.087444305419922
    7. 'mar' → logprob: -8.337444305419922
    8. '```' → logprob: -8.712444305419922
    9. 'a' → logprob: -9.087444305419922
    10. '   ' → logprob: -9.462444305419922

Token 517: ' for' (ID: 395)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.002286098897457123
    2. '
' → logprob: -6.752285957336426
    3. '   ' → logprob: -7.877285957336426
    4. '<|end|>' → logprob: -8.252285957336426
    5. '    
' → logprob: -9.127285957336426
    6. '        
' → logprob: -9.252285957336426
    7. '<|end|>' → logprob: -9.377285957336426
    8. 'return' → logprob: -9.627285957336426
    9. '  
' → logprob: -10.127285957336426
    10. '\n' → logprob: -10.877285957336426

Token 518: ' y' (ID: 342)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.11952245235443115
    2. 'quantity' → logprob: -2.6195225715637207
    3. 'mar' → logprob: -3.4945225715637207
    4. ' self' → logprob: -5.994522571563721
    5. ' quantity' → logprob: -6.244522571563721
    6. 'this' → logprob: -6.369522571563721
    7. 'quant' → logprob: -6.619522571563721
    8. 'the' → logprob: -6.744522571563721
    9. 'multip' → logprob: -8.744522094726562
    10. 'units' → logprob: -9.244522094726562

Token 519: '
' (ID: 198)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.3477874994277954
    2. '<|end|>' → logprob: -1.8477874994277954
    3. '<|end|>' → logprob: -2.347787380218506
    4. '.' → logprob: -5.097787380218506
    5. ',' → logprob: -5.097787380218506
    6. '),' → logprob: -5.222787380218506
    7. '=' → logprob: -5.347787380218506
    8. '):
' → logprob: -5.847787380218506
    9. ' units' → logprob: -6.222787380218506
    10. 'mar' → logprob: -6.597787380218506

Token 520: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0002932750794570893
    2. '   ' → logprob: -9.000293731689453
    3. 'return' → logprob: -9.000293731689453
    4. '
' → logprob: -10.625293731689453
    5. '        
' → logprob: -12.875293731689453
    6. '      ' → logprob: -13.000293731689453
    7. '```' → logprob: -13.000293731689453
    8. '     ' → logprob: -13.250293731689453
    9. '<|end|>' → logprob: -13.250293731689453
    10. '<|end|>' → logprob: -13.500293731689453

Token 521: ' return' (ID: 622)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.20199531316757202
    2. 'return' (adapté à ' return') → logprob: -1.7019953727722168
    3. ' return' → logprob: -7.451995372772217
    4. '	return' → logprob: -13.826994895935059
    5. '   ' → logprob: -15.576994895935059
    6. '	' → logprob: -16.326995849609375
    7. '```' → logprob: -17.201995849609375
    8. '{return' → logprob: -17.451995849609375
    9. '	   ' → logprob: -17.576995849609375
    10. '        
' → logprob: -17.951995849609375

Token 522: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0002613358374219388
    2. ' self' → logprob: -8.250261306762695
    3. '       ' → logprob: -17.500261306762695
    4. '(self' → logprob: -19.250261306762695
    5. '	self' → logprob: -19.750261306762695
    6. '   ' → logprob: -19.875261306762695
    7. '[self' → logprob: -21.750261306762695
    8. ' ' → logprob: -21.875261306762695
    9. '```' → logprob: -22.250261306762695
    10. '           ' → logprob: -22.500261306762695

Token 523: '.mar' (ID: 107988)
  Prédit: '.mar'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.mar' → logprob: -5.512236498361744e-07
    2. 'mar' → logprob: -15.500000953674316
    3. '.m' → logprob: -16.0
    4. '.' → logprob: -16.25
    5. ' .' → logprob: -16.375
    6. '.mas' → logprob: -18.625
    7. '.Mar' → logprob: -18.875
    8. '.mark' → logprob: -19.125
    9. '.micro' → logprob: -19.5
    10. '_mar' → logprob: -20.5

Token 524: 'ugu' (ID: 8060)
  Prédit: 'ugu'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ugu' → logprob: -0.012893483974039555
    2. 'gu' → logprob: -4.3878936767578125
    3. '```' → logprob: -9.012893676757812
    4. 'ぐ' → logprob: -9.387893676757812
    5. 'ug' → logprob: -9.762893676757812
    6. 'гу' → logprob: -10.262893676757812
    7. '``' → logprob: -11.387893676757812
    8. 'グ' → logprob: -11.512893676757812
    9. 'g' → logprob: -12.012893676757812
    10. '_gu' → logprob: -12.262893676757812

Token 525: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 526: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2169663906097412
    2. '```' → logprob: -1.8419663906097412
    3. '<|end|>' → logprob: -4.09196662902832
    4. '
' → logprob: -4.34196662902832
    5. '@' → logprob: -5.09196662902832
    6. '<|end|>' → logprob: -8.34196662902832
    7. '@return' → logprob: -9.59196662902832
    8. ' ' → logprob: -10.09196662902832
    9. '  ' → logprob: -10.21696662902832
    10. '@property' → logprob: -10.21696662902832

Token 527: ' @' (ID: 759)
  Prédit: '@'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '@' (adapté à ' @') → logprob: -0.005632251035422087
    2. '   ' → logprob: -5.255632400512695
    3. '
' → logprob: -8.130632400512695
    4. ' @' → logprob: -9.630632400512695
    5. '@class' → logprob: -10.755632400512695
    6. '```' → logprob: -11.880632400512695
    7. 'classmethod' → logprob: -12.755632400512695
    8. '@property' → logprob: -13.505632400512695
    9. '@
' → logprob: -13.630632400512695
    10. '@return' → logprob: -13.880632400512695

Token 528: 'classmethod' (ID: 64680)
  Prédit: 'classmethod'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'classmethod' → logprob: 0.0
    2. 'abstract' → logprob: -17.5
    3. 'staticmethod' → logprob: -17.875
    4. 'class' → logprob: -19.25
    5. '@' → logprob: -19.75
    6. 'property' → logprob: -22.375
    7. '@class' → logprob: -23.25
    8. 'classname' → logprob: -23.875
    9. 'cls' → logprob: -24.125
    10. '<class' → logprob: -24.375

Token 529: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2595233917236328
    2. '@' → logprob: -1.7595233917236328
    3. 'def' → logprob: -2.884523391723633
    4. '
' → logprob: -8.259523391723633
    5. '```' → logprob: -9.509523391723633
    6. ' def' → logprob: -9.884523391723633
    7. '<|end|>' → logprob: -10.384523391723633
    8. '@property' → logprob: -10.384523391723633
    9. '@class' → logprob: -10.884523391723633
    10. '@index' → logprob: -11.134523391723633

Token 530: '   ' (ID: 271)
  Prédit: '@'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '@' → logprob: -0.1951407641172409
    2. 'def' → logprob: -2.195140838623047
    3. '   ' → logprob: -2.820140838623047
    4. '
' → logprob: -5.195140838623047
    5. '@class' → logprob: -8.320140838623047
    6. 'classmethod' → logprob: -8.445140838623047
    7. '@property' → logprob: -8.945140838623047
    8. '```' → logprob: -9.320140838623047
    9. '@index' → logprob: -11.070140838623047
    10. '@param' → logprob: -11.195140838623047

Token 531: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.010735217481851578
    2. 'abstract' → logprob: -5.385735034942627
    3. '@' → logprob: -5.510735034942627
    4. '   ' → logprob: -6.385735034942627
    5. '
' → logprob: -8.885735511779785
    6. 'classmethod' → logprob: -9.010735511779785
    7. 'from' → logprob: -9.510735511779785
    8. '```' → logprob: -10.635735511779785
    9. '@property' → logprob: -13.010735511779785
    10. '`' → logprob: -13.510735511779785

Token 532: ' from' (ID: 591)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.00018220659694634378
    2. 'abstract' → logprob: -8.750182151794434
    3. 'def' → logprob: -10.875182151794434
    4. 'classmethod' → logprob: -12.500182151794434
    5. ' from' → logprob: -14.500182151794434
    6. '
' → logprob: -15.125182151794434
    7. '.from' → logprob: -16.00018310546875
    8. 'From' → logprob: -16.37518310546875
    9. 'staticmethod' → logprob: -17.87518310546875
    10. '_from' → logprob: -18.12518310546875

Token 533: '_base' (ID: 17096)
  Prédit: '_base'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_base' → logprob: -0.00027444821898825467
    2. 'base' → logprob: -8.250274658203125
    3. 'Base' → logprob: -11.500274658203125
    4. 'classmethod' → logprob: -13.125274658203125
    5. '_class' → logprob: -14.000274658203125
    6. 'cls' → logprob: -15.500274658203125
    7. 'class' → logprob: -16.500274658203125
    8. ' base' → logprob: -17.625274658203125
    9. '_BASE' → logprob: -18.000274658203125
    10. '_cls' → logprob: -18.500274658203125

Token 534: '(cls' (ID: 46446)
  Prédit: '(cls'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(cls' → logprob: -0.0052392068319022655
    2. 'cls' → logprob: -5.255239009857178
    3. ' cls' → logprob: -12.880239486694336
    4. 'classmethod' → logprob: -13.880239486694336
    5. '.cls' → logprob: -13.880239486694336
    6. '```' → logprob: -15.255239486694336
    7. '_cls' → logprob: -15.380239486694336
    8. '<class' → logprob: -15.380239486694336
    9. 'Cls' → logprob: -16.755239486694336
    10. ' (' → logprob: -16.880239486694336

Token 535: ',' (ID: 11)
  Prédit: '(cls'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(cls' → logprob: -0.0019638435915112495
    2. ',' → logprob: -6.6269636154174805
    3. 'cls' → logprob: -8.50196361541748
    4. '(value' → logprob: -8.62696361541748
    5. '(' → logprob: -8.75196361541748
    6. ' (' → logprob: -9.62696361541748
    7. '(class' → logprob: -11.50196361541748
    8. ')' → logprob: -12.25196361541748
    9. '(cl' → logprob: -12.75196361541748
    10. '(clazz' → logprob: -12.75196361541748

Token 536: ' value' (ID: 1432)
  Prédit: 'value'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'value' → logprob: -0.02998119220137596
    2. 'cls' → logprob: -3.7799811363220215
    3. ' value' → logprob: -5.0299811363220215
    4. 'lambda' → logprob: -9.27998161315918
    5. ' cls' → logprob: -9.65498161315918
    6. 'def' → logprob: -11.65498161315918
    7. 'cl' → logprob: -12.90498161315918
    8. 'class' → logprob: -13.27998161315918
    9. 'classmethod' → logprob: -13.40498161315918
    10. 'Value' → logprob: -13.90498161315918

Token 537: ':' (ID: 25)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.19053460657596588
    2. '=' → logprob: -2.8155345916748047
    3. '(cls' → logprob: -2.9405345916748047
    4. ')' → logprob: -3.6905345916748047
    5. ':' → logprob: -4.190534591674805
    6. '(' → logprob: -5.440534591674805
    7. '<|end|>' → logprob: -5.440534591674805
    8. 'cls' → logprob: -5.565534591674805
    9. 'value' → logprob: -6.815534591674805
    10. '```' → logprob: -7.065534591674805

Token 538: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.0002614550176076591
    2. ' int' → logprob: -8.250261306762695
    3. '[int' → logprob: -16.250261306762695
    4. '(int' → logprob: -18.000261306762695
    5. '<int' → logprob: -18.625261306762695
    6. ':int' → logprob: -19.250261306762695
    7. '=int' → logprob: -19.625261306762695
    8. '0' → logprob: -19.875261306762695
    9. '```' → logprob: -20.375261306762695
    10. '1' → logprob: -22.500261306762695

Token 539: ')' (ID: 8)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.030195413157343864
    2. ')' → logprob: -3.530195474624634
    3. '):
' → logprob: -8.530195236206055
    4. '):' → logprob: -8.655195236206055
    5. ' ,' → logprob: -9.905195236206055
    6. ',value' → logprob: -12.030195236206055
    7. '   ' → logprob: -12.155195236206055
    8. '(cls' → logprob: -12.280195236206055
    9. ',
' → logprob: -13.405195236206055
    10. ')value' → logprob: -14.030195236206055

Token 540: ' ->' (ID: 2747)
  Prédit: '(cls'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(cls' → logprob: -0.0537547841668129
    2. ':' → logprob: -3.4287548065185547
    3. ':
' → logprob: -5.303754806518555
    4. '(' → logprob: -5.803754806518555
    5. '<|end|>' → logprob: -5.803754806518555
    6. ')' → logprob: -6.053754806518555
    7. ',' → logprob: -6.428754806518555
    8. 'cls' → logprob: -6.803754806518555
    9. 'classmethod' → logprob: -7.428754806518555
    10. '   ' → logprob: -7.803754806518555

Token 541: ' '' (ID: 461)
  Prédit: 'cls'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cls' → logprob: -0.38739755749702454
    2. ' cls' → logprob: -1.1373975276947021
    3. ''' → logprob: -7.637397766113281
    4. ''value' → logprob: -11.012397766113281
    5. 'Quantity' → logprob: -12.012397766113281
    6. ' '' → logprob: -12.262397766113281
    7. 'cl' → logprob: -12.512397766113281
    8. 'classmethod' → logprob: -12.637397766113281
    9. '(cls' → logprob: -12.762397766113281
    10. '.cls' → logprob: -13.637397766113281

Token 542: 'Quantity' (ID: 21757)
  Prédit: 'Quantity'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Quantity' → logprob: -4.008129963040119e-06
    2. 'cls' → logprob: -12.500003814697266
    3. ' Quantity' → logprob: -15.500003814697266
    4. '_quantity' → logprob: -18.250003814697266
    5. 'Quality' → logprob: -19.500003814697266
    6. '.Quantity' → logprob: -19.625003814697266
    7. 'Quant' → logprob: -19.875003814697266
    8. '(cls' → logprob: -19.875003814697266
    9. 'quantity' → logprob: -20.875003814697266
    10. ' cls' → logprob: -21.125003814697266

Token 543: 'Unit' (ID: 6728)
  Prédit: 'Unit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Unit' → logprob: -6.704273118884885e-07
    2. 'unit' → logprob: -15.625000953674316
    3. 'Units' → logprob: -16.0
    4. '<Unit' → logprob: -16.5
    5. '```' → logprob: -17.0
    6. '(Unit' → logprob: -17.375
    7. ')' → logprob: -17.375
    8. '(cls' → logprob: -17.625
    9. '_unit' → logprob: -17.75
    10. 'Uint' → logprob: -17.875

Token 544: '':
' (ID: 7669)
  Prédit: '(cls'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(cls' → logprob: -0.4483237862586975
    2. '):
' → logprob: -1.3233237266540527
    3. ':
' → logprob: -3.0733237266540527
    4. '):' → logprob: -3.3233237266540527
    5. '       ' → logprob: -5.198323726654053
    6. 'cls' → logprob: -5.698323726654053
    7. '```' → logprob: -6.948323726654053
    8. ':' → logprob: -7.073323726654053
    9. '   ' → logprob: -7.698323726654053
    10. '(value' → logprob: -7.948323726654053

Token 545: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -7.941850526549388e-06
    2. '<|end|>' → logprob: -12.750007629394531
    3. ' if' → logprob: -13.250007629394531
    4. '```' → logprob: -13.750007629394531
    5. '   ' → logprob: -14.000007629394531
    6. 'if' → logprob: -15.000007629394531
    7. '      ' → logprob: -15.375007629394531
    8. '        
' → logprob: -16.12500762939453
    9. '        ' → logprob: -16.12500762939453
    10. '[' → logprob: -16.50000762939453

Token 546: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.00019007037917617708
    2. ' if' → logprob: -8.750189781188965
    3. 'cls' → logprob: -10.750189781188965
    4. '       ' → logprob: -11.500189781188965
    5. '```' → logprob: -18.00019073486328
    6. 'If' → logprob: -18.12519073486328
    7. 'return' → logprob: -18.75019073486328
    8. '
' → logprob: -19.12519073486328
    9. ' cls' → logprob: -19.12519073486328
    10. '   ' → logprob: -19.50019073486328

Token 547: ' value' (ID: 1432)
  Prédit: 'value'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'value' → logprob: -0.16022422909736633
    2. ' value' → logprob: -1.910224199295044
    3. '(value' → logprob: -17.03522491455078
    4. '0' → logprob: -17.91022491455078
    5. 'alue' → logprob: -18.41022491455078
    6. ')value' → logprob: -18.41022491455078
    7. '$value' → logprob: -18.66022491455078
    8. '"value' → logprob: -18.66022491455078
    9. ''value' → logprob: -19.03522491455078
    10. '[value' → logprob: -19.16022491455078

Token 548: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.04860111325979233
    2. '<' → logprob: -3.0486011505126953
    3. '<|end|>' → logprob: -11.798601150512695
    4. '<int' → logprob: -12.423601150512695
    5. '<class' → logprob: -14.548601150512695
    6. '<size' → logprob: -15.048601150512695
    7. '<context' → logprob: -15.423601150512695
    8. 'value' → logprob: -16.423601150512695
    9. '<typename' → logprob: -16.548601150512695
    10. '<p' → logprob: -16.798601150512695

Token 549: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0013259568950161338
    2. ' ' → logprob: -6.626326084136963
    3. '=' → logprob: -16.376325607299805
    4. '   ' → logprob: -18.251325607299805
    5. 'value' → logprob: -19.126325607299805
    6. '[' → logprob: -19.376325607299805
    7. '<|end|>' → logprob: -19.751325607299805
    8. '۰' → logprob: -19.876325607299805
    9. '```' → logprob: -20.376325607299805
    10. 'def' → logprob: -20.751325607299805

Token 550: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -3.128163257315464e-07
    2. ' ' → logprob: -15.25
    3. 'value' → logprob: -18.875
    4. '<|end|>' → logprob: -19.0
    5. '[' → logprob: -19.125
    6. '۰' → logprob: -19.25
    7. '=' → logprob: -19.375
    8. '```' → logprob: -19.5
    9. 'Value' → logprob: -20.0
    10. '   ' → logprob: -20.75

Token 551: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.08137328177690506
    2. ':' → logprob: -2.5813732147216797
    3. '       ' → logprob: -6.58137321472168
    4. '           ' → logprob: -7.70637321472168
    5. '):
' → logprob: -8.08137321472168
    6. '<|end|>' → logprob: -8.33137321472168
    7. '():
' → logprob: -10.08137321472168
    8. '<|end|>' → logprob: -11.33137321472168
    9. '{
' → logprob: -11.83137321472168
    10. '   ' → logprob: -12.33137321472168

Token 552: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.002125280210748315
    2. '       ' → logprob: -6.502125263214111
    3. ' raise' → logprob: -8.25212574005127
    4. 'raise' → logprob: -8.25212574005127
    5. 'Value' → logprob: -9.50212574005127
    6. '          ' → logprob: -11.75212574005127
    7. ' Value' → logprob: -11.87712574005127
    8. 'value' → logprob: -13.37712574005127
    9. 'return' → logprob: -13.37712574005127
    10. '   ' → logprob: -13.50212574005127

Token 553: ' raise' (ID: 9338)
  Prédit: 'raise'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'raise' (adapté à ' raise') → logprob: -0.029882973060011864
    2. ' raise' → logprob: -3.5298829078674316
    3. 'Value' → logprob: -9.40488338470459
    4. '       ' → logprob: -10.77988338470459
    5. '           ' → logprob: -10.77988338470459
    6. 'Raise' → logprob: -12.65488338470459
    7. '        ' → logprob: -13.02988338470459
    8. '	raise' → logprob: -13.90488338470459
    9. 'raises' → logprob: -14.90488338470459
    10. '_raise' → logprob: -15.15488338470459

Token 554: ' Value' (ID: 9963)
  Prédit: 'Value'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Value' → logprob: -5.836499985889532e-05
    2. ' Value' → logprob: -9.7500581741333
    3. '_value' → logprob: -17.250059127807617
    4. '	Value' → logprob: -18.250059127807617
    5. '_Value' → logprob: -19.750059127807617
    6. '(Value' → logprob: -20.500059127807617
    7. '.Value' → logprob: -20.625059127807617
    8. 'value' → logprob: -20.875059127807617
    9. 'Val' → logprob: -21.750059127807617
    10. '<Value' → logprob: -22.125059127807617

Token 555: 'Error' (ID: 2255)
  Prédit: 'Value'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Value' → logprob: -0.018158607184886932
    2. 'Error' → logprob: -4.018158435821533
    3. ' Value' → logprob: -11.768158912658691
    4. 'Val' → logprob: -14.393158912658691
    5. '	Value' → logprob: -15.143158912658691
    6. '(Value' → logprob: -16.768157958984375
    7. '_value' → logprob: -16.768157958984375
    8. '_Value' → logprob: -16.893157958984375
    9. '.Value' → logprob: -17.018157958984375
    10. '<Value' → logprob: -18.393157958984375

Token 556: '("' (ID: 568)
  Prédit: '("'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '("' → logprob: -1.2664456789934775e-06
    2. '(' → logprob: -13.750000953674316
    3. '('' → logprob: -16.500001907348633
    4. '(f' → logprob: -17.875001907348633
    5. '(
' → logprob: -18.000001907348633
    6. '       ' → logprob: -18.375001907348633
    7. '(Value' → logprob: -20.250001907348633
    8. '"' → logprob: -20.625001907348633
    9. '("
' → logprob: -21.000001907348633
    10. '(Code' → logprob: -21.250001907348633

Token 557: 'Base' (ID: 4882)
  Prédit: 'value'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'value' → logprob: -0.1837655007839203
    2. 'Base' → logprob: -2.558765411376953
    3. 'Value' → logprob: -2.683765411376953
    4. 'Quantity' → logprob: -3.933765411376953
    5. 'Mar' → logprob: -7.183765411376953
    6. 'base' → logprob: -7.183765411376953
    7. '"value' → logprob: -7.808765411376953
    8. ' value' → logprob: -9.058765411376953
    9. '```' → logprob: -9.308765411376953
    10. '"' → logprob: -9.433765411376953

Token 558: ' quantity' (ID: 17245)
  Prédit: 'value'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'value' → logprob: -0.38308185338974
    2. ' value' → logprob: -1.3830819129943848
    3. ' quantity' → logprob: -3.3830819129943848
    4. 'quantity' → logprob: -4.008081912994385
    5. 'Quantity' → logprob: -4.883081912994385
    6. 'unit' → logprob: -6.008081912994385
    7. 'Unit' → logprob: -6.008081912994385
    8. ' unit' → logprob: -6.883081912994385
    9. 'int' → logprob: -7.508081912994385
    10. 'Value' → logprob: -7.883081912994385

Token 559: ' must' (ID: 2804)
  Prédit: ' must'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' must' → logprob: -0.006090427283197641
    2. 'must' → logprob: -5.6310906410217285
    3. 'Unit' → logprob: -6.8810906410217285
    4. ' value' → logprob: -7.5060906410217285
    5. ')' → logprob: -7.6310906410217285
    6. 'value' → logprob: -9.13109016418457
    7. ' unit' → logprob: -9.13109016418457
    8. 'unit' → logprob: -9.88109016418457
    9. '```' → logprob: -9.88109016418457
    10. '   ' → logprob: -11.13109016418457

Token 560: ' be' (ID: 413)
  Prédit: ' be'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' be' → logprob: -0.07907275855541229
    2. ' not' → logprob: -2.8290727138519287
    3. 'not' → logprob: -4.329072952270508
    4. 'be' → logprob: -5.579072952270508
    5. '_not' → logprob: -13.829072952270508
    6. '0' → logprob: -13.954072952270508
    7. 'n' → logprob: -14.204072952270508
    8. 'value' → logprob: -15.204072952270508
    9. '=' → logprob: -15.579072952270508
    10. '_be' → logprob: -16.079072952270508

Token 561: ' non' (ID: 2893)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.2396518886089325
    2. 'non' → logprob: -1.8646519184112549
    3. 'value' → logprob: -2.864651918411255
    4. 'not' → logprob: -7.114651679992676
    5. 'negative' → logprob: -9.614651679992676
    6. '1' → logprob: -10.239651679992676
    7. '```' → logprob: -10.239651679992676
    8. 'no' → logprob: -10.239651679992676
    9. ' ' → logprob: -10.489651679992676
    10. 'n' → logprob: -10.614651679992676

Token 562: '-negative' (ID: 126970)
  Prédit: 'negative'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'negative' → logprob: -0.696068286895752
    2. '-negative' → logprob: -0.696068286895752
    3. '_negative' → logprob: -6.321068286895752
    4. 'Negative' → logprob: -7.446068286895752
    5. '0' → logprob: -7.696068286895752
    6. 'non' → logprob: -9.696067810058594
    7. ' negative' → logprob: -11.196067810058594
    8. 'zero' → logprob: -13.071067810058594
    9. '-n' → logprob: -13.321067810058594
    10. 'not' → logprob: -14.571067810058594

Token 563: '")
' (ID: 1896)
  Prédit: '")
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '")
' → logprob: -0.10575391352176666
    2. '       ' → logprob: -3.1057538986206055
    3. '")' → logprob: -3.1057538986206055
    4. ')
' → logprob: -4.7307538986206055
    5. '')
' → logprob: -6.4807538986206055
    6. ')' → logprob: -8.105753898620605
    7. '')' → logprob: -9.855753898620605
    8. '")
' → logprob: -10.105753898620605
    9. '   ' → logprob: -11.980753898620605
    10. '"' → logprob: -12.355753898620605

Token 564: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.4974866644479334e-05
    2. 'return' → logprob: -11.250015258789062
    3. '```' → logprob: -14.500015258789062
    4. ' return' → logprob: -14.750015258789062
    5. '<|end|>' → logprob: -15.250015258789062
    6. '	' → logprob: -15.625015258789062
    7. '   ' → logprob: -15.875015258789062
    8. ',' → logprob: -15.875015258789062
    9. '
' → logprob: -15.875015258789062
    10. '    ' → logprob: -16.875015258789062

Token 565: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.002810344099998474
    2. '       ' → logprob: -6.002810478210449
    3. ' return' → logprob: -8.00281047821045
    4. '	return' → logprob: -16.502809524536133
    5. '```' → logprob: -17.877809524536133
    6. '
' → logprob: -18.002809524536133
    7. '   ' → logprob: -18.002809524536133
    8. '{return' → logprob: -18.252809524536133
    9. ':return' → logprob: -18.877809524536133
    10. ')return' → logprob: -19.252809524536133

Token 566: ' cls' (ID: 26133)
  Prédit: 'cls'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cls' → logprob: -3.128163257315464e-07
    2. ' cls' → logprob: -15.5
    3. 'Quantity' → logprob: -20.375
    4. '(cls' → logprob: -21.875
    5. 'Cls' → logprob: -23.375
    6. 'cl' → logprob: -23.875
    7. '   ' → logprob: -24.25
    8. '.cls' → logprob: -25.25
    9. '```' → logprob: -25.625
    10. '       ' → logprob: -27.0

Token 567: '(value' (ID: 6333)
  Prédit: '(value'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(value' → logprob: -0.00016241880075540394
    2. 'value' → logprob: -8.750162124633789
    3. '(' → logprob: -12.500162124633789
    4. ')value' → logprob: -16.50016212463379
    5. ' value' → logprob: -17.62516212463379
    6. ',value' → logprob: -17.75016212463379
    7. '[value' → logprob: -18.37516212463379
    8. '```' → logprob: -19.00016212463379
    9. '$value' → logprob: -19.12516212463379
    10. '"value' → logprob: -19.12516212463379

Token 568: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -9.088346359931165e-07
    2. ')
' → logprob: -14.500000953674316
    3. ')return' → logprob: -15.875000953674316
    4. '<|end|>' → logprob: -15.875000953674316
    5. ')}' → logprob: -17.625
    6. '       ' → logprob: -17.75
    7. ')value' → logprob: -18.125
    8. ')`' → logprob: -18.375
    9. ')

' → logprob: -18.5
    10. '),' → logprob: -18.5

Token 569: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6675311923027039
    2. '<|end|>' → logprob: -1.0425312519073486
    3. 'def' → logprob: -2.4175312519073486
    4. '
' → logprob: -3.4175312519073486
    5. '<|end|>' → logprob: -4.6675310134887695
    6. '```' → logprob: -6.4175310134887695
    7. ' def' → logprob: -7.0425310134887695
    8. '    
' → logprob: -7.7925310134887695
    9. '  ' → logprob: -10.54253101348877
    10. '  
' → logprob: -10.66753101348877

Token 570: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.00012737659562844783
    2. ' def' → logprob: -10.000127792358398
    3. '<|end|>' → logprob: -10.000127792358398
    4. '   ' → logprob: -10.625127792358398
    5. '
' → logprob: -11.375127792358398
    6. '<|end|>' → logprob: -15.000127792358398
    7. '	def' → logprob: -15.625127792358398
    8. '```' → logprob: -15.625127792358398
    9. '

' → logprob: -17.3751277923584
    10. ')' → logprob: -17.6251277923584

Token 571: ' __' (ID: 2516)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.0015434302622452378
    2. ' __' → logprob: -6.5015435218811035
    3. 'def' → logprob: -10.751543045043945
    4. '.__' → logprob: -11.251543045043945
    5. 'add' → logprob: -13.376543045043945
    6. '_add' → logprob: -13.501543045043945
    7. '+' → logprob: -13.876543045043945
    8. '___' → logprob: -14.376543045043945
    9. '   ' → logprob: -14.501543045043945
    10. '__(' → logprob: -15.001543045043945

Token 572: 'add' (ID: 964)
  Prédit: 'eq'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'eq' → logprob: -0.01814994215965271
    2. 'add' → logprob: -4.0181498527526855
    3. 'repr' → logprob: -16.768150329589844
    4. 'init' → logprob: -16.893150329589844
    5. '_eq' → logprob: -18.393150329589844
    6. 'lt' → logprob: -19.143150329589844
    7. '_add' → logprob: -19.768150329589844
    8. 'Add' → logprob: -19.893150329589844
    9. ' eq' → logprob: -20.643150329589844
    10. 'hash' → logprob: -21.393150329589844

Token 573: '__(' (ID: 8241)
  Prédit: '__('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.006903517059981823
    2. '__' → logprob: -5.006903648376465
    3. '__(
' → logprob: -8.756903648376465
    4. '(self' → logprob: -10.756903648376465
    5. '(' → logprob: -12.131903648376465
    6. '_(' → logprob: -13.756903648376465
    7. '__((' → logprob: -13.881903648376465
    8. 'self' → logprob: -14.631903648376465
    9. '__('' → logprob: -14.756903648376465
    10. '_' → logprob: -15.006903648376465

Token 574: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.00013953536108601838
    2. ' self' → logprob: -9.500139236450195
    3. '(self' → logprob: -10.500139236450195
    4. 'other' → logprob: -10.625139236450195
    5. '<|end|>' → logprob: -11.750139236450195
    6. 'def' → logprob: -12.750139236450195
    7. '   ' → logprob: -15.375139236450195
    8. ' ' → logprob: -15.375139236450195
    9. ' other' → logprob: -15.625139236450195
    10. '...' → logprob: -15.625139236450195

Token 575: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.19845715165138245
    2. '(self' → logprob: -2.0734572410583496
    3. '(' → logprob: -2.9484572410583496
    4. '__(' → logprob: -6.82345724105835
    5. ' (' → logprob: -8.573456764221191
    6. 'self' → logprob: -8.698456764221191
    7. ' ,' → logprob: -9.323456764221191
    8. '<|end|>' → logprob: -9.323456764221191
    9. '+' → logprob: -9.698456764221191
    10. ',
' → logprob: -10.323456764221191

Token 576: ' other' (ID: 1273)
  Prédit: 'other'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'other' → logprob: -0.038048144429922104
    2. ' other' → logprob: -3.288048028945923
    3. 'Other' → logprob: -12.413047790527344
    4. 'self' → logprob: -13.163047790527344
    5. '(other' → logprob: -14.163047790527344
    6. '.other' → logprob: -17.288047790527344
    7. '_other' → logprob: -17.413047790527344
    8. ' ' → logprob: -19.413047790527344
    9. ' self' → logprob: -19.413047790527344
    10. 'OTHER' → logprob: -21.038047790527344

Token 577: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.00032247265335172415
    2. ')' → logprob: -9.125322341918945
    3. '=' → logprob: -9.500322341918945
    4. ' :' → logprob: -10.375322341918945
    5. '(' → logprob: -10.750322341918945
    6. '[' → logprob: -10.875322341918945
    7. '<|end|>' → logprob: -11.125322341918945
    8. ',' → logprob: -11.250322341918945
    9. '<|end|>' → logprob: -11.875322341918945
    10. 'def' → logprob: -11.875322341918945

Token 578: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.02327832579612732
    2. ' '' → logprob: -3.77327823638916
    3. 'Quantity' → logprob: -10.89827823638916
    4. ' other' → logprob: -12.64827823638916
    5. '('' → logprob: -13.14827823638916
    6. ' ' → logprob: -13.14827823638916
    7. ')' → logprob: -14.14827823638916
    8. ''value' → logprob: -14.27327823638916
    9. '"' → logprob: -14.39827823638916
    10. '`' → logprob: -14.39827823638916

Token 579: 'Quantity' (ID: 21757)
  Prédit: 'Quantity'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Quantity' → logprob: -4.084206375409849e-05
    2. ' Quantity' → logprob: -10.750041007995605
    3. 'Weight' → logprob: -11.500041007995605
    4. ''' → logprob: -11.625041007995605
    5. '.Quantity' → logprob: -16.75004005432129
    6. '_quantity' → logprob: -16.87504005432129
    7. ' '' → logprob: -17.62504005432129
    8. ' quantity' → logprob: -18.00004005432129
    9. 'Type' → logprob: -18.12504005432129
    10. 'Amount' → logprob: -18.12504005432129

Token 580: 'Unit' (ID: 6728)
  Prédit: 'Unit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Unit' → logprob: -1.759734732331708e-05
    2. ':' → logprob: -12.125017166137695
    3. '_unit' → logprob: -13.000017166137695
    4. ')' → logprob: -13.000017166137695
    5. 'Quantity' → logprob: -13.125017166137695
    6. 'unit' → logprob: -13.125017166137695
    7. '<Unit' → logprob: -13.125017166137695
    8. '```' → logprob: -15.125017166137695
    9. '   ' → logprob: -15.625017166137695
    10. ' Unit' → logprob: -16.000017166137695

Token 581: '')' (ID: 1542)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -3.166338137816638e-05
    2. '')' → logprob: -10.375031471252441
    3. '):
' → logprob: -16.125032424926758
    4. ' )' → logprob: -16.125032424926758
    5. '):' → logprob: -16.250032424926758
    6. ')'' → logprob: -18.000032424926758
    7. '   ' → logprob: -19.000032424926758
    8. ''' → logprob: -19.375032424926758
    9. '`)' → logprob: -19.625032424926758
    10. ')`' → logprob: -20.000032424926758

Token 582: ' ->' (ID: 2747)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.04511035978794098
    2. ')' → logprob: -3.4201104640960693
    3. '->' → logprob: -5.42011022567749
    4. ':
' → logprob: -5.54511022567749
    5. '       ' → logprob: -6.42011022567749
    6. ' ->' → logprob: -7.04511022567749
    7. '=' → logprob: -8.545110702514648
    8. '   ' → logprob: -8.920110702514648
    9. ':return' → logprob: -10.420110702514648
    10. ')->' → logprob: -10.420110702514648

Token 583: ' '' (ID: 461)
  Prédit: 'Quantity'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Quantity' → logprob: -0.29567471146583557
    2. ''' → logprob: -1.4206746816635132
    3. ' Quantity' → logprob: -4.420674800872803
    4. ' '' → logprob: -6.045674800872803
    5. ''s' → logprob: -12.170674324035645
    6. 'return' → logprob: -12.795674324035645
    7. '"' → logprob: -13.045674324035645
    8. '('' → logprob: -13.045674324035645
    9. '_quantity' → logprob: -13.295674324035645
    10. 'Quant' → logprob: -13.420674324035645

Token 584: 'Quantity' (ID: 21757)
  Prédit: 'Quantity'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Quantity' → logprob: -4.320199877838604e-07
    2. ' Quantity' → logprob: -14.875
    3. '.Quantity' → logprob: -17.875
    4. 'Weight' → logprob: -18.0
    5. 'Quant' → logprob: -19.0
    6. '_quantity' → logprob: -19.125
    7. 'Unit' → logprob: -19.25
    8. 'quantity' → logprob: -19.5
    9. '  ' → logprob: -20.375
    10. 'Amount' → logprob: -20.625

Token 585: 'Unit' (ID: 6728)
  Prédit: 'Unit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Unit' → logprob: -9.253090865968261e-06
    2. 'Quantity' → logprob: -11.750009536743164
    3. 'unit' → logprob: -14.625009536743164
    4. '<Unit' → logprob: -14.875009536743164
    5. 'Units' → logprob: -16.000009536743164
    6. '_unit' → logprob: -16.250009536743164
    7. '```' → logprob: -16.250009536743164
    8. 'User' → logprob: -16.625009536743164
    9. ':' → logprob: -16.875009536743164
    10. '(Unit' → logprob: -16.875009536743164

Token 586: '':
' (ID: 7669)
  Prédit: ':
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.3360666036605835
    2. '):
' → logprob: -1.5860666036605835
    3. ':' → logprob: -2.711066722869873
    4. '):' → logprob: -4.711066722869873
    5. ')' → logprob: -5.836066722869873
    6. '       ' → logprob: -6.961066722869873
    7. '':
' → logprob: -7.961066722869873
    8. '   ' → logprob: -8.336066246032715
    9. 'return' → logprob: -8.461066246032715
    10. ':return' → logprob: -8.836066246032715

Token 587: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.013698920607566833
    2. 'return' → logprob: -4.513699054718018
    3. ' return' → logprob: -6.013699054718018
    4. '   ' → logprob: -9.76369857788086
    5. ' 
' → logprob: -9.88869857788086
    6. '
' → logprob: -11.01369857788086
    7. '```' → logprob: -11.13869857788086
    8. '	return' → logprob: -11.38869857788086
    9. '      ' → logprob: -12.01369857788086
    10. '        
' → logprob: -12.13869857788086

Token 588: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.06593777239322662
    2. ' return' → logprob: -3.0659377574920654
    3. 'Quantity' → logprob: -4.3159379959106445
    4. '       ' → logprob: -5.5659379959106445
    5. '   ' → logprob: -11.940937995910645
    6. 'Return' → logprob: -12.565937995910645
    7. ' Quantity' → logprob: -12.565937995910645
    8. '	return' → logprob: -12.940937995910645
    9. '```' → logprob: -13.065937995910645
    10. 'Weight' → logprob: -13.440937995910645

Token 589: ' Quantity' (ID: 65944)
  Prédit: 'Quantity'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Quantity' → logprob: -0.0024756586644798517
    2. ' Quantity' → logprob: -6.002475738525391
    3. 'Quant' → logprob: -21.50247573852539
    4. ' quantity' → logprob: -22.25247573852539
    5. ' ' → logprob: -22.75247573852539
    6. 'quantity' → logprob: -22.75247573852539
    7. '_quantity' → logprob: -22.87747573852539
    8. 'Amount' → logprob: -23.25247573852539
    9. 'Type' → logprob: -23.62747573852539
    10. '   ' → logprob: -23.62747573852539

Token 590: 'Unit' (ID: 6728)
  Prédit: 'Unit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Unit' → logprob: -1.9361264946837764e-07
    2. '<Unit' → logprob: -17.375
    3. 'Units' → logprob: -17.875
    4. '(' → logprob: -18.5
    5. '(Unit' → logprob: -18.625
    6. 'Quantity' → logprob: -18.875
    7. 'unit' → logprob: -19.0
    8. '(self' → logprob: -19.125
    9. 'User' → logprob: -19.875
    10. '```' → logprob: -20.0

Token 591: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: 0.0
    2. '(' → logprob: -17.25
    3. 'self' → logprob: -17.875
    4. '[self' → logprob: -22.125
    5. '(
' → logprob: -22.25
    6. '(this' → logprob: -23.75
    7. '```' → logprob: -24.5
    8. ' (' → logprob: -24.5
    9. ' self' → logprob: -24.75
    10. '((' → logprob: -24.75

Token 592: '.mar' (ID: 107988)
  Prédit: '.mar'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.mar' → logprob: -0.016062524169683456
    2. 'mar' → logprob: -4.1410627365112305
    3. '.m' → logprob: -11.76606273651123
    4. '_mar' → logprob: -12.01606273651123
    5. '```' → logprob: -12.39106273651123
    6. ' mar' → logprob: -13.14106273651123
    7. ' .' → logprob: -13.39106273651123
    8. '.' → logprob: -13.39106273651123
    9. 'мар' → logprob: -13.51606273651123
    10. '.mas' → logprob: -14.26606273651123

Token 593: 'ugu' (ID: 8060)
  Prédit: 'ugu'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ugu' → logprob: -8.387458365177736e-05
    2. 'gu' → logprob: -9.625083923339844
    3. 'ug' → logprob: -12.125083923339844
    4. 'гу' → logprob: -13.125083923339844
    5. 'угу' → logprob: -13.250083923339844
    6. '```' → logprob: -13.250083923339844
    7. 'ugg' → logprob: -13.875083923339844
    8. 'グ' → logprob: -13.875083923339844
    9. ' ugu' → logprob: -14.125083923339844
    10. 'た' → logprob: -14.750083923339844

Token 594: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.06196891888976097
    2. '+' → logprob: -2.8119688034057617
    3. '.mar' → logprob: -14.061968803405762
    4. ')' → logprob: -14.936968803405762
    5. ' ' → logprob: -16.811969757080078
    6. 'mar' → logprob: -17.436969757080078
    7. ')+' → logprob: -17.561969757080078
    8. ' mar' → logprob: -17.561969757080078
    9. '+self' → logprob: -18.061969757080078
    10. ' +
' → logprob: -18.311969757080078

Token 595: ' other' (ID: 1273)
  Prédit: 'other'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'other' → logprob: -0.47407785058021545
    2. ' other' → logprob: -0.9740778207778931
    3. '(other' → logprob: -14.099078178405762
    4. '.other' → logprob: -17.474077224731445
    5. '_other' → logprob: -18.349077224731445
    6. 'Other' → logprob: -18.974077224731445
    7. ' ' → logprob: -21.224077224731445
    8. '其他' → logprob: -21.599077224731445
    9. '1' → logprob: -21.849077224731445
    10. 'OTHER' → logprob: -21.974077224731445

Token 596: '.mar' (ID: 107988)
  Prédit: '.mar'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.mar' → logprob: -6.988221684878226e-06
    2. '.' → logprob: -12.250006675720215
    3. 'mar' → logprob: -13.750006675720215
    4. ' .' → logprob: -14.750006675720215
    5. '```' → logprob: -15.875006675720215
    6. '.m' → logprob: -16.37500762939453
    7. '.Mar' → logprob: -16.50000762939453
    8. ').' → logprob: -16.62500762939453
    9. '_mar' → logprob: -16.62500762939453
    10. '\.' → logprob: -16.87500762939453

Token 597: 'ugu' (ID: 8060)
  Prédit: 'ugu'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ugu' → logprob: -0.006050738971680403
    2. 'gu' → logprob: -5.1310505867004395
    3. '```' → logprob: -10.006051063537598
    4. 'ぐ' → logprob: -10.631051063537598
    5. 'ug' → logprob: -11.131051063537598
    6. 'гу' → logprob: -11.506051063537598
    7. 'ugo' → logprob: -12.881051063537598
    8. 'ogu' → logprob: -13.006051063537598
    9. '_gu' → logprob: -13.131051063537598
    10. 'g' → logprob: -13.256051063537598

Token 598: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.7432603272027336e-06
    2. ')
' → logprob: -13.625001907348633
    3. '<|end|>' → logprob: -15.250001907348633
    4. ')

' → logprob: -15.625001907348633
    5. ')return' → logprob: -16.750001907348633
    6. ' )' → logprob: -17.375001907348633
    7. ')#' → logprob: -18.625001907348633
    8. '   ' → logprob: -18.875001907348633
    9. '       ' → logprob: -19.125001907348633
    10. '),' → logprob: -19.625001907348633

Token 599: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 600: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.001521049183793366
    2. '   ' → logprob: -7.376521110534668
    3. ' def' → logprob: -7.376521110534668
    4. '<|end|>' → logprob: -8.251521110534668
    5. '
' → logprob: -12.751521110534668
    6. '```' → logprob: -12.876521110534668
    7. '<|end|>' → logprob: -13.876521110534668
    8. '  ' → logprob: -15.251521110534668
    9. '	def' → logprob: -15.626521110534668
    10. ')' → logprob: -15.751521110534668

Token 601: ' __' (ID: 2516)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.005247629713267088
    2. ' __' → logprob: -5.255247592926025
    3. 'def' → logprob: -11.505248069763184
    4. ' def' → logprob: -13.255248069763184
    5. '.__' → logprob: -13.630248069763184
    6. '```' → logprob: -15.005248069763184
    7. '**' → logprob: -15.255248069763184
    8. ' ' → logprob: -16.380247116088867
    9. '_eq' → logprob: -17.005247116088867
    10. '   ' → logprob: -17.005247116088867

Token 602: 'eq' (ID: 21725)
  Prédit: 'eq'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'eq' → logprob: 0.0
    2. '_eq' → logprob: -18.125
    3. 'repr' → logprob: -18.625
    4. ' eq' → logprob: -19.25
    5. 'lt' → logprob: -19.5
    6. 'e' → logprob: -20.0
    7. '==' → logprob: -20.125
    8. 'def' → logprob: -20.125
    9. '(eq' → logprob: -20.375
    10. 'equal' → logprob: -20.5

Token 603: '__(' (ID: 8241)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.5771305561065674
    2. '__(' → logprob: -0.9521305561065674
    3. '(' → logprob: -2.9521305561065674
    4. ' (' → logprob: -8.827130317687988
    5. '__((' → logprob: -10.077130317687988
    6. '__' → logprob: -10.452130317687988
    7. '__(
' → logprob: -10.452130317687988
    8. '<|end|>' → logprob: -10.452130317687988
    9. '(None' → logprob: -11.452130317687988
    10. '```' → logprob: -11.952130317687988

Token 604: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.034633032977581024
    2. 'other' → logprob: -3.534632921218872
    3. '(self' → logprob: -5.409633159637451
    4. '(other' → logprob: -7.909633159637451
    5. '(' → logprob: -11.409632682800293
    6. ' self' → logprob: -11.659632682800293
    7. 'def' → logprob: -12.159632682800293
    8. ' other' → logprob: -12.784632682800293
    9. 'Other' → logprob: -13.909632682800293
    10. 'return' → logprob: -14.909632682800293

Token 605: ',' (ID: 11)
  Prédit: '__('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.021863281726837158
    2. '(' → logprob: -4.6468634605407715
    3. '__' → logprob: -4.7718634605407715
    4. '(self' → logprob: -6.0218634605407715
    5. '__((' → logprob: -7.6468634605407715
    6. '__(
' → logprob: -7.6468634605407715
    7. '__(*' → logprob: -9.396862983703613
    8. '<|end|>' → logprob: -10.396862983703613
    9. '==' → logprob: -11.521862983703613
    10. '__("' → logprob: -11.521862983703613

Token 606: ' other' (ID: 1273)
  Prédit: 'other'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'other' → logprob: -0.015066198073327541
    2. ' other' → logprob: -4.265066146850586
    3. 'self' → logprob: -7.015066146850586
    4. '(other' → logprob: -13.015066146850586
    5. 'Other' → logprob: -13.765066146850586
    6. ' self' → logprob: -14.515066146850586
    7. '...' → logprob: -15.890066146850586
    8. 'def' → logprob: -18.015066146850586
    9. 'user' → logprob: -18.390066146850586
    10. '.other' → logprob: -18.390066146850586

Token 607: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.43135935068130493
    2. '(self' → logprob: -1.0563592910766602
    3. '(' → logprob: -6.55635929107666
    4. ',' → logprob: -7.43135929107666
    5. '       ' → logprob: -8.80635929107666
    6. ' (' → logprob: -8.93135929107666
    7. '==' → logprob: -9.93135929107666
    8. ')(' → logprob: -10.05635929107666
    9. '   ' → logprob: -10.30635929107666
    10. 'self' → logprob: -10.30635929107666

Token 608: ' ->' (ID: 2747)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(self' → logprob: -2.3557529857498594e-05
    2. '(' → logprob: -11.37502384185791
    3. 'self' → logprob: -12.25002384185791
    4. '       ' → logprob: -12.37502384185791
    5. ')' → logprob: -14.12502384185791
    6. '```' → logprob: -14.25002384185791
    7. '   ' → logprob: -14.50002384185791
    8. ' (' → logprob: -15.62502384185791
    9. '->' → logprob: -15.62502384185791
    10. 'and' → logprob: -16.125022888183594

Token 609: ' bool' (ID: 3792)
  Prédit: 'bool'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bool' → logprob: -0.0028487443923950195
    2. ' bool' → logprob: -6.2528486251831055
    3. 'False' → logprob: -7.0028486251831055
    4. '(bool' → logprob: -12.252848625183105
    5. 'True' → logprob: -13.002848625183105
    6. '<bool' → logprob: -13.002848625183105
    7. ' False' → logprob: -15.502848625183105
    8. ' ' → logprob: -15.752848625183105
    9. 'object' → logprob: -15.877848625183105
    10. 'self' → logprob: -16.002849578857422

Token 610: ':
' (ID: 734)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1928517073392868
    2. ':
' → logprob: -2.3178517818450928
    3. ':' → logprob: -2.6928517818450928
    4. ' and' → logprob: -5.067851543426514
    5. 'and' → logprob: -7.067851543426514
    6. ' if' → logprob: -7.192851543426514
    7. '   ' → logprob: -8.067852020263672
    8. '```' → logprob: -8.192852020263672
    9. '      ' → logprob: -8.567852020263672
    10. '        ' → logprob: -9.442852020263672

Token 611: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0005412388709373772
    2. '   ' → logprob: -8.500541687011719
    3. ' if' → logprob: -8.625541687011719
    4. 'if' → logprob: -9.750541687011719
    5. '```' → logprob: -9.875541687011719
    6. '           ' → logprob: -11.500541687011719
    7. '      ' → logprob: -11.625541687011719
    8. '        ' → logprob: -11.750541687011719
    9. '<|end|>' → logprob: -12.250541687011719
    10. '    ' → logprob: -12.375541687011719

Token 612: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.02730848826467991
    2. '       ' → logprob: -4.152308464050293
    3. ' if' → logprob: -4.652308464050293
    4. 'not' → logprob: -6.777308464050293
    5. 'False' → logprob: -9.027308464050293
    6. '   ' → logprob: -9.152308464050293
    7. '```' → logprob: -9.402308464050293
    8. 'If' → logprob: -9.402308464050293
    9. '
' → logprob: -10.027308464050293
    10. 'return' → logprob: -10.402308464050293

Token 613: ' not' (ID: 625)
  Prédit: 'not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'not' → logprob: -0.12692810595035553
    2. ' not' → logprob: -2.1269280910491943
    3. 'Not' → logprob: -16.876928329467773
    4. '	not' → logprob: -17.376928329467773
    5. '(not' → logprob: -18.376928329467773
    6. '   ' → logprob: -20.501928329467773
    7. '       ' → logprob: -21.001928329467773
    8. '!' → logprob: -21.001928329467773
    9. '```' → logprob: -21.001928329467773
    10. '_not' → logprob: -21.251928329467773

Token 614: ' isinstance' (ID: 25889)
  Prédit: 'is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'is' → logprob: -0.0001242772996192798
    2. ' isinstance' → logprob: -9.000123977661133
    3. '(is' → logprob: -14.000123977661133
    4. 'Is' → logprob: -17.750123977661133
    5. '.is' → logprob: -20.000123977661133
    6. '_is' → logprob: -21.125123977661133
    7. 'instance' → logprob: -21.750123977661133
    8. '=is' → logprob: -22.750123977661133
    9. '$is' → logprob: -22.875123977661133
    10. ':is' → logprob: -23.000123977661133

Token 615: '(other' (ID: 32550)
  Prédit: '(other'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(other' → logprob: -0.0007105246186256409
    2. 'other' → logprob: -7.250710487365723
    3. ' other' → logprob: -14.500710487365723
    4. 'Other' → logprob: -17.75071144104004
    5. 'OTHER' → logprob: -21.25071144104004
    6. '.other' → logprob: -21.62571144104004
    7. '-other' → logprob: -21.87571144104004
    8. '_other' → logprob: -21.87571144104004
    9. '
' → logprob: -24.12571144104004
    10. '```' → logprob: -24.25071144104004

Token 616: ',' (ID: 11)
  Prédit: '(other'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(other' → logprob: -1.5213274309644476e-05
    2. 'other' → logprob: -11.125015258789062
    3. ' other' → logprob: -15.250015258789062
    4. ',' → logprob: -16.000015258789062
    5. 'Other' → logprob: -17.375015258789062
    6. '-other' → logprob: -19.125015258789062
    7. '(original' → logprob: -19.875015258789062
    8. 'OTHER' → logprob: -20.125015258789062
    9. '.other' → logprob: -20.250015258789062
    10. '(object' → logprob: -20.375015258789062

Token 617: ' Quantity' (ID: 65944)
  Prédit: 'Quantity'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Quantity' → logprob: -0.00016218038217630237
    2. ' Quantity' → logprob: -8.750162124633789
    3. 'Weight' → logprob: -12.500162124633789
    4. 'self' → logprob: -16.87516212463379
    5. 'Unit' → logprob: -18.50016212463379
    6. 'quantity' → logprob: -19.50016212463379
    7. 'Amount' → logprob: -20.75016212463379
    8. '_quantity' → logprob: -20.87516212463379
    9. '.Quantity' → logprob: -21.12516212463379
    10. 'Quant' → logprob: -21.12516212463379

Token 618: 'Unit' (ID: 6728)
  Prédit: 'Unit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Unit' → logprob: -0.0005877026706002653
    2. 'Quantity' → logprob: -7.6255879402160645
    3. 'unit' → logprob: -9.250587463378906
    4. 'User' → logprob: -13.375587463378906
    5. '<Unit' → logprob: -14.375587463378906
    6. '```' → logprob: -14.500587463378906
    7. ')' → logprob: -15.375587463378906
    8. '_unit' → logprob: -15.750587463378906
    9. 'Amount' → logprob: -16.750587463378906
    10. 'self' → logprob: -16.875587463378906

Token 619: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.04428938403725624
    2. ':
' → logprob: -3.4192893505096436
    3. '):' → logprob: -4.794289588928223
    4. ':' → logprob: -6.919289588928223
    5. '           ' → logprob: -7.294289588928223
    6. '       ' → logprob: -7.919289588928223
    7. 'return' → logprob: -8.919289588928223
    8. ':return' → logprob: -9.919289588928223
    9. '():
' → logprob: -10.794289588928223
    10. '):
' → logprob: -11.044289588928223

Token 620: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.008219508454203606
    2. '       ' → logprob: -5.0082197189331055
    3. 'return' → logprob: -6.6332197189331055
    4. ' return' → logprob: -8.633219718933105
    5. ':return' → logprob: -12.633219718933105
    6. '          ' → logprob: -13.633219718933105
    7. '	       ' → logprob: -14.008219718933105
    8. '0' → logprob: -14.133219718933105
    9. ':' → logprob: -14.383219718933105
    10. '   ' → logprob: -14.758219718933105

Token 621: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.00857497751712799
    2. ' return' → logprob: -4.883574962615967
    3. '       ' → logprob: -7.008574962615967
    4. '           ' → logprob: -9.883575439453125
    5. 'False' → logprob: -12.508575439453125
    6. ':return' → logprob: -12.633575439453125
    7. '```' → logprob: -13.008575439453125
    8. 'eturn' → logprob: -13.508575439453125
    9. 'Return' → logprob: -13.758575439453125
    10. '	return' → logprob: -15.008575439453125

Token 622: ' False' (ID: 7983)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'False' → logprob: -1.8624639324116288e-06
    2. ' False' → logprob: -13.250001907348633
    3. 'True' → logprob: -19.125001907348633
    4. '(False' → logprob: -21.750001907348633
    5. 'false' → logprob: -24.500001907348633
    6. 'self' → logprob: -25.125001907348633
    7. '=False' → logprob: -26.000001907348633
    8. '0' → logprob: -26.750001907348633
    9. 'Not' → logprob: -26.750001907348633
    10. '_false' → logprob: -26.750001907348633

Token 623: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0017826409311965108
    2. 'return' → logprob: -6.376782417297363
    3. '
' → logprob: -9.751782417297363
    4. ' return' → logprob: -11.001782417297363
    5. '           ' → logprob: -12.501782417297363
    6. '   ' → logprob: -14.126782417297363
    7. '```' → logprob: -14.626782417297363
    8. '      ' → logprob: -15.876782417297363
    9. '               ' → logprob: -16.87678337097168
    10. '0' → logprob: -17.12678337097168

Token 624: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -3.607391408877447e-05
    2. 'return' → logprob: -10.250036239624023
    3. ' return' → logprob: -14.500036239624023
    4. '   ' → logprob: -16.250036239624023
    5. '```' → logprob: -16.875036239624023
    6. '           ' → logprob: -17.375036239624023
    7. '      ' → logprob: -18.000036239624023
    8. '	return' → logprob: -19.000036239624023
    9. ':return' → logprob: -19.375036239624023
    10. '
' → logprob: -19.625036239624023

Token 625: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.009318724274635315
    2. '       ' → logprob: -4.759318828582764
    3. ' return' → logprob: -7.259318828582764
    4. '
' → logprob: -15.509318351745605
    5. '```' → logprob: -16.009319305419922
    6. 'eturn' → logprob: -16.634319305419922
    7. '	return' → logprob: -17.134319305419922
    8. '   ' → logprob: -18.259319305419922
    9. ':return' → logprob: -18.759319305419922
    10. 'Return' → logprob: -18.759319305419922

Token 626: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0004307884373702109
    2. ' self' → logprob: -7.750430583953857
    3. '(self' → logprob: -16.250431060791016
    4. '[self' → logprob: -18.500431060791016
    5. '```' → logprob: -20.250431060791016
    6. '   ' → logprob: -20.500431060791016
    7. '	self' → logprob: -21.000431060791016
    8. 'Self' → logprob: -21.125431060791016
    9. '
' → logprob: -21.250431060791016
    10. '       ' → logprob: -21.500431060791016

Token 627: '.mar' (ID: 107988)
  Prédit: '.mar'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.mar' → logprob: -0.00091217877343297
    2. 'mar' → logprob: -7.000912189483643
    3. '_mar' → logprob: -15.750911712646484
    4. '.m' → logprob: -15.875911712646484
    5. '```' → logprob: -16.625911712646484
    6. ' .' → logprob: -16.875911712646484
    7. '.' → logprob: -17.000911712646484
    8. '.Mar' → logprob: -17.250911712646484
    9. ' mar' → logprob: -17.500911712646484
    10. 'Mar' → logprob: -17.500911712646484

Token 628: 'ugu' (ID: 8060)
  Prédit: 'ugu'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ugu' → logprob: -0.014495598152279854
    2. 'gu' → logprob: -4.264495372772217
    3. 'ぐ' → logprob: -9.264495849609375
    4. 'ug' → logprob: -9.514495849609375
    5. '```' → logprob: -9.514495849609375
    6. 'гу' → logprob: -10.764495849609375
    7. 'g' → logprob: -10.889495849609375
    8. 'グ' → logprob: -12.389495849609375
    9. 'ugo' → logprob: -12.514495849609375
    10. 'う' → logprob: -12.639495849609375

Token 629: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.20141451060771942
    2. ' ==' → logprob: -1.7014144659042358
    3. '==
' → logprob: -14.076414108276367
    4. '=' → logprob: -15.576414108276367
    5. '===' → logprob: -15.951414108276367
    6. ')==' → logprob: -16.951414108276367
    7. '()==' → logprob: -17.076414108276367
    8. ']==' → logprob: -17.576414108276367
    9. ' ' → logprob: -18.076414108276367
    10. '==(' → logprob: -18.201414108276367

Token 630: ' other' (ID: 1273)
  Prédit: 'other'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'other' → logprob: -0.004078401252627373
    2. ' other' → logprob: -5.504078388214111
    3. '(other' → logprob: -21.129077911376953
    4. 'Other' → logprob: -21.504077911376953
    5. 'self' → logprob: -22.129077911376953
    6. '.other' → logprob: -22.629077911376953
    7. 'others' → logprob: -23.879077911376953
    8. '_other' → logprob: -24.379077911376953
    9. '
' → logprob: -24.754077911376953
    10. '其他' → logprob: -24.754077911376953

Token 631: '.mar' (ID: 107988)
  Prédit: '.mar'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.mar' → logprob: -1.6286106983898208e-05
    2. 'mar' → logprob: -11.125016212463379
    3. '.' → logprob: -14.250016212463379
    4. '.m' → logprob: -15.000016212463379
    5. ' .' → logprob: -16.000017166137695
    6. '.ma' → logprob: -16.500017166137695
    7. '.mas' → logprob: -16.500017166137695
    8. '.micro' → logprob: -16.875017166137695
    9. '```' → logprob: -16.875017166137695
    10. '_mar' → logprob: -17.000017166137695

Token 632: 'ugu' (ID: 8060)
  Prédit: 'ugu'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ugu' → logprob: -0.0003721622342709452
    2. 'gu' → logprob: -8.250371932983398
    3. 'ぐ' → logprob: -10.000371932983398
    4. 'гу' → logprob: -11.000371932983398
    5. 'ug' → logprob: -11.500371932983398
    6. '```' → logprob: -12.000371932983398
    7. 'く' → logprob: -12.500371932983398
    8. 'グ' → logprob: -12.625371932983398
    9. 'угу' → logprob: -12.625371932983398
    10. 'う' → logprob: -12.875371932983398

Token 633: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 634: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.04439030587673187
    2. 'def' → logprob: -3.4193902015686035
    3. '```' → logprob: -4.6693902015686035
    4. '       ' → logprob: -6.7943902015686035
    5. ' def' → logprob: -9.419390678405762
    6. '<|end|>' → logprob: -9.669390678405762
    7. '  ' → logprob: -11.044390678405762
    8. ' ' → logprob: -11.294390678405762
    9. 'return' → logprob: -12.044390678405762
    10. '    ' → logprob: -13.294390678405762

Token 635: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.02400808408856392
    2. '
' → logprob: -4.149008274078369
    3. '   ' → logprob: -5.149008274078369
    4. ' def' → logprob: -6.274008274078369
    5. '```' → logprob: -8.774007797241211
    6. ' 
' → logprob: -10.524007797241211
    7. '

' → logprob: -11.024007797241211
    8. '    
' → logprob: -11.024007797241211
    9. '<|end|>' → logprob: -11.399007797241211
    10. ' ' → logprob: -11.774007797241211

Token 636: ' __' (ID: 2516)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.00018244501552544534
    2. ' __' → logprob: -8.625182151794434
    3. 'def' → logprob: -12.875182151794434
    4. ' def' → logprob: -16.12518310546875
    5. '<' → logprob: -16.50018310546875
    6. '.__' → logprob: -16.87518310546875
    7. '
' → logprob: -17.12518310546875
    8. '___' → logprob: -17.87518310546875
    9. '**' → logprob: -18.12518310546875
    10. ' ' → logprob: -18.12518310546875

Token 637: 'repr' (ID: 67002)
  Prédit: 'lt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lt' → logprob: -0.0001234428636962548
    2. 'hash' → logprob: -9.000123023986816
    3. '_lt' → logprob: -21.000123977661133
    4. ' lt' → logprob: -22.000123977661133
    5. '<' → logprob: -22.500123977661133
    6. 'gt' → logprob: -22.875123977661133
    7. 'll' → logprob: -23.125123977661133
    8. 'repr' → logprob: -24.250123977661133
    9. '
' → logprob: -24.750123977661133
    10. 'less' → logprob: -25.000123977661133

Token 638: '__(' (ID: 8241)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.4914361536502838
    2. '__(' → logprob: -0.9914361238479614
    3. '__' → logprob: -4.241436004638672
    4. '(' → logprob: -6.241436004638672
    5. 'self' → logprob: -7.866436004638672
    6. '__(
' → logprob: -8.366436004638672
    7. 'f' → logprob: -9.866436004638672
    8. '       ' → logprob: -10.116436004638672
    9. 'def' → logprob: -10.241436004638672
    10. ' (' → logprob: -10.616436004638672

Token 639: 'self' (ID: 1156)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.00011486753646750003
    2. 'self' → logprob: -9.375114440917969
    3. ' f' → logprob: -10.625114440917969
    4. '       ' → logprob: -12.250114440917969
    5. '           ' → logprob: -14.875114440917969
    6. 'def' → logprob: -15.375114440917969
    7. 'return' → logprob: -15.500114440917969
    8. '   ' → logprob: -15.875114440917969
    9. '
' → logprob: -16.75011444091797
    10. ' ' → logprob: -17.37511444091797

Token 640: '):
' (ID: 1883)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.0003457136917859316
    2. 'self' → logprob: -8.375346183776855
    3. '(' → logprob: -9.250346183776855
    4. ')(' → logprob: -11.375346183776855
    5. '__(' → logprob: -12.750346183776855
    6. ')' → logprob: -13.250346183776855
    7. '):
' → logprob: -14.000346183776855
    8. ' (' → logprob: -14.500346183776855
    9. '       ' → logprob: -14.625346183776855
    10. '(s' → logprob: -15.000346183776855

Token 641: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.32377442717552185
    2. 'f' → logprob: -1.3237744569778442
    3. 'return' → logprob: -4.573774337768555
    4. ' f' → logprob: -9.323774337768555
    5. 'def' → logprob: -10.323774337768555
    6. '   ' → logprob: -11.448774337768555
    7. ' return' → logprob: -12.698774337768555
    8. '           ' → logprob: -13.323774337768555
    9. '```' → logprob: -14.448774337768555
    10. '
' → logprob: -15.573774337768555

Token 642: ' return' (ID: 622)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -4.7755875129951164e-05
    2. 'return' (adapté à ' return') → logprob: -10.75004768371582
    3. ' f' → logprob: -11.37504768371582
    4. '       ' → logprob: -11.75004768371582
    5. 'Quantity' → logprob: -12.00004768371582
    6. 'def' → logprob: -14.62504768371582
    7. '   ' → logprob: -15.00004768371582
    8. '           ' → logprob: -17.00004768371582
    9. '```' → logprob: -18.75004768371582
    10. ' Quantity' → logprob: -19.00004768371582

Token 643: ' f' (ID: 285)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.0005541055579669774
    2. ' f' → logprob: -7.500554084777832
    3. 'Quantity' → logprob: -13.750554084777832
    4. '

' → logprob: -21.37555503845215
    5. '(f' → logprob: -21.50055503845215
    6. ' Quantity' → logprob: -21.50055503845215
    7. 'quantity' → logprob: -22.00055503845215
    8. 'F' → logprob: -22.37555503845215
    9. '```' → logprob: -22.87555503845215
    10. '"' → logprob: -23.00055503845215

Token 644: '"' (ID: 1)
  Prédit: 'Quantity'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Quantity' → logprob: -0.004817191977053881
    2. '"' → logprob: -5.379817008972168
    3. 'f' → logprob: -8.629817008972168
    4. ' Quantity' → logprob: -12.004817008972168
    5. ''' → logprob: -12.129817008972168
    6. '(' → logprob: -13.254817008972168
    7. '.Quantity' → logprob: -14.254817008972168
    8. 'quantity' → logprob: -14.254817008972168
    9. '`' → logprob: -14.379817008972168
    10. '(f' → logprob: -14.629817008972168

Token 645: 'Quantity' (ID: 21757)
  Prédit: 'Quantity'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Quantity' → logprob: -1.6240566083070007e-06
    2. 'f' → logprob: -13.375001907348633
    3. '"' → logprob: -17.875001907348633
    4. ' Quantity' → logprob: -18.250001907348633
    5. 'quantity' → logprob: -18.625001907348633
    6. ''' → logprob: -20.250001907348633
    7. '`' → logprob: -20.625001907348633
    8. 'Amount' → logprob: -20.875001907348633
    9. '{' → logprob: -21.000001907348633
    10. 'Quant' → logprob: -21.375001907348633

Token 646: 'Unit' (ID: 6728)
  Prédit: 'Unit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Unit' → logprob: 0.0
    2. '(' → logprob: -17.625
    3. '(Unit' → logprob: -18.0
    4. '<Unit' → logprob: -18.5
    5. '```' → logprob: -19.0
    6. 'unit' → logprob: -19.625
    7. '"' → logprob: -19.875
    8. '`' → logprob: -20.25
    9. 'User' → logprob: -20.25
    10. '('' → logprob: -21.0

Token 647: '({' (ID: 3972)
  Prédit: '({'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '({' → logprob: -1.9361264946837764e-07
    2. '(' → logprob: -16.375
    3. '{' → logprob: -16.625
    4. '(self' → logprob: -16.875
    5. '(({' → logprob: -18.625
    6. '({
' → logprob: -20.25
    7. '(f' → logprob: -20.375
    8. '({'' → logprob: -20.75
    9. '('{' → logprob: -20.75
    10. '("{' → logprob: -21.125

Token 648: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -7.896309739408025e-07
    2. '{' → logprob: -14.250000953674316
    3. ' self' → logprob: -16.125
    4. '(self' → logprob: -20.375
    5. 'Self' → logprob: -22.5
    6. '[self' → logprob: -22.75
    7. '
' → logprob: -23.0
    8. '	self' → logprob: -23.625
    9. '{
' → logprob: -23.75
    10. '```' → logprob: -23.75

Token 649: '.mar' (ID: 107988)
  Prédit: '.mar'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.mar' → logprob: -1.3856492842023727e-06
    2. 'mar' → logprob: -13.750000953674316
    3. '.m' → logprob: -16.500001907348633
    4. '_mar' → logprob: -17.000001907348633
    5. '.Mar' → logprob: -17.125001907348633
    6. '.mas' → logprob: -18.250001907348633
    7. ').' → logprob: -18.750001907348633
    8. 'Mar' → logprob: -19.750001907348633
    9. '}.' → logprob: -20.000001907348633
    10. '.mark' → logprob: -20.000001907348633

Token 650: 'ugu' (ID: 8060)
  Prédit: 'ugu'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ugu' → logprob: -0.00035810720873996615
    2. 'gu' → logprob: -8.000358581542969
    3. 'гу' → logprob: -11.875358581542969
    4. 'угу' → logprob: -13.125358581542969
    5. 'グ' → logprob: -13.625358581542969
    6. '```' → logprob: -13.625358581542969
    7. 'ug' → logprob: -13.750358581542969
    8. 'う' → logprob: -13.750358581542969
    9. ' ugu' → logprob: -13.750358581542969
    10. 'ぐ' → logprob: -14.250358581542969

Token 651: '})' (ID: 9263)
  Prédit: ')"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')"' → logprob: -0.0003078142472077161
    2. ')' → logprob: -8.6253080368042
    3. '})' → logprob: -9.2503080368042
    4. ')}' → logprob: -10.8753080368042
    5. '}"' → logprob: -11.3753080368042
    6. ')”' → logprob: -14.7503080368042
    7. ')`' → logprob: -15.0003080368042
    8. ')">' → logprob: -15.0003080368042
    9. ')"
' → logprob: -15.6253080368042
    10. ')**' → logprob: -16.000307083129883

Token 652: '"

' (ID: 2678)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 653: 'class' (ID: 1444)
  Prédit: 'class'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'class' → logprob: -1.9266199160483666e-05
    2. '
' → logprob: -12.000019073486328
    3. 'from' → logprob: -12.500019073486328
    4. '```' → logprob: -12.875019073486328
    5. '<|end|>' → logprob: -13.000019073486328
    6. ' class' → logprob: -13.500019073486328
    7. 'def' → logprob: -14.125019073486328
    8. '#' → logprob: -14.500019073486328
    9. '   ' → logprob: -14.750019073486328
    10. '<|end|>' → logprob: -14.750019073486328

Token 654: ' Alloy' (ID: 115477)
  Prédit: 'default'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'default' → logprob: -1.5945563316345215
    2. 'Inventory' → logprob: -2.0945563316345215
    3. 'dict' → logprob: -2.2195563316345215
    4. 'Dict' → logprob: -2.5945563316345215
    5. 'Item' → logprob: -2.7195563316345215
    6. 'Default' → logprob: -2.7195563316345215
    7. ' defaultdict' → logprob: -3.2195563316345215
    8. 'def' → logprob: -3.3445563316345215
    9. 'Price' → logprob: -3.3445563316345215
    10. 'Recipe' → logprob: -3.3445563316345215

Token 655: 'Chunk' (ID: 29322)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.1616082340478897
    2. '(Unit' → logprob: -2.5366082191467285
    3. ':
' → logprob: -3.4116082191467285
    4. '(' → logprob: -3.6616082191467285
    5. 'Unit' → logprob: -4.6616082191467285
    6. '<Unit' → logprob: -7.2866082191467285
    7. 'Weight' → logprob: -8.411608695983887
    8. '(Type' → logprob: -9.036608695983887
    9. '(dict' → logprob: -9.161608695983887
    10. '():' → logprob: -9.286608695983887

Token 656: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.030230697244405746
    2. '(Unit' → logprob: -3.655230760574341
    3. '(' → logprob: -6.280230522155762
    4. ':
' → logprob: -6.280230522155762
    5. '():' → logprob: -9.905230522155762
    6. '<Unit' → logprob: -10.030230522155762
    7. '(Abstract' → logprob: -10.405230522155762
    8. '(object' → logprob: -11.280230522155762
    9. '(User' → logprob: -12.280230522155762
    10. '):' → logprob: -12.405230522155762

Token 657: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0041852486319839954
    2. 'def' → logprob: -5.504185199737549
    3. ' def' → logprob: -9.504185676574707
    4. 'class' → logprob: -10.379185676574707
    5. '```' → logprob: -14.379185676574707
    6. ':' → logprob: -15.629185676574707
    7. '@dat' → logprob: -16.25418472290039
    8. '    
' → logprob: -16.37918472290039
    9. '	def' → logprob: -16.75418472290039
    10. '   ' → logprob: -17.00418472290039

Token 658: ' """
' (ID: 7037)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.05172817036509514
    2. '   ' → logprob: -3.0517282485961914
    3. ' def' → logprob: -5.926728248596191
    4. 'class' → logprob: -7.801728248596191
    5. 'from' → logprob: -10.551728248596191
    6. '__' → logprob: -10.926728248596191
    7. '```' → logprob: -12.176728248596191
    8. '@dat' → logprob: -12.301728248596191
    9. '	def' → logprob: -12.426728248596191
    10. ':def' → logprob: -14.676728248596191

Token 659: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3361751139163971
    2. 'def' → logprob: -1.3361750841140747
    3. 'class' → logprob: -3.8361752033233643
    4. ' def' → logprob: -8.086174964904785
    5. '"""' → logprob: -8.586174964904785
    6. 'from' → logprob: -8.711174964904785
    7. '@dat' → logprob: -9.086174964904785
    8. '__' → logprob: -9.336174964904785
    9. '```' → logprob: -9.836174964904785
    10. '"""
' → logprob: -10.211174964904785

Token 660: ' Represents' (ID: 84592)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.13651913404464722
    2. 'class' → logprob: -2.136519193649292
    3. '   ' → logprob: -4.886518955230713
    4. ' def' → logprob: -7.011518955230713
    5. 'from' → logprob: -7.261518955230713
    6. '"""
' → logprob: -9.011519432067871
    7. '```' → logprob: -9.511519432067871
    8. '"""' → logprob: -9.636519432067871
    9. '@dat' → logprob: -9.886519432067871
    10. '#' → logprob: -10.886519432067871

Token 661: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.4157668650150299
    2. 'an' → logprob: -2.290766954421997
    3. ' an' → logprob: -2.540766954421997
    4. ' a' → logprob: -2.790766954421997
    5. 'class' → logprob: -2.915766954421997
    6. 'the' → logprob: -3.415766954421997
    7. ' the' → logprob: -5.290766716003418
    8. ' alloy' → logprob: -5.665766716003418
    9. 'def' → logprob: -7.540766716003418
    10. 'from' → logprob: -7.665766716003418

Token 662: ' single' (ID: 4590)
  Prédit: 'chunk'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'chunk' → logprob: -0.26534608006477356
    2. 'class' → logprob: -2.140346050262451
    3. 'piece' → logprob: -2.890346050262451
    4. ' chunk' → logprob: -3.890346050262451
    5. 'single' → logprob: -4.515346050262451
    6. 'material' → logprob: -5.265346050262451
    7. 'metal' → logprob: -5.640346050262451
    8. 'weight' → logprob: -5.765346050262451
    9. 'component' → logprob: -6.015346050262451
    10. 'composition' → logprob: -6.140346050262451

Token 663: ' chunk' (ID: 23958)
  Prédit: 'chunk'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'chunk' → logprob: -0.40404680371284485
    2. 'piece' → logprob: -2.1540467739105225
    3. 'weight' → logprob: -2.7790467739105225
    4. 'class' → logprob: -3.1540467739105225
    5. ' chunk' → logprob: -3.7790467739105225
    6. 'unit' → logprob: -3.9040467739105225
    7. 'portion' → logprob: -4.154047012329102
    8. 'part' → logprob: -4.529047012329102
    9. ' piece' → logprob: -4.779047012329102
    10. ' alloy' → logprob: -4.779047012329102

Token 664: ' of' (ID: 328)
  Prédit: ' of'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' of' → logprob: -0.05427161231637001
    2. 'of' → logprob: -3.429271697998047
    3. '   ' → logprob: -4.554271697998047
    4. ':' → logprob: -5.804271697998047
    5. '<|end|>' → logprob: -5.929271697998047
    6. ',' → logprob: -6.679271697998047
    7. '.' → logprob: -7.429271697998047
    8. ':
' → logprob: -7.554271697998047
    9. '(' → logprob: -7.679271697998047
    10. '<|end|>' → logprob: -7.804271697998047

Token 665: ' alloy' (ID: 59403)
  Prédit: 'an'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'an' → logprob: -0.3380129933357239
    2. 'all' → logprob: -1.338012933731079
    3. 'the' → logprob: -4.838013172149658
    4. 'metal' → logprob: -4.838013172149658
    5. 'weight' → logprob: -5.713013172149658
    6. 'All' → logprob: -6.588013172149658
    7. ' alloy' → logprob: -6.588013172149658
    8. 'material' → logprob: -6.963013172149658
    9. 'a' → logprob: -7.588013172149658
    10. ' an' → logprob: -7.838013172149658

Token 666: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -1.2082611322402954
    2. 'with' → logprob: -1.2082611322402954
    3. ' with' → logprob: -1.8332611322402954
    4. ':' → logprob: -2.083261013031006
    5. '   ' → logprob: -2.708261013031006
    6. '.' → logprob: -3.958261013031006
    7. ',' → logprob: -4.958261013031006
    8. '(' → logprob: -5.708261013031006
    9. ' in' → logprob: -5.833261013031006
    10. ' that' → logprob: -5.958261013031006

Token 667: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0006121210753917694
    2. 'class' → logprob: -8.125612258911133
    3. 'weight' → logprob: -9.000612258911133
    4. ' weight' → logprob: -10.375612258911133
    5. '```' → logprob: -10.375612258911133
    6. '"""
' → logprob: -10.875612258911133
    7. ' with' → logprob: -11.000612258911133
    8. 'from' → logprob: -11.250612258911133
    9. '
' → logprob: -11.500612258911133
    10. '    ' → logprob: -11.500612258911133

Token 668: ' weight' (ID: 6049)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.02476603537797928
    2. 'weight' (adapté à ' weight') → logprob: -4.149765968322754
    3. 'def' → logprob: -5.524765968322754
    4. ' weight' → logprob: -6.524765968322754
    5. ' def' → logprob: -7.274765968322754
    6. 'class' → logprob: -7.399765968322754
    7. ' with' → logprob: -7.524765968322754
    8. '"""
' → logprob: -7.649765968322754
    9. 'unit' → logprob: -8.649765968322754
    10. 'with' → logprob: -9.024765968322754

Token 669: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0020835241302847862
    2. '   ' → logprob: -6.2520833015441895
    3. ',' → logprob: -9.002083778381348
    4. ' =' → logprob: -11.627083778381348
    5. ' :' → logprob: -12.252083778381348
    6. '_unit' → logprob: -12.502083778381348
    7. '=' → logprob: -12.627083778381348
    8. ')' → logprob: -12.877083778381348
    9. ':
' → logprob: -13.502083778381348
    10. ':int' → logprob: -13.502083778381348

Token 670: ' Weight' (ID: 19983)
  Prédit: 'Weight'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Weight' → logprob: -0.0007860410842113197
    2. '   ' → logprob: -7.500785827636719
    3. ' Weight' → logprob: -8.375785827636719
    4. 'int' → logprob: -13.875785827636719
    5. '       ' → logprob: -14.625785827636719
    6. ' ' → logprob: -14.750785827636719
    7. '    ' → logprob: -15.125785827636719
    8. '  ' → logprob: -15.500785827636719
    9. 'Unit' → logprob: -15.625785827636719
    10. 'weight' → logprob: -16.00078582763672

Token 671: 'Unit' (ID: 6728)
  Prédit: 'Unit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Unit' → logprob: -0.00012403888104017824
    2. '   ' → logprob: -9.375123977661133
    3. ')' → logprob: -10.750123977661133
    4. ',' → logprob: -12.750123977661133
    5. 'Weight' → logprob: -12.750123977661133
    6. 'unit' → logprob: -13.250123977661133
    7. ':' → logprob: -13.500123977661133
    8. '
' → logprob: -13.500123977661133
    9. '<Unit' → logprob: -13.625123977661133
    10. '    
' → logprob: -13.875123977661133

Token 672: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.027305936440825462
    2. ',' → logprob: -4.652306079864502
    3. '    
' → logprob: -5.152306079864502
    4. '
' → logprob: -5.277306079864502
    5. ':' → logprob: -5.527306079864502
    6. ' =' → logprob: -7.027306079864502
    7. '=' → logprob: -7.777306079864502
    8. ')' → logprob: -8.027305603027344
    9. '<|end|>' → logprob: -8.027305603027344
    10. ',
' → logprob: -8.527305603027344

Token 673: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.02669466659426689
    2. ',' → logprob: -3.7766947746276855
    3. ')' → logprob: -6.2766947746276855
    4. '    
' → logprob: -7.4016947746276855
    5. '
' → logprob: -7.9016947746276855
    6. ',
' → logprob: -8.401694297790527
    7. ':' → logprob: -9.026694297790527
    8. '<|end|>' → logprob: -9.026694297790527
    9. '.' → logprob: -11.276694297790527
    10. '):
' → logprob: -11.276694297790527

Token 674: ' quantity' (ID: 17245)
  Prédit: 'quantity'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'quantity' (adapté à ' quantity') → logprob: -0.13299214839935303
    2. ' quantity' → logprob: -2.2579922676086426
    3. '   ' → logprob: -4.007992267608643
    4. ',' → logprob: -6.507992267608643
    5. 'weight' → logprob: -8.882991790771484
    6. '
' → logprob: -10.132991790771484
    7. 'amount' → logprob: -10.882991790771484
    8. ',
' → logprob: -10.882991790771484
    9. '    ' → logprob: -11.507991790771484
    10. ' ,' → logprob: -11.507991790771484

Token 675: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.01287676952779293
    2. '   ' → logprob: -4.387876987457275
    3. 'Unit' → logprob: -8.387876510620117
    4. 'unit' → logprob: -9.637876510620117
    5. '_unit' → logprob: -10.762876510620117
    6. ' unit' → logprob: -11.262876510620117
    7. ' :' → logprob: -11.387876510620117
    8. ')' → logprob: -11.762876510620117
    9. '  ' → logprob: -12.512876510620117
    10. ',' → logprob: -12.512876510620117

Token 676: ' Quantity' (ID: 65944)
  Prédit: 'Quantity'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Quantity' → logprob: -0.0002007987059187144
    2. ' Quantity' → logprob: -8.625201225280762
    3. 'int' → logprob: -10.875201225280762
    4. 'Weight' → logprob: -14.250201225280762
    5. '   ' → logprob: -14.250201225280762
    6. 'quantity' → logprob: -14.625201225280762
    7. 'Quant' → logprob: -16.000200271606445
    8. 'Unit' → logprob: -16.125200271606445
    9. ' ' → logprob: -16.375200271606445
    10. ' int' → logprob: -16.875200271606445

Token 677: 'Unit' (ID: 6728)
  Prédit: 'Unit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Unit' → logprob: -3.4121114822482923e-06
    2. '   ' → logprob: -13.625003814697266
    3. '<Unit' → logprob: -14.125003814697266
    4. 'unit' → logprob: -14.250003814697266
    5. ')' → logprob: -15.000003814697266
    6. 'Quantity' → logprob: -15.625003814697266
    7. '_unit' → logprob: -16.250003814697266
    8. 'Units' → logprob: -16.500003814697266
    9. ' Unit' → logprob: -16.750003814697266
    10. ' unit' → logprob: -17.000003814697266

Token 678: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.009792686440050602
    2. ')' → logprob: -5.134792804718018
    3. '
' → logprob: -6.009792804718018
    4. '<|end|>' → logprob: -7.384792804718018
    5. '    
' → logprob: -7.884792804718018
    6. '):
' → logprob: -9.13479232788086
    7. '```' → logprob: -9.13479232788086
    8. '<|end|>' → logprob: -10.00979232788086
    9. ':' → logprob: -10.13479232788086
    10. ',' → logprob: -10.88479232788086

Token 679: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.011464868672192097
    2. ')' → logprob: -4.761465072631836
    3. '
' → logprob: -6.261465072631836
    4. '"""' → logprob: -7.886465072631836
    5. 'class' → logprob: -9.011465072631836
    6. '```' → logprob: -9.136465072631836
    7. '<|end|>' → logprob: -9.136465072631836
    8. '    
' → logprob: -9.761465072631836
    9. '"""
' → logprob: -10.011465072631836
    10. '):
' → logprob: -10.636465072631836

Token 680: ' """
' (ID: 7037)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03679004684090614
    2. '
' → logprob: -3.911790132522583
    3. ')' → logprob: -4.411789894104004
    4. '"""' → logprob: -6.161789894104004
    5. '```' → logprob: -7.036789894104004
    6. '    
' → logprob: -7.911789894104004
    7. '"""
' (adapté à ' """
') → logprob: -8.536789894104004
    8. 'def' → logprob: -8.786789894104004
    9. 'class' → logprob: -10.036789894104004
    10. '  
' → logprob: -10.286789894104004

Token 681: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.002476016292348504
    2. 'def' → logprob: -6.002476215362549
    3. ' def' → logprob: -14.87747573852539
    4. '
' → logprob: -18.25247573852539
    5. '```' → logprob: -18.25247573852539
    6. '    
' → logprob: -18.62747573852539
    7. 'class' → logprob: -19.50247573852539
    8. '	def' → logprob: -19.62747573852539
    9. '   ' → logprob: -20.25247573852539
    10. '       ' → logprob: -21.50247573852539

Token 682: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.0007266097818501294
    2. '   ' → logprob: -7.250726699829102
    3. ' def' → logprob: -11.000726699829102
    4. '__' → logprob: -16.8757266998291
    5. '	def' → logprob: -19.0007266998291
    6. 'class' → logprob: -19.7507266998291
    7. '```' → logprob: -20.5007266998291
    8. '@dat' → logprob: -22.0007266998291
    9. '    
' → logprob: -22.1257266998291
    10. ' ' → logprob: -22.7507266998291

Token 683: ' __' (ID: 2516)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.2019357979297638
    2. ' __' → logprob: -1.7019357681274414
    3. 'def' → logprob: -8.201935768127441
    4. '.__' → logprob: -9.701935768127441
    5. 'init' → logprob: -9.826935768127441
    6. '___' → logprob: -10.201935768127441
    7. ' def' → logprob: -10.326935768127441
    8. '_init' → logprob: -10.576935768127441
    9. '```' → logprob: -10.576935768127441
    10. '_' → logprob: -12.576935768127441

Token 684: 'init' (ID: 3287)
  Prédit: 'init'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: 0.0
    2. '```' → logprob: -20.5
    3. '_init' → logprob: -20.875
    4. ' init' → logprob: -21.125
    5. 'inite' → logprob: -22.125
    6. 'ini' → logprob: -23.125
    7. '__' → logprob: -23.375
    8. '`' → logprob: -23.5
    9. 'repr' → logprob: -24.125
    10. '.init' → logprob: -24.25

Token 685: '__(' (ID: 8241)
  Prédit: '__('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.08114214986562729
    2. '(self' → logprob: -2.5811421871185303
    3. '(' → logprob: -6.331141948699951
    4. '__(
' → logprob: -8.08114242553711
    5. '__' → logprob: -8.83114242553711
    6. 'self' → logprob: -11.95614242553711
    7. ' (' → logprob: -12.70614242553711
    8. '(
' → logprob: -12.95614242553711
    9. '_(' → logprob: -13.95614242553711
    10. '__((' → logprob: -14.20614242553711

Token 686: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -3.054500666621607e-06
    2. ' self' → logprob: -13.25000286102295
    3. '
' → logprob: -13.87500286102295
    4. '(self' → logprob: -15.62500286102295
    5. '       ' → logprob: -17.000003814697266
    6. '   ' → logprob: -17.500003814697266
    7. ',' → logprob: -17.875003814697266
    8. '	self' → logprob: -18.500003814697266
    9. '        
' → logprob: -19.500003814697266
    10. '    
' → logprob: -19.500003814697266

Token 687: ',' (ID: 11)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.32976222038269043
    2. '(self' → logprob: -1.3297622203826904
    3. ',' → logprob: -4.3297624588012695
    4. '__(' → logprob: -6.2047624588012695
    5. '   ' → logprob: -7.5797624588012695
    6. '(' → logprob: -8.20476245880127
    7. '       ' → logprob: -9.20476245880127
    8. ' (' → logprob: -9.20476245880127
    9. ' self' → logprob: -9.32976245880127
    10. '__(
' → logprob: -10.32976245880127

Token 688: ' weight' (ID: 6049)
  Prédit: 'weight'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'weight' → logprob: -0.00033558503491804004
    2. ' weight' → logprob: -8.000335693359375
    3. '   ' → logprob: -16.000335693359375
    4. 'self' → logprob: -17.875335693359375
    5. '       ' → logprob: -18.000335693359375
    6. 'weig' → logprob: -18.500335693359375
    7. 'weights' → logprob: -18.875335693359375
    8. '    ' → logprob: -19.500335693359375
    9. 'Weight' → logprob: -19.500335693359375
    10. 'width' → logprob: -19.750335693359375

Token 689: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.12697619199752808
    2. ',' → logprob: -2.126976251602173
    3. '=' → logprob: -10.626976013183594
    4. ' ,' → logprob: -11.501976013183594
    5. '   ' → logprob: -12.251976013183594
    6. ':,' → logprob: -12.626976013183594
    7. '=None' → logprob: -13.126976013183594
    8. '       ' → logprob: -13.251976013183594
    9. ' :' → logprob: -14.001976013183594
    10. '):' → logprob: -15.126976013183594

Token 690: ' Weight' (ID: 19983)
  Prédit: 'Weight'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Weight' → logprob: -0.01248575747013092
    2. 'weight' → logprob: -4.512485980987549
    3. ' Weight' → logprob: -7.137485980987549
    4. ' weight' → logprob: -7.387485980987549
    5. '       ' → logprob: -10.88748550415039
    6. '_weight' → logprob: -12.88748550415039
    7. '   ' → logprob: -14.76248550415039
    8. '    ' → logprob: -15.51248550415039
    9. '        ' → logprob: -15.63748550415039
    10. ' ' → logprob: -16.01248550415039

Token 691: 'Unit' (ID: 6728)
  Prédit: 'Unit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Unit' → logprob: -9.758300438988954e-05
    2. ',' → logprob: -9.625097274780273
    3. 'Weight' → logprob: -10.750097274780273
    4. ':' → logprob: -12.500097274780273
    5. 'unit' → logprob: -13.000097274780273
    6. ')' → logprob: -13.875097274780273
    7. '   ' → logprob: -14.000097274780273
    8. '<Unit' → logprob: -14.375097274780273
    9. '       ' → logprob: -15.000097274780273
    10. '):' → logprob: -15.250097274780273

Token 692: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -2.45848218582978e-06
    2. ' ,' → logprob: -13.12500286102295
    3. ',
' → logprob: -15.00000286102295
    4. '   ' → logprob: -16.750001907348633
    5. '       ' → logprob: -16.875001907348633
    6. ',

' → logprob: -18.500001907348633
    7. '‌,' → logprob: -18.625001907348633
    8. ',
' → logprob: -19.500001907348633
    9. '‍,' → logprob: -20.125001907348633
    10. ' ' → logprob: -20.250001907348633

Token 693: ' quantity' (ID: 17245)
  Prédit: ' quantity'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' quantity' → logprob: -0.31326398253440857
    2. 'quantity' → logprob: -1.313264012336731
    3. '    ' → logprob: -14.188263893127441
    4. '   ' → logprob: -14.188263893127441
    5. '       ' → logprob: -14.938263893127441
    6. '.quantity' → logprob: -16.063264846801758
    7. '_quantity' → logprob: -16.313264846801758
    8. '     ' → logprob: -16.563264846801758
    9. '(quantity' → logprob: -16.938264846801758
    10. 'Quantity' → logprob: -17.188264846801758

Token 694: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -2.6776029699249193e-05
    2. '):' → logprob: -11.00002670288086
    3. ')' → logprob: -12.00002670288086
    4. '=' → logprob: -12.62502670288086
    5. '<|end|>' → logprob: -15.75002670288086
    6. '):
' → logprob: -15.87502670288086
    7. '<|end|>' → logprob: -16.87502670288086
    8. '   ' → logprob: -17.50002670288086
    9. ' :' → logprob: -17.62502670288086
    10. 'Quantity' → logprob: -17.62502670288086

Token 695: ' Quantity' (ID: 65944)
  Prédit: 'Quantity'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Quantity' → logprob: -0.005234594456851482
    2. ' Quantity' → logprob: -5.255234718322754
    3. ' quantity' → logprob: -14.755234718322754
    4. 'quantity' → logprob: -14.755234718322754
    5. ' ' → logprob: -17.380233764648438
    6. '_quantity' → logprob: -18.130233764648438
    7. '.Quantity' → logprob: -19.005233764648438
    8. '   ' → logprob: -19.130233764648438
    9. 'Quant' → logprob: -19.630233764648438
    10. ')' → logprob: -19.880233764648438

Token 696: 'Unit' (ID: 6728)
  Prédit: 'Unit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Unit' → logprob: -4.320199877838604e-07
    2. 'Quantity' → logprob: -15.5
    3. 'unit' → logprob: -16.25
    4. ')' → logprob: -16.375
    5. ' Unit' → logprob: -18.5
    6. '):
' → logprob: -19.0
    7. '<Unit' → logprob: -19.25
    8. '_unit' → logprob: -19.375
    9. '):' → logprob: -19.625
    10. 'Uint' → logprob: -19.75

Token 697: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.02059491164982319
    2. '):
' → logprob: -3.895594835281372
    3. ')' → logprob: -10.020594596862793
    4. '):
' → logprob: -12.395594596862793
    5. ':' → logprob: -12.770594596862793
    6. '   ' → logprob: -14.145594596862793
    7. ' ):' → logprob: -15.145594596862793
    8. ',' → logprob: -15.645594596862793
    9. '       ' → logprob: -15.645594596862793
    10. '):

' → logprob: -16.14559555053711

Token 698: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -3.547789674485102e-05
    2. 'self' → logprob: -10.375035285949707
    3. ' self' → logprob: -14.000035285949707
    4. ')' → logprob: -14.125035285949707
    5. ',' → logprob: -14.250035285949707
    6. ':' → logprob: -14.250035285949707
    7. '):
' → logprob: -15.250035285949707
    8. '<|end|>' → logprob: -15.500035285949707
    9. '```' → logprob: -15.625035285949707
    10. '
' → logprob: -15.625035285949707

Token 699: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.3874909281730652
    2. '       ' → logprob: -1.13749098777771
    3. ' self' → logprob: -7.387490749359131
    4. '	self' → logprob: -14.887491226196289
    5. '   ' → logprob: -15.262491226196289
    6. 'super' → logprob: -16.63749122619629
    7. '(self' → logprob: -16.63749122619629
    8. '	' → logprob: -16.88749122619629
    9. 'assert' → logprob: -17.88749122619629
    10. '      ' → logprob: -18.13749122619629

Token 700: '.weight' (ID: 49415)
  Prédit: '.weight'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.weight' → logprob: -0.005266719032078981
    2. '.' → logprob: -5.2552666664123535
    3. ' .' → logprob: -10.630267143249512
    4. 'weight' → logprob: -12.380267143249512
    5. '.weights' → logprob: -13.380267143249512
    6. '.we' → logprob: -13.755267143249512
    7. '.Weight' → logprob: -13.880267143249512
    8. ' weight' → logprob: -15.130267143249512
    9. '.weapon' → logprob: -15.880267143249512
    10. '_weight' → logprob: -16.255266189575195

Token 701: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.16022808849811554
    2. ' =' → logprob: -1.9102281332015991
    3. ':' → logprob: -13.91022777557373
    4. ',' → logprob: -14.28522777557373
    5. '<|end|>' → logprob: -14.28522777557373
    6. ')' → logprob: -14.53522777557373
    7. ' ' → logprob: -15.16022777557373
    8. '   ' → logprob: -15.28522777557373
    9. '=
' → logprob: -15.91022777557373
    10. '=

' → logprob: -16.035228729248047

Token 702: ' weight' (ID: 6049)
  Prédit: 'weight'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'weight' → logprob: -0.0011709370883181691
    2. ' weight' → logprob: -6.751171112060547
    3. 'Weight' → logprob: -14.501171112060547
    4. '       ' → logprob: -15.626171112060547
    5. 'weig' → logprob: -16.876171112060547
    6. '(weight' → logprob: -18.501171112060547
    7. '   ' → logprob: -18.626171112060547
    8. '     ' → logprob: -19.126171112060547
    9. '    ' → logprob: -19.126171112060547
    10. '_weight' → logprob: -19.501171112060547

Token 703: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.003947317600250244
    2. '
' → logprob: -5.8789472579956055
    3. '<|end|>' → logprob: -7.0039472579956055
    4. 'self' → logprob: -8.753947257995605
    5. ',' → logprob: -10.003947257995605
    6. ',
' → logprob: -11.628947257995605
    7. '<|end|>' → logprob: -11.628947257995605
    8. '        
' → logprob: -12.378947257995605
    9. '   ' → logprob: -12.878947257995605
    10. ' self' → logprob: -14.128947257995605

Token 704: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0005919939721934497
    2. 'self' → logprob: -7.500592231750488
    3. '
' → logprob: -10.375592231750488
    4. ' self' → logprob: -12.250592231750488
    5. ',' → logprob: -13.125592231750488
    6. ',
' → logprob: -15.375592231750488
    7. '	' → logprob: -15.500592231750488
    8. '   ' → logprob: -15.500592231750488
    9. ',self' → logprob: -16.125591278076172
    10. '        
' → logprob: -16.250591278076172

Token 705: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -2.868328920158092e-05
    2. '       ' → logprob: -10.500028610229492
    3. ' self' → logprob: -14.000028610229492
    4. 'quantity' → logprob: -15.250028610229492
    5. '   ' → logprob: -19.375028610229492
    6. '	self' → logprob: -20.375028610229492
    7. '
' → logprob: -20.875028610229492
    8. '(self' → logprob: -21.875028610229492
    9. '           ' → logprob: -22.125028610229492
    10. 'if' → logprob: -22.125028610229492

Token 706: '.quantity' (ID: 65301)
  Prédit: '.quantity'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.quantity' → logprob: -0.2847648859024048
    2. 'quantity' → logprob: -1.7847648859024048
    3. '=' → logprob: -2.9097647666931152
    4. ' =' → logprob: -4.034764766693115
    5. '.' → logprob: -5.409764766693115
    6. ' quantity' → logprob: -6.784764766693115
    7. '.weight' → logprob: -6.909764766693115
    8. 'weight' → logprob: -7.409764766693115
    9. ',' → logprob: -8.034765243530273
    10. '       ' → logprob: -9.284765243530273

Token 707: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.2421630173921585
    2. ' =' → logprob: -2.2421629428863525
    3. '<|end|>' → logprob: -2.2421629428863525
    4. ')' → logprob: -6.617163181304932
    5. '<|end|>' → logprob: -7.367163181304932
    6. '       ' → logprob: -7.992163181304932
    7. '   ' → logprob: -9.367162704467773
    8. ':' → logprob: -10.242162704467773
    9. ',' → logprob: -10.242162704467773
    10. ' ' → logprob: -10.492162704467773

Token 708: ' quantity' (ID: 17245)
  Prédit: 'quantity'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'quantity' → logprob: -0.002475777640938759
    2. ' quantity' → logprob: -6.002475738525391
    3. '(quantity' → logprob: -16.75247573852539
    4. 'Quantity' → logprob: -17.00247573852539
    5. '.quantity' → logprob: -18.12747573852539
    6. 'quality' → logprob: -18.87747573852539
    7. 'quant' → logprob: -19.12747573852539
    8. ' ' → logprob: -19.25247573852539
    9. '   ' → logprob: -19.87747573852539
    10. 'amount' → logprob: -20.75247573852539

Token 709: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 710: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2213803082704544
    2. '
' → logprob: -2.0963802337646484
    3. '<|end|>' → logprob: -2.5963802337646484
    4. '<|end|>' → logprob: -8.346380233764648
    5. 'def' → logprob: -8.596380233764648
    6. '    
' → logprob: -8.721380233764648
    7. '```' → logprob: -8.721380233764648
    8. '       ' → logprob: -8.846380233764648
    9. ' ' → logprob: -9.346380233764648
    10. '

' → logprob: -10.096380233764648

Token 711: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -7.584239938296378e-06
    2. ' def' → logprob: -11.875007629394531
    3. '   ' → logprob: -14.625007629394531
    4. '
' → logprob: -17.50000762939453
    5. '@' → logprob: -19.37500762939453
    6. '@property' → logprob: -19.62500762939453
    7. '#' → logprob: -20.62500762939453
    8. '    
' → logprob: -21.25000762939453
    9. '```' → logprob: -21.62500762939453
    10. 'class' → logprob: -21.75000762939453

Token 712: ' total' (ID: 3609)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '__' → logprob: -0.34620532393455505
    2. 'def' → logprob: -1.8462053537368774
    3. ' __' → logprob: -2.096205234527588
    4. ' def' → logprob: -4.471205234527588
    5. 'to' → logprob: -7.846205234527588
    6. 'total' → logprob: -10.846205711364746
    7. '   ' → logprob: -11.721205711364746
    8. ' to' → logprob: -12.346205711364746
    9. '.__' → logprob: -12.346205711364746
    10. 'copy' → logprob: -12.471205711364746

Token 713: '_weight' (ID: 34711)
  Prédit: '_weight'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_weight' → logprob: -0.0004803624760825187
    2. '_' → logprob: -7.8754801750183105
    3. 'weight' → logprob: -10.500480651855469
    4. '_mass' → logprob: -10.500480651855469
    5. '_weights' → logprob: -11.625480651855469
    6. ' =' → logprob: -11.750480651855469
    7. '```' → logprob: -12.500480651855469
    8. 'Weight' → logprob: -12.500480651855469
    9. '_value' → logprob: -12.625480651855469
    10. '_WEIGHT' → logprob: -12.750480651855469

Token 714: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.6155135631561279
    2. '()' → logprob: -0.8655135631561279
    3. '(' → logprob: -3.615513563156128
    4. '   ' → logprob: -5.615513801574707
    5. '():' → logprob: -5.990513801574707
    6. 'def' → logprob: -6.990513801574707
    7. '(
' → logprob: -7.115513801574707
    8. '():
' → logprob: -7.240513801574707
    9. '<|end|>' → logprob: -7.240513801574707
    10. ' =' → logprob: -7.490513801574707

Token 715: ')' (ID: 8)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.2656249701976776
    2. ')' → logprob: -2.140625
    3. '(self' → logprob: -2.265625
    4. '())' → logprob: -4.765625
    5. '():' → logprob: -7.140625
    6. '(' → logprob: -7.515625
    7. ' )' → logprob: -7.640625
    8. '   ' → logprob: -7.640625
    9. ' (' → logprob: -8.765625
    10. 'self' → logprob: -8.890625

Token 716: ' ->' (ID: 2747)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.00020902375399600714
    2. '():' → logprob: -9.125208854675293
    3. '(' → logprob: -9.500208854675293
    4. '()' → logprob: -11.250208854675293
    5. 'self' → logprob: -12.250208854675293
    6. ' (' → logprob: -12.500208854675293
    7. '   ' → logprob: -13.875208854675293
    8. 'def' → logprob: -14.500208854675293
    9. ' ->' → logprob: -14.625208854675293
    10. ':' → logprob: -14.875208854675293

Token 717: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.1767624020576477
    2. 'Weight' → logprob: -2.051762342453003
    3. ' int' → logprob: -3.426762342453003
    4. ' Weight' → logprob: -6.926762580871582
    5. 'return' → logprob: -11.176762580871582
    6. ''' → logprob: -12.051762580871582
    7. 'Unit' → logprob: -12.176762580871582
    8. '   ' → logprob: -13.051762580871582
    9. 'self' → logprob: -13.051762580871582
    10. 'Weighted' → logprob: -13.426762580871582

Token 718: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.1717405766248703
    2. '():' → logprob: -2.5467405319213867
    3. ':
' → logprob: -3.1717405319213867
    4. '():
' → logprob: -3.6717405319213867
    5. '       ' → logprob: -4.671740531921387
    6. '()' → logprob: -6.671740531921387
    7. '   ' → logprob: -7.796740531921387
    8. ':return' → logprob: -7.796740531921387
    9. '(self' → logprob: -7.921740531921387
    10. '):' → logprob: -9.796740531921387

Token 719: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.06345689296722412
    2. 'return' → logprob: -2.8134570121765137
    3. ' return' → logprob: -6.563457012176514
    4. 'self' → logprob: -9.563456535339355
    5. '   ' → logprob: -13.063456535339355
    6. '	' → logprob: -13.438456535339355
    7. ':return' → logprob: -14.688456535339355
    8. '	return' → logprob: -14.938456535339355
    9. '```' → logprob: -14.938456535339355
    10. '{return' → logprob: -15.063456535339355

Token 720: ' #' (ID: 1069)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.00021140782337170094
    2. '       ' → logprob: -9.000211715698242
    3. ' return' → logprob: -9.500211715698242
    4. 'self' → logprob: -11.250211715698242
    5. 'result' → logprob: -17.750211715698242
    6. '	return' → logprob: -19.000211715698242
    7. '```' → logprob: -19.250211715698242
    8. '#' (adapté à ' #') → logprob: -19.500211715698242
    9. '{return' → logprob: -19.750211715698242
    10. '   ' → logprob: -20.875211715698242

Token 721: ' total' (ID: 3609)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.00010449681576574221
    2. '       ' → logprob: -9.250104904174805
    3. ' return' → logprob: -11.750104904174805
    4. '#' → logprob: -15.375104904174805
    5. '   ' → logprob: -15.500104904174805
    6. 'self' → logprob: -18.375104904174805
    7. '	return' → logprob: -19.125104904174805
    8. 'result' → logprob: -20.625104904174805
    9. 'def' → logprob: -21.375104904174805
    10. '           ' → logprob: -22.500104904174805

Token 722: ' weight' (ID: 6049)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.35006973147392273
    2. ' return' → logprob: -1.2250697612762451
    3. '_weight' → logprob: -7.225069522857666
    4. '       ' → logprob: -7.600069522857666
    5. '_return' → logprob: -9.225069999694824
    6. 'weight' → logprob: -9.600069999694824
    7. ' =' → logprob: -9.850069999694824
    8. '	return' → logprob: -9.975069999694824
    9. '=' → logprob: -10.225069999694824
    10. '   ' → logprob: -10.350069999694824

Token 723: ' in' (ID: 306)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.45597222447395325
    2. ' =' → logprob: -1.8309721946716309
    3. 'return' → logprob: -2.330972194671631
    4. '       ' → logprob: -2.455972194671631
    5. '()' → logprob: -4.205972194671631
    6. ' return' → logprob: -5.205972194671631
    7. '   ' → logprob: -6.705972194671631
    8. '(self' → logprob: -7.830972194671631
    9. 'def' → logprob: -8.455972671508789
    10. ':' → logprob: -9.080972671508789

Token 724: ' Bok' (ID: 111854)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0001801801408873871
    2. ' self' → logprob: -8.6251802444458
    3. 'return' → logprob: -15.0001802444458
    4. '(self' → logprob: -15.8751802444458
    5. '   ' → logprob: -17.500179290771484
    6. '       ' → logprob: -18.000179290771484
    7. '	self' → logprob: -18.500179290771484
    8. '[self' → logprob: -18.750179290771484
    9. 'weight' → logprob: -19.750179290771484
    10. '=self' → logprob: -19.750179290771484

Token 725: 'ko' (ID: 3593)
  Prédit: 'ko'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ko' → logprob: -0.0004533142491709441
    2. 'ко' → logprob: -7.875453472137451
    3. 'o' → logprob: -10.125452995300293
    4. 'k' → logprob: -11.375452995300293
    5. 'co' → logprob: -12.125452995300293
    6. '코' → logprob: -13.500452995300293
    7. '   ' → logprob: -13.500452995300293
    8. 'bo' → logprob: -13.625452995300293
    9. 'こ' → logprob: -13.750452995300293
    10. '       ' → logprob: -13.875452995300293

Token 726: ' units' (ID: 13306)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -1.0529783964157104
    2. ' *' → logprob: -1.5529783964157104
    3. '       ' → logprob: -2.427978515625
    4. 'units' → logprob: -2.802978515625
    5. '(self' → logprob: -3.052978515625
    6. ' self' → logprob: -3.052978515625
    7. '   ' → logprob: -3.177978515625
    8. '*' → logprob: -3.302978515625
    9. 'return' → logprob: -3.552978515625
    10. '*self' → logprob: -3.677978515625

Token 727: ' *' (ID: 425)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1181541383266449
    2. 'return' → logprob: -2.3681540489196777
    3. ' return' → logprob: -4.118154048919678
    4. '        
' → logprob: -7.368154048919678
    5. ' =' → logprob: -8.243154525756836
    6. '
' → logprob: -8.743154525756836
    7. '   ' → logprob: -8.868154525756836
    8. '=' → logprob: -9.618154525756836
    9. '```' → logprob: -9.743154525756836
    10. ':' → logprob: -10.243154525756836

Token 728: ' counts' (ID: 28991)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.04382160305976868
    2. ' self' → logprob: -3.1688215732574463
    3. 'quantity' → logprob: -8.293821334838867
    4. '       ' → logprob: -8.668821334838867
    5. '(self' → logprob: -8.668821334838867
    6. '2' → logprob: -9.293821334838867
    7. ' quantity' → logprob: -10.293821334838867
    8. '
' → logprob: -10.793821334838867
    9. '   ' → logprob: -10.793821334838867
    10. ' (' → logprob: -10.918821334838867

Token 729: ' in' (ID: 306)
  Prédit: ' *'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.016492825001478195
    2. '       ' → logprob: -4.76649284362793
    3. '*' → logprob: -5.89149284362793
    4. '(self' → logprob: -6.64149284362793
    5. '   ' → logprob: -6.76649284362793
    6. '*self' → logprob: -6.76649284362793
    7. 'self' → logprob: -7.14149284362793
    8. ' self' → logprob: -9.01649284362793
    9. ' ' → logprob: -9.51649284362793
    10. 'return' → logprob: -9.51649284362793

Token 730: ' Mar' (ID: 3145)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.00748606538400054
    2. 'quantity' → logprob: -5.632485866546631
    3. 'Quantity' → logprob: -6.257485866546631
    4. ' self' → logprob: -6.757485866546631
    5. 'the' → logprob: -8.507486343383789
    6. 'mar' → logprob: -8.507486343383789
    7. '_quantity' → logprob: -9.507486343383789
    8. ' quantity' → logprob: -9.632486343383789
    9. '
' → logprob: -10.007486343383789
    10. '   ' → logprob: -10.132486343383789

Token 731: 'ugu' (ID: 8060)
  Prédit: 'ugu'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ugu' → logprob: -0.00023965541913639754
    2. 'gu' → logprob: -9.750239372253418
    3. '```' → logprob: -9.875239372253418
    4. 'ug' → logprob: -10.250239372253418
    5. '
' → logprob: -11.500239372253418
    6. 'угу' → logprob: -11.625239372253418
    7. '

' → logprob: -11.875239372253418
    8. 'гу' → logprob: -12.125239372253418
    9. '``' → logprob: -12.125239372253418
    10. '\xef\xbd' → logprob: -12.375239372253418

Token 732: ' units' (ID: 13306)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.16659057140350342
    2. '       ' → logprob: -2.041590690612793
    3. '.b' → logprob: -5.041590690612793
    4. '(self' → logprob: -5.166590690612793
    5. ':' → logprob: -6.541590690612793
    6. ' =' → logprob: -6.541590690612793
    7. ' *' → logprob: -6.791590690612793
    8. ',' → logprob: -7.041590690612793
    9. '  ' → logprob: -7.041590690612793
    10. '()' → logprob: -7.666590690612793

Token 733: ' (' (ID: 350)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1937103122472763
    2. 'return' → logprob: -1.8187103271484375
    3. ' return' → logprob: -4.3187103271484375
    4. '
' → logprob: -9.443710327148438
    5. '        
' → logprob: -9.568710327148438
    6. ':return' → logprob: -9.693710327148438
    7. ':' → logprob: -9.818710327148438
    8. '(' → logprob: -10.193710327148438
    9. '<|end|>' → logprob: -10.318710327148438
    10. ' =' → logprob: -10.318710327148438

Token 734: 'sum' (ID: 12298)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.5399159789085388
    2. ')' → logprob: -0.9149159789085388
    3. ')
' → logprob: -4.789916038513184
    4. ' self' → logprob: -5.664916038513184
    5. '       ' → logprob: -6.164916038513184
    6. ')return' → logprob: -6.789916038513184
    7. 'return' → logprob: -7.289916038513184
    8. ' )' → logprob: -7.664916038513184
    9. '(self' → logprob: -8.539916038513184
    10. ' )
' → logprob: -10.289916038513184

Token 735: ' total' (ID: 3609)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7079862952232361
    2. ')' → logprob: -0.9579862952232361
    3. '(self' → logprob: -3.082986354827881
    4. ' of' → logprob: -3.707986354827881
    5. ')
' → logprob: -4.457986354827881
    6. '   ' → logprob: -4.457986354827881
    7. 'self' → logprob: -4.582986354827881
    8. ' self' → logprob: -5.832986354827881
    9. '()' → logprob: -5.957986354827881
    10. '):' → logprob: -6.082986354827881

Token 736: ' weight' (ID: 6049)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(self' → logprob: -1.2673640251159668
    2. '       ' → logprob: -1.6423640251159668
    3. ' *' → logprob: -2.017364025115967
    4. '()' → logprob: -2.142364025115967
    5. ')' → logprob: -2.267364025115967
    6. '   ' → logprob: -2.392364025115967
    7. ' of' → logprob: -4.142364025115967
    8. 'self' → logprob: -4.267364025115967
    9. '*' → logprob: -4.767364025115967
    10. ')
' → logprob: -4.892364025115967

Token 737: ')
' (ID: 446)
  Prédit: ' *'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.14941127598285675
    2. ')' → logprob: -3.149411201477051
    3. '*' → logprob: -3.399411201477051
    4. '()' → logprob: -3.774411201477051
    5. '       ' → logprob: -4.149411201477051
    6. ' of' → logprob: -5.274411201477051
    7. '*self' → logprob: -5.399411201477051
    8. '   ' → logprob: -5.524411201477051
    9. '(self' → logprob: -5.774411201477051
    10. ')
' → logprob: -6.774411201477051

Token 738: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0015962723409757018
    2. 'return' → logprob: -6.751596450805664
    3. ' =' → logprob: -8.376596450805664
    4. ' return' → logprob: -9.626596450805664
    5. '=' → logprob: -9.751596450805664
    6. '()' → logprob: -10.376596450805664
    7. ':' → logprob: -11.751596450805664
    8. '(self' → logprob: -11.876596450805664
    9. '
' → logprob: -12.126596450805664
    10. '   ' → logprob: -12.251596450805664

Token 739: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.00302762514911592
    2. '       ' → logprob: -6.003027439117432
    3. ' return' → logprob: -7.503027439117432
    4. 'self' → logprob: -15.25302791595459
    5. '	return' → logprob: -16.378026962280273
    6. '```' → logprob: -18.128026962280273
    7. '{return' → logprob: -19.003026962280273
    8. '   ' → logprob: -19.003026962280273
    9. ':return' → logprob: -19.878026962280273
    10. 'result' → logprob: -20.128026962280273

Token 740: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -6.704273118884885e-07
    2. ' self' → logprob: -14.250000953674316
    3. '   ' → logprob: -20.125
    4. '(self' → logprob: -20.125
    5. '       ' → logprob: -20.25
    6. '	self' → logprob: -22.875
    7. '[self' → logprob: -25.375
    8. '           ' → logprob: -26.0
    9. '  ' → logprob: -26.375
    10. '=self' → logprob: -26.5

Token 741: '.weight' (ID: 49415)
  Prédit: '.weight'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.weight' → logprob: -7.107425062713446e-06
    2. '.quantity' → logprob: -12.125006675720215
    3. '.weights' → logprob: -14.125006675720215
    4. 'weight' → logprob: -14.500006675720215
    5. ' .' → logprob: -15.375006675720215
    6. '.' → logprob: -16.37500762939453
    7. '.width' → logprob: -17.25000762939453
    8. '.amount' → logprob: -17.50000762939453
    9. '.we' → logprob: -18.12500762939453
    10. '.total' → logprob: -18.25000762939453

Token 742: '.to' (ID: 3552)
  Prédit: '.b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.b' → logprob: -0.22642850875854492
    2. '.to' → logprob: -1.601428508758545
    3. '.' → logprob: -7.101428508758545
    4. ' .' → logprob: -8.726428985595703
    5. '   ' → logprob: -11.851428985595703
    6. '.value' → logprob: -12.601428985595703
    7. '.t' → logprob: -12.601428985595703
    8. 'to' → logprob: -12.726428985595703
    9. '.token' → logprob: -13.101428985595703
    10. '.weight' → logprob: -13.101428985595703

Token 743: '_base' (ID: 17096)
  Prédit: '_base'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_base' → logprob: -3.650518920039758e-06
    2. 'base' → logprob: -12.750003814697266
    3. '_' → logprob: -14.375003814697266
    4. 'Base' → logprob: -17.375003814697266
    5. '```' → logprob: -18.750003814697266
    6. '_b' → logprob: -19.625003814697266
    7. '`' → logprob: -19.750003814697266
    8. '__' → logprob: -19.875003814697266
    9. ' _' → logprob: -20.250003814697266
    10. ' base' → logprob: -20.500003814697266

Token 744: '()' (ID: 416)
  Prédit: '()'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.004124230705201626
    2. '()*' → logprob: -5.504124164581299
    3. ' ()' → logprob: -10.629124641418457
    4. '(' → logprob: -12.004124641418457
    5. '()
' → logprob: -12.504124641418457
    6. '()`' → logprob: -12.754124641418457
    7. '()(' → logprob: -12.879124641418457
    8. '()

' → logprob: -13.754124641418457
    9. '*' → logprob: -14.129124641418457
    10. '().' → logprob: -14.129124641418457

Token 745: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.0549226813018322
    2. '*' → logprob: -2.929922580718994
    3. '*self' → logprob: -10.929923057556152
    4. ' ' → logprob: -11.179923057556152
    5. ' ' → logprob: -12.679923057556152
    6. '   ' → logprob: -13.554923057556152
    7. '       ' → logprob: -13.804923057556152
    8. '*
' → logprob: -14.304923057556152
    9. '  ' → logprob: -14.554923057556152
    10. 'self' → logprob: -14.804923057556152

Token 746: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.00071553117595613
    2. ' self' → logprob: -7.250715732574463
    3. '(self' → logprob: -12.500715255737305
    4. '       ' → logprob: -13.750715255737305
    5. '   ' → logprob: -14.125715255737305
    6. '	self' → logprob: -17.000715255737305
    7. '           ' → logprob: -17.750715255737305
    8. '[self' → logprob: -17.750715255737305
    9. ' ' → logprob: -18.250715255737305
    10. '  ' → logprob: -18.875715255737305

Token 747: '.quantity' (ID: 65301)
  Prédit: '.quantity'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.quantity' → logprob: -1.5213274309644476e-05
    2. 'quantity' → logprob: -11.125015258789062
    3. '.' → logprob: -15.500015258789062
    4. '.weight' → logprob: -16.250015258789062
    5. ' .' → logprob: -16.625015258789062
    6. '.Quantity' → logprob: -17.500015258789062
    7. '.quant' → logprob: -17.625015258789062
    8. '.amount' → logprob: -17.625015258789062
    9. 'Quantity' → logprob: -19.000015258789062
    10. '(quantity' → logprob: -19.125015258789062

Token 748: '.to' (ID: 3552)
  Prédit: '.to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.to' → logprob: -0.0013923770748078823
    2. '.mar' → logprob: -6.876392364501953
    3. '.' → logprob: -8.001392364501953
    4. '.quantity' → logprob: -11.751392364501953
    5. ' .' → logprob: -12.376392364501953
    6. 'To' → logprob: -12.626392364501953
    7. '().' → logprob: -13.626392364501953
    8. '.total' → logprob: -13.626392364501953
    9. 'to' → logprob: -13.751392364501953
    10. '.m' → logprob: -13.876392364501953

Token 749: '_base' (ID: 17096)
  Prédit: '_base'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_base' → logprob: -0.0002043748099822551
    2. 'base' → logprob: -8.500204086303711
    3. '_' → logprob: -15.125204086303711
    4. 'Base' → logprob: -15.500204086303711
    5. '```' → logprob: -15.625204086303711
    6. ' base' → logprob: -16.50020408630371
    7. '_bas' → logprob: -18.12520408630371
    8. '_BASE' → logprob: -18.37520408630371
    9. ' _' → logprob: -18.62520408630371
    10. '_b' → logprob: -18.75020408630371

Token 750: '()

' (ID: 5874)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -1.0683535037969705e-05
    2. '()`' → logprob: -12.00001049041748
    3. '()+' → logprob: -13.87501049041748
    4. '(' → logprob: -14.62501049041748
    5. '(),' → logprob: -14.87501049041748
    6. '()]' → logprob: -14.87501049041748
    7. '())' → logprob: -15.00001049041748
    8. '()

' → logprob: -15.25001049041748
    9. '()>' → logprob: -15.25001049041748
    10. '()*' → logprob: -15.37501049041748

Token 751: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.4235440492630005
    2. '   ' → logprob: -1.4235440492630005
    3. '<|end|>' → logprob: -2.298543930053711
    4. '```' → logprob: -5.798543930053711
    5. '<|end|>' → logprob: -8.298543930053711
    6. '    
' → logprob: -8.673543930053711
    7. ')' → logprob: -8.798543930053711
    8. '

' → logprob: -8.923543930053711
    9. ' ' → logprob: -9.423543930053711
    10. '  ' → logprob: -9.923543930053711

Token 752: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.0015159345930442214
    2. '   ' → logprob: -6.501515865325928
    3. ' def' → logprob: -11.376516342163086
    4. '
' → logprob: -14.626516342163086
    5. '@dat' → logprob: -14.626516342163086
    6. '```' → logprob: -14.876516342163086
    7. 'class' → logprob: -15.376516342163086
    8. '	def' → logprob: -15.501516342163086
    9. '<|end|>' → logprob: -15.501516342163086
    10. '    
' → logprob: -16.626516342163086

Token 753: ' __' (ID: 2516)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.005279888398945332
    2. 'def' → logprob: -5.755280017852783
    3. ' __' → logprob: -7.255280017852783
    4. 'copy' → logprob: -7.505280017852783
    5. 'total' → logprob: -8.005279541015625
    6. 'combine' → logprob: -8.380279541015625
    7. 'to' → logprob: -9.005279541015625
    8. 'clone' → logprob: -10.380279541015625
    9. 'from' → logprob: -10.630279541015625
    10. 'merge' → logprob: -10.755279541015625

Token 754: 'repr' (ID: 67002)
  Prédit: 'eq'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'eq' → logprob: -0.01419076882302761
    2. 'repr' → logprob: -4.264190673828125
    3. 'lt' → logprob: -11.014190673828125
    4. 'hash' → logprob: -12.139190673828125
    5. 'add' → logprob: -12.639190673828125
    6. 'mul' → logprob: -13.639190673828125
    7. 'init' → logprob: -13.889190673828125
    8. 'str' → logprob: -16.514190673828125
    9. ' eq' → logprob: -18.764190673828125
    10. 'rep' → logprob: -19.389190673828125

Token 755: '__(' (ID: 8241)
  Prédit: '__('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -3.225939872208983e-05
    2. '__' → logprob: -11.000032424926758
    3. '(self' → logprob: -11.625032424926758
    4. '__(
' → logprob: -12.000032424926758
    5. '__('' → logprob: -15.250032424926758
    6. '__((' → logprob: -16.125032424926758
    7. '__("' → logprob: -16.875032424926758
    8. '__[' → logprob: -19.125032424926758
    9. 'self' → logprob: -19.250032424926758
    10. '__(*' → logprob: -19.375032424926758

Token 756: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -8.017927029868588e-05
    2. 'f' → logprob: -9.500080108642578
    3. ')' → logprob: -12.750080108642578
    4. ' self' → logprob: -13.000080108642578
    5. '(self' → logprob: -15.875080108642578
    6. 'Self' → logprob: -17.875080108642578
    7. 's' → logprob: -18.625080108642578
    8. '
' → logprob: -18.875080108642578
    9. '	self' → logprob: -19.125080108642578
    10. '       ' → logprob: -19.375080108642578

Token 757: '):
' (ID: 1883)
  Prédit: '__('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.1286739706993103
    2. 'self' → logprob: -2.628674030303955
    3. '(self' → logprob: -3.253674030303955
    4. '__' → logprob: -5.003674030303955
    5. '__(
' → logprob: -6.128674030303955
    6. '__)' → logprob: -8.128673553466797
    7. ')' → logprob: -8.253673553466797
    8. ')(' → logprob: -8.878673553466797
    9. '):
' → logprob: -9.253673553466797
    10. '__('' → logprob: -9.753673553466797

Token 758: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.003655887907370925
    2. 'f' → logprob: -6.003655910491943
    3. 'return' → logprob: -6.753655910491943
    4. ' f' → logprob: -12.003655433654785
    5. ' return' → logprob: -12.878655433654785
    6. 'self' → logprob: -13.253655433654785
    7. '   ' → logprob: -13.378655433654785
    8. '           ' → logprob: -14.628655433654785
    9. '      ' → logprob: -15.378655433654785
    10. '     ' → logprob: -16.3786563873291

Token 759: ' return' (ID: 622)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.3240217864513397
    2. 'return' (adapté à ' return') → logprob: -1.324021816253662
    3. '       ' → logprob: -4.574021816253662
    4. '   ' → logprob: -8.324021339416504
    5. ' return' → logprob: -9.074021339416504
    6. ' f' → logprob: -10.824021339416504
    7. '           ' → logprob: -11.949021339416504
    8. '
' → logprob: -14.074021339416504
    9. '     ' → logprob: -14.074021339416504
    10. '        ' → logprob: -15.574021339416504

Token 760: ' f' (ID: 285)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -9.615255839889869e-05
    2. ' f' → logprob: -9.250096321105957
    3. '   ' → logprob: -19.75009536743164
    4. '       ' → logprob: -20.62509536743164
    5. '(f' → logprob: -21.00009536743164
    6. '	f' → logprob: -21.50009536743164
    7. '           ' → logprob: -22.50009536743164
    8. '```' → logprob: -23.00009536743164
    9. '     ' → logprob: -23.50009536743164
    10. '    ' → logprob: -24.00009536743164

Token 761: '"' (ID: 1)
  Prédit: 'All'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'All' → logprob: -0.08294868469238281
    2. 'f' → logprob: -2.582948684692383
    3. ' Alloy' → logprob: -6.207948684692383
    4. '"' → logprob: -6.707948684692383
    5. '(All' → logprob: -7.707948684692383
    6. ' f' → logprob: -8.832948684692383
    7. '@All' → logprob: -9.957948684692383
    8. 'Alle' → logprob: -10.207948684692383
    9. 'Al' → logprob: -10.332948684692383
    10. '_All' → logprob: -10.957948684692383

Token 762: 'All' (ID: 2594)
  Prédit: 'All'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'All' → logprob: -0.0003416607796680182
    2. 'f' → logprob: -8.625341415405273
    3. '"' → logprob: -9.250341415405273
    4. ' Alloy' → logprob: -10.500341415405273
    5. '{' → logprob: -11.125341415405273
    6. ''' → logprob: -11.750341415405273
    7. '`' → logprob: -12.000341415405273
    8. '@All' → logprob: -13.375341415405273
    9. 'Al' → logprob: -13.875341415405273
    10. 'Alle' → logprob: -14.000341415405273

Token 763: 'oy' (ID: 1107)
  Prédit: 'oy'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'oy' → logprob: 0.0
    2. 'ay' → logprob: -19.0
    3. '```' → logprob: -19.5
    4. 'o' → logprob: -19.625
    5. 'oys' → logprob: -20.125
    6. 'oyer' → logprob: -21.375
    7. '``' → logprob: -22.0
    8. 'Oy' → logprob: -22.25
    9. '#' → logprob: -22.375
    10. '**' → logprob: -22.375

Token 764: 'Chunk' (ID: 29322)
  Prédit: 'Chunk'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Chunk' → logprob: 0.0
    2. 'Chunks' → logprob: -19.25
    3. ' Chunk' → logprob: -19.375
    4. '_chunk' → logprob: -19.5
    5. 'Chord' → logprob: -23.25
    6. 'chunk' → logprob: -23.5
    7. ' chunk' → logprob: -24.125
    8. 'Chuck' → logprob: -25.0
    9. 'Ch' → logprob: -25.75
    10. '```' → logprob: -25.875

Token 765: '(weight' (ID: 121456)
  Prédit: '({'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '({' → logprob: -0.8134990930557251
    2. '(self' → logprob: -1.313499093055725
    3. '(weight' → logprob: -1.563499093055725
    4. '(' → logprob: -2.5634989738464355
    5. '(All' → logprob: -7.1884989738464355
    6. '(f' → logprob: -8.063499450683594
    7. 'All' → logprob: -9.063499450683594
    8. '(Unit' → logprob: -9.688499450683594
    9. '{' → logprob: -10.188499450683594
    10. 'Weight' → logprob: -10.813499450683594

Token 766: '={' (ID: 1693)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.005810174625366926
    2. '={' → logprob: -5.255810260772705
    3. '=self' → logprob: -7.505810260772705
    4. '=}' → logprob: -11.630809783935547
    5. ',' → logprob: -12.505809783935547
    6. '=

' → logprob: -12.630809783935547
    7. '=
' → logprob: -12.755809783935547
    8. 'self' → logprob: -13.755809783935547
    9. '=",' → logprob: -13.755809783935547
    10. '={},' → logprob: -14.130809783935547

Token 767: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -2.339278580620885e-06
    2. '{' → logprob: -13.250001907348633
    3. 'repr' → logprob: -14.500001907348633
    4. ' self' → logprob: -17.875001907348633
    5. '(self' → logprob: -21.000001907348633
    6. '	self' → logprob: -22.875001907348633
    7. '[self' → logprob: -24.375001907348633
    8. 'Self' → logprob: -24.500001907348633
    9. '{
' → logprob: -24.750001907348633
    10. '$self' → logprob: -25.125001907348633

Token 768: '.weight' (ID: 49415)
  Prédit: '.weight'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.weight' → logprob: -4.008129963040119e-06
    2. 'weight' → logprob: -12.500003814697266
    3. '.weights' → logprob: -16.125003814697266
    4. '.' → logprob: -17.250003814697266
    5. 'Weight' → logprob: -17.250003814697266
    6. '.Weight' → logprob: -17.875003814697266
    7. ' .' → logprob: -18.625003814697266
    8. ' weight' → logprob: -18.750003814697266
    9. '.width' → logprob: -18.750003814697266
    10. '.unit' → logprob: -19.000003814697266

Token 769: '.b' (ID: 1292)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -1.1472419600977446e-06
    2. ' ,' → logprob: -13.875000953674316
    3. ',
' → logprob: -16.250001907348633
    4. 'quantity' → logprob: -17.750001907348633
    5. ',

' → logprob: -20.625001907348633
    6. ' quantity' → logprob: -20.750001907348633
    7. '},' → logprob: -20.875001907348633
    8. '),' → logprob: -21.000001907348633
    9. '‌,' → logprob: -21.125001907348633
    10. '   ' → logprob: -21.625001907348633

Token 770: 'ok' (ID: 525)
  Prédit: 'ok'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ok' → logprob: -6.0629870858974755e-05
    2. 'ок' → logprob: -11.25006103515625
    3. 'okho' → logprob: -11.37506103515625
    4. 'k' → logprob: -11.62506103515625
    5. 'o' → logprob: -12.50006103515625
    6. 'Ok' → logprob: -12.87506103515625
    7. ' ok' → logprob: -13.25006103515625
    8. '

' → logprob: -13.50006103515625
    9. 'occo' → logprob: -13.50006103515625
    10. '"' → logprob: -13.75006103515625

Token 771: 'ko' (ID: 3593)
  Prédit: 'ko'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ko' → logprob: -2.117345684382599e-05
    2. 'ко' → logprob: -11.000020980834961
    3. 'bo' → logprob: -13.625020980834961
    4. '```' → logprob: -14.000020980834961
    5. '
' → logprob: -15.250020980834961
    6. 'k' → logprob: -15.250020980834961
    7. '`' → logprob: -15.500020980834961
    8. '{"' → logprob: -15.625020980834961
    9. '``' → logprob: -15.625020980834961
    10. ' ko' → logprob: -16.00002098083496

Token 772: '},' (ID: 4180)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -3.249780638725497e-05
    2. ' ,' → logprob: -11.000032424926758
    3. '},' → logprob: -11.250032424926758
    4. ',
' → logprob: -13.250032424926758
    5. '),' → logprob: -14.750032424926758
    6. 'quantity' → logprob: -15.125032424926758
    7. ',value' → logprob: -17.125032424926758
    8. '‌,' → logprob: -17.375032424926758
    9. ',",' → logprob: -17.375032424926758
    10. '",' → logprob: -17.750032424926758

Token 773: ' quantity' (ID: 17245)
  Prédit: ' quantity'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' quantity' → logprob: -0.06196768581867218
    2. 'quantity' → logprob: -2.811967611312866
    3. '(quantity' → logprob: -17.811967849731445
    4. ' ' → logprob: -18.186967849731445
    5. 'quant' → logprob: -18.561967849731445
    6. '       ' → logprob: -18.686967849731445
    7. '.quantity' → logprob: -18.686967849731445
    8. ' ' → logprob: -18.811967849731445
    9. '      ' → logprob: -18.811967849731445
    10. ' qty' → logprob: -19.061967849731445

Token 774: '={' (ID: 1693)
  Prédit: '={'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '={' → logprob: -1.282920129597187e-05
    2. '=' → logprob: -11.500012397766113
    3. '{' → logprob: -13.000012397766113
    4. '={},' → logprob: -16.62501335144043
    5. '={
' → logprob: -17.00001335144043
    6. '={'' → logprob: -17.12501335144043
    7. '=self' → logprob: -17.37501335144043
    8. '=}' → logprob: -17.50001335144043
    9. ']={' → logprob: -17.62501335144043
    10. '={}' → logprob: -17.62501335144043

Token 775: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0019336353288963437
    2. '{' → logprob: -6.251933574676514
    3. ' self' → logprob: -12.251934051513672
    4. '(self' → logprob: -16.376934051513672
    5. '       ' → logprob: -17.126934051513672
    6. '[self' → logprob: -17.376934051513672
    7. 'quantity' → logprob: -17.751934051513672
    8. '{
' → logprob: -18.251934051513672
    9. '   ' → logprob: -18.376934051513672
    10. '	self' → logprob: -18.501934051513672

Token 776: '.quantity' (ID: 65301)
  Prédit: '.mar'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.mar' → logprob: -0.048637669533491135
    2. '.quantity' → logprob: -3.048637628555298
    3. 'quantity' → logprob: -10.548637390136719
    4. '.quant' → logprob: -10.923637390136719
    5. 'mar' → logprob: -13.298637390136719
    6. '.m' → logprob: -13.673637390136719
    7. '.Mar' → logprob: -13.798637390136719
    8. '.' → logprob: -14.423637390136719
    9. '.Quantity' → logprob: -14.423637390136719
    10. '.qty' → logprob: -15.298637390136719

Token 777: '.mar' (ID: 107988)
  Prédit: '.mar'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.mar' → logprob: -0.0013689270708709955
    2. '})' → logprob: -6.626368999481201
    3. ')' → logprob: -11.001368522644043
    4. '}' → logprob: -11.626368522644043
    5. '}")' → logprob: -12.126368522644043
    6. '.m' → logprob: -12.751368522644043
    7. 'mar' → logprob: -12.751368522644043
    8. '.Mar' → logprob: -12.876368522644043
    9. ')}' → logprob: -13.251368522644043
    10. '},' → logprob: -14.751368522644043

Token 778: 'ugu' (ID: 8060)
  Prédit: 'ugu'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ugu' → logprob: -0.0005141906440258026
    2. 'gu' → logprob: -7.750514030456543
    3. '```' → logprob: -10.250514030456543
    4. 'гу' → logprob: -10.625514030456543
    5. 'угу' → logprob: -12.750514030456543
    6. 'ぐ' → logprob: -13.000514030456543
    7. '\
' → logprob: -13.750514030456543
    8. ')' → logprob: -13.875514030456543
    9. '`' → logprob: -13.875514030456543
    10. '1' → logprob: -14.125514030456543

Token 779: '})' (ID: 9263)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.2511216700077057
    2. ')"' → logprob: -1.7511216402053833
    3. ')}' → logprob: -3.751121759414673
    4. '})' → logprob: -3.876121759414673
    5. ')")' → logprob: -6.001121520996094
    6. ')">' → logprob: -7.251121520996094
    7. '}")' → logprob: -7.876121520996094
    8. '}' → logprob: -8.251121520996094
    9. '}"' → logprob: -8.876121520996094
    10. '))' → logprob: -9.126121520996094

Token 780: '"

' (ID: 2678)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 781: 'class' (ID: 1444)
  Prédit: 'class'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'class' → logprob: -0.0007387538789771497
    2. '
' → logprob: -7.250738620758057
    3. 'def' → logprob: -10.875739097595215
    4. ' class' → logprob: -12.000739097595215
    5. '

' → logprob: -13.875739097595215
    6. 'from' → logprob: -14.250739097595215
    7. '  
' → logprob: -15.000739097595215
    8. '<|end|>' → logprob: -15.125739097595215
    9. '   ' → logprob: -15.375739097595215
    10. '    
' → logprob: -15.625739097595215

Token 782: ' Collection' (ID: 13102)
  Prédit: 'All'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'All' → logprob: -0.05086475610733032
    2. ' Alloy' → logprob: -3.4258646965026855
    3. ' All' → logprob: -5.0508646965026855
    4. 'Composite' → logprob: -5.8008646965026855
    5. 'Inventory' → logprob: -6.3008646965026855
    6. 'Metal' → logprob: -7.0508646965026855
    7. 'Solution' → logprob: -7.1758646965026855
    8. 'Batch' → logprob: -8.175865173339844
    9. 'Unit' → logprob: -8.175865173339844
    10. 'Mix' → logprob: -8.300865173339844

Token 783: 'Vehicle' (ID: 31586)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.037407003343105316
    2. ':
' → logprob: -3.4124069213867188
    3. '(' → logprob: -6.787406921386719
    4. 'All' → logprob: -7.162406921386719
    5. '(All' → logprob: -7.412406921386719
    6. '(object' → logprob: -8.162406921386719
    7. '(Unit' → logprob: -8.662406921386719
    8. '(Collection' → logprob: -8.912406921386719
    9. '<Unit' → logprob: -9.412406921386719
    10. '(List' → logprob: -9.537406921386719

Token 784: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0010800872696563601
    2. '():' → logprob: -7.87608003616333
    3. '(' → logprob: -8.001080513000488
    4. ':
' → logprob: -8.751080513000488
    5. '(All' → logprob: -9.376080513000488
    6. 'All' → logprob: -10.126080513000488
    7. '(object' → logprob: -10.501080513000488
    8. '<|end|>' → logprob: -10.876080513000488
    9. '):' → logprob: -11.501080513000488
    10. '(Abstract' → logprob: -12.376080513000488

Token 785: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.23445171117782593
    2. ':' → logprob: -1.9844517707824707
    3. ':
' → logprob: -2.9844517707824707
    4. 'class' → logprob: -3.9844517707824707
    5. '```' → logprob: -7.609451770782471
    6. 'def' → logprob: -8.234451293945312
    7. '
' → logprob: -8.234451293945312
    8. '(object' → logprob: -8.484451293945312
    9. '(
' → logprob: -8.609451293945312
    10. '  ' → logprob: -8.609451293945312

Token 786: ' """
' (ID: 7037)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.45980826020240784
    2. 'class' → logprob: -1.2098082304000854
    3. 'def' → logprob: -2.959808349609375
    4. ':
' → logprob: -4.959808349609375
    5. ' def' → logprob: -5.084808349609375
    6. ':' → logprob: -5.459808349609375
    7. ' class' → logprob: -7.709808349609375
    8. '
' → logprob: -8.584808349609375
    9. '    ' → logprob: -9.334808349609375
    10. '    
' → logprob: -9.584808349609375

Token 787: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.045002564787864685
    2. '
' → logprob: -3.7950024604797363
    3. 'class' → logprob: -4.170002460479736
    4. 'def' → logprob: -6.545002460479736
    5. '"""
' → logprob: -6.920002460479736
    6. 'ABC' → logprob: -6.920002460479736
    7. ':
' → logprob: -7.670002460479736
    8. '):
' → logprob: -8.045002937316895
    9. ')' → logprob: -8.170002937316895
    10. '  ' → logprob: -8.545002937316895

Token 788: ' Represents' (ID: 84592)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.8147716522216797
    2. 'class' → logprob: -0.9397716522216797
    3. ' def' → logprob: -2.4397716522216797
    4. '   ' → logprob: -2.5647716522216797
    5. ' class' → logprob: -6.18977165222168
    6. ' """
' → logprob: -8.93977165222168
    7. '"""
' → logprob: -9.81477165222168
    8. '
' → logprob: -10.56477165222168
    9. '    ' → logprob: -10.56477165222168
    10. ' ' → logprob: -10.81477165222168

Token 789: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.30513298511505127
    2. ' a' → logprob: -1.5551329851150513
    3. 'the' → logprob: -3.4301328659057617
    4. ' the' → logprob: -4.555132865905762
    5. ' an' → logprob: -5.930132865905762
    6. 'class' → logprob: -6.430132865905762
    7. 'an' → logprob: -6.930132865905762
    8. '   ' → logprob: -7.055132865905762
    9. 'collections' → logprob: -7.555132865905762
    10. '<|end|>' → logprob: -7.555132865905762

Token 790: ' vehicle' (ID: 9540)
  Prédit: ' collection'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' collection' → logprob: -0.201659694314003
    2. ' vehicle' → logprob: -2.451659679412842
    3. 'collection' → logprob: -2.576659679412842
    4. 'vehicle' → logprob: -4.576659679412842
    5. ' container' → logprob: -5.576659679412842
    6. ' class' → logprob: -6.951659679412842
    7. 'class' → logprob: -7.076659679412842
    8. 'container' → logprob: -7.201659679412842
    9. 'collect' → logprob: -7.451659679412842
    10. ' collector' → logprob: -7.826659679412842

Token 791: ' collecting' (ID: 39995)
  Prédit: ' that'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' that' → logprob: -0.4566991925239563
    2. '   ' → logprob: -2.2066991329193115
    3. 'that' → logprob: -2.2066991329193115
    4. ':' → logprob: -3.4566991329193115
    5. ':
' → logprob: -3.8316991329193115
    6. ' capable' → logprob: -3.8316991329193115
    7. '<|end|>' → logprob: -4.081699371337891
    8. '(' → logprob: -4.956699371337891
    9. ' for' → logprob: -4.956699371337891
    10. 'for' → logprob: -5.206699371337891

Token 792: ' a' (ID: 261)
  Prédit: 'all'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'all' → logprob: -0.19927877187728882
    2. ' alloys' → logprob: -2.1992788314819336
    3. ' alloy' → logprob: -4.074278831481934
    4. 'and' → logprob: -4.574278831481934
    5. ' multiple' → logprob: -4.824278831481934
    6. ' chunks' → logprob: -4.949278831481934
    7. 'chunks' → logprob: -5.199278831481934
    8. ' all' → logprob: -5.324278831481934
    9. 'multiple' → logprob: -5.324278831481934
    10. ' and' → logprob: -5.699278831481934

Token 793: ' certain' (ID: 4454)
  Prédit: 'collection'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'collection' → logprob: -1.0819240808486938
    2. 'list' → logprob: -1.4569240808486938
    3. 'List' → logprob: -2.2069239616394043
    4. 'll' → logprob: -2.3319239616394043
    5. 'all' → logprob: -2.4569239616394043
    6. ' collection' → logprob: -3.0819239616394043
    7. ' list' → logprob: -3.7069239616394043
    8. 'All' → logprob: -4.206923961639404
    9. 'default' → logprob: -4.206923961639404
    10. ' List' → logprob: -5.456923961639404

Token 794: ' amount' (ID: 4527)
  Prédit: ' alloy'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' alloy' → logprob: -1.143223762512207
    2. 'all' → logprob: -1.768223762512207
    3. ' collection' → logprob: -2.268223762512207
    4. 'chunk' → logprob: -2.643223762512207
    5. ' amount' → logprob: -2.768223762512207
    6. ' chunk' → logprob: -2.768223762512207
    7. 'amount' → logprob: -3.143223762512207
    8. 'All' → logprob: -3.768223762512207
    9. ' type' → logprob: -3.768223762512207
    10. 'collection' → logprob: -4.268223762512207

Token 795: ' of' (ID: 328)
  Prédit: ' of'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' of' → logprob: -0.07142072170972824
    2. 'of' → logprob: -2.696420669555664
    3. '   ' → logprob: -6.571420669555664
    4. '<|end|>' → logprob: -10.196420669555664
    5. '<|end|>' → logprob: -11.321420669555664
    6. '
' → logprob: -11.946420669555664
    7. '  ' → logprob: -11.946420669555664
    8. ' ' → logprob: -12.321420669555664
    9. ',' → logprob: -12.946420669555664
    10. '	of' → logprob: -12.946420669555664

Token 796: ' alloy' (ID: 59403)
  Prédit: 'all'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'all' → logprob: -0.2269582897424698
    2. ' alloy' → logprob: -1.9769582748413086
    3. 'All' → logprob: -3.4769582748413086
    4. ' Alloy' → logprob: -3.7269582748413086
    5. ' alloys' → logprob: -5.226958274841309
    6. ' all' → logprob: -6.726958274841309
    7. '各' → logprob: -7.351958274841309
    8. 'metal' → logprob: -8.226958274841309
    9. ' All' → logprob: -8.289458274841309
    10. 'chunks' → logprob: -8.601958274841309

Token 797: ' chunks' (ID: 53440)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5392053127288818
    2. ':
' → logprob: -1.5392053127288818
    3. ':' → logprob: -2.539205312728882
    4. 's' → logprob: -2.914205312728882
    5. ' chunks' → logprob: -4.164205551147461
    6. ' in' → logprob: -4.289205551147461
    7. 'chunks' → logprob: -4.664205551147461
    8. '.' → logprob: -5.414205551147461
    9. '.
' → logprob: -5.789205551147461
    10. ' of' → logprob: -5.914205551147461

Token 798: '.
' (ID: 558)
  Prédit: ':
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.17967887222766876
    2. ':' → logprob: -2.0546789169311523
    3. '   ' → logprob: -3.5546789169311523
    4. '):
' → logprob: -5.304678916931152
    5. '.' → logprob: -7.304678916931152
    6. 'from' → logprob: -7.554678916931152
    7. '.
' → logprob: -8.429678916931152
    8. '):' → logprob: -8.429678916931152
    9. ',' → logprob: -8.679678916931152
    10. '
' → logprob: -8.679678916931152

Token 799: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00032151900813914835
    2. 'class' → logprob: -8.250321388244629
    3. '```' → logprob: -10.500321388244629
    4. '
' → logprob: -10.875321388244629
    5. '    
' → logprob: -11.625321388244629
    6. 'def' → logprob: -13.625321388244629
    7. ' class' → logprob: -13.750321388244629
    8. ')' → logprob: -14.125321388244629
    9. '    ' → logprob: -14.250321388244629
    10. '  ' → logprob: -15.375321388244629

Token 800: ' """
' (ID: 7037)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0009856504620984197
    2. 'def' → logprob: -7.250985622406006
    3. ' def' → logprob: -8.750986099243164
    4. 'class' → logprob: -9.500986099243164
    5. '```' → logprob: -10.250986099243164
    6. '
' → logprob: -12.250986099243164
    7. ')' → logprob: -14.250986099243164
    8. 'from' → logprob: -14.500986099243164
    9. '    
' → logprob: -15.250986099243164
    10. '    ' → logprob: -15.250986099243164

Token 801: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.004864530637860298
    2. 'def' → logprob: -5.629864692687988
    3. 'class' → logprob: -7.254864692687988
    4. ' def' → logprob: -7.504864692687988
    5. ' class' → logprob: -12.879864692687988
    6. '    ' → logprob: -13.629864692687988
    7. '	def' → logprob: -13.629864692687988
    8. '```' → logprob: -14.004864692687988
    9. '    
' → logprob: -15.754864692687988
    10. '   ' → logprob: -15.754864692687988

Token 802: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.0007874715374782681
    2. ' def' → logprob: -7.250787258148193
    3. '   ' → logprob: -9.750787734985352
    4. 'class' → logprob: -10.875787734985352
    5. '__' → logprob: -15.500787734985352
    6. 'from' → logprob: -18.00078773498535
    7. '	def' → logprob: -18.00078773498535
    8. 'de' → logprob: -18.50078773498535
    9. ' ' → logprob: -19.50078773498535
    10. '```' → logprob: -19.87578773498535

Token 803: ' __' (ID: 2516)
  Prédit: 'init'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: -0.6349205374717712
    2. '__' → logprob: -0.7599205374717712
    3. ' __' → logprob: -6.509920597076416
    4. '_init' → logprob: -8.259920120239258
    5. 'def' → logprob: -9.009920120239258
    6. 'classmethod' → logprob: -9.134920120239258
    7. '
' → logprob: -9.384920120239258
    8. '```' → logprob: -9.634920120239258
    9. '___' → logprob: -10.134920120239258
    10. 'python' → logprob: -10.509920120239258

Token 804: 'init' (ID: 3287)
  Prédit: 'init'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: -9.253090865968261e-06
    2. '__' → logprob: -11.875009536743164
    3. '_init' → logprob: -13.500009536743164
    4. 'class' → logprob: -14.500009536743164
    5. '```' → logprob: -16.375009536743164
    6. ' init' → logprob: -17.000009536743164
    7. '_' → logprob: -18.250009536743164
    8. 'initi' → logprob: -18.250009536743164
    9. ' __' → logprob: -18.375009536743164
    10. 'inite' → logprob: -18.375009536743164

Token 805: '__(' (ID: 8241)
  Prédit: '__('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.0015028368216007948
    2. '(self' → logprob: -7.251502990722656
    3. '__(
' → logprob: -7.376502990722656
    4. '__' → logprob: -8.876502990722656
    5. '(' → logprob: -11.626502990722656
    6. 'self' → logprob: -11.876502990722656
    7. ' (' → logprob: -12.001502990722656
    8. '=' → logprob: -13.126502990722656
    9. '_(' → logprob: -13.876502990722656
    10. '__((' → logprob: -14.126502990722656

Token 806: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -9.849109119386412e-06
    2. ' self' → logprob: -12.250009536743164
    3. '
' → logprob: -12.625009536743164
    4. ')' → logprob: -14.250009536743164
    5. 'weight' → logprob: -15.000009536743164
    6. '):
' → logprob: -15.250009536743164
    7. ',' → logprob: -16.250009536743164
    8. '       ' → logprob: -16.500009536743164
    9. '   ' → logprob: -16.625009536743164
    10. '(self' → logprob: -16.750009536743164

Token 807: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.1369026154279709
    2. 'self' → logprob: -2.5119025707244873
    3. '__(' → logprob: -3.2619025707244873
    4. '__,' → logprob: -4.886902809143066
    5. '(self' → logprob: -7.761902809143066
    6. '__' → logprob: -8.261902809143066
    7. '__(
' → logprob: -8.636902809143066
    8. '_,' → logprob: -10.261902809143066
    9. '(' → logprob: -11.136902809143066
    10. ' ,' → logprob: -11.636902809143066

Token 808: ' chunk' (ID: 23958)
  Prédit: 'chunks'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'chunks' → logprob: -0.9101355075836182
    2. 'capacity' → logprob: -1.4101355075836182
    3. 'self' → logprob: -1.9101355075836182
    4. 'all' → logprob: -2.160135507583618
    5. 'name' → logprob: -3.285135507583618
    6. 'col' → logprob: -4.535135269165039
    7. 'collection' → logprob: -4.660135269165039
    8. ' capacity' → logprob: -5.410135269165039
    9. 'cargo' → logprob: -5.785135269165039
    10. 'max' → logprob: -5.910135269165039

Token 809: ':' (ID: 25)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.0001882823125924915
    2. ':' → logprob: -9.000187873840332
    3. ' s' → logprob: -10.750187873840332
    4. '_s' → logprob: -11.250187873840332
    5. '_size' → logprob: -11.875187873840332
    6. '_count' → logprob: -12.250187873840332
    7. '_counts' → logprob: -12.250187873840332
    8. '_list' → logprob: -12.375187873840332
    9. ')' → logprob: -13.625187873840332
    10. '):' → logprob: -13.625187873840332

Token 810: ' Alloy' (ID: 115477)
  Prédit: 'All'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'All' → logprob: -0.00046212802408263087
    2. ' Alloy' → logprob: -8.125462532043457
    3. ' All' → logprob: -9.125462532043457
    4. '   ' → logprob: -10.125462532043457
    5. ' ' → logprob: -12.750462532043457
    6. ')' → logprob: -13.000462532043457
    7. '       ' → logprob: -13.125462532043457
    8. '  ' → logprob: -13.125462532043457
    9. 'Optional' → logprob: -13.875462532043457
    10. 'None' → logprob: -14.000462532043457

Token 811: 'Chunk' (ID: 29322)
  Prédit: 'Chunk'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Chunk' → logprob: -5.200166469876422e-06
    2. 'Chunks' → logprob: -12.250004768371582
    3. 'chunk' → logprob: -15.375004768371582
    4. ')' → logprob: -17.3750057220459
    5. '_chunk' → logprob: -17.5000057220459
    6. ' Chunk' → logprob: -17.6250057220459
    7. ' chunk' → logprob: -18.5000057220459
    8. '   ' → logprob: -19.2500057220459
    9. '(chunk' → logprob: -20.1250057220459
    10. '```' → logprob: -20.3750057220459

Token 812: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.17018812894821167
    2. '):' → logprob: -1.9201881885528564
    3. ',' → logprob: -4.670187950134277
    4. ')' → logprob: -7.920187950134277
    5. '):
' → logprob: -9.295187950134277
    6. '   ' → logprob: -10.045187950134277
    7. '       ' → logprob: -10.420187950134277
    8. '):

' → logprob: -12.545187950134277
    9. ':' → logprob: -12.670187950134277
    10. '=None' → logprob: -12.795187950134277

Token 813: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.006896643433719873
    2. 'self' → logprob: -5.006896495819092
    3. ' self' → logprob: -9.00689697265625
    4. '   ' → logprob: -9.75689697265625
    5. '	self' → logprob: -15.00689697265625
    6. '	' → logprob: -16.00689697265625
    7. 'def' → logprob: -16.25689697265625
    8. '      ' → logprob: -16.88189697265625
    9. '(self' → logprob: -16.88189697265625
    10. '	   ' → logprob: -17.00689697265625

Token 814: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.0033357522916048765
    2. '       ' → logprob: -5.753335952758789
    3. ' self' → logprob: -8.753335952758789
    4. '	self' → logprob: -17.00333595275879
    5. '   ' → logprob: -17.12833595275879
    6. '(self' → logprob: -18.75333595275879
    7. '#' → logprob: -19.37833595275879
    8. 'super' → logprob: -19.37833595275879
    9. 'from' → logprob: -20.37833595275879
    10. ' ' → logprob: -20.75333595275879

Token 815: '.chunk' (ID: 96373)
  Prédit: '.chunk'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.chunk' → logprob: -0.0001342903997283429
    2. '.' → logprob: -9.250134468078613
    3. 'chunk' → logprob: -11.000134468078613
    4. ' .' → logprob: -11.500134468078613
    5. '.collection' → logprob: -12.750134468078613
    6. '.ch' → logprob: -13.125134468078613
    7. '.chapter' → logprob: -13.500134468078613
    8. '._' → logprob: -13.875134468078613
    9. '.weight' → logprob: -14.500134468078613
    10. '.segment' → logprob: -14.625134468078613

Token 816: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.10022111982107162
    2. ' =' → logprob: -2.3502211570739746
    3. '   ' → logprob: -11.975220680236816
    4. ':' → logprob: -12.475220680236816
    5. '=
' → logprob: -13.600220680236816
    6. '       ' → logprob: -13.850220680236816
    7. 's' → logprob: -13.975220680236816
    8. '=self' → logprob: -14.350220680236816
    9. ' =
' → logprob: -15.725220680236816
    10. ')' → logprob: -16.100221633911133

Token 817: ' chunk' (ID: 23958)
  Prédit: 'chunk'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'chunk' → logprob: -0.0024758970830589533
    2. ' chunk' → logprob: -6.002475738525391
    3. '(chunk' → logprob: -16.37747573852539
    4. 'ch' → logprob: -17.12747573852539
    5. '.chunk' → logprob: -18.62747573852539
    6. 'All' → logprob: -18.87747573852539
    7. 'Chunk' → logprob: -18.87747573852539
    8. '   ' → logprob: -19.75247573852539
    9. 'all' → logprob: -19.87747573852539
    10. 'copy' → logprob: -20.25247573852539

Token 818: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 819: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.04163367673754692
    2. 'def' → logprob: -3.6666336059570312
    3. '<|end|>' → logprob: -4.291633605957031
    4. ' def' → logprob: -7.416633605957031
    5. '       ' → logprob: -8.166633605957031
    6. '    
' → logprob: -8.541633605957031
    7. '
' → logprob: -9.041633605957031
    8. '<|end|>' → logprob: -9.166633605957031
    9. ')' → logprob: -9.416633605957031
    10. '	def' → logprob: -9.791633605957031

Token 820: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.0067492397502064705
    2. ' def' → logprob: -5.131749153137207
    3. '   ' → logprob: -7.131749153137207
    4. '	def' → logprob: -11.881749153137207
    5. '       ' → logprob: -12.256749153137207
    6. '
' → logprob: -12.381749153137207
    7. '@property' → logprob: -13.256749153137207
    8. '    
' → logprob: -14.131749153137207
    9. ' ' → logprob: -14.381749153137207
    10. '        
' → logprob: -14.506749153137207

Token 821: ' total' (ID: 3609)
  Prédit: 'collect'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'collect' → logprob: -0.4702436625957489
    2. 'total' → logprob: -2.0952436923980713
    3. ' collect' → logprob: -2.5952436923980713
    4. 'can' → logprob: -2.7202436923980713
    5. 'get' → logprob: -3.5952436923980713
    6. 'load' → logprob: -4.095243453979492
    7. ' total' → logprob: -4.095243453979492
    8. 'add' → logprob: -4.720243453979492
    9. '__' → logprob: -5.095243453979492
    10. ' __' → logprob: -5.220243453979492

Token 822: '_weight' (ID: 34711)
  Prédit: '_weight'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_weight' → logprob: -2.15310683415737e-05
    2. '_weights' → logprob: -11.500021934509277
    3. 'weight' → logprob: -12.250021934509277
    4. '_' → logprob: -13.500021934509277
    5. 'Weight' → logprob: -13.750021934509277
    6. '_w' → logprob: -13.875021934509277
    7. '_mass' → logprob: -14.125021934509277
    8. '_WEIGHT' → logprob: -14.250021934509277
    9. '_we' → logprob: -14.500021934509277
    10. '_quantity' → logprob: -15.250021934509277

Token 823: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.2522723376750946
    2. '()' → logprob: -1.502272367477417
    3. '(' → logprob: -8.127272605895996
    4. ' ()' → logprob: -11.502272605895996
    5. '()(' → logprob: -11.502272605895996
    6. '())' → logprob: -12.002272605895996
    7. '()`' → logprob: -12.377272605895996
    8. '():' → logprob: -12.377272605895996
    9. ' (' → logprob: -12.877272605895996
    10. '()
' → logprob: -13.377272605895996

Token 824: ')' (ID: 8)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.021731719374656677
    2. '())' → logprob: -4.146731853485107
    3. ')' → logprob: -5.271731853485107
    4. '():' → logprob: -9.02173137664795
    5. ' ()' → logprob: -9.39673137664795
    6. '(' → logprob: -9.52173137664795
    7. '()
' → logprob: -10.14673137664795
    8. ' )' → logprob: -10.14673137664795
    9. '(self' → logprob: -10.39673137664795
    10. '()`' → logprob: -10.52173137664795

Token 825: ' ->' (ID: 2747)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.056641317903995514
    2. '()' → logprob: -2.9316413402557373
    3. '(' → logprob: -6.431641101837158
    4. '   ' → logprob: -9.931641578674316
    5. '       ' → logprob: -10.306641578674316
    6. '():' → logprob: -10.806641578674316
    7. '():
' → logprob: -11.681641578674316
    8. '(
' → logprob: -12.056641578674316
    9. '()`' → logprob: -12.056641578674316
    10. '()(' → logprob: -12.181641578674316

Token 826: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.062441859394311905
    2. ' int' → logprob: -2.812441825866699
    3. 'self' → logprob: -7.812441825866699
    4. ' self' → logprob: -9.9374418258667
    5. 'All' → logprob: -11.1874418258667
    6. '(int' → logprob: -12.8124418258667
    7. '   ' → logprob: -13.1874418258667
    8. ')' → logprob: -14.5624418258667
    9. 'Weight' → logprob: -14.8124418258667
    10. ' ' → logprob: -14.9374418258667

Token 827: ':
' (ID: 734)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.04809168726205826
    2. '():' → logprob: -3.7980916500091553
    3. '()' → logprob: -4.673091888427734
    4. '       ' → logprob: -5.173091888427734
    5. '():
' → logprob: -5.173091888427734
    6. '(' → logprob: -5.798091888427734
    7. ':' → logprob: -7.548091888427734
    8. '   ' → logprob: -9.048091888427734
    9. '(
' → logprob: -9.298091888427734
    10. 'self' → logprob: -10.548091888427734

Token 828: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0032898937352001667
    2. 'return' → logprob: -5.753289699554443
    3. ' return' → logprob: -9.128290176391602
    4. '```' → logprob: -13.128290176391602
    5. 'self' → logprob: -14.128290176391602
    6. '
' → logprob: -15.628290176391602
    7. '	' → logprob: -16.0032901763916
    8. '{return' → logprob: -16.1282901763916
    9. '(self' → logprob: -16.6282901763916
    10. '#' → logprob: -16.8782901763916

Token 829: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.018693212419748306
    2. '       ' → logprob: -4.018693447113037
    3. ' return' → logprob: -7.518693447113037
    4. 'self' → logprob: -16.268693923950195
    5. '   ' → logprob: -16.768693923950195
    6. '```' → logprob: -16.768693923950195
    7. '	return' → logprob: -17.893693923950195
    8. '{return' → logprob: -17.893693923950195
    9. 'result' → logprob: -18.268693923950195
    10. '#' → logprob: -18.768693923950195

Token 830: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.048587486147880554
    2. ' self' → logprob: -3.0485875606536865
    3. '	self' → logprob: -17.423587799072266
    4. '(self' → logprob: -17.673587799072266
    5. '   ' → logprob: -17.798587799072266
    6. '       ' → logprob: -18.298587799072266
    7. '[self' → logprob: -20.923587799072266
    8. ' ' → logprob: -21.423587799072266
    9. ' ' → logprob: -22.173587799072266
    10. '=self' → logprob: -22.423587799072266

Token 831: '.chunk' (ID: 96373)
  Prédit: '.chunk'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.chunk' → logprob: -2.2723104848410003e-05
    2. 'chunk' → logprob: -10.750022888183594
    3. '.' → logprob: -13.875022888183594
    4. ' .' → logprob: -15.500022888183594
    5. '_chunk' → logprob: -17.500022888183594
    6. '(chunk' → logprob: -17.750022888183594
    7. '.ch' → logprob: -17.875022888183594
    8. ' chunk' → logprob: -17.875022888183594
    9. '.chain' → logprob: -18.250022888183594
    10. '.block' → logprob: -18.875022888183594

Token 832: '.total' (ID: 23374)
  Prédit: '.total'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.total' → logprob: -0.4829666018486023
    2. '.weight' → logprob: -0.9829666018486023
    3. '.' → logprob: -4.982966423034668
    4. '.to' → logprob: -6.482966423034668
    5. '.chunk' → logprob: -8.857966423034668
    6. '.weights' → logprob: -8.857966423034668
    7. ' .' → logprob: -10.107966423034668
    8. '.size' → logprob: -10.357966423034668
    9. '.
' → logprob: -10.732966423034668
    10. '.amount' → logprob: -11.232966423034668

Token 833: '_weight' (ID: 34711)
  Prédit: '_weight'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_weight' → logprob: -1.1472419600977446e-06
    2. 'weight' → logprob: -13.750000953674316
    3. '_we' → logprob: -17.125001907348633
    4. '_weights' → logprob: -17.750001907348633
    5. '()' → logprob: -18.375001907348633
    6. '_' → logprob: -19.000001907348633
    7. '_WEIGHT' → logprob: -19.125001907348633
    8. '_w' → logprob: -19.375001907348633
    9. ' _' → logprob: -20.000001907348633
    10. ' weight' → logprob: -20.375001907348633

Token 834: '()

' (ID: 5874)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.015349620953202248
    2. '<|end|>' → logprob: -4.265349388122559
    3. '()+' → logprob: -7.265349388122559
    4. '()
' → logprob: -9.015349388122559
    5. '<|end|>' → logprob: -9.015349388122559
    6. '+' → logprob: -9.140349388122559
    7. '()*' → logprob: -9.640349388122559
    8. '()

' → logprob: -11.015349388122559
    9. '*' → logprob: -11.390349388122559
    10. '```' → logprob: -11.890349388122559

Token 835: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8406190872192383
    2. 'def' → logprob: -0.9656190872192383
    3. 'class' → logprob: -1.7156190872192383
    4. '<|end|>' → logprob: -4.965619087219238
    5. ' def' → logprob: -8.215619087219238
    6. '
' → logprob: -9.090619087219238
    7. '<|end|>' → logprob: -9.090619087219238
    8. 'from' → logprob: -9.340619087219238
    9. '.' → logprob: -9.840619087219238
    10. '    
' → logprob: -9.965619087219238

Token 836: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.005264118313789368
    2. '   ' → logprob: -5.3802642822265625
    3. '<|end|>' → logprob: -8.005264282226562
    4. ' def' → logprob: -8.380264282226562
    5. '```' → logprob: -10.630264282226562
    6. 'class' → logprob: -10.880264282226562
    7. '@property' → logprob: -11.505264282226562
    8. '	def' → logprob: -12.255264282226562
    9. ')' → logprob: -12.255264282226562
    10. '#' → logprob: -12.380264282226562

Token 837: ' __' (ID: 2516)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.10102850943803787
    2. 'collect' → logprob: -3.3510284423828125
    3. 'add' → logprob: -4.4760284423828125
    4. ' __' → logprob: -4.4760284423828125
    5. 'load' → logprob: -4.6010284423828125
    6. 'can' → logprob: -4.9760284423828125
    7. 'move' → logprob: -4.9760284423828125
    8. 'def' → logprob: -5.1010284423828125
    9. 'is' → logprob: -6.7260284423828125
    10. 'set' → logprob: -6.7260284423828125

Token 838: 'repr' (ID: 67002)
  Prédit: 'repr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'repr' → logprob: -0.029767030850052834
    2. 'eq' → logprob: -3.5297670364379883
    3. 'lt' → logprob: -11.654767036437988
    4. 'init' → logprob: -12.029767036437988
    5. 'str' → logprob: -13.654767036437988
    6. 'hash' → logprob: -14.404767036437988
    7. 'rep' → logprob: -17.029766082763672
    8. 'add' → logprob: -17.529766082763672
    9. '_repr' → logprob: -18.904766082763672
    10. 'gt' → logprob: -19.029766082763672

Token 839: '__(' (ID: 8241)
  Prédit: '__('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.00323867448605597
    2. '__' → logprob: -5.753238677978516
    3. '__(
' → logprob: -9.878238677978516
    4. '__('' → logprob: -12.253238677978516
    5. '(self' → logprob: -13.003238677978516
    6. '__((' → logprob: -13.378238677978516
    7. '__("' → logprob: -14.253238677978516
    8. '__(*' → logprob: -16.253238677978516
    9. '__[' → logprob: -16.503238677978516
    10. '(' → logprob: -16.753238677978516

Token 840: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -2.4153549020411447e-05
    2. ')' → logprob: -10.75002384185791
    3. ' self' → logprob: -13.50002384185791
    4. '(self' → logprob: -14.87502384185791
    5. '):
' → logprob: -15.25002384185791
    6. 'f' → logprob: -15.25002384185791
    7. '       ' → logprob: -16.375024795532227
    8. '
' → logprob: -16.625024795532227
    9. '):' → logprob: -16.875024795532227
    10. ')
' → logprob: -17.000024795532227

Token 841: '):
' (ID: 1883)
  Prédit: '__('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.13961857557296753
    2. '__' → logprob: -2.1396186351776123
    3. '__(
' → logprob: -5.139618396759033
    4. '(self' → logprob: -5.514618396759033
    5. '__((' → logprob: -7.264618396759033
    6. '__)' → logprob: -7.889618396759033
    7. ')' → logprob: -7.889618396759033
    8. ')(' → logprob: -8.014618873596191
    9. '__('' → logprob: -8.514618873596191
    10. 'self' → logprob: -8.514618873596191

Token 842: '       ' (ID: 309)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.03549044206738472
    2. '       ' → logprob: -3.5354905128479004
    3. ' f' → logprob: -5.2854905128479
    4. 'self' → logprob: -7.4104905128479
    5. 'return' → logprob: -10.160490036010742
    6. '   ' → logprob: -11.660490036010742
    7. '           ' → logprob: -12.285490036010742
    8. ' self' → logprob: -14.285490036010742
    9. 'def' → logprob: -14.410490036010742
    10. ' return' → logprob: -14.535490036010742

Token 843: ' return' (ID: 622)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.0008659643935970962
    2. ' f' → logprob: -7.250865936279297
    3. '       ' → logprob: -9.250865936279297
    4. 'return' (adapté à ' return') → logprob: -9.750865936279297
    5. '   ' → logprob: -13.750865936279297
    6. '           ' → logprob: -14.500865936279297
    7. ' return' → logprob: -16.500865936279297
    8. '     ' → logprob: -17.375865936279297
    9. '      ' → logprob: -17.500865936279297
    10. '    ' → logprob: -18.125865936279297

Token 844: ' f' (ID: 285)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.3132617771625519
    2. ' f' → logprob: -1.3132617473602295
    3. '   ' → logprob: -17.313261032104492
    4. '       ' → logprob: -17.688261032104492
    5. '(f' → logprob: -18.063261032104492
    6. '	f' → logprob: -18.313261032104492
    7. '           ' → logprob: -18.813261032104492
    8. 'repr' → logprob: -20.063261032104492
    9. 'F' → logprob: -20.188261032104492
    10. ''f' → logprob: -20.688261032104492

Token 845: '"' (ID: 1)
  Prédit: 'Collection'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Collection' → logprob: -0.05583828315138817
    2. 'f' → logprob: -2.9308383464813232
    3. ' Collection' → logprob: -7.555838108062744
    4. '"' → logprob: -8.430838584899902
    5. ' f' → logprob: -8.930838584899902
    6. '(Collection' → logprob: -10.555838584899902
    7. '	Collection' → logprob: -10.805838584899902
    8. 'Collections' → logprob: -11.430838584899902
    9. '.Collection' → logprob: -12.180838584899902
    10. 'Collector' → logprob: -12.430838584899902

Token 846: 'Collection' (ID: 4160)
  Prédit: 'Collection'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Collection' → logprob: -0.0002646735229063779
    2. 'f' → logprob: -8.250265121459961
    3. '{' → logprob: -13.375265121459961
    4. '"' → logprob: -13.750265121459961
    5. ' Collection' → logprob: -15.500265121459961
    6. 'self' → logprob: -15.500265121459961
    7. ''' → logprob: -15.625265121459961
    8. 'All' → logprob: -16.00026512145996
    9. 'collection' → logprob: -17.12526512145996
    10. 'Vehicle' → logprob: -17.25026512145996

Token 847: 'Vehicle' (ID: 31586)
  Prédit: 'Vehicle'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Vehicle' → logprob: 0.0
    2. ' Vehicle' → logprob: -17.0
    3. '
' → logprob: -18.875
    4. 'Ve' → logprob: -19.375
    5. '_vehicle' → logprob: -20.0
    6. ' vehicle' → logprob: -20.625
    7. 'vehicle' → logprob: -20.75
    8. 'Veh' → logprob: -20.75
    9. '.Vehicle' → logprob: -21.375
    10. 'ehicle' → logprob: -21.625

Token 848: '({' (ID: 3972)
  Prédit: '(weight'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(weight' → logprob: -0.3718097507953644
    2. '(chunk' → logprob: -1.371809720993042
    3. '({' → logprob: -2.871809720993042
    4. '(' → logprob: -9.371809959411621
    5. '(self' → logprob: -10.121809959411621
    6. '(collection' → logprob: -10.246809959411621
    7. '(ch' → logprob: -10.746809959411621
    8. '{' → logprob: -10.746809959411621
    9. 'All' → logprob: -10.871809959411621
    10. 'weight' → logprob: -11.621809959411621

Token 849: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -3.130576806142926e-05
    2. 'repr' → logprob: -10.375031471252441
    3. ' self' → logprob: -17.000030517578125
    4. '{' → logprob: -17.375030517578125
    5. '(self' → logprob: -19.125030517578125
    6. 'str' → logprob: -20.250030517578125
    7. '	self' → logprob: -21.500030517578125
    8. '`' → logprob: -21.750030517578125
    9. '[self' → logprob: -22.125030517578125
    10. '*self' → logprob: -22.375030517578125

Token 850: '.chunk' (ID: 96373)
  Prédit: '.chunk'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.chunk' → logprob: -1.6240566083070007e-06
    2. '.' → logprob: -14.375001907348633
    3. 'chunk' → logprob: -14.875001907348633
    4. '}.' → logprob: -15.125001907348633
    5. ' .' → logprob: -15.375001907348633
    6. '.ch' → logprob: -16.750001907348633
    7. '.chain' → logprob: -17.875001907348633
    8. '.chapter' → logprob: -18.250001907348633
    9. ').' → logprob: -18.375001907348633
    10. '.code' → logprob: -18.625001907348633

Token 851: '})' (ID: 9263)
  Prédit: '})'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '})' → logprob: -0.21440215408802032
    2. ')' → logprob: -1.964402198791504
    3. ')"' → logprob: -2.964402198791504
    4. ')}' → logprob: -6.839402198791504
    5. '))' → logprob: -9.964402198791504
    6. ')")' → logprob: -12.214402198791504
    7. ')">' → logprob: -12.339402198791504
    8. ')`' → logprob: -12.464402198791504
    9. '"})' → logprob: -12.839402198791504
    10. '>)' → logprob: -13.339402198791504

Token 852: '"

' (ID: 2678)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.3308745324611664
    2. 'class' → logprob: -1.4558745622634888
    3. '<|end|>' → logprob: -3.455874443054199
    4. '   ' → logprob: -4.580874443054199
    5. '

' → logprob: -5.455874443054199
    6. '<|end|>' → logprob: -6.830874443054199
    7. '    
' → logprob: -7.205874443054199
    8. ' class' → logprob: -9.3308744430542
    9. '+
' → logprob: -9.8308744430542
    10. '```' → logprob: -10.0808744430542

Token 853: 'class' (ID: 1444)
  Prédit: 'class'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'class' → logprob: -0.004352505784481764
    2. 'def' → logprob: -5.504352569580078
    3. '
' → logprob: -8.504352569580078
    4. '   ' → logprob: -10.129352569580078
    5. ' class' → logprob: -11.004352569580078
    6. 'from' → logprob: -11.879352569580078
    7. 'import' → logprob: -12.379352569580078
    8. '    
' → logprob: -13.754352569580078
    9. '

' → logprob: -14.379352569580078
    10. '#' → logprob: -14.629352569580078

Token 854: ' Alloy' (ID: 115477)
  Prédit: 'All'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'All' → logprob: -0.4609609544277191
    2. 'Inventory' → logprob: -2.335960865020752
    3. 'Collection' → logprob: -2.585960865020752
    4. 'Vehicle' → logprob: -3.960960865020752
    5. 'Solution' → logprob: -4.085960865020752
    6. 'Metal' → logprob: -4.335960865020752
    7. 'Combined' → logprob: -4.710960865020752
    8. 'Weight' → logprob: -4.835960865020752
    9. 'Composite' → logprob: -4.835960865020752
    10. 'Recipe' → logprob: -4.960960865020752

Token 855: 'Re' (ID: 720)
  Prédit: 'Batch'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Batch' → logprob: -1.2883254289627075
    2. 'Collection' → logprob: -1.4133254289627075
    3. 'Chunk' → logprob: -1.5383254289627075
    4. 'Set' → logprob: -3.038325309753418
    5. 'Composition' → logprob: -3.163325309753418
    6. 'Collector' → logprob: -3.913325309753418
    7. 'Aggregator' → logprob: -4.038325309753418
    8. 'Pool' → logprob: -4.288325309753418
    9. 'Combination' → logprob: -4.413325309753418
    10. 'Accumulator' → logprob: -4.413325309753418

Token 856: 'cycling' (ID: 72499)
  Prédit: 'fin'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'fin' → logprob: -0.41088637709617615
    2. 'pository' → logprob: -2.035886287689209
    3. 'cycler' → logprob: -2.410886287689209
    4. 'g' → logprob: -3.410886287689209
    5. 'f' → logprob: -4.035886287689209
    6. 'constructor' → logprob: -4.410886287689209
    7. 's' → logprob: -4.785886287689209
    8. 'solver' → logprob: -5.035886287689209
    9. 'corder' → logprob: -5.160886287689209
    10. 'c' → logprob: -5.160886287689209

Token 857: 'System' (ID: 3320)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.27217525243759155
    2. 'Processor' → logprob: -2.0221753120422363
    3. ':
' → logprob: -2.3971753120422363
    4. 'Manager' → logprob: -5.022175312042236
    5. 'System' → logprob: -5.147175312042236
    6. 'Facility' → logprob: -7.147175312042236
    7. 'Factory' → logprob: -8.022174835205078
    8. 'Process' → logprob: -8.272174835205078
    9. 'Handler' → logprob: -8.522174835205078
    10. 'Optimizer' → logprob: -8.647174835205078

Token 858: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.00045902872807346284
    2. ':
' → logprob: -7.75045919418335
    3. '<|end|>' → logprob: -11.250458717346191
    4. '(' → logprob: -12.500458717346191
    5. '():' → logprob: -12.750458717346191
    6. '):' → logprob: -13.000458717346191
    7. ':def' → logprob: -13.250458717346191
    8. '(object' → logprob: -14.125458717346191
    9. '>:' → logprob: -14.375458717346191
    10. ' :' → logprob: -14.375458717346191

Token 859: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00040767391328699887
    2. 'class' → logprob: -9.125407218933105
    3. 'def' → logprob: -9.250407218933105
    4. ':' → logprob: -9.875407218933105
    5. ' def' → logprob: -10.125407218933105
    6. ':
' → logprob: -10.250407218933105
    7. '    
' → logprob: -10.375407218933105
    8. '
' → logprob: -11.125407218933105
    9. '```' → logprob: -11.375407218933105
    10. '    ' → logprob: -12.500407218933105

Token 860: ' """
' (ID: 7037)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.777000904083252
    2. 'def' → logprob: -0.777000904083252
    3. ' def' → logprob: -2.527000904083252
    4. 'class' → logprob: -7.652000904083252
    5. '"""
' (adapté à ' """
') → logprob: -11.027000427246094
    6. '
' → logprob: -11.027000427246094
    7. '```' → logprob: -11.402000427246094
    8. '	def' → logprob: -12.027000427246094
    9. ' ' → logprob: -12.777000427246094
    10. '``' → logprob: -13.402000427246094

Token 861: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.056754063814878464
    2. 'class' → logprob: -3.6817541122436523
    3. 'def' → logprob: -4.181754112243652
    4. '"""
' → logprob: -4.306754112243652
    5. ' def' → logprob: -7.181754112243652
    6. ' """
' → logprob: -9.056754112243652
    7. '  ' → logprob: -9.181754112243652
    8. '    ' → logprob: -9.306754112243652
    9. '"""' → logprob: -9.806754112243652
    10. '```' → logprob: -10.056754112243652

Token 862: ' Handles' (ID: 47620)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.1974642127752304
    2. ' def' → logprob: -1.9474642276763916
    3. 'class' → logprob: -3.6974642276763916
    4. '   ' → logprob: -4.4474639892578125
    5. ' """
' → logprob: -10.697463989257812
    6. '"""
' → logprob: -10.697463989257812
    7. '
' → logprob: -12.072463989257812
    8. '```' → logprob: -12.322463989257812
    9. ' class' → logprob: -13.322463989257812
    10. '    ' → logprob: -13.572463989257812

Token 863: ' collecting' (ID: 39995)
  Prédit: ' collection'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' collection' → logprob: -0.7066271901130676
    2. ' the' → logprob: -1.5816271305084229
    3. ' alloy' → logprob: -2.331627130508423
    4. ' collections' → logprob: -2.956627130508423
    5. 'the' → logprob: -3.456627130508423
    6. 'collection' → logprob: -3.456627130508423
    7. 'all' → logprob: -3.831627130508423
    8. 'collections' → logprob: -3.956627130508423
    9. ' all' → logprob: -4.956627368927002
    10. 'def' → logprob: -4.956627368927002

Token 864: ' alloy' (ID: 59403)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.32887569069862366
    2. ',' → logprob: -1.8288756608963013
    3. 'and' → logprob: -2.578875780105591
    4. '   ' → logprob: -3.703875780105591
    5. ',
' → logprob: -4.953875541687012
    6. ' chunks' → logprob: -5.703875541687012
    7. ' alloys' → logprob: -6.453875541687012
    8. 'chunks' → logprob: -6.578875541687012
    9. ' ,' → logprob: -7.078875541687012
    10. 'vehicles' → logprob: -7.453875541687012

Token 865: ' chunks' (ID: 53440)
  Prédit: 'chunks'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'chunks' → logprob: -0.6358416676521301
    2. ' chunks' → logprob: -1.5108416080474854
    3. '_chunks' → logprob: -1.5108416080474854
    4. 's' → logprob: -4.0108418464660645
    5. '   ' → logprob: -4.7608418464660645
    6. 'vehicles' → logprob: -7.0108418464660645
    7. '_chunk' → logprob: -7.3858418464660645
    8. 'Chunks' → logprob: -8.635841369628906
    9. 'chunk' → logprob: -8.760841369628906
    10. ' vehicles' → logprob: -9.010841369628906

Token 866: ' from' (ID: 591)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.31918391585350037
    2. '   ' → logprob: -2.194183826446533
    3. ',' → logprob: -2.569183826446533
    4. 'and' → logprob: -2.569183826446533
    5. 'from' → logprob: -5.319183826446533
    6. ' from' → logprob: -7.069183826446533
    7. ':' → logprob: -7.069183826446533
    8. '):
' → logprob: -7.319183826446533
    9. ':
' → logprob: -7.944183826446533
    10. ',
' → logprob: -7.944183826446533

Token 867: ' vehicles' (ID: 16511)
  Prédit: 'var'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'var' → logprob: -0.6417391896247864
    2. 'vehicles' → logprob: -1.5167391300201416
    3. 'multiple' → logprob: -1.7667391300201416
    4. 'collection' → logprob: -3.6417391300201416
    5. ' various' → logprob: -4.141739368438721
    6. ' multiple' → logprob: -4.391739368438721
    7. 'different' → logprob: -4.641739368438721
    8. ' collection' → logprob: -4.766739368438721
    9. ' vehicles' → logprob: -5.141739368438721
    10. ' different' → logprob: -6.266739368438721

Token 868: ' and' (ID: 326)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0974060669541359
    2. ' and' → logprob: -2.5974061489105225
    3. ',' → logprob: -4.347405910491943
    4. 'and' → logprob: -5.347405910491943
    5. '.' → logprob: -8.222406387329102
    6. '
' → logprob: -8.722406387329102
    7. ',
' → logprob: -9.222406387329102
    8. '.
' → logprob: -10.347406387329102
    9. '    
' → logprob: -10.472406387329102
    10. ':' → logprob: -10.597406387329102

Token 869: ' recom' (ID: 19119)
  Prédit: 'aggreg'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'aggreg' → logprob: -1.1737748384475708
    2. 're' → logprob: -1.7987748384475708
    3. 'man' → logprob: -1.9237748384475708
    4. 'processing' → logprob: -2.2987747192382812
    5. 'comb' → logprob: -2.2987747192382812
    6. ' aggreg' → logprob: -2.6737747192382812
    7. 'calcul' → logprob: -3.6737747192382812
    8. 'mer' → logprob: -4.423774719238281
    9. ' processing' → logprob: -4.548774719238281
    10. 'tracking' → logprob: -4.548774719238281

Token 870: 'b' (ID: 65)
  Prédit: 'b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.00010092071170220152
    2. 'posing' → logprob: -9.625101089477539
    3. 'bine' → logprob: -11.125101089477539
    4. 'put' → logprob: -11.625101089477539
    5. 'bing' → logprob: -12.250101089477539
    6. 'bin' → logprob: -12.500101089477539
    7. 'm' → logprob: -13.625101089477539
    8. 'p' → logprob: -14.625101089477539
    9. 'bination' → logprob: -14.750101089477539
    10. 'posit' → logprob: -15.750101089477539

Token 871: 'ining' (ID: 7276)
  Prédit: 'ining'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ining' → logprob: -0.0005027544684708118
    2. 'ine' → logprob: -7.750502586364746
    3. 'ines' → logprob: -10.750502586364746
    4. 'ing' → logprob: -11.375502586364746
    5. 'in' → logprob: -11.750502586364746
    6. '
' → logprob: -11.750502586364746
    7. '

' → logprob: -12.625502586364746
    8. '   ' → logprob: -12.875502586364746
    9. 'inating' → logprob: -13.125502586364746
    10. '```' → logprob: -13.125502586364746

Token 872: ' them' (ID: 1373)
  Prédit: 'them'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'them' → logprob: -0.20367008447647095
    2. ' them' → logprob: -1.7036700248718262
    3. 'chunks' → logprob: -6.703670024871826
    4. 'the' → logprob: -8.203670501708984
    5. 'and' → logprob: -8.703670501708984
    6. 'all' → logprob: -8.828670501708984
    7. ' and' → logprob: -8.828670501708984
    8. ' chunks' → logprob: -9.078670501708984
    9. ' the' → logprob: -10.328670501708984
    10. ',' → logprob: -10.828670501708984

Token 873: '.
' (ID: 558)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.028758101165294647
    2. ' into' → logprob: -3.9037580490112305
    3. ',' → logprob: -6.1537580490112305
    4. ' to' → logprob: -6.1537580490112305
    5. ' in' → logprob: -7.1537580490112305
    6. '```' → logprob: -7.1537580490112305
    7. 'into' → logprob: -7.2787580490112305
    8. '.' → logprob: -7.6537580490112305
    9. ' as' → logprob: -8.27875804901123
    10. ' and' → logprob: -8.77875804901123

Token 874: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -8.995397365652025e-05
    2. '
' → logprob: -9.500089645385742
    3. '    
' → logprob: -11.500089645385742
    4. 'def' → logprob: -13.000089645385742
    5. '```' → logprob: -13.125089645385742
    6. 'class' → logprob: -14.750089645385742
    7. ' def' → logprob: -16.125089645385742
    8. ')' → logprob: -16.500089645385742
    9. ')
' → logprob: -16.875089645385742
    10. '"""
' → logprob: -17.375089645385742

Token 875: ' """

' (ID: 28800)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0001483564410591498
    2. 'def' → logprob: -9.87514877319336
    3. ' def' → logprob: -10.62514877319336
    4. '    
' → logprob: -10.62514877319336
    5. '```' → logprob: -10.75014877319336
    6. '
' → logprob: -11.00014877319336
    7. 'class' → logprob: -12.37514877319336
    8. '    ' → logprob: -12.50014877319336
    9. ')' → logprob: -14.50014877319336
    10. '  ' → logprob: -14.75014877319336

Token 876: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.009512756951153278
    2. ' def' → logprob: -5.009512901306152
    3. 'def' → logprob: -5.884512901306152
    4. 'class' → logprob: -11.884512901306152
    5. '	def' → logprob: -13.759512901306152
    6. '    ' → logprob: -14.009512901306152
    7. '   ' → logprob: -14.259512901306152
    8. 'indent' → logprob: -14.384512901306152
    9. '```' → logprob: -14.759512901306152
    10. ' indent' → logprob: -15.134512901306152

Token 877: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.0037292989436537027
    2. '   ' → logprob: -5.753729343414307
    3. ' def' → logprob: -7.503729343414307
    4. 'class' → logprob: -14.753728866577148
    5. '	def' → logprob: -17.12872886657715
    6. ' ' → logprob: -18.50372886657715
    7. '_def' → logprob: -18.75372886657715
    8. '```' → logprob: -19.12872886657715
    9. '  ' → logprob: -19.25372886657715
    10. '__' → logprob: -19.87872886657715

Token 878: ' __' (ID: 2516)
  Prédit: 'init'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: -0.5945780873298645
    2. '__' → logprob: -0.8445780873298645
    3. 'def' → logprob: -4.094578266143799
    4. ' __' → logprob: -6.844578266143799
    5. '_init' → logprob: -7.344578266143799
    6. 'collect' → logprob: -10.21957778930664
    7. '___' → logprob: -10.71957778930664
    8. ' def' → logprob: -11.96957778930664
    9. '_def' → logprob: -12.59457778930664
    10. 'property' → logprob: -12.59457778930664

Token 879: 'init' (ID: 3287)
  Prédit: 'init'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: 0.0
    2. ' init' → logprob: -19.75
    3. '
' → logprob: -21.25
    4. '_init' → logprob: -21.375
    5. '```' → logprob: -21.375
    6. '(init' → logprob: -21.875
    7. '...' → logprob: -22.75
    8. '.init' → logprob: -22.75
    9. '	init' → logprob: -23.0
    10. 'def' → logprob: -23.25

Token 880: '__(' (ID: 8241)
  Prédit: '__('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.0002820736262947321
    2. '__(
' → logprob: -8.250282287597656
    3. '(self' → logprob: -11.375282287597656
    4. '__' → logprob: -11.875282287597656
    5. 'self' → logprob: -14.125282287597656
    6. '(' → logprob: -14.625282287597656
    7. '_(' → logprob: -14.750282287597656
    8. '
' → logprob: -15.375282287597656
    9. '   ' → logprob: -15.375282287597656
    10. '<>(' → logprob: -16.250282287597656

Token 881: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -4.4849443838757e-06
    2. ')' → logprob: -13.375004768371582
    3. ' self' → logprob: -13.375004768371582
    4. '):
' → logprob: -14.000004768371582
    5. '
' → logprob: -15.000004768371582
    6. '       ' → logprob: -16.625003814697266
    7. '   ' → logprob: -17.375003814697266
    8. ')
' → logprob: -17.625003814697266
    9. ')(' → logprob: -18.375003814697266
    10. '{' → logprob: -18.750003814697266

Token 882: '):
' (ID: 1883)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.030230578035116196
    2. ',' → logprob: -4.280230522155762
    3. '):
' → logprob: -4.655230522155762
    4. ')' → logprob: -6.280230522155762
    5. '
' → logprob: -6.405230522155762
    6. '__(' → logprob: -6.780230522155762
    7. '(self' → logprob: -7.780230522155762
    8. '   ' → logprob: -7.780230522155762
    9. '):' → logprob: -8.155230522155762
    10. ' self' → logprob: -8.530230522155762

Token 883: '       ' (ID: 309)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.00021509946964215487
    2. '       ' → logprob: -8.500215530395508
    3. '):
' → logprob: -12.000215530395508
    4. ' self' → logprob: -12.500215530395508
    5. '   ' → logprob: -13.750215530395508
    6. '
' → logprob: -15.000215530395508
    7. ')' → logprob: -16.125215530395508
    8. '(self' → logprob: -17.000215530395508
    9. '	self' → logprob: -17.250215530395508
    10. ')
' → logprob: -17.375215530395508

Token 884: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -5.955703818472102e-05
    2. '       ' → logprob: -9.750059127807617
    3. ' self' → logprob: -13.750059127807617
    4. '#' → logprob: -16.625059127807617
    5. '   ' → logprob: -18.500059127807617
    6. '	self' → logprob: -19.750059127807617
    7. '(self' → logprob: -21.500059127807617
    8. 'from' → logprob: -22.500059127807617
    9. 'default' → logprob: -22.500059127807617
    10. '           ' → logprob: -22.750059127807617

Token 885: '.' (ID: 13)
  Prédit: '._'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '._' → logprob: -0.9561759829521179
    2. '.ch' → logprob: -0.9561759829521179
    3. '.' → logprob: -2.3311760425567627
    4. '.col' → logprob: -3.0811760425567627
    5. '.collection' → logprob: -3.0811760425567627
    6. '.vehicle' → logprob: -5.081175804138184
    7. '.collections' → logprob: -5.331175804138184
    8. ' .' → logprob: -5.581175804138184
    9. '.all' → logprob: -5.581175804138184
    10. '.b' → logprob: -5.581175804138184

Token 886: 'vehicles' (ID: 124920)
  Prédit: 'chunks'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'chunks' → logprob: -0.49190598726272583
    2. 'col' → logprob: -1.616905927658081
    3. 'collection' → logprob: -2.366905927658081
    4. 'collections' → logprob: -3.491905927658081
    5. 'storage' → logprob: -3.741905927658081
    6. 'all' → logprob: -4.11690616607666
    7. 'inventory' → logprob: -4.36690616607666
    8. 'vehicles' → logprob: -5.49190616607666
    9. 'b' → logprob: -5.99190616607666
    10. 'data' → logprob: -6.24190616607666

Token 887: ':' (ID: 25)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.6802822947502136
    2. '=' → logprob: -1.1802823543548584
    3. ':' → logprob: -1.6802823543548584
    4. ' :' → logprob: -11.680282592773438
    5. '=[]' → logprob: -12.805282592773438
    6. ' ' → logprob: -14.430282592773438
    7. '   ' → logprob: -15.180282592773438
    8. ':list' → logprob: -16.305282592773438
    9. '  ' → logprob: -16.430282592773438
    10. ')' → logprob: -16.680282592773438

Token 888: ' List' (ID: 2655)
  Prédit: 'List'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'List' → logprob: -0.047245606780052185
    2. 'Dict' → logprob: -3.172245502471924
    3. 'default' → logprob: -5.922245502471924
    4. ' List' → logprob: -6.672245502471924
    5. 'Default' → logprob: -9.547245979309082
    6. 'list' → logprob: -9.797245979309082
    7. 'dict' → logprob: -9.797245979309082
    8. ' Dict' → logprob: -10.422245979309082
    9. 'set' → logprob: -10.547245979309082
    10. '[List' → logprob: -10.672245979309082

Token 889: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -4.008129963040119e-06
    2. ' =' → logprob: -13.125003814697266
    3. '[List' → logprob: -14.000003814697266
    4. '=' → logprob: -14.500003814697266
    5. '['' → logprob: -15.750003814697266
    6. '[...]' → logprob: -16.000003814697266
    7. '[
' → logprob: -16.000003814697266
    8. ']' → logprob: -17.000003814697266
    9. '[int' → logprob: -17.125003814697266
    10. ' [' → logprob: -17.375003814697266

Token 890: 'Collection' (ID: 4160)
  Prédit: 'Collection'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Collection' → logprob: 0.0
    2. 'All' → logprob: -18.875
    3. '	Collection' → logprob: -18.875
    4. '[' → logprob: -19.25
    5. ' Collection' → logprob: -19.375
    6. ']' → logprob: -21.875
    7. ''' → logprob: -22.125
    8. '`' → logprob: -22.375
    9. 'Collect' → logprob: -22.75
    10. '   ' → logprob: -22.875

Token 891: 'Vehicle' (ID: 31586)
  Prédit: 'Vehicle'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Vehicle' → logprob: -3.5716304410016164e-05
    2. '[' → logprob: -10.250035285949707
    3. ' Vehicle' → logprob: -16.250036239624023
    4. ']' → logprob: -16.875036239624023
    5. '_vehicle' → logprob: -17.125036239624023
    6. '[
' → logprob: -17.250036239624023
    7. 'Vehicles' → logprob: -17.250036239624023
    8. '[int' → logprob: -17.500036239624023
    9. 'vehicle' → logprob: -17.625036239624023
    10. '<' → logprob: -18.375036239624023

Token 892: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -1.7120533811976202e-05
    2. ']=' → logprob: -11.500017166137695
    3. ')' → logprob: -12.125017166137695
    4. '']' → logprob: -14.500017166137695
    5. '[' → logprob: -14.875017166137695
    6. '=' → logprob: -15.000017166137695
    7. '`]' → logprob: -15.875017166137695
    8. '"]' → logprob: -16.500017166137695
    9. '()]' → logprob: -16.875017166137695
    10. ' ]' → logprob: -17.125017166137695

Token 893: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2520061731338501
    2. '=' → logprob: -1.50200617313385
    3. '=[]' → logprob: -9.752006530761719
    4. '[]' → logprob: -11.752006530761719
    5. '<|end|>' → logprob: -12.377006530761719
    6. '       ' → logprob: -13.127006530761719
    7. '   ' → logprob: -13.877006530761719
    8. ']' → logprob: -13.877006530761719
    9. '=[]
' → logprob: -14.127006530761719
    10. '[:]' → logprob: -14.502006530761719

Token 894: ' []

' (ID: 32833)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -1.1398757123970427e-05
    2. '[]
' → logprob: -11.750011444091797
    3. ' []' → logprob: -12.750011444091797
    4. '[]

' → logprob: -14.500011444091797
    5. 'list' → logprob: -16.375011444091797
    6. '[' → logprob: -17.375011444091797
    7. '[]}' → logprob: -17.500011444091797
    8. '[]"' → logprob: -17.750011444091797
    9. '[])' → logprob: -17.875011444091797
    10. '[],' → logprob: -19.625011444091797

Token 895: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0074261948466300964
    2. '    
' → logprob: -5.6324262619018555
    3. 'def' → logprob: -5.8824262619018555
    4. '
' → logprob: -7.3824262619018555
    5. '```' → logprob: -8.132426261901855
    6. ' def' → logprob: -9.882426261901855
    7. '        
' → logprob: -10.507426261901855
    8. '<|end|>' → logprob: -11.632426261901855
    9. ' 
' → logprob: -11.882426261901855
    10. '       ' → logprob: -12.257426261901855

Token 896: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.005357075482606888
    2. ' def' → logprob: -5.255357265472412
    3. '   ' → logprob: -9.005356788635254
    4. '
' → logprob: -15.255356788635254
    5. '    
' → logprob: -16.25535774230957
    6. '	def' → logprob: -16.50535774230957
    7. '```' → logprob: -16.63035774230957
    8. '        
' → logprob: -19.75535774230957
    9. ' ' → logprob: -20.13035774230957
    10. '

' → logprob: -20.25535774230957

Token 897: ' add' (ID: 1147)
  Prédit: 'add'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'add' → logprob: -0.06445782631635666
    2. ' add' → logprob: -2.814457893371582
    3. 'collect' → logprob: -6.064457893371582
    4. 'register' → logprob: -9.064457893371582
    5. ' collect' → logprob: -10.064457893371582
    6. 'append' → logprob: -13.189457893371582
    7. ' register' → logprob: -13.439457893371582
    8. '_add' → logprob: -15.064457893371582
    9. 'receive' → logprob: -15.189457893371582
    10. 'submit' → logprob: -15.564457893371582

Token 898: '_vehicle' (ID: 150413)
  Prédit: '_vehicle'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_vehicle' → logprob: -0.00042102107545360923
    2. '_' → logprob: -8.000420570373535
    3. '(self' → logprob: -9.875420570373535
    4. '_collection' → logprob: -10.375420570373535
    5. 'Vehicle' → logprob: -13.375420570373535
    6. '(vehicle' → logprob: -14.375420570373535
    7. 'vehicle' → logprob: -14.750420570373535
    8. '_car' → logprob: -15.500420570373535
    9. '(' → logprob: -16.87542152404785
    10. '   ' → logprob: -17.00042152404785

Token 899: '_data' (ID: 3537)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.0004991783644072711
    2. '(' → logprob: -7.625499248504639
    3. ' (' → logprob: -11.50049877166748
    4. 'self' → logprob: -14.62549877166748
    5. '(
' → logprob: -14.87549877166748
    6. '(s' → logprob: -16.125499725341797
    7. '(vehicle' → logprob: -16.750499725341797
    8. '   ' → logprob: -17.875499725341797
    9. ' ' → logprob: -18.500499725341797
    10. ' self' → logprob: -18.625499725341797

Token 900: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -4.2987729102605954e-05
    2. '(' → logprob: -10.125042915344238
    3. ' (' → logprob: -12.875042915344238
    4. '(
' → logprob: -15.625042915344238
    5. 'self' → logprob: -17.125043869018555
    6. '   ' → logprob: -18.500043869018555
    7. '(s' → logprob: -18.500043869018555
    8. '(sel' → logprob: -20.000043869018555
    9. ' ' → logprob: -20.250043869018555
    10. '	self' → logprob: -20.250043869018555

Token 901: ',' (ID: 11)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.031728990375995636
    2. ',' → logprob: -3.531728982925415
    3. ')' → logprob: -6.781729221343994
    4. '(' → logprob: -7.781729221343994
    5. 'self' → logprob: -8.531728744506836
    6. ' (' → logprob: -9.031728744506836
    7. '   ' → logprob: -10.156728744506836
    8. ')(' → logprob: -10.531728744506836
    9. '       ' → logprob: -11.656728744506836
    10. ',self' → logprob: -11.906728744506836

Token 902: ' a' (ID: 261)
  Prédit: 'vehicle'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'vehicle' → logprob: -0.1567631959915161
    2. ' vehicle' → logprob: -2.0317630767822266
    3. 'chunk' → logprob: -4.406763076782227
    4. ' chunk' → logprob: -6.906763076782227
    5. 'self' → logprob: -7.656763076782227
    6. ' self' → logprob: -9.156763076782227
    7. '   ' → logprob: -9.406763076782227
    8. 'weight' → logprob: -10.656763076782227
    9. '       ' → logprob: -10.781763076782227
    10. 'collection' → logprob: -10.906763076782227

Token 903: '_i' (ID: 10853)
  Prédit: 'll'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'll' → logprob: -0.04144967719912529
    2. 'dd' → logprob: -3.666449785232544
    3. '_vehicle' → logprob: -4.916449546813965
    4. 'v' → logprob: -5.916449546813965
    5. 'vehicle' → logprob: -6.166449546813965
    6. 'rg' → logprob: -6.916449546813965
    7. 'rray' → logprob: -7.541449546813965
    8. 'l' → logprob: -8.291449546813965
    9. 'd' → logprob: -8.916449546813965
    10. '_' → logprob: -9.166449546813965

Token 904: ':' (ID: 25)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.3965696394443512
    2. ':' → logprob: -1.8965696096420288
    3. '):' → logprob: -1.8965696096420288
    4. '):
' → logprob: -4.521569728851318
    5. 'rray' → logprob: -5.521569728851318
    6. ' ,' → logprob: -6.146569728851318
    7. 'rg' → logprob: -6.396569728851318
    8. 'nd' → logprob: -6.771569728851318
    9. 'dd' → logprob: -6.771569728851318
    10. ')' → logprob: -7.021569728851318

Token 905: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.03460366651415825
    2. 'Collection' → logprob: -4.159603595733643
    3. 'All' → logprob: -4.284603595733643
    4. ')' → logprob: -6.534603595733643
    5. 'Weight' → logprob: -6.659603595733643
    6. '[int' → logprob: -7.659603595733643
    7. '):' → logprob: -7.784603595733643
    8. 'List' → logprob: -8.4096040725708
    9. ' int' → logprob: -8.4096040725708
    10. '...' → logprob: -9.2846040725708

Token 906: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0008583390736021101
    2. ')' → logprob: -8.250858306884766
    3. ' ,' → logprob: -8.625858306884766
    4. '):' → logprob: -8.625858306884766
    5. '):
' → logprob: -8.875858306884766
    6. '       ' → logprob: -9.875858306884766
    7. '   ' → logprob: -11.000858306884766
    8. ',
' → logprob: -11.875858306884766
    9. ',a' → logprob: -12.250858306884766
    10. 'weight' → logprob: -12.750858306884766

Token 907: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.02388901263475418
    2. 'w' → logprob: -4.648889064788818
    3. 'c' → logprob: -5.898889064788818
    4. 'm' → logprob: -6.023889064788818
    5. 'x' → logprob: -6.648889064788818
    6. 'a' → logprob: -6.773889064788818
    7. 'k' → logprob: -6.773889064788818
    8. 'p' → logprob: -7.023889064788818
    9. 'q' → logprob: -7.148889064788818
    10. ' b' → logprob: -7.523889064788818

Token 908: '_i' (ID: 10853)
  Prédit: '_i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_i' → logprob: -0.024950820952653885
    2. ')' → logprob: -4.649950981140137
    3. ':' → logprob: -5.024950981140137
    4. '):' → logprob: -5.024950981140137
    5. ',' → logprob: -7.649950981140137
    6. '   ' → logprob: -8.149950981140137
    7. '_k' → logprob: -8.274950981140137
    8. '=' → logprob: -8.399950981140137
    9. '):
' → logprob: -8.899950981140137
    10. '  ' → logprob: -9.024950981140137

Token 909: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.2180461287498474
    2. ',' → logprob: -1.7180461883544922
    3. '):' → logprob: -4.968046188354492
    4. ')' → logprob: -5.218046188354492
    5. '):
' → logprob: -5.718046188354492
    6. '   ' → logprob: -7.468046188354492
    7. ' ,' → logprob: -9.593046188354492
    8. ':int' → logprob: -9.718046188354492
    9. '=' → logprob: -10.343046188354492
    10. '       ' → logprob: -10.343046188354492

Token 910: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -1.27099974633893e-05
    2. ' int' → logprob: -11.375012397766113
    3. ')' → logprob: -14.250012397766113
    4. '[int' → logprob: -15.750012397766113
    5. '(int' → logprob: -16.12501335144043
    6. '1' → logprob: -17.00001335144043
    7. '	int' → logprob: -17.25001335144043
    8. 'def' → logprob: -17.75001335144043
    9. '   ' → logprob: -17.87501335144043
    10. '0' → logprob: -17.87501335144043

Token 911: '):
' (ID: 1883)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.7169473171234131
    2. '):
' → logprob: -1.091947317123413
    3. ',' → logprob: -1.966947317123413
    4. '):' → logprob: -3.341947317123413
    5. '):
' → logprob: -7.966947555541992
    6. '   ' → logprob: -8.591947555541992
    7. '       ' → logprob: -8.716947555541992
    8. ' )' → logprob: -9.216947555541992
    9. '):

' → logprob: -10.216947555541992
    10. ' ,' → logprob: -10.341947555541992

Token 912: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -8.180258191714529e-06
    2. '```' → logprob: -12.250008583068848
    3. ',' → logprob: -14.125008583068848
    4. '   ' → logprob: -14.375008583068848
    5. '        
' → logprob: -14.875008583068848
    6. ':' → logprob: -15.125008583068848
    7. '      ' → logprob: -15.250008583068848
    8. '           ' → logprob: -15.625008583068848
    9. '	' → logprob: -15.750008583068848
    10. '``' → logprob: -16.12500762939453

Token 913: ' weight' (ID: 6049)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.30722928047180176
    2. 'chunk' → logprob: -1.9322292804718018
    3. 'weight' (adapté à ' weight') → logprob: -2.3072292804718018
    4. 'vehicle' → logprob: -5.182229042053223
    5. ' weight' → logprob: -5.307229042053223
    6. ' chunk' → logprob: -5.432229042053223
    7. 'self' → logprob: -6.307229042053223
    8. ' self' → logprob: -6.807229042053223
    9. ' vehicle' → logprob: -6.932229042053223
    10. 'new' → logprob: -7.682229042053223

Token 914: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.31670206785202026
    2. '=' → logprob: -1.316702127456665
    3. '_unit' → logprob: -5.691701889038086
    4. 'unit' → logprob: -10.816701889038086
    5. '   ' → logprob: -11.191701889038086
    6. '=self' → logprob: -11.441701889038086
    7. '       ' → logprob: -12.191701889038086
    8. ',' → logprob: -12.691701889038086
    9. ' ' → logprob: -13.441701889038086
    10. '    ' → logprob: -13.816701889038086

Token 915: ' Weight' (ID: 19983)
  Prédit: 'Weight'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Weight' → logprob: -0.0002613358374219388
    2. ' Weight' → logprob: -8.250261306762695
    3. '   ' → logprob: -19.250261306762695
    4. 'weight' → logprob: -19.875261306762695
    5. '       ' → logprob: -20.125261306762695
    6. 'Weighted' → logprob: -20.375261306762695
    7. ' weight' → logprob: -20.500261306762695
    8. 'Quantity' → logprob: -20.875261306762695
    9. 'Weights' → logprob: -20.875261306762695
    10. '_weight' → logprob: -21.500261306762695

Token 916: 'Unit' (ID: 6728)
  Prédit: 'Unit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Unit' → logprob: -1.3856492842023727e-06
    2. 'Weight' → logprob: -13.750000953674316
    3. 'unit' → logprob: -16.500001907348633
    4. '(' → logprob: -17.125001907348633
    5. '(Unit' → logprob: -17.375001907348633
    6. '<Unit' → logprob: -18.875001907348633
    7. '_unit' → logprob: -19.125001907348633
    8. '(unit' → logprob: -20.750001907348633
    9. 'Units' → logprob: -21.125001907348633
    10. ' Unit' → logprob: -21.125001907348633

Token 917: '(a' (ID: 6271)
  Prédit: '(a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.0031781906727701426
    2. '(b' → logprob: -5.753178119659424
    3. '(' → logprob: -14.753178596496582
    4. 'a' → logprob: -16.003177642822266
    5. 'b' → logprob: -17.628177642822266
    6. '((' → logprob: -19.253177642822266
    7. '(ab' → logprob: -19.753177642822266
    8. '   ' → logprob: -19.878177642822266
    9. '(i' → logprob: -20.128177642822266
    10. '(abs' → logprob: -20.378177642822266

Token 918: '_i' (ID: 10853)
  Prédit: '_i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_i' → logprob: -0.00020175233657937497
    2. 'i' → logprob: -8.625202178955078
    3. ')' → logprob: -11.000202178955078
    4. '[i' → logprob: -13.375202178955078
    5. '   ' → logprob: -14.500202178955078
    6. ')
' → logprob: -14.625202178955078
    7. '       ' → logprob: -14.625202178955078
    8. '```' → logprob: -15.375202178955078
    9. '           ' → logprob: -15.625202178955078
    10. ' i' → logprob: -15.750202178955078

Token 919: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.02331477589905262
    2. ')
' → logprob: -3.7733147144317627
    3. ')
' → logprob: -10.023314476013184
    4. '       ' → logprob: -10.898314476013184
    5. '),' → logprob: -12.523314476013184
    6. ',' → logprob: -14.148314476013184
    7. ')

' → logprob: -14.148314476013184
    8. ' )' → logprob: -14.273314476013184
    9. ').' → logprob: -15.898314476013184
    10. '   ' → logprob: -16.1483154296875

Token 920: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.30188360810279846
    2. ',' → logprob: -1.426883578300476
    3. 'quantity' → logprob: -4.051883697509766
    4. ',
' → logprob: -6.301883697509766
    5. ' quantity' → logprob: -6.926883697509766
    6. '
' → logprob: -8.676883697509766
    7. ' ,' → logprob: -9.926883697509766
    8. ')' → logprob: -10.176883697509766
    9. ')
' → logprob: -10.426883697509766
    10. '        
' → logprob: -12.051883697509766

Token 921: ' quantity' (ID: 17245)
  Prédit: 'quantity'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'quantity' (adapté à ' quantity') → logprob: -7.314625690924004e-05
    2. ' quantity' → logprob: -9.625073432922363
    3. '       ' → logprob: -12.125073432922363
    4. 'qty' → logprob: -13.500073432922363
    5. '           ' → logprob: -16.000072479248047
    6. '   ' → logprob: -17.625072479248047
    7. 'amount' → logprob: -18.125072479248047
    8. 'quant' → logprob: -18.875072479248047
    9. 'quality' → logprob: -19.000072479248047
    10. 'weight' → logprob: -19.125072479248047

Token 922: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.3868711292743683
    2. ' =' → logprob: -1.136871099472046
    3. '   ' → logprob: -17.386871337890625
    4. ' ' → logprob: -17.386871337890625
    5. '       ' → logprob: -17.761871337890625
    6. 'quantity' → logprob: -18.011871337890625
    7. '＝' → logprob: -18.011871337890625
    8. ')' → logprob: -18.136871337890625
    9. '=
' → logprob: -18.386871337890625
    10. '```' → logprob: -18.511871337890625

Token 923: ' Quantity' (ID: 65944)
  Prédit: 'Quantity'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Quantity' → logprob: -0.0002613358374219388
    2. ' Quantity' → logprob: -8.250261306762695
    3. '   ' → logprob: -20.750261306762695
    4. ' quantity' → logprob: -21.000261306762695
    5. '	' → logprob: -21.375261306762695
    6. 'quantity' → logprob: -21.500261306762695
    7. '_quantity' → logprob: -21.625261306762695
    8. ' ' → logprob: -22.000261306762695
    9. '       ' → logprob: -22.750261306762695
    10. 'Quant' → logprob: -22.875261306762695

Token 924: 'Unit' (ID: 6728)
  Prédit: 'Unit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Unit' → logprob: -1.981667537620524e-06
    2. 'Quantity' → logprob: -13.250001907348633
    3. 'unit' → logprob: -16.125001907348633
    4. '=' → logprob: -19.250001907348633
    5. '(' → logprob: -19.625001907348633
    6. '_unit' → logprob: -20.125001907348633
    7. 'Units' → logprob: -20.250001907348633
    8. ' Unit' → logprob: -21.125001907348633
    9. '<Unit' → logprob: -21.125001907348633
    10. '```' → logprob: -21.625001907348633

Token 925: '(b' (ID: 3229)
  Prédit: '(b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(b' → logprob: -1.8908587662735954e-05
    2. 'b' → logprob: -11.000019073486328
    3. '(' → logprob: -13.250019073486328
    4. ' b' → logprob: -15.875019073486328
    5. '(
' → logprob: -15.875019073486328
    6. ' (' → logprob: -16.125019073486328
    7. '(B' → logprob: -20.000019073486328
    8. '	b' → logprob: -21.000019073486328
    9. '((' → logprob: -21.500019073486328
    10. '=b' → logprob: -22.000019073486328

Token 926: '_i' (ID: 10853)
  Prédit: '_i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_i' → logprob: -5.8961017202818766e-05
    2. 'i' → logprob: -9.750059127807617
    3. ')' → logprob: -16.000059127807617
    4. '
' → logprob: -16.250059127807617
    5. '```' → logprob: -16.375059127807617
    6. '   ' → logprob: -17.375059127807617
    7. '	i' → logprob: -17.375059127807617
    8. '_' → logprob: -17.625059127807617
    9. ' i' → logprob: -17.875059127807617
    10. '(i' → logprob: -17.875059127807617

Token 927: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.029776642099022865
    2. ')
' → logprob: -3.5297765731811523
    3. ')
' → logprob: -11.154776573181152
    4. '       ' → logprob: -11.529776573181152
    5. ' )' → logprob: -13.904776573181152
    6. ')

' → logprob: -15.529776573181152
    7. '),' → logprob: -15.904776573181152
    8. '<|end|>' → logprob: -16.02977752685547
    9. ' )
' → logprob: -16.15477752685547
    10. ')return' → logprob: -16.27977752685547

Token 928: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.009195184335112572
    2. 'chunk' → logprob: -5.259195327758789
    3. 'vehicle' → logprob: -5.634195327758789
    4. 'self' → logprob: -8.509195327758789
    5. ' vehicle' → logprob: -9.384195327758789
    6. '   ' → logprob: -10.259195327758789
    7. ' chunk' → logprob: -11.009195327758789
    8. '
' → logprob: -11.634195327758789
    9. '```' → logprob: -11.884195327758789
    10. ')' → logprob: -12.134195327758789

Token 929: ' chunk' (ID: 23958)
  Prédit: 'chunk'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'chunk' (adapté à ' chunk') → logprob: -0.4273366928100586
    2. '       ' → logprob: -1.9273366928100586
    3. 'self' → logprob: -2.1773366928100586
    4. 'vehicle' → logprob: -2.4273366928100586
    5. ' self' → logprob: -8.677336692810059
    6. ' vehicle' → logprob: -8.677336692810059
    7. ' chunk' → logprob: -8.927336692810059
    8. '   ' → logprob: -9.677336692810059
    9. 'new' → logprob: -11.177336692810059
    10. 'all' → logprob: -11.427336692810059

Token 930: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.2519296407699585
    2. ' =' → logprob: -1.5019296407699585
    3. '   ' → logprob: -14.87692928314209
    4. '=
' → logprob: -16.376930236816406
    5. ')' → logprob: -17.876930236816406
    6. 'chunk' → logprob: -18.126930236816406
    7. '       ' → logprob: -18.501930236816406
    8. 's' → logprob: -18.626930236816406
    9. '  ' → logprob: -18.626930236816406
    10. ' ' → logprob: -18.751930236816406

Token 931: ' Alloy' (ID: 115477)
  Prédit: 'All'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'All' → logprob: -0.023269474506378174
    2. ' Alloy' → logprob: -3.7732694149017334
    3. ' All' → logprob: -10.773269653320312
    4. '       ' → logprob: -13.398269653320312
    5. '_All' → logprob: -15.398269653320312
    6. '   ' → logprob: -15.398269653320312
    7. 'Al' → logprob: -15.523269653320312
    8. '@All' → logprob: -15.648269653320312
    9. ' alloy' → logprob: -15.898269653320312
    10. 'Alle' → logprob: -16.148269653320312

Token 932: 'Chunk' (ID: 29322)
  Prédit: 'Chunk'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Chunk' → logprob: -3.128163257315464e-07
    2. '_chunk' → logprob: -15.875
    3. 'chunk' → logprob: -16.25
    4. 'Chunks' → logprob: -16.875
    5. ' Chunk' → logprob: -17.0
    6. '   ' → logprob: -17.5
    7. 'Chuck' → logprob: -18.875
    8. 'Ch' → logprob: -19.25
    9. 'All' → logprob: -19.875
    10. 'Chord' → logprob: -20.25

Token 933: '(weight' (ID: 121456)
  Prédit: '(weight'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(weight' → logprob: -0.0002681304467841983
    2. 'weight' → logprob: -8.25026798248291
    3. '(' → logprob: -12.62526798248291
    4. '(chunk' → logprob: -12.62526798248291
    5. 'chunk' → logprob: -16.125268936157227
    6. '(
' → logprob: -16.375268936157227
    7. ' weight' → logprob: -16.750268936157227
    8. 'Weight' → logprob: -17.875268936157227
    9. '(weights' → logprob: -17.875268936157227
    10. '       ' → logprob: -18.750268936157227

Token 934: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -7.584239938296378e-06
    2. ',
' → logprob: -12.125007629394531
    3. ' ,' → logprob: -13.250007629394531
    4. '=' → logprob: -16.25000762939453
    5. ')' → logprob: -16.37500762939453
    6. ',
' → logprob: -16.75000762939453
    7. 'quantity' → logprob: -16.87500762939453
    8. 'chunk' → logprob: -17.25000762939453
    9. '),' → logprob: -17.87500762939453
    10. '       ' → logprob: -17.87500762939453

Token 935: ' quantity' (ID: 17245)
  Prédit: 'quantity'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'quantity' → logprob: -0.0005542247672565281
    2. ' quantity' → logprob: -7.500554084777832
    3. 'Quantity' → logprob: -13.625554084777832
    4. '       ' → logprob: -17.87555503845215
    5. '(quantity' → logprob: -18.12555503845215
    6. '   ' → logprob: -18.50055503845215
    7. '           ' → logprob: -18.87555503845215
    8. '.quantity' → logprob: -19.75055503845215
    9. 'volume' → logprob: -19.87555503845215
    10. '     ' → logprob: -19.87555503845215

Token 936: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.018292641267180443
    2. ')' → logprob: -4.018292427062988
    3. '       ' → logprob: -8.893292427062988
    4. ')
' → logprob: -12.143292427062988
    5. ')

' → logprob: -17.393293380737305
    6. ' )
' → logprob: -17.643293380737305
    7. '   ' → logprob: -18.143293380737305
    8. 'self' → logprob: -19.893293380737305
    9. ')`
' → logprob: -20.268293380737305
    10. ')add' → logprob: -20.268293380737305

Token 937: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.001978714717552066
    2. 'vehicle' → logprob: -6.626978874206543
    3. 'self' → logprob: -7.376978874206543
    4. ' vehicle' → logprob: -11.001978874206543
    5. '   ' → logprob: -12.251978874206543
    6. ' self' → logprob: -12.751978874206543
    7. 've' → logprob: -13.876978874206543
    8. '```' → logprob: -14.501978874206543
    9. 'v' → logprob: -14.626978874206543
    10. '_vehicle' → logprob: -15.501978874206543

Token 938: ' vehicle' (ID: 9540)
  Prédit: 'vehicle'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'vehicle' (adapté à ' vehicle') → logprob: -0.5992616415023804
    2. 'self' → logprob: -0.8492616415023804
    3. '       ' → logprob: -3.84926176071167
    4. ' vehicle' → logprob: -6.59926176071167
    5. ' self' → logprob: -7.97426176071167
    6. 'cv' → logprob: -10.974261283874512
    7. 'veh' → logprob: -11.349261283874512
    8. 've' → logprob: -11.849261283874512
    9. '   ' → logprob: -12.349261283874512
    10. 'v' → logprob: -12.474261283874512

Token 939: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5222377777099609
    2. '=' → logprob: -1.272237777709961
    3. '.' → logprob: -2.522237777709961
    4. 'self' → logprob: -3.897237777709961
    5. 's' → logprob: -4.022237777709961
    6. '=self' → logprob: -5.147237777709961
    7. '.vehicle' → logprob: -6.897237777709961
    8. '_chunk' → logprob: -8.522237777709961
    9. '.chunk' → logprob: -8.522237777709961
    10. ' self' → logprob: -9.022237777709961

Token 940: ' Collection' (ID: 13102)
  Prédit: 'Collection'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Collection' → logprob: -0.001170225441455841
    2. ' Collection' → logprob: -6.7511701583862305
    3. '	Collection' → logprob: -17.126171112060547
    4. 'Collections' → logprob: -20.501171112060547
    5. ' collection' → logprob: -21.376171112060547
    6. '_collection' → logprob: -21.876171112060547
    7. '       ' → logprob: -22.001171112060547
    8. '(Collection' → logprob: -22.376171112060547
    9. 'collection' → logprob: -22.501171112060547
    10. '.Collection' → logprob: -22.876171112060547

Token 941: 'Vehicle' (ID: 31586)
  Prédit: 'Vehicle'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Vehicle' → logprob: 0.0
    2. 'Vehicles' → logprob: -16.875
    3. ' Vehicle' → logprob: -17.125
    4. '   ' → logprob: -19.75
    5. '_vehicle' → logprob: -20.25
    6. 'Veh' → logprob: -20.25
    7. 'vehicle' → logprob: -20.625
    8. ' vehicle' → logprob: -21.875
    9. 'V' → logprob: -22.0
    10. 'Ve' → logprob: -22.5

Token 942: '(chunk' (ID: 92058)
  Prédit: '(chunk'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(chunk' → logprob: -0.6936134696006775
    2. '(vehicle' → logprob: -0.6936134696006775
    3. 'chunk' → logprob: -8.193613052368164
    4. 'vehicle' → logprob: -8.943613052368164
    5. '(' → logprob: -10.193613052368164
    6. '(collection' → logprob: -11.568613052368164
    7. '(vertex' → logprob: -12.443613052368164
    8. '       ' → logprob: -13.568613052368164
    9. '   ' → logprob: -14.068613052368164
    10. ' (' → logprob: -14.568613052368164

Token 943: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.3875586986541748
    2. ')' → logprob: -1.1375586986541748
    3. '       ' → logprob: -7.387558937072754
    4. ')
' → logprob: -9.637558937072754
    5. '   ' → logprob: -13.012558937072754
    6. ')

' → logprob: -15.137558937072754
    7. ' )
' → logprob: -16.012557983398438
    8. ')`
' → logprob: -16.262557983398438
    9. '),' → logprob: -16.512557983398438
    10. ')add' → logprob: -16.637557983398438

Token 944: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00022356293629854918
    2. 'self' → logprob: -8.500223159790039
    3. ' self' → logprob: -11.375223159790039
    4. '	' → logprob: -12.625223159790039
    5. '   ' → logprob: -13.625223159790039
    6. ')' → logprob: -14.000223159790039
    7. '
' → logprob: -14.375223159790039
    8. '(self' → logprob: -14.625223159790039
    9. '        
' → logprob: -15.125223159790039
    10. '```' → logprob: -15.125223159790039

Token 945: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -1.4498052223643754e-05
    2. '       ' → logprob: -11.250014305114746
    3. ' self' → logprob: -13.500014305114746
    4. '	self' → logprob: -18.500015258789062
    5. '        
' → logprob: -20.125015258789062
    6. '
' → logprob: -20.750015258789062
    7. '   ' → logprob: -21.250015258789062
    8. '```' → logprob: -21.750015258789062
    9. '[self' → logprob: -22.625015258789062
    10. '﻿' → logprob: -23.250015258789062

Token 946: '.' (ID: 13)
  Prédit: '.'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -7.107425062713446e-06
    2. 'vehicles' → logprob: -12.875006675720215
    3. '`.' → logprob: -13.625006675720215
    4. ').' → logprob: -14.125006675720215
    5. '.add' → logprob: -14.125006675720215
    6. ' .' → logprob: -14.500006675720215
    7. '​.' → logprob: -14.625006675720215
    8. '.
' → logprob: -15.500006675720215
    9. '```' → logprob: -15.500006675720215
    10. 'Vehicles' → logprob: -15.875006675720215

Token 947: 'vehicles' (ID: 124920)
  Prédit: 'vehicles'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'vehicles' → logprob: -4.320199877838604e-07
    2. 'add' → logprob: -15.125
    3. ' vehicles' → logprob: -16.25
    4. '`' → logprob: -18.0
    5. 've' → logprob: -18.25
    6. '
' → logprob: -18.5
    7. '```' → logprob: -18.625
    8. 'append' → logprob: -19.0
    9. '_' → logprob: -19.125
    10. 'vehicle' → logprob: -19.125

Token 948: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -4.739826181321405e-05
    2. '.' → logprob: -10.00004768371582
    3. '.app' → logprob: -13.62504768371582
    4. '.extend' → logprob: -15.00004768371582
    5. 'append' → logprob: -15.75004768371582
    6. '.ap' → logprob: -16.12504768371582
    7. '.add' → logprob: -16.25004768371582
    8. '.Append' → logprob: -16.87504768371582
    9. '.insert' → logprob: -17.00004768371582
    10. '_append' → logprob: -17.12504768371582

Token 949: '(vehicle' (ID: 144416)
  Prédit: '(vehicle'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(vehicle' → logprob: -1.0280383548888494e-06
    2. '(' → logprob: -14.250000953674316
    3. 'vehicle' → logprob: -14.750000953674316
    4. '(
' → logprob: -19.625001907348633
    5. ' (' → logprob: -20.125001907348633
    6. ' vehicle' → logprob: -20.625001907348633
    7. '```' → logprob: -21.250001907348633
    8. '(object' → logprob: -21.375001907348633
    9. '(vertex' → logprob: -21.750001907348633
    10. '(device' → logprob: -21.750001907348633

Token 950: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0015955570852383971
    2. '<|end|>' → logprob: -6.501595497131348
    3. ')
' → logprob: -10.126595497131348
    4. '       ' → logprob: -10.751595497131348
    5. '<|end|>' → logprob: -11.501595497131348
    6. '
' → logprob: -11.751595497131348
    7. '   ' → logprob: -12.001595497131348
    8. ')return' → logprob: -13.126595497131348
    9. ' )' → logprob: -13.626595497131348
    10. '")' → logprob: -14.126595497131348

Token 951: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.07488202303647995
    2. '
' → logprob: -2.9498820304870605
    3. 'def' → logprob: -4.6998820304870605
    4. '```' → logprob: -5.0748820304870605
    5. '    
' → logprob: -5.6998820304870605
    6. '<|end|>' → logprob: -7.3248820304870605
    7. ' def' → logprob: -8.949881553649902
    8. '<|end|>' → logprob: -9.449881553649902
    9. '  
' → logprob: -10.199881553649902
    10. '        
' → logprob: -10.449881553649902

Token 952: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.2790168821811676
    2. '   ' → logprob: -1.6540168523788452
    3. '
' → logprob: -3.0290169715881348
    4. ' def' → logprob: -5.654016971588135
    5. '```' → logprob: -8.529016494750977
    6. '    
' → logprob: -9.654016494750977
    7. '

' → logprob: -10.404016494750977
    8. '	def' → logprob: -12.029016494750977
    9. ' ' → logprob: -12.279016494750977
    10. '<|end|>' → logprob: -12.904016494750977

Token 953: ' total' (ID: 3609)
  Prédit: 'combine'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'combine' → logprob: -1.2482526302337646
    2. 'collect' → logprob: -1.8732526302337646
    3. 'total' → logprob: -1.9982526302337646
    4. 'get' → logprob: -2.3732526302337646
    5. 'aggregate' → logprob: -2.4982526302337646
    6. 're' → logprob: -2.9982526302337646
    7. ' total' → logprob: -3.2482526302337646
    8. 'compute' → logprob: -3.4982526302337646
    9. ' get' → logprob: -3.7482526302337646
    10. ' collect' → logprob: -3.8732526302337646

Token 954: '_weight' (ID: 34711)
  Prédit: '_weight'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_weight' → logprob: -0.00022892709239386022
    2. '_weights' → logprob: -9.000228881835938
    3. '_' → logprob: -9.500228881835938
    4. '_we' → logprob: -11.375228881835938
    5. '_collection' → logprob: -12.000228881835938
    6. '_mass' → logprob: -12.250228881835938
    7. 'weight' → logprob: -13.000228881835938
    8. '_total' → logprob: -13.375228881835938
    9. '_col' → logprob: -13.625228881835938
    10. '_quantity' → logprob: -14.000228881835938

Token 955: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.0032593535725027323
    2. '(' → logprob: -5.753259181976318
    3. '()' → logprob: -9.503259658813477
    4. 'self' → logprob: -12.753259658813477
    5. ' (' → logprob: -13.503259658813477
    6. '(
' → logprob: -13.628259658813477
    7. '   ' → logprob: -14.753259658813477
    8. 's' → logprob: -15.128259658813477
    9. '(s' → logprob: -15.378259658813477
    10. '()(' → logprob: -15.503259658813477

Token 956: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.03552068769931793
    2. '(self' → logprob: -3.5355207920074463
    3. 'self' → logprob: -6.035520553588867
    4. '()' → logprob: -6.160520553588867
    5. '   ' → logprob: -7.160520553588867
    6. 'def' → logprob: -9.035520553588867
    7. '):
' → logprob: -9.410520553588867
    8. '(' → logprob: -9.660520553588867
    9. '())' → logprob: -9.660520553588867
    10. '):' → logprob: -9.910520553588867

Token 957: ' ->' (ID: 2747)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.007066874299198389
    2. '(' → logprob: -5.13206672668457
    3. 'self' → logprob: -7.38206672668457
    4. '   ' → logprob: -8.63206672668457
    5. '(
' → logprob: -9.25706672668457
    6. '       ' → logprob: -9.25706672668457
    7. ':' → logprob: -9.88206672668457
    8. '->' → logprob: -10.88206672668457
    9. ')' → logprob: -11.00706672668457
    10. ' ->' → logprob: -11.00706672668457

Token 958: ' int' (ID: 677)
  Prédit: 'sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sum' → logprob: -0.04579358175396919
    2. ' sum' → logprob: -3.4207935333251953
    3. 'int' → logprob: -4.545793533325195
    4. 'return' → logprob: -7.295793533325195
    5. 'Weight' → logprob: -8.045793533325195
    6. '   ' → logprob: -8.670793533325195
    7. '       ' → logprob: -8.920793533325195
    8. '0' → logprob: -10.170793533325195
    9. ' return' → logprob: -10.420793533325195
    10. ' int' → logprob: -10.545793533325195

Token 959: ':
' (ID: 734)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.012809103354811668
    2. '       ' → logprob: -4.6378092765808105
    3. '(' → logprob: -6.5128092765808105
    4. '(
' → logprob: -6.7628092765808105
    5. '   ' → logprob: -8.137808799743652
    6. 'self' → logprob: -10.262808799743652
    7. ':' → logprob: -10.387808799743652
    8. ':
' → logprob: -10.387808799743652
    9. ')' → logprob: -12.262808799743652
    10. ' (' → logprob: -12.637808799743652

Token 960: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0037967502139508724
    2. 'return' → logprob: -6.003796577453613
    3. 'total' → logprob: -7.253796577453613
    4. 'sum' → logprob: -7.753796577453613
    5. 'result' → logprob: -8.753796577453613
    6. 'weight' → logprob: -10.878796577453613
    7. '```' → logprob: -13.128796577453613
    8. ' return' → logprob: -13.503796577453613
    9. ' total' → logprob: -13.878796577453613
    10. '   ' → logprob: -14.003796577453613

Token 961: ' #' (ID: 1069)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.1636125147342682
    2. 'sum' → logprob: -2.4136126041412354
    3. '       ' → logprob: -2.9136126041412354
    4. 'total' → logprob: -5.163612365722656
    5. 'result' → logprob: -6.663612365722656
    6. 'weight' → logprob: -9.038612365722656
    7. ' return' → logprob: -10.538612365722656
    8. '   ' → logprob: -12.038612365722656
    9. 'w' → logprob: -12.788612365722656
    10. ' sum' → logprob: -13.163612365722656

Token 962: ' sum' (ID: 4215)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.010309141129255295
    2. 'total' → logprob: -5.010309219360352
    3. '       ' → logprob: -5.760309219360352
    4. 'sum' → logprob: -7.885309219360352
    5. 'result' → logprob: -10.135309219360352
    6. 'weight' → logprob: -11.135309219360352
    7. ' return' → logprob: -12.385309219360352
    8. '   ' → logprob: -13.135309219360352
    9. 'tot' → logprob: -16.38530921936035
    10. ' total' → logprob: -16.76030921936035

Token 963: ' all' (ID: 722)
  Prédit: 'sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sum' → logprob: -0.6800274848937988
    2. '(vehicle' → logprob: -1.4300274848937988
    3. '(sum' → logprob: -1.8050274848937988
    4. '=' → logprob: -3.680027484893799
    5. '(' → logprob: -4.180027484893799
    6. '(v' → logprob: -4.180027484893799
    7. ' =' → logprob: -4.930027484893799
    8. '(
' → logprob: -5.305027484893799
    9. '=sum' → logprob: -5.430027484893799
    10. 'vehicle' → logprob: -5.555027484893799

Token 964: ' chunk' (ID: 23958)
  Prédit: 'vehicle'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'vehicle' → logprob: -0.037986405193805695
    2. '(vehicle' → logprob: -3.5379865169525146
    3. 'v' → logprob: -4.9129862785339355
    4. 'veh' → logprob: -8.037986755371094
    5. ' vehicle' → logprob: -8.537986755371094
    6. '(v' → logprob: -8.912986755371094
    7. 'sum' → logprob: -9.662986755371094
    8. 'cv' → logprob: -10.162986755371094
    9. 'vehicles' → logprob: -10.787986755371094
    10. '(' → logprob: -11.162986755371094

Token 965: ' total' (ID: 3609)
  Prédit: '.weight'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.weight' → logprob: -0.6505243182182312
    2. '.chunk' → logprob: -1.275524377822876
    3. '.' → logprob: -2.400524377822876
    4. '.total' → logprob: -3.400524377822876
    5. '.vehicle' → logprob: -3.775524377822876
    6. '   ' → logprob: -3.775524377822876
    7. ' .' → logprob: -4.900524139404297
    8. 's' → logprob: -5.400524139404297
    9. 'chunk' → logprob: -5.775524139404297
    10. '       ' → logprob: -6.025524139404297

Token 966: ' weights' (ID: 28460)
  Prédit: '_weight'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_weight' → logprob: -0.003010269021615386
    2. 'weight' → logprob: -6.253010272979736
    3. '_weights' → logprob: -7.003010272979736
    4. 'weights' → logprob: -9.253009796142578
    5. '   ' → logprob: -10.003009796142578
    6. '       ' → logprob: -11.378009796142578
    7. 's' → logprob: -12.253009796142578
    8. ' weight' → logprob: -12.503009796142578
    9. '```' → logprob: -12.753009796142578
    10. '()' → logprob: -13.253009796142578

Token 967: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.051181480288505554
    2. '=' → logprob: -3.5511815547943115
    3. ' =' → logprob: -4.676181316375732
    4. 'return' → logprob: -4.926181316375732
    5. '(' → logprob: -6.176181316375732
    6. '()' → logprob: -7.051181316375732
    7. '(self' → logprob: -7.676181316375732
    8. '   ' → logprob: -7.801181316375732
    9. '
' → logprob: -7.926181316375732
    10. 'sum' → logprob: -9.05118179321289

Token 968: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.08820467442274094
    2. 'return' → logprob: -2.5882046222686768
    3. '=' → logprob: -5.338204860687256
    4. '()' → logprob: -6.713204860687256
    5. ' =' → logprob: -6.838204860687256
    6. 'sum' → logprob: -6.963204860687256
    7. ' return' → logprob: -7.338204860687256
    8. '(self' → logprob: -9.213204383850098
    9. '=sum' → logprob: -9.213204383850098
    10. '   ' → logprob: -9.463204383850098

Token 969: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.041109830141067505
    2. 'sum' → logprob: -3.791109800338745
    3. '       ' → logprob: -4.041110038757324
    4. 'total' → logprob: -9.416110038757324
    5. 'result' → logprob: -10.541110038757324
    6. ' return' → logprob: -10.916110038757324
    7. '```' → logprob: -14.541110038757324
    8. '   ' → logprob: -14.791110038757324
    9. ' sum' → logprob: -14.916110038757324
    10. 'ret' → logprob: -15.291110038757324

Token 970: ' sum' (ID: 4215)
  Prédit: 'sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sum' → logprob: -0.000712670327629894
    2. ' sum' → logprob: -7.250712871551514
    3. '   ' → logprob: -12.875712394714355
    4. '       ' → logprob: -15.625712394714355
    5. '(sum' → logprob: -18.875713348388672
    6. '  ' → logprob: -19.000713348388672
    7. '	sum' → logprob: -19.250713348388672
    8. ' ' → logprob: -19.250713348388672
    9. '=sum' → logprob: -19.750713348388672
    10. '     ' → logprob: -20.125713348388672

Token 971: '(v' (ID: 6932)
  Prédit: '(vehicle'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(vehicle' → logprob: -0.04878981411457062
    2. '(v' → logprob: -3.0487897396087646
    3. 'vehicle' → logprob: -9.298789978027344
    4. '([' → logprob: -9.548789978027344
    5. 'v' → logprob: -10.798789978027344
    6. '(' → logprob: -11.923789978027344
    7. '(cv' → logprob: -12.298789978027344
    8. 'veh' → logprob: -13.298789978027344
    9. '(vc' → logprob: -13.548789978027344
    10. '[v' → logprob: -13.798789978027344

Token 972: '.total' (ID: 23374)
  Prédit: '.vehicle'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.vehicle' → logprob: -0.1792258769273758
    2. '.' → logprob: -1.9292259216308594
    3. '.v' → logprob: -4.304225921630859
    4. '(vehicle' → logprob: -5.804225921630859
    5. '(v' → logprob: -6.679225921630859
    6. '._' → logprob: -8.30422592163086
    7. '.ve' → logprob: -8.55422592163086
    8. 'ehicle' → logprob: -8.80422592163086
    9. '.chunk' → logprob: -8.92922592163086
    10. '.collection' → logprob: -9.55422592163086

Token 973: '_weight' (ID: 34711)
  Prédit: '_weight'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_weight' → logprob: -4.251091377227567e-05
    2. '()' → logprob: -11.000042915344238
    3. '().' → logprob: -11.250042915344238
    4. '_' → logprob: -12.250042915344238
    5. ' _' → logprob: -12.625042915344238
    6. '_w' → logprob: -13.625042915344238
    7. '   ' → logprob: -14.375042915344238
    8. 'weight' → logprob: -14.500042915344238
    9. '_weights' → logprob: -14.750042915344238
    10. '(_' → logprob: -14.875042915344238

Token 974: '()' (ID: 416)
  Prédit: '()'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -4.320199877838604e-07
    2. '()
' → logprob: -15.0
    3. '())' → logprob: -17.0
    4. '(' → logprob: -18.0
    5. 'for' → logprob: -18.25
    6. ' ()' → logprob: -19.125
    7. '()`' → logprob: -19.125
    8. '()

' → logprob: -20.0
    9. ')' → logprob: -20.25
    10. '()]' → logprob: -20.625

Token 975: ' for' (ID: 395)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0006923011387698352
    2. 'for' → logprob: -7.750692367553711
    3. ')' → logprob: -8.375692367553711
    4. ' for' → logprob: -10.750692367553711
    5. '())' → logprob: -11.625692367553711
    6. '```' → logprob: -15.625692367553711
    7. ' ' → logprob: -15.750692367553711
    8. '   ' → logprob: -15.750692367553711
    9. '()
' → logprob: -15.875692367553711
    10. '(' → logprob: -15.875692367553711

Token 976: ' v' (ID: 323)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.26716482639312744
    2. ' self' → logprob: -1.6421648263931274
    3. 'v' → logprob: -3.267164707183838
    4. ' v' → logprob: -5.892164707183838
    5. '	self' → logprob: -11.392165184020996
    6. '(self' → logprob: -13.517165184020996
    7. '	v' → logprob: -13.517165184020996
    8. 'vehicle' → logprob: -14.267165184020996
    9. '   ' → logprob: -14.517165184020996
    10. ' vehicle' → logprob: -15.017165184020996

Token 977: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.3135392367839813
    2. 'in' → logprob: -1.3135392665863037
    3. 'self' → logprob: -8.438539505004883
    4. 'v' → logprob: -10.063539505004883
    5. '.' → logprob: -11.563539505004883
    6. 'ehicle' → logprob: -13.188539505004883
    7. ' v' → logprob: -13.438539505004883
    8. ' ' → logprob: -13.563539505004883
    9. 's' → logprob: -13.813539505004883
    10. ' self' → logprob: -14.188539505004883

Token 978: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0013269031187519431
    2. ' self' → logprob: -6.626327037811279
    3. 'elf' → logprob: -15.126326560974121
    4. '(self' → logprob: -15.376326560974121
    5. '	self' → logprob: -15.751326560974121
    6. '
' → logprob: -16.626327514648438
    7. '=self' → logprob: -17.126327514648438
    8. '[self' → logprob: -17.251327514648438
    9. '```' → logprob: -18.001327514648438
    10. ')' → logprob: -18.626327514648438

Token 979: '.' (ID: 13)
  Prédit: '.'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.0017281336477026343
    2. 'vehicles' → logprob: -6.751728057861328
    3. 'ehicles' → logprob: -7.501728057861328
    4. 'ehicle' → logprob: -13.501728057861328
    5. '._' → logprob: -13.626728057861328
    6. ' .' → logprob: -14.251728057861328
    7. 'Vehicles' → logprob: -14.501728057861328
    8. 'h' → logprob: -14.626728057861328
    9. ' vehicles' → logprob: -14.751728057861328
    10. 'e' → logprob: -15.751728057861328

Token 980: 'vehicles' (ID: 124920)
  Prédit: 'vehicles'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'vehicles' → logprob: -5.512236498361744e-07
    2. 'ehicles' → logprob: -14.875000953674316
    3. ' vehicles' → logprob: -16.0
    4. '   ' → logprob: -18.5
    5. 'h' → logprob: -18.875
    6. '
' → logprob: -18.875
    7. '_' → logprob: -19.125
    8. '.' → logprob: -19.25
    9. '-' → logprob: -19.5
    10. '```' → logprob: -19.625

Token 981: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -8.2994620242971e-06
    2. ' )' → logprob: -12.250008583068848
    3. ')
' → logprob: -13.750008583068848
    4. '())' → logprob: -13.875008583068848
    5. '   ' → logprob: -14.125008583068848
    6. '       ' → logprob: -14.750008583068848
    7. ')}' → logprob: -16.00000762939453
    8. '))' → logprob: -17.12500762939453
    9. ')return' → logprob: -17.37500762939453
    10. ')

' → logprob: -17.50000762939453

Token 982: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.25307244062423706
    2. 'def' → logprob: -1.5030725002288818
    3. '
' → logprob: -7.378072261810303
    4. ' def' → logprob: -7.753072261810303
    5. '```' → logprob: -9.753072738647461
    6. '    
' → logprob: -10.878072738647461
    7. '<|end|>' → logprob: -12.503072738647461
    8. '	def' → logprob: -13.003072738647461
    9. '<|end|>' → logprob: -13.753072738647461
    10. ' ' → logprob: -13.878072738647461

Token 983: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -8.923874702304602e-05
    2. '   ' → logprob: -9.375089645385742
    3. ' def' → logprob: -12.625089645385742
    4. 'from' → logprob: -14.000089645385742
    5. '
' → logprob: -15.875089645385742
    6. '    
' → logprob: -18.375089645385742
    7. '```' → logprob: -18.375089645385742
    8. '@' → logprob: -19.125089645385742
    9. '	def' → logprob: -19.250089645385742
    10. '#' → logprob: -19.250089645385742

Token 984: ' regenerate' (ID: 174607)
  Prédit: 'combine'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'combine' → logprob: -0.5395393371582031
    2. 'collect' → logprob: -2.164539337158203
    3. ' collect' → logprob: -3.289539337158203
    4. 'get' → logprob: -3.414539337158203
    5. 'aggregate' → logprob: -3.414539337158203
    6. ' combine' → logprob: -3.414539337158203
    7. 'group' → logprob: -3.539539337158203
    8. 're' → logprob: -3.539539337158203
    9. 'def' → logprob: -3.914539337158203
    10. ' group' → logprob: -3.914539337158203

Token 985: '_min' (ID: 15950)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.031090281903743744
    2. '_chunks' → logprob: -4.156090259552002
    3. '_all' → logprob: -4.531090259552002
    4. '_collection' → logprob: -6.281090259552002
    5. '_units' → logprob: -7.281090259552002
    6. '(' → logprob: -7.906090259552002
    7. '_comb' → logprob: -8.40609073638916
    8. '_chunk' → logprob: -8.78109073638916
    9. '_com' → logprob: -8.78109073638916
    10. '_weights' → logprob: -9.03109073638916

Token 986: '_chunks' (ID: 163246)
  Prédit: 'imal'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'imal' → logprob: -0.2262783795595169
    2. 'imized' → logprob: -2.351278305053711
    3. 'imum' → logprob: -3.351278305053711
    4. '_chunks' → logprob: -3.726278305053711
    5. 'imize' → logprob: -4.101278305053711
    6. '_weight' → logprob: -4.601278305053711
    7. '_chunk' → logprob: -5.226278305053711
    8. '_units' → logprob: -5.601278305053711
    9. 'im' → logprob: -5.726278305053711
    10. '_' → logprob: -6.351278305053711

Token 987: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -2.165027217415627e-05
    2. 'self' → logprob: -11.000021934509277
    3. '(' → logprob: -12.875021934509277
    4. '   ' → logprob: -14.000021934509277
    5. 'def' → logprob: -14.000021934509277
    6. ' (' → logprob: -15.875021934509277
    7. '       ' → logprob: -16.00002098083496
    8. '(
' → logprob: -16.25002098083496
    9. 'from' → logprob: -16.87502098083496
    10. '```' → logprob: -17.00002098083496

Token 988: ')' (ID: 8)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -1.0742650032043457
    2. '(self' → logprob: -1.0742650032043457
    3. ')(' → logprob: -1.4492650032043457
    4. ')' → logprob: -2.8242650032043457
    5. '   ' → logprob: -4.574265003204346
    6. '```' → logprob: -5.449265003204346
    7. '       ' → logprob: -6.324265003204346
    8. ')(
' → logprob: -6.449265003204346
    9. 'def' → logprob: -6.574265003204346
    10. '):
' → logprob: -6.699265003204346

Token 989: ' ->' (ID: 2747)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.006563675589859486
    2. '->' → logprob: -5.506563663482666
    3. 'self' → logprob: -6.381563663482666
    4. ' ->' → logprob: -7.381563663482666
    5. '   ' → logprob: -9.506564140319824
    6. 'def' → logprob: -10.256564140319824
    7. '       ' → logprob: -10.631564140319824
    8. ':' → logprob: -11.131564140319824
    9. '```' → logprob: -12.131564140319824
    10. '(' → logprob: -12.256564140319824

Token 990: ' List' (ID: 2655)
  Prédit: 'List'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'List' → logprob: -0.09180250018835068
    2. 'Dict' → logprob: -2.9668025970458984
    3. 'Tuple' → logprob: -4.591802597045898
    4. 'int' → logprob: -4.716802597045898
    5. ' List' → logprob: -5.341802597045898
    6. ''' → logprob: -5.591802597045898
    7. 'All' → logprob: -5.841802597045898
    8. 'None' → logprob: -6.466802597045898
    9. 'dict' → logprob: -6.841802597045898
    10. '   ' → logprob: -7.466802597045898

Token 991: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -5.6696149840718135e-05
    2. '[List' → logprob: -10.375056266784668
    3. '['' → logprob: -11.750056266784668
    4. '[int' → logprob: -11.875056266784668
    5. 'All' → logprob: -12.125056266784668
    6. '[
' → logprob: -13.500056266784668
    7. '   ' → logprob: -13.500056266784668
    8. '(All' → logprob: -14.250056266784668
    9. ' [' → logprob: -14.750056266784668
    10. '[(' → logprob: -15.000056266784668

Token 992: 'All' (ID: 2594)
  Prédit: 'All'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'All' → logprob: -0.00039230400579981506
    2. 'Weight' → logprob: -7.875392436981201
    3. 'Tuple' → logprob: -12.000391960144043
    4. 'Al' → logprob: -13.250391960144043
    5. 'Collection' → logprob: -13.250391960144043
    6. 'Quantity' → logprob: -15.250391960144043
    7. '`' → logprob: -15.250391960144043
    8. 'Weighted' → logprob: -15.375391960144043
    9. 'Chunk' → logprob: -15.625391960144043
    10. 'tuple' → logprob: -15.750391960144043

Token 993: 'oy' (ID: 1107)
  Prédit: 'oy'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'oy' → logprob: -5.512236498361744e-07
    2. '```' → logprob: -15.250000953674316
    3. 'oys' → logprob: -16.25
    4. '   ' → logprob: -16.875
    5. 'og' → logprob: -17.5
    6. 'ay' → logprob: -17.625
    7. 'All' → logprob: -18.125
    8. '``' → logprob: -18.25
    9. 'of' → logprob: -18.375
    10. 'o' → logprob: -18.5

Token 994: 'Chunk' (ID: 29322)
  Prédit: 'Chunk'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Chunk' → logprob: -2.2200749754119897e-06
    2. 'Chunks' → logprob: -13.125001907348633
    3. 'chunk' → logprob: -16.125001907348633
    4. '_chunk' → logprob: -16.875001907348633
    5. '```' → logprob: -17.750001907348633
    6. ' Chunk' → logprob: -19.625001907348633
    7. 'Chord' → logprob: -19.875001907348633
    8. '   ' → logprob: -19.875001907348633
    9. 'All' → logprob: -20.125001907348633
    10. '
' → logprob: -20.250001907348633

Token 995: ']:
' (ID: 22152)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.0011615309631451964
    2. '       ' → logprob: -7.126161575317383
    3. '):
' → logprob: -8.376161575317383
    4. '   ' → logprob: -10.376161575317383
    5. ']:
' → logprob: -10.501161575317383
    6. 'self' → logprob: -10.751161575317383
    7. '(' → logprob: -11.251161575317383
    8. '](' → logprob: -11.376161575317383
    9. ':
' → logprob: -11.876161575317383
    10. '():
' → logprob: -12.876161575317383

Token 996: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00011880126112373546
    2. '```' → logprob: -9.12511920928955
    3. '[' → logprob: -12.62511920928955
    4. '        
' → logprob: -13.50011920928955
    5. '   ' → logprob: -13.62511920928955
    6. '
' → logprob: -13.87511920928955
    7. '`' → logprob: -14.50011920928955
    8. '           ' → logprob: -15.12511920928955
    9. '[]' → logprob: -15.12511920928955
    10. '``' → logprob: -15.12511920928955

Token 997: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5452262759208679
    2. 'weight' → logprob: -1.0452263355255127
    3. '#' (adapté à ' #') → logprob: -3.4202263355255127
    4. 'from' → logprob: -4.420226097106934
    5. 'weights' → logprob: -4.670226097106934
    6. 'total' → logprob: -5.545226097106934
    7. 'chunks' → logprob: -5.795226097106934
    8. 'result' → logprob: -6.045226097106934
    9. 'counts' → logprob: -6.170226097106934
    10. 'count' → logprob: -7.170226097106934

Token 998: ' sum' (ID: 4215)
  Prédit: 'weight'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'weight' → logprob: -0.12874314188957214
    2. '       ' → logprob: -3.3787431716918945
    3. '#' → logprob: -3.8787431716918945
    4. 'weights' → logprob: -4.0037431716918945
    5. 'total' → logprob: -4.7537431716918945
    6. 'counts' → logprob: -4.8787431716918945
    7. 'chunks' → logprob: -5.0037431716918945
    8. 'def' → logprob: -5.2537431716918945
    9. 'from' → logprob: -5.3787431716918945
    10. 'count' → logprob: -5.6287431716918945

Token 999: ' total' (ID: 3609)
  Prédit: 'weight'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'weight' → logprob: -0.47495266795158386
    2. '       ' → logprob: -1.8499526977539062
    3. 'all' → logprob: -2.0999526977539062
    4. 'total' → logprob: -2.8499526977539062
    5. 'weights' → logprob: -3.7249526977539062
    6. 'from' → logprob: -4.974952697753906
    7. '#' → logprob: -6.099952697753906
    8. 'counter' → logprob: -6.349952697753906
    9. '=' → logprob: -6.849952697753906
    10. 'counts' → logprob: -7.099952697753906

Token 1000: ' weight' (ID: 6049)
  Prédit: '_weight'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_weight' → logprob: -0.5779600143432617
    2. 'weight' → logprob: -0.8279600143432617
    3. 'weights' → logprob: -6.952960014343262
    4. '_weights' → logprob: -7.327960014343262
    5. '_b' → logprob: -9.077960014343262
    6. '       ' → logprob: -9.827960014343262
    7. '_base' → logprob: -10.327960014343262
    8. 'b' → logprob: -10.452960014343262
    9. 'base' → logprob: -10.702960014343262
    10. '_w' → logprob: -10.827960014343262

Token 1001: ' from' (ID: 591)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.26420292258262634
    2. ' =' → logprob: -1.6392029523849487
    3. '=' → logprob: -3.639202833175659
    4. 'total' → logprob: -4.639203071594238
    5. 'weight' → logprob: -7.764203071594238
    6. 'all' → logprob: -8.139203071594238
    7. ':' → logprob: -8.389203071594238
    8. '_weight' → logprob: -8.514203071594238
    9. '   ' → logprob: -8.889203071594238
    10. '()' → logprob: -9.014203071594238

Token 1002: ' all' (ID: 722)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.22455398738384247
    2. 'vehicle' → logprob: -2.3495540618896484
    3. 'v' → logprob: -2.8495540618896484
    4. 'all' → logprob: -3.0995540618896484
    5. 'chunk' → logprob: -7.474554061889648
    6. 'vehicles' → logprob: -7.474554061889648
    7. '
' → logprob: -7.599554061889648
    8. '[v' → logprob: -8.224554061889648
    9. '       ' → logprob: -8.849554061889648
    10. 'veh' → logprob: -8.974554061889648

Token 1003: ' vehicles' (ID: 16511)
  Prédit: 'vehicles'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'vehicles' → logprob: -0.21152855455875397
    2. 'vehicle' → logprob: -2.2115285396575928
    3. 'self' → logprob: -2.9615285396575928
    4. 'chunks' → logprob: -4.336528778076172
    5. 'v' → logprob: -4.586528778076172
    6. ' vehicles' → logprob: -5.836528778076172
    7. '   ' → logprob: -7.336528778076172
    8. ' vehicle' → logprob: -7.461528778076172
    9. 'veh' → logprob: -7.836528778076172
    10. 'chunk' → logprob: -8.086528778076172

Token 1004: '
' (ID: 198)
  Prédit: 'total'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'total' → logprob: -0.291843980550766
    2. '       ' → logprob: -1.4168440103530884
    3. '```' → logprob: -5.791843891143799
    4. 'weight' → logprob: -6.041843891143799
    5. ':' → logprob: -6.041843891143799
    6. '=' → logprob: -7.541843891143799
    7. ' total' → logprob: -7.666843891143799
    8. ':
' → logprob: -7.791843891143799
    9. '
' → logprob: -8.041844367980957
    10. ' =' → logprob: -8.291844367980957

Token 1005: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7017638683319092
    2. 'total' → logprob: -0.7017638683319092
    3. 'weight' → logprob: -5.201764106750488
    4. '=' → logprob: -7.451764106750488
    5. '```' → logprob: -7.576764106750488
    6. ' total' → logprob: -7.826764106750488
    7. '
' → logprob: -7.951764106750488
    8. ' =' → logprob: -8.076764106750488
    9. 'result' → logprob: -8.451764106750488
    10. ':' → logprob: -8.826764106750488

Token 1006: ' total' (ID: 3609)
  Prédit: 'total'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'total' (adapté à ' total') → logprob: -0.00934778805822134
    2. '       ' → logprob: -4.759347915649414
    3. 'weight' → logprob: -7.259347915649414
    4. ' total' → logprob: -11.009347915649414
    5. 'result' → logprob: -12.884347915649414
    6. 'wt' → logprob: -13.259347915649414
    7. 'tot' → logprob: -13.259347915649414
    8. 'all' → logprob: -13.509347915649414
    9. 'w' → logprob: -13.634347915649414
    10. '```' → logprob: -14.134347915649414

Token 1007: '_weight' (ID: 34711)
  Prédit: '_weight'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_weight' → logprob: -0.00046200878568924963
    2. '_w' → logprob: -8.00046157836914
    3. 'weight' → logprob: -9.37546157836914
    4. '=' → logprob: -10.75046157836914
    5. ' =' → logprob: -11.37546157836914
    6. '_weights' → logprob: -12.87546157836914
    7. '_' → logprob: -13.12546157836914
    8. 'w' → logprob: -13.50046157836914
    9. 'wt' → logprob: -14.37546157836914
    10. '_value' → logprob: -14.62546157836914

Token 1008: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.25197726488113403
    2. '=' → logprob: -1.5019772052764893
    3. '       ' → logprob: -10.37697696685791
    4. '()' → logprob: -11.75197696685791
    5. '        ' → logprob: -13.00197696685791
    6. '   ' → logprob: -13.12697696685791
    7. ')' → logprob: -13.75197696685791
    8. '_' → logprob: -13.87697696685791
    9. '    ' → logprob: -14.75197696685791
    10. 's' → logprob: -14.75197696685791

Token 1009: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.4326997399330139
    2. 'sum' → logprob: -1.0576996803283691
    3. 'Weight' → logprob: -5.682699680328369
    4. '0' → logprob: -7.682699680328369
    5. '       ' → logprob: -10.682700157165527
    6. 'weight' → logprob: -10.932700157165527
    7. ' sum' → logprob: -11.057700157165527
    8. ' self' → logprob: -11.307700157165527
    9. '   ' → logprob: -11.432700157165527
    10. 'default' → logprob: -11.682700157165527

Token 1010: '.total' (ID: 23374)
  Prédit: '.total'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.total' → logprob: -0.06210515275597572
    2. 'total' → logprob: -2.812105178833008
    3. '.' → logprob: -9.312105178833008
    4. '   ' → logprob: -11.187105178833008
    5. 'self' → logprob: -11.437105178833008
    6. ' .' → logprob: -12.312105178833008
    7. ' total' → logprob: -12.437105178833008
    8. '       ' → logprob: -12.437105178833008
    9. 'def' → logprob: -12.687105178833008
    10. '	total' → logprob: -13.812105178833008

Token 1011: '_weight' (ID: 34711)
  Prédit: '_weight'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_weight' → logprob: -6.73052782076411e-05
    2. 'weight' → logprob: -10.125067710876465
    3. '_' → logprob: -10.750067710876465
    4. '_weights' → logprob: -13.125067710876465
    5. '_
' → logprob: -13.875067710876465
    6. ' _' → logprob: -14.500067710876465
    7. '       ' → logprob: -15.000067710876465
    8. '   ' → logprob: -15.250067710876465
    9. '_WEIGHT' → logprob: -15.250067710876465
    10. '+' → logprob: -15.250067710876465

Token 1012: '()

' (ID: 5874)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5253421068191528
    2. '
' → logprob: -1.0253421068191528
    3. '()
' → logprob: -3.9003419876098633
    4. '        
' → logprob: -4.275341987609863
    5. '()' → logprob: -4.650341987609863
    6. '=' → logprob: -5.900341987609863
    7. ' =' → logprob: -6.150341987609863
    8. '
' → logprob: -8.275341987609863
    9. '#' → logprob: -9.025341987609863
    10. ',' → logprob: -9.150341987609863

Token 1013: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.014094161801040173
    2. 'result' → logprob: -4.889094352722168
    3. 'chunks' → logprob: -5.139094352722168
    4. '
' → logprob: -8.639094352722168
    5. '   ' → logprob: -8.889094352722168
    6. 'results' → logprob: -9.889094352722168
    7. 'rest' → logprob: -10.264094352722168
    8. 'all' → logprob: -10.389094352722168
    9. '```' → logprob: -10.389094352722168
    10. 'units' → logprob: -10.514094352722168

Token 1014: ' #' (ID: 1069)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.23490318655967712
    2. 'chunks' → logprob: -1.7349032163619995
    3. 'min' → logprob: -4.484903335571289
    4. 'new' → logprob: -5.109903335571289
    5. 'res' → logprob: -5.859903335571289
    6. '#' (adapté à ' #') → logprob: -5.859903335571289
    7. 'if' → logprob: -6.109903335571289
    8. 'results' → logprob: -6.359903335571289
    9. '   ' → logprob: -6.484903335571289
    10. 're' → logprob: -6.859903335571289

Token 1015: ' The' (ID: 623)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.4318341016769409
    2. 'chunks' → logprob: -1.306834101676941
    3. 'min' → logprob: -3.9318342208862305
    4. 'if' → logprob: -3.9318342208862305
    5. '#' → logprob: -4.1818342208862305
    6. 'results' → logprob: -5.4318342208862305
    7. 'res' → logprob: -5.4318342208862305
    8. 'from' → logprob: -5.4318342208862305
    9. 're' → logprob: -6.0568342208862305
    10. 'new' → logprob: -6.1818342208862305

Token 1016: ' problem' (ID: 4792)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.1258261650800705
    2. 'chunks' → logprob: -2.625826120376587
    3. 'min' → logprob: -4.000826358795166
    4. '#' → logprob: -4.750826358795166
    5. 'res' → logprob: -5.000826358795166
    6. 'new' → logprob: -5.750826358795166
    7. 'reg' → logprob: -5.875826358795166
    8. 'if' → logprob: -6.875826358795166
    9. 'results' → logprob: -7.000826358795166
    10. 'def' → logprob: -7.250826358795166

Token 1017: ' wants' (ID: 10648)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.429290771484375
    2. '#' → logprob: -1.179290771484375
    3. 'if' → logprob: -4.679290771484375
    4. '=' → logprob: -5.054290771484375
    5. '   ' → logprob: -5.304290771484375
    6. ':' → logprob: -5.429290771484375
    7. 'def' → logprob: -5.679290771484375
    8. '
' → logprob: -6.304290771484375
    9. 'tokens' → logprob: -6.429290771484375
    10. 'chunks' → logprob: -6.679290771484375

Token 1018: ' to' (ID: 316)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.7577347755432129
    2. 'to' → logprob: -1.632734775543213
    3. 'chunks' → logprob: -1.632734775543213
    4. '#' → logprob: -2.882734775543213
    5. 'min' → logprob: -3.507734775543213
    6. 'res' → logprob: -3.882734775543213
    7. '       ' → logprob: -4.007734775543213
    8. '   ' → logprob: -5.632734775543213
    9. 'the' → logprob: -6.007734775543213
    10. ' to' → logprob: -6.257734775543213

Token 1019: ' minimize' (ID: 41776)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'min' → logprob: -1.0388271808624268
    2. 'result' → logprob: -1.5388271808624268
    3. 'chunks' → logprob: -1.5388271808624268
    4. '#' → logprob: -2.2888271808624268
    5. 'res' → logprob: -2.5388271808624268
    6. 'return' → logprob: -4.663826942443848
    7. 'find' → logprob: -5.038826942443848
    8. 're' → logprob: -5.788826942443848
    9. 'import' → logprob: -5.913826942443848
    10. 'generate' → logprob: -6.288826942443848

Token 1020: ' the' (ID: 290)
  Prédit: 'chunks'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'chunks' → logprob: -0.4261595606803894
    2. 'result' → logprob: -1.6761596202850342
    3. 'res' → logprob: -2.676159620285034
    4. 'num' → logprob: -2.801159620285034
    5. 'the' → logprob: -4.801159381866455
    6. 'min' → logprob: -5.051159381866455
    7. '#' → logprob: -5.051159381866455
    8. 'number' → logprob: -5.551159381866455
    9. 'remaining' → logprob: -6.551159381866455
    10. '```' → logprob: -6.926159381866455

Token 1021: ' number' (ID: 2086)
  Prédit: 'number'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'number' → logprob: -0.002233044244349003
    2. 'num' → logprob: -7.002233028411865
    3. 'count' → logprob: -8.002233505249023
    4. 'chunks' → logprob: -8.002233505249023
    5. '#' → logprob: -8.252233505249023
    6. 'total' → logprob: -9.377233505249023
    7. ' number' → logprob: -9.502233505249023
    8. 'remaining' → logprob: -10.002233505249023
    9. 'result' → logprob: -10.377233505249023
    10. 'list' → logprob: -10.627233505249023

Token 1022: ' of' (ID: 328)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4526980221271515
    2. 'of' → logprob: -1.702697992324829
    3. ' of' → logprob: -2.077697992324829
    4. 'chunks' → logprob: -3.702697992324829
    5. '
' → logprob: -4.577698230743408
    6. '#' → logprob: -4.577698230743408
    7. 'result' → logprob: -5.702698230743408
    8. '_of' → logprob: -6.452698230743408
    9. '```' → logprob: -6.952698230743408
    10. '   ' → logprob: -7.077698230743408

Token 1023: ' chunks' (ID: 53440)
  Prédit: 'chunks'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'chunks' → logprob: -0.010876497253775597
    2. 'All' → logprob: -4.760876655578613
    3. 'result' → logprob: -7.010876655578613
    4. 'all' → logprob: -7.635876655578613
    5. '```' → logprob: -8.510876655578613
    6. 'units' → logprob: -9.135876655578613
    7. 'remaining' → logprob: -9.510876655578613
    8. 'chunk' → logprob: -9.885876655578613
    9. 'items' → logprob: -9.885876655578613
    10. 'new' → logprob: -9.885876655578613

Token 1024: ' after' (ID: 1934)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1298014521598816
    2. 'chunks' → logprob: -3.0048015117645264
    3. 'result' → logprob: -3.1298015117645264
    4. '
' → logprob: -4.129801273345947
    5. ',' → logprob: -5.254801273345947
    6. '        
' → logprob: -5.379801273345947
    7. 'if' → logprob: -7.254801273345947
    8. '#' → logprob: -7.629801273345947
    9. 'all' → logprob: -8.754801750183105
    10. '        

' → logprob: -9.254801750183105

Token 1025: ' regen' (ID: 84057)
  Prédit: 'reg'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'reg' → logprob: -0.02296171709895134
    2. 're' → logprob: -4.272961616516113
    3. 'comb' → logprob: -5.147961616516113
    4. 'collection' → logprob: -7.022961616516113
    5. 'mer' → logprob: -7.522961616516113
    6. 'regen' → logprob: -7.647961616516113
    7. '#' → logprob: -8.022961616516113
    8. 'spl' → logprob: -8.522961616516113
    9. 'de' → logprob: -8.897961616516113
    10. 'redis' → logprob: -9.147961616516113

Token 1026: '.
' (ID: 558)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2538216710090637
    2. 'chunks' → logprob: -2.753821611404419
    3. 'result' → logprob: -3.378821611404419
    4. '
' → logprob: -3.503821611404419
    5. ':' → logprob: -3.878821611404419
    6. 'min' → logprob: -4.378821849822998
    7. '   ' → logprob: -4.628821849822998
    8. '#' → logprob: -4.878821849822998
    9. 'if' → logprob: -4.878821849822998
    10. ':
' → logprob: -5.003821849822998

Token 1027: '       ' (ID: 309)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.4878115653991699
    2. '       ' → logprob: -1.36281156539917
    3. 'chunks' → logprob: -2.11281156539917
    4. 'results' → logprob: -5.73781156539917
    5. 'min' → logprob: -6.11281156539917
    6. 'res' → logprob: -6.36281156539917
    7. '#' → logprob: -7.36281156539917
    8. 're' → logprob: -8.237812042236328
    9. 'if' → logprob: -8.612812042236328
    10. 'new' → logprob: -8.737812042236328

Token 1028: ' #' (ID: 1069)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.2297072857618332
    2. 'chunks' → logprob: -2.2297072410583496
    3. '       ' → logprob: -3.3547072410583496
    4. '#' (adapté à ' #') → logprob: -4.10470724105835
    5. 'min' → logprob: -4.22970724105835
    6. 'res' → logprob: -4.60470724105835
    7. 'new' → logprob: -5.47970724105835
    8. 're' → logprob: -5.60470724105835
    9. 'from' → logprob: -5.72970724105835
    10. 'results' → logprob: -6.22970724105835

Token 1029: ' Minim' (ID: 190023)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.2318168431520462
    2. 'chunks' → logprob: -2.2318167686462402
    3. 'min' → logprob: -3.3568167686462402
    4. '#' → logprob: -3.3568167686462402
    5. 'reg' → logprob: -5.10681676864624
    6. 'res' → logprob: -5.35681676864624
    7. 'from' → logprob: -5.60681676864624
    8. 'new' → logprob: -5.85681676864624
    9. 're' → logprob: -6.10681676864624
    10. 'if' → logprob: -6.23181676864624

Token 1030: 'izing' (ID: 6396)
  Prédit: 'ize'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ize' → logprob: -0.41309288144111633
    2. '   ' → logprob: -1.538092851638794
    3. 'al' → logprob: -3.663092851638794
    4. 'def' → logprob: -3.913092851638794
    5. '       ' → logprob: -4.413093090057373
    6. 'ze' → logprob: -4.538093090057373
    7. 'e' → logprob: -4.538093090057373
    8. 'um' → logprob: -4.788093090057373
    9. '```' → logprob: -4.913093090057373
    10. 'remaining' → logprob: -5.163093090057373

Token 1031: ' number' (ID: 2086)
  Prédit: 'chunks'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'chunks' → logprob: -0.290756493806839
    2. 'result' → logprob: -1.7907564640045166
    3. 'res' → logprob: -2.9157564640045166
    4. 'remaining' → logprob: -4.540756702423096
    5. '#' → logprob: -4.790756702423096
    6. 'num' → logprob: -5.665756702423096
    7. 'min' → logprob: -6.540756702423096
    8. 'tokens' → logprob: -6.540756702423096
    9. '
' → logprob: -7.040756702423096
    10. '   ' → logprob: -7.165756702423096

Token 1032: ' of' (ID: 328)
  Prédit: 'of'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'of' → logprob: -0.4033101201057434
    2. '       ' → logprob: -1.4033100605010986
    3. ' of' → logprob: -3.1533100605010986
    4. '_of' → logprob: -4.028310298919678
    5. '#' → logprob: -5.153310298919678
    6. 'chunks' → logprob: -5.528310298919678
    7. '   ' → logprob: -5.653310298919678
    8. 'from' → logprob: -5.903310298919678
    9. '           ' → logprob: -6.028310298919678
    10. '=' → logprob: -6.528310298919678

Token 1033: ' chunks' (ID: 53440)
  Prédit: 'chunks'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'chunks' → logprob: -0.0007326744962483644
    2. ' chunks' → logprob: -8.750732421875
    3. '[]' → logprob: -9.375732421875
    4. '```' → logprob: -9.750732421875
    5. 'units' → logprob: -9.875732421875
    6. '
' → logprob: -9.875732421875
    7. 'chips' → logprob: -10.000732421875
    8. 'all' → logprob: -10.375732421875
    9. '[' → logprob: -10.375732421875
    10. 'pieces' → logprob: -10.375732421875

Token 1034: ' means' (ID: 4748)
  Prédit: ' involves'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' involves' → logprob: -1.2692753076553345
    2. ' by' → logprob: -1.7692753076553345
    3. ',' → logprob: -2.019275188446045
    4. ' means' → logprob: -2.644275188446045
    5. '=' → logprob: -2.769275188446045
    6. '       ' → logprob: -2.894275188446045
    7. ':' → logprob: -3.019275188446045
    8. 'means' → logprob: -3.144275188446045
    9. 'by' → logprob: -3.769275188446045
    10. ' =' → logprob: -3.769275188446045

Token 1035: ' make' (ID: 1520)
  Prédit: 'chunks'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'chunks' → logprob: -0.9727972745895386
    2. 'result' → logprob: -1.2227972745895386
    3. '       ' → logprob: -2.222797393798828
    4. 'res' → logprob: -2.347797393798828
    5. '#' → logprob: -2.722797393798828
    6. '   ' → logprob: -4.097797393798828
    7. 'that' → logprob: -5.222797393798828
    8. 'def' → logprob: -5.472797393798828
    9. '
' → logprob: -5.597797393798828
    10. 'return' → logprob: -5.722797393798828

Token 1036: ' the' (ID: 290)
  Prédit: 'chunks'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'chunks' → logprob: -0.10587476938962936
    2. 'result' → logprob: -2.73087477684021
    3. ' chunks' → logprob: -4.855874538421631
    4. '
' → logprob: -5.355874538421631
    5. 'def' → logprob: -5.355874538421631
    6. 'min' → logprob: -5.855874538421631
    7. '   ' → logprob: -6.480874538421631
    8. 'a' → logprob: -6.855874538421631
    9. ' result' → logprob: -6.980874538421631
    10. '_chunks' → logprob: -7.105874538421631

Token 1037: ' quantity' (ID: 17245)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.23836234211921692
    2. 'chunks' → logprob: -1.6133623123168945
    3. 'res' → logprob: -5.7383623123168945
    4. 'output' → logprob: -5.8633623123168945
    5. 'new' → logprob: -6.4883623123168945
    6. 'min' → logprob: -6.9883623123168945
    7. 'largest' → logprob: -7.2383623123168945
    8. '[]' → logprob: -7.4883623123168945
    9. 'units' → logprob: -8.363362312316895
    10. 'reg' → logprob: -8.363362312316895

Token 1038: ' to' (ID: 316)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.39690327644348145
    2. '=' → logprob: -1.3969032764434814
    3. ' =' → logprob: -3.3969032764434814
    4. '       ' → logprob: -3.8969032764434814
    5. 'as' → logprob: -4.271903038024902
    6. ' as' → logprob: -5.771903038024902
    7. 'units' → logprob: -6.396903038024902
    8. 'max' → logprob: -6.521903038024902
    9. '   ' → logprob: -6.646903038024902
    10. '=[]' → logprob: -7.896903038024902

Token 1039: ' zero' (ID: 12421)
  Prédit: 'be'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'be' → logprob: -1.2211425304412842
    2. 'use' → logprob: -1.8461425304412842
    3. 'max' → logprob: -2.221142530441284
    4. '1' → logprob: -2.596142530441284
    5. 'maximize' → logprob: -2.596142530441284
    6. 'Weight' → logprob: -2.721142530441284
    7. 'min' → logprob: -3.096142530441284
    8. 'the' → logprob: -3.471142530441284
    9. 'Quantity' → logprob: -3.471142530441284
    10. 'represent' → logprob: -3.971142530441284

Token 1040: ' (' (ID: 350)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.21126726269721985
    2. ' if' → logprob: -2.8362672328948975
    3. '       ' → logprob: -3.3362672328948975
    4. ',' → logprob: -3.4612672328948975
    5. 'if' → logprob: -3.8362672328948975
    6. '<|end|>' → logprob: -4.711267471313477
    7. ' and' → logprob: -4.836267471313477
    8. ',
' → logprob: -5.586267471313477
    9. ' or' → logprob: -5.711267471313477
    10. '#' → logprob: -5.836267471313477

Token 1041: 'storage' (ID: 34505)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.46116194128990173
    2. 'and' → logprob: -2.2111618518829346
    3. 'except' → logprob: -2.4611618518829346
    4. 'or' → logprob: -2.5861618518829346
    5. ' or' → logprob: -3.7111618518829346
    6. '#' → logprob: -4.086162090301514
    7. 'if' → logprob: -4.336162090301514
    8. '),' → logprob: -4.711162090301514
    9. ' and' → logprob: -4.961162090301514
    10. 'return' → logprob: -5.336162090301514

Token 1042: ' in' (ID: 306)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.2147226631641388
    2. 'units' → logprob: -3.0897226333618164
    3. ')' → logprob: -3.2147226333618164
    4. ' =' → logprob: -3.9647226333618164
    5. ',' → logprob: -4.214722633361816
    6. 's' → logprob: -4.714722633361816
    7. '#' → logprob: -4.839722633361816
    8. 'unit' → logprob: -5.214722633361816
    9. 'of' → logprob: -5.339722633361816
    10. 'and' → logprob: -5.589722633361816

Token 1043: ' one' (ID: 1001)
  Prédit: 'terms'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'terms' → logprob: -1.3919974565505981
    2. 'powers' → logprob: -2.1419973373413086
    3. 'units' → logprob: -2.2669973373413086
    4. 'base' → logprob: -2.5169973373413086
    5. 'weight' → logprob: -2.5169973373413086
    6. 'mar' → logprob: -2.7669973373413086
    7. 'Weight' → logprob: -2.8919973373413086
    8. 'the' → logprob: -3.1419973373413086
    9. 'chunks' → logprob: -3.2669973373413086
    10. 'power' → logprob: -3.5169973373413086

Token 1044: ' chunk' (ID: 23958)
  Prédit: 'chunk'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'chunk' → logprob: -0.07671595364809036
    2. 'unit' → logprob: -3.0767159461975098
    3. 'line' → logprob: -4.20171594619751
    4. 'or' → logprob: -6.20171594619751
    5. 'list' → logprob: -6.32671594619751
    6. 'All' → logprob: -6.70171594619751
    7. 'piece' → logprob: -6.82671594619751
    8. 'place' → logprob: -6.82671594619751
    9. ' chunk' → logprob: -7.32671594619751
    10. '#' → logprob: -7.57671594619751

Token 1045: '),
' (ID: 2313)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.48390036821365356
    2. '       ' → logprob: -2.233900308609009
    3. ',' → logprob: -2.608900308609009
    4. 'and' → logprob: -2.858900308609009
    5. ' and' → logprob: -3.108900308609009
    6. ' or' → logprob: -3.608900308609009
    7. 'or' → logprob: -4.108900547027588
    8. ')
' → logprob: -4.358900547027588
    9. '),' → logprob: -4.608900547027588
    10. ' at' → logprob: -4.983900547027588

Token 1046: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0073767309077084064
    2. '#' → logprob: -5.257376670837402
    3. 'and' → logprob: -6.882376670837402
    4. '   ' → logprob: -8.007376670837402
    5. '
' → logprob: -8.257376670837402
    6. ' and' → logprob: -8.632376670837402
    7. 'return' → logprob: -9.632376670837402
    8. '        
' → logprob: -9.882376670837402
    9. 'with' → logprob: -10.132376670837402
    10. '```' → logprob: -10.382376670837402

Token 1047: ' #' (ID: 1069)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' (adapté à ' #') → logprob: -0.23627294600009918
    2. '       ' → logprob: -1.611272931098938
    3. 'and' → logprob: -5.361272811889648
    4. ' and' → logprob: -6.736272811889648
    5. ' or' → logprob: -6.986272811889648
    6. 'or' → logprob: -7.111272811889648
    7. '```' → logprob: -7.111272811889648
    8. 'with' → logprob: -7.861272811889648
    9. 'return' → logprob: -7.986272811889648
    10. '   ' → logprob: -8.236272811889648

Token 1048: ' and' (ID: 326)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.07533231377601624
    2. 'result' → logprob: -3.7003324031829834
    3. 'chunks' → logprob: -3.7003324031829834
    4. '       ' → logprob: -3.9503324031829834
    5. 'if' → logprob: -7.075332164764404
    6. 'and' → logprob: -7.450332164764404
    7. '
' → logprob: -7.450332164764404
    8. 'remaining' → logprob: -7.825332164764404
    9. '   ' → logprob: -8.075332641601562
    10. 'tokens' → logprob: -8.700332641601562

Token 1049: ' set' (ID: 920)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.6402018070220947
    2. 'weight' → logprob: -1.0152018070220947
    3. 'return' → logprob: -2.3902018070220947
    4. 'chunks' → logprob: -5.765201568603516
    5. 'min' → logprob: -5.890201568603516
    6. 'create' → logprob: -6.265201568603516
    7. '       ' → logprob: -6.515201568603516
    8. 'use' → logprob: -6.640201568603516
    9. 'make' → logprob: -6.640201568603516
    10. 'weights' → logprob: -6.890201568603516

Token 1050: ' weight' (ID: 6049)
  Prédit: 'weight'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'weight' → logprob: -0.3139612674713135
    2. 'quantity' → logprob: -1.5639612674713135
    3. 'the' → logprob: -3.3139612674713135
    4. ' weight' → logprob: -4.688961029052734
    5. ' quantity' → logprob: -5.313961029052734
    6. 'self' → logprob: -5.688961029052734
    7. 'total' → logprob: -6.688961029052734
    8. ' the' → logprob: -6.813961029052734
    9. 'chunks' → logprob: -7.063961029052734
    10. '#' → logprob: -7.313961029052734

Token 1051: ' to' (ID: 316)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.31777527928352356
    2. ' =' → logprob: -1.3177752494812012
    3. ',' → logprob: -6.317775249481201
    4. 's' → logprob: -6.442775249481201
    5. '       ' → logprob: -8.44277572631836
    6. '   ' → logprob: -8.56777572631836
    7. '=
' → logprob: -8.56777572631836
    8. ' as' → logprob: -8.94277572631836
    9. '=None' → logprob: -9.31777572631836
    10. '=self' → logprob: -10.31777572631836

Token 1052: ' total' (ID: 3609)
  Prédit: 'Weight'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Weight' → logprob: -0.023384306579828262
    2. 'total' → logprob: -3.7733843326568604
    3. '1' → logprob: -10.023384094238281
    4. 'self' → logprob: -10.648384094238281
    5. ' Weight' → logprob: -10.773384094238281
    6. 'Quantity' → logprob: -11.023384094238281
    7. '0' → logprob: -12.148384094238281
    8. 'Total' → logprob: -12.148384094238281
    9. 'weight' → logprob: -12.148384094238281
    10. 'all' → logprob: -13.023384094238281

Token 1053: '_weight' (ID: 34711)
  Prédit: '_weight'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_weight' → logprob: -0.3262258470058441
    2. 'Weight' → logprob: -2.326225757598877
    3. '_unit' → logprob: -2.451225757598877
    4. 'Unit' → logprob: -3.076225757598877
    5. '_' → logprob: -3.326225757598877
    6. ' =' → logprob: -5.576225757598877
    7. '_
' → logprob: -5.701225757598877
    8. ',' → logprob: -6.326225757598877
    9. '=' → logprob: -7.326225757598877
    10. '_,' → logprob: -7.701225757598877

Token 1054: ',' (ID: 11)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.3538414537906647
    2. '       ' → logprob: -1.2288414239883423
    3. ',' → logprob: -6.728841304779053
    4. '        
' → logprob: -6.728841304779053
    5. ' if' → logprob: -6.728841304779053
    6. 'if' → logprob: -7.728841304779053
    7. '
' → logprob: -7.978841304779053
    8. '   ' → logprob: -8.978841781616211
    9. '```' → logprob: -8.978841781616211
    10. '

' → logprob: -9.103841781616211

Token 1055: ' quantity' (ID: 17245)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.20760798454284668
    2. 'return' → logprob: -1.8326079845428467
    3. 'which' → logprob: -5.457608222961426
    4. '
' → logprob: -5.582608222961426
    5. ' but' → logprob: -5.582608222961426
    6. 'but' → logprob: -5.832608222961426
    7. '#' → logprob: -6.707608222961426
    8. 'assuming' → logprob: -6.832608222961426
    9. 'and' → logprob: -6.957608222961426
    10. 'self' → logprob: -6.957608222961426

Token 1056: ' ' (ID: 220)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.1812860071659088
    2. ' =' → logprob: -1.8062859773635864
    3. 'Unit' → logprob: -7.431285858154297
    4. '1' → logprob: -7.806285858154297
    5. '0' → logprob: -8.931285858154297
    6. ',' → logprob: -9.306285858154297
    7. ':' → logprob: -9.806285858154297
    8. '   ' → logprob: -9.931285858154297
    9. ' ' → logprob: -10.056285858154297
    10. '(' → logprob: -10.806285858154297

Token 1057: '0' (ID: 15)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0007955700275488198
    2. 'Quantity' → logprob: -7.375795364379883
    3. 'Unit' → logprob: -10.000795364379883
    4. ' =' → logprob: -10.250795364379883
    5. 'Weight' → logprob: -10.750795364379883
    6. 'to' → logprob: -11.000795364379883
    7. '1' → logprob: -11.000795364379883
    8. '```' → logprob: -11.625795364379883
    9. '(' → logprob: -11.875795364379883
    10. 'def' → logprob: -12.000795364379883

Token 1058: ' (' (ID: 350)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.6043974757194519
    2. '       ' → logprob: -0.8543974757194519
    3. '<|end|>' → logprob: -4.229397296905518
    4. ' if' → logprob: -5.104397296905518
    5. 'if' → logprob: -5.729397296905518
    6. ',' → logprob: -6.229397296905518
    7. '        
' → logprob: -7.354397296905518
    8. '```' → logprob: -7.854397296905518
    9. '<|end|>' → logprob: -8.479397773742676
    10. '
' → logprob: -8.854397773742676

Token 1059: 'which' (ID: 13980)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.4709705710411072
    2. '#' → logprob: -1.970970630645752
    3. '0' → logprob: -2.470970630645752
    4. 'Quantity' → logprob: -3.470970630645752
    5. 'return' → logprob: -3.470970630645752
    6. 'except' → logprob: -3.970970630645752
    7. 'or' → logprob: -4.220970630645752
    8. ')
' → logprob: -4.720970630645752
    9. 'def' → logprob: -5.095970630645752
    10. 'assuming' → logprob: -5.345970630645752

Token 1060: ' corresponds' (ID: 66938)
  Prédit: 'is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'is' → logprob: -0.8558061718940735
    2. 'means' → logprob: -1.7308061122894287
    3. 'would' → logprob: -1.8558061122894287
    4. ' is' → logprob: -3.2308061122894287
    5. '#' → logprob: -3.3558061122894287
    6. 'may' → logprob: -3.7308061122894287
    7. 'should' → logprob: -3.7308061122894287
    8. 'cannot' → logprob: -3.7308061122894287
    9. 'might' → logprob: -3.7308061122894287
    10. 'def' → logprob: -4.355806350708008

Token 1061: ' to' (ID: 316)
  Prédit: ' to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' to' → logprob: -0.25433549284935
    2. 'to' → logprob: -1.5043355226516724
    3. '=' → logprob: -7.129335403442383
    4. '       ' → logprob: -7.379335403442383
    5. ')' → logprob: -7.879335403442383
    6. '
' → logprob: -8.379335403442383
    7. '0' → logprob: -9.129335403442383
    8. '```' → logprob: -9.629335403442383
    9. ',' → logprob: -10.004335403442383
    10. ' =' → logprob: -10.379335403442383

Token 1062: ' ' (ID: 220)
  Prédit: 'Quantity'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Quantity' → logprob: -0.06364885717630386
    2. 'Weight' → logprob: -2.8136489391326904
    3. '1' → logprob: -6.938648700714111
    4. 'quantity' → logprob: -8.06364917755127
    5. '0' → logprob: -8.81364917755127
    6. 'all' → logprob: -9.81364917755127
    7. 'one' → logprob: -9.93864917755127
    8. 'weight' → logprob: -10.43864917755127
    9. 'zero' → logprob: -10.56364917755127
    10. '#' → logprob: -11.31364917755127

Token 1063: '1' (ID: 16)
  Prédit: 'Quantity'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Quantity' → logprob: -0.05998064950108528
    2. 'Weight' → logprob: -2.934980630874634
    3. '1' → logprob: -5.559980869293213
    4. '0' → logprob: -6.809980869293213
    5. 'quantity' → logprob: -9.934980392456055
    6. 'self' → logprob: -10.684980392456055
    7. 'None' → logprob: -11.184980392456055
    8. 'zero' → logprob: -11.809980392456055
    9. ' Quantity' → logprob: -12.059980392456055
    10. 'weight' → logprob: -12.184980392456055

Token 1064: ' item' (ID: 2169)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.01049330085515976
    2. ')
' → logprob: -5.135493278503418
    3. ' )' → logprob: -6.385493278503418
    4. ',' → logprob: -7.260493278503418
    5. '),' → logprob: -7.260493278503418
    6. ').' → logprob: -8.010493278503418
    7. '
' → logprob: -8.010493278503418
    8. '))' → logprob: -9.010493278503418
    9. ')]' → logprob: -9.385493278503418
    10. ')...' → logprob: -9.635493278503418

Token 1065: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.39190414547920227
    2. '
' → logprob: -2.89190411567688
    3. '       ' → logprob: -2.89190411567688
    4. ').' → logprob: -2.89190411567688
    5. ')
' → logprob: -3.39190411567688
    6. '),' → logprob: -3.89190411567688
    7. 'Unit' → logprob: -3.89190411567688
    8. '   ' → logprob: -4.391904354095459
    9. ',' → logprob: -4.391904354095459
    10. ')?' → logprob: -5.266904354095459

Token 1066: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.005069618113338947
    2. '   ' → logprob: -6.130069732666016
    3. ')' → logprob: -7.005069732666016
    4. ',' → logprob: -7.630069732666016
    5. '
' → logprob: -8.005069732666016
    6. '<|end|>' → logprob: -8.255069732666016
    7. '[' → logprob: -8.755069732666016
    8. '#' → logprob: -9.005069732666016
    9. '```' → logprob: -9.880069732666016
    10. '        
' → logprob: -10.005069732666016

Token 1067: ' #' (ID: 1069)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.5302739143371582
    2. '       ' → logprob: -1.5302739143371582
    3. 'chunks' → logprob: -2.405273914337158
    4. 'result' → logprob: -3.155273914337158
    5. 'return' → logprob: -3.655273914337158
    6. '#' (adapté à ' #') → logprob: -4.030273914337158
    7. 'weight' → logprob: -4.655273914337158
    8. 'quantity' → logprob: -6.155273914337158
    9. 'remaining' → logprob: -6.780273914337158
    10. 'rest' → logprob: -7.155273914337158

Token 1068: ' We' (ID: 1416)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.1030714213848114
    2. 'chunks' → logprob: -3.228071451187134
    3. 'result' → logprob: -3.978071451187134
    4. 'min' → logprob: -4.103071212768555
    5. '#' → logprob: -4.603071212768555
    6. 'quantity' → logprob: -5.853071212768555
    7. 'weight' → logprob: -5.978071212768555
    8. '   ' → logprob: -6.603071212768555
    9. 'from' → logprob: -6.853071212768555
    10. 'max' → logprob: -7.353071212768555

Token 1069: ' must' (ID: 2804)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.7027602195739746
    2. 'return' → logprob: -1.5777602195739746
    3. 'def' → logprob: -1.9527602195739746
    4. '#' → logprob: -3.3277602195739746
    5. '   ' → logprob: -3.7027602195739746
    6. 'can' → logprob: -3.7027602195739746
    7. 'need' → logprob: -4.327760219573975
    8. 'should' → logprob: -4.577760219573975
    9. 'cannot' → logprob: -4.827760219573975
    10. '```' → logprob: -4.952760219573975

Token 1070: ' convert' (ID: 8452)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.19057419896125793
    2. 'if' → logprob: -2.8155741691589355
    3. 'find' → logprob: -2.9405741691589355
    4. 'handle' → logprob: -3.8155741691589355
    5. 'create' → logprob: -4.5655741691589355
    6. 'consider' → logprob: -4.9405741691589355
    7. 'det' → logprob: -5.0655741691589355
    8. 'convert' → logprob: -5.5655741691589355
    9. '#' → logprob: -5.5655741691589355
    10. 'continue' → logprob: -6.4405741691589355

Token 1071: ' total' (ID: 3609)
  Prédit: 'Weight'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Weight' → logprob: -0.00991356372833252
    2. 'return' → logprob: -5.884913444519043
    3. ' Weight' → logprob: -5.884913444519043
    4. 'from' → logprob: -6.259913444519043
    5. 'weight' → logprob: -7.134913444519043
    6. 'total' → logprob: -7.509913444519043
    7. 'Quantity' → logprob: -8.259913444519043
    8. 'all' → logprob: -8.634913444519043
    9. 'Unit' → logprob: -8.759913444519043
    10. 'All' → logprob: -9.009913444519043

Token 1072: '_weight' (ID: 34711)
  Prédit: '_weight'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_weight' → logprob: -0.010304301977157593
    2. 'weight' → logprob: -4.6353044509887695
    3. '_units' → logprob: -9.26030445098877
    4. '_chunks' → logprob: -9.38530445098877
    5. '_quantity' → logprob: -9.51030445098877
    6. '_unit' → logprob: -9.63530445098877
    7. 'Weight' → logprob: -9.63530445098877
    8. '_weights' → logprob: -9.76030445098877
    9. '_b' → logprob: -10.63530445098877
    10. 'chunks' → logprob: -10.76030445098877

Token 1073: ' (' (ID: 350)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -1.1038576364517212
    2. '_weight' → logprob: -1.6038576364517212
    3. '_units' → logprob: -2.2288575172424316
    4. ' =' → logprob: -2.6038575172424316
    5. 'to' → logprob: -2.9788575172424316
    6. ',' → logprob: -3.4788575172424316
    7. '_unit' → logprob: -3.6038575172424316
    8. 'into' → logprob: -3.7288575172424316
    9. '_to' → logprob: -3.8538575172424316
    10. 'from' → logprob: -3.9788575172424316

Token 1074: 'grams' (ID: 134567)
  Prédit: 'total'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'total' → logprob: -0.07471101731061935
    2. ')' → logprob: -3.1997110843658447
    3. 'Weight' → logprob: -5.074710845947266
    4. 'to' → logprob: -5.074710845947266
    5. 'int' → logprob: -5.449710845947266
    6. '0' → logprob: -6.199710845947266
    7. '
' → logprob: -6.324710845947266
    8. ' )' → logprob: -6.824710845947266
    9. 'into' → logprob: -6.824710845947266
    10. ' total' → logprob: -6.949710845947266

Token 1075: ' in' (ID: 306)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.14002303779125214
    2. '=' → logprob: -2.6400229930877686
    3. '//' → logprob: -4.140023231506348
    4. ' to' → logprob: -4.765023231506348
    5. ',' → logprob: -4.890023231506348
    6. 'to' → logprob: -5.015023231506348
    7. ' //' → logprob: -5.140023231506348
    8. '       ' → logprob: -5.640023231506348
    9. ' )' → logprob: -6.140023231506348
    10. ' into' → logprob: -6.265023231506348

Token 1076: ' bok' (ID: 35768)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.6813378930091858
    2. 'bok' → logprob: -1.056337833404541
    3. 'Weight' → logprob: -2.556337833404541
    4. 'self' → logprob: -3.681337833404541
    5. 'base' → logprob: -3.931337833404541
    6. '1' → logprob: -4.806337833404541
    7. '```' → logprob: -6.056337833404541
    8. 'int' → logprob: -6.556337833404541
    9. 'total' → logprob: -6.556337833404541
    10. 'b' → logprob: -6.556337833404541

Token 1077: 'ko' (ID: 3593)
  Prédit: 'ko'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ko' → logprob: -0.00035572313936427236
    2. 'k' → logprob: -8.12535572052002
    3. 'ко' → logprob: -11.25035572052002
    4. 'o' → logprob: -11.37535572052002
    5. '```' → logprob: -11.62535572052002
    6. ' ko' → logprob: -11.87535572052002
    7. '`' → logprob: -12.75035572052002
    8. '   ' → logprob: -13.00035572052002
    9. '       ' → logprob: -13.37535572052002
    10. 'bo' → logprob: -13.62535572052002

Token 1078: ' units' (ID: 13306)
  Prédit: 'units'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'units' → logprob: -0.11604240536689758
    2. ' units' → logprob: -2.866042375564575
    3. ')' → logprob: -2.991042375564575
    4. 'unit' → logprob: -6.616042613983154
    5. '=' → logprob: -8.491042137145996
    6. '_units' → logprob: -8.741042137145996
    7. 's' → logprob: -8.741042137145996
    8. ' )' → logprob: -8.991042137145996
    9. ' unit' → logprob: -9.366042137145996
    10. ')
' → logprob: -9.866042137145996

Token 1079: ' *' (ID: 425)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.06243457645177841
    2. '//' → logprob: -3.312434673309326
    3. ',' → logprob: -4.812434673309326
    4. ' //' → logprob: -4.937434673309326
    5. ' )' → logprob: -5.812434673309326
    6. ')
' → logprob: -6.437434673309326
    7. '       ' → logprob: -6.812434673309326
    8. ' to' → logprob: -7.437434673309326
    9. '+' → logprob: -7.562434673309326
    10. '   ' → logprob: -7.937434673309326

Token 1080: ' mar' (ID: 2674)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.6950350999832153
    2. 'quantity' → logprob: -0.8200350999832153
    3. 'Quantity' → logprob: -4.195034980773926
    4. ' quantity' → logprob: -4.570034980773926
    5. 'mar' → logprob: -5.070034980773926
    6. 'quant' → logprob: -5.445034980773926
    7. 'items' → logprob: -5.570034980773926
    8. 'weight' → logprob: -5.570034980773926
    9. 'total' → logprob: -5.695034980773926
    10. ' ' → logprob: -5.820034980773926

Token 1081: 'ugu' (ID: 8060)
  Prédit: 'ugu'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ugu' → logprob: -0.0026194164529442787
    2. 'gu' → logprob: -6.37761926651001
    3. '```' → logprob: -8.377619743347168
    4. 'гу' → logprob: -9.002619743347168
    5. 'uku' → logprob: -10.127619743347168
    6. '=' → logprob: -10.127619743347168
    7. '1' → logprob: -10.252619743347168
    8. 'く' → logprob: -10.377619743347168
    9. 'угу' → logprob: -10.502619743347168
    10. '`' → logprob: -10.752619743347168

Token 1082: ' counts' (ID: 28991)
  Prédit: 'units'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'units' → logprob: -0.9601085186004639
    2. 's' → logprob: -1.3351085186004639
    3. ')' → logprob: -2.085108518600464
    4. ' units' → logprob: -2.460108518600464
    5. '_units' → logprob: -2.960108518600464
    6. '=' → logprob: -3.585108518600464
    7. '(' → logprob: -4.460108757019043
    8. '1' → logprob: -4.835108757019043
    9. '.units' → logprob: -4.960108757019043
    10. ' =' → logprob: -5.335108757019043

Token 1083: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.032675739377737045
    2. '+' → logprob: -4.782675743103027
    3. ' )' → logprob: -5.157675743103027
    4. '**' → logprob: -5.407675743103027
    5. ',' → logprob: -5.907675743103027
    6. '=' → logprob: -6.032675743103027
    7. 'to' → logprob: -6.657675743103027
    8. '//' → logprob: -7.032675743103027
    9. ' +' → logprob: -7.157675743103027
    10. ' to' → logprob: -7.282675743103027

Token 1084: ' into' (ID: 1511)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.267839640378952
    2. '#' → logprob: -2.7678396701812744
    3. '
' → logprob: -2.7678396701812744
    4. '```' → logprob: -3.8928396701812744
    5. '        
' → logprob: -4.017839431762695
    6. 'from' → logprob: -4.142839431762695
    7. 'def' → logprob: -4.892839431762695
    8. 'weight' → logprob: -5.017839431762695
    9. '=' → logprob: -5.517839431762695
    10. ',' → logprob: -5.767839431762695

Token 1085: ' (' (ID: 350)
  Prédit: 'chunks'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'chunks' → logprob: -0.7677963376045227
    2. 'a' → logprob: -1.517796277999878
    3. 'Weight' → logprob: -2.517796277999878
    4. '#' → logprob: -2.767796277999878
    5. 'All' → logprob: -2.892796277999878
    6. 'minimal' → logprob: -3.767796277999878
    7. 'weight' → logprob: -4.267796516418457
    8. '[' → logprob: -4.517796516418457
    9. 'the' → logprob: -4.642796516418457
    10. 'Quantity' → logprob: -4.767796516418457

Token 1086: 'bok' (ID: 89729)
  Prédit: 'weight'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'weight' → logprob: -0.7474143505096436
    2. 'Weight' → logprob: -1.1224143505096436
    3. 'chunks' → logprob: -1.9974143505096436
    4. 'a' → logprob: -3.7474143505096436
    5. 'All' → logprob: -4.497414588928223
    6. '#' → logprob: -4.872414588928223
    7. 'weights' → logprob: -5.747414588928223
    8. ')' → logprob: -5.997414588928223
    9. 'all' → logprob: -6.247414588928223
    10. '[' → logprob: -6.247414588928223

Token 1087: 'ko' (ID: 3593)
  Prédit: 'ko'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ko' → logprob: -0.0001593195047462359
    2. 'k' → logprob: -9.50015926361084
    3. 'ко' → logprob: -10.12515926361084
    4. '```' → logprob: -10.75015926361084
    5. '
' → logprob: -11.87515926361084
    6. ' ko' → logprob: -12.75015926361084
    7. '   ' → logprob: -12.87515926361084
    8. '       ' → logprob: -13.12515926361084
    9. '`' → logprob: -13.37515926361084
    10. 'ku' → logprob: -13.75015926361084

Token 1088: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.040578484535217285
    2. 'units' → logprob: -4.040578365325928
    3. ' ,' → logprob: -4.290578365325928
    4. '=' → logprob: -6.665578365325928
    5. '_units' → logprob: -6.915578365325928
    6. ',
' → logprob: -6.915578365325928
    7. ' units' → logprob: -7.040578365325928
    8. 's' → logprob: -7.540578365325928
    9. 'unit' → logprob: -7.665578365325928
    10. ')' → logprob: -7.790578365325928

Token 1089: ' mar' (ID: 2674)
  Prédit: 'mar'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mar' → logprob: -0.1612631380558014
    2. '1' → logprob: -2.2862632274627686
    3. '0' → logprob: -3.2862632274627686
    4. ' mar' → logprob: -4.9112629890441895
    5. ' ' → logprob: -6.2862629890441895
    6. 'quantity' → logprob: -8.411263465881348
    7. ')' → logprob: -9.161263465881348
    8. '
' → logprob: -9.411263465881348
    9. '```' → logprob: -9.661263465881348
    10. ' quantity' → logprob: -10.161263465881348

Token 1090: 'ugu' (ID: 8060)
  Prédit: 'ugu'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ugu' → logprob: -0.00015943869948387146
    2. 'gu' → logprob: -9.62515926361084
    3. '```' → logprob: -11.12515926361084
    4. 'ugo' → logprob: -11.25015926361084
    5. 'uku' → logprob: -11.62515926361084
    6. '1' → logprob: -11.62515926361084
    7. 'угу' → logprob: -12.00015926361084
    8. 'g' → logprob: -12.37515926361084
    9. 'u' → logprob: -12.50015926361084
    10. '0' → logprob: -12.75015926361084

Token 1091: ').

' (ID: 3991)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.41838908195495605
    2. ')
' → logprob: -1.543389081954956
    3. 'units' → logprob: -2.918389081954956
    4. '=' → logprob: -4.168389320373535
    5. ',' → logprob: -4.293389320373535
    6. '_units' → logprob: -4.543389320373535
    7. '):' → logprob: -5.168389320373535
    8. '):
' → logprob: -5.543389320373535
    9. 's' → logprob: -5.668389320373535
    10. '0' → logprob: -5.918389320373535

Token 1092: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.17122812569141388
    2. '
' → logprob: -2.1712281703948975
    3. '#' → logprob: -4.546227931976318
    4. 'import' → logprob: -5.421227931976318
    5. 'weight' → logprob: -5.671227931976318
    6. 'if' → logprob: -5.921227931976318
    7. 'result' → logprob: -6.046227931976318
    8. 'x' → logprob: -6.171227931976318
    9. '        
' → logprob: -6.171227931976318
    10. '```' → logprob: -6.546227931976318

Token 1093: ' #' (ID: 1069)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.19917191565036774
    2. 'chunks' → logprob: -2.449172019958496
    3. '       ' → logprob: -2.949172019958496
    4. '#' (adapté à ' #') → logprob: -3.699172019958496
    5. 'res' → logprob: -5.199172019958496
    6. 'results' → logprob: -6.074172019958496
    7. '
' → logprob: -6.199172019958496
    8. 'mar' → logprob: -6.699172019958496
    9. 'new' → logprob: -6.824172019958496
    10. 're' → logprob: -7.199172019958496

Token 1094: ' Based' (ID: 27067)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.3337740898132324
    2. 'chunks' → logprob: -1.5837740898132324
    3. '#' → logprob: -3.2087740898132324
    4. 'res' → logprob: -4.583774089813232
    5. 'min' → logprob: -4.708774089813232
    6. 'mar' → logprob: -5.458774089813232
    7. '   ' → logprob: -5.833774089813232
    8. 'reg' → logprob: -5.958774089813232
    9. 'results' → logprob: -6.208774089813232
    10. 'if' → logprob: -6.458774089813232

Token 1095: ' on' (ID: 402)
  Prédit: 'on'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'on' → logprob: -0.044544342905282974
    2. ' on' → logprob: -3.1695444583892822
    3. '       ' → logprob: -7.044544219970703
    4. '=' → logprob: -7.669544219970703
    5. '           ' → logprob: -10.669544219970703
    6. '   ' → logprob: -10.669544219970703
    7. 'from' → logprob: -10.794544219970703
    8. 'ont' → logprob: -11.044544219970703
    9. '#' → logprob: -11.044544219970703
    10. 'import' → logprob: -11.294544219970703

Token 1096: ' problem' (ID: 4792)
  Prédit: 'the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'the' → logprob: -0.3704361021518707
    2. 'div' → logprob: -1.6204360723495483
    3. '#' → logprob: -2.745436191558838
    4. 'def' → logprob: -3.620436191558838
    5. 'problem' → logprob: -5.245436191558838
    6. 'total' → logprob: -5.745436191558838
    7. 'binary' → logprob: -5.745436191558838
    8. 'bin' → logprob: -6.120436191558838
    9. '```' → logprob: -6.995436191558838
    10. 'mat' → logprob: -7.120436191558838

Token 1097: ' statement' (ID: 9710)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.1467864513397217
    2. '#' → logprob: -1.5217864513397217
    3. '
' → logprob: -2.0217864513397217
    4. '   ' → logprob: -2.5217864513397217
    5. 'def' → logprob: -2.5217864513397217
    6. '#
' → logprob: -2.7717864513397217
    7. '```' → logprob: -4.146786689758301
    8. ':' → logprob: -4.271786689758301
    9. 'weight' → logprob: -4.271786689758301
    10. ':
' → logprob: -4.771786689758301

Token 1098: ',
' (ID: 412)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.5761509537696838
    2. '#' → logprob: -1.701150894165039
    3. '       ' → logprob: -1.951150894165039
    4. 'def' → logprob: -3.576150894165039
    5. '   ' → logprob: -3.951150894165039
    6. 'chunks' → logprob: -4.451150894165039
    7. 'for' → logprob: -4.576150894165039
    8. 'if' → logprob: -4.826150894165039
    9. '        
' → logprob: -5.076150894165039
    10. 'result' → logprob: -5.201150894165039

Token 1099: '       ' (ID: 309)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.4714508056640625
    2. '       ' → logprob: -1.4714508056640625
    3. 'result' → logprob: -2.3464508056640625
    4. 'def' → logprob: -4.8464508056640625
    5. 'chunks' → logprob: -4.8464508056640625
    6. 'x' → logprob: -4.9714508056640625
    7. 'res' → logprob: -5.3464508056640625
    8. 'import' → logprob: -5.4714508056640625
    9. 'rest' → logprob: -6.0964508056640625
    10. '
' → logprob: -6.0964508056640625

Token 1100: ' #' (ID: 1069)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' (adapté à ' #') → logprob: -0.7833365201950073
    2. 'if' → logprob: -0.9083365201950073
    3. 'result' → logprob: -3.533336639404297
    4. 'x' → logprob: -3.658336639404297
    5. '       ' → logprob: -3.783336639404297
    6. 'def' → logprob: -3.908336639404297
    7. 'weight' → logprob: -5.283336639404297
    8. 'import' → logprob: -5.283336639404297
    9. 'chunks' → logprob: -5.283336639404297
    10. '   ' → logprob: -5.408336639404297

Token 1101: ' The' (ID: 623)
  Prédit: 'chunks'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'chunks' → logprob: -0.8190004825592041
    2. '#' → logprob: -1.569000482559204
    3. 'result' → logprob: -1.694000482559204
    4. 'res' → logprob: -3.069000482559204
    5. 'min' → logprob: -3.069000482559204
    6. 'if' → logprob: -3.444000482559204
    7. '   ' → logprob: -5.069000244140625
    8. 'mar' → logprob: -5.069000244140625
    9. 'def' → logprob: -5.319000244140625
    10. 'y' → logprob: -5.569000244140625

Token 1102: ' '' (ID: 461)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.6954458355903625
    2. '#' → logprob: -1.6954457759857178
    3. 'chunks' → logprob: -1.8204457759857178
    4. 'def' → logprob: -3.3204457759857178
    5. 'res' → logprob: -3.5704457759857178
    6. 'mar' → logprob: -3.6954457759857178
    7. 'min' → logprob: -4.070446014404297
    8. 'weight' → logprob: -4.945446014404297
    9. 'if' → logprob: -5.445446014404297
    10. 'next' → logprob: -5.695446014404297

Token 1103: 'mar' (ID: 8185)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -1.4800688028335571
    2. '#' → logprob: -1.7300688028335571
    3. 'mar' → logprob: -1.8550688028335571
    4. 'weight' → logprob: -2.4800686836242676
    5. 'remaining' → logprob: -2.4800686836242676
    6. 'min' → logprob: -3.3550686836242676
    7. 'if' → logprob: -3.4800686836242676
    8. 'import' → logprob: -3.7300686836242676
    9. 'div' → logprob: -3.7300686836242676
    10. 'while' → logprob: -3.8550686836242676

Token 1104: 'ugu' (ID: 8060)
  Prédit: 'ugu'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ugu' → logprob: -0.038542866706848145
    2. 'gu' → logprob: -3.2885427474975586
    3. 'g' → logprob: -8.663542747497559
    4. '```' → logprob: -9.413542747497559
    5. '   ' → logprob: -10.288542747497559
    6. '
' → logprob: -10.538542747497559
    7. ' ' → logprob: -10.788542747497559
    8. 'гу' → logprob: -10.788542747497559
    9. '_gu' → logprob: -10.913542747497559
    10. '       ' → logprob: -11.038542747497559

Token 1105: ''' (ID: 6)
  Prédit: '_units'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_units' → logprob: -0.995397686958313
    2. ''' → logprob: -1.495397686958313
    3. '_count' → logprob: -1.495397686958313
    4. '_unit' → logprob: -2.3703975677490234
    5. 's' → logprob: -3.7453975677490234
    6. ' =' → logprob: -3.9953975677490234
    7. '_size' → logprob: -4.870397567749023
    8. 'count' → logprob: -5.245397567749023
    9. '_quantity' → logprob: -5.745397567749023
    10. '_counts' → logprob: -5.745397567749023

Token 1106: ' unit' (ID: 7670)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.4593439996242523
    2. '_units' → logprob: -1.8343440294265747
    3. '=' → logprob: -2.334343910217285
    4. '_count' → logprob: -3.334343910217285
    5. 'units' → logprob: -3.959343910217285
    6. '_unit' → logprob: -4.584343910217285
    7. 'count' → logprob: -4.584343910217285
    8. ',' → logprob: -4.834343910217285
    9. 's' → logprob: -5.209343910217285
    10. 'unit' → logprob: -5.709343910217285

Token 1107: ' is' (ID: 382)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5485765337944031
    2. ' =' → logprob: -1.0485765933990479
    3. ' is' → logprob: -3.923576593399048
    4. 's' → logprob: -4.673576354980469
    5. ' can' → logprob: -5.298576354980469
    6. 'is' → logprob: -5.298576354980469
    7. 'can' → logprob: -5.423576354980469
    8. 'count' → logprob: -5.548576354980469
    9. ',' → logprob: -5.923576354980469
    10. '=
' → logprob: -6.048576354980469

Token 1108: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.02584954723715782
    2. '1' → logprob: -4.025849342346191
    3. 'total' → logprob: -6.275849342346191
    4. 'int' → logprob: -6.400849342346191
    5. 'the' → logprob: -6.775849342346191
    6. 'max' → logprob: -7.150849342346191
    7. '(' → logprob: -8.025849342346191
    8. 'a' → logprob: -8.150849342346191
    9. 'Quantity' → logprob: -8.400849342346191
    10. '
' → logprob: -8.525849342346191

Token 1109: '2' (ID: 17)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.018415993079543114
    2. 'Quantity' → logprob: -4.893415927886963
    3. 'int' → logprob: -5.393415927886963
    4. '1' → logprob: -5.643415927886963
    5. '
' → logprob: -7.393415927886963
    6. 'the' → logprob: -7.643415927886963
    7. 'Weight' → logprob: -7.768415927886963
    8. 'max' → logprob: -7.768415927886963
    9. '(' → logprob: -9.018416404724121
    10. 'mar' → logprob: -9.018416404724121

Token 1110: '^' (ID: 61)
  Prédit: '**'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '**' → logprob: -0.4138566851615906
    2. ' **' → logprob: -1.1638567447662354
    3. '^' → logprob: -4.538856506347656
    4. ''s' → logprob: -4.663856506347656
    5. ' ' → logprob: -6.663856506347656
    6. '```' → logprob: -6.788856506347656
    7. '
' → logprob: -7.163856506347656
    8. ',' → logprob: -7.663856506347656
    9. ' *' → logprob: -8.038856506347656
    10. ''' → logprob: -8.288856506347656

Token 1111: 'y' (ID: 88)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.009337624534964561
    2. 'mar' → logprob: -5.634337425231934
    3. 'x' → logprob: -6.384337425231934
    4. 'y' → logprob: -6.884337425231934
    5. 'self' → logprob: -7.009337425231934
    6. '
' → logprob: -7.759337425231934
    7. '(' → logprob: -7.759337425231934
    8. '```' → logprob: -8.259337425231934
    9. ' ' → logprob: -8.509337425231934
    10. 'quantity' → logprob: -9.134337425231934

Token 1112: ' items' (ID: 4732)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.9107102155685425
    2. ',' → logprob: -1.9107102155685425
    3. '0' → logprob: -2.285710334777832
    4. 'mar' → logprob: -3.035710334777832
    5. '```' → logprob: -3.035710334777832
    6. 'y' → logprob: -3.535710334777832
    7. '#' → logprob: -3.535710334777832
    8. ' (' → logprob: -3.910710334777832
    9. ' ' → logprob: -4.160710334777832
    10. ',
' → logprob: -4.535710334777832

Token 1113: '.
' (ID: 558)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2742370069026947
    2. '
' → logprob: -1.649237036705017
    3. 'def' → logprob: -4.149237155914307
    4. '#' → logprob: -4.524237155914307
    5. '        
' → logprob: -5.274237155914307
    6. '```' → logprob: -5.649237155914307
    7. ',' → logprob: -6.024237155914307
    8. 'import' → logprob: -6.399237155914307
    9. '   ' → logprob: -6.899237155914307
    10. 'from' → logprob: -7.024237155914307

Token 1114: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.06123049557209015
    2. '#' → logprob: -3.436230421066284
    3. 'y' → logprob: -3.936230421066284
    4. '```' → logprob: -6.311230659484863
    5. 'x' → logprob: -7.186230659484863
    6. ' y' → logprob: -7.436230659484863
    7. 'tokens' → logprob: -7.561230659484863
    8. '
' → logprob: -7.686230659484863
    9. '   ' → logprob: -7.811230659484863
    10. 'for' → logprob: -7.936230659484863

Token 1115: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.9128172397613525
    2. '#' (adapté à ' #') → logprob: -1.6628172397613525
    3. 'chunks' → logprob: -1.6628172397613525
    4. 'result' → logprob: -1.9128172397613525
    5. 'res' → logprob: -3.7878172397613525
    6. '```' → logprob: -4.162817001342773
    7. 'y' → logprob: -4.662817001342773
    8. 'results' → logprob: -5.662817001342773
    9. 'tokens' → logprob: -5.662817001342773
    10. '
' → logprob: -5.912817001342773

Token 1116: ' We' (ID: 1416)
  Prédit: 'chunks'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'chunks' → logprob: -0.8876409530639648
    2. 'result' → logprob: -1.3876409530639648
    3. '       ' → logprob: -2.137640953063965
    4. '#' → logprob: -2.262640953063965
    5. 'import' → logprob: -3.762640953063965
    6. '
' → logprob: -3.762640953063965
    7. 'res' → logprob: -3.887640953063965
    8. 'y' → logprob: -4.512640953063965
    9. 'min' → logprob: -5.012640953063965
    10. '```' → logprob: -5.137640953063965

Token 1117: ' want' (ID: 1682)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.2964291274547577
    2. 'import' → logprob: -2.42142915725708
    3. 'should' → logprob: -3.42142915725708
    4. ' =' → logprob: -3.54642915725708
    5. '#' → logprob: -3.67142915725708
    6. '=' → logprob: -4.04642915725708
    7. '   ' → logprob: -4.29642915725708
    8. ' should' → logprob: -4.67142915725708
    9. ' def' → logprob: -4.92142915725708
    10. 'need' → logprob: -5.04642915725708

Token 1118: ' to' (ID: 316)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.6737844944000244
    2. '0' → logprob: -2.1737844944000244
    3. '       ' → logprob: -2.1737844944000244
    4. 'def' → logprob: -2.5487844944000244
    5. '
' → logprob: -3.4237844944000244
    6. 'total' → logprob: -3.5487844944000244
    7. 'x' → logprob: -3.9237844944000244
    8. 'to' → logprob: -3.9237844944000244
    9. '[]
' → logprob: -4.298784255981445
    10. '#' → logprob: -4.673784255981445

Token 1119: ' find' (ID: 1646)
  Prédit: 'find'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'find' → logprob: -0.7102025151252747
    2. 'min' → logprob: -1.7102024555206299
    3. 'mar' → logprob: -2.71020245552063
    4. '#' → logprob: -3.08520245552063
    5. 'de' → logprob: -3.33520245552063
    6. 'import' → logprob: -3.46020245552063
    7. 'def' → logprob: -3.71020245552063
    8. 'choose' → logprob: -4.085202693939209
    9. 'from' → logprob: -4.210202693939209
    10. 'chunks' → logprob: -4.210202693939209

Token 1120: ' x' (ID: 1215)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.38128912448883057
    2. 'the' → logprob: -2.006289005279541
    3. ' y' → logprob: -2.631289005279541
    4. ' the' → logprob: -3.506289005279541
    5. 'mar' → logprob: -3.506289005279541
    6. 'total' → logprob: -4.506289005279541
    7. 'max' → logprob: -5.006289005279541
    8. 'x' → logprob: -5.131289005279541
    9. 'def' → logprob: -5.631289005279541
    10. '2' → logprob: -5.631289005279541

Token 1121: ',y' (ID: 16103)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3015477955341339
    2. '=' → logprob: -1.4265477657318115
    3. '0' → logprob: -5.051548004150391
    4. ',' → logprob: -5.176548004150391
    5. '
' → logprob: -6.426548004150391
    6. 'y' → logprob: -6.926548004150391
    7. 'import' → logprob: -6.926548004150391
    8. '#' → logprob: -7.301548004150391
    9. ' ' → logprob: -7.301548004150391
    10. 'for' → logprob: -7.676548004150391

Token 1122: ' such' (ID: 2238)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.6643759608268738
    2. ' =' → logprob: -1.1643760204315186
    3. '=' → logprob: -3.1643760204315186
    4. '#' → logprob: -3.2893760204315186
    5. ' for' → logprob: -4.0393757820129395
    6. ' where' → logprob: -4.2893757820129395
    7. ',' → logprob: -4.5393757820129395
    8. 'import' → logprob: -4.5393757820129395
    9. 'for' → logprob: -4.9143757820129395
    10. ' #' → logprob: -5.9143757820129395

Token 1123: ' that' (ID: 484)
  Prédit: ' such'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' such' → logprob: -0.7543075084686279
    2. 'that' → logprob: -1.754307508468628
    3. ' that' → logprob: -2.004307508468628
    4. '=' → logprob: -2.254307508468628
    5. 'such' → logprob: -2.379307508468628
    6. ' =' → logprob: -4.254307746887207
    7. ' so' → logprob: -5.879307746887207
    8. ' in' → logprob: -6.129307746887207
    9. 'in' → logprob: -6.379307746887207
    10. ',' → logprob: -6.629307746887207

Token 1124: ' ' (ID: 220)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.5787817239761353
    2. 'total' → logprob: -1.0787817239761353
    3. 'y' → logprob: -3.5787816047668457
    4. '2' → logprob: -3.7037816047668457
    5. '(total' → logprob: -4.203781604766846
    6. 'weight' → logprob: -4.578781604766846
    7. '1' → logprob: -4.828781604766846
    8. 'while' → logprob: -5.578781604766846
    9. '#' → logprob: -6.578781604766846
    10. '(x' → logprob: -6.578781604766846

Token 1125: '2' (ID: 17)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.6573938131332397
    2. 'total' → logprob: -1.1573938131332397
    3. '(total' → logprob: -2.4073939323425293
    4. '(x' → logprob: -3.7823939323425293
    5. 'weight' → logprob: -4.032393932342529
    6. '2' → logprob: -4.532393932342529
    7. '#' → logprob: -4.657393932342529
    8. '(' → logprob: -5.032393932342529
    9. 'y' → logprob: -5.782393932342529
    10. '1' → logprob: -6.532393932342529

Token 1126: '^' (ID: 61)
  Prédit: '**'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '**' → logprob: -0.0038182490970939398
    2. ' **' → logprob: -5.753818035125732
    3. '^' → logprob: -7.753818035125732
    4. '**
' → logprob: -10.00381851196289
    5. 'y' → logprob: -10.25381851196289
    6. '```' → logprob: -10.50381851196289
    7. 'x' → logprob: -11.12881851196289
    8. '**,' → logprob: -11.50381851196289
    9. 'total' → logprob: -11.75381851196289
    10. '0' → logprob: -11.87881851196289

Token 1127: 'x' (ID: 87)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.5096801519393921
    2. 'x' → logprob: -1.009680151939392
    3. '(x' → logprob: -5.009680271148682
    4. '```' → logprob: -5.634680271148682
    5. '(y' → logprob: -5.759680271148682
    6. '0' → logprob: -5.759680271148682
    7. '<|end|>' → logprob: -6.384680271148682
    8. '
' → logprob: -6.384680271148682
    9. ',' → logprob: -6.509680271148682
    10. '#' → logprob: -6.634680271148682

Token 1128: ' *' (ID: 425)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.37459680438041687
    2. ',y' → logprob: -2.6245968341827393
    3. '**' → logprob: -2.7495968341827393
    4. '*' → logprob: -2.9995968341827393
    5. '<|end|>' → logprob: -3.7495968341827393
    6. ' *' → logprob: -3.8745968341827393
    7. '(' → logprob: -4.62459659576416
    8. ' ,' → logprob: -4.62459659576416
    9. '=' → logprob: -4.87459659576416
    10. '<=' → logprob: -5.24959659576416

Token 1129: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0024688749108463526
    2. 'y' → logprob: -6.877469062805176
    3. ' ' → logprob: -7.252469062805176
    4. '(' → logprob: -7.627469062805176
    5. '1' → logprob: -9.377469062805176
    6. ' y' → logprob: -10.752469062805176
    7. '`' → logprob: -11.127469062805176
    8. 'x' → logprob: -11.127469062805176
    9. 'def' → logprob: -11.252469062805176
    10. ' (' → logprob: -11.377469062805176

Token 1130: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.002149546518921852
    2. '(' → logprob: -6.37714958190918
    3. '1' → logprob: -8.87714958190918
    4. 'y' → logprob: -9.12714958190918
    5. ' ' → logprob: -10.12714958190918
    6. '...' → logprob: -10.37714958190918
    7. 'def' → logprob: -10.62714958190918
    8. '`' → logprob: -10.75214958190918
    9. 'z' → logprob: -11.00214958190918
    10. '#' → logprob: -11.25214958190918

Token 1131: '^' (ID: 61)
  Prédit: '^'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '^' → logprob: -0.03235483169555664
    2. '**' → logprob: -3.6573548316955566
    3. '<|end|>' → logprob: -5.157354831695557
    4. 'y' → logprob: -9.282354354858398
    5. '```' → logprob: -9.532354354858398
    6. '<|end|>' → logprob: -10.907354354858398
    7. '^{' → logprob: -10.907354354858398
    8. '`' → logprob: -11.282354354858398
    9. '*y' → logprob: -11.407354354858398
    10. '#' → logprob: -11.907354354858398

Token 1132: 'y' (ID: 88)
  Prédit: 'y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.0009016924886964262
    2. '<|end|>' → logprob: -7.125901699066162
    3. '0' → logprob: -10.000901222229004
    4. ' y' → logprob: -11.125901222229004
    5. 'x' → logprob: -11.500901222229004
    6. '<|end|>' → logprob: -11.875901222229004
    7. '_y' → logprob: -12.375901222229004
    8. '(' → logprob: -13.000901222229004
    9. ''y' → logprob: -13.125901222229004
    10. '(y' → logprob: -13.250901222229004

Token 1133: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.21562792360782623
    2. '==' → logprob: -1.840627908706665
    3. ' ==' → logprob: -3.590627908706665
    4. ' =' → logprob: -5.465628147125244
    5. '<=' → logprob: -6.215628147125244
    6. '**' → logprob: -7.340628147125244
    7. ' <=' → logprob: -8.340627670288086
    8. '```' → logprob: -8.840627670288086
    9. '*' → logprob: -9.215627670288086
    10. ')' → logprob: -9.840627670288086

Token 1134: ' total' (ID: 3609)
  Prédit: 'total'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'total' → logprob: -0.000158842682139948
    2. ' total' → logprob: -8.75015926361084
    3. '(total' → logprob: -15.25015926361084
    4. '2' → logprob: -16.250158309936523
    5. '`' → logprob: -17.875158309936523
    6. '$total' → logprob: -18.625158309936523
    7. '```' → logprob: -18.625158309936523
    8. '
' → logprob: -18.875158309936523
    9. '	total' → logprob: -19.250158309936523
    10. '   ' → logprob: -19.375158309936523

Token 1135: '_weight' (ID: 34711)
  Prédit: '_weight'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_weight' → logprob: -0.010556645691394806
    2. 'Weight' → logprob: -5.510556697845459
    3. '_chunks' → logprob: -5.510556697845459
    4. 'weight' → logprob: -7.260556697845459
    5. '_weights' → logprob: -7.885556697845459
    6. '_tokens' → logprob: -8.0105562210083
    7. '_chunk' → logprob: -8.8855562210083
    8. '       ' → logprob: -9.0105562210083
    9. '[' → logprob: -9.2605562210083
    10. '   ' → logprob: -9.3855562210083

Token 1136: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6724333763122559
    2. '
' → logprob: -1.0474333763122559
    3. 'chunks' → logprob: -2.422433376312256
    4. 'import' → logprob: -4.297433376312256
    5. 'result' → logprob: -4.297433376312256
    6. '#' → logprob: -5.297433376312256
    7. 'from' → logprob: -5.797433376312256
    8. 'def' → logprob: -5.922433376312256
    9. '        
' → logprob: -6.172433376312256
    10. 'x' → logprob: -6.172433376312256

Token 1137: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0043155839666724205
    2. ',' → logprob: -6.504315376281738
    3. ' x' → logprob: -7.254315376281738
    4. ' if' → logprob: -7.754315376281738
    5. '        
' → logprob: -8.504315376281738
    6. ' =' → logprob: -8.629315376281738
    7. ' for' → logprob: -9.004315376281738
    8. '        ' → logprob: -9.379315376281738
    9. '\n' → logprob: -9.504315376281738
    10. ' and' → logprob: -9.504315376281738

Token 1138: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.023862361907958984
    2. ',' → logprob: -5.523862361907959
    3. '        
' → logprob: -5.523862361907959
    4. '
' → logprob: -5.648862361907959
    5. '#' (adapté à ' #') → logprob: -6.148862361907959
    6. 'x' → logprob: -6.273862361907959
    7. '\n' → logprob: -7.148862361907959
    8. 'while' → logprob: -7.148862361907959
    9. ' for' → logprob: -7.273862361907959
    10. ' x' → logprob: -7.273862361907959

Token 1139: ' But' (ID: 3072)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0874171182513237
    2. 'x' → logprob: -3.4624171257019043
    3. 'from' → logprob: -4.212417125701904
    4. 'if' → logprob: -4.337417125701904
    5. 'import' → logprob: -4.837417125701904
    6. '#' → logprob: -5.087417125701904
    7. 'def' → logprob: -5.587417125701904
    8. '
' → logprob: -5.712417125701904
    9. 'for' → logprob: -7.212417125701904
    10. 'result' → logprob: -7.462417125701904

Token 1140: ' we' (ID: 581)
  Prédit: 'total'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'total' → logprob: -0.9954582452774048
    2. 'if' → logprob: -1.1204582452774048
    3. '#' → logprob: -2.1204581260681152
    4. ' if' → logprob: -2.9954581260681152
    5. ' total' → logprob: -2.9954581260681152
    6. 'x' → logprob: -3.2454581260681152
    7. 'the' → logprob: -4.620458126068115
    8. ' x' → logprob: -4.995458126068115
    9. '
' → logprob: -5.120458126068115
    10. 'we' → logprob: -5.745458126068115

Token 1141: ' don't' (ID: 4128)
  Prédit: ' continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' continue' → logprob: -0.8915255069732666
    2. ' if' → logprob: -2.7665255069732666
    3. ' need' → logprob: -2.7665255069732666
    4. ' =' → logprob: -2.8915255069732666
    5. 'continue' → logprob: -3.1415255069732666
    6. ' must' → logprob: -3.1415255069732666
    7. '#' → logprob: -3.2665255069732666
    8. ' can' → logprob: -3.5165255069732666
    9. '
' → logprob: -3.6415255069732666
    10. ' %' → logprob: -3.6415255069732666

Token 1142: ' know' (ID: 1761)
  Prédit: 'know'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'know' → logprob: -0.9848769307136536
    2. '
' → logprob: -1.3598768711090088
    3. ' =' → logprob: -2.734876871109009
    4. '=' → logprob: -2.859876871109009
    5. 'continue' → logprob: -3.109876871109009
    6. 'have' → logprob: -3.109876871109009
    7. '```' → logprob: -3.234876871109009
    8. '=
' → logprob: -3.484876871109009
    9. 'return' → logprob: -3.984876871109009
    10. '#' → logprob: -4.734877109527588

Token 1143: ' x' (ID: 1215)
  Prédit: ' how'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' how' → logprob: -1.1128385066986084
    2. ' the' → logprob: -1.3628385066986084
    3. ' ' → logprob: -2.6128385066986084
    4. ' if' → logprob: -2.7378385066986084
    5. ' x' → logprob: -2.9878385066986084
    6. '       ' → logprob: -3.3628385066986084
    7. '    ' → logprob: -3.4878385066986084
    8. '#' → logprob: -3.7378385066986084
    9. 'x' → logprob: -3.7378385066986084
    10. 'def' → logprob: -4.2378387451171875

Token 1144: ',y' (ID: 16103)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -1.330521821975708
    2. ' =' → logprob: -1.830521821975708
    3. '#' → logprob: -1.955521821975708
    4. ' if' → logprob: -2.205521821975708
    5. '
' → logprob: -2.580521821975708
    6. ',' → logprob: -2.955521821975708
    7. '       ' → logprob: -2.955521821975708
    8. 'import' → logprob: -3.955521821975708
    9. 'if' → logprob: -4.080521583557129
    10. ' #' → logprob: -4.330521583557129

Token 1145: ',' (ID: 11)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.3661125600337982
    2. '       ' → logprob: -1.7411125898361206
    3. '#' → logprob: -2.366112470626831
    4. '        
' → logprob: -4.61611270904541
    5. '\n' → logprob: -5.36611270904541
    6. ',' → logprob: -5.74111270904541
    7. '   ' → logprob: -6.24111270904541
    8. ' =' → logprob: -6.24111270904541
    9. ' if' → logprob: -6.49111270904541
    10. 'def' → logprob: -6.86611270904541

Token 1146: ' and' (ID: 326)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.23442578315734863
    2. ' so' → logprob: -1.9844257831573486
    3. '       ' → logprob: -3.2344257831573486
    4. '
' → logprob: -3.9844257831573486
    5. 'so' → logprob: -4.9844255447387695
    6. 'x' → logprob: -6.2344255447387695
    7. ' #' → logprob: -6.2344255447387695
    8. ' but' → logprob: -7.2344255447387695
    9. 'return' → logprob: -8.60942554473877
    10. ' 
' → logprob: -8.85942554473877

Token 1147: ' problem' (ID: 4792)
  Prédit: 'total'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'total' → logprob: -0.7761328816413879
    2. '#' → logprob: -2.401132822036743
    3. 'the' → logprob: -2.401132822036743
    4. '
' → logprob: -2.526132822036743
    5. 'x' → logprob: -2.776132822036743
    6. 'we' → logprob: -2.776132822036743
    7. ' total' → logprob: -3.526132822036743
    8. 'there' → logprob: -4.026133060455322
    9. 'while' → logprob: -4.526133060455322
    10. ' the' → logprob: -4.651133060455322

Token 1148: ' does' (ID: 2226)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.8893679976463318
    2. '#' → logprob: -2.1393680572509766
    3. '.' → logprob: -2.5143680572509766
    4. ' continues' → logprob: -2.6393680572509766
    5. '   ' → logprob: -3.1393680572509766
    6. ' wants' → logprob: -3.2643680572509766
    7. ' only' → logprob: -3.7643680572509766
    8. '...' → logprob: -3.7643680572509766
    9. 'def' → logprob: -3.8893680572509766
    10. 'contin' → logprob: -4.014368057250977

Token 1149: ' not' (ID: 625)
  Prédit: 'not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'not' → logprob: -0.0032593535725027323
    2. ' not' → logprob: -5.753259181976318
    3. 'n't' → logprob: -9.503259658813477
    4. 'n' → logprob: -13.253259658813477
    5. 'return' → logprob: -13.503259658813477
    6. '#' → logprob: -14.003259658813477
    7. '   ' → logprob: -14.253259658813477
    8. '...' → logprob: -14.503259658813477
    9. 'continue' → logprob: -14.503259658813477
    10. '_not' → logprob: -15.003259658813477

Token 1150: ' give' (ID: 3644)
  Prédit: 'spec'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'spec' → logprob: -0.017991075292229652
    2. 'provide' → logprob: -4.517991065979004
    3. 'allow' → logprob: -6.392991065979004
    4. ' specify' → logprob: -6.642991065979004
    5. 'state' → logprob: -7.017991065979004
    6. 'define' → logprob: -7.517991065979004
    7. 'explicit' → logprob: -7.767991065979004
    8. 'support' → logprob: -8.142991065979004
    9. 'give' → logprob: -8.267991065979004
    10. 'require' → logprob: -8.267991065979004

Token 1151: ' those' (ID: 2617)
  Prédit: ' a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' a' → logprob: -1.9550371170043945
    2. 'a' → logprob: -2.0800371170043945
    3. ' more' → logprob: -2.2050371170043945
    4. 'the' → logprob: -2.5800371170043945
    5. 'def' → logprob: -2.7050371170043945
    6. 'explicit' → logprob: -2.8300371170043945
    7. 's' → logprob: -2.9550371170043945
    8. 'more' → logprob: -3.3300371170043945
    9. 'any' → logprob: -3.4550371170043945
    10. ' the' → logprob: -3.5800371170043945

Token 1152: '.

' (ID: 364)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6899589896202087
    2. '
' → logprob: -1.0649590492248535
    3. '#' → logprob: -2.0649590492248535
    4. 'from' → logprob: -4.9399590492248535
    5. 'import' → logprob: -4.9399590492248535
    6. '   ' → logprob: -5.6899590492248535
    7. '        
' → logprob: -6.0649590492248535
    8. ',' → logprob: -6.9399590492248535
    9. 'def' → logprob: -6.9399590492248535
    10. 'if' → logprob: -7.0649590492248535

Token 1153: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03899137303233147
    2. '
' → logprob: -4.163991451263428
    3. '#' → logprob: -4.538991451263428
    4. 'if' → logprob: -5.788991451263428
    5. '        
' → logprob: -6.038991451263428
    6. 'x' → logprob: -6.413991451263428
    7. 'def' → logprob: -7.038991451263428
    8. ' if' → logprob: -7.413991451263428
    9. '   ' → logprob: -7.663991451263428
    10. 'Let's' → logprob: -7.788991451263428

Token 1154: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2877451479434967
    2. '#' (adapté à ' #') → logprob: -2.287745237350464
    3. '
' → logprob: -2.287745237350464
    4. 'if' → logprob: -3.662745237350464
    5. 'from' → logprob: -4.537744998931885
    6. '        
' → logprob: -5.537744998931885
    7. 'import' → logprob: -5.912744998931885
    8. 'x' → logprob: -6.662744998931885
    9. 'def' → logprob: -6.912744998931885
    10. '   ' → logprob: -7.287744998931885

Token 1155: ' The' (ID: 623)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -1.0997262001037598
    2. 'chunks' → logprob: -1.2247262001037598
    3. '#' → logprob: -1.7247262001037598
    4. 'result' → logprob: -2.3497262001037598
    5. '       ' → logprob: -3.4747262001037598
    6. 'from' → logprob: -4.09972620010376
    7. 'res' → logprob: -4.09972620010376
    8. 'def' → logprob: -4.72472620010376
    9. '   ' → logprob: -4.97472620010376
    10. 'import' → logprob: -5.22472620010376

Token 1156: ' input' (ID: 3422)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.4481973946094513
    2. 'def' → logprob: -1.948197364807129
    3. 'if' → logprob: -2.573197364807129
    4. ' #' → logprob: -3.198197364807129
    5. ' if' → logprob: -3.323197364807129
    6. 'import' → logprob: -3.823197364807129
    7. 'x' → logprob: -5.198197364807129
    8. 'from' → logprob: -5.323197364807129
    9. ' def' → logprob: -5.448197364807129
    10. '   ' → logprob: -5.573197364807129

Token 1157: '/output' (ID: 111294)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.2147765159606934
    2. 'if' → logprob: -1.7147765159606934
    3. 'def' → logprob: -2.0897765159606934
    4. '
' → logprob: -2.0897765159606934
    5. '=' → logprob: -2.5897765159606934
    6. '#' → logprob: -2.8397765159606934
    7. ' =' → logprob: -3.3397765159606934
    8. ' if' → logprob: -3.3397765159606934
    9. '   ' → logprob: -4.089776515960693
    10. ':' → logprob: -4.214776515960693

Token 1158: ' format' (ID: 6011)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5853118300437927
    2. '#' → logprob: -1.9603118896484375
    3. 'def' → logprob: -2.0853118896484375
    4. ' is' → logprob: -2.5853118896484375
    5. '   ' → logprob: -3.5853118896484375
    6. '
' → logprob: -4.2103118896484375
    7. ':' → logprob: -5.0853118896484375
    8. 'return' → logprob: -5.4603118896484375
    9. 'is' → logprob: -5.5853118896484375
    10. ':
' → logprob: -5.8353118896484375

Token 1159: ' treats' (ID: 40964)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.9516800045967102
    2. '       ' → logprob: -2.0766799449920654
    3. '
' → logprob: -2.2016799449920654
    4. ':' → logprob: -2.4516799449920654
    5. ':
' → logprob: -2.8266799449920654
    6. 'def' → logprob: -2.8266799449920654
    7. ' is' → logprob: -3.3266799449920654
    8. ' =' → logprob: -3.5766799449920654
    9. '   ' → logprob: -3.7016799449920654
    10. '=' → logprob: -4.2016801834106445

Token 1160: ' a' (ID: 261)
  Prédit: 'total'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'total' → logprob: -0.3194621205329895
    2. 'the' → logprob: -1.6944620609283447
    3. 'weight' → logprob: -2.8194620609283447
    4. 'x' → logprob: -5.069462299346924
    5. '#' → logprob: -5.694462299346924
    6. 'weights' → logprob: -5.819462299346924
    7. '```' → logprob: -5.944462299346924
    8. 'mar' → logprob: -5.944462299346924
    9. 'all' → logprob: -6.569462299346924
    10. 'chunks' → logprob: -6.569462299346924

Token 1161: ',b' (ID: 17568)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.6078715324401855
    2. '=' → logprob: -2.1078715324401855
    3. ' ' → logprob: -2.6078715324401855
    4. 'b' → logprob: -2.7328715324401855
    5. ' =' → logprob: -2.7328715324401855
    6. '_i' → logprob: -2.8578715324401855
    7. 'll' → logprob: -4.8578715324401855
    8. 'i' → logprob: -5.1078715324401855
    9. ' _' → logprob: -5.1078715324401855
    10. '(' → logprob: -5.2328715324401855

Token 1162: ' as' (ID: 472)
  Prédit: '_i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_i' → logprob: -0.7212876081466675
    2. ' =' → logprob: -1.4712876081466675
    3. '=' → logprob: -1.8462876081466675
    4. ')' → logprob: -3.096287727355957
    5. '_' → logprob: -3.721287727355957
    6. '#' → logprob: -4.471287727355957
    7. '
' → logprob: -4.721287727355957
    8. ' as' → logprob: -4.846287727355957
    9. ',' → logprob: -5.221287727355957
    10. 'def' → logprob: -5.596287727355957

Token 1163: ' the' (ID: 290)
  Prédit: ' weight'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' weight' → logprob: -1.4032104015350342
    2. 'weight' → logprob: -1.5282104015350342
    3. 'inte' → logprob: -1.5282104015350342
    4. 'Weight' → logprob: -1.7782104015350342
    5. ' integers' → logprob: -2.778210401535034
    6. ' Weight' → logprob: -4.153210639953613
    7. 'the' → logprob: -4.278210639953613
    8. 'weights' → logprob: -4.403210639953613
    9. ' the' → logprob: -4.778210639953613
    10. ' weights' → logprob: -5.028210639953613

Token 1164: ' bok' (ID: 35768)
  Prédit: 'ex'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ex' → logprob: -1.1474181413650513
    2. 'number' → logprob: -1.1474181413650513
    3. 'next' → logprob: -2.7724180221557617
    4. 'minimum' → logprob: -2.7724180221557617
    5. 'weight' → logprob: -2.7724180221557617
    6. 'minimal' → logprob: -3.2724180221557617
    7. 'bok' → logprob: -4.147418022155762
    8. 'Weight' → logprob: -4.647418022155762
    9. 'b' → logprob: -4.772418022155762
    10. 'min' → logprob: -4.897418022155762

Token 1165: 'ko' (ID: 3593)
  Prédit: 'ko'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ko' → logprob: -0.0039182258769869804
    2. 'k' → logprob: -5.628918170928955
    3. '```' → logprob: -9.753918647766113
    4. '_i' → logprob: -9.878918647766113
    5. '_' → logprob: -10.628918647766113
    6. 'koo' → logprob: -10.753918647766113
    7. '_k' → logprob: -11.003918647766113
    8. 'ко' → logprob: -11.253918647766113
    9. 'iko' → logprob: -11.378918647766113
    10. 'i' → logprob: -11.503918647766113

Token 1166: ' weight' (ID: 6049)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.6268303394317627
    2. 's' → logprob: -2.1268303394317627
    3. 'units' → logprob: -2.3768303394317627
    4. 'unit' → logprob: -2.7518303394317627
    5. ' units' → logprob: -3.3768303394317627
    6. '_unit' → logprob: -3.8768303394317627
    7. ' unit' → logprob: -4.376830101013184
    8. '_units' → logprob: -4.376830101013184
    9. '       ' → logprob: -4.501830101013184
    10. ' =' → logprob: -4.626830101013184

Token 1167: ' and' (ID: 326)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.3191755712032318
    2. '       ' → logprob: -2.3191754817962646
    3. ' and' → logprob: -3.4441754817962646
    4. 's' → logprob: -3.5691754817962646
    5. ',
' → logprob: -3.8191754817962646
    6. '=' → logprob: -3.9441754817962646
    7. ' =' → logprob: -4.069175720214844
    8. '   ' → logprob: -4.569175720214844
    9. 'and' → logprob: -4.694175720214844
    10. '#' → logprob: -5.319175720214844

Token 1168: ' mar' (ID: 2674)
  Prédit: 'mar'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mar' → logprob: -0.030662113800644875
    2. '1' → logprob: -4.2806620597839355
    3. ' mar' → logprob: -4.4056620597839355
    4. 'b' → logprob: -6.5306620597839355
    5. 'quantity' → logprob: -6.5306620597839355
    6. '0' → logprob: -7.2806620597839355
    7. ' ' → logprob: -8.155662536621094
    8. ' quantity' → logprob: -9.030662536621094
    9. ' b' → logprob: -10.155662536621094
    10. 'the' → logprob: -10.155662536621094

Token 1169: 'ugu' (ID: 8060)
  Prédit: 'ugu'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ugu' → logprob: -0.06593319028615952
    2. 'gu' → logprob: -2.9409332275390625
    3. 'ugo' → logprob: -5.3159332275390625
    4. '```' → logprob: -6.4409332275390625
    5. 'k' → logprob: -6.6909332275390625
    6. 'u' → logprob: -7.4409332275390625
    7. 'g' → logprob: -7.5659332275390625
    8. 'uku' → logprob: -8.065933227539062
    9. '`' → logprob: -8.565933227539062
    10. '   ' → logprob: -8.940933227539062

Token 1170: ' counts' (ID: 28991)
  Prédit: 'units'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'units' → logprob: -0.3108554780483246
    2. 'count' → logprob: -2.6858553886413574
    3. ' units' → logprob: -2.9358553886413574
    4. 'unit' → logprob: -3.0608553886413574
    5. ',' → logprob: -3.4358553886413574
    6. 'counts' → logprob: -4.185855388641357
    7. '_units' → logprob: -4.935855388641357
    8. 's' → logprob: -5.185855388641357
    9. '```' → logprob: -5.185855388641357
    10. '_count' → logprob: -5.560855388641357

Token 1171: '.
' (ID: 558)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.20986972749233246
    2. '
' → logprob: -2.584869623184204
    3. 'def' → logprob: -3.459869623184204
    4. 'chunks' → logprob: -3.584869623184204
    5. '#' → logprob: -4.209869861602783
    6. 'result' → logprob: -4.459869861602783
    7. '        
' → logprob: -4.834869861602783
    8. 'if' → logprob: -4.959869861602783
    9. 'from' → logprob: -5.709869861602783
    10. '```' → logprob: -6.084869861602783

Token 1172: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.14377635717391968
    2. '
' → logprob: -2.1437764167785645
    3. '#' → logprob: -4.5187764167785645
    4. '        
' → logprob: -6.2687764167785645
    5. '```' → logprob: -6.5187764167785645
    6. '`
' → logprob: -7.8937764167785645
    7. '   ' → logprob: -8.143775939941406
    8. 'if' → logprob: -8.518775939941406
    9. 'def' → logprob: -8.768775939941406
    10. '"""
' → logprob: -8.893775939941406

Token 1173: ' #' (ID: 1069)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.2875276207923889
    2. '       ' → logprob: -2.537527561187744
    3. 'if' → logprob: -2.537527561187744
    4. '#' (adapté à ' #') → logprob: -2.662527561187744
    5. 'x' → logprob: -5.287527561187744
    6. ' if' → logprob: -5.787527561187744
    7. 'import' → logprob: -6.037527561187744
    8. 'from' → logprob: -6.037527561187744
    9. '   ' → logprob: -6.412527561187744
    10. 'def' → logprob: -6.537527561187744

Token 1174: ' Actually' (ID: 50557)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.679444432258606
    2. 'chunks' → logprob: -2.0544443130493164
    3. 'if' → logprob: -2.1794443130493164
    4. '       ' → logprob: -2.5544443130493164
    5. '
' → logprob: -2.5544443130493164
    6. 'result' → logprob: -3.0544443130493164
    7. 'def' → logprob: -4.304444313049316
    8. 'from' → logprob: -4.429444313049316
    9. 'res' → logprob: -4.929444313049316
    10. 'x' → logprob: -5.304444313049316

Token 1175: ',' (ID: 11)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.06350353360176086
    2. 'import' → logprob: -3.3135035037994385
    3. 'from' → logprob: -4.563503742218018
    4. 'if' → logprob: -5.313503742218018
    5. '       ' → logprob: -5.938503742218018
    6. 'def' → logprob: -6.438503742218018
    7. 'x' → logprob: -6.563503742218018
    8. '
' → logprob: -7.063503742218018
    9. ' #' → logprob: -7.063503742218018
    10. ' if' → logprob: -7.188503742218018

Token 1176: ' the' (ID: 290)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.6277505159378052
    2. 'if' → logprob: -1.7527505159378052
    3. 'chunks' → logprob: -2.0027503967285156
    4. 'result' → logprob: -2.8777503967285156
    5. 'import' → logprob: -3.5027503967285156
    6. 'from' → logprob: -3.7527503967285156
    7. 'x' → logprob: -4.002750396728516
    8. 'def' → logprob: -4.377750396728516
    9. 'res' → logprob: -5.002750396728516
    10. '
' → logprob: -5.377750396728516

Token 1177: ' problem' (ID: 4792)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.1707989126443863
    2. '#' → logprob: -2.6707990169525146
    3. 'import' → logprob: -3.9207990169525146
    4. 'if' → logprob: -4.1707987785339355
    5. 'result' → logprob: -4.2957987785339355
    6. 'from' → logprob: -4.4207987785339355
    7. 'div' → logprob: -4.6707987785339355
    8. 'res' → logprob: -6.0457987785339355
    9. 'min' → logprob: -6.0457987785339355
    10. 'code' → logprob: -6.1707987785339355

Token 1178: ' expects' (ID: 47384)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.7636764049530029
    2. '#' → logprob: -2.013676404953003
    3. ':' → logprob: -2.263676404953003
    4. '=' → logprob: -2.763676404953003
    5. '       ' → logprob: -3.013676404953003
    6. '   ' → logprob: -3.138676404953003
    7. '
' → logprob: -3.263676404953003
    8. ' =' → logprob: -4.013676643371582
    9. ':
' → logprob: -4.013676643371582
    10. ' def' → logprob: -4.388676643371582

Token 1179: ' output' (ID: 4733)
  Prédit: '[]
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]
' → logprob: -0.6692875623703003
    2. '[
' → logprob: -1.7942875623703003
    3. 'result' → logprob: -2.54428768157959
    4. '[]' → logprob: -3.04428768157959
    5. 'self' → logprob: -3.16928768157959
    6. '[' → logprob: -3.16928768157959
    7. '       ' → logprob: -3.66928768157959
    8. 'from' → logprob: -4.54428768157959
    9. 'min' → logprob: -4.54428768157959
    10. '#' → logprob: -4.54428768157959

Token 1180: ' of' (ID: 328)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.353223592042923
    2. '=' → logprob: -2.9782235622406006
    3. '   ' → logprob: -3.2282235622406006
    4. '[' → logprob: -3.3532235622406006
    5. ':' → logprob: -3.4782235622406006
    6. 'def' → logprob: -3.6032235622406006
    7. '       ' → logprob: -3.9782235622406006
    8. '[
' → logprob: -3.9782235622406006
    9. '[]' → logprob: -4.10322380065918
    10. '
' → logprob: -4.35322380065918

Token 1181: ' chunks' (ID: 53440)
  Prédit: 'Weight'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Weight' → logprob: -1.6319869756698608
    2. '1' → logprob: -1.7569869756698608
    3. 'a' → logprob: -2.1319870948791504
    4. 'total' → logprob: -2.3819870948791504
    5. '[' → logprob: -2.6319870948791504
    6. '[(' → logprob: -3.0069870948791504
    7. 'weight' → logprob: -3.1319870948791504
    8. '0' → logprob: -3.1319870948791504
    9. 'f' → logprob: -3.2569870948791504
    10. '
' → logprob: -3.7569870948791504

Token 1182: ' with' (ID: 483)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.08846057951450348
    2. '
' → logprob: -2.838460683822632
    3. 'def' → logprob: -4.713460445404053
    4. 'from' → logprob: -5.588460445404053
    5. ',' → logprob: -6.338460445404053
    6. '        
' → logprob: -6.463460445404053
    7. '#' → logprob: -6.463460445404053
    8. '[]
' → logprob: -6.463460445404053
    9. '```' → logprob: -6.713460445404053
    10. ' that' → logprob: -7.338460445404053

Token 1183: ' b' (ID: 287)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.2916412949562073
    2. 'weight' → logprob: -1.6666412353515625
    3. 'b' → logprob: -3.4166412353515625
    4. '0' → logprob: -4.5416412353515625
    5. '1' → logprob: -5.0416412353515625
    6. '```' → logprob: -5.2916412353515625
    7. 'bok' → logprob: -6.2916412353515625
    8. 'the' → logprob: -6.4166412353515625
    9. 'weights' → logprob: -6.9166412353515625
    10. 'Weight' → logprob: -7.0416412353515625

Token 1184: '=' (ID: 28)
  Prédit: '_i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_i' → logprob: -0.35050997138023376
    2. '=' → logprob: -1.4755100011825562
    3. ' =' → logprob: -2.8505098819732666
    4. 'i' → logprob: -5.600510120391846
    5. '_' → logprob: -6.100510120391846
    6. '0' → logprob: -7.350510120391846
    7. '_unit' → logprob: -7.600510120391846
    8. 'unit' → logprob: -8.225509643554688
    9. '1' → logprob: -9.100509643554688
    10. '```' → logprob: -9.100509643554688

Token 1185: '0' (ID: 15)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.2508947253227234
    2. '0' → logprob: -1.6258947849273682
    3. 'total' → logprob: -3.750894784927368
    4. '[' → logprob: -7.750894546508789
    5. '(total' → logprob: -8.750894546508789
    6. '[]' → logprob: -8.875894546508789
    7. 'max' → logprob: -9.000894546508789
    8. ' ' → logprob: -9.000894546508789
    9. '`' → logprob: -9.500894546508789
    10. 'weight' → logprob: -9.625894546508789

Token 1186: ',' (ID: 11)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.3188559412956238
    2. '       ' → logprob: -1.3188560009002686
    3. '        
' → logprob: -6.4438557624816895
    4. '#' → logprob: -6.9438557624816895
    5. 'if' → logprob: -7.1938557624816895
    6. '```' → logprob: -7.8188557624816895
    7. '   ' → logprob: -7.9438557624816895
    8. 'def' → logprob: -8.318856239318848
    9. ',' → logprob: -8.568856239318848
    10. 'chunks' → logprob: -8.818856239318848

Token 1187: ' as' (ID: 472)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7569559812545776
    2. '
' → logprob: -2.006956100463867
    3. ' a' → logprob: -2.631956100463867
    4. ' which' → logprob: -2.756956100463867
    5. ' weight' → logprob: -3.006956100463867
    6. 'a' → logprob: -3.631956100463867
    7. ' i' → logprob: -3.756956100463867
    8. ' and' → logprob: -4.006956100463867
    9. 'weight' → logprob: -4.506956100463867
    10. ' 
' → logprob: -4.756956100463867

Token 1188: ' sample' (ID: 10176)
  Prédit: 'the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'the' → logprob: -1.0497676134109497
    2. 'long' → logprob: -1.2997676134109497
    3. 'that' → logprob: -1.9247676134109497
    4. 'per' → logprob: -3.29976749420166
    5. 'total' → logprob: -3.29976749420166
    6. 'Quantity' → logprob: -3.67476749420166
    7. 'this' → logprob: -3.92476749420166
    8. '0' → logprob: -4.29976749420166
    9. 'all' → logprob: -4.54976749420166
    10. 'Weight' → logprob: -4.67476749420166

Token 1189: ' shows' (ID: 7398)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.09210891276597977
    2. '       ' → logprob: -2.467108964920044
    3. '        
' → logprob: -6.717108726501465
    4. '```' → logprob: -8.717108726501465
    5. 'return' → logprob: -8.842108726501465
    6. 'def' → logprob: -8.842108726501465
    7. ',' → logprob: -9.092108726501465
    8. '\n' → logprob: -9.217108726501465
    9. '   ' → logprob: -9.217108726501465
    10. '  
' → logprob: -9.217108726501465

Token 1190: '.

' (ID: 364)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4917212426662445
    2. '
' → logprob: -1.116721272468567
    3. 'chunks' → logprob: -3.7417211532592773
    4. 'if' → logprob: -3.8667211532592773
    5. '        
' → logprob: -5.116721153259277
    6. 'result' → logprob: -5.866721153259277
    7. '#' → logprob: -6.241721153259277
    8. '```' → logprob: -6.866721153259277
    9. 'def' → logprob: -6.991721153259277
    10. '   ' → logprob: -7.241721153259277

Token 1191: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.07955309748649597
    2. 'if' → logprob: -3.3295531272888184
    3. '
' → logprob: -3.5795531272888184
    4. 'x' → logprob: -5.329553127288818
    5. '   ' → logprob: -6.079553127288818
    6. '        
' → logprob: -7.204553127288818
    7. 'result' → logprob: -7.204553127288818
    8. '```' → logprob: -7.204553127288818
    9. ' if' → logprob: -7.454553127288818
    10. '#' → logprob: -7.454553127288818

Token 1192: ' #' (ID: 1069)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.23767881095409393
    2. '       ' → logprob: -2.2376787662506104
    3. '#' (adapté à ' #') → logprob: -2.9876787662506104
    4. '
' → logprob: -4.1126790046691895
    5. 'chunks' → logprob: -4.6126790046691895
    6. 'x' → logprob: -4.8626790046691895
    7. 'result' → logprob: -5.3626790046691895
    8. 'div' → logprob: -5.4876790046691895
    9. 'from' → logprob: -5.6126790046691895
    10. 'import' → logprob: -6.3626790046691895

Token 1193: ' So' (ID: 2632)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.6264743804931641
    2. 'chunks' → logprob: -1.376474380493164
    3. 'result' → logprob: -2.126474380493164
    4. '       ' → logprob: -2.876474380493164
    5. 'res' → logprob: -4.251474380493164
    6. 'def' → logprob: -4.876474380493164
    7. '#' → logprob: -5.001474380493164
    8. '
' → logprob: -6.626474380493164
    9. 'x' → logprob: -6.751474380493164
    10. '   ' → logprob: -6.876474380493164

Token 1194: ' minimizing' (ID: 111215)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.2861305773258209
    2. 'chunks' → logprob: -2.036130666732788
    3. 'result' → logprob: -2.661130666732788
    4. 'x' → logprob: -4.161130428314209
    5. '   ' → logprob: -4.536130428314209
    6. 'res' → logprob: -5.036130428314209
    7. 'def' → logprob: -5.161130428314209
    8. 'min' → logprob: -5.786130428314209
    9. '#' → logprob: -5.911130428314209
    10. '       ' → logprob: -6.661130428314209

Token 1195: ' chunk' (ID: 23958)
  Prédit: '_chunks'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_chunks' → logprob: -0.14310699701309204
    2. 'chunks' → logprob: -2.3931069374084473
    3. '_number' → logprob: -4.393106937408447
    4. 'the' → logprob: -4.518106937408447
    5. 'number' → logprob: -5.143106937408447
    6. '```' → logprob: -6.143106937408447
    7. '_chunk' → logprob: -6.393106937408447
    8. '
' → logprob: -6.393106937408447
    9. 'self' → logprob: -6.643106937408447
    10. '_num' → logprob: -6.768106937408447

Token 1196: ' count' (ID: 3605)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.005076971836388111
    2. 'count' → logprob: -6.005076885223389
    3. '   ' → logprob: -7.255076885223389
    4. 'size' → logprob: -7.880076885223389
    5. '数' → logprob: -8.130077362060547
    6. 'number' → logprob: -8.130077362060547
    7. 'sizes' → logprob: -8.630077362060547
    8. '数量' → logprob: -8.755077362060547
    9. 'list' → logprob: -8.880077362060547
    10. '       ' → logprob: -9.005077362060547

Token 1197: ' means' (ID: 4748)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -1.0156886577606201
    2. '       ' → logprob: -1.2656886577606201
    3. '
' → logprob: -1.5156886577606201
    4. '=' → logprob: -3.26568865776062
    5. '[' → logprob: -4.015688896179199
    6. 'def' → logprob: -4.515688896179199
    7. '[
' → logprob: -4.515688896179199
    8. '   ' → logprob: -4.640688896179199
    9. 'return' → logprob: -5.265688896179199
    10. '(' → logprob: -5.265688896179199

Token 1198: ' all' (ID: 722)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.05080629140138626
    2. '       ' → logprob: -3.3008062839508057
    3. 'chunks' → logprob: -4.800806522369385
    4. 'result' → logprob: -6.175806522369385
    5. '[' → logprob: -6.925806522369385
    6. '[
' → logprob: -7.925806522369385
    7. '
' → logprob: -8.550806045532227
    8. 'all' → logprob: -8.550806045532227
    9. '           ' → logprob: -8.800806045532227
    10. 'weight' → logprob: -9.300806045532227

Token 1199: ' combined' (ID: 15890)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.4678535461425781
    2. 'chunks' → logprob: -1.9678535461425781
    3. '=' → logprob: -2.592853546142578
    4. '_chunks' → logprob: -2.967853546142578
    5. '[' → logprob: -4.092853546142578
    6. 'weight' → logprob: -4.217853546142578
    7. '.append' → logprob: -4.467853546142578
    8. '[
' → logprob: -4.592853546142578
    9. ' chunks' → logprob: -4.592853546142578
    10. '_weight' → logprob: -4.842853546142578

Token 1200: ' into' (ID: 1511)
  Prédit: '_chunks'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_chunks' → logprob: -1.008912444114685
    2. '_weight' → logprob: -1.633912444114685
    3. 'chunks' → logprob: -1.883912444114685
    4. ' =' → logprob: -2.6339125633239746
    5. '_chunk' → logprob: -3.5089125633239746
    6. 'weight' → logprob: -3.5089125633239746
    7. '=' → logprob: -4.008912563323975
    8. '   ' → logprob: -4.133912563323975
    9. ' into' → logprob: -4.258912563323975
    10. ',' → logprob: -4.258912563323975

Token 1201: ' some' (ID: 1236)
  Prédit: 'Weight'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Weight' → logprob: -0.7899646162986755
    2. '[' → logprob: -0.9149646162986755
    3. 'All' → logprob: -2.6649646759033203
    4. 'one' → logprob: -3.4149646759033203
    5. 'a' → logprob: -4.03996467590332
    6. 'One' → logprob: -4.66496467590332
    7. 'chunks' → logprob: -5.03996467590332
    8. 'weight' → logprob: -6.16496467590332
    9. '```' → logprob: -6.41496467590332
    10. '[(' → logprob: -6.41496467590332

Token 1202: ' chunks' (ID: 53440)
  Prédit: 'Weight'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Weight' → logprob: -0.7072241306304932
    2. 'chunks' → logprob: -1.2072241306304932
    3. 'chunk' → logprob: -3.082224130630493
    4. 'weight' → logprob: -3.082224130630493
    5. 'All' → logprob: -3.207224130630493
    6. '
' → logprob: -4.582223892211914
    7. '_weight' → logprob: -4.832223892211914
    8. 'result' → logprob: -4.957223892211914
    9. '```' → logprob: -5.082223892211914
    10. ' Weight' → logprob: -5.207223892211914

Token 1203: ' with' (ID: 483)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3586280941963196
    2. '
' → logprob: -1.4836280345916748
    3. 'if' → logprob: -3.608628034591675
    4. '   ' → logprob: -4.608628273010254
    5. ' if' → logprob: -5.233628273010254
    6. '[]
' → logprob: -5.358628273010254
    7. 'def' → logprob: -5.608628273010254
    8. 'while' → logprob: -5.733628273010254
    9. '        
' → logprob: -5.858628273010254
    10. ',' → logprob: -6.108628273010254

Token 1204: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.11808867752552032
    2. 'a' → logprob: -2.993088722229004
    3. 'weight' → logprob: -2.993088722229004
    4. '0' → logprob: -5.493088722229004
    5. 'quantity' → logprob: -5.993088722229004
    6. 'mar' → logprob: -6.118088722229004
    7. 'the' → logprob: -6.993088722229004
    8. 'Weight' → logprob: -8.118088722229004
    9. '1' → logprob: -8.618088722229004
    10. 'zero' → logprob: -8.868088722229004

Token 1205: '=' (ID: 28)
  Prédit: '='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -8.423219696851447e-05
    2. ' =' → logprob: -9.875083923339844
    3. '_i' → logprob: -11.250083923339844
    4. '0' → logprob: -11.625083923339844
    5. '==' → logprob: -12.000083923339844
    6. '=
' → logprob: -13.625083923339844
    7. 'i' → logprob: -14.000083923339844
    8. '_=' → logprob: -14.500083923339844
    9. '`' → logprob: -14.625083923339844
    10. '+=' → logprob: -15.125083923339844

Token 1206: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.0280383548888494e-06
    2. ' ' → logprob: -13.875000953674316
    3. '[' → logprob: -17.125001907348633
    4. '```' → logprob: -18.750001907348633
    5. '`' → logprob: -19.375001907348633
    6. '=' → logprob: -20.125001907348633
    7. '０' → logprob: -20.875001907348633
    8. '1' → logprob: -21.125001907348633
    9. '   ' → logprob: -21.500001907348633
    10. '000' → logprob: -21.500001907348633

Token 1207: '.

' (ID: 364)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7793543934822083
    2. '
' → logprob: -1.0293543338775635
    3. 'if' → logprob: -2.0293543338775635
    4. 'def' → logprob: -4.654354572296143
    5. ' if' → logprob: -4.779354572296143
    6. '        
' → logprob: -5.029354572296143
    7. '

' → logprob: -5.154354572296143
    8. 'result' → logprob: -5.529354572296143
    9. ',' → logprob: -5.904354572296143
    10. '   ' → logprob: -6.029354572296143

Token 1208: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1705867499113083
    2. 'if' → logprob: -2.6705868244171143
    3. 'chunks' → logprob: -3.0455868244171143
    4. 'result' → logprob: -4.045586585998535
    5. '
' → logprob: -4.545586585998535
    6. 'rest' → logprob: -6.170586585998535
    7. '```' → logprob: -6.295586585998535
    8. 'res' → logprob: -6.420586585998535
    9. '   ' → logprob: -6.795586585998535
    10. 'def' → logprob: -7.045586585998535

Token 1209: ' #' (ID: 1069)
  Prédit: 'chunks'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'chunks' → logprob: -0.7896804213523865
    2. 'if' → logprob: -1.4146804809570312
    3. 'result' → logprob: -1.7896804809570312
    4. '       ' → logprob: -2.1646804809570312
    5. 'res' → logprob: -4.539680480957031
    6. 'results' → logprob: -5.289680480957031
    7. '#' (adapté à ' #') → logprob: -6.289680480957031
    8. 'from' → logprob: -7.039680480957031
    9. '
' → logprob: -7.039680480957031
    10. '   ' → logprob: -7.414680480957031

Token 1210: ' The' (ID: 623)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.9375296831130981
    2. 'result' → logprob: -1.0625296831130981
    3. 'chunks' → logprob: -1.4375296831130981
    4. 'res' → logprob: -4.812529563903809
    5. '       ' → logprob: -5.187529563903809
    6. '   ' → logprob: -5.187529563903809
    7. 'min' → logprob: -6.437529563903809
    8. 'results' → logprob: -6.437529563903809
    9. '#' → logprob: -6.937529563903809
    10. 're' → logprob: -7.437529563903809

Token 1211: ' sample' (ID: 10176)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.7034640908241272
    2. 'if' → logprob: -1.2034640312194824
    3. 'result' → logprob: -1.9534640312194824
    4. 'res' → logprob: -3.7034640312194824
    5. 'chunks' → logprob: -3.7034640312194824
    6. '#' → logprob: -5.078464031219482
    7. '   ' → logprob: -6.453464031219482
    8. 'from' → logprob: -6.453464031219482
    9. 'remaining' → logprob: -6.703464031219482
    10. '
' → logprob: -7.203464031219482

Token 1212: ' merges' (ID: 176901)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -1.2290468215942383
    2. 'def' → logprob: -1.3540468215942383
    3. '       ' → logprob: -1.9790468215942383
    4. '```' → logprob: -2.6040468215942383
    5. '   ' → logprob: -2.9790468215942383
    6. '
' → logprob: -3.1040468215942383
    7. ' =' → logprob: -3.2290468215942383
    8. ':
' → logprob: -4.229046821594238
    9. '=' → logprob: -4.354046821594238
    10. '#' → logprob: -4.354046821594238

Token 1213: ' all' (ID: 722)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.9009817242622375
    2. 'chunks' → logprob: -0.9009817242622375
    3. 'res' → logprob: -2.0259816646575928
    4. 'def' → logprob: -4.400981903076172
    5. 'min' → logprob: -5.025981903076172
    6. '#' → logprob: -5.025981903076172
    7. 'from' → logprob: -5.275981903076172
    8. '   ' → logprob: -5.400981903076172
    9. 'remaining' → logprob: -5.400981903076172
    10. 'merged' → logprob: -6.400981903076172

Token 1214: ' chunks' (ID: 53440)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.45593416690826416
    2. 'chunks' → logprob: -1.3309341669082642
    3. 'result' → logprob: -2.9559340476989746
    4. '       ' → logprob: -3.9559340476989746
    5. '#' → logprob: -4.705934047698975
    6. 'res' → logprob: -5.580934047698975
    7. '   ' → logprob: -5.580934047698975
    8. 'remaining' → logprob: -5.830934047698975
    9. 'weight' → logprob: -6.830934047698975
    10. ' if' → logprob: -6.830934047698975

Token 1215: ' weight' (ID: 6049)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.0167149305343628
    2. '
' → logprob: -1.6417149305343628
    3. 'if' → logprob: -1.8917149305343628
    4. 'chunks' → logprob: -2.1417150497436523
    5. 'result' → logprob: -2.5167150497436523
    6. 'def' → logprob: -2.8917150497436523
    7. ' if' → logprob: -5.141715049743652
    8. '        
' → logprob: -5.266715049743652
    9. '   ' → logprob: -5.391715049743652
    10. ' =' → logprob: -5.516715049743652

Token 1216: ' sums' (ID: 73121)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5940593481063843
    2. '=' → logprob: -0.9690593481063843
    3. '       ' → logprob: -2.969059467315674
    4. '   ' → logprob: -5.344059467315674
    5. ',' → logprob: -6.469059467315674
    6. 'if' → logprob: -6.594059467315674
    7. '
' → logprob: -6.719059467315674
    8. 's' → logprob: -6.969059467315674
    9. 'def' → logprob: -7.094059467315674
    10. 'chunks' → logprob: -7.094059467315674

Token 1217: ',' (ID: 11)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3363567590713501
    2. '       ' → logprob: -2.2113566398620605
    3. '
' → logprob: -2.3363566398620605
    4. '=' → logprob: -3.0863566398620605
    5. 'if' → logprob: -4.9613566398620605
    6. '   ' → logprob: -5.3363566398620605
    7. 'chunks' → logprob: -5.8363566398620605
    8. ' if' → logprob: -5.9613566398620605
    9. 'def' → logprob: -6.0863566398620605
    10. 'weight' → logprob: -6.2113566398620605

Token 1218: ' output' (ID: 4733)
  Prédit: 'and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'and' → logprob: -1.7995586395263672
    2. 'then' → logprob: -1.7995586395263672
    3. '       ' → logprob: -2.049558639526367
    4. 'return' → logprob: -2.049558639526367
    5. ' then' → logprob: -2.674558639526367
    6. 'result' → logprob: -3.049558639526367
    7. 'spl' → logprob: -3.174558639526367
    8. ' and' → logprob: -3.424558639526367
    9. '#' → logprob: -4.049558639526367
    10. 'b' → logprob: -4.174558639526367

Token 1219: 'ting' (ID: 1744)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.36814141273498535
    2. '=' → logprob: -1.6181414127349854
    3. '       ' → logprob: -2.8681414127349854
    4. '[' → logprob: -3.6181414127349854
    5. '=[' → logprob: -5.118141174316406
    6. '[
' → logprob: -5.368141174316406
    7. '.append' → logprob: -6.118141174316406
    8. '   ' → logprob: -6.368141174316406
    9. ' [' → logprob: -6.493141174316406
    10. ':' → logprob: -6.743141174316406

Token 1220: ' one' (ID: 1001)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0025011058896780014
    2. '[
' → logprob: -6.127501010894775
    3. '[self' → logprob: -9.002501487731934
    4. 'Weight' → logprob: -9.377501487731934
    5. '[new' → logprob: -11.002501487731934
    6. '[result' → logprob: -11.127501487731934
    7. '[min' → logprob: -11.627501487731934
    8. '[int' → logprob: -11.877501487731934
    9. '```' → logprob: -12.127501487731934
    10. '[s' → logprob: -12.252501487731934

Token 1221: ' or' (ID: 503)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -1.294830322265625
    2. '[' → logprob: -1.419830322265625
    3. ' =' → logprob: -1.544830322265625
    4. 'chunk' → logprob: -2.169830322265625
    5. 'All' → logprob: -3.044830322265625
    6. 'return' → logprob: -3.669830322265625
    7. 'Weight' → logprob: -3.794830322265625
    8. '       ' → logprob: -4.044830322265625
    9. '   ' → logprob: -4.044830322265625
    10. '[
' → logprob: -4.419830322265625

Token 1222: ' more' (ID: 945)
  Prédit: 'more'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'more' → logprob: -0.16352353990077972
    2. 'two' → logprob: -2.1635234355926514
    3. 'few' → logprob: -3.9135234355926514
    4. 'multiple' → logprob: -4.6635236740112305
    5. 'se' → logprob: -6.1635236740112305
    6. 'a' → logprob: -6.2885236740112305
    7. 'zero' → logprob: -6.6635236740112305
    8. 'maybe' → logprob: -7.7885236740112305
    9. '```' → logprob: -8.66352367401123
    10. 'possibly' → logprob: -9.41352367401123

Token 1223: ' chunks' (ID: 53440)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.8106429576873779
    2. '
' → logprob: -1.310642957687378
    3. '=' → logprob: -2.810642957687378
    4. 'def' → logprob: -3.060642957687378
    5. 'chunks' → logprob: -3.435642957687378
    6. '   ' → logprob: -4.060643196105957
    7. '```' → logprob: -4.060643196105957
    8. '#' → logprob: -4.435643196105957
    9. '_chunks' → logprob: -4.685643196105957
    10. ':' → logprob: -4.810643196105957

Token 1224: ' with' (ID: 483)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.6272927522659302
    2. 'chunks' → logprob: -1.7522927522659302
    3. '       ' → logprob: -2.0022926330566406
    4. 'result' → logprob: -2.5022926330566406
    5. 'if' → logprob: -3.8772926330566406
    6. 'def' → logprob: -4.127292633056641
    7. 'from' → logprob: -4.377292633056641
    8. '#' → logprob: -4.502292633056641
    9. 'res' → logprob: -5.127292633056641
    10. '        
' → logprob: -6.377292633056641

Token 1225: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.08304786682128906
    2. 'a' → logprob: -3.208047866821289
    3. 'weight' → logprob: -3.708047866821289
    4. 'Weight' → logprob: -4.708047866821289
    5. '0' → logprob: -5.583047866821289
    6. 'bok' → logprob: -7.333047866821289
    7. '```' → logprob: -7.958047866821289
    8. 'Quantity' → logprob: -8.333047866821289
    9. 'the' → logprob: -8.583047866821289
    10. 'quantity' → logprob: -8.958047866821289

Token 1226: '=' (ID: 28)
  Prédit: '='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -1.676292231422849e-05
    2. '0' → logprob: -11.750017166137695
    3. ' =' → logprob: -12.250017166137695
    4. '==' → logprob: -12.625017166137695
    5. '```' → logprob: -15.125017166137695
    6. '`' → logprob: -15.875017166137695
    7. '=`' → logprob: -16.375017166137695
    8. '=
' → logprob: -16.500017166137695
    9. '＝' → logprob: -16.750017166137695
    10. '_=' → logprob: -18.000017166137695

Token 1227: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.3856492842023727e-06
    2. ' ' → logprob: -13.625000953674316
    3. '[' → logprob: -16.625001907348633
    4. '=' → logprob: -17.875001907348633
    5. '```' → logprob: -19.375001907348633
    6. '
' → logprob: -20.375001907348633
    7. '`' → logprob: -20.500001907348633
    8. '０' → logprob: -20.500001907348633
    9. '[
' → logprob: -20.875001907348633
    10. '000' → logprob: -21.000001907348633

Token 1228: '.

' (ID: 364)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5442414283752441
    2. 'chunks' → logprob: -1.4192414283752441
    3. '
' → logprob: -2.044241428375244
    4. 'def' → logprob: -4.044241428375244
    5. 'result' → logprob: -4.419241428375244
    6. 'if' → logprob: -4.544241428375244
    7. 'from' → logprob: -5.794241428375244
    8. '#' → logprob: -6.794241428375244
    9. '   ' → logprob: -7.419241428375244
    10. 'res' → logprob: -7.544241428375244

Token 1229: '       ' (ID: 309)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.5412967801094055
    2. '       ' → logprob: -1.1662967205047607
    3. 'result' → logprob: -2.7912967205047607
    4. 'chunks' → logprob: -3.5412967205047607
    5. 'if' → logprob: -5.29129695892334
    6. 'res' → logprob: -6.16629695892334
    7. 'def' → logprob: -6.41629695892334
    8. '        
' → logprob: -6.66629695892334
    9. '#' → logprob: -6.66629695892334
    10. '```' → logprob: -6.79129695892334

Token 1230: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6826431751251221
    2. 'result' → logprob: -1.182643175125122
    3. 'chunks' → logprob: -2.182643175125122
    4. 'if' → logprob: -3.432643175125122
    5. 'res' → logprob: -4.307642936706543
    6. 'from' → logprob: -4.807642936706543
    7. '#' (adapté à ' #') → logprob: -5.057642936706543
    8. '
' → logprob: -5.432642936706543
    9. 'def' → logprob: -5.932642936706543
    10. 'results' → logprob: -6.057642936706543

Token 1231: ' Since' (ID: 12265)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.527925968170166
    2. 'if' → logprob: -2.027925968170166
    3. 'chunks' → logprob: -2.152925968170166
    4. '       ' → logprob: -2.527925968170166
    5. 'res' → logprob: -3.527925968170166
    6. 'from' → logprob: -4.152925968170166
    7. 'def' → logprob: -4.152925968170166
    8. 'results' → logprob: -4.777925968170166
    9. '#' → logprob: -5.027925968170166
    10. '   ' → logprob: -6.652925968170166

Token 1232: ' b' (ID: 287)
  Prédit: 'total'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'total' → logprob: -0.20184966921806335
    2. ' total' → logprob: -1.7018496990203857
    3. ' not' → logprob: -8.951849937438965
    4. 'not' → logprob: -9.076849937438965
    5. '
' → logprob: -9.326849937438965
    6. '#' → logprob: -10.201849937438965
    7. '   ' → logprob: -10.826849937438965
    8. 'b' → logprob: -11.201849937438965
    9. '       ' → logprob: -11.826849937438965
    10. ' b' → logprob: -12.201849937438965

Token 1233: '=' (ID: 28)
  Prédit: '='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0016932693542912602
    2. '==' → logprob: -6.626693248748779
    3. ' =' → logprob: -8.251693725585938
    4. ' ==' → logprob: -9.751693725585938
    5. '_i' → logprob: -10.376693725585938
    6. '_' → logprob: -12.626693725585938
    7. 'i' → logprob: -13.001693725585938
    8. '_=' → logprob: -13.001693725585938
    9. ' is' → logprob: -13.626693725585938
    10. 's' → logprob: -13.876693725585938

Token 1234: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.011110896244645119
    2. '=' → logprob: -4.511110782623291
    3. ' ' → logprob: -9.88611125946045
    4. ' =' → logprob: -11.63611125946045
    5. '==' → logprob: -12.76111125946045
    6. '```' → logprob: -16.261110305786133
    7. ')' → logprob: -16.636110305786133
    8. ' ==' → logprob: -16.636110305786133
    9. '`' → logprob: -16.761110305786133
    10. ',' → logprob: -16.761110305786133

Token 1235: ' means' (ID: 4748)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.24344868957996368
    2. ',' → logprob: -1.6184487342834473
    3. ':
' → logprob: -4.618448734283447
    4. ' and' → logprob: -6.618448734283447
    5. ',
' → logprob: -6.743448734283447
    6. '=' → logprob: -6.868448734283447
    7. '
' → logprob: -6.993448734283447
    8. '0' → logprob: -7.868448734283447
    9. 'and' → logprob: -7.993448734283447
    10. ' is' → logprob: -7.993448734283447

Token 1236: ' quantity' (ID: 17245)
  Prédit: 'quantity'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'quantity' → logprob: -0.903222918510437
    2. 'the' → logprob: -1.403222918510437
    3. 'mar' → logprob: -2.0282230377197266
    4. ' quantity' → logprob: -2.6532230377197266
    5. '1' → logprob: -3.0282230377197266
    6. 'all' → logprob: -3.6532230377197266
    7. ' the' → logprob: -3.6532230377197266
    8. 'weight' → logprob: -4.153223037719727
    9. 'that' → logprob: -4.403223037719727
    10. ' all' → logprob: -5.278223037719727

Token 1237: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6352945566177368
    2. ' =' → logprob: -0.7602945566177368
    3. ' is' → logprob: -7.260294437408447
    4. '>' → logprob: -7.510294437408447
    5. '==' → logprob: -8.260294914245605
    6. '1' → logprob: -8.510294914245605
    7. ' >' → logprob: -8.510294914245605
    8. ' ==' → logprob: -8.635294914245605
    9. '0' → logprob: -9.135294914245605
    10. '```' → logprob: -9.260294914245605

Token 1238: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.1877342015504837
    2. 'Quantity' → logprob: -1.8127342462539673
    3. 'Weight' → logprob: -5.062734127044678
    4. '0' → logprob: -6.437734127044678
    5. '2' → logprob: -12.312734603881836
    6. ' Quantity' → logprob: -12.437734603881836
    7. 'quantity' → logprob: -13.062734603881836
    8. '(' → logprob: -13.062734603881836
    9. '`' → logprob: -13.562734603881836
    10. 'pow' → logprob: -13.687734603881836

Token 1239: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.01721135526895523
    2. 'Quantity' → logprob: -4.392211437225342
    3. '0' → logprob: -5.517211437225342
    4. 'Weight' → logprob: -7.392211437225342
    5. '2' → logprob: -10.517210960388184
    6. '(' → logprob: -11.267210960388184
    7. 'pow' → logprob: -12.517210960388184
    8. 'quantity' → logprob: -13.017210960388184
    9. '`' → logprob: -13.392210960388184
    10. 'Power' → logprob: -13.892210960388184

Token 1240: ' (' (ID: 350)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.6852714419364929
    2. '       ' → logprob: -0.8102714419364929
    3. 'chunks' → logprob: -3.8102715015411377
    4. 'if' → logprob: -4.060271263122559
    5. 'def' → logprob: -5.935271263122559
    6. 'result' → logprob: -6.185271263122559
    7. '        
' → logprob: -6.435271263122559
    8. ' if' → logprob: -6.685271263122559
    9. '   ' → logprob: -7.560271263122559
    10. '

' → logprob: -7.685271263122559

Token 1241: '2' (ID: 17)
  Prédit: '<<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '<<' → logprob: -0.2395339459180832
    2. '),' → logprob: -1.7395339012145996
    3. ')' → logprob: -3.8645339012145996
    4. 'items' → logprob: -5.3645339012146
    5. '#' → logprob: -6.1145339012146
    6. 'because' → logprob: -6.7395339012146
    7. '```' → logprob: -6.9895339012146
    8. ')
' → logprob: -7.1145339012146
    9. '1' → logprob: -7.2395339012146
    10. 'quantity' → logprob: -7.4895339012146

Token 1242: '^' (ID: 61)
  Prédit: '**'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '**' → logprob: -0.22592440247535706
    2. '^' → logprob: -1.6009243726730347
    3. ' **' → logprob: -8.350924491882324
    4. '```' → logprob: -8.600924491882324
    5. '0' → logprob: -10.600924491882324
    6. '
' → logprob: -10.975924491882324
    7. ')' → logprob: -11.350924491882324
    8. '#' → logprob: -11.725924491882324
    9. '`' → logprob: -11.725924491882324
    10. ')**' → logprob: -12.475924491882324

Token 1243: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -4.36574100604048e-06
    2. 'b' → logprob: -12.500004768371582
    3. '```' → logprob: -14.875004768371582
    4. ' ' → logprob: -15.750004768371582
    5. '`' → logprob: -16.750003814697266
    6. ' ' → logprob: -17.750003814697266
    7. '[' → logprob: -17.875003814697266
    8. ')' → logprob: -18.125003814697266
    9. '=' → logprob: -18.250003814697266
    10. '``' → logprob: -18.500003814697266

Token 1244: '=' (ID: 28)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.2618684768676758
    2. '),' → logprob: -1.5118684768676758
    3. ')
' → logprob: -4.761868476867676
    4. '=' → logprob: -7.636868476867676
    5. ').' → logprob: -8.886868476867676
    6. '):
' → logprob: -8.886868476867676
    7. '```' → logprob: -9.261868476867676
    8. ')

' → logprob: -9.761868476867676
    9. ' =' → logprob: -9.886868476867676
    10. ' )' → logprob: -9.886868476867676

Token 1245: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.069664333248511e-05
    2. '0' → logprob: -11.375020980834961
    3. ' ' → logprob: -12.250020980834961
    4. '`' → logprob: -13.375020980834961
    5. ')' → logprob: -13.625020980834961
    6. '```' → logprob: -14.500020980834961
    7. '=' → logprob: -15.125020980834961
    8. '
' → logprob: -15.125020980834961
    9. '``' → logprob: -16.06252098083496
    10. ''' → logprob: -16.18752098083496

Token 1246: ').

' (ID: 3991)
  Prédit: '),'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '),' → logprob: -0.6035802364349365
    2. ')
' → logprob: -0.8535802364349365
    3. ')' → logprob: -3.7285802364349365
    4. '),
' → logprob: -6.728580474853516
    5. '):
' → logprob: -6.853580474853516
    6. ')

' → logprob: -7.978580474853516
    7. '       ' → logprob: -8.728580474853516
    8. '
' → logprob: -9.478580474853516
    9. ').' → logprob: -9.603580474853516
    10. '   ' → logprob: -9.728580474853516

Token 1247: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.715011715888977
    2. 'if' → logprob: -0.715011715888977
    3. '
' → logprob: -4.7150115966796875
    4. 'chunks' → logprob: -4.9650115966796875
    5. 'x' → logprob: -6.4650115966796875
    6. ' if' → logprob: -6.7150115966796875
    7. 'return' → logprob: -7.0900115966796875
    8. '   ' → logprob: -7.0900115966796875
    9. 'result' → logprob: -8.340011596679688
    10. '```' → logprob: -8.590011596679688

Token 1248: ' #' (ID: 1069)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.2377355545759201
    2. '       ' → logprob: -1.7377355098724365
    3. 'chunks' → logprob: -4.237735748291016
    4. '
' → logprob: -4.612735748291016
    5. 'result' → logprob: -5.862735748291016
    6. '   ' → logprob: -6.362735748291016
    7. 'weight' → logprob: -6.612735748291016
    8. '#' (adapté à ' #') → logprob: -6.862735748291016
    9. ' if' → logprob: -6.862735748291016
    10. 'remaining' → logprob: -7.362735748291016

Token 1249: ' We' (ID: 1416)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.14223162829875946
    2. 'chunks' → logprob: -2.6422317028045654
    3. '       ' → logprob: -3.6422317028045654
    4. 'result' → logprob: -3.7672317028045654
    5. 'res' → logprob: -5.767231464385986
    6. '#' → logprob: -6.017231464385986
    7. 'x' → logprob: -6.517231464385986
    8. '   ' → logprob: -7.017231464385986
    9. 'def' → logprob: -7.142231464385986
    10. '
' → logprob: -7.642231464385986

Token 1250: ' can' (ID: 665)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -1.0057660341262817
    2. 'def' → logprob: -1.8807660341262817
    3. ' can' → logprob: -2.130765914916992
    4. '.' → logprob: -2.380765914916992
    5. 'return' → logprob: -3.255765914916992
    6. '
' → logprob: -3.630765914916992
    7. ' def' → logprob: -3.880765914916992
    8. '=' → logprob: -4.005765914916992
    9. ' return' → logprob: -4.130765914916992
    10. ' need' → logprob: -4.130765914916992

Token 1251: ' combine' (ID: 21700)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.8432727456092834
    2. 'chunks' → logprob: -1.4682726860046387
    3. 'return' → logprob: -2.2182726860046387
    4. 'if' → logprob: -2.7182726860046387
    5. 'from' → logprob: -3.3432726860046387
    6. 'import' → logprob: -3.8432726860046387
    7. '   ' → logprob: -4.093272686004639
    8. 'result' → logprob: -4.218272686004639
    9. '
' → logprob: -4.218272686004639
    10. 'div' → logprob: -4.468272686004639

Token 1252: ' all' (ID: 722)
  Prédit: 'chunks'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'chunks' → logprob: -0.3901180922985077
    2. 'all' → logprob: -1.89011812210083
    3. '[' → logprob: -2.76511812210083
    4. 'the' → logprob: -3.89011812210083
    5. 'Weight' → logprob: -4.01511812210083
    6. 'weight' → logprob: -4.26511812210083
    7. 'chunk' → logprob: -4.76511812210083
    8. 'weights' → logprob: -5.26511812210083
    9. 'total' → logprob: -5.26511812210083
    10. 'remaining' → logprob: -5.26511812210083

Token 1253: ' into' (ID: 1511)
  Prédit: 'chunks'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'chunks' → logprob: -0.6474377512931824
    2. 'weight' → logprob: -1.1474378108978271
    3. 'remaining' → logprob: -2.772437810897827
    4. 'total' → logprob: -3.522437810897827
    5. 'weights' → logprob: -3.897437810897827
    6. '   ' → logprob: -4.647437572479248
    7. 'left' → logprob: -4.772437572479248
    8. 'chunk' → logprob: -5.522437572479248
    9. '#' → logprob: -5.647437572479248
    10. '       ' → logprob: -5.647437572479248

Token 1254: ' single' (ID: 4590)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.008225536905229092
    2. 'Weight' → logprob: -5.258225440979004
    3. '[self' → logprob: -7.133225440979004
    4. '[
' → logprob: -7.758225440979004
    5. '[new' → logprob: -8.008225440979004
    6. 'All' → logprob: -8.258225440979004
    7. '[min' → logprob: -8.258225440979004
    8. '[a' → logprob: -8.508225440979004
    9. '[result' → logprob: -9.258225440979004
    10. 'one' → logprob: -9.258225440979004

Token 1255: ' chunk' (ID: 23958)
  Prédit: 'All'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'All' → logprob: -0.5665560960769653
    2. 'chunk' → logprob: -0.9415560960769653
    3. 'Weight' → logprob: -3.191555976867676
    4. 'weight' → logprob: -7.566555976867676
    5. 'Chunk' → logprob: -8.691555976867676
    6. 'return' → logprob: -9.066555976867676
    7. 'chunks' → logprob: -9.066555976867676
    8. '`' → logprob: -9.191555976867676
    9. '
' → logprob: -9.191555976867676
    10. '[' → logprob: -9.566555976867676

Token 1256: ' with' (ID: 483)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0685737207531929
    2. '
' → logprob: -3.0685737133026123
    3. 'return' → logprob: -4.068573951721191
    4. 'if' → logprob: -6.818573951721191
    5. 'chunk' → logprob: -7.818573951721191
    6. 'weight' → logprob: -8.443573951721191
    7. '```' → logprob: -8.818573951721191
    8. 'chunks' → logprob: -8.818573951721191
    9. 'result' → logprob: -8.943573951721191
    10. ' if' → logprob: -8.943573951721191

Token 1257: ' quantity' (ID: 17245)
  Prédit: 'Weight'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Weight' → logprob: -0.04862472042441368
    2. 'weight' → logprob: -3.0486247539520264
    3. ' Weight' → logprob: -10.923624992370605
    4. 'a' → logprob: -11.798624992370605
    5. ' weight' → logprob: -12.173624992370605
    6. 'b' → logprob: -12.548624992370605
    7. 'total' → logprob: -13.173624992370605
    8. '_weight' → logprob: -14.548624992370605
    9. 'Quantity' → logprob: -14.923624992370605
    10. '
' → logprob: -15.923624992370605

Token 1258: '=' (ID: 28)
  Prédit: '='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0001490716531407088
    2. ' =' → logprob: -8.87514877319336
    3. 'Quantity' → logprob: -11.87514877319336
    4. 'Unit' → logprob: -13.75014877319336
    5. 'Weight' → logprob: -14.00014877319336
    6. '```' → logprob: -16.50014877319336
    7. '=`' → logprob: -16.62514877319336
    8. '=
' → logprob: -16.87514877319336
    9. 'unit' → logprob: -17.00014877319336
    10. '`' → logprob: -17.62514877319336

Token 1259: '1' (ID: 16)
  Prédit: 'Quantity'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Quantity' → logprob: -3.054500666621607e-06
    2. '0' → logprob: -12.75000286102295
    3. ' Quantity' → logprob: -15.62500286102295
    4. 'Weight' → logprob: -17.750003814697266
    5. 'Quant' → logprob: -19.875003814697266
    6. '1' → logprob: -20.125003814697266
    7. '_quantity' → logprob: -21.000003814697266
    8. 'quantity' → logprob: -22.375003814697266
    9. 'Quantum' → logprob: -22.875003814697266
    10. '`' → logprob: -23.125003814697266

Token 1260: ',' (ID: 11)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.7034682035446167
    2. '       ' → logprob: -0.7034682035446167
    3. 'return' → logprob: -5.703468322753906
    4. 'if' → logprob: -6.703468322753906
    5. ',' → logprob: -7.078468322753906
    6. ' if' → logprob: -7.203468322753906
    7. '```' → logprob: -7.453468322753906
    8. ':
' → logprob: -7.703468322753906
    9. '        
' → logprob: -7.703468322753906
    10. '   ' → logprob: -7.828468322753906

Token 1261: ' weight' (ID: 6049)
  Prédit: 'weight'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'weight' → logprob: -0.08019363880157471
    2. ' weight' → logprob: -2.955193519592285
    3. 'return' → logprob: -4.330193519592285
    4. '       ' → logprob: -4.705193519592285
    5. 'Weight' → logprob: -7.080193519592285
    6. 'and' → logprob: -7.330193519592285
    7. ' return' → logprob: -8.205193519592285
    8. 'b' → logprob: -8.205193519592285
    9. 'quantity' → logprob: -8.455193519592285
    10. ' and' → logprob: -9.080193519592285

Token 1262: '=' (ID: 28)
  Prédit: '='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.003701854730024934
    2. ' =' → logprob: -5.628701686859131
    3. 'Weight' → logprob: -9.378702163696289
    4. 'total' → logprob: -11.378702163696289
    5. '(total' → logprob: -12.628702163696289
    6. 'Value' → logprob: -14.128702163696289
    7. '=(' → logprob: -15.503702163696289
    8. '=int' → logprob: -15.628702163696289
    9. '=value' → logprob: -15.753702163696289
    10. '(' → logprob: -15.753702163696289

Token 1263: 'total' (ID: 9577)
  Prédit: 'Weight'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Weight' → logprob: -0.0036048211622983217
    2. 'total' → logprob: -5.628604888916016
    3. ' Weight' → logprob: -13.003604888916016
    4. 'Total' → logprob: -13.753604888916016
    5. 'weight' → logprob: -14.753604888916016
    6. 'Weights' → logprob: -15.003604888916016
    7. 'Weighted' → logprob: -15.378604888916016
    8. 'Value' → logprob: -15.378604888916016
    9. ' total' → logprob: -16.253604888916016
    10. 'Width' → logprob: -16.628604888916016

Token 1264: '_weight' (ID: 34711)
  Prédit: '_weight'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_weight' → logprob: -0.0006946814828552306
    2. 'Weight' → logprob: -7.375694751739502
    3. 'weight' → logprob: -9.625694274902344
    4. 'We' → logprob: -14.750694274902344
    5. '_' → logprob: -14.875694274902344
    6. '_we' → logprob: -15.500694274902344
    7. ' _' → logprob: -15.625694274902344
    8. '_weights' → logprob: -15.625694274902344
    9. '`' → logprob: -16.000694274902344
    10. '\' → logprob: -16.125694274902344

Token 1265: '.

' (ID: 364)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.7031536102294922
    2. '       ' → logprob: -0.7031536102294922
    3. 'return' → logprob: -4.828153610229492
    4. '```' → logprob: -7.578153610229492
    5. '
' → logprob: -8.203153610229492
    6. '   ' → logprob: -8.453153610229492
    7. 'All' → logprob: -8.828153610229492
    8. '        
' → logprob: -8.953153610229492
    9. '  
' → logprob: -9.078153610229492
    10. 'weight' → logprob: -9.578153610229492

Token 1266: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.001430355361662805
    2. 'return' → logprob: -6.626430511474609
    3. '
' → logprob: -9.50143051147461
    4. ' return' → logprob: -11.62643051147461
    5. '```' → logprob: -12.00143051147461
    6. '   ' → logprob: -12.62643051147461
    7. 'chunk' → logprob: -12.75143051147461
    8. 'if' → logprob: -12.75143051147461
    9. '           ' → logprob: -13.12643051147461
    10. 'chunks' → logprob: -13.50143051147461

Token 1267: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.600584864616394
    2. 'return' → logprob: -0.850584864616394
    3. 'if' → logprob: -4.100584983825684
    4. 'chunk' → logprob: -5.475584983825684
    5. '
' → logprob: -6.225584983825684
    6. 'chunks' → logprob: -7.475584983825684
    7. 'weight' → logprob: -7.850584983825684
    8. 'result' → logprob: -8.225584983825684
    9. ' return' → logprob: -8.475584983825684
    10. ' if' → logprob: -9.600584983825684

Token 1268: ' However' (ID: 5551)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.23720243573188782
    2. 'return' → logprob: -1.9872024059295654
    3. '       ' → logprob: -2.7372024059295654
    4. 'weight' → logprob: -5.3622026443481445
    5. 'chunks' → logprob: -5.8622026443481445
    6. 'chunk' → logprob: -6.8622026443481445
    7. '#' → logprob: -7.9872026443481445
    8. 'result' → logprob: -8.737202644348145
    9. '```' → logprob: -9.862202644348145
    10. '   ' → logprob: -10.487202644348145

Token 1269: ',' (ID: 11)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.22978685796260834
    2. '       ' → logprob: -1.7297868728637695
    3. ' if' → logprob: -3.6047868728637695
    4. '#' → logprob: -7.3547868728637695
    5. 'weight' → logprob: -9.97978687286377
    6. 'import' → logprob: -11.10478687286377
    7. 'we' → logprob: -11.47978687286377
    8. '```' → logprob: -11.47978687286377
    9. ',' → logprob: -11.60478687286377
    10. ':' → logprob: -12.10478687286377

Token 1270: ' the' (ID: 290)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.008110725320875645
    2. '#' → logprob: -4.883110523223877
    3. '       ' → logprob: -8.258111000061035
    4. ' if' → logprob: -8.883111000061035
    5. '
' → logprob: -10.133111000061035
    6. 'weight' → logprob: -10.508111000061035
    7. 'return' → logprob: -11.133111000061035
    8. '```' → logprob: -11.383111000061035
    9. 'import' → logprob: -12.008111000061035
    10. 'max' → logprob: -13.383111000061035

Token 1271: ' problem' (ID: 4792)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.06387177109718323
    2. '#' → logprob: -3.0638718605041504
    3. 'def' → logprob: -5.06387186050415
    4. 'result' → logprob: -5.18887186050415
    5. 'chunks' → logprob: -7.68887186050415
    6. 'import' → logprob: -7.81387186050415
    7. '```' → logprob: -7.81387186050415
    8. 'res' → logprob: -8.313871383666992
    9. 'remaining' → logprob: -8.313871383666992
    10. '       ' → logprob: -8.438871383666992

Token 1272: ' example' (ID: 4994)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.1102657318115234
    2. '       ' → logprob: -1.9852657318115234
    3. '#' → logprob: -2.4852657318115234
    4. ' may' → logprob: -2.7352657318115234
    5. ' is' → logprob: -2.9852657318115234
    6. '
' → logprob: -3.2352657318115234
    7. ' seems' → logprob: -3.2352657318115234
    8. ' might' → logprob: -3.2352657318115234
    9. ':' → logprob: -3.3602657318115234
    10. '```' → logprob: -3.6102657318115234

Token 1273: ' shows' (ID: 7398)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -1.3989810943603516
    2. '#' → logprob: -2.0239810943603516
    3. 'def' → logprob: -2.0239810943603516
    4. '   ' → logprob: -2.2739810943603516
    5. '       ' → logprob: -2.5239810943603516
    6. ' suggests' → logprob: -3.1489810943603516
    7. ' def' → logprob: -3.6489810943603516
    8. ' is' → logprob: -3.8989810943603516
    9. 'suggest' → logprob: -4.023981094360352
    10. '```' → logprob: -4.023981094360352

Token 1274: ' multiple' (ID: 7598)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.3275282382965088
    2. '       ' → logprob: -2.202528238296509
    3. ' if' → logprob: -2.577528238296509
    4. '#' → logprob: -3.452528238296509
    5. '
' → logprob: -3.577528238296509
    6. 'return' → logprob: -4.70252799987793
    7. '```' → logprob: -4.70252799987793
    8. 'weight' → logprob: -6.07752799987793
    9. 'from' → logprob: -6.07752799987793
    10. 'chunks' → logprob: -6.45252799987793

Token 1275: ' chunks' (ID: 53440)
  Prédit: 'chunks'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'chunks' → logprob: -0.5404737591743469
    2. 'def' → logprob: -1.5404736995697021
    3. '
' → logprob: -2.665473699569702
    4. '#' → logprob: -3.290473699569702
    5. 'result' → logprob: -3.790473699569702
    6. '```' → logprob: -3.915473699569702
    7. '       ' → logprob: -4.290473937988281
    8. 'if' → logprob: -4.665473937988281
    9. 'from' → logprob: -4.790473937988281
    10. '   ' → logprob: -4.915473937988281

Token 1276: ' if' (ID: 538)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.398488849401474
    2. '       ' → logprob: -1.7734888792037964
    3. ':
' → logprob: -3.273488759994507
    4. ':' → logprob: -3.648488759994507
    5. 'def' → logprob: -3.898488759994507
    6. ' =' → logprob: -4.148488998413086
    7. ' if' → logprob: -4.273488998413086
    8. '        
' → logprob: -5.148488998413086
    9. '#' → logprob: -5.273488998413086
    10. '

' → logprob: -5.523488998413086

Token 1277: ' input' (ID: 3422)
  Prédit: 'total'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'total' → logprob: -0.00409015454351902
    2. ' total' → logprob: -5.504090309143066
    3. 'self' → logprob: -12.004090309143066
    4. 'multiple' → logprob: -13.879090309143066
    5. '```' → logprob: -14.004090309143066
    6. '#' → logprob: -14.129090309143066
    7. 'the' → logprob: -14.254090309143066
    8. '   ' → logprob: -14.504090309143066
    9. '
' → logprob: -14.504090309143066
    10. '(total' → logprob: -14.629090309143066

Token 1278: ' contains' (ID: 8895)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.32549580931663513
    2. '#' → logprob: -2.075495719909668
    3. '       ' → logprob: -2.825495719909668
    4. 'if' → logprob: -3.325495719909668
    5. 'def' → logprob: -4.325495719909668
    6. 'chunks' → logprob: -4.325495719909668
    7. 'from' → logprob: -5.200495719909668
    8. '```' → logprob: -5.575495719909668
    9. '        
' → logprob: -5.825495719909668
    10. ' if' → logprob: -5.950495719909668

Token 1279: ' multiple' (ID: 7598)
  Prédit: 'total'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'total' → logprob: -0.11215894669294357
    2. ' total' → logprob: -2.487159013748169
    3. 'self' → logprob: -5.11215877532959
    4. 'multiple' → logprob: -5.11215877532959
    5. '
' → logprob: -6.36215877532959
    6. ' multiple' → logprob: -6.48715877532959
    7. 'not' → logprob: -6.61215877532959
    8. ' not' → logprob: -6.98715877532959
    9. '0' → logprob: -7.11215877532959
    10. '```' → logprob: -7.23715877532959

Token 1280: ' different' (ID: 2647)
  Prédit: 'chunks'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'chunks' → logprob: -1.3990917205810547
    2. ' if' → logprob: -1.8990917205810547
    3. '
' → logprob: -2.1490917205810547
    4. ' chunks' → logprob: -2.5240917205810547
    5. '```' → logprob: -2.8990917205810547
    6. 'weights' → logprob: -3.2740917205810547
    7. 'weight' → logprob: -3.3990917205810547
    8. ' vehicles' → logprob: -3.7740917205810547
    9. 'if' → logprob: -3.7740917205810547
    10. 'vehicles' → logprob: -3.8990917205810547

Token 1281: ' weights' (ID: 28460)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -1.0287461280822754
    2. 'weights' → logprob: -1.9037461280822754
    3. '```' → logprob: -1.9037461280822754
    4. 'weight' → logprob: -2.0287461280822754
    5. 'chunks' → logprob: -2.1537461280822754
    6. ' chunks' → logprob: -4.528746128082275
    7. ' weights' → logprob: -4.653746128082275
    8. '#' → logprob: -4.653746128082275
    9. '\n' → logprob: -4.778746128082275
    10. '_weight' → logprob: -4.778746128082275

Token 1282: '.

' (ID: 364)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.34674662351608276
    2. '
' → logprob: -1.3467466831207275
    3. 'from' → logprob: -4.971746444702148
    4. '        
' → logprob: -4.971746444702148
    5. ',' → logprob: -5.346746444702148
    6. '#' → logprob: -5.971746444702148
    7. '

' → logprob: -6.096746444702148
    8. '.' → logprob: -6.346746444702148
    9. '.
' → logprob: -6.346746444702148
    10. '<|end|>' → logprob: -7.346746444702148

Token 1283: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4189915955066681
    2. '
' → logprob: -1.5439915657043457
    3. 'if' → logprob: -3.4189915657043457
    4. 'from' → logprob: -3.6689915657043457
    5. '#' → logprob: -3.9189915657043457
    6. 'weights' → logprob: -4.668991565704346
    7. 'chunks' → logprob: -4.793991565704346
    8. 'def' → logprob: -4.918991565704346
    9. '```' → logprob: -4.918991565704346
    10. 'tokens' → logprob: -5.668991565704346

Token 1284: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.11428145319223404
    2. '#' (adapté à ' #') → logprob: -2.739281415939331
    3. 'weight' → logprob: -4.36428165435791
    4. 'from' → logprob: -4.86428165435791
    5. 'weights' → logprob: -4.86428165435791
    6. 'freq' → logprob: -5.36428165435791
    7. 'chunks' → logprob: -5.86428165435791
    8. 'if' → logprob: -6.11428165435791
    9. '
' → logprob: -6.73928165435791
    10. 'counts' → logprob: -6.86428165435791

Token 1285: ' Re' (ID: 907)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.776824951171875
    2. '#' → logprob: -1.276824951171875
    3. 'weight' → logprob: -2.151824951171875
    4. 'from' → logprob: -2.526824951171875
    5. 'weights' → logprob: -4.026824951171875
    6. 'counts' → logprob: -4.776824951171875
    7. 'freq' → logprob: -4.901824951171875
    8. 'def' → logprob: -4.901824951171875
    9. 'if' → logprob: -5.026824951171875
    10. 'count' → logprob: -5.026824951171875

Token 1286: 'consider' (ID: 59464)
  Prédit: 'weight'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'weight' → logprob: -0.840837299823761
    2. '#' → logprob: -1.3408372402191162
    3. 'weights' → logprob: -2.590837240219116
    4. 'def' → logprob: -2.715837240219116
    5. 'from' → logprob: -2.840837240219116
    6. 'remaining' → logprob: -3.340837240219116
    7. 'mainder' → logprob: -4.590837478637695
    8. 'chunks' → logprob: -4.715837478637695
    9. 'count' → logprob: -5.090837478637695
    10. 'counts' → logprob: -5.465837478637695

Token 1287: ':

' (ID: 1402)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7804599404335022
    2. 'from' → logprob: -1.4054598808288574
    3. '#' → logprob: -1.6554598808288574
    4. 'chunks' → logprob: -3.4054598808288574
    5. 'def' → logprob: -4.155459880828857
    6. '
' → logprob: -4.155459880828857
    7. 'weight' → logprob: -4.905459880828857
    8. 'counts' → logprob: -5.030459880828857
    9. 'freq' → logprob: -5.155459880828857
    10. 'weights' → logprob: -5.155459880828857

Token 1288: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.006034973077476025
    2. '
' → logprob: -5.881034851074219
    3. '```' → logprob: -6.381034851074219
    4. '#' → logprob: -7.006034851074219
    5. 'from' → logprob: -7.756034851074219
    6. 'def' → logprob: -10.006034851074219
    7. '   ' → logprob: -10.006034851074219
    8. '        
' → logprob: -10.506034851074219
    9. '``' → logprob: -11.006034851074219
    10. 'Let's' → logprob: -11.756034851074219

Token 1289: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.10792147368192673
    2. '#' (adapté à ' #') → logprob: -2.7329213619232178
    3. 'from' → logprob: -4.357921600341797
    4. 'weight' → logprob: -4.607921600341797
    5. 'weights' → logprob: -4.982921600341797
    6. 'freq' → logprob: -5.482921600341797
    7. 'counts' → logprob: -7.107921600341797
    8. 'count' → logprob: -7.482921600341797
    9. 'if' → logprob: -7.607921600341797
    10. '
' → logprob: -8.232921600341797

Token 1290: ' Because' (ID: 13602)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.7690238356590271
    2. 'weight' → logprob: -1.6440238952636719
    3. '       ' → logprob: -1.7690238952636719
    4. 'from' → logprob: -2.769023895263672
    5. 'freq' → logprob: -3.519023895263672
    6. 'weights' → logprob: -3.644023895263672
    7. 'counts' → logprob: -3.894023895263672
    8. 'count' → logprob: -4.269023895263672
    9. 'def' → logprob: -5.144023895263672
    10. 'if' → logprob: -5.769023895263672

Token 1291: ' weight' (ID: 6049)
  Prédit: 'total'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'total' → logprob: -0.04212798923254013
    2. ' total' → logprob: -3.667128086090088
    3. '       ' → logprob: -5.417128086090088
    4. '
' → logprob: -5.792128086090088
    5. 'the' → logprob: -6.167128086090088
    6. '#' → logprob: -6.542128086090088
    7. 'self' → logprob: -6.667128086090088
    8. '   ' → logprob: -6.917128086090088
    9. 'weight' → logprob: -7.417128086090088
    10. 'we' → logprob: -8.16712760925293

Token 1292: ' unit' (ID: 7670)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.9152787327766418
    2. '=' → logprob: -1.540278673171997
    3. '_unit' → logprob: -1.540278673171997
    4. '   ' → logprob: -3.290278673171997
    5. 'Unit' → logprob: -3.415278673171997
    6. 'def' → logprob: -3.415278673171997
    7. '       ' → logprob: -3.540278673171997
    8. 's' → logprob: -4.915278911590576
    9. ' def' → logprob: -5.790278911590576
    10. '```' → logprob: -5.790278911590576

Token 1293: ' is' (ID: 382)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.6055266857147217
    2. '=' → logprob: -1.4805266857147217
    3. 's' → logprob: -2.9805266857147217
    4. ':' → logprob: -2.9805266857147217
    5. 'def' → logprob: -3.2305266857147217
    6. '   ' → logprob: -4.230526924133301
    7. '
' → logprob: -4.605526924133301
    8. '_unit' → logprob: -4.980526924133301
    9. '```' → logprob: -5.105526924133301
    10. ',' → logprob: -5.105526924133301

Token 1294: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -1.3521801233291626
    2. 'a' → logprob: -1.6021801233291626
    3. '2' → logprob: -1.8521801233291626
    4. 'always' → logprob: -2.352180004119873
    5. 'not' → logprob: -2.727180004119873
    6. 'Weight' → logprob: -2.852180004119873
    7. 'self' → logprob: -3.352180004119873
    8. 'an' → logprob: -3.852180004119873
    9. 'power' → logprob: -4.102180004119873
    10. 'pow' → logprob: -4.477180004119873

Token 1295: '2' (ID: 17)
  Prédit: 'Weight'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Weight' → logprob: -0.19150680303573608
    2. '2' → logprob: -3.191506862640381
    3. 'a' → logprob: -3.441506862640381
    4. '1' → logprob: -3.691506862640381
    5. 'an' → logprob: -3.691506862640381
    6. 'based' → logprob: -5.066506862640381
    7. 'Power' → logprob: -5.191506862640381
    8. 'int' → logprob: -5.316506862640381
    9. 'b' → logprob: -5.316506862640381
    10. 'B' → logprob: -5.691506862640381

Token 1296: '^' (ID: 61)
  Prédit: '**'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '**' → logprob: -0.031560949981212616
    2. ' **' → logprob: -4.281560897827148
    3. '```' → logprob: -5.281560897827148
    4. '^' → logprob: -5.906560897827148
    5. '
' → logprob: -6.031560897827148
    6. '#' → logprob: -6.906560897827148
    7. 'Unit' → logprob: -7.031560897827148
    8. 'def' → logprob: -7.156560897827148
    9. '**
' → logprob: -7.281560897827148
    10. ''s' → logprob: -7.281560897827148

Token 1297: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.18670809268951416
    2. 'self' → logprob: -2.4367079734802246
    3. '0' → logprob: -2.5617079734802246
    4. '-' → logprob: -6.561707973480225
    5. 'weight' → logprob: -6.936707973480225
    6. 'b' → logprob: -7.436707973480225
    7. 'a' → logprob: -7.686707973480225
    8. '(' → logprob: -8.061708450317383
    9. '(x' → logprob: -8.061708450317383
    10. '(self' → logprob: -8.061708450317383

Token 1298: ' grams' (ID: 55637)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.33455419540405273
    2. 'from' → logprob: -2.4595541954040527
    3. 'def' → logprob: -2.4595541954040527
    4. '#' → logprob: -3.8345541954040527
    5. '   ' → logprob: -4.084554195404053
    6. ',' → logprob: -4.084554195404053
    7. '
' → logprob: -4.084554195404053
    8. '=' → logprob: -4.709554195404053
    9. 'import' → logprob: -4.959554195404053
    10. ':' → logprob: -5.459554195404053

Token 1299: ',' (ID: 11)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2834373712539673
    2. '
' → logprob: -2.0334372520446777
    3. 'from' → logprob: -3.4084372520446777
    4. ',' → logprob: -3.7834372520446777
    5. '#' → logprob: -3.9084372520446777
    6. 'def' → logprob: -4.283437252044678
    7. ':
' → logprob: -5.408437252044678
    8. ':' → logprob: -5.783437252044678
    9. ' if' → logprob: -5.908437252044678
    10. '   ' → logprob: -6.158437252044678

Token 1300: ' quantity' (ID: 17245)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.19834844768047333
    2. '       ' → logprob: -1.8233484029769897
    3. 'x' → logprob: -4.823348522186279
    4. 'from' → logprob: -5.073348522186279
    5. 'and' → logprob: -7.198348522186279
    6. 'we' → logprob: -7.323348522186279
    7. 'b' → logprob: -7.323348522186279
    8. '
' → logprob: -7.698348522186279
    9. 'def' → logprob: -7.948348522186279
    10. '   ' → logprob: -8.073348045349121

Token 1301: ' unit' (ID: 7670)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.4344659745693207
    2. ' =' → logprob: -1.809466004371643
    3. 'def' → logprob: -2.8094658851623535
    4. '   ' → logprob: -2.9344658851623535
    5. '       ' → logprob: -3.8094658851623535
    6. '#' → logprob: -4.1844658851623535
    7. '>' → logprob: -4.8094658851623535
    8. ':' → logprob: -5.4344658851623535
    9. '
' → logprob: -5.5594658851623535
    10. '==' → logprob: -5.9344658851623535

Token 1302: ' ' (ID: 220)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.8934069871902466
    2. ' =' → logprob: -0.8934069871902466
    3. ':' → logprob: -3.268406867980957
    4. 'def' → logprob: -3.393406867980957
    5. ' is' → logprob: -3.643406867980957
    6. '>' → logprob: -4.268406867980957
    7. '   ' → logprob: -4.393406867980957
    8. ' def' → logprob: -4.643406867980957
    9. '#' → logprob: -4.768406867980957
    10. '
' → logprob: -5.518406867980957

Token 1303: '2' (ID: 17)
  Prédit: 'is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'is' → logprob: -0.3730863630771637
    2. '=' → logprob: -1.9980863332748413
    3. ' is' → logprob: -2.123086452484131
    4. '#' → logprob: -3.748086452484131
    5. ' =' → logprob: -5.373086452484131
    6. 'は' → logprob: -5.498086452484131
    7. 'must' → logprob: -5.873086452484131
    8. 'can' → logprob: -5.998086452484131
    9. 'unit' → logprob: -6.498086452484131
    10. ' #' → logprob: -6.623086452484131

Token 1304: '^' (ID: 61)
  Prédit: '^'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '^' → logprob: -0.016619453206658363
    2. '**' → logprob: -4.641619682312012
    3. '_' → logprob: -5.891619682312012
    4. '```' → logprob: -6.891619682312012
    5. '
' → logprob: -7.266619682312012
    6. '0' → logprob: -7.391619682312012
    7. '_i' → logprob: -7.766619682312012
    8. '#' → logprob: -8.141619682312012
    9. '=' → logprob: -8.516619682312012
    10. '^{' → logprob: -9.141619682312012

Token 1305: 'y' (ID: 88)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.3844427168369293
    2. 'y' → logprob: -1.259442687034607
    3. 'x' → logprob: -3.3844428062438965
    4. '-' → logprob: -7.3844428062438965
    5. '-y' → logprob: -8.009442329406738
    6. 'b' → logprob: -8.509442329406738
    7. '
' → logprob: -9.509442329406738
    8. ' y' → logprob: -10.134442329406738
    9. '```' → logprob: -10.384442329406738
    10. '-x' → logprob: -10.634442329406738

Token 1306: ' items' (ID: 4732)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -1.15967857837677
    2. ':' → logprob: -1.40967857837677
    3. '       ' → logprob: -1.40967857837677
    4. ':
' → logprob: -3.1596784591674805
    5. 'def' → logprob: -3.2846784591674805
    6. '   ' → logprob: -3.5346784591674805
    7. '#' → logprob: -4.2846784591674805
    8. '=' → logprob: -4.5346784591674805
    9. '```' → logprob: -4.5346784591674805
    10. ',' → logprob: -4.6596784591674805

Token 1307: ',' (ID: 11)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5991514921188354
    2. '
' → logprob: -0.9741514921188354
    3. 'from' → logprob: -3.224151611328125
    4. '#' → logprob: -4.099151611328125
    5. 'def' → logprob: -4.724151611328125
    6. '

' → logprob: -6.349151611328125
    7. '        
' → logprob: -6.474151611328125
    8. 'import' → logprob: -6.849151611328125
    9. '```' → logprob: -6.849151611328125
    10. ' from' → logprob: -7.599151611328125

Token 1308: ' total' (ID: 3609)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.6837624311447144
    2. '       ' → logprob: -0.8087624311447144
    3. '
' → logprob: -3.933762550354004
    4. 'from' → logprob: -4.058762550354004
    5. 'def' → logprob: -5.558762550354004
    6. '   ' → logprob: -6.308762550354004
    7. 'x' → logprob: -6.683762550354004
    8. 'if' → logprob: -6.808762550354004
    9. 'tokens' → logprob: -6.808762550354004
    10. '        
' → logprob: -7.058762550354004

Token 1309: ' mass' (ID: 4842)
  Prédit: '_weight'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_weight' → logprob: -0.0072243004105985165
    2. 'weight' → logprob: -5.257224082946777
    3. '   ' → logprob: -6.757224082946777
    4. '       ' → logprob: -8.007224082946777
    5. '```' → logprob: -8.757224082946777
    6. '_' → logprob: -8.882224082946777
    7. '#' → logprob: -10.257224082946777
    8. '_
' → logprob: -10.257224082946777
    9. '_weights' → logprob: -10.882224082946777
    10. '
' → logprob: -11.007224082946777

Token 1310: ':
' (ID: 734)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.7429748773574829
    2. '=' → logprob: -0.9929748773574829
    3. '       ' → logprob: -2.1179747581481934
    4. '   ' → logprob: -4.867974758148193
    5. '#' → logprob: -4.992974758148193
    6. 'def' → logprob: -5.117974758148193
    7. ' is' → logprob: -5.367974758148193
    8. '=
' → logprob: -6.617974758148193
    9. ':' → logprob: -6.742974758148193
    10. '```' → logprob: -6.867974758148193

Token 1311: '       ' (ID: 309)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.06413844972848892
    2. '       ' → logprob: -2.814138412475586
    3. 'x' → logprob: -7.189138412475586
    4. 'from' → logprob: -7.939138412475586
    5. 'weight' → logprob: -8.189138412475586
    6. ' #' → logprob: -8.689138412475586
    7. '
' → logprob: -9.189138412475586
    8. 'import' → logprob: -9.439138412475586
    9. '```' → logprob: -9.689138412475586
    10. '   ' → logprob: -10.064138412475586

Token 1312: ' #' (ID: 1069)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' (adapté à ' #') → logprob: -0.012272522784769535
    2. '       ' → logprob: -4.762272357940674
    3. ' #' → logprob: -6.512272357940674
    4. '
' → logprob: -7.637272357940674
    5. '=' → logprob: -7.762272357940674
    6. 'from' → logprob: -8.012272834777832
    7. ' =' → logprob: -8.762272834777832
    8. 'x' → logprob: -8.887272834777832
    9. '   ' → logprob: -9.387272834777832
    10. '#
' → logprob: -9.637272834777832

Token 1313: ' total' (ID: 3609)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.0995241105556488
    2. '       ' → logprob: -2.7245240211486816
    3. ' #' → logprob: -4.724524021148682
    4. 'x' → logprob: -5.099524021148682
    5. 'from' → logprob: -5.349524021148682
    6. ' x' → logprob: -6.974524021148682
    7. '   ' → logprob: -6.974524021148682
    8. '
' → logprob: -7.099524021148682
    9. '```' → logprob: -7.349524021148682
    10. 'def' → logprob: -7.599524021148682

Token 1314: '_mass' (ID: 98668)
  Prédit: '_weight'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_weight' → logprob: -0.007148791570216417
    2. '_' → logprob: -5.257148742675781
    3. ' =' → logprob: -7.132148742675781
    4. 'weight' → logprob: -7.757148742675781
    5. ' _' → logprob: -9.132148742675781
    6. '_b' → logprob: -9.257148742675781
    7. '_w' → logprob: -9.382148742675781
    8. '_weights' → logprob: -9.757148742675781
    9. '_mass' → logprob: -9.757148742675781
    10. '=' → logprob: -10.007148742675781

Token 1315: '_' (ID: 62)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.32180383801460266
    2. '=' → logprob: -1.3218038082122803
    3. '       ' → logprob: -5.696804046630859
    4. '#' → logprob: -6.571804046630859
    5. '   ' → logprob: -6.571804046630859
    6. ' is' → logprob: -7.446804046630859
    7. 'def' → logprob: -8.19680404663086
    8. ' #' → logprob: -8.32180404663086
    9. ' ' → logprob: -8.69680404663086
    10. ':' → logprob: -9.19680404663086

Token 1316: 'grams' (ID: 134567)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.4763740003108978
    2. '=' → logprob: -0.9763740301132202
    3. '   ' → logprob: -7.47637414932251
    4. '#' → logprob: -7.60137414932251
    5. '_' → logprob: -8.851373672485352
    6. ' #' → logprob: -8.851373672485352
    7. '
' → logprob: -9.101373672485352
    8. ')' → logprob: -9.101373672485352
    9. ' ' → logprob: -9.226373672485352
    10. 's' → logprob: -9.351373672485352

Token 1317: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.10924918949604034
    2. '=' → logprob: -2.6092491149902344
    3. '       ' → logprob: -3.7342491149902344
    4. '#' → logprob: -6.609249114990234
    5. 'def' → logprob: -6.609249114990234
    6. '   ' → logprob: -6.859249114990234
    7. '
' → logprob: -7.734249114990234
    8. ':' → logprob: -7.984249114990234
    9. '=
' → logprob: -8.609249114990234
    10. 'from' → logprob: -8.734249114990234

Token 1318: ' sum' (ID: 4215)
  Prédit: 'total'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'total' → logprob: -0.07868155092000961
    2. 'self' → logprob: -2.828681468963623
    3. ' total' → logprob: -4.953681468963623
    4. 'weight' → logprob: -5.203681468963623
    5. 'Weight' → logprob: -6.953681468963623
    6. 'sum' → logprob: -7.203681468963623
    7. '2' → logprob: -7.453681468963623
    8. ' self' → logprob: -7.703681468963623
    9. '
' → logprob: -8.203681945800781
    10. '1' → logprob: -9.203681945800781

Token 1319: ' a' (ID: 261)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'v' → logprob: -1.438671588897705
    2. 'w' → logprob: -1.813671588897705
    3. '(v' → logprob: -1.938671588897705
    4. 'weight' → logprob: -2.063671588897705
    5. 'chunk' → logprob: -2.188671588897705
    6. 'for' → logprob: -3.188671588897705
    7. '       ' → logprob: -3.438671588897705
    8. 'of' → logprob: -3.688671588897705
    9. '   ' → logprob: -3.813671588897705
    10. '(chunk' → logprob: -4.188671588897705

Token 1320: '_i' (ID: 10853)
  Prédit: '_i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_i' → logprob: -0.006463593803346157
    2. '_' → logprob: -6.131463527679443
    3. 's' → logprob: -6.131463527679443
    4. ' =' → logprob: -7.881463527679443
    5. '_
' → logprob: -8.381464004516602
    6. ' _' → logprob: -8.381464004516602
    7. '=' → logprob: -9.131464004516602
    8. '#' → logprob: -9.256464004516602
    9. '
' → logprob: -9.381464004516602
    10. ')' → logprob: -9.631464004516602

Token 1321: ' *' (ID: 425)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -1.1173959970474243
    2. '       ' → logprob: -1.7423959970474243
    3. '   ' → logprob: -2.3673958778381348
    4. '#' → logprob: -2.7423958778381348
    5. '=' → logprob: -2.9923958778381348
    6. ' =' → logprob: -2.9923958778381348
    7. 'def' → logprob: -3.1173958778381348
    8. '**' → logprob: -3.2423958778381348
    9. '```' → logprob: -3.3673958778381348
    10. ' #' → logprob: -4.367395877838135

Token 1322: ' ' (ID: 220)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.009589394554495811
    2. '2' → logprob: -5.134589195251465
    3. '(' → logprob: -7.009589195251465
    4. '1' → logprob: -7.134589195251465
    5. ' b' → logprob: -7.384589195251465
    6. '
' → logprob: -8.634589195251465
    7. ' (' → logprob: -8.634589195251465
    8. '(b' → logprob: -8.884589195251465
    9. 'Quantity' → logprob: -9.134589195251465
    10. 'self' → logprob: -9.384589195251465

Token 1323: '2' (ID: 17)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.0520089752972126
    2. '2' → logprob: -3.177008867263794
    3. '(' → logprob: -6.052009105682373
    4. 'Weight' → logprob: -6.677009105682373
    5. 'Quantity' → logprob: -6.802009105682373
    6. '[' → logprob: -6.927009105682373
    7. '
' → logprob: -7.427009105682373
    8. '```' → logprob: -8.177008628845215
    9. ' b' → logprob: -8.427008628845215
    10. 'from' → logprob: -8.552008628845215

Token 1324: '^' (ID: 61)
  Prédit: '**'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '**' → logprob: -0.060618333518505096
    2. 'def' → logprob: -4.0606184005737305
    3. 'x' → logprob: -4.1856184005737305
    4. '
' → logprob: -4.8106184005737305
    5. '```' → logprob: -4.8106184005737305
    6. '0' → logprob: -5.3106184005737305
    7. '#' → logprob: -6.3106184005737305
    8. 'total' → logprob: -7.3106184005737305
    9. 'b' → logprob: -7.4356184005737305
    10. ')' → logprob: -8.43561840057373

Token 1325: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.1956537812948227
    2. '0' → logprob: -2.8206536769866943
    3. 'i' → logprob: -3.0706536769866943
    4. 'b' → logprob: -3.5706536769866943
    5. 'self' → logprob: -4.945653915405273
    6. 'a' → logprob: -5.070653915405273
    7. '32' → logprob: -5.070653915405273
    8. 'v' → logprob: -5.320653915405273
    9. 'chunks' → logprob: -5.445653915405273
    10. '(' → logprob: -6.195653915405273

Token 1326: ' *' (ID: 425)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7619838118553162
    2. '
' → logprob: -1.136983871459961
    3. ' =' → logprob: -3.261983871459961
    4. '#' → logprob: -3.636983871459961
    5. 'def' → logprob: -3.636983871459961
    6. '   ' → logprob: -3.761983871459961
    7. '=' → logprob: -4.261983871459961
    8. 'from' → logprob: -4.386983871459961
    9. ',' → logprob: -4.636983871459961
    10. ':' → logprob: -4.761983871459961

Token 1327: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.4395594298839569
    2. '0' → logprob: -1.0645594596862793
    3. 'self' → logprob: -5.564559459686279
    4. '1' → logprob: -6.939559459686279
    5. ' b' → logprob: -6.939559459686279
    6. ' ' → logprob: -7.064559459686279
    7. '#' → logprob: -7.064559459686279
    8. '...' → logprob: -7.439559459686279
    9. 'a' → logprob: -7.564559459686279
    10. '```' → logprob: -7.564559459686279

Token 1328: '_i' (ID: 10853)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.78618323802948
    2. '#' → logprob: -2.2861833572387695
    3. 'Unit' → logprob: -2.4111833572387695
    4. '_i' → logprob: -2.4111833572387695
    5. '
' → logprob: -2.9111833572387695
    6. 'def' → logprob: -3.5361833572387695
    7. ' =' → logprob: -3.5361833572387695
    8. '=' → logprob: -3.5361833572387695
    9. '```' → logprob: -3.6611833572387695
    10. '   ' → logprob: -4.1611833572387695

Token 1329: ' *' (ID: 425)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.095887541770935
    2. 'from' → logprob: -1.470887541770935
    3. 'def' → logprob: -1.720887541770935
    4. '
' → logprob: -1.845887541770935
    5. '#' → logprob: -2.8458876609802246
    6. 'if' → logprob: -4.345887660980225
    7. '```' → logprob: -4.470887660980225
    8. '   ' → logprob: -5.720887660980225
    9. 'chunks' → logprob: -5.720887660980225
    10. 'import' → logprob: -5.845887660980225

Token 1330: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.40429916977882385
    2. '2' → logprob: -1.1542991399765015
    3. '1' → logprob: -4.654299259185791
    4. '
' → logprob: -6.279299259185791
    5. 'y' → logprob: -6.279299259185791
    6. '#' → logprob: -6.404299259185791
    7. ' ' → logprob: -6.904299259185791
    8. '(' → logprob: -8.029298782348633
    9. '...' → logprob: -8.029298782348633
    10. '```' → logprob: -8.654298782348633

Token 1331: '2' (ID: 17)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.1899326890707016
    2. 'y' → logprob: -1.8149327039718628
    3. '2' → logprob: -5.314932823181152
    4. '1' → logprob: -5.564932823181152
    5. '
' → logprob: -8.064932823181152
    6. '#' → logprob: -8.189932823181152
    7. 'x' → logprob: -8.189932823181152
    8. '```' → logprob: -9.314932823181152
    9. '(' → logprob: -10.064932823181152
    10. '`' → logprob: -10.189932823181152

Token 1332: '^' (ID: 61)
  Prédit: '**'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '**' → logprob: -0.48865818977355957
    2. '^' → logprob: -0.9886581897735596
    3. 'y' → logprob: -5.2386579513549805
    4. '
' → logprob: -5.8636579513549805
    5. '#' → logprob: -5.8636579513549805
    6. '```' → logprob: -6.7386579513549805
    7. '*y' → logprob: -7.3636579513549805
    8. 'x' → logprob: -7.4886579513549805
    9. ')' → logprob: -8.61365795135498
    10. ' **' → logprob: -9.11365795135498

Token 1333: 'y' (ID: 88)
  Prédit: 'y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.2646797001361847
    2. '0' → logprob: -1.6396796703338623
    3. 'x' → logprob: -3.2646796703338623
    4. '```' → logprob: -9.639679908752441
    5. ' y' → logprob: -10.139679908752441
    6. '(' → logprob: -10.139679908752441
    7. 'a' → logprob: -11.014679908752441
    8. '
' → logprob: -11.264679908752441
    9. 'z' → logprob: -11.514679908752441
    10. '#' → logprob: -11.702179908752441

Token 1334: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.19639310240745544
    2. '       ' → logprob: -1.9463931322097778
    3. 'from' → logprob: -4.446393013000488
    4. 'def' → logprob: -4.696393013000488
    5. '```' → logprob: -4.696393013000488
    6. '#' → logprob: -6.571393013000488
    7. '        
' → logprob: -6.696393013000488
    8. '

' → logprob: -7.946393013000488
    9. '<|end|>' → logprob: -8.196393013000488
    10. '   ' → logprob: -8.321393013000488

Token 1335: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1638098806142807
    2. '
' → logprob: -2.5388097763061523
    3. '#' → logprob: -2.9138097763061523
    4. 'from' → logprob: -5.288809776306152
    5. '```' → logprob: -5.288809776306152
    6. '        
' → logprob: -6.788809776306152
    7. 'Let's' → logprob: -6.913809776306152
    8. '<|end|>' → logprob: -7.038809776306152
    9. '<|end|>' → logprob: -7.288809776306152
    10. '   ' → logprob: -7.788809776306152

Token 1336: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5977895259857178
    2. '#' (adapté à ' #') → logprob: -1.0977895259857178
    3. '
' → logprob: -2.3477895259857178
    4. 'from' → logprob: -4.472789764404297
    5. '```' → logprob: -6.222789764404297
    6. 'def' → logprob: -6.472789764404297
    7. 'x' → logprob: -7.222789764404297
    8. '        
' → logprob: -7.347789764404297
    9. 'if' → logprob: -7.597789764404297
    10. '   ' → logprob: -7.722789764404297

Token 1337: ' But' (ID: 3072)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.22960154712200165
    2. '       ' → logprob: -1.729601502418518
    3. 'from' → logprob: -4.4796013832092285
    4. '
' → logprob: -4.9796013832092285
    5. 'import' → logprob: -5.6046013832092285
    6. 'def' → logprob: -6.4796013832092285
    7. 'x' → logprob: -6.8546013832092285
    8. 'Let's' → logprob: -7.6046013832092285
    9. 'weight' → logprob: -7.8546013832092285
    10. '```' → logprob: -8.354601860046387

Token 1338: ' we' (ID: 581)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.07103405892848969
    2. '       ' → logprob: -3.1960339546203613
    3. 'the' → logprob: -4.571033954620361
    4. 'from' → logprob: -4.946033954620361
    5. 'we' → logprob: -6.196033954620361
    6. 'def' → logprob: -6.696033954620361
    7. '
' → logprob: -6.821033954620361
    8. '```' → logprob: -6.946033954620361
    9. 'return' → logprob: -7.571033954620361
    10. '   ' → logprob: -7.696033954620361

Token 1339: ' only' (ID: 1606)
  Prédit: 'need'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'need' → logprob: -0.6667278409004211
    2. 'cannot' → logprob: -1.7917277812957764
    3. 'def' → logprob: -2.9167277812957764
    4. ' need' → logprob: -3.0417277812957764
    5. '#' → logprob: -3.0417277812957764
    6. 'don't' → logprob: -3.5417277812957764
    7. ' cannot' → logprob: -3.6667277812957764
    8. 'can' → logprob: -3.9167277812957764
    9. 'should' → logprob: -4.2917280197143555
    10. ' can' → logprob: -4.2917280197143555

Token 1340: ' know' (ID: 1761)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.925176739692688
    2. 'need' → logprob: -2.0501766204833984
    3. '#' → logprob: -2.3001766204833984
    4. '   ' → logprob: -2.4251766204833984
    5. '```' → logprob: -2.6751766204833984
    6. '
' → logprob: -2.8001766204833984
    7. ' need' → logprob: -3.0501766204833984
    8. ' can' → logprob: -3.9251766204833984
    9. 'can' → logprob: -4.425176620483398
    10. 'return' → logprob: -4.675176620483398

Token 1341: ' a' (ID: 261)
  Prédit: ' the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' the' → logprob: -1.1397650241851807
    2. '       ' → logprob: -1.1397650241851807
    3. ' a' → logprob: -3.0147650241851807
    4. '```' → logprob: -3.1397650241851807
    5. ' how' → logprob: -3.2647650241851807
    6. 'the' → logprob: -3.2647650241851807
    7. 'self' → logprob: -3.5147650241851807
    8. ' total' → logprob: -3.6397650241851807
    9. 'def' → logprob: -4.264764785766602
    10. ' that' → logprob: -4.264764785766602

Token 1342: '_i' (ID: 10853)
  Prédit: '_i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_i' → logprob: -0.041558898985385895
    2. '_' → logprob: -3.5415589809417725
    3. '   ' → logprob: -6.291558742523193
    4. 'def' → logprob: -6.416558742523193
    5. ' =' → logprob: -6.541558742523193
    6. 's' → logprob: -6.541558742523193
    7. '=' → logprob: -7.041558742523193
    8. '       ' → logprob: -7.291558742523193
    9. '#' → logprob: -7.416558742523193
    10. ',' → logprob: -7.916558742523193

Token 1343: ' and' (ID: 326)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -1.3936803340911865
    2. '       ' → logprob: -2.0186803340911865
    3. '```' → logprob: -2.2686803340911865
    4. 'def' → logprob: -2.3936803340911865
    5. '   ' → logprob: -2.5186803340911865
    6. '=' → logprob: -2.6436803340911865
    7. ':' → logprob: -2.6436803340911865
    8. ' =' → logprob: -2.7686803340911865
    9. '#' → logprob: -3.1436803340911865
    10. 'from' → logprob: -3.5186803340911865

Token 1344: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.001503313542343676
    2. ' b' → logprob: -6.5015034675598145
    3. '#' → logprob: -15.501502990722656
    4. '
' → logprob: -15.626502990722656
    5. '...' → logprob: -16.126502990722656
    6. ' ' → logprob: -16.251502990722656
    7. '   ' → logprob: -16.501502990722656
    8. '```' → logprob: -16.876502990722656
    9. 'def' → logprob: -17.001502990722656
    10. 'quantity' → logprob: -17.126502990722656

Token 1345: '_i' (ID: 10853)
  Prédit: '_i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_i' → logprob: -0.0001698094274615869
    2. ''_' → logprob: -9.75016975402832
    3. '```' → logprob: -10.62516975402832
    4. '_' → logprob: -10.87516975402832
    5. 'i' → logprob: -11.12516975402832
    6. 's' → logprob: -11.75016975402832
    7. '`' → logprob: -11.75016975402832
    8. '
' → logprob: -12.00016975402832
    9. '_s' → logprob: -12.00016975402832
    10. ')_' → logprob: -12.37516975402832

Token 1346: '.

' (ID: 364)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.8125560879707336
    2. '
' → logprob: -0.9375560879707336
    3. 'from' → logprob: -2.562556028366089
    4. '#' → logprob: -3.437556028366089
    5. 'def' → logprob: -3.562556028366089
    6. '```' → logprob: -5.312556266784668
    7. '   ' → logprob: -5.687556266784668
    8. ' from' → logprob: -6.062556266784668
    9. '        
' → logprob: -6.062556266784668
    10. ',' → logprob: -6.187556266784668

Token 1347: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.21658191084861755
    2. '
' → logprob: -1.84158194065094
    3. '#' → logprob: -4.46658182144165
    4. '```' → logprob: -5.09158182144165
    5. '        
' → logprob: -5.84158182144165
    6. 'from' → logprob: -6.09158182144165
    7. 'def' → logprob: -6.46658182144165
    8. '<|end|>' → logprob: -6.84158182144165
    9. 'Let's' → logprob: -7.09158182144165
    10. '`
' → logprob: -7.09158182144165

Token 1348: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6535369157791138
    2. '#' (adapté à ' #') → logprob: -0.9035369157791138
    3. '
' → logprob: -2.903536796569824
    4. '```' → logprob: -4.653536796569824
    5. 'x' → logprob: -6.403536796569824
    6. 'from' → logprob: -6.903536796569824
    7. 'if' → logprob: -7.028536796569824
    8. '   ' → logprob: -7.153536796569824
    9. 'We' → logprob: -7.403536796569824
    10. 'weight' → logprob: -7.403536796569824

Token 1349: ' The' (ID: 623)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.24164065718650818
    2. '       ' → logprob: -1.6166406869888306
    3. 'from' → logprob: -5.241640567779541
    4. 'def' → logprob: -5.866640567779541
    5. '
' → logprob: -5.991640567779541
    6. 'import' → logprob: -6.616640567779541
    7. '   ' → logprob: -7.866640567779541
    8. 'x' → logprob: -8.1166410446167
    9. 'weight' → logprob: -8.2416410446167
    10. 'Since' → logprob: -8.2416410446167

Token 1350: ' problem' (ID: 4792)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.43124788999557495
    2. '#' → logprob: -1.1812479496002197
    3. 'from' → logprob: -4.056247711181641
    4. '   ' → logprob: -5.056247711181641
    5. '       ' → logprob: -5.056247711181641
    6. 'remaining' → logprob: -5.806247711181641
    7. 'result' → logprob: -6.306247711181641
    8. 'rest' → logprob: -6.806247711181641
    9. 'return' → logprob: -6.931247711181641
    10. '"""
' → logprob: -7.431247711181641

Token 1351: ' does' (ID: 2226)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.7776983380317688
    2. ' def' → logprob: -1.777698278427124
    3. '   ' → logprob: -2.152698278427124
    4. ':' → logprob: -2.402698278427124
    5. '#' → logprob: -2.652698278427124
    6. '
' → logprob: -4.277698516845703
    7. '       ' → logprob: -4.402698516845703
    8. ':
' → logprob: -4.402698516845703
    9. ' continues' → logprob: -4.402698516845703
    10. '.' → logprob: -5.277698516845703

Token 1352: ' not' (ID: 625)
  Prédit: 'not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'not' → logprob: -0.014307350851595402
    2. ' not' → logprob: -4.264307498931885
    3. 'n't' → logprob: -9.139307022094727
    4. '#' → logprob: -10.389307022094727
    5. '   ' → logprob: -13.014307022094727
    6. '       ' → logprob: -13.514307022094727
    7. '```' → logprob: -13.764307022094727
    8. 'continue' → logprob: -15.139307022094727
    9. 'def' → logprob: -15.889307022094727
    10. 'return' → logprob: -15.889307022094727

Token 1353: ' specify' (ID: 27018)
  Prédit: 'spec'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'spec' → logprob: -0.1576329469680786
    2. 'provide' → logprob: -2.657632827758789
    3. 'give' → logprob: -4.282632827758789
    4. 'support' → logprob: -4.407632827758789
    5. 'allow' → logprob: -4.782632827758789
    6. 'define' → logprob: -4.907632827758789
    7. 'explicit' → logprob: -5.407632827758789
    8. ' specify' → logprob: -5.532632827758789
    9. 'have' → logprob: -5.907632827758789
    10. 'se' → logprob: -5.907632827758789

Token 1354: ' x' (ID: 1215)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.42875048518180847
    2. 'def' → logprob: -1.9287505149841309
    3. '#' → logprob: -2.803750514984131
    4. ' how' → logprob: -3.303750514984131
    5. '   ' → logprob: -3.803750514984131
    6. ' the' → logprob: -3.928750514984131
    7. '```' → logprob: -3.928750514984131
    8. ' def' → logprob: -4.928750514984131
    9. ' that' → logprob: -5.428750514984131
    10. 'return' → logprob: -5.428750514984131

Token 1355: ' and' (ID: 326)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -1.2548240423202515
    2. '       ' → logprob: -1.2548240423202515
    3. ',' → logprob: -1.6298240423202515
    4. '   ' → logprob: -3.129824161529541
    5. '

' → logprob: -3.254824161529541
    6. ' and' → logprob: -3.379824161529541
    7. 'def' → logprob: -4.129824161529541
    8. ':' → logprob: -4.129824161529541
    9. '#' → logprob: -4.504824161529541
    10. '```' → logprob: -4.629824161529541

Token 1356: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -4.4894986785948277e-05
    2. ' y' → logprob: -10.375044822692871
    3. '#' → logprob: -12.000044822692871
    4. 'y's' → logprob: -12.125044822692871
    5. 'x' → logprob: -14.250044822692871
    6. '
' → logprob: -14.375044822692871
    7. ''y' → logprob: -15.375044822692871
    8. '```' → logprob: -16.000045776367188
    9. '...' → logprob: -16.125045776367188
    10. '`' → logprob: -16.750045776367188

Token 1357: ',' (ID: 11)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.2134808599948883
    2. '       ' → logprob: -1.963480830192566
    3. '

' → logprob: -3.7134809494018555
    4. '```' → logprob: -5.2134809494018555
    5. ',' → logprob: -5.3384809494018555
    6. ':' → logprob: -5.5884809494018555
    7. ':
' → logprob: -5.5884809494018555
    8. '        
' → logprob: -6.5884809494018555
    9. '<|end|>' → logprob: -6.8384809494018555
    10. '#' → logprob: -6.9634809494018555

Token 1358: ' so' (ID: 813)
  Prédit: ' so'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' so' → logprob: -0.23058368265628815
    2. '       ' → logprob: -2.480583667755127
    3. ' but' → logprob: -2.855583667755127
    4. '#' → logprob: -3.855583667755127
    5. '
' → logprob: -4.230583667755127
    6. '```' → logprob: -4.480583667755127
    7. 'so' → logprob: -5.230583667755127
    8. 'but' → logprob: -5.605583667755127
    9. ' continue' → logprob: -6.605583667755127
    10. ' assuming' → logprob: -6.980583667755127

Token 1359: ' we' (ID: 581)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.13578851521015167
    2. '#' → logprob: -2.3857884407043457
    3. 'raise' → logprob: -3.6357884407043457
    4. '       ' → logprob: -5.135788440704346
    5. 'we' → logprob: -6.635788440704346
    6. '```' → logprob: -7.760788440704346
    7. ' return' → logprob: -8.635788917541504
    8. ' raise' → logprob: -8.760788917541504
    9. 'def' → logprob: -8.760788917541504
    10. 'continue' → logprob: -8.885788917541504

Token 1360: ' treat' (ID: 4665)
  Prédit: 'cannot'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cannot' → logprob: -0.844713568687439
    2. 'need' → logprob: -1.844713568687439
    3. ' cannot' → logprob: -2.0947136878967285
    4. '#' → logprob: -3.0947136878967285
    5. ' need' → logprob: -3.3447136878967285
    6. 'continue' → logprob: -3.3447136878967285
    7. 'ass' → logprob: -3.3447136878967285
    8. 'return' → logprob: -3.7197136878967285
    9. 'must' → logprob: -3.8447136878967285
    10. ' must' → logprob: -3.9697136878967285

Token 1361: ' a' (ID: 261)
  Prédit: 'the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'the' → logprob: -0.6307260990142822
    2. 'total' → logprob: -1.5057260990142822
    3. 'them' → logprob: -2.3807260990142822
    4. '```' → logprob: -2.6307260990142822
    5. '#' → logprob: -3.6307260990142822
    6. 'self' → logprob: -4.505725860595703
    7. 'a' → logprob: -4.630725860595703
    8. 'weight' → logprob: -4.880725860595703
    9. 'all' → logprob: -5.130725860595703
    10. 'each' → logprob: -5.880725860595703

Token 1362: '_i' (ID: 10853)
  Prédit: '_i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_i' → logprob: -0.0039087263867259026
    2. '_' → logprob: -6.003908634185791
    3. ')' → logprob: -7.878908634185791
    4. 'i' → logprob: -8.50390911102295
    5. 'll' → logprob: -8.62890911102295
    6. 's' → logprob: -8.87890911102295
    7. '_
' → logprob: -9.87890911102295
    8. '#' → logprob: -10.00390911102295
    9. ')_' → logprob: -10.12890911102295
    10. '
' → logprob: -10.25390911102295

Token 1363: ' and' (ID: 326)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.855485200881958
    2. ' as' → logprob: -1.105485200881958
    3. ' and' → logprob: -1.980485200881958
    4. 'as' → logprob: -3.355485200881958
    5. 'and' → logprob: -4.105484962463379
    6. ')' → logprob: -4.355484962463379
    7. '<|end|>' → logprob: -4.355484962463379
    8. ' ,' → logprob: -4.980484962463379
    9. '```' → logprob: -5.230484962463379
    10. ',b' → logprob: -5.480484962463379

Token 1364: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.003178306156769395
    2. ' b' → logprob: -5.753178119659424
    3. '
' → logprob: -15.503178596496582
    4. '`' → logprob: -16.128177642822266
    5. '```' → logprob: -16.253177642822266
    6. ' ' → logprob: -16.878177642822266
    7. ',' → logprob: -17.128177642822266
    8. 'a' → logprob: -17.503177642822266
    9. 'quantity' → logprob: -17.628177642822266
    10. ' ' → logprob: -17.753177642822266

Token 1365: '_i' (ID: 10853)
  Prédit: '_i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_i' → logprob: -0.013243762776255608
    2. '_' → logprob: -4.388243675231934
    3. '```' → logprob: -8.263243675231934
    4. '_
' → logprob: -9.638243675231934
    5. 'i' → logprob: -9.638243675231934
    6. '`' → logprob: -9.763243675231934
    7. ''_' → logprob: -10.263243675231934
    8. '}_' → logprob: -10.513243675231934
    9. ')' → logprob: -10.638243675231934
    10. ' _' → logprob: -10.763243675231934

Token 1366: ' as' (ID: 472)
  Prédit: ' as'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' as' → logprob: -0.08239851146936417
    2. ')' → logprob: -4.457398414611816
    3. '=' → logprob: -4.707398414611816
    4. '```' → logprob: -4.707398414611816
    5. 'as' → logprob: -4.832398414611816
    6. ':' → logprob: -4.957398414611816
    7. ' =' → logprob: -4.957398414611816
    8. ',' → logprob: -5.082398414611816
    9. '<|end|>' → logprob: -5.207398414611816
    10. '
' → logprob: -5.832398414611816

Token 1367: ' integers' (ID: 54912)
  Prédit: 'inte'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'inte' → logprob: -0.003936867695301771
    2. 'int' → logprob: -6.253936767578125
    3. 'ints' → logprob: -7.628936767578125
    4. 'ex' → logprob: -7.753936767578125
    5. 'given' → logprob: -8.378936767578125
    6. 'is' → logprob: -8.503936767578125
    7. 'weights' → logprob: -8.503936767578125
    8. 'multip' → logprob: -8.628936767578125
    9. 'integer' → logprob: -9.503936767578125
    10. 'the' → logprob: -10.253936767578125

Token 1368: ' and' (ID: 326)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.06697079539299011
    2. '```' → logprob: -3.4419708251953125
    3. '
' → logprob: -4.0669708251953125
    4. '<|end|>' → logprob: -5.4419708251953125
    5. ',' → logprob: -5.8169708251953125
    6. '        
' → logprob: -6.3169708251953125
    7. 'from' → logprob: -6.5669708251953125
    8. 'def' → logprob: -6.5669708251953125
    9. '<|end|>' → logprob: -7.1919708251953125
    10. ' and' → logprob: -7.6919708251953125

Token 1369: ' calculate' (ID: 17950)
  Prédit: 'combine'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'combine' → logprob: -0.11096975207328796
    2. 'sum' → logprob: -3.3609697818756104
    3. 'multiply' → logprob: -4.235969543457031
    4. 'ass' → logprob: -4.860969543457031
    5. 'compute' → logprob: -5.610969543457031
    6. 'do' → logprob: -5.735969543457031
    7. 'def' → logprob: -5.735969543457031
    8. 're' → logprob: -5.735969543457031
    9. 'add' → logprob: -5.985969543457031
    10. '#' → logprob: -6.110969543457031

Token 1370: ' weight' (ID: 6049)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.148170828819275
    2. '```' → logprob: -1.398170828819275
    3. 'from' → logprob: -1.648170828819275
    4. '#' → logprob: -2.3981709480285645
    5. 'def' → logprob: -2.6481709480285645
    6. '
' → logprob: -3.2731709480285645
    7. 'the' → logprob: -4.3981709480285645
    8. '   ' → logprob: -4.8981709480285645
    9. 'chunks' → logprob: -6.2731709480285645
    10. ' the' → logprob: -6.3981709480285645

Token 1371: ' =' (ID: 314)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7667762637138367
    2. '
' → logprob: -0.8917762637138367
    3. '```' → logprob: -3.2667763233184814
    4. 'def' → logprob: -4.016776084899902
    5. ':' → logprob: -4.141776084899902
    6. '   ' → logprob: -4.266776084899902
    7. '        
' → logprob: -4.641776084899902
    8. ',' → logprob: -5.141776084899902
    9. '

' → logprob: -5.516776084899902
    10. ':
' → logprob: -5.641776084899902

Token 1372: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.0595366545021534
    2. 'self' → logprob: -3.4345366954803467
    3. 'Weight' → logprob: -4.434536457061768
    4. 'weight' → logprob: -4.809536457061768
    5. 'total' → logprob: -6.309536457061768
    6. ' a' → logprob: -6.309536457061768
    7. 'all' → logprob: -7.059536457061768
    8. 'v' → logprob: -7.809536457061768
    9. ' self' → logprob: -8.559536933898926
    10. ' weight' → logprob: -8.934536933898926

Token 1373: '_i' (ID: 10853)
  Prédit: '_i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_i' → logprob: -0.008979237638413906
    2. '_unit' → logprob: -5.508979320526123
    3. 'Unit' → logprob: -6.008979320526123
    4. 's' → logprob: -7.258979320526123
    5. '   ' → logprob: -8.508978843688965
    6. '       ' → logprob: -8.633978843688965
    7. '  ' → logprob: -8.633978843688965
    8. '#' → logprob: -9.133978843688965
    9. '_k' → logprob: -9.133978843688965
    10. ')' → logprob: -9.133978843688965

Token 1374: ' *' (ID: 425)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -1.6513832807540894
    2. '```' → logprob: -1.7763832807540894
    3. '       ' → logprob: -2.401383399963379
    4. ':' → logprob: -2.401383399963379
    5. '
' → logprob: -2.526383399963379
    6. ')' → logprob: -2.651383399963379
    7. '**' → logprob: -2.776383399963379
    8. 'def' → logprob: -2.776383399963379
    9. '#' → logprob: -3.526383399963379
    10. '   ' → logprob: -3.651383399963379

Token 1375: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.004080062732100487
    2. ' b' → logprob: -5.504080295562744
    3. ' ' → logprob: -14.379079818725586
    4. '
' → logprob: -15.754079818725586
    5. '```' → logprob: -15.879079818725586
    6. '   ' → logprob: -16.254079818725586
    7. ' ' → logprob: -16.754079818725586
    8. ' (' → logprob: -16.754079818725586
    9. '2' → logprob: -17.004079818725586
    10. '`' → logprob: -17.129079818725586

Token 1376: '_i' (ID: 10853)
  Prédit: '_i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_i' → logprob: -0.000241085872403346
    2. '_' → logprob: -8.75024127960205
    3. 'i' → logprob: -10.50024127960205
    4. '```' → logprob: -11.25024127960205
    5. '_k' → logprob: -12.12524127960205
    6. ' _' → logprob: -12.25024127960205
    7. '_j' → logprob: -12.37524127960205
    8. '_o' → logprob: -12.62524127960205
    9. '_
' → logprob: -12.75024127960205
    10. ')' → logprob: -13.25024127960205

Token 1377: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.17743895947933197
    2. '       ' → logprob: -1.9274389743804932
    3. '```' → logprob: -5.177438735961914
    4. '<|end|>' → logprob: -5.927438735961914
    5. '        
' → logprob: -6.177438735961914
    6. '

' → logprob: -6.677438735961914
    7. ',' → logprob: -6.802438735961914
    8. '<|end|>' → logprob: -7.802438735961914
    9. ' if' → logprob: -8.052438735961914
    10. 'def' → logprob: -8.052438735961914

Token 1378: '       ' (ID: 309)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.460840106010437
    2. '       ' → logprob: -1.085840106010437
    3. '        
' → logprob: -4.835840225219727
    4. '<|end|>' → logprob: -5.585840225219727
    5. '   ' → logprob: -5.710840225219727
    6. ',' → logprob: -5.835840225219727
    7. '```' → logprob: -5.960840225219727
    8. '<|end|>' → logprob: -6.460840225219727
    9. ')' → logprob: -6.710840225219727
    10. '.' → logprob: -6.835840225219727

Token 1379: ' #' (ID: 1069)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.6237542629241943
    2. '       ' → logprob: -0.9987542629241943
    3. '#' (adapté à ' #') → logprob: -3.1237542629241943
    4. 'if' → logprob: -3.6237542629241943
    5. '```' → logprob: -4.373754501342773
    6. '        
' → logprob: -6.123754501342773
    7. 'If' → logprob: -6.373754501342773
    8. ' if' → logprob: -6.498754501342773
    9. 'from' → logprob: -6.998754501342773
    10. 'tokens' → logprob: -7.123754501342773

Token 1380: ' Then' (ID: 7801)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.8888110518455505
    2. '       ' → logprob: -1.2638111114501953
    3. 'if' → logprob: -2.2638111114501953
    4. 'from' → logprob: -2.3888111114501953
    5. 'def' → logprob: -2.8888111114501953
    6. 'chunks' → logprob: -4.013811111450195
    7. 'import' → logprob: -4.638811111450195
    8. 'result' → logprob: -5.388811111450195
    9. 'counts' → logprob: -6.013811111450195
    10. '   ' → logprob: -6.263811111450195

Token 1381: ' we' (ID: 581)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.936279296875
    2. 'from' → logprob: -1.061279296875
    3. 'def' → logprob: -1.811279296875
    4. 'if' → logprob: -3.061279296875
    5. '       ' → logprob: -4.061279296875
    6. 'chunks' → logprob: -4.436279296875
    7. 'import' → logprob: -4.811279296875
    8. '
' → logprob: -6.186279296875
    9. 'div' → logprob: -6.436279296875
    10. 'weight' → logprob: -6.561279296875

Token 1382: ' want' (ID: 1682)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -1.2108063697814941
    2. 'def' → logprob: -1.8358063697814941
    3. 'from' → logprob: -1.9608063697814941
    4. 'divide' → logprob: -2.335806369781494
    5. 'return' → logprob: -2.585806369781494
    6. 'need' → logprob: -3.085806369781494
    7. 'import' → logprob: -3.210806369781494
    8. 'can' → logprob: -3.210806369781494
    9. '   ' → logprob: -4.210806369781494
    10. '       ' → logprob: -4.460806369781494

Token 1383: ' to' (ID: 316)
  Prédit: 'to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'to' → logprob: -0.2218603491783142
    2. '       ' → logprob: -2.471860408782959
    3. 'def' → logprob: -3.221860408782959
    4. '#' → logprob: -4.221860408782959
    5. ' to' → logprob: -4.471860408782959
    6. '
' → logprob: -4.721860408782959
    7. '[]
' → logprob: -4.971860408782959
    8. '[]' → logprob: -5.096860408782959
    9. '[
' → logprob: -5.346860408782959
    10. 'split' → logprob: -5.596860408782959

Token 1384: ' find' (ID: 1646)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.7781631350517273
    2. 'def' → logprob: -1.653163194656372
    3. 'chunks' → logprob: -2.153163194656372
    4. '#' → logprob: -2.278163194656372
    5. 'factor' → logprob: -3.278163194656372
    6. 'de' → logprob: -3.278163194656372
    7. 'find' → logprob: -4.278162956237793
    8. 'combine' → logprob: -4.653162956237793
    9. 'result' → logprob: -5.528162956237793
    10. 'return' → logprob: -5.653162956237793

Token 1385: ' minimal' (ID: 19957)
  Prédit: 'chunks'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'chunks' → logprob: -0.2618143558502197
    2. 'result' → logprob: -2.3868143558502197
    3. 'res' → logprob: -2.6368143558502197
    4. 'def' → logprob: -4.011814117431641
    5. 'from' → logprob: -4.261814117431641
    6. '[]' → logprob: -4.886814117431641
    7. '[]
' → logprob: -5.136814117431641
    8. 'f' → logprob: -5.261814117431641
    9. 'results' → logprob: -5.511814117431641
    10. 'div' → logprob: -6.261814117431641

Token 1386: ' number' (ID: 2086)
  Prédit: 'chunks'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'chunks' → logprob: -0.04301813989877701
    2. '```' → logprob: -4.418018341064453
    3. 'from' → logprob: -4.793018341064453
    4. '#' → logprob: -5.418018341064453
    5. ' chunks' → logprob: -5.418018341064453
    6. 'result' → logprob: -5.793018341064453
    7. 'def' → logprob: -5.918018341064453
    8. '
' → logprob: -6.418018341064453
    9. '_chunks' → logprob: -6.918018341064453
    10. 'possible' → logprob: -7.793018341064453

Token 1387: ' of' (ID: 328)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -1.2722907066345215
    2. 'def' → logprob: -2.2722907066345215
    3. '```' → logprob: -2.5222907066345215
    4. '       ' → logprob: -2.6472907066345215
    5. '_chunks' → logprob: -2.7722907066345215
    6. 'from' → logprob: -3.0222907066345215
    7. '   ' → logprob: -3.1472907066345215
    8. 'import' → logprob: -3.5222907066345215
    9. ' =' → logprob: -3.5222907066345215
    10. '#' → logprob: -3.6472907066345215

Token 1388: ' chunks' (ID: 53440)
  Prédit: 'chunks'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'chunks' → logprob: -0.023431584239006042
    2. ' chunks' → logprob: -4.648431777954102
    3. '
' → logprob: -5.148431777954102
    4. 'All' → logprob: -5.648431777954102
    5. 'chunk' → logprob: -6.523431777954102
    6. '```' → logprob: -7.398431777954102
    7. 'tokens' → logprob: -7.773431777954102
    8. 'all' → logprob: -7.898431777954102
    9. '[
' → logprob: -8.148431777954102
    10. '[' → logprob: -8.648431777954102

Token 1389: ' each' (ID: 2454)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'from' → logprob: -1.0821459293365479
    2. 'def' → logprob: -1.2071459293365479
    3. '       ' → logprob: -1.4571459293365479
    4. '
' → logprob: -2.332145929336548
    5. '```' → logprob: -3.707145929336548
    6. '        
' → logprob: -6.207145690917969
    7. ' from' → logprob: -6.332145690917969
    8. '#' → logprob: -6.707145690917969
    9. '   ' → logprob: -7.957145690917969
    10. ':
' → logprob: -8.457145690917969

Token 1390: ' having' (ID: 4566)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -1.5631765127182007
    2. '=' → logprob: -2.0631766319274902
    3. 'with' → logprob: -2.0631766319274902
    4. 'def' → logprob: -2.1881766319274902
    5. ' with' → logprob: -2.6881766319274902
    6. '(' → logprob: -3.0631766319274902
    7. '(
' → logprob: -3.1881766319274902
    8. ' (' → logprob: -3.3131766319274902
    9. '```' → logprob: -3.3131766319274902
    10. ':' → logprob: -3.6881766319274902

Token 1391: ' quantity' (ID: 17245)
  Prédit: 'weight'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'weight' → logprob: -0.45422881841659546
    2. 'Weight' → logprob: -1.7042288780212402
    3. 'a' → logprob: -2.2042288780212402
    4. 'b' → logprob: -2.9542288780212402
    5. ' weight' → logprob: -4.57922887802124
    6. '```' → logprob: -5.82922887802124
    7. ' Weight' → logprob: -6.57922887802124
    8. 'bok' → logprob: -6.82922887802124
    9. '1' → logprob: -7.07922887802124
    10. '(' → logprob: -7.07922887802124

Token 1392: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6526221036911011
    2. ' =' → logprob: -1.027622103691101
    3. '0' → logprob: -3.2776222229003906
    4. '```' → logprob: -3.2776222229003906
    5. '>' → logprob: -3.6526222229003906
    6. ' >' → logprob: -4.402622222900391
    7. ' ' → logprob: -6.402622222900391
    8. '1' → logprob: -6.902622222900391
    9. 'def' → logprob: -7.027622222900391
    10. 's' → logprob: -7.402622222900391

Token 1393: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.0564331205387134e-05
    2. ' ' → logprob: -11.75001049041748
    3. '```' → logprob: -13.62501049041748
    4. 'Weight' → logprob: -14.25001049041748
    5. '1' → logprob: -15.62501049041748
    6. '`' → logprob: -16.375011444091797
    7. '[' → logprob: -16.625011444091797
    8. '...' → logprob: -16.625011444091797
    9. 'Quantity' → logprob: -16.750011444091797
    10. '
' → logprob: -17.000011444091797

Token 1394: '2' (ID: 17)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -2.339278580620885e-06
    2. ' ' → logprob: -13.750001907348633
    3. 'Weight' → logprob: -14.625001907348633
    4. '```' → logprob: -14.625001907348633
    5. '[' → logprob: -16.375001907348633
    6. '`' → logprob: -16.750001907348633
    7. '1' → logprob: -17.000001907348633
    8. '=' → logprob: -17.125001907348633
    9. '
' → logprob: -17.375001907348633
    10. '...' → logprob: -17.875001907348633

Token 1395: '^' (ID: 61)
  Prédit: '**'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '**' → logprob: -0.4675240218639374
    2. '
' → logprob: -1.2175240516662598
    3. '```' → logprob: -3.8425240516662598
    4. '^' → logprob: -4.09252405166626
    5. '0' → logprob: -4.09252405166626
    6. ',' → logprob: -4.59252405166626
    7. ' **' → logprob: -5.21752405166626
    8. '

' → logprob: -6.21752405166626
    9. ' ' → logprob: -6.96752405166626
    10. ' =' → logprob: -8.092523574829102

Token 1396: 'y' (ID: 88)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0015373582718893886
    2. ' ' → logprob: -6.501537322998047
    3. '```' → logprob: -11.001537322998047
    4. '
' → logprob: -11.501537322998047
    5. '(' → logprob: -12.751537322998047
    6. 'x' → logprob: -14.251537322998047
    7. ' (' → logprob: -14.251537322998047
    8. '-' → logprob: -14.376537322998047
    9. ' -' → logprob: -14.376537322998047
    10. '``' → logprob: -14.501537322998047

Token 1397: ' and' (ID: 326)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.9513237476348877
    2. '       ' → logprob: -1.2013237476348877
    3. '```' → logprob: -1.8263237476348877
    4. '   ' → logprob: -3.3263237476348877
    5. 'def' → logprob: -3.4513237476348877
    6. ',' → logprob: -3.9513237476348877
    7. ':' → logprob: -4.201323509216309
    8. ':
' → logprob: -4.701323509216309
    9. '        
' → logprob: -5.201323509216309
    10. ',
' → logprob: -5.701323509216309

Token 1398: ' weight' (ID: 6049)
  Prédit: 'weight'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'weight' → logprob: -0.0023318787571042776
    2. 'a' → logprob: -6.877331733703613
    3. '#' → logprob: -7.252331733703613
    4. ' weight' → logprob: -8.502331733703613
    5. 'b' → logprob: -9.127331733703613
    6. '
' → logprob: -9.127331733703613
    7. '0' → logprob: -10.002331733703613
    8. 'def' → logprob: -10.252331733703613
    9. '```' → logprob: -10.877331733703613
    10. 'x' → logprob: -11.002331733703613

Token 1399: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.8066433072090149
    2. '=' → logprob: -1.0566432476043701
    3. ':' → logprob: -3.55664324760437
    4. '```' → logprob: -3.55664324760437
    5. ',' → logprob: -3.80664324760437
    6. '
' → logprob: -3.93164324760437
    7. '#' → logprob: -4.431643486022949
    8. '(' → logprob: -4.806643486022949
    9. '   ' → logprob: -4.931643486022949
    10. '_' → logprob: -5.056643486022949

Token 1400: ' ' (ID: 220)
  Prédit: 'Weight'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Weight' → logprob: -0.22201703488826752
    2. '1' → logprob: -2.0970170497894287
    3. '0' → logprob: -3.0970170497894287
    4. 'a' → logprob: -4.47201681137085
    5. 'weight' → logprob: -4.59701681137085
    6. ' weight' → logprob: -6.09701681137085
    7. ' Weight' → logprob: -6.34701681137085
    8. ' ' → logprob: -6.47201681137085
    9. 'b' → logprob: -7.22201681137085
    10. 'some' → logprob: -7.22201681137085

Token 1401: '2' (ID: 17)
  Prédit: 'Weight'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Weight' → logprob: -0.2852226197719574
    2. '0' → logprob: -2.4102225303649902
    3. 'total' → logprob: -2.7852225303649902
    4. '1' → logprob: -2.7852225303649902
    5. 'weight' → logprob: -4.16022253036499
    6. 'a' → logprob: -4.66022253036499
    7. 'w' → logprob: -6.03522253036499
    8. 'x' → logprob: -6.66022253036499
    9. 'b' → logprob: -6.91022253036499
    10. 'unit' → logprob: -7.28522253036499

Token 1402: '^' (ID: 61)
  Prédit: '**'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '**' → logprob: -0.29751166701316833
    2. '^' → logprob: -2.422511577606201
    3. '
' → logprob: -2.672511577606201
    4. '0' → logprob: -3.172511577606201
    5. '```' → logprob: -3.797511577606201
    6. 'Unit' → logprob: -4.797511577606201
    7. '_' → logprob: -5.547511577606201
    8. '`' → logprob: -5.547511577606201
    9. ' **' → logprob: -5.797511577606201
    10. ')' → logprob: -6.547511577606201

Token 1403: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.010720593854784966
    2. '-' → logprob: -5.135720729827881
    3. '0' → logprob: -5.635720729827881
    4. '_x' → logprob: -7.510720729827881
    5. '-x' → logprob: -8.510720252990723
    6. '
' → logprob: -9.385720252990723
    7. 'a' → logprob: -9.510720252990723
    8. '```' → logprob: -9.760720252990723
    9. 'y' → logprob: -9.885720252990723
    10. ' x' → logprob: -10.510720252990723

Token 1404: ',' (ID: 11)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.19835235178470612
    2. '
' → logprob: -2.573352336883545
    3. 'def' → logprob: -2.698352336883545
    4. 'from' → logprob: -4.448352336883545
    5. '#' → logprob: -4.823352336883545
    6. '```' → logprob: -4.948352336883545
    7. '        
' → logprob: -6.198352336883545
    8. 'import' → logprob: -6.698352336883545
    9. ',' → logprob: -7.073352336883545
    10. '   ' → logprob: -7.198352336883545

Token 1405: ' so' (ID: 813)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.07662232965230942
    2. '
' → logprob: -3.451622247695923
    3. 'from' → logprob: -3.576622247695923
    4. '        
' → logprob: -5.701622486114502
    5. '#' → logprob: -5.951622486114502
    6. '```' → logprob: -5.951622486114502
    7. ' from' → logprob: -6.451622486114502
    8. 'def' → logprob: -7.076622486114502
    9. '   ' → logprob: -7.326622486114502
    10. 'import' → logprob: -7.701622486114502

Token 1406: ' total' (ID: 3609)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.07329811900854111
    2. '#' → logprob: -3.573298215866089
    3. 'from' → logprob: -3.698298215866089
    4. 'def' → logprob: -4.82329797744751
    5. '   ' → logprob: -5.94829797744751
    6. '
' → logprob: -6.69829797744751
    7. '           ' → logprob: -6.94829797744751
    8. '```' → logprob: -7.07329797744751
    9. 'that' → logprob: -7.32329797744751
    10. 'return' → logprob: -7.44829797744751

Token 1407: ' mass' (ID: 4842)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7238611578941345
    2. '   ' → logprob: -1.7238612174987793
    3. '_weight' → logprob: -2.3488612174987793
    4. '#' → logprob: -2.4738612174987793
    5. '```' → logprob: -2.9738612174987793
    6. 'weight' → logprob: -3.5988612174987793
    7. '
' → logprob: -3.8488612174987793
    8. 'from' → logprob: -3.8488612174987793
    9. 'chunks' → logprob: -4.723861217498779
    10. 'def' → logprob: -5.098861217498779

Token 1408: ':

' (ID: 1402)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.8428088426589966
    2. '       ' → logprob: -1.8428088426589966
    3. ' =' → logprob: -1.9678088426589966
    4. ':' → logprob: -2.717808723449707
    5. '   ' → logprob: -3.467808723449707
    6. '=' → logprob: -3.467808723449707
    7. '```' → logprob: -3.592808723449707
    8. ':
' → logprob: -4.217808723449707
    9. '<|end|>' → logprob: -4.217808723449707
    10. ',' → logprob: -4.342808723449707

Token 1409: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.08885973691940308
    2. ' ' → logprob: -4.213859558105469
    3. '```' → logprob: -4.338859558105469
    4. '           ' → logprob: -4.838859558105469
    5. '#' → logprob: -4.963859558105469
    6. ' =' → logprob: -5.838859558105469
    7. ' \' → logprob: -5.963859558105469
    8. 'from' → logprob: -5.963859558105469
    9. '        ' → logprob: -5.963859558105469
    10. '   ' → logprob: -6.088859558105469

Token 1410: ' #' (ID: 1069)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' (adapté à ' #') → logprob: -0.5349918007850647
    2. '       ' → logprob: -0.9099918007850647
    3. '"""
' → logprob: -5.90999174118042
    4. 'from' → logprob: -6.15999174118042
    5. '```' → logprob: -6.28499174118042
    6. ' #' → logprob: -7.03499174118042
    7. '   ' → logprob: -7.53499174118042
    8. '"' → logprob: -8.159992218017578
    9. 'Let's' → logprob: -8.159992218017578
    10. ' ' → logprob: -8.409992218017578

Token 1411: ' Minimal' (ID: 99472)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.3499651551246643
    2. 'from' → logprob: -1.4749650955200195
    3. '       ' → logprob: -3.2249650955200195
    4. 'def' → logprob: -4.2249650955200195
    5. 'weights' → logprob: -6.2249650955200195
    6. '
' → logprob: -6.3499650955200195
    7. '```' → logprob: -6.3499650955200195
    8. 'default' → logprob: -6.8499650955200195
    9. 'weight' → logprob: -7.0999650955200195
    10. '#
' → logprob: -7.5999650955200195

Token 1412: ' number' (ID: 2086)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.5346856713294983
    2. '
' → logprob: -2.7846856117248535
    3. ' def' → logprob: -2.9096856117248535
    4. '_chunks' → logprob: -2.9096856117248535
    5. '   ' → logprob: -3.0346856117248535
    6. '_' → logprob: -3.4096856117248535
    7. '```' → logprob: -4.0346856117248535
    8. 'from' → logprob: -4.0346856117248535
    9. ' =' → logprob: -4.2846856117248535
    10. '_chunk' → logprob: -4.5346856117248535

Token 1413: ' of' (ID: 328)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.7547441720962524
    2. ':' → logprob: -2.379744052886963
    3. ' =' → logprob: -2.379744052886963
    4. '   ' → logprob: -2.629744052886963
    5. '
' → logprob: -3.004744052886963
    6. 'from' → logprob: -3.004744052886963
    7. '=' → logprob: -3.129744052886963
    8. '       ' → logprob: -3.504744052886963
    9. '```' → logprob: -3.504744052886963
    10. ' def' → logprob: -4.129744052886963

Token 1414: ' chunks' (ID: 53440)
  Prédit: 'chunks'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'chunks' → logprob: -0.0091017484664917
    2. ' chunks' → logprob: -5.759101867675781
    3. 'tokens' → logprob: -6.384101867675781
    4. '
' → logprob: -6.634101867675781
    5. '_chunks' → logprob: -6.634101867675781
    6. '```' → logprob: -7.134101867675781
    7. 'chunk' → logprob: -7.759101867675781
    8. 'def' → logprob: -9.759101867675781
    9. 'all' → logprob: -10.259101867675781
    10. 'pieces' → logprob: -10.259101867675781

Token 1415: ' is' (ID: 382)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.819129228591919
    2. '       ' → logprob: -1.319129228591919
    3. 'def' → logprob: -1.819129228591919
    4. '
' → logprob: -2.569129228591919
    5. '```' → logprob: -3.444129228591919
    6. '#' → logprob: -4.56912899017334
    7. 'chunks' → logprob: -6.31912899017334
    8. '   ' → logprob: -6.44412899017334
    9. ':
' → logprob: -7.44412899017334
    10. ',' → logprob: -7.56912899017334

Token 1416: ' obtained' (ID: 17747)
  Prédit: 'default'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'default' → logprob: -0.6416529417037964
    2. '[]
' → logprob: -1.5166529417037964
    3. 'def' → logprob: -2.391653060913086
    4. '[]' → logprob: -3.266653060913086
    5. '       ' → logprob: -3.766653060913086
    6. 'self' → logprob: -4.141653060913086
    7. '```' → logprob: -4.391653060913086
    8. '1' → logprob: -4.516653060913086
    9. '
' → logprob: -4.766653060913086
    10. '#' → logprob: -4.891653060913086

Token 1417: ' by' (ID: 656)
  Prédit: ' by'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' by' → logprob: -0.1467699557542801
    2. 'by' → logprob: -2.2717700004577637
    3. 'from' → logprob: -4.396770000457764
    4. '=' → logprob: -5.146770000457764
    5. 'def' → logprob: -5.896770000457764
    6. '       ' → logprob: -5.896770000457764
    7. '```' → logprob: -5.896770000457764
    8. ':' → logprob: -6.021770000457764
    9. ' from' → logprob: -7.521770000457764
    10. '.' → logprob: -7.646770000457764

Token 1418: ' writing' (ID: 5281)
  Prédit: 'finding'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'finding' → logprob: -0.4907930791378021
    2. 'div' → logprob: -1.9907931089401245
    3. 'def' → logprob: -2.865792989730835
    4. 'breaking' → logprob: -3.115792989730835
    5. 'fact' → logprob: -3.240792989730835
    6. 'de' → logprob: -3.240792989730835
    7. '```' → logprob: -3.865792989730835
    8. 'spl' → logprob: -4.115793228149414
    9. 'from' → logprob: -4.615793228149414
    10. 'factor' → logprob: -5.115793228149414

Token 1419: ' total' (ID: 3609)
  Prédit: 'bin'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'bin' → logprob: -1.1482585668563843
    2. 'total' → logprob: -1.5232585668563843
    3. '1' → logprob: -2.648258686065674
    4. 'div' → logprob: -3.023258686065674
    5. 'the' → logprob: -3.273258686065674
    6. '   ' → logprob: -3.398258686065674
    7. '```' → logprob: -3.398258686065674
    8. '
' → logprob: -3.523258686065674
    9. '`' → logprob: -3.523258686065674
    10. '2' → logprob: -3.773258686065674

Token 1420: '_mass' (ID: 98668)
  Prédit: '_weight'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_weight' → logprob: -0.001983118010684848
    2. 'weight' → logprob: -6.251983165740967
    3. 'Weight' → logprob: -11.376982688903809
    4. '_weights' → logprob: -11.626982688903809
    5. '
' → logprob: -11.876982688903809
    6. '_w' → logprob: -12.126982688903809
    7. '_mass' → logprob: -12.126982688903809
    8. '```' → logprob: -12.376982688903809
    9. '_we' → logprob: -12.626982688903809
    10. '_' → logprob: -13.376982688903809

Token 1421: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -1.0443553924560547
    2. '
' → logprob: -1.5443553924560547
    3. '=' → logprob: -2.5443553924560547
    4. '```' → logprob: -2.6693553924560547
    5. '**' → logprob: -2.7943553924560547
    6. '_' → logprob: -2.7943553924560547
    7. ':' → logprob: -3.4193553924560547
    8. '[' → logprob: -4.044355392456055
    9. '   ' → logprob: -4.294355392456055
    10. '       ' → logprob: -4.794355392456055

Token 1422: ' sum' (ID: 4215)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '2' → logprob: -0.9809532165527344
    2. '1' → logprob: -1.2309532165527344
    3. 'total' → logprob: -2.2309532165527344
    4. 'default' → logprob: -2.8559532165527344
    5. '{' → logprob: -3.6059532165527344
    6. 'Weight' → logprob: -3.6059532165527344
    7. 'def' → logprob: -4.355953216552734
    8. 'weight' → logprob: -4.730953216552734
    9. ' defaultdict' → logprob: -4.730953216552734
    10. '
' → logprob: -4.980953216552734

Token 1423: ' of' (ID: 328)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -2.0667402744293213
    2. ' ' → logprob: -2.0667402744293213
    3. '_' → logprob: -2.3167402744293213
    4. '2' → logprob: -2.3167402744293213
    5. '**' → logprob: -2.3167402744293213
    6. '```' → logprob: -2.3167402744293213
    7. '
' → logprob: -2.8167402744293213
    8. '[' → logprob: -3.3167402744293213
    9. ' **' → logprob: -3.5667402744293213
    10. '(' → logprob: -3.8167402744293213

Token 1424: ' weight' (ID: 6049)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.741355836391449
    2. 'Weight' → logprob: -1.2413558959960938
    3. 'powers' → logprob: -2.8663558959960938
    4. 'weights' → logprob: -3.1163558959960938
    5. '(' → logprob: -3.2413558959960938
    6. '[' → logprob: -3.4913558959960938
    7. 'weight' → logprob: -3.8663558959960938
    8. 'a' → logprob: -3.9913558959960938
    9. '2' → logprob: -4.741355895996094
    10. '[
' → logprob: -6.241355895996094

Token 1425: '_i' (ID: 10853)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -1.1242632865905762
    2. 'Unit' → logprob: -2.374263286590576
    3. '       ' → logprob: -2.374263286590576
    4. ' =' → logprob: -2.749263286590576
    5. '   ' → logprob: -2.874263286590576
    6. 's' → logprob: -2.999263286590576
    7. '
' → logprob: -3.124263286590576
    8. ':' → logprob: -3.249263286590576
    9. '=' → logprob: -3.249263286590576
    10. '_unit' → logprob: -3.249263286590576

Token 1426: ' *' (ID: 425)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -1.7288709878921509
    2. '_' → logprob: -1.9788709878921509
    3. '
' → logprob: -2.1038708686828613
    4. '```' → logprob: -2.3538708686828613
    5. 's' → logprob: -2.4788708686828613
    6. '   ' → logprob: -2.6038708686828613
    7. '=' → logprob: -2.7288708686828613
    8. ':' → logprob: -2.8538708686828613
    9. '       ' → logprob: -3.1038708686828613
    10. 'def' → logprob: -3.9788708686828613

Token 1427: ' quantity' (ID: 17245)
  Prédit: 'quantity'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'quantity' → logprob: -0.16197985410690308
    2. ' quantity' → logprob: -1.9119799137115479
    3. '1' → logprob: -6.786979675292969
    4. 'b' → logprob: -8.661979675292969
    5. '2' → logprob: -8.911979675292969
    6. 'mar' → logprob: -9.161979675292969
    7. ' ' → logprob: -9.411979675292969
    8. 'Quantity' → logprob: -10.036979675292969
    9. ' b' → logprob: -11.161979675292969
    10. ' mar' → logprob: -11.411979675292969

Token 1428: '_i' (ID: 10853)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '```' → logprob: -1.3749972581863403
    2. ':' → logprob: -1.7499972581863403
    3. '=' → logprob: -1.8749972581863403
    4. ' =' → logprob: -2.499997138977051
    5. ',' → logprob: -2.874997138977051
    6. '
' → logprob: -3.124997138977051
    7. '[' → logprob: -3.374997138977051
    8. ':
' → logprob: -3.749997138977051
    9. '   ' → logprob: -3.874997138977051
    10. '_' → logprob: -3.999997138977051

Token 1429: ',' (ID: 11)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '```' → logprob: -0.6606084108352661
    2. '
' → logprob: -1.5356084108352661
    3. ':' → logprob: -2.5356082916259766
    4. '   ' → logprob: -3.0356082916259766
    5. '       ' → logprob: -3.0356082916259766
    6. 'def' → logprob: -4.035608291625977
    7. ',' → logprob: -4.410608291625977
    8. '#' → logprob: -4.785608291625977
    9. ':
' → logprob: -4.910608291625977
    10. ' =' → logprob: -4.910608291625977

Token 1430: ' each' (ID: 2454)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.13510732352733612
    2. '
' → logprob: -3.1351072788238525
    3. 'from' → logprob: -3.2601072788238525
    4. '```' → logprob: -3.7601072788238525
    5. '#' → logprob: -5.260107517242432
    6. ' and' → logprob: -5.385107517242432
    7. '        
' → logprob: -6.010107517242432
    8. ' from' → logprob: -6.385107517242432
    9. 'import' → logprob: -6.885107517242432
    10. '   ' → logprob: -7.010107517242432

Token 1431: ' weight' (ID: 6049)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -1.199041724205017
    2. ' =' → logprob: -1.449041724205017
    3. '```' → logprob: -1.449041724205017
    4. ':' → logprob: -2.3240418434143066
    5. ' unit' → logprob: -4.199041843414307
    6. '
' → logprob: -4.199041843414307
    7. '_' → logprob: -4.824041843414307
    8. '**' → logprob: -4.949041843414307
    9. '_i' → logprob: -5.199041843414307
    10. ' of' → logprob: -5.324041843414307

Token 1432: '_i' (ID: 10853)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.14822305738925934
    2. '=' → logprob: -2.1482231616973877
    3. '_' → logprob: -5.273222923278809
    4. '```' → logprob: -5.398222923278809
    5. ':' → logprob: -6.023222923278809
    6. 's' → logprob: -6.148222923278809
    7. 'def' → logprob: -6.898222923278809
    8. '
' → logprob: -7.148222923278809
    9. ',' → logprob: -7.273222923278809
    10. '#' → logprob: -7.898222923278809

Token 1433: ' and' (ID: 326)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6754055619239807
    2. ' =' → logprob: -1.300405502319336
    3. '```' → logprob: -2.175405502319336
    4. 's' → logprob: -3.675405502319336
    5. ' is' → logprob: -4.425405502319336
    6. '   ' → logprob: -4.550405502319336
    7. 'def' → logprob: -4.550405502319336
    8. ':' → logprob: -4.925405502319336
    9. '_' → logprob: -5.550405502319336
    10. ',' → logprob: -5.550405502319336

Token 1434: ' quantity' (ID: 17245)
  Prédit: 'quantity'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'quantity' → logprob: -0.00028696097433567047
    2. ' quantity' → logprob: -8.500287055969238
    3. '
' → logprob: -9.750287055969238
    4. '```' → logprob: -11.500287055969238
    5. 'each' → logprob: -11.875287055969238
    6. 'unit' → logprob: -12.750287055969238
    7. 'weight' → logprob: -13.750287055969238
    8. 'count' → logprob: -14.375287055969238
    9. ' ' → logprob: -15.000287055969238
    10. 'number' → logprob: -15.000287055969238

Token 1435: '_i' (ID: 10853)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.40154197812080383
    2. '=' → logprob: -2.2765419483184814
    3. '_' → logprob: -2.5265419483184814
    4. '_unit' → logprob: -2.9015419483184814
    5. '_i' → logprob: -3.5265419483184814
    6. 's' → logprob: -4.4015421867370605
    7. '```' → logprob: -4.5265421867370605
    8. ':' → logprob: -5.2765421867370605
    9. '`' → logprob: -5.5265421867370605
    10. 'Unit' → logprob: -5.6515421867370605

Token 1436: ' are' (ID: 553)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.8511394262313843
    2. '
' → logprob: -1.6011394262313843
    3. '```' → logprob: -2.351139545440674
    4. ':
' → logprob: -3.101139545440674
    5. '       ' → logprob: -3.226139545440674
    6. ':' → logprob: -3.226139545440674
    7. '=' → logprob: -3.351139545440674
    8. '#' → logprob: -3.601139545440674
    9. 'def' → logprob: -3.726139545440674
    10. '   ' → logprob: -4.476139545440674

Token 1437: ' integers' (ID: 54912)
  Prédit: 'powers'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'powers' → logprob: -0.1492026448249817
    2. '2' → logprob: -2.524202585220337
    3. ' powers' → logprob: -3.024202585220337
    4. '1' → logprob: -5.274202823638916
    5. '```' → logprob: -6.774202823638916
    6. 'pow' → logprob: -7.024202823638916
    7. 'Weight' → logprob: -7.274202823638916
    8. 'power' → logprob: -7.524202823638916
    9. 'Power' → logprob: -8.399202346801758
    10. 'weights' → logprob: -8.524202346801758

Token 1438: '.

' (ID: 364)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3361682891845703
    2. '
' → logprob: -1.3361682891845703
    3. ',' → logprob: -5.71116828918457
    4. ':
' → logprob: -6.08616828918457
    5. 'from' → logprob: -6.08616828918457
    6. '        
' → logprob: -6.08616828918457
    7. ':' → logprob: -6.33616828918457
    8. '   ' → logprob: -6.46116828918457
    9. '```' → logprob: -6.58616828918457
    10. '

' → logprob: -6.71116828918457

Token 1439: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.02233634889125824
    2. '        
' → logprob: -5.147336483001709
    3. '#' → logprob: -5.647336483001709
    4. ' 
' → logprob: -6.272336483001709
    5. '```' → logprob: -6.272336483001709
    6. '<|end|>' → logprob: -6.522336483001709
    7. '   ' → logprob: -6.647336483001709
    8. 'def' → logprob: -7.397336483001709
    9. ' ' → logprob: -7.397336483001709
    10. '`' → logprob: -7.522336483001709

Token 1440: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.26428696513175964
    2. '
' → logprob: -2.139286994934082
    3. 'from' → logprob: -2.389286994934082
    4. 'def' → logprob: -5.014286994934082
    5. '#' (adapté à ' #') → logprob: -5.139286994934082
    6. '```' → logprob: -5.264286994934082
    7. '        
' → logprob: -6.139286994934082
    8. 'import' → logprob: -7.889286994934082
    9. '   ' → logprob: -7.889286994934082
    10. 'weights' → logprob: -8.014286994934082

Token 1441: ' But' (ID: 3072)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.8950020670890808
    2. '#' → logprob: -1.2700021266937256
    3. 'from' → logprob: -1.3950021266937256
    4. 'def' → logprob: -3.2700021266937256
    5. '
' → logprob: -4.5200018882751465
    6. '```' → logprob: -6.3950018882751465
    7. 'weights' → logprob: -6.6450018882751465
    8. 'import' → logprob: -6.7700018882751465
    9. '        
' → logprob: -6.8950018882751465
    10. 'dp' → logprob: -7.0200018882751465

Token 1442: ' with' (ID: 483)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.4374725818634033
    2. 'from' → logprob: -1.9374725818634033
    3. '       ' → logprob: -2.0624725818634033
    4. 'def' → logprob: -2.6874725818634033
    5. ' #' → logprob: -5.812472343444824
    6. '
' → logprob: -6.437472343444824
    7. 'import' → logprob: -6.687472343444824
    8. ' from' → logprob: -6.687472343444824
    9. '#
' → logprob: -6.812472343444824
    10. '   ' → logprob: -6.937472343444824

Token 1443: ' no' (ID: 860)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.9138543605804443
    2. 'the' → logprob: -1.0388543605804443
    3. 'default' → logprob: -2.5388543605804443
    4. '#' → logprob: -2.6638543605804443
    5. '
' → logprob: -3.6638543605804443
    6. 'self' → logprob: -4.288854598999023
    7. 'b' → logprob: -4.413854598999023
    8. '```' → logprob: -4.413854598999023
    9. 'a' → logprob: -5.163854598999023
    10. ' the' → logprob: -5.788854598999023

Token 1444: ' other' (ID: 1273)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -1.4916021823883057
    2. 'more' → logprob: -1.8666021823883057
    3. ' more' → logprob: -1.9916021823883057
    4. ' further' → logprob: -2.4916021823883057
    5. 'additional' → logprob: -2.6166021823883057
    6. '```' → logprob: -2.7416021823883057
    7. 'explicit' → logprob: -3.1166021823883057
    8. ' constraints' → logprob: -3.1166021823883057
    9. 'constraints' → logprob: -3.2416021823883057
    10. ' explicit' → logprob: -3.7416021823883057

Token 1445: ' constraint' (ID: 44762)
  Prédit: 'information'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'information' → logprob: -0.7266863584518433
    2. ' information' → logprob: -0.8516863584518433
    3. 'data' → logprob: -4.226686477661133
    4. 'instructions' → logprob: -4.476686477661133
    5. 'info' → logprob: -4.851686477661133
    6. '
' → logprob: -4.851686477661133
    7. '```' → logprob: -4.851686477661133
    8. ' info' → logprob: -4.976686477661133
    9. ' constraints' → logprob: -4.976686477661133
    10. ' instructions' → logprob: -4.976686477661133

Token 1446: ',' (ID: 11)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3798774182796478
    2. '```' → logprob: -2.0048773288726807
    3. '
' → logprob: -2.1298773288726807
    4. 'def' → logprob: -4.62987756729126
    5. '        
' → logprob: -4.62987756729126
    6. ',' → logprob: -5.25487756729126
    7. ':
' → logprob: -5.25487756729126
    8. '   ' → logprob: -5.37987756729126
    9. '#' → logprob: -5.37987756729126
    10. '<|end|>' → logprob: -5.62987756729126

Token 1447: ' minimal' (ID: 19957)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.42587774991989136
    2. '#' → logprob: -1.1758778095245361
    3. 'return' → logprob: -3.675877809524536
    4. '```' → logprob: -5.675877571105957
    5. 'from' → logprob: -6.050877571105957
    6. 'def' → logprob: -6.300877571105957
    7. '   ' → logprob: -7.300877571105957
    8. 'if' → logprob: -7.300877571105957
    9. '
' → logprob: -7.425877571105957
    10. 'chunks' → logprob: -7.550877571105957

Token 1448: ' chunk' (ID: 23958)
  Prédit: 'number'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'number' → logprob: -0.5860881805419922
    2. '_number' → logprob: -1.8360881805419922
    3. '```' → logprob: -2.336088180541992
    4. '_chunks' → logprob: -3.211088180541992
    5. 'chunks' → logprob: -3.336088180541992
    6. 'def' → logprob: -3.711088180541992
    7. ' number' → logprob: -3.961088180541992
    8. '#' → logprob: -4.086088180541992
    9. '   ' → logprob: -4.586088180541992
    10. '_chunk' → logprob: -4.711088180541992

Token 1449: ' count' (ID: 3605)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.2502628564834595
    2. '_count' → logprob: -1.7502628564834595
    3. 'count' → logprob: -3.37526273727417
    4. '   ' → logprob: -5.75026273727417
    5. '_number' → logprob: -5.87526273727417
    6. ' count' → logprob: -6.50026273727417
    7. '
' → logprob: -7.37526273727417
    8. 'number' → logprob: -7.50026273727417
    9. ',' → logprob: -7.75026273727417
    10. '_' → logprob: -7.87526273727417

Token 1450: ' is' (ID: 382)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.781440019607544
    2. ':
' → logprob: -2.031440019607544
    3. '
' → logprob: -2.281440019607544
    4. '```' → logprob: -2.406440019607544
    5. ':' → logprob: -2.531440019607544
    6. 'def' → logprob: -3.281440019607544
    7. '#' → logprob: -3.906440019607544
    8. '   ' → logprob: -4.156439781188965
    9. ' =' → logprob: -4.531439781188965
    10. 'from' → logprob: -4.906439781188965

Token 1451: ' achieved' (ID: 23088)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.1915273815393448
    2. ' ' → logprob: -2.5665273666381836
    3. '```' → logprob: -3.3165273666381836
    4. 'self' → logprob: -4.316527366638184
    5. '0' → logprob: -4.566527366638184
    6. ' self' → logprob: -4.691527366638184
    7. ' total' → logprob: -5.691527366638184
    8. 'total' → logprob: -5.941527366638184
    9. '`' → logprob: -5.941527366638184
    10. '...' → logprob: -6.191527366638184

Token 1452: ' by' (ID: 656)
  Prédit: ' by'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' by' → logprob: -0.28240522742271423
    2. '       ' → logprob: -2.532405138015747
    3. '.' → logprob: -2.657405138015747
    4. '```' → logprob: -3.282405138015747
    5. 'by' → logprob: -4.282405376434326
    6. ':' → logprob: -4.657405376434326
    7. ':
' → logprob: -4.907405376434326
    8. '   ' → logprob: -4.907405376434326
    9. ',' → logprob: -5.532405376434326
    10. '=' → logprob: -5.657405376434326

Token 1453: ' choosing' (ID: 20296)
  Prédit: 'spl'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'spl' → logprob: -0.8842031359672546
    2. '[
' → logprob: -1.8842031955718994
    3. '[]
' → logprob: -2.5092031955718994
    4. 'def' → logprob: -2.6342031955718994
    5. 'return' → logprob: -3.3842031955718994
    6. 'div' → logprob: -3.3842031955718994
    7. 'finding' → logprob: -3.5092031955718994
    8. 'breaking' → logprob: -3.6342031955718994
    9. '[]' → logprob: -3.6342031955718994
    10. ' splitting' → logprob: -3.6342031955718994

Token 1454: ' all' (ID: 722)
  Prédit: 'weight'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'weight' → logprob: -1.7735185623168945
    2. '1' → logprob: -1.8985185623168945
    3. '```' → logprob: -2.2735185623168945
    4. 'the' → logprob: -2.3985185623168945
    5. 'Weight' → logprob: -2.5235185623168945
    6. 'total' → logprob: -2.5235185623168945
    7. 'chunks' → logprob: -2.7735185623168945
    8. ' the' → logprob: -3.3985185623168945
    9. '[
' → logprob: -3.5235185623168945
    10. ' weight' → logprob: -3.6485185623168945

Token 1455: ' quantity' (ID: 17245)
  Prédit: '_chunks'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_chunks' → logprob: -0.9474748969078064
    2. ' =' → logprob: -2.072474956512451
    3. 'chunks' → logprob: -2.072474956512451
    4. ' chunks' → logprob: -2.572474956512451
    5. ' +' → logprob: -3.197474956512451
    6. ' _' → logprob: -3.197474956512451
    7. '_' → logprob: -3.322474956512451
    8. '
' → logprob: -3.572474956512451
    9. '=' → logprob: -4.072474956512451
    10. '```' → logprob: -4.197474956512451

Token 1456: '_i' (ID: 10853)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.4112499952316284
    2. ' =' → logprob: -1.1612499952316284
    3. '_unit' → logprob: -5.036250114440918
    4. '```' → logprob: -5.411250114440918
    5. 's' → logprob: -5.536250114440918
    6. 'Unit' → logprob: -5.786250114440918
    7. '0' → logprob: -6.786250114440918
    8. '   ' → logprob: -7.411250114440918
    9. '_i' → logprob: -7.536250114440918
    10. '
' → logprob: -7.911250114440918

Token 1457: '=' (ID: 28)
  Prédit: '='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.18675081431865692
    2. ' =' → logprob: -1.9367507696151733
    3. '```' → logprob: -4.186750888824463
    4. 's' → logprob: -4.936750888824463
    5. ' as' → logprob: -7.561750888824463
    6. ' to' → logprob: -7.686750888824463
    7. '   ' → logprob: -7.686750888824463
    8. '>' → logprob: -8.436750411987305
    9. ',' → logprob: -8.436750411987305
    10. '0' → logprob: -8.811750411987305

Token 1458: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.000170882252859883
    2. '1' → logprob: -8.750170707702637
    3. '[' → logprob: -12.250170707702637
    4. ' ' → logprob: -13.000170707702637
    5. '```' → logprob: -13.250170707702637
    6. 'zero' → logprob: -13.750170707702637
    7. 'Weight' → logprob: -14.500170707702637
    8. 'Zero' → logprob: -15.500170707702637
    9. '`' → logprob: -15.562670707702637
    10. '
' → logprob: -15.625170707702637

Token 1459: ' ->' (ID: 2747)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.22550462186336517
    2. '   ' → logprob: -2.7255046367645264
    3. '
' → logprob: -3.1005046367645264
    4. '```' → logprob: -3.4755046367645264
    5. ',' → logprob: -3.8505046367645264
    6. ':' → logprob: -4.350504398345947
    7. ':
' → logprob: -5.100504398345947
    8. ',
' → logprob: -5.850504398345947
    9. '<|end|>' → logprob: -6.350504398345947
    10. '\n' → logprob: -6.475504398345947

Token 1460: ' quantity' (ID: 17245)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.10520048439502716
    2. 'def' → logprob: -3.9802005290985107
    3. '```' → logprob: -4.355200290679932
    4. '
' → logprob: -4.355200290679932
    5. '=' → logprob: -4.730200290679932
    6. 'b' → logprob: -4.980200290679932
    7. ':' → logprob: -5.355200290679932
    8. ' =' → logprob: -5.355200290679932
    9. '[
' → logprob: -5.355200290679932
    10. '1' → logprob: -5.730200290679932

Token 1461: '=' (ID: 28)
  Prédit: '='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6548904776573181
    2. ' =' → logprob: -0.9048904776573181
    3. 'Unit' → logprob: -3.029890537261963
    4. '_' → logprob: -4.779890537261963
    5. '0' → logprob: -5.279890537261963
    6. '```' → logprob: -5.654890537261963
    7. '_i' → logprob: -6.154890537261963
    8. '_unit' → logprob: -6.779890537261963
    9. '`' → logprob: -7.029890537261963
    10. '[' → logprob: -7.029890537261963

Token 1462: '1' (ID: 16)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.5248985886573792
    2. '1' → logprob: -0.8998985886573792
    3. ' ' → logprob: -6.399898529052734
    4. '```' → logprob: -10.024898529052734
    5. 'Quantity' → logprob: -10.399898529052734
    6. '`' → logprob: -11.274898529052734
    7. '[' → logprob: -12.524898529052734
    8. '(' → logprob: -12.649898529052734
    9. 'Weight' → logprob: -12.774898529052734
    10. '...' → logprob: -13.274898529052734

Token 1463: ' and' (ID: 326)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.07340071350336075
    2. '
' → logprob: -2.9484007358551025
    3. '```' → logprob: -4.948400497436523
    4. '   ' → logprob: -5.198400497436523
    5. 'def' → logprob: -6.323400497436523
    6. ':
' → logprob: -6.448400497436523
    7. ':' → logprob: -7.323400497436523
    8. ',' → logprob: -7.823400497436523
    9. 'return' → logprob: -8.448400497436523
    10. '           ' → logprob: -8.573400497436523

Token 1464: ' weight' (ID: 6049)
  Prédit: 'weight'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'weight' → logprob: -0.01080220565199852
    2. 'all' → logprob: -5.385802268981934
    3. ' weight' → logprob: -6.260802268981934
    4. '
' → logprob: -6.635802268981934
    5. 'a' → logprob: -6.760802268981934
    6. 'each' → logprob: -7.635802268981934
    7. 'chunk' → logprob: -8.385802268981934
    8. 'b' → logprob: -8.760802268981934
    9. ' all' → logprob: -8.760802268981934
    10. 'the' → logprob: -9.260802268981934

Token 1465: '_i' (ID: 10853)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6588773727416992
    2. ' =' → logprob: -0.7838773727416992
    3. 'Unit' → logprob: -4.033877372741699
    4. '(' → logprob: -6.033877372741699
    5. '_' → logprob: -6.658877372741699
    6. ',' → logprob: -7.283877372741699
    7. 's' → logprob: -7.408877372741699
    8. ':' → logprob: -8.0338773727417
    9. '_unit' → logprob: -8.0338773727417
    10. '(s' → logprob: -8.1588773727417

Token 1466: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6381805539131165
    2. ' =' → logprob: -0.7631805539131165
    3. 'Unit' → logprob: -6.388180732727051
    4. 's' → logprob: -6.763180732727051
    5. '=
' → logprob: -7.138180732727051
    6. ')' → logprob: -8.13818073272705
    7. ':' → logprob: -8.38818073272705
    8. ' =
' → logprob: -8.63818073272705
    9. ',' → logprob: -8.76318073272705
    10. '
' → logprob: -8.88818073272705

Token 1467: ' total' (ID: 3609)
  Prédit: 'total'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'total' → logprob: -0.00030948311905376613
    2. 'Weight' → logprob: -8.125309944152832
    3. ' total' → logprob: -11.500309944152832
    4. '(total' → logprob: -13.625309944152832
    5. 'Total' → logprob: -14.500309944152832
    6. 'all' → logprob: -14.750309944152832
    7. '{' → logprob: -15.375309944152832
    8. '[' → logprob: -15.625309944152832
    9. 'weight' → logprob: -15.875309944152832
    10. '1' → logprob: -16.000308990478516

Token 1468: '_mass' (ID: 98668)
  Prédit: '_weight'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_weight' → logprob: -0.0850808173418045
    2. 'Weight' → logprob: -3.710080862045288
    3. '_unit' → logprob: -4.335080623626709
    4. '_' → logprob: -4.460080623626709
    5. '_
' → logprob: -5.210080623626709
    6. ' =' → logprob: -5.835080623626709
    7. '_chunk' → logprob: -5.835080623626709
    8. '=' → logprob: -6.085080623626709
    9. 'Unit' → logprob: -6.335080623626709
    10. '
' → logprob: -6.335080623626709

Token 1469: ' (' (ID: 350)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.13882243633270264
    2. '
' → logprob: -2.263822555541992
    3. 'def' → logprob: -5.388822555541992
    4. ':
' → logprob: -5.638822555541992
    5. '```' → logprob: -5.638822555541992
    6. 'return' → logprob: -6.013822555541992
    7. ' =' → logprob: -6.138822555541992
    8. ':' → logprob: -6.638822555541992
    9. 'from' → logprob: -6.638822555541992
    10. '[' → logprob: -6.638822555541992

Token 1470: 'since' (ID: 21910)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.05025581270456314
    2. ')
' → logprob: -3.67525577545166
    3. '       ' → logprob: -5.05025577545166
    4. '```' → logprob: -5.55025577545166
    5. ':' → logprob: -5.92525577545166
    6. '   ' → logprob: -6.17525577545166
    7. '
' → logprob: -6.42525577545166
    8. '):' → logprob: -6.92525577545166
    9. '):
' → logprob: -7.17525577545166
    10. '.' → logprob: -7.30025577545166

Token 1471: ' b' (ID: 287)
  Prédit: 'total'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'total' → logprob: -0.6690776944160461
    2. 'weight' → logprob: -1.1690776348114014
    3. ' total' → logprob: -2.4190776348114014
    4. ' weight' → logprob: -3.4190776348114014
    5. 'quantity' → logprob: -4.0440778732299805
    6. '1' → logprob: -4.6690778732299805
    7. 'self' → logprob: -5.1690778732299805
    8. 'the' → logprob: -5.2940778732299805
    9. ' quantity' → logprob: -5.9190778732299805
    10. 'value' → logprob: -6.0440778732299805

Token 1472: '=' (ID: 28)
  Prédit: '_i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_i' → logprob: -0.04457695409655571
    2. '=' → logprob: -3.66957688331604
    3. ')' → logprob: -4.919577121734619
    4. '=_' → logprob: -5.544577121734619
    5. ')_' → logprob: -5.544577121734619
    6. 'i' → logprob: -7.294577121734619
    7. '==' → logprob: -7.669577121734619
    8. '_' → logprob: -7.919577121734619
    9. ')=' → logprob: -8.544576644897461
    10. ' =' → logprob: -8.919576644897461

Token 1473: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.003707442432641983
    2. '=' → logprob: -5.753707408905029
    3. '
' → logprob: -8.628707885742188
    4. '```' → logprob: -9.503707885742188
    5. ' ' → logprob: -9.878707885742188
    6. ')' → logprob: -9.878707885742188
    7. '==' → logprob: -10.253707885742188
    8. '`' → logprob: -10.878707885742188
    9. ' =' → logprob: -10.878707885742188
    10. 'i' → logprob: -10.878707885742188

Token 1474: ' means' (ID: 4748)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.45439791679382324
    2. ')
' → logprob: -2.3293979167938232
    3. '       ' → logprob: -2.5793979167938232
    4. '):
' → logprob: -2.7043979167938232
    5. '):' → logprob: -2.9543979167938232
    6. '
' → logprob: -3.2043979167938232
    7. '```' → logprob: -4.704398155212402
    8. ',' → logprob: -5.079398155212402
    9. '   ' → logprob: -5.204398155212402
    10. ':' → logprob: -5.329398155212402

Token 1475: ' quantity' (ID: 17245)
  Prédit: 'quantity'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'quantity' → logprob: -0.7509372234344482
    2. '1' → logprob: -0.8759372234344482
    3. ' quantity' → logprob: -2.2509372234344482
    4. ' ' → logprob: -5.625937461853027
    5. '```' → logprob: -6.750937461853027
    6. '`' → logprob: -7.625937461853027
    7. '``' → logprob: -9.000937461853027
    8. '0' → logprob: -9.000937461853027
    9. ')' → logprob: -9.125937461853027
    10. '
' → logprob: -9.250937461853027

Token 1476: '=' (ID: 28)
  Prédit: '='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.03209038823843002
    2. ' =' → logprob: -4.032090187072754
    3. '```' → logprob: -5.657090187072754
    4. ')' → logprob: -5.782090187072754
    5. 'Unit' → logprob: -6.782090187072754
    6. '):
' → logprob: -6.907090187072754
    7. ',' → logprob: -7.032090187072754
    8. '`' → logprob: -7.157090187072754
    9. 'def' → logprob: -7.282090187072754
    10. ')
' → logprob: -7.657090187072754

Token 1477: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.003697112202644348
    2. '0' → logprob: -5.628696918487549
    3. '```' → logprob: -10.253697395324707
    4. ' ' → logprob: -10.378697395324707
    5. '`' → logprob: -11.003697395324707
    6. '
' → logprob: -12.753697395324707
    7. '``' → logprob: -13.253697395324707
    8. '   ' → logprob: -13.253697395324707
    9. '=' → logprob: -13.878697395324707
    10. ')' → logprob: -13.878697395324707

Token 1478: ').

' (ID: 3991)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.31457018852233887
    2. '
' → logprob: -2.064570188522339
    3. ':
' → logprob: -3.064570188522339
    4. ':' → logprob: -3.064570188522339
    5. '```' → logprob: -4.064570426940918
    6. '):' → logprob: -4.939570426940918
    7. '):
' → logprob: -5.189570426940918
    8. '   ' → logprob: -5.314570426940918
    9. ',' → logprob: -5.814570426940918
    10. ')' → logprob: -6.189570426940918

Token 1479: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.07033851742744446
    2. 'return' → logprob: -2.945338487625122
    3. '[
' → logprob: -4.695338726043701
    4. '[' → logprob: -6.695338726043701
    5. '   ' → logprob: -6.695338726043701
    6. '```' → logprob: -7.070338726043701
    7. '
' → logprob: -7.445338726043701
    8. 'def' → logprob: -7.695338726043701
    9. '`' → logprob: -8.070338249206543
    10. 'if' → logprob: -8.320338249206543

Token 1480: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.036003779619932175
    2. 'return' → logprob: -3.411003828048706
    3. '
' → logprob: -6.536003589630127
    4. 'if' → logprob: -7.286003589630127
    5. '```' → logprob: -9.786004066467285
    6. '   ' → logprob: -10.161004066467285
    7. ' return' → logprob: -10.411004066467285
    8. ' if' → logprob: -10.911004066467285
    9. '           ' → logprob: -11.536004066467285
    10. 'result' → logprob: -11.661004066467285

Token 1481: ' The' (ID: 623)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.4484160840511322
    2. 'if' → logprob: -1.4484161138534546
    3. '       ' → logprob: -2.198415994644165
    4. 'chunks' → logprob: -4.573416233062744
    5. 'weight' → logprob: -6.073416233062744
    6. '
' → logprob: -7.198416233062744
    7. 'chunk' → logprob: -7.448416233062744
    8. 'def' → logprob: -7.448416233062744
    9. '#' → logprob: -7.948416233062744
    10. 'b' → logprob: -9.198415756225586

Token 1482: ' problem' (ID: 4792)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.4160551130771637
    2. 'def' → logprob: -1.2910550832748413
    3. '[
' → logprob: -3.666055202484131
    4. '#' → logprob: -4.666055202484131
    5. 'result' → logprob: -4.791055202484131
    6. 'chunks' → logprob: -5.041055202484131
    7. 'b' → logprob: -6.291055202484131
    8. ')
' → logprob: -6.541055202484131
    9. ']' → logprob: -6.666055202484131
    10. '[' → logprob: -6.666055202484131

Token 1483: ' suggests' (ID: 23379)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.6713668704032898
    2. ':' → logprob: -1.0463669300079346
    3. '.' → logprob: -2.9213669300079346
    4. ' def' → logprob: -3.4213669300079346
    5. '   ' → logprob: -4.1713666915893555
    6. '=' → logprob: -4.6713666915893555
    7. '```' → logprob: -5.4213666915893555
    8. '
' → logprob: -5.5463666915893555
    9. ' =' → logprob: -5.6713666915893555
    10. '.def' → logprob: -6.4213666915893555

Token 1484: ' "' (ID: 392)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.8169520497322083
    2. 'from' → logprob: -2.0669519901275635
    3. '[
' → logprob: -2.3169519901275635
    4. 'def' → logprob: -2.4419519901275635
    5. 'chunks' → logprob: -2.4419519901275635
    6. '       ' → logprob: -2.6919519901275635
    7. 'if' → logprob: -3.0669519901275635
    8. '[' → logprob: -4.316952228546143
    9. 'weight' → logprob: -4.566952228546143
    10. '#' → logprob: -4.941952228546143

Token 1485: 'weight' (ID: 8250)
  Prédit: '[
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[
' → logprob: -0.19134026765823364
    2. 'return' → logprob: -2.316340208053589
    3. '[' → logprob: -2.941340208053589
    4. 'def' → logprob: -4.066340446472168
    5. '[]
' → logprob: -6.441340446472168
    6. '"' → logprob: -7.316340446472168
    7. '```' → logprob: -7.316340446472168
    8. '{
' → logprob: -7.941340446472168
    9. '["' → logprob: -8.066340446472168
    10. '       ' → logprob: -8.441340446472168

Token 1486: ' of' (ID: 328)
  Prédit: 'Unit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Unit' → logprob: -0.5682536959648132
    2. 's' → logprob: -1.943253755569458
    3. ' =' → logprob: -1.943253755569458
    4. '_unit' → logprob: -2.693253755569458
    5. '=' → logprob: -2.943253755569458
    6. '"' → logprob: -4.818253517150879
    7. '_' → logprob: -5.318253517150879
    8. '```' → logprob: -5.943253517150879
    9. '_units' → logprob: -6.318253517150879
    10. '   ' → logprob: -6.818253517150879

Token 1487: ' small' (ID: 3291)
  Prédit: 'chunks'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'chunks' → logprob: -0.8420625329017639
    2. 'the' → logprob: -1.5920624732971191
    3. '```' → logprob: -2.592062473297119
    4. 'Weight' → logprob: -2.967062473297119
    5. 'All' → logprob: -3.217062473297119
    6. 'unit' → logprob: -3.217062473297119
    7. 'Unit' → logprob: -3.467062473297119
    8. '1' → logprob: -3.842062473297119
    9. 'all' → logprob: -3.842062473297119
    10. 'chunk' → logprob: -3.842062473297119

Token 1488: ' units' (ID: 13306)
  Prédit: 'Unit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Unit' → logprob: -0.9644676446914673
    2. 'est' → logprob: -1.7144676446914673
    3. 's' → logprob: -1.9644676446914673
    4. '[]' → logprob: -2.7144675254821777
    5. '_chunks' → logprob: -3.4644675254821777
    6. 'Chunks' → logprob: -3.9644675254821777
    7. 'chunks' → logprob: -4.089467525482178
    8. '[' → logprob: -4.214467525482178
    9. '[]
' → logprob: -4.339467525482178
    10. '_unit' → logprob: -4.339467525482178

Token 1489: '"' (ID: 1)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -1.5858265161514282
    2. '[
' → logprob: -1.7108265161514282
    3. 's' → logprob: -1.7108265161514282
    4. '"' → logprob: -1.8358265161514282
    5. 'Unit' → logprob: -3.3358263969421387
    6. '```' → logprob: -3.3358263969421387
    7. '0' → logprob: -3.5858263969421387
    8. '[]' → logprob: -3.8358263969421387
    9. '_' → logprob: -3.8358263969421387
    10. '=' → logprob: -3.9608263969421387

Token 1490: ' in' (ID: 306)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.8443014025688171
    2. 'def' → logprob: -1.094301462173462
    3. '
' → logprob: -2.594301462173462
    4. '```' → logprob: -3.344301462173462
    5. ':
' → logprob: -3.469301462173462
    6. 'return' → logprob: -3.844301462173462
    7. '   ' → logprob: -4.094301223754883
    8. ':' → logprob: -4.469301223754883
    9. 'if' → logprob: -4.719301223754883
    10. 'from' → logprob: -5.219301223754883

Token 1491: ' bok' (ID: 35768)
  Prédit: 'chunks'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'chunks' → logprob: -1.1263172626495361
    2. 'b' → logprob: -2.001317262649536
    3. 'the' → logprob: -2.001317262649536
    4. 'bok' → logprob: -2.251317262649536
    5. '[
' → logprob: -2.876317262649536
    6. '```' → logprob: -2.876317262649536
    7. '0' → logprob: -3.001317262649536
    8. 'B' → logprob: -3.626317262649536
    9. '[' → logprob: -4.001317024230957
    10. 'def' → logprob: -4.751317024230957

Token 1492: 'ko' (ID: 3593)
  Prédit: 'ko'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ko' → logprob: -0.005233525298535824
    2. 'k' → logprob: -5.630233287811279
    3. '```' → logprob: -7.505233287811279
    4. 'o' → logprob: -7.755233287811279
    5. '`' → logprob: -9.130233764648438
    6. '{
' → logprob: -9.505233764648438
    7. '_' → logprob: -9.630233764648438
    8. 'ко' → logprob: -9.755233764648438
    9. ' ko' → logprob: -10.130233764648438
    10. '
' → logprob: -10.130233764648438

Token 1493: ' units' (ID: 13306)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -1.0642800331115723
    2. 'def' → logprob: -1.4392800331115723
    3. '[' → logprob: -2.4392800331115723
    4. '[
' → logprob: -2.5642800331115723
    5. ':
' → logprob: -2.9392800331115723
    6. '_' → logprob: -3.8142800331115723
    7. '=' → logprob: -3.8142800331115723
    8. '   ' → logprob: -3.8142800331115723
    9. '```' → logprob: -3.9392800331115723
    10. '0' → logprob: -3.9392800331115723

Token 1494: ' and' (ID: 326)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -1.0762333869934082
    2. 'def' → logprob: -1.0762333869934082
    3. '       ' → logprob: -1.8262333869934082
    4. 'if' → logprob: -2.576233386993408
    5. '```' → logprob: -3.701233386993408
    6. 'from' → logprob: -3.951233386993408
    7. ':' → logprob: -4.951233386993408
    8. '#' → logprob: -5.326233386993408
    9. 'return' → logprob: -5.576233386993408
    10. ':
' → logprob: -5.576233386993408

Token 1495: ' quantity' (ID: 17245)
  Prédit: 'quantity'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'quantity' → logprob: -0.03908068314194679
    2. 'mar' → logprob: -3.7890806198120117
    3. ' quantity' → logprob: -4.664080619812012
    4. 'b' → logprob: -5.414080619812012
    5. '"' → logprob: -7.914080619812012
    6. '
' → logprob: -8.164080619812012
    7. 'a' → logprob: -8.164080619812012
    8. '0' → logprob: -8.539080619812012
    9. '`' → logprob: -9.039080619812012
    10. '```' → logprob: -9.039080619812012

Token 1496: ' units' (ID: 13306)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -1.0821657180786133
    2. '=' → logprob: -1.2071657180786133
    3. ':' → logprob: -1.9571657180786133
    4. ' =' → logprob: -2.9571657180786133
    5. '```' → logprob: -3.3321657180786133
    6. '[' → logprob: -3.7071657180786133
    7. '(' → logprob: -3.8321657180786133
    8. '0' → logprob: -4.582165718078613
    9. 's' → logprob: -4.582165718078613
    10. '_' → logprob: -4.832165718078613

Token 1497: ' in' (ID: 306)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5454648733139038
    2. 'def' → logprob: -1.7954648733139038
    3. '
' → logprob: -2.0454649925231934
    4. 'from' → logprob: -2.9204649925231934
    5. '```' → logprob: -3.4204649925231934
    6. 'if' → logprob: -3.9204649925231934
    7. ':' → logprob: -5.170464992523193
    8. '#' → logprob: -5.795464992523193
    9. ' if' → logprob: -6.295464992523193
    10. '   ' → logprob: -6.670464992523193

Token 1498: ' mar' (ID: 2674)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.5764266848564148
    2. '[' → logprob: -1.9514267444610596
    3. '[
' → logprob: -2.0764267444610596
    4. '```' → logprob: -2.9514267444610596
    5. 'b' → logprob: -3.2014267444610596
    6. 'Weight' → logprob: -4.3264265060424805
    7. 'Quantity' → logprob: -4.5764265060424805
    8. 'bok' → logprob: -4.8264265060424805
    9. 'mar' → logprob: -4.9514265060424805
    10. '1' → logprob: -5.2014265060424805

Token 1499: 'ugu' (ID: 8060)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.24314391613006592
    2. '0' → logprob: -2.1181440353393555
    3. '{
' → logprob: -3.7431440353393555
    4. 'ko' → logprob: -4.7431440353393555
    5. '_' → logprob: -5.1181440353393555
    6. '```' → logprob: -5.1181440353393555
    7. 'kk' → logprob: -5.3681440353393555
    8. '_k' → logprob: -5.4931440353393555
    9. '   ' → logprob: -5.6181440353393555
    10. ')' → logprob: -5.6181440353393555

Token 1500: '.

' (ID: 364)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -1.2944512367248535
    2. ':
' → logprob: -1.4194512367248535
    3. '       ' → logprob: -1.9194512367248535
    4. ':' → logprob: -2.2944512367248535
    5. '```' → logprob: -2.6694512367248535
    6. '
' → logprob: -2.7944512367248535
    7. '   ' → logprob: -3.5444512367248535
    8. ',' → logprob: -4.4194512367248535
    9. '[
' → logprob: -4.5444512367248535
    10. '[' → logprob: -4.5444512367248535

Token 1501: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.13667918741703033
    2. 'def' → logprob: -2.511679172515869
    3. '   ' → logprob: -4.261679172515869
    4. '[
' → logprob: -4.886679172515869
    5. 'return' → logprob: -5.261679172515869
    6. '```' → logprob: -5.386679172515869
    7. '[' → logprob: -5.511679172515869
    8. '0' → logprob: -6.636679172515869
    9. 'weight' → logprob: -7.011679172515869
    10. ':' → logprob: -7.261679172515869

Token 1502: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.49509531259536743
    2. '#' (adapté à ' #') → logprob: -1.8700952529907227
    3. 'if' → logprob: -2.3700952529907227
    4. 'from' → logprob: -2.4950952529907227
    5. 'chunks' → logprob: -4.120095252990723
    6. 'def' → logprob: -4.745095252990723
    7. 'x' → logprob: -5.120095252990723
    8. 'b' → logprob: -5.245095252990723
    9. '
' → logprob: -5.495095252990723
    10. 'weight' → logprob: -5.745095252990723

Token 1503: ' HOWEVER' (ID: 67324)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.832997739315033
    2. 'from' → logprob: -1.2079977989196777
    3. '       ' → logprob: -2.4579977989196777
    4. '#' → logprob: -2.8329977989196777
    5. 'if' → logprob: -2.9579977989196777
    6. 'chunks' → logprob: -4.457997798919678
    7. '
' → logprob: -4.582997798919678
    8. '```' → logprob: -4.707997798919678
    9. 'weight' → logprob: -5.207997798919678
    10. 'weights' → logprob: -5.457997798919678

Token 1504: ',' (ID: 11)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.8009206056594849
    2. '   ' → logprob: -1.5509206056594849
    3. 'def' → logprob: -1.8009206056594849
    4. ':
' → logprob: -2.5509204864501953
    5. '#' → logprob: -3.6759204864501953
    6. ',' → logprob: -4.050920486450195
    7. '       ' → logprob: -4.550920486450195
    8. '
' → logprob: -4.675920486450195
    9. '.' → logprob: -5.300920486450195
    10. '=' → logprob: -5.425920486450195

Token 1505: ' the' (ID: 290)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.3446909487247467
    2. 'from' → logprob: -1.8446909189224243
    3. '       ' → logprob: -2.594691038131714
    4. 'if' → logprob: -3.844691038131714
    5. 'def' → logprob: -4.719690799713135
    6. '```' → logprob: -4.844690799713135
    7. 'chunks' → logprob: -5.219690799713135
    8. 'import' → logprob: -5.594690799713135
    9. '
' → logprob: -5.844690799713135
    10. 'return' → logprob: -5.969690799713135

Token 1506: ' '' (ID: 461)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.6309542655944824
    2. 'def' → logprob: -1.1309542655944824
    3. 'from' → logprob: -2.2559542655944824
    4. 'remaining' → logprob: -4.505954265594482
    5. 'rest' → logprob: -5.005954265594482
    6. 'return' → logprob: -5.130954265594482
    7. '       ' → logprob: -5.130954265594482
    8. '   ' → logprob: -6.630954265594482
    9. 'weight' → logprob: -6.630954265594482
    10. 'import' → logprob: -6.880954265594482

Token 1507: 'Sample' (ID: 19868)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -1.0468714237213135
    2. 'b' → logprob: -1.4218714237213135
    3. '#' → logprob: -2.5468714237213135
    4. 'quantity' → logprob: -2.5468714237213135
    5. 'weight' → logprob: -3.0468714237213135
    6. '```' → logprob: -3.2968714237213135
    7. 'from' → logprob: -3.6718714237213135
    8. '`' → logprob: -4.171871185302734
    9. '"""
' → logprob: -4.296871185302734
    10. '0' → logprob: -4.296871185302734

Token 1508: ' Output' (ID: 18315)
  Prédit: '[
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[
' → logprob: -0.7807336449623108
    2. '```' → logprob: -1.655733585357666
    3. '`' → logprob: -2.155733585357666
    4. '[]' → logprob: -2.655733585357666
    5. '[' → logprob: -2.905733585357666
    6. ':' → logprob: -4.030733585357666
    7. '
' → logprob: -4.280733585357666
    8. '[]
' → logprob: -4.905733585357666
    9. 'Chunks' → logprob: -4.905733585357666
    10. 'Chunk' → logprob: -5.155733585357666

Token 1509: ' ' (ID: 220)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -1.1698344945907593
    2. '```' → logprob: -1.6698344945907593
    3. 's' → logprob: -1.9198344945907593
    4. 'def' → logprob: -2.294834613800049
    5. ':
' → logprob: -2.919834613800049
    6. '[' → logprob: -3.169834613800049
    7. '[]' → logprob: -3.544834613800049
    8. ' =' → logprob: -3.544834613800049
    9. '=' → logprob: -3.794834613800049
    10. '[
' → logprob: -4.294834613800049

Token 1510: '1' (ID: 16)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -1.3842971324920654
    2. '=' → logprob: -1.5092971324920654
    3. 'def' → logprob: -2.1342971324920654
    4. '```' → logprob: -2.2592971324920654
    5. ' =' → logprob: -2.7592971324920654
    6. 's' → logprob: -2.8842971324920654
    7. ':
' → logprob: -3.1342971324920654
    8. '[' → logprob: -3.7592971324920654
    9. '   ' → logprob: -3.8842971324920654
    10. '_' → logprob: -4.2592973709106445

Token 1511: ''' (ID: 6)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '```' → logprob: -1.0269479751586914
    2. ':' → logprob: -1.1519479751586914
    3. '[' → logprob: -2.7769479751586914
    4. '[
' → logprob: -2.9019479751586914
    5. ':
' → logprob: -3.0269479751586914
    6. 'def' → logprob: -3.0269479751586914
    7. '   ' → logprob: -3.7769479751586914
    8. '=' → logprob: -4.526947975158691
    9. ' =' → logprob: -4.651947975158691
    10. '[]' → logprob: -4.776947975158691

Token 1512: ' gives' (ID: 8967)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '```' → logprob: -0.5807541012763977
    2. ':' → logprob: -1.080754041671753
    3. '   ' → logprob: -4.080754280090332
    4. ':
' → logprob: -4.080754280090332
    5. '[' → logprob: -4.455754280090332
    6. ' =' → logprob: -4.580754280090332
    7. 'def' → logprob: -4.580754280090332
    8. '[
' → logprob: -5.205754280090332
    9. '``' → logprob: -5.205754280090332
    10. '
' → logprob: -5.330754280090332

Token 1513: ' TWO' (ID: 80903)
  Prédit: '[
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[
' → logprob: -0.17132847011089325
    2. 'def' → logprob: -2.421328544616699
    3. '```' → logprob: -3.421328544616699
    4. '[' → logprob: -4.046328544616699
    5. '   ' → logprob: -5.171328544616699
    6. '       ' → logprob: -5.796328544616699
    7. 'return' → logprob: -6.046328544616699
    8. '`' → logprob: -6.796328544616699
    9. '{' → logprob: -7.046328544616699
    10. 'from' → logprob: -7.296328544616699

Token 1514: ' lines' (ID: 8698)
  Prédit: ' chunks'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' chunks' → logprob: -0.8813558220863342
    2. '_chunks' → logprob: -1.7563557624816895
    3. 'chunks' → logprob: -1.7563557624816895
    4. '
' → logprob: -2.6313557624816895
    5. '```' → logprob: -3.3813557624816895
    6. '[
' → logprob: -3.5063557624816895
    7. ':' → logprob: -4.2563557624816895
    8. ' def' → logprob: -4.6313557624816895
    9. '_' → logprob: -4.7563557624816895
    10. '[' → logprob: -4.8813557624816895

Token 1515: ':

' (ID: 1402)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.520829439163208
    2. '       ' → logprob: -2.020829439163208
    3. ':
' → logprob: -2.270829439163208
    4. 'def' → logprob: -3.145829439163208
    5. ':' → logprob: -3.895829439163208
    6. '   ' → logprob: -4.020829200744629
    7. '```' → logprob: -4.020829200744629
    8. ',' → logprob: -4.895829200744629
    9. '#' → logprob: -5.020829200744629
    10. '\n' → logprob: -5.270829200744629

Token 1516: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.8637693524360657
    2. 'def' → logprob: -1.238769292831421
    3. '```' → logprob: -1.863769292831421
    4. '[
' → logprob: -2.738769292831421
    5. '
' → logprob: -3.738769292831421
    6. '   ' → logprob: -4.23876953125
    7. 'from' → logprob: -5.48876953125
    8. ':' → logprob: -5.73876953125
    9. '[' → logprob: -5.73876953125
    10. ' def' → logprob: -5.98876953125

Token 1517: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.26661720871925354
    2. '[
' → logprob: -1.8916171789169312
    3. '```' → logprob: -3.2666172981262207
    4. '   ' → logprob: -4.516617298126221
    5. '[' → logprob: -4.641617298126221
    6. 'def' → logprob: -5.516617298126221
    7. ':' → logprob: -5.641617298126221
    8. '           ' → logprob: -6.016617298126221
    9. '#' (adapté à ' #') → logprob: -6.141617298126221
    10. '[]' → logprob: -6.641617298126221

Token 1518: ' ' (ID: 220)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.8594973683357239
    2. '```' → logprob: -1.359497308731079
    3. '       ' → logprob: -1.609497308731079
    4. '[
' → logprob: -2.859497308731079
    5. 'from' → logprob: -4.359497547149658
    6. 'return' → logprob: -4.859497547149658
    7. '   ' → logprob: -4.984497547149658
    8. '[]
' → logprob: -4.984497547149658
    9. '[' → logprob: -5.234497547149658
    10. '[]' → logprob: -5.734497547149658

Token 1519: '3' (ID: 18)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.09273330867290497
    2. 'from' → logprob: -3.092733383178711
    3. '       ' → logprob: -3.967733383178711
    4. '```' → logprob: -4.092733383178711
    5. 'chunks' → logprob: -6.217733383178711
    6. '   ' → logprob: -6.467733383178711
    7. '
' → logprob: -6.967733383178711
    8. '[
' → logprob: -7.467733383178711
    9. 'class' → logprob: -8.092733383178711
    10. '#' → logprob: -8.217733383178711

Token 1520: ' ' (ID: 220)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '```' → logprob: -1.2061538696289062
    2. ':' → logprob: -2.2061538696289062
    3. 'def' → logprob: -2.5811538696289062
    4. ' =' → logprob: -2.7061538696289062
    5. '[' → logprob: -2.9561538696289062
    6. '0' → logprob: -3.0811538696289062
    7. '\n' → logprob: -3.2061538696289062
    8. '       ' → logprob: -3.3311538696289062
    9. '
' → logprob: -3.3311538696289062
    10. '   ' → logprob: -3.4561538696289062

Token 1521: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.9056994915008545
    2. 'def' → logprob: -1.6556994915008545
    3. '
' → logprob: -2.2806994915008545
    4. ' =' → logprob: -3.0306994915008545
    5. '```' → logprob: -3.0306994915008545
    6. '       ' → logprob: -3.1556994915008545
    7. '[
' → logprob: -3.6556994915008545
    8. '1' → logprob: -3.6556994915008545
    9. '   ' → logprob: -4.280699729919434
    10. '[' → logprob: -4.405699729919434

Token 1522: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.7854615449905396
    2. '       ' → logprob: -1.0354615449905396
    3. '```' → logprob: -2.28546142578125
    4. '\n' → logprob: -4.03546142578125
    5. 'return' → logprob: -4.16046142578125
    6. '3' → logprob: -4.78546142578125
    7. '2' → logprob: -5.16046142578125
    8. '   ' → logprob: -5.16046142578125
    9. ' and' → logprob: -5.28546142578125
    10. '1' → logprob: -5.28546142578125

Token 1523: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.078223705291748
    2. 'def' → logprob: -1.578223705291748
    3. 'from' → logprob: -1.703223705291748
    4. '```' → logprob: -1.953223705291748
    5. 'return' → logprob: -3.078223705291748
    6. 'weight' → logprob: -3.703223705291748
    7. '[
' → logprob: -3.828223705291748
    8. '
' → logprob: -4.703223705291748
    9. '``' → logprob: -5.328223705291748
    10. '[' → logprob: -5.703223705291748

Token 1524: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.0427061319351196
    2. 'def' → logprob: -1.0427061319351196
    3. 'from' → logprob: -2.16770601272583
    4. 'return' → logprob: -2.79270601272583
    5. '```' → logprob: -3.16770601272583
    6. '[
' → logprob: -3.41770601272583
    7. 'weight' → logprob: -4.29270601272583
    8. '[' → logprob: -5.04270601272583
    9. '#' (adapté à ' #') → logprob: -5.66770601272583
    10. '   ' → logprob: -5.91770601272583

Token 1525: ' ' (ID: 220)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3830081522464752
    2. 'def' → logprob: -1.7580081224441528
    3. '```' → logprob: -2.7580082416534424
    4. '   ' → logprob: -3.5080082416534424
    5. ':' → logprob: -4.133008003234863
    6. '
' → logprob: -4.758008003234863
    7. ':
' → logprob: -4.883008003234863
    8. '[' → logprob: -5.633008003234863
    9. '[
' → logprob: -6.008008003234863
    10. 'return' → logprob: -6.133008003234863

Token 1526: '5' (ID: 20)
  Prédit: '3'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.351697713136673
    2. '1' → logprob: -1.4766976833343506
    3. '2' → logprob: -3.3516976833343506
    4. '0' → logprob: -3.7266976833343506
    5. '4' → logprob: -5.22669792175293
    6. '```' → logprob: -7.60169792175293
    7. ' ' → logprob: -7.72669792175293
    8. 'return' → logprob: -7.85169792175293
    9. '5' → logprob: -7.85169792175293
    10. '7' → logprob: -8.10169792175293

Token 1527: ' ' (ID: 220)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -1.3765312433242798
    2. '```' → logprob: -1.5015312433242798
    3. '[
' → logprob: -1.8765312433242798
    4. '0' → logprob: -2.0015311241149902
    5. '
' → logprob: -2.0015311241149902
    6. ':' → logprob: -4.37653112411499
    7. '[]
' → logprob: -4.50153112411499
    8. ',' → logprob: -4.62653112411499
    9. '   ' → logprob: -4.87653112411499
    10. '       ' → logprob: -4.87653112411499

Token 1528: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.08949465304613113
    2. ' ' → logprob: -2.4644947052001953
    3. '```' → logprob: -8.214494705200195
    4. '3' → logprob: -9.464494705200195
    5. ',' → logprob: -9.964494705200195
    6. '1' → logprob: -10.589494705200195
    7. ')' → logprob: -10.839494705200195
    8. '   ' → logprob: -11.339494705200195
    9. 'def' → logprob: -11.339494705200195
    10. '2' → logprob: -11.339494705200195

Token 1529: '

' (ID: 279)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.41051268577575684
    2. '
' → logprob: -2.535512685775757
    3. 'return' → logprob: -2.535512685775757
    4. '```' → logprob: -2.910512685775757
    5. 'from' → logprob: -3.035512685775757
    6. 'def' → logprob: -3.910512685775757
    7. 'chunks' → logprob: -4.160512924194336
    8. '#' → logprob: -5.410512924194336
    9. '[]
' → logprob: -5.410512924194336
    10. '[
' → logprob: -5.535512924194336

Token 1530: '       ' (ID: 309)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.9002404808998108
    2. 'from' → logprob: -0.9002404808998108
    3. '       ' → logprob: -1.900240421295166
    4. '```' → logprob: -4.150240421295166
    5. '#' → logprob: -4.900240421295166
    6. 'class' → logprob: -5.900240421295166
    7. 'chunks' → logprob: -5.900240421295166
    8. 'import' → logprob: -6.275240421295166
    9. ' from' → logprob: -6.400240421295166
    10. 'return' → logprob: -6.900240421295166

Token 1531: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5162650942802429
    2. 'from' → logprob: -1.8912651538848877
    3. '#' (adapté à ' #') → logprob: -2.3912651538848877
    4. 'if' → logprob: -3.0162651538848877
    5. 'return' → logprob: -3.3912651538848877
    6. 'chunks' → logprob: -3.3912651538848877
    7. 'def' → logprob: -3.7662651538848877
    8. '```' → logprob: -5.141264915466309
    9. 'weight' → logprob: -5.641264915466309
    10. '
' → logprob: -6.266264915466309

Token 1532: ' Where' (ID: 16349)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5240074992179871
    2. 'from' → logprob: -1.2740075588226318
    3. '#' → logprob: -2.524007558822632
    4. 'def' → logprob: -3.524007558822632
    5. '```' → logprob: -4.649007320404053
    6. '
' → logprob: -5.899007320404053
    7. 'chunks' → logprob: -6.524007320404053
    8. 'weight' → logprob: -7.024007320404053
    9. 'return' → logprob: -7.149007320404053
    10. 'weights' → logprob: -7.899007320404053

Token 1533: ' sum' (ID: 4215)
  Prédit: 'total'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'total' → logprob: -0.6569871306419373
    2. 'the' → logprob: -1.281987190246582
    3. '#' → logprob: -2.156987190246582
    4. '       ' → logprob: -3.656987190246582
    5. 'self' → logprob: -3.781987190246582
    6. '
' → logprob: -4.781987190246582
    7. ' the' → logprob: -4.906987190246582
    8. 'weight' → logprob: -5.156987190246582
    9. ' total' → logprob: -5.531987190246582
    10. 'from' → logprob: -6.281987190246582

Token 1534: ' a' (ID: 261)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '```' → logprob: -1.0946967601776123
    2. ' =' → logprob: -1.4696967601776123
    3. '
' → logprob: -1.8446967601776123
    4. '\n' → logprob: -2.8446967601776123
    5. ':' → logprob: -3.2196967601776123
    6. '=' → logprob: -3.4696967601776123
    7. '[
' → logprob: -3.8446967601776123
    8. 'def' → logprob: -3.9696967601776123
    9. '   ' → logprob: -4.344696998596191
    10. '``' → logprob: -4.844696998596191

Token 1535: '_i' (ID: 10853)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.44824230670928955
    2. ' =' → logprob: -1.1982423067092896
    3. '_i' → logprob: -4.1982421875
    4. '_' → logprob: -4.4482421875
    5. ',' → logprob: -4.6982421875
    6. ' +=' → logprob: -5.9482421875
    7. '   ' → logprob: -5.9482421875
    8. '+' → logprob: -6.0732421875
    9. '       ' → logprob: -6.0732421875
    10. '+=' → logprob: -6.4482421875

Token 1536: ' *' (ID: 425)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5083500742912292
    2. ' =' → logprob: -1.258350133895874
    3. ',' → logprob: -3.883350133895874
    4. '```' → logprob: -4.008349895477295
    5. '=
' → logprob: -4.258349895477295
    6. ':' → logprob: -4.508349895477295
    7. '   ' → logprob: -4.883349895477295
    8. '+
' → logprob: -5.008349895477295
    9. '+' → logprob: -5.133349895477295
    10. ' ' → logprob: -5.633349895477295

Token 1537: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.2697577476501465
    2. ' b' → logprob: -2.1447577476501465
    3. '1' → logprob: -3.0197577476501465
    4. '0' → logprob: -3.1447577476501465
    5. ' ' → logprob: -4.1447577476501465
    6. '```' → logprob: -5.6447577476501465
    7. 'quantity' → logprob: -6.2697577476501465
    8. 'self' → logprob: -6.5197577476501465
    9. '3' → logprob: -7.0197577476501465
    10. '
' → logprob: -7.0197577476501465

Token 1538: '_i' (ID: 10853)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.208098366856575
    2. ' =' → logprob: -1.9580984115600586
    3. '```' → logprob: -4.458098411560059
    4. '0' → logprob: -4.958098411560059
    5. '=
' → logprob: -5.208098411560059
    6. '   ' → logprob: -5.708098411560059
    7. ')' → logprob: -6.458098411560059
    8. '
' → logprob: -6.583098411560059
    9. '2' → logprob: -6.708098411560059
    10. ',' → logprob: -6.708098411560059

Token 1539: ' from' (ID: 591)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.5205333232879639
    2. '       ' → logprob: -1.1455333232879639
    3. ' =' → logprob: -3.520533323287964
    4. '\n' → logprob: -3.770533323287964
    5. '```' → logprob: -4.270533561706543
    6. ',' → logprob: -5.895533561706543
    7. '           ' → logprob: -6.020533561706543
    8. '=' → logprob: -6.145533561706543
    9. '
' → logprob: -6.395533561706543
    10. '   ' → logprob: -6.395533561706543

Token 1540: ' input' (ID: 3422)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '```' → logprob: -1.0714906454086304
    2. '0' → logprob: -1.8214906454086304
    3. 'self' → logprob: -2.07149076461792
    4. '[
' → logprob: -2.32149076461792
    5. 'from' → logprob: -3.44649076461792
    6. '       ' → logprob: -3.69649076461792
    7. ' ' → logprob: -3.82149076461792
    8. '[' → logprob: -3.94649076461792
    9. ' self' → logprob: -3.94649076461792
    10. 'total' → logprob: -3.94649076461792

Token 1541: ' is' (ID: 382)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1474224478006363
    2. '
' → logprob: -2.5224225521087646
    3. '```' → logprob: -3.5224225521087646
    4. '           ' → logprob: -4.5224223136901855
    5. '\n' → logprob: -5.1474223136901855
    6. '   ' → logprob: -6.2724223136901855
    7. ',' → logprob: -6.2724223136901855
    8. '``' → logprob: -7.1474223136901855
    9. '               ' → logprob: -7.3974223136901855
    10. ')' → logprob: -7.3974223136901855

Token 1542: ':
' (ID: 734)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7642924785614014
    2. '```' → logprob: -1.3892924785614014
    3. ' ' → logprob: -2.5142924785614014
    4. '\n' → logprob: -3.1392924785614014
    5. '3' → logprob: -3.2642924785614014
    6. '           ' → logprob: -3.7642924785614014
    7. '``' → logprob: -4.3892927169799805
    8. '   ' → logprob: -4.5142927169799805
    9. '1' → logprob: -4.5142927169799805
    10. '0' → logprob: -5.1392927169799805

Token 1543: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.37389469146728516
    2. '```' → logprob: -1.3738946914672852
    3. '``' → logprob: -4.998894691467285
    4. '           ' → logprob: -5.123894691467285
    5. ' ' → logprob: -5.248894691467285
    6. '3' → logprob: -5.498894691467285
    7. '   ' → logprob: -5.748894691467285
    8. '...' → logprob: -6.123894691467285
    9. '[' → logprob: -6.123894691467285
    10. '7' → logprob: -6.248894691467285

Token 1544: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.37296268343925476
    2. '```' → logprob: -1.3729627132415771
    3. 'def' → logprob: -4.497962474822998
    4. '           ' → logprob: -5.122962474822998
    5. '``' → logprob: -5.372962474822998
    6. '[
' → logprob: -5.497962474822998
    7. 'from' → logprob: -5.497962474822998
    8. '#' (adapté à ' #') → logprob: -5.497962474822998
    9. '[' → logprob: -5.622962474822998
    10. '...' → logprob: -6.372962474822998

Token 1545: ' ' (ID: 220)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '```' → logprob: -0.9028451442718506
    2. '#' → logprob: -1.2778451442718506
    3. 'from' → logprob: -2.5278451442718506
    4. '       ' → logprob: -3.0278451442718506
    5. '7' → logprob: -3.9028451442718506
    6. '1' → logprob: -3.9028451442718506
    7. '3' → logprob: -4.15284538269043
    8. 'def' → logprob: -4.27784538269043
    9. '``' → logprob: -4.40284538269043
    10. 'a' → logprob: -4.52784538269043

Token 1546: '2' (ID: 17)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.6566869020462036
    2. '3' → logprob: -1.7816869020462036
    3. '[
' → logprob: -3.031686782836914
    4. '```' → logprob: -3.156686782836914
    5. 'for' → logprob: -3.406686782836914
    6. '#' → logprob: -3.531686782836914
    7. '       ' → logprob: -3.531686782836914
    8. 'def' → logprob: -3.656686782836914
    9. '5' → logprob: -4.406686782836914
    10. '[' → logprob: -4.406686782836914

Token 1547: '*' (ID: 9)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.22610831260681152
    2. '```' → logprob: -2.7261083126068115
    3. '
' → logprob: -3.7261083126068115
    4. '           ' → logprob: -3.8511083126068115
    5. ' ' → logprob: -3.9761083126068115
    6. '   ' → logprob: -4.101108551025391
    7. ',' → logprob: -5.101108551025391
    8. '`' → logprob: -5.226108551025391
    9. '3' → logprob: -5.226108551025391
    10. '``' → logprob: -5.476108551025391

Token 1548: '1' (ID: 16)
  Prédit: '3'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.3358685076236725
    2. '1' → logprob: -2.0858685970306396
    3. '2' → logprob: -3.0858685970306396
    4. '0' → logprob: -3.0858685970306396
    5. '4' → logprob: -3.4608685970306396
    6. ' ' → logprob: -3.9608685970306396
    7. '5' → logprob: -4.2108683586120605
    8. '7' → logprob: -6.0858683586120605
    9. '6' → logprob: -6.7108683586120605
    10. '9' → logprob: -8.460868835449219

Token 1549: ' +' (ID: 659)
  Prédit: '3'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '3' → logprob: -1.0176382064819336
    2. '0' → logprob: -1.3926382064819336
    3. '```' → logprob: -2.2676382064819336
    4. '
' → logprob: -2.6426382064819336
    5. '2' → logprob: -3.2676382064819336
    6. '1' → logprob: -3.3926382064819336
    7. ' ' → logprob: -3.6426382064819336
    8. ',' → logprob: -3.7676382064819336
    9. '\n' → logprob: -4.267638206481934
    10. '   ' → logprob: -4.267638206481934

Token 1550: ' ' (ID: 220)
  Prédit: '3'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.11462262272834778
    2. '2' → logprob: -3.2396225929260254
    3. ' ' → logprob: -3.4896225929260254
    4. '4' → logprob: -3.7396225929260254
    5. '1' → logprob: -4.364622592926025
    6. '7' → logprob: -7.489622592926025
    7. '5' → logprob: -7.489622592926025
    8. '6' → logprob: -7.739622592926025
    9. '8' → logprob: -8.239623069763184
    10. '```' → logprob: -8.864623069763184

Token 1551: '1' (ID: 16)
  Prédit: '3'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.11442498862743378
    2. '4' → logprob: -2.86442494392395
    3. '2' → logprob: -3.48942494392395
    4. '1' → logprob: -4.239425182342529
    5. '7' → logprob: -6.614425182342529
    6. ' ' → logprob: -6.614425182342529
    7. '5' → logprob: -6.739425182342529
    8. '6' → logprob: -6.864425182342529
    9. '8' → logprob: -6.864425182342529
    10. '```' → logprob: -9.364424705505371

Token 1552: '*' (ID: 9)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.8126275539398193
    2. '2' → logprob: -2.3126275539398193
    3. '1' → logprob: -2.4376275539398193
    4. ' ' → logprob: -2.4376275539398193
    5. '3' → logprob: -2.9376275539398193
    6. ' =' → logprob: -3.0626275539398193
    7. '```' → logprob: -3.0626275539398193
    8. '
' → logprob: -3.8126275539398193
    9. ' +' → logprob: -3.9376275539398193
    10. ')' → logprob: -4.187627792358398

Token 1553: '3' (ID: 18)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.9732690453529358
    2. '1' → logprob: -1.348268985748291
    3. '3' → logprob: -1.348268985748291
    4. '4' → logprob: -2.723268985748291
    5. '0' → logprob: -3.723268985748291
    6. '5' → logprob: -4.723268985748291
    7. '7' → logprob: -6.223268985748291
    8. ' ' → logprob: -7.098268985748291
    9. '6' → logprob: -7.223268985748291
    10. '9' → logprob: -8.47326946258545

Token 1554: ' +' (ID: 659)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7089254856109619
    2. ' =' → logprob: -1.208925485610962
    3. '
' → logprob: -2.833925485610962
    4. '```' → logprob: -2.958925485610962
    5. '=' → logprob: -3.333925485610962
    6. '           ' → logprob: -4.083925247192383
    7. '   ' → logprob: -5.208925247192383
    8. ',' → logprob: -5.708925247192383
    9. ' +' → logprob: -5.833925247192383
    10. ':
' → logprob: -5.958925247192383

Token 1555: ' ' (ID: 220)
  Prédit: '3'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -1.1324089765548706
    2. '2' → logprob: -1.2574089765548706
    3. '4' → logprob: -1.3824089765548706
    4. '1' → logprob: -2.75740909576416
    5. ' ' → logprob: -3.13240909576416
    6. '5' → logprob: -4.00740909576416
    7. '7' → logprob: -4.75740909576416
    8. '6' → logprob: -5.38240909576416
    9. '8' → logprob: -6.13240909576416
    10. '0' → logprob: -7.50740909576416

Token 1556: '2' (ID: 17)
  Prédit: '3'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.5456757545471191
    2. '4' → logprob: -1.9206757545471191
    3. '2' → logprob: -2.045675754547119
    4. '5' → logprob: -2.545675754547119
    5. '1' → logprob: -3.170675754547119
    6. '7' → logprob: -4.170675754547119
    7. '8' → logprob: -5.420675754547119
    8. '6' → logprob: -6.795675754547119
    9. '```' → logprob: -6.920675754547119
    10. '0' → logprob: -7.170675754547119

Token 1557: '*' (ID: 9)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.14535455405712128
    2. '3' → logprob: -2.3953545093536377
    3. '
' → logprob: -4.270354747772217
    4. '0' → logprob: -4.645354747772217
    5. ' 
' → logprob: -5.145354747772217
    6. '   ' → logprob: -6.145354747772217
    7. '```' → logprob: -6.395354747772217
    8. '2' → logprob: -6.520354747772217
    9. '  ' → logprob: -6.520354747772217
    10. ',' → logprob: -7.020354747772217

Token 1558: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.4017878472805023
    2. '5' → logprob: -2.276787757873535
    3. '1' → logprob: -2.401787757873535
    4. '0' → logprob: -2.776787757873535
    5. '4' → logprob: -3.026787757873535
    6. '3' → logprob: -3.776787757873535
    7. '7' → logprob: -5.776787757873535
    8. '6' → logprob: -7.526787757873535
    9. '8' → logprob: -8.651787757873535
    10. '```' → logprob: -9.526787757873535

Token 1559: ' =' (ID: 314)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5047500729560852
    2. '```' → logprob: -1.2547500133514404
    3. '
' → logprob: -2.3797500133514404
    4. '``' → logprob: -5.2547502517700195
    5. 'return' → logprob: -5.7547502517700195
    6. '           ' → logprob: -6.2547502517700195
    7. '   ' → logprob: -6.5047502517700195
    8. ',' → logprob: -6.7547502517700195
    9. ' =' → logprob: -7.8797502517700195
    10. '6' → logprob: -8.12975025177002

Token 1560: ' ' (ID: 220)
  Prédit: '3'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.6012608408927917
    2. ' ' → logprob: -1.6012609004974365
    3. '1' → logprob: -2.4762609004974365
    4. '2' → logprob: -3.1012609004974365
    5. '5' → logprob: -3.2262609004974365
    6. '4' → logprob: -3.3512609004974365
    7. '```' → logprob: -4.351260662078857
    8. '7' → logprob: -4.726260662078857
    9. '6' → logprob: -4.726260662078857
    10. '8' → logprob: -5.601260662078857

Token 1561: '2' (ID: 17)
  Prédit: '11'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '11' → logprob: -0.646525502204895
    2. '13' → logprob: -1.896525502204895
    3. '12' → logprob: -2.0215253829956055
    4. '(' → logprob: -2.6465253829956055
    5. '2' → logprob: -2.7715253829956055
    6. '14' → logprob: -3.6465253829956055
    7. '15' → logprob: -4.0215253829956055
    8. '10' → logprob: -5.0215253829956055
    9. '9' → logprob: -5.3965253829956055
    10. '17' → logprob: -6.0215253829956055

Token 1562: ' +' (ID: 659)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4370490610599518
    2. '3' → logprob: -2.187049150466919
    3. '```' → logprob: -2.437049150466919
    4. ' ' → logprob: -2.812049150466919
    5. '0' → logprob: -4.18704891204834
    6. '   ' → logprob: -4.43704891204834
    7. '           ' → logprob: -4.68704891204834
    8. '
' → logprob: -5.18704891204834
    9. ',' → logprob: -5.18704891204834
    10. '6' → logprob: -5.31204891204834

Token 1563: ' ' (ID: 220)
  Prédit: '3'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.7984752058982849
    2. '7' → logprob: -1.2984752655029297
    3. '5' → logprob: -1.5484752655029297
    4. '1' → logprob: -3.5484752655029297
    5. '9' → logprob: -4.67347526550293
    6. '8' → logprob: -5.04847526550293
    7. '4' → logprob: -5.17347526550293
    8. ' ' → logprob: -5.42347526550293
    9. '6' → logprob: -5.67347526550293
    10. '2' → logprob: -5.67347526550293

Token 1564: '3' (ID: 18)
  Prédit: '5'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '5' → logprob: -0.6969739198684692
    2. '3' → logprob: -1.3219739198684692
    3. '8' → logprob: -1.6969739198684692
    4. '4' → logprob: -3.6969738006591797
    5. '6' → logprob: -4.19697380065918
    6. '7' → logprob: -5.57197380065918
    7. '2' → logprob: -6.07197380065918
    8. '1' → logprob: -6.57197380065918
    9. '9' → logprob: -6.57197380065918
    10. '10' → logprob: -6.82197380065918

Token 1565: ' +' (ID: 659)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.5641968250274658
    2. '3' → logprob: -1.4391968250274658
    3. '0' → logprob: -3.064196825027466
    4. '1' → logprob: -3.564196825027466
    5. '5' → logprob: -3.689196825027466
    6. '4' → logprob: -3.814196825027466
    7. ' +' → logprob: -4.314196586608887
    8. '2' → logprob: -4.314196586608887
    9. '```' → logprob: -4.439196586608887
    10. '7' → logprob: -5.189196586608887

Token 1566: ' ' (ID: 220)
  Prédit: '4'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '4' → logprob: -0.6634461283683777
    2. '7' → logprob: -0.7884461283683777
    3. '5' → logprob: -3.7884461879730225
    4. '10' → logprob: -5.663445949554443
    5. '8' → logprob: -6.288445949554443
    6. '6' → logprob: -7.038445949554443
    7. '9' → logprob: -7.288445949554443
    8. '3' → logprob: -8.413446426391602
    9. '11' → logprob: -8.538446426391602
    10. '(' → logprob: -9.038446426391602

Token 1567: '4' (ID: 19)
  Prédit: '4'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '4' → logprob: -0.04732520133256912
    2. '5' → logprob: -3.7973251342773438
    3. '7' → logprob: -3.9223251342773438
    4. '10' → logprob: -5.797325134277344
    5. '3' → logprob: -8.297325134277344
    6. '6' → logprob: -8.547325134277344
    7. '9' → logprob: -8.672325134277344
    8. '8' → logprob: -9.047325134277344
    9. '2' → logprob: -9.547325134277344
    10. ' ' → logprob: -10.609825134277344

Token 1568: ' =' (ID: 314)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5759016275405884
    2. '```' → logprob: -1.4509016275405884
    3. '
' → logprob: -1.9509016275405884
    4. ' =' → logprob: -4.200901508331299
    5. 'from' → logprob: -5.200901508331299
    6. 'def' → logprob: -5.200901508331299
    7. '=' → logprob: -5.450901508331299
    8. ',' → logprob: -5.575901508331299
    9. '``' → logprob: -5.825901508331299
    10. '   ' → logprob: -6.075901508331299

Token 1569: ' ' (ID: 220)
  Prédit: '9'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: -0.0006606113165616989
    2. ' ' → logprob: -7.625660419464111
    3. '14' → logprob: -9.62566089630127
    4. '7' → logprob: -10.87566089630127
    5. '10' → logprob: -10.87566089630127
    6. '11' → logprob: -11.50066089630127
    7. '4' → logprob: -11.87566089630127
    8. '5' → logprob: -11.87566089630127
    9. '3' → logprob: -12.00066089630127
    10. '13' → logprob: -12.12566089630127

Token 1570: '9' (ID: 24)
  Prédit: '9'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: -0.00011677479778882116
    2. '14' → logprob: -10.250116348266602
    3. '10' → logprob: -11.125116348266602
    4. '(' → logprob: -11.125116348266602
    5. ' ' → logprob: -11.375116348266602
    6. '12' → logprob: -12.000116348266602
    7. '7' → logprob: -12.000116348266602
    8. '13' → logprob: -12.750116348266602
    9. '11' → logprob: -12.875116348266602
    10. '3' → logprob: -12.875116348266602

Token 1571: '

' (ID: 279)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3691386282444
    2. 'def' → logprob: -1.8691385984420776
    3. 'from' → logprob: -2.994138717651367
    4. 'return' → logprob: -3.119138717651367
    5. '
' → logprob: -3.619138717651367
    6. '```' → logprob: -3.744138717651367
    7. '#' → logprob: -6.119138717651367
    8. '   ' → logprob: -6.744138717651367
    9. 'class' → logprob: -7.494138717651367
    10. ',' → logprob: -7.744138717651367

Token 1572: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6739094257354736
    2. 'from' → logprob: -1.1739094257354736
    3. '```' → logprob: -2.6739094257354736
    4. 'def' → logprob: -2.9239094257354736
    5. 'return' → logprob: -3.9239094257354736
    6. '#' → logprob: -4.2989091873168945
    7. 'chunks' → logprob: -5.5489091873168945
    8. 'weight' → logprob: -6.1739091873168945
    9. 'class' → logprob: -6.1739091873168945
    10. '9' → logprob: -6.4239091873168945

Token 1573: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.02793513797223568
    2. '```' → logprob: -4.027935028076172
    3. '
' → logprob: -6.152935028076172
    4. 'return' → logprob: -7.152935028076172
    5. '``' → logprob: -7.152935028076172
    6. '2' → logprob: -7.527935028076172
    7. '9' → logprob: -7.527935028076172
    8. '5' → logprob: -7.652935028076172
    9. '3' → logprob: -7.652935028076172
    10. '   ' → logprob: -7.777935028076172

Token 1574: ' Output' (ID: 18315)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.47347134351730347
    2. '#' → logprob: -2.0984714031219482
    3. 'return' → logprob: -2.0984714031219482
    4. 'from' → logprob: -2.7234714031219482
    5. 'if' → logprob: -3.7234714031219482
    6. '9' → logprob: -4.473471164703369
    7. 'def' → logprob: -4.723471164703369
    8. '```' → logprob: -5.848471164703369
    9. '
' → logprob: -6.098471164703369
    10. '8' → logprob: -6.098471164703369

Token 1575: ' weights' (ID: 28460)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.2736772894859314
    2. '3' → logprob: -3.148677349090576
    3. '       ' → logprob: -3.148677349090576
    4. '9' → logprob: -3.148677349090576
    5. '#' → logprob: -3.648677349090576
    6. 'def' → logprob: -4.023677349090576
    7. '[
' → logprob: -4.148677349090576
    8. 'from' → logprob: -4.523677349090576
    9. '```' → logprob: -4.523677349090576
    10. 'for' → logprob: -5.398677349090576

Token 1576: ' sum' (ID: 4215)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.10746537894010544
    2. '=' → logprob: -2.4824652671813965
    3. '```' → logprob: -4.6074652671813965
    4. '3' → logprob: -6.3574652671813965
    5. 's' → logprob: -6.9824652671813965
    6. '2' → logprob: -7.2324652671813965
    7. ':' → logprob: -7.4824652671813965
    8. '6' → logprob: -7.6074652671813965
    9. '1' → logprob: -7.6074652671813965
    10. '   ' → logprob: -7.7324652671813965

Token 1577: ':' (ID: 25)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7362185120582581
    2. '3' → logprob: -1.4862184524536133
    3. ' =' → logprob: -2.6112184524536133
    4. '2' → logprob: -3.1112184524536133
    5. '=' → logprob: -3.1112184524536133
    6. 'return' → logprob: -3.4862184524536133
    7. '[' → logprob: -3.8612184524536133
    8. '[
' → logprob: -3.9862184524536133
    9. '```' → logprob: -4.361218452453613
    10. 'from' → logprob: -4.986218452453613

Token 1578: ' ' (ID: 220)
  Prédit: '3'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.0024718514177948236
    2. '```' → logprob: -7.377471923828125
    3. '       ' → logprob: -7.627471923828125
    4. '5' → logprob: -7.627471923828125
    5. '6' → logprob: -8.127471923828125
    6. '2' → logprob: -8.627471923828125
    7. '   ' → logprob: -9.627471923828125
    8. ' ' → logprob: -9.627471923828125
    9. '[
' → logprob: -9.752471923828125
    10. 'return' → logprob: -10.002471923828125

Token 1579: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.0006849141791462898
    2. '8' → logprob: -7.37568473815918
    3. ' ' → logprob: -9.87568473815918
    4. '```' → logprob: -13.37568473815918
    5. '2' → logprob: -13.75068473815918
    6. '[
' → logprob: -13.87568473815918
    7. '1' → logprob: -14.12568473815918
    8. '(' → logprob: -14.50068473815918
    9. '   ' → logprob: -14.50068473815918
    10. '``' → logprob: -14.75068473815918

Token 1580: ' +' (ID: 659)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.7640913128852844
    2. '```' → logprob: -1.7640912532806396
    3. '2' → logprob: -2.5140912532806396
    4. ',' → logprob: -2.7640912532806396
    5. '3' → logprob: -2.8890912532806396
    6. '0' → logprob: -3.8890912532806396
    7. '1' → logprob: -3.8890912532806396
    8. '<|end|>' → logprob: -4.014091491699219
    9. ' ,' → logprob: -4.139091491699219
    10. '6' → logprob: -4.264091491699219

Token 1581: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.8420351147651672
    2. ' ' → logprob: -0.9670351147651672
    3. '6' → logprob: -1.7170350551605225
    4. '5' → logprob: -4.717035293579102
    5. '3' → logprob: -8.842035293579102
    6. '4' → logprob: -9.717035293579102
    7. '```' → logprob: -9.717035293579102
    8. '7' → logprob: -9.842035293579102
    9. '1' → logprob: -10.092035293579102
    10. ' ' → logprob: -10.342035293579102

Token 1582: '5' (ID: 20)
  Prédit: '5'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '5' → logprob: -0.06217718496918678
    2. ' ' → logprob: -2.8121771812438965
    3. '6' → logprob: -8.562177658081055
    4. '0' → logprob: -11.562177658081055
    5. '7' → logprob: -12.437177658081055
    6. '```' → logprob: -13.687177658081055
    7. ' ' → logprob: -13.687177658081055
    8. '2' → logprob: -14.062177658081055
    9. '
' → logprob: -15.062177658081055
    10. '8' → logprob: -15.312177658081055

Token 1583: ' =' (ID: 314)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -1.0778388977050781
    2. '<|end|>' → logprob: -1.0778388977050781
    3. '```' → logprob: -1.4528388977050781
    4. '\n' → logprob: -3.077838897705078
    5. '0' → logprob: -4.702838897705078
    6. ',' → logprob: -4.827838897705078
    7. '   ' → logprob: -5.327838897705078
    8. '       ' → logprob: -5.577838897705078
    9. ' ' → logprob: -6.077838897705078
    10. '<|end|>' → logprob: -6.202838897705078

Token 1584: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.3822088837623596
    2. '8' → logprob: -1.2572088241577148
    3. '0' → logprob: -3.507208824157715
    4. '4' → logprob: -5.882208824157715
    5. '```' → logprob: -9.007208824157715
    6. '3' → logprob: -9.132208824157715
    7. '9' → logprob: -9.757208824157715
    8. '5' → logprob: -10.507208824157715
    9. '1' → logprob: -10.757208824157715
    10. '``' → logprob: -10.882208824157715

Token 1585: '8' (ID: 23)
  Prédit: '8'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '8' → logprob: -0.023872610181570053
    2. ' ' → logprob: -3.7738726139068604
    3. '0' → logprob: -7.398872375488281
    4. '9' → logprob: -11.898872375488281
    5. '3' → logprob: -12.898872375488281
    6. '10' → logprob: -13.523872375488281
    7. '```' → logprob: -13.523872375488281
    8. '2' → logprob: -14.898872375488281
    9. '`' → logprob: -15.211372375488281
    10. '``' → logprob: -15.273872375488281

Token 1586: ' ?

' (ID: 13570)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '```' → logprob: -0.604153573513031
    2. '       ' → logprob: -0.979153573513031
    3. '
' → logprob: -3.354153633117676
    4. '#' → logprob: -4.979153633117676
    5. '   ' → logprob: -5.104153633117676
    6. '<|end|>' → logprob: -5.229153633117676
    7. '``' → logprob: -5.479153633117676
    8. ',' → logprob: -5.729153633117676
    9. '[
' → logprob: -6.479153633117676
    10. ')' → logprob: -6.479153633117676

Token 1587: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3867408335208893
    2. '3' → logprob: -2.2617409229278564
    3. '```' → logprob: -2.2617409229278564
    4. '   ' → logprob: -2.8867409229278564
    5. '#' → logprob: -4.011740684509277
    6. '6' → logprob: -4.761740684509277
    7. '           ' → logprob: -5.136740684509277
    8. '
' → logprob: -5.636740684509277
    9. ' ' → logprob: -5.886740684509277
    10. '7' → logprob: -5.886740684509277

Token 1588: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.11736272275447845
    2. '#' (adapté à ' #') → logprob: -3.2423627376556396
    3. '3' → logprob: -3.6173627376556396
    4. '```' → logprob: -4.1173624992370605
    5. '9' → logprob: -5.1173624992370605
    6. 'class' → logprob: -5.2423624992370605
    7. '6' → logprob: -5.6173624992370605
    8. '7' → logprob: -5.7423624992370605
    9. '8' → logprob: -6.3673624992370605
    10. '           ' → logprob: -6.7423624992370605

Token 1589: ' Output' (ID: 18315)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.14612187445163727
    2. '
' → logprob: -2.8961219787597656
    3. '#' → logprob: -3.5211219787597656
    4. 'from' → logprob: -4.771121978759766
    5. '           ' → logprob: -4.896121978759766
    6. '```' → logprob: -4.896121978759766
    7. 'return' → logprob: -5.396121978759766
    8. '   ' → logprob: -5.396121978759766
    9. '[
' → logprob: -6.021121978759766
    10. '\n' → logprob: -6.021121978759766

Token 1590: ' quantities' (ID: 49540)
  Prédit: '3'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '3' → logprob: -0.1912335306406021
    2. '0' → logprob: -2.3162336349487305
    3. ' ' → logprob: -3.0662336349487305
    4. '6' → logprob: -4.9412336349487305
    5. '```' → logprob: -5.1912336349487305
    6. '1' → logprob: -5.4412336349487305
    7. '2' → logprob: -5.8162336349487305
    8. '4' → logprob: -6.5662336349487305
    9. '9' → logprob: -6.8162336349487305
    10. 'b' → logprob: -6.8162336349487305

Token 1591: ' are' (ID: 553)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -1.0486948490142822
    2. ' =' → logprob: -1.2986948490142822
    3. ' ' → logprob: -1.7986948490142822
    4. '=' → logprob: -2.4236948490142822
    5. ',' → logprob: -2.9236948490142822
    6. '```' → logprob: -3.4236948490142822
    7. '3' → logprob: -4.048694610595703
    8. '[' → logprob: -5.673694610595703
    9. '(' → logprob: -6.173694610595703
    10. '   ' → logprob: -6.298694610595703

Token 1592: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.03870079293847084
    2. ' ' → logprob: -3.288700819015503
    3. '``' → logprob: -7.788700580596924
    4. '```' → logprob: -8.413701057434082
    5. '
' → logprob: -11.663701057434082
    6. '[
' → logprob: -12.288701057434082
    7. '[' → logprob: -12.913701057434082
    8. '`' → logprob: -13.413701057434082
    9. '   ' → logprob: -14.038701057434082
    10. '  
' → logprob: -14.163701057434082

Token 1593: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0010772300884127617
    2. ' ' → logprob: -6.876077175140381
    3. '``' → logprob: -11.126077651977539
    4. '```' → logprob: -11.251077651977539
    5. '[' → logprob: -11.876077651977539
    6. '[
' → logprob: -12.751077651977539
    7. '1' → logprob: -13.001077651977539
    8. '2' → logprob: -13.876077651977539
    9. '3' → logprob: -13.876077651977539
    10. '`' → logprob: -14.626077651977539

Token 1594: ' meaning' (ID: 10915)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.034197211265563965
    2. '```' → logprob: -4.4091973304748535
    3. '\n' → logprob: -5.7841973304748535
    4. '           ' → logprob: -5.9091973304748535
    5. '   ' → logprob: -6.0341973304748535
    6. '#' → logprob: -6.4091973304748535
    7. '
' → logprob: -6.4091973304748535
    8. '3' → logprob: -6.5341973304748535
    9. ',' → logprob: -6.9091973304748535
    10. '\' → logprob: -7.0341973304748535

Token 1595: ' quantity' (ID: 17245)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.6459381580352783
    2. ' ' → logprob: -2.0209381580352783
    3. '3' → logprob: -2.1459381580352783
    4. '```' → logprob: -2.8959381580352783
    5. '[
' → logprob: -3.7709381580352783
    6. '1' → logprob: -3.8959381580352783
    7. '`' → logprob: -4.020937919616699
    8. 'Quantity' → logprob: -4.270937919616699
    9. 'quantity' → logprob: -4.395937919616699
    10. '2' → logprob: -4.895937919616699

Token 1596: '=' (ID: 28)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '```' → logprob: -1.2070573568344116
    2. '=' → logprob: -1.8320573568344116
    3. '0' → logprob: -1.9570573568344116
    4. ' =' → logprob: -2.207057476043701
    5. ',' → logprob: -2.332057476043701
    6. '
' → logprob: -3.082057476043701
    7. ' ' → logprob: -3.957057476043701
    8. ')' → logprob: -4.082057476043701
    9. ',
' → logprob: -4.332057476043701
    10. ')
' → logprob: -4.582057476043701

Token 1597: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00046332005877047777
    2. ' ' → logprob: -7.750463485717773
    3. '0' → logprob: -11.000463485717773
    4. '```' → logprob: -11.750463485717773
    5. '`' → logprob: -12.500463485717773
    6. '``' → logprob: -13.875463485717773
    7. '
' → logprob: -14.125463485717773
    8. '   ' → logprob: -14.375463485717773
    9. '(' → logprob: -15.375463485717773
    10. '=' → logprob: -15.500463485717773

Token 1598: ' each' (ID: 2454)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.39149442315101624
    2. '
' → logprob: -1.8914943933486938
    3. '```' → logprob: -2.2664945125579834
    4. '\n' → logprob: -4.141494274139404
    5. '   ' → logprob: -4.266494274139404
    6. ',' → logprob: -4.516494274139404
    7. '           ' → logprob: -5.141494274139404
    8. ',
' → logprob: -5.266494274139404
    9. '``' → logprob: -6.516494274139404
    10. '3' → logprob: -6.641494274139404

Token 1599: '.

' (ID: 364)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3472808301448822
    2. '
' → logprob: -1.4722808599472046
    3. '```' → logprob: -3.347280740737915
    4. ',' → logprob: -4.722280979156494
    5. '   ' → logprob: -5.472280979156494
    6. '\n' → logprob: -5.597280979156494
    7. ',
' → logprob: -5.722280979156494
    8. '           ' → logprob: -6.597280979156494
    9. '``' → logprob: -7.472280979156494
    10. '[
' → logprob: -7.472280979156494

Token 1600: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.034971751272678375
    2. '```' → logprob: -4.034971714019775
    3. '
' → logprob: -5.284971714019775
    4. '   ' → logprob: -5.534971714019775
    5. '           ' → logprob: -6.034971714019775
    6. '#' → logprob: -6.659971714019775
    7. '\n' → logprob: -7.409971714019775
    8. ',' → logprob: -7.659971714019775
    9. '`' → logprob: -8.034972190856934
    10. '``' → logprob: -8.159972190856934

Token 1601: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.06506074219942093
    2. 'def' → logprob: -3.81506085395813
    3. 'from' → logprob: -4.440060615539551
    4. '```' → logprob: -4.440060615539551
    5. '#' (adapté à ' #') → logprob: -4.940060615539551
    6. '
' → logprob: -6.065060615539551
    7. 'return' → logprob: -6.190060615539551
    8. '   ' → logprob: -6.940060615539551
    9. '9' → logprob: -7.315060615539551
    10. '8' → logprob: -7.690060615539551

Token 1602: ' Contr' (ID: 43702)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.32900771498680115
    2. '#' → logprob: -1.4540077447891235
    3. '```' → logprob: -3.329007625579834
    4. '
' → logprob: -5.329007625579834
    5. 'def' → logprob: -6.329007625579834
    6. '           ' → logprob: -7.079007625579834
    7. 'return' → logprob: -7.204007625579834
    8. 'from' → logprob: -7.204007625579834
    9. '``' → logprob: -7.954007625579834
    10. 'class' → logprob: -7.954007625579834

Token 1603: 'ad' (ID: 324)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '```' → logprob: -0.2882976830005646
    2. 'inue' → logprob: -2.663297653198242
    3. '3' → logprob: -3.288297653198242
    4. '`' → logprob: -3.663297653198242
    5. '``' → logprob: -4.163297653198242
    6. '2' → logprob: -4.163297653198242
    7. '1' → logprob: -4.538297653198242
    8. '
' → logprob: -4.913297653198242
    9. 'class' → logprob: -5.038297653198242
    10. '0' → logprob: -5.038297653198242

Token 1604: 'iction' (ID: 4090)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.1094146966934204
    2. 'from' → logprob: -1.4844146966934204
    3. '#' → logprob: -1.6094146966934204
    4. '
' → logprob: -2.859414577484131
    5. '```' → logprob: -2.984414577484131
    6. 'class' → logprob: -3.109414577484131
    7. '   ' → logprob: -4.484414577484131
    8. 'def' → logprob: -4.609414577484131
    9. '<|end|>' → logprob: -4.859414577484131
    10. '[
' → logprob: -4.984414577484131

Token 1605: '?' (ID: 30)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.31235840916633606
    2. '```' → logprob: -2.1873583793640137
    3. '   ' → logprob: -2.5623583793640137
    4. '#' → logprob: -3.1873583793640137
    5. '
' → logprob: -4.187358379364014
    6. 'def' → logprob: -4.562358379364014
    7. 'class' → logprob: -6.562358379364014
    8. '...' → logprob: -7.062358379364014
    9. '           ' → logprob: -7.187358379364014
    10. 'from' → logprob: -7.187358379364014

Token 1606: ' Wait' (ID: 24305)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.41909465193748474
    2. '```' → logprob: -1.5440946817398071
    3. '   ' → logprob: -2.4190945625305176
    4. '#' → logprob: -3.9190945625305176
    5. '
' → logprob: -4.919094562530518
    6. '           ' → logprob: -6.419094562530518
    7. '"""
' → logprob: -6.419094562530518
    8. '``' → logprob: -6.919094562530518
    9. 'def' → logprob: -6.919094562530518
    10. '\n' → logprob: -7.044094562530518

Token 1607: ',' (ID: 11)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4970744550228119
    2. '#' → logprob: -1.9970744848251343
    3. '```' → logprob: -2.1220743656158447
    4. '
' → logprob: -2.7470743656158447
    5. '   ' → logprob: -3.7470743656158447
    6. 'class' → logprob: -4.247074604034424
    7. 'from' → logprob: -4.372074604034424
    8. 'def' → logprob: -5.622074604034424
    9. '"""
' → logprob: -5.747074604034424
    10. '           ' → logprob: -6.122074604034424

Token 1608: ' sample' (ID: 10176)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.5324602127075195
    2. '```' → logprob: -1.4074602127075195
    3. 'from' → logprob: -2.9074602127075195
    4. '       ' → logprob: -3.1574602127075195
    5. 'class' → logprob: -3.7824602127075195
    6. 'def' → logprob: -4.4074602127075195
    7. ' #' → logprob: -4.7824602127075195
    8. '
' → logprob: -5.2824602127075195
    9. 'The' → logprob: -6.0324602127075195
    10. ' from' → logprob: -6.1574602127075195

Token 1609: ' output' (ID: 4733)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '```' → logprob: -0.28849780559539795
    2. ':' → logprob: -2.6634979248046875
    3. ')' → logprob: -3.4134979248046875
    4. '   ' → logprob: -3.7884979248046875
    5. ',' → logprob: -4.0384979248046875
    6. '
' → logprob: -4.4134979248046875
    7. '<|end|>' → logprob: -4.4134979248046875
    8. ':
' → logprob: -4.5384979248046875
    9. '...' → logprob: -4.7884979248046875
    10. '#' → logprob: -4.7884979248046875

Token 1610: ' ' (ID: 220)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '```' → logprob: -0.4804452955722809
    2. ':' → logprob: -1.4804452657699585
    3. ' =' → logprob: -3.730445384979248
    4. ':
' → logprob: -3.730445384979248
    5. '``' → logprob: -3.980445384979248
    6. '[' → logprob: -4.605445384979248
    7. ' is' → logprob: -4.855445384979248
    8. '\n' → logprob: -4.980445384979248
    9. '
' → logprob: -4.980445384979248
    10. '=' → logprob: -5.105445384979248

Token 1611: '1' (ID: 16)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.8696590065956116
    2. ':' → logprob: -1.3696589469909668
    3. '```' → logprob: -2.369658946990967
    4. ' =' → logprob: -3.369658946990967
    5. '[' → logprob: -3.744658946990967
    6. '   ' → logprob: -3.994658946990967
    7. ':
' → logprob: -4.119658946990967
    8. '<|end|>' → logprob: -4.244658946990967
    9. '.' → logprob: -4.369658946990967
    10. ')' → logprob: -4.369658946990967

Token 1612: ' is' (ID: 382)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '```' → logprob: -1.0086289644241333
    2. '
' → logprob: -1.3836289644241333
    3. ':' → logprob: -1.5086289644241333
    4. '[' → logprob: -3.1336288452148438
    5. '<|end|>' → logprob: -3.6336288452148438
    6. '[
' → logprob: -4.133628845214844
    7. '\n' → logprob: -4.508628845214844
    8. ':
' → logprob: -4.508628845214844
    9. ',' → logprob: -4.883628845214844
    10. '   ' → logprob: -5.008628845214844

Token 1613: ':
' (ID: 734)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '```' → logprob: -0.8391859531402588
    2. '3' → logprob: -0.9641859531402588
    3. ' ' → logprob: -1.9641859531402588
    4. '``' → logprob: -3.589185953140259
    5. '`' → logprob: -4.71418571472168
    6. '[' → logprob: -5.83918571472168
    7. '[
' → logprob: -6.46418571472168
    8. ' ```' → logprob: -7.08918571472168
    9. '6' → logprob: -7.58918571472168
    10. '0' → logprob: -7.71418571472168

Token 1614: '       ' (ID: 309)
  Prédit: '3'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.05900830030441284
    2. '```' → logprob: -3.1840083599090576
    3. ' ' → logprob: -4.5590081214904785
    4. '2' → logprob: -6.1840081214904785
    5. '   ' → logprob: -7.1840081214904785
    6. '``' → logprob: -7.5590081214904785
    7. '0' → logprob: -7.8090081214904785
    8. '       ' → logprob: -7.8090081214904785
    9. '1' → logprob: -8.184008598327637
    10. '6' → logprob: -8.559008598327637

Token 1615: ' #' (ID: 1069)
  Prédit: '3'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '3' → logprob: -0.1317083090543747
    2. ' ' → logprob: -2.8817083835601807
    3. '```' → logprob: -3.6317083835601807
    4. '2' → logprob: -3.7567083835601807
    5. '4' → logprob: -5.381708145141602
    6. '1' → logprob: -5.756708145141602
    7. '``' → logprob: -6.006708145141602
    8. '0' → logprob: -6.131708145141602
    9. '6' → logprob: -6.631708145141602
    10. '`' → logprob: -7.506708145141602

Token 1616: ' ' (ID: 220)
  Prédit: '3'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.18595869839191437
    2. ' ' → logprob: -1.935958743095398
    3. '```' → logprob: -4.4359588623046875
    4. '0' → logprob: -6.0609588623046875
    5. '``' → logprob: -6.1859588623046875
    6. '   ' → logprob: -6.3109588623046875
    7. '1' → logprob: -6.4359588623046875
    8. '2' → logprob: -6.4359588623046875
    9. '\n' → logprob: -6.9359588623046875
    10. '       ' → logprob: -7.3109588623046875

Token 1617: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.01909351535141468
    2. '2' → logprob: -4.6440935134887695
    3. '```' → logprob: -4.7690935134887695
    4. '``' → logprob: -8.01909351348877
    5. ' ' → logprob: -8.39409351348877
    6. '1' → logprob: -9.39409351348877
    7. '0' → logprob: -10.01909351348877
    8. '4' → logprob: -10.14409351348877
    9. '   ' → logprob: -10.89409351348877
    10. '`' → logprob: -11.14409351348877

Token 1618: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.8313829898834229
    2. ',' → logprob: -1.5813829898834229
    3. '0' → logprob: -1.9563829898834229
    4. '<|end|>' → logprob: -2.206382989883423
    5. ' ,' → logprob: -2.581382989883423
    6. '```' → logprob: -4.206382751464844
    7. '
' → logprob: -5.706382751464844
    8. '  ' → logprob: -5.706382751464844
    9. ')' → logprob: -6.581382751464844
    10. '   ' → logprob: -6.706382751464844

Token 1619: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.08896258473396301
    2. ' ' → logprob: -2.4639625549316406
    3. '```' → logprob: -11.08896255493164
    4. '1' → logprob: -12.83896255493164
    5. ' 
' → logprob: -14.02646255493164
    6. ',' → logprob: -14.08896255493164
    7. '
' → logprob: -14.77646255493164
    8. '2' → logprob: -15.08896255493164
    9. '``' → logprob: -15.15146255493164
    10. '`' → logprob: -15.21396255493164

Token 1620: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.3622717559337616
    2. '<|end|>' → logprob: -1.987271785736084
    3. '```' → logprob: -2.612271785736084
    4. '\n' → logprob: -2.737271785736084
    5. '3' → logprob: -4.612271785736084
    6. ' ' → logprob: -5.612271785736084
    7. '6' → logprob: -5.987271785736084
    8. ',' → logprob: -5.987271785736084
    9. '7' → logprob: -6.612271785736084
    10. '<|end|>' → logprob: -6.737271785736084

Token 1621: '       ' (ID: 309)
  Prédit: '3'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '3' → logprob: -0.3291335701942444
    2. ' ' → logprob: -1.4541335105895996
    3. '4' → logprob: -3.8291335105895996
    4. '```' → logprob: -4.7041335105896
    5. '2' → logprob: -5.5791335105896
    6. '1' → logprob: -5.7041335105896
    7. '5' → logprob: -5.9541335105896
    8. '6' → logprob: -6.2041335105896
    9. '\n' → logprob: -6.8291335105896
    10. '7' → logprob: -6.9541335105896

Token 1622: ' #' (ID: 1069)
  Prédit: '3'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '3' → logprob: -0.43261995911598206
    2. ' ' → logprob: -1.1826199293136597
    3. '5' → logprob: -4.182620048522949
    4. '1' → logprob: -5.057620048522949
    5. '4' → logprob: -5.307620048522949
    6. '```' → logprob: -5.307620048522949
    7. '\n' → logprob: -5.557620048522949
    8. '2' → logprob: -5.807620048522949
    9. '0' → logprob: -5.807620048522949
    10. '6' → logprob: -6.307620048522949

Token 1623: ' ' (ID: 220)
  Prédit: '5'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '5' → logprob: -0.2039240449666977
    2. ' ' → logprob: -2.2039239406585693
    3. '3' → logprob: -2.7039239406585693
    4. '2' → logprob: -5.328924179077148
    5. '4' → logprob: -6.828924179077148
    6. '6' → logprob: -7.578924179077148
    7. '1' → logprob: -7.703924179077148
    8. '7' → logprob: -9.328924179077148
    9. '```' → logprob: -9.703924179077148
    10. '0' → logprob: -10.203924179077148

Token 1624: '5' (ID: 20)
  Prédit: '5'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '5' → logprob: -0.6032336950302124
    2. '3' → logprob: -1.1032336950302124
    3. '2' → logprob: -2.228233814239502
    4. '4' → logprob: -5.228233814239502
    5. ' ' → logprob: -5.603233814239502
    6. '6' → logprob: -6.228233814239502
    7. '1' → logprob: -6.353233814239502
    8. '7' → logprob: -8.478233337402344
    9. '0' → logprob: -8.603233337402344
    10. '```' → logprob: -8.728233337402344

Token 1625: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.049326684325933456
    2. '0' → logprob: -3.0493266582489014
    3. '```' → logprob: -7.2993268966674805
    4. ',' → logprob: -10.79932689666748
    5. ')' → logprob: -11.42432689666748
    6. '   ' → logprob: -11.92432689666748
    7. '<|end|>' → logprob: -12.29932689666748
    8. '
' → logprob: -13.04932689666748
    9. 'def' → logprob: -13.04932689666748
    10. '``' → logprob: -13.04932689666748

Token 1626: '0' (ID: 15)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.31338241696357727
    2. '0' → logprob: -1.3133823871612549
    3. '```' → logprob: -9.313382148742676
    4. ',' → logprob: -11.438382148742676
    5. ')' → logprob: -11.938382148742676
    6. ' ,' → logprob: -13.063382148742676
    7. '[' → logprob: -13.688382148742676
    8. '   ' → logprob: -13.813382148742676
    9. ' (' → logprob: -13.938382148742676
    10. '`' → logprob: -14.313382148742676

Token 1627: '

' (ID: 279)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '```' → logprob: -0.9119981527328491
    2. '       ' → logprob: -1.2869981527328491
    3. '
' → logprob: -1.4119981527328491
    4. '   ' → logprob: -3.0369982719421387
    5. 'def' → logprob: -4.286998271942139
    6. '\n' → logprob: -5.286998271942139
    7. '``' → logprob: -5.411998271942139
    8. '           ' → logprob: -7.161998271942139
    9. ':' → logprob: -7.161998271942139
    10. '[
' → logprob: -7.161998271942139

Token 1628: '       ' (ID: 309)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '```' → logprob: -0.7777835726737976
    2. '\n' → logprob: -0.9027835726737976
    3. '
' → logprob: -2.7777836322784424
    4. '<|end|>' → logprob: -3.2777836322784424
    5. '``' → logprob: -5.277783393859863
    6. '#' → logprob: -5.402783393859863
    7. '\' → logprob: -5.402783393859863
    8. '       ' → logprob: -5.652783393859863
    9. '   ' → logprob: -5.652783393859863
    10. '<|end|>' → logprob: -5.777783393859863

Token 1629: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2803388237953186
    2. '```' → logprob: -1.6553387641906738
    3. '   ' → logprob: -3.530338764190674
    4. '#' (adapté à ' #') → logprob: -5.655338764190674
    5. ')' → logprob: -5.780338764190674
    6. 'return' → logprob: -6.155338764190674
    7. '<|end|>' → logprob: -6.155338764190674
    8. 'def' → logprob: -6.155338764190674
    9. '
' → logprob: -6.280338764190674
    10. '<|end|>' → logprob: -6.905338764190674

Token 1630: ' Sum' (ID: 34138)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.15389777719974518
    2. '```' → logprob: -2.903897762298584
    3. '#' → logprob: -3.153897762298584
    4. '
' → logprob: -3.778897762298584
    5. 'return' → logprob: -5.278897762298584
    6. 'class' → logprob: -5.528897762298584
    7. '\n' → logprob: -5.653897762298584
    8. '   ' → logprob: -6.403897762298584
    9. '[
' → logprob: -6.528897762298584
    10. '``' → logprob: -6.903897762298584

Token 1631: ' of' (ID: 328)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.15459509193897247
    2. ' =' → logprob: -2.779595136642456
    3. '3' → logprob: -3.029595136642456
    4. ' a' → logprob: -3.904595136642456
    5. ' of' → logprob: -6.029594898223877
    6. '=' → logprob: -6.029594898223877
    7. ' is' → logprob: -6.029594898223877
    8. 'a' → logprob: -6.529594898223877
    9. '```' → logprob: -7.154594898223877
    10. '9' → logprob: -7.529594898223877

Token 1632: ' weights' (ID: 28460)
  Prédit: '3'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '3' → logprob: -0.02789028361439705
    2. 'a' → logprob: -3.652890205383301
    3. 'chunks' → logprob: -7.527890205383301
    4. '```' → logprob: -8.0278902053833
    5. 'chunk' → logprob: -8.2778902053833
    6. 'weight' → logprob: -8.4028902053833
    7. 'weights' → logprob: -9.0278902053833
    8. 'b' → logprob: -10.0278902053833
    9. '`' → logprob: -10.9028902053833
    10. ' ' → logprob: -11.2778902053833

Token 1633: ' =' (ID: 314)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1634: ' ' (ID: 220)
  Prédit: '8'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '8' → logprob: -0.19664695858955383
    2. '3' → logprob: -2.0716469287872314
    3. ' ' → logprob: -2.9466469287872314
    4. '   ' → logprob: -11.821646690368652
    5. '(' → logprob: -12.821646690368652
    6. '`' → logprob: -12.946646690368652
    7. '9' → logprob: -13.071646690368652
    8. '7' → logprob: -13.321646690368652
    9. '``' → logprob: -13.321646690368652
    10. '  ' → logprob: -13.321646690368652

Token 1635: '3' (ID: 18)
  Prédit: '8'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '8' → logprob: -0.160569965839386
    2. '3' → logprob: -1.9105699062347412
    3. ' ' → logprob: -8.03557014465332
    4. '(' → logprob: -11.66057014465332
    5. '```' → logprob: -12.16057014465332
    6. '``' → logprob: -12.66057014465332
    7. '   ' → logprob: -13.53557014465332
    8. '{' → logprob: -13.91057014465332
    9. '`' → logprob: -14.28557014465332
    10. '[' → logprob: -14.78557014465332

Token 1636: ' +' (ID: 659)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.9731042385101318
    2. '<|end|>' → logprob: -0.9731042385101318
    3. '\n' → logprob: -2.348104238510132
    4. '```' → logprob: -2.848104238510132
    5. ',' → logprob: -3.348104238510132
    6. '0' → logprob: -4.223104476928711
    7. ' ' → logprob: -4.973104476928711
    8. ',
' → logprob: -5.223104476928711
    9. ')' → logprob: -5.223104476928711
    10. '   ' → logprob: -5.223104476928711

Token 1637: ' ' (ID: 220)
  Prédit: '5'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '5' → logprob: -0.8203521966934204
    2. ' ' → logprob: -1.0703521966934204
    3. '4' → logprob: -1.5703521966934204
    4. '0' → logprob: -5.320352077484131
    5. '3' → logprob: -5.945352077484131
    6. '6' → logprob: -7.570352077484131
    7. '1' → logprob: -7.695352077484131
    8. '```' → logprob: -8.820352554321289
    9. '2' → logprob: -9.820352554321289
    10. '`' → logprob: -10.070352554321289

Token 1638: '5' (ID: 20)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.5383636951446533
    2. '5' → logprob: -1.2883636951446533
    3. '4' → logprob: -2.0383636951446533
    4. '0' → logprob: -5.038363456726074
    5. '6' → logprob: -5.663363456726074
    6. '```' → logprob: -8.788363456726074
    7. '1' → logprob: -9.538363456726074
    8. '3' → logprob: -10.038363456726074
    9. '``' → logprob: -10.288363456726074
    10. '`' → logprob: -10.663363456726074

Token 1639: ' =' (ID: 314)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1640: ' ' (ID: 220)
  Prédit: '8'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '8' → logprob: -0.02324839122593403
    2. ' ' → logprob: -3.7732484340667725
    3. '0' → logprob: -13.523248672485352
    4. '```' → logprob: -14.273248672485352
    5. '9' → logprob: -15.148248672485352
    6. ' 
' → logprob: -15.273248672485352
    7. ' ' → logprob: -15.773248672485352
    8. '``' → logprob: -16.89824867248535
    9. '  ' → logprob: -17.77324867248535
    10. '  
' → logprob: -17.89824867248535

Token 1641: '8' (ID: 23)
  Prédit: '8'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '8' → logprob: -0.005234002135694027
    2. ' ' → logprob: -5.2552337646484375
    3. '```' → logprob: -15.380233764648438
    4. ' 
' → logprob: -16.380233764648438
    5. ' ' → logprob: -17.630233764648438
    6. '``' → logprob: -17.755233764648438
    7. '0' → logprob: -18.005233764648438
    8. '' → logprob: -19.005233764648438
    9. '  
' → logprob: -19.505233764648438
    10. '3' → logprob: -19.630233764648438

Token 1642: ' <' (ID: 464)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.15366071462631226
    2. '```' → logprob: -2.778660774230957
    3. '\n' → logprob: -3.153660774230957
    4. '<|end|>' → logprob: -3.403660774230957
    5. '[
' → logprob: -7.028660774230957
    6. '<|end|>' → logprob: -7.028660774230957
    7. '\' → logprob: -7.903660774230957
    8. '``' → logprob: -8.403660774230957
    9. '`' → logprob: -8.778660774230957
    10. '[' → logprob: -8.778660774230957

Token 1643: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.40325111150741577
    2. '```' → logprob: -1.6532511711120605
    3. '1' → logprob: -3.2782511711120605
    4. ' ' → logprob: -3.5282511711120605
    5. '3' → logprob: -3.7782511711120605
    6. '
' → logprob: -4.1532511711120605
    7. '6' → logprob: -4.9032511711120605
    8. '<|end|>' → logprob: -5.1532511711120605
    9. ')' → logprob: -5.6532511711120605
    10. '2' → logprob: -5.6532511711120605

Token 1644: '9' (ID: 24)
  Prédit: '9'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: -0.5914917588233948
    2. '1' → logprob: -1.09149169921875
    3. '6' → logprob: -3.34149169921875
    4. '10' → logprob: -3.96649169921875
    5. '3' → logprob: -4.34149169921875
    6. ' ' → logprob: -4.46649169921875
    7. '```' → logprob: -4.96649169921875
    8. '2' → logprob: -5.09149169921875
    9. '8' → logprob: -5.59149169921875
    10. '4' → logprob: -5.71649169921875

Token 1645: ' input' (ID: 3422)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.2894432544708252
    2. '```' → logprob: -1.9144432544708252
    3. '\n' → logprob: -2.539443254470825
    4. '<|end|>' → logprob: -4.289443016052246
    5. '\' → logprob: -6.539443016052246
    6. '<|end|>' → logprob: -6.664443016052246
    7. '   ' → logprob: -6.664443016052246
    8. '[
' → logprob: -6.789443016052246
    9. '#' → logprob: -6.789443016052246
    10. ')' → logprob: -7.039443016052246

Token 1646: ' total' (ID: 3609)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.9171707630157471
    2. '\n' → logprob: -0.9171707630157471
    3. '```' → logprob: -2.417170763015747
    4. '       ' → logprob: -3.167170763015747
    5. ',
' → logprob: -4.042170524597168
    6. '.
' → logprob: -4.667170524597168
    7. '   ' → logprob: -4.667170524597168
    8. ',' → logprob: -5.042170524597168
    9. '\' → logprob: -5.167170524597168
    10. '[
' → logprob: -5.542170524597168

Token 1647: ' weight' (ID: 6049)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '\n' → logprob: -1.1384117603302002
    2. '
' → logprob: -1.2634117603302002
    3. '```' → logprob: -1.3884117603302002
    4. '#' → logprob: -2.8884117603302
    5. '       ' → logprob: -3.5134117603302
    6. '   ' → logprob: -4.638411521911621
    7. '<|end|>' → logprob: -4.763411521911621
    8. '\' → logprob: -4.763411521911621
    9. '[
' → logprob: -4.888411521911621
    10. ')' → logprob: -5.513411521911621

Token 1648: '

' (ID: 279)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '```' → logprob: -0.6492815017700195
    2. '
' → logprob: -1.2742815017700195
    3. '\n' → logprob: -1.8992815017700195
    4. ')' → logprob: -4.6492815017700195
    5. '<|end|>' → logprob: -4.6492815017700195
    6. ',' → logprob: -4.7742815017700195
    7. ',
' → logprob: -5.5242815017700195
    8. '``' → logprob: -5.6492815017700195
    9. '`' → logprob: -5.6492815017700195
    10. ')
' → logprob: -6.2742815017700195

Token 1649: '       ' (ID: 309)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '```' → logprob: -0.7435664534568787
    2. '
' → logprob: -1.8685665130615234
    3. '       ' → logprob: -2.2435665130615234
    4. 'def' → logprob: -2.2435665130615234
    5. '   ' → logprob: -2.8685665130615234
    6. '\n' → logprob: -4.368566513061523
    7. '[
' → logprob: -4.618566513061523
    8. '`
' → logprob: -4.618566513061523
    9. ':
' → logprob: -4.868566513061523
    10. '`' → logprob: -4.993566513061523

Token 1650: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.049460574984550476
    2. '   ' → logprob: -4.299460411071777
    3. '```' → logprob: -4.424460411071777
    4. '           ' → logprob: -5.424460411071777
    5. '#' (adapté à ' #') → logprob: -5.549460411071777
    6. ')' → logprob: -5.924460411071777
    7. '\n' → logprob: -6.299460411071777
    8. '
' → logprob: -6.299460411071777
    9. '[
' → logprob: -6.424460411071777
    10. '\' → logprob: -6.549460411071777

Token 1651: ' Why' (ID: 12587)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3139670193195343
    2. '```' → logprob: -2.688966989517212
    3. '
' → logprob: -2.813966989517212
    4. '#' → logprob: -3.563966989517212
    5. '   ' → logprob: -3.688966989517212
    6. '[
' → logprob: -4.063967227935791
    7. '\n' → logprob: -4.188967227935791
    8. 'def' → logprob: -4.313967227935791
    9. '           ' → logprob: -4.313967227935791
    10. ')' → logprob: -5.938967227935791

Token 1652: '?' (ID: 30)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '```' → logprob: -0.6589913368225098
    2. '\n' → logprob: -1.2839913368225098
    3. '[
' → logprob: -2.6589913368225098
    4. ',' → logprob: -3.5339913368225098
    5. '
' → logprob: -3.6589913368225098
    6. ',
' → logprob: -4.03399133682251
    7. '[' → logprob: -4.15899133682251
    8. '`' → logprob: -4.15899133682251
    9. '\' → logprob: -5.28399133682251
    10. '``' → logprob: -5.65899133682251

Token 1653: ' It' (ID: 1225)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '```' → logprob: -0.70161372423172
    2. '   ' → logprob: -1.9516136646270752
    3. '#' → logprob: -2.201613664627075
    4. '       ' → logprob: -2.701613664627075
    5. 'def' → logprob: -2.826613664627075
    6. '[
' → logprob: -3.076613664627075
    7. '
' → logprob: -3.201613664627075
    8. 'from' → logprob: -5.576613903045654
    9. 'The' → logprob: -5.826613903045654
    10. ':' → logprob: -5.951613903045654

Token 1654: ' means' (ID: 4748)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''' → logprob: -0.5238016247749329
    2. 's' → logprob: -2.523801565170288
    3. '
' → logprob: -2.773801565170288
    4. '#' → logprob: -3.023801565170288
    5. '```' → logprob: -3.023801565170288
    6. ' is' → logprob: -3.398801565170288
    7. '`' → logprob: -3.523801565170288
    8. '\n' → logprob: -4.273801803588867
    9. ' ' → logprob: -4.398801803588867
    10. '_' → logprob: -5.023801803588867

Token 1655: ' the' (ID: 290)
  Prédit: ' the'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' the' → logprob: -0.9098353385925293
    2. 'the' → logprob: -1.0348353385925293
    3. '#' → logprob: -2.9098353385925293
    4. 'they' → logprob: -3.4098353385925293
    5. ' they' → logprob: -3.9098353385925293
    6. 'we' → logprob: -4.034835338592529
    7. 'there' → logprob: -4.034835338592529
    8. ' there' → logprob: -4.159835338592529
    9. ' because' → logprob: -4.534835338592529
    10. ' ' → logprob: -4.534835338592529

Token 1656: ' problem' (ID: 4792)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.9991602897644043
    2. '```' → logprob: -1.3741602897644043
    3. 'def' → logprob: -2.3741602897644043
    4. '
' → logprob: -2.4991602897644043
    5. 'chunks' → logprob: -3.2491602897644043
    6. '`' → logprob: -3.4991602897644043
    7. 'b' → logprob: -3.9991602897644043
    8. '[
' → logprob: -4.624160289764404
    9. 'weights' → logprob: -4.749160289764404
    10. 'from' → logprob: -5.124160289764404

Token 1657: ' is' (ID: 382)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1658: ' to' (ID: 316)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '```' → logprob: -0.41405418515205383
    2. ' not' → logprob: -1.6640541553497314
    3. '#' → logprob: -3.4140541553497314
    4. 'not' → logprob: -3.7890541553497314
    5. '``' → logprob: -4.6640543937683105
    6. 'b' → logprob: -4.6640543937683105
    7. ' likely' → logprob: -5.2890543937683105
    8. 'def' → logprob: -5.4140543937683105
    9. 'import' → logprob: -5.6640543937683105
    10. 'a' → logprob: -5.6640543937683105

Token 1659: ' output' (ID: 4733)
  Prédit: 'split'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.8881258368492126
    2. 'find' → logprob: -1.3881258964538574
    3. '```' → logprob: -2.3881258964538574
    4. 'continue' → logprob: -3.0131258964538574
    5. 'def' → logprob: -3.2631258964538574
    6. 'combine' → logprob: -3.7631258964538574
    7. 'merge' → logprob: -3.8881258964538574
    8. 'write' → logprob: -4.013125896453857
    9. 'return' → logprob: -4.263125896453857
    10. 'count' → logprob: -4.763125896453857

Token 1660: ' chunks' (ID: 53440)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.6861281394958496
    2. '```' → logprob: -2.1861281394958496
    3. '[
' → logprob: -2.4361281394958496
    4. ' ' → logprob: -2.4361281394958496
    5. '3' → logprob: -2.9361281394958496
    6. '\n' → logprob: -3.3111281394958496
    7. '0' → logprob: -4.06112813949585
    8. ')' → logprob: -4.43612813949585
    9. '2' → logprob: -5.06112813949585
    10. ' [' → logprob: -5.06112813949585

Token 1661: ' in' (ID: 306)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -1.1249924898147583
    2. '```' → logprob: -1.4999924898147583
    3. '<|end|>' → logprob: -2.1249923706054688
    4. '[
' → logprob: -2.3749923706054688
    5. '[' → logprob: -2.7499923706054688
    6. '\n' → logprob: -2.8749923706054688
    7. 's' → logprob: -3.4999923706054688
    8. ',' → logprob: -4.124992370605469
    9. ')' → logprob: -4.499992370605469
    10. '[]' → logprob: -4.499992370605469

Token 1662: ' (' (ID: 350)
  Prédit: '[
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[
' → logprob: -0.6864303350448608
    2. 'lines' → logprob: -2.0614304542541504
    3. 'sorted' → logprob: -2.0614304542541504
    4. '```' → logprob: -2.6864304542541504
    5. 'a' → logprob: -3.1864304542541504
    6. 'weight' → logprob: -4.06143045425415
    7. '[(' → logprob: -4.06143045425415
    8. '[' → logprob: -4.31143045425415
    9. 'the' → logprob: -4.43643045425415
    10. 'chunks' → logprob: -4.56143045425415

Token 1663: 'a' (ID: 64)
  Prédit: '[
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[
' → logprob: -0.5408332347869873
    2. '[' → logprob: -2.1658332347869873
    3. 'a' → logprob: -2.2908332347869873
    4. ')' → logprob: -2.5408332347869873
    5. '```' → logprob: -3.6658332347869873
    6. 'b' → logprob: -4.040833473205566
    7. '0' → logprob: -4.290833473205566
    8. '3' → logprob: -4.540833473205566
    9. '
' → logprob: -4.665833473205566
    10. 'weight' → logprob: -4.665833473205566

Token 1664: ',b' (ID: 17568)
  Prédit: '_i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_i' → logprob: -0.14598672091960907
    2. ')' → logprob: -2.270986795425415
    3. ',' → logprob: -4.395986557006836
    4. ')_' → logprob: -5.145986557006836
    5. '_' → logprob: -6.270986557006836
    6. 's' → logprob: -7.020986557006836
    7. '[i' → logprob: -7.145986557006836
    8. '[' → logprob: -7.270986557006836
    9. '_
' → logprob: -7.395986557006836
    10. '```' → logprob: -7.395986557006836

Token 1665: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.3450573980808258
    2. ',' → logprob: -1.9700573682785034
    3. '_i' → logprob: -3.345057487487793
    4. ':' → logprob: -3.970057487487793
    5. '_' → logprob: -4.095057487487793
    6. '[' → logprob: -4.220057487487793
    7. ')
' → logprob: -4.595057487487793
    8. '):' → logprob: -4.845057487487793
    9. '=' → logprob: -4.845057487487793
    10. '```' → logprob: -5.095057487487793

Token 1666: ' such' (ID: 2238)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '```' → logprob: -0.46467113494873047
    2. ',' → logprob: -2.2146711349487305
    3. '``' → logprob: -3.0896711349487305
    4. '
' → logprob: -3.4646711349487305
    5. ':' → logprob: -3.5896711349487305
    6. ')' → logprob: -4.0896711349487305
    7. '[' → logprob: -4.0896711349487305
    8. '\n' → logprob: -4.2146711349487305
    9. '=' → logprob: -4.4646711349487305
    10. '   ' → logprob: -4.4646711349487305

Token 1667: ' that' (ID: 484)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.1154584214091301
    2. ':' → logprob: -3.4904584884643555
    3. ')' → logprob: -3.9904584884643555
    4. '```' → logprob: -4.2404584884643555
    5. ',' → logprob: -4.6154584884643555
    6. '[' → logprob: -4.8654584884643555
    7. '[
' → logprob: -5.3654584884643555
    8. '_' → logprob: -5.3654584884643555
    9. ' =' → logprob: -5.7404584884643555
    10. '{' → logprob: -6.3654584884643555

Token 1668: ' sum' (ID: 4215)
  Prédit: ' each'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' each' → logprob: -1.3092471361160278
    2. ' a' → logprob: -1.6842471361160278
    3. 'a' → logprob: -1.9342471361160278
    4. '```' → logprob: -2.6842470169067383
    5. 'each' → logprob: -2.8092470169067383
    6. ' the' → logprob: -2.8092470169067383
    7. ' b' → logprob: -3.3092470169067383
    8. '0' → logprob: -3.4342470169067383
    9. ' ' → logprob: -3.4342470169067383
    10. ' they' → logprob: -3.5592470169067383

Token 1669: ' a' (ID: 261)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.25637176632881165
    2. ' =' → logprob: -1.8813717365264893
    3. '_' → logprob: -3.8813717365264893
    4. ' ' → logprob: -4.631371974945068
    5. '```' → logprob: -5.006371974945068
    6. '
' → logprob: -5.256371974945068
    7. 'a' → logprob: -5.381371974945068
    8. '_i' → logprob: -5.506371974945068
    9. ' a' → logprob: -5.631371974945068
    10. ' +=' → logprob: -5.881371974945068

Token 1670: '_i' (ID: 10853)
  Prédit: '_i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_i' → logprob: -0.034967146813869476
    2. '_' → logprob: -3.7849671840667725
    3. ',' → logprob: -5.534966945648193
    4. ' _' → logprob: -6.534966945648193
    5. '+' → logprob: -6.784966945648193
    6. ' ' → logprob: -6.909966945648193
    7. '<|end|>' → logprob: -7.409966945648193
    8. ')' → logprob: -7.409966945648193
    9. '```' → logprob: -7.409966945648193
    10. '=' → logprob: -7.534966945648193

Token 1671: ' *' (ID: 425)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -1.044211745262146
    2. ',' → logprob: -1.544211745262146
    3. '=' → logprob: -1.669211745262146
    4. ' +' → logprob: -3.2942118644714355
    5. '*' → logprob: -3.5442118644714355
    6. '_' → logprob: -4.0442118644714355
    7. '>=' → logprob: -4.0442118644714355
    8. '+
' → logprob: -4.1692118644714355
    9. ' =' → logprob: -4.5442118644714355
    10. '```' → logprob: -4.5442118644714355

Token 1672: ' ' (ID: 220)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.016588618978857994
    2. '2' → logprob: -4.8915886878967285
    3. '1' → logprob: -5.6415886878967285
    4. ' b' → logprob: -5.7665886878967285
    5. '```' → logprob: -6.8915886878967285
    6. '0' → logprob: -7.3915886878967285
    7. '
' → logprob: -8.64158821105957
    8. ' ' → logprob: -8.76658821105957
    9. 'quantity' → logprob: -9.14158821105957
    10. '``' → logprob: -10.89158821105957

Token 1673: '2' (ID: 17)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.0012541614705696702
    2. '2' → logprob: -7.126254081726074
    3. '1' → logprob: -8.626254081726074
    4. '```' → logprob: -8.876254081726074
    5. '
' → logprob: -10.501254081726074
    6. '0' → logprob: -10.501254081726074
    7. ' b' → logprob: -10.751254081726074
    8. 'i' → logprob: -11.376254081726074
    9. 'c' → logprob: -11.501254081726074
    10. 'a' → logprob: -12.001254081726074

Token 1674: '^' (ID: 61)
  Prédit: '^'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '^' → logprob: -0.03598090261220932
    2. '**' → logprob: -3.7859809398651123
    3. '
' → logprob: -5.410980701446533
    4. '```' → logprob: -6.285980701446533
    5. '_' → logprob: -6.535980701446533
    6. ',' → logprob: -7.160980701446533
    7. '=' → logprob: -7.410980701446533
    8. '[' → logprob: -7.410980701446533
    9. '`' → logprob: -7.535980701446533
    10. '^{' → logprob: -7.785980701446533

Token 1675: 'x' (ID: 87)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.28357812762260437
    2. 'b' → logprob: -1.4085781574249268
    3. ' ' → logprob: -6.908577919006348
    4. '```' → logprob: -6.908577919006348
    5. '(' → logprob: -8.658577919006348
    6. '-' → logprob: -10.033577919006348
    7. ' b' → logprob: -10.033577919006348
    8. '`' → logprob: -10.533577919006348
    9. '^' → logprob: -10.533577919006348
    10. ')' → logprob: -10.908577919006348

Token 1676: ' *' (ID: 425)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '```' → logprob: -0.6245401501655579
    2. ',' → logprob: -2.624540090560913
    3. '
' → logprob: -2.999540090560913
    4. ')' → logprob: -2.999540090560913
    5. '_' → logprob: -3.124540090560913
    6. ':' → logprob: -3.249540090560913
    7. '[' → logprob: -3.374540090560913
    8. '=' → logprob: -3.499540090560913
    9. '0' → logprob: -3.874540090560913
    10. '_i' → logprob: -3.999540090560913

Token 1677: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.002566502895206213
    2. '0' → logprob: -6.502566337585449
    3. '```' → logprob: -7.627566337585449
    4. ' b' → logprob: -7.877566337585449
    5. '1' → logprob: -9.62756633758545
    6. '
' → logprob: -10.25256633758545
    7. ' ' → logprob: -10.62756633758545
    8. '(' → logprob: -11.37756633758545
    9. 'y' → logprob: -11.50256633758545
    10. '2' → logprob: -11.62756633758545

Token 1678: '_i' (ID: 10853)
  Prédit: '_i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_i' → logprob: -0.10414653271436691
    2. '_' → logprob: -2.8541464805603027
    3. ')' → logprob: -3.9791464805603027
    4. '```' → logprob: -4.604146480560303
    5. '_
' → logprob: -5.729146480560303
    6. '=' → logprob: -6.479146480560303
    7. ',' → logprob: -6.479146480560303
    8. '
' → logprob: -6.729146480560303
    9. '0' → logprob: -7.354146480560303
    10. '[' → logprob: -7.354146480560303

Token 1679: ' *' (ID: 425)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '```' → logprob: -0.9952329993247986
    2. ' =' → logprob: -1.3702330589294434
    3. '=' → logprob: -1.7452330589294434
    4. '
' → logprob: -2.9952330589294434
    5. '``' → logprob: -3.8702330589294434
    6. ',' → logprob: -3.8702330589294434
    7. ':' → logprob: -4.120233058929443
    8. ')' → logprob: -4.245233058929443
    9. '   ' → logprob: -4.495233058929443
    10. '0' → logprob: -4.620233058929443

Token 1680: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.01323529053479433
    2. ' ' → logprob: -4.513235092163086
    3. '0' → logprob: -6.263235092163086
    4. '
' → logprob: -9.388235092163086
    5. '```' → logprob: -9.388235092163086
    6. '1' → logprob: -9.888235092163086
    7. '`' → logprob: -11.138235092163086
    8. 'y' → logprob: -11.138235092163086
    9. '``' → logprob: -11.138235092163086
    10. '(' → logprob: -12.638235092163086

Token 1681: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.02402007207274437
    2. '0' → logprob: -3.774019956588745
    3. 'y' → logprob: -7.649020195007324
    4. '1' → logprob: -9.024020195007324
    5. '```' → logprob: -9.024020195007324
    6. '
' → logprob: -10.649020195007324
    7. '``' → logprob: -11.399020195007324
    8. 'x' → logprob: -11.649020195007324
    9. ' ' → logprob: -12.274020195007324
    10. '`' → logprob: -13.149020195007324

Token 1682: '^' (ID: 61)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.1549731492996216
    2. '0' → logprob: -1.6549731492996216
    3. '<|end|>' → logprob: -1.6549731492996216
    4. '=' → logprob: -2.154973030090332
    5. 'y' → logprob: -3.029973030090332
    6. '^' → logprob: -3.279973030090332
    7. '```' → logprob: -3.279973030090332
    8. '_' → logprob: -4.904973030090332
    9. ' =' → logprob: -5.029973030090332
    10. '**' → logprob: -5.154973030090332

Token 1683: 'y' (ID: 88)
  Prédit: 'y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -6.034592388459714e-06
    2. '0' → logprob: -12.500005722045898
    3. '```' → logprob: -14.125005722045898
    4. ' y' → logprob: -14.375005722045898
    5. 'x' → logprob: -14.375005722045898
    6. '
' → logprob: -15.250005722045898
    7. 'y's' → logprob: -16.7500057220459
    8. '_y' → logprob: -16.7500057220459
    9. ''y' → logprob: -16.8750057220459
    10. 'b' → logprob: -17.2500057220459

Token 1684: ' =' (ID: 314)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '```' → logprob: -0.8671548962593079
    2. ')' → logprob: -2.492154836654663
    3. '<|end|>' → logprob: -2.742154836654663
    4. ',' → logprob: -2.867154836654663
    5. '   ' → logprob: -2.992154836654663
    6. '0' → logprob: -3.117154836654663
    7. '
' → logprob: -3.242154836654663
    8. '\n' → logprob: -3.367154836654663
    9. '=' → logprob: -3.992154836654663
    10. 'def' → logprob: -4.242155075073242

Token 1685: ' input' (ID: 3422)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.7309955954551697
    2. ' ' → logprob: -1.3559956550598145
    3. '0' → logprob: -1.6059956550598145
    4. '2' → logprob: -3.3559956550598145
    5. '...' → logprob: -4.7309956550598145
    6. '```' → logprob: -5.3559956550598145
    7. ' (' → logprob: -6.2309956550598145
    8. '<|end|>' → logprob: -6.4809956550598145
    9. '`' → logprob: -6.9809956550598145
    10. '
' → logprob: -7.3559956550598145

Token 1686: ' total' (ID: 3609)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.9187994599342346
    2. '   ' → logprob: -1.6687994003295898
    3. '\n' → logprob: -2.66879940032959
    4. '       ' → logprob: -2.91879940032959
    5. '```' → logprob: -2.91879940032959
    6. 's' → logprob: -3.16879940032959
    7. ',' → logprob: -3.16879940032959
    8. '_i' → logprob: -3.54379940032959
    9. ',
' → logprob: -3.66879940032959
    10. ')' → logprob: -4.66879940032959

Token 1687: ' mass' (ID: 4842)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '```' → logprob: -1.1219747066497803
    2. 's' → logprob: -2.1219747066497803
    3. '
' → logprob: -2.1219747066497803
    4. '   ' → logprob: -2.3719747066497803
    5. '_' → logprob: -2.8719747066497803
    6. '_i' → logprob: -3.1219747066497803
    7. '0' → logprob: -3.2469747066497803
    8. '\n' → logprob: -3.7469747066497803
    9. '_units' → logprob: -3.8719747066497803
    10. 'Unit' → logprob: -3.8719747066497803

Token 1688: '.

' (ID: 364)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '```' → logprob: -1.0594580173492432
    2. '
' → logprob: -1.1844580173492432
    3. '   ' → logprob: -2.059458017349243
    4. '       ' → logprob: -2.684458017349243
    5. '\n' → logprob: -2.809458017349243
    6. ':' → logprob: -4.309457778930664
    7. ',' → logprob: -4.309457778930664
    8. 'def' → logprob: -4.434457778930664
    9. ')' → logprob: -4.934457778930664
    10. ':
' → logprob: -5.059457778930664

Token 1689: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.47394469380378723
    2. 'def' → logprob: -1.4739446640014648
    3. '       ' → logprob: -2.223944664001465
    4. '```' → logprob: -4.348944664001465
    5. '
' → logprob: -4.473944664001465
    6. ' def' → logprob: -5.348944664001465
    7. ':' → logprob: -5.848944664001465
    8. ':
' → logprob: -6.848944664001465
    9. '#' → logprob: -7.098944664001465
    10. ',' → logprob: -7.098944664001465

Token 1690: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.838405430316925
    2. '       ' → logprob: -0.963405430316925
    3. 'def' → logprob: -3.4634053707122803
    4. '#' (adapté à ' #') → logprob: -3.7134053707122803
    5. '```' → logprob: -3.9634053707122803
    6. ',' → logprob: -4.088405609130859
    7. ')' → logprob: -4.088405609130859
    8. '
' → logprob: -4.338405609130859
    9. '\n' → logprob: -4.963405609130859
    10. ':' → logprob: -4.963405609130859

Token 1691: ' The' (ID: 623)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.20813128352165222
    2. '#' → logprob: -1.9581313133239746
    3. 'def' → logprob: -4.583131313323975
    4. '   ' → logprob: -4.708131313323975
    5. '```' → logprob: -4.708131313323975
    6. '
' → logprob: -4.958131313323975
    7. 'from' → logprob: -5.583131313323975
    8. 'class' → logprob: -6.583131313323975
    9. '#
' → logprob: -6.708131313323975
    10. ',' → logprob: -7.333131313323975

Token 1692: ' problem' (ID: 4792)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '```' → logprob: -0.9785546660423279
    2. 'def' → logprob: -1.4785547256469727
    3. '`' → logprob: -2.3535547256469727
    4. ' ' → logprob: -2.9785547256469727
    5. '\n' → logprob: -3.2285547256469727
    6. '
' → logprob: -3.7285547256469727
    7. '_' → logprob: -3.8535547256469727
    8. '0' → logprob: -4.103554725646973
    9. '   ' → logprob: -4.228554725646973
    10. 'a' → logprob: -4.603554725646973

Token 1693: ' gives' (ID: 8967)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '```' → logprob: -0.8067886233329773
    2. ':' → logprob: -2.306788682937622
    3. '   ' → logprob: -2.431788682937622
    4. '
' → logprob: -2.806788682937622
    5. 'def' → logprob: -2.931788682937622
    6. ',' → logprob: -3.431788682937622
    7. '<|end|>' → logprob: -3.431788682937622
    8. 's' → logprob: -3.556788682937622
    9. ''s' → logprob: -3.681788682937622
    10. '#' → logprob: -3.931788682937622

Token 1694: ' no' (ID: 860)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '```' → logprob: -0.9966174364089966
    2. ' ' → logprob: -1.4966174364089966
    3. '`' → logprob: -2.246617317199707
    4. ' a' → logprob: -3.371617317199707
    5. '[
' → logprob: -3.621617317199707
    6. ''' → logprob: -3.621617317199707
    7. ' (' → logprob: -3.746617317199707
    8. '(' → logprob: -3.996617317199707
    9. '   ' → logprob: -4.121617317199707
    10. '0' → logprob: -4.246617317199707

Token 1695: ' x' (ID: 1215)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '```' → logprob: -0.9391661286354065
    2. '_' → logprob: -1.6891660690307617
    3. ' ' → logprob: -2.3141660690307617
    4. '
' → logprob: -2.5641660690307617
    5. ')' → logprob: -3.3141660690307617
    6. '`' → logprob: -3.6891660690307617
    7. 'def' → logprob: -3.9391660690307617
    8. '#' → logprob: -4.314166069030762
    9. '\n' → logprob: -4.439166069030762
    10. 'a' → logprob: -4.439166069030762

Token 1696: ',y' (ID: 16103)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -1.3909378051757812
    2. '
' → logprob: -1.6409378051757812
    3. '   ' → logprob: -2.0159378051757812
    4. ')' → logprob: -2.3909378051757812
    5. '_' → logprob: -2.8909378051757812
    6. '```' → logprob: -2.8909378051757812
    7. '_i' → logprob: -3.5159378051757812
    8. ' =' → logprob: -3.5159378051757812
    9. '=' → logprob: -3.7659378051757812
    10. ':' → logprob: -4.015937805175781

Token 1697: ' and' (ID: 326)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.9220596551895142
    2. '
' → logprob: -1.2970596551895142
    3. '```' → logprob: -1.6720596551895142
    4. '   ' → logprob: -2.9220595359802246
    5. ':' → logprob: -3.7970595359802246
    6. ',' → logprob: -4.047059535980225
    7. ':
' → logprob: -5.047059535980225
    8. ')' → logprob: -5.047059535980225
    9. '``' → logprob: -5.547059535980225
    10. ')
' → logprob: -5.797059535980225

Token 1698: ' no' (ID: 860)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.3702903091907501
    2. '```' → logprob: -1.7452902793884277
    3. 'b' → logprob: -3.6202902793884277
    4. 'def' → logprob: -3.7452902793884277
    5. '...' → logprob: -3.9952902793884277
    6. '
' → logprob: -4.370290279388428
    7. '       ' → logprob: -4.620290279388428
    8. ' b' → logprob: -4.745290279388428
    9. ' #' → logprob: -5.120290279388428
    10. 'The' → logprob: -5.745290279388428

Token 1699: ' transformations' (ID: 94732)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '```' → logprob: -0.2712746858596802
    2. '#' → logprob: -3.3962745666503906
    3. 'constraints' → logprob: -3.3962745666503906
    4. 'def' → logprob: -3.5212745666503906
    5. 'explicit' → logprob: -3.5212745666503906
    6. 'b' → logprob: -4.146274566650391
    7. ' constraints' → logprob: -4.146274566650391
    8. '
' → logprob: -4.271274566650391
    9. '``' → logprob: -4.896274566650391
    10. 'additional' → logprob: -5.396274566650391

Token 1700: ',' (ID: 11)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.20258668065071106
    2. '   ' → logprob: -2.2025866508483887
    3. '
' → logprob: -3.9525866508483887
    4. '```' → logprob: -4.202586650848389
    5. 'def' → logprob: -4.452586650848389
    6. ',' → logprob: -4.702586650848389
    7. ',
' → logprob: -5.827586650848389
    8. ':
' → logprob: -6.202586650848389
    9. '           ' → logprob: -6.827586650848389
    10. '#' → logprob: -6.827586650848389

Token 1701: ' so' (ID: 813)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.33237597346305847
    2. '```' → logprob: -1.8323760032653809
    3. '
' → logprob: -2.707376003265381
    4. '\n' → logprob: -4.332376003265381
    5. '   ' → logprob: -4.582376003265381
    6. '           ' → logprob: -5.332376003265381
    7. '#' → logprob: -5.582376003265381
    8. '...' → logprob: -5.707376003265381
    9. '<|end|>' → logprob: -5.957376003265381
    10. ' and' → logprob: -6.582376003265381

Token 1702: ' likely' (ID: 6960)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.076945424079895
    2. '```' → logprob: -1.076945424079895
    3. 'def' → logprob: -1.951945424079895
    4. '#' → logprob: -2.8269453048706055
    5. 'from' → logprob: -2.9519453048706055
    6. '
' → logprob: -4.2019453048706055
    7. '...' → logprob: -4.8269453048706055
    8. '[
' → logprob: -4.9519453048706055
    9. '   ' → logprob: -5.7019453048706055
    10. '           ' → logprob: -5.9519453048706055

Token 1703: ' a' (ID: 261)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.5806989073753357
    2. 'def' → logprob: -2.2056989669799805
    3. '...' → logprob: -2.8306989669799805
    4. '```' → logprob: -2.9556989669799805
    5. 'from' → logprob: -3.0806989669799805
    6. '       ' → logprob: -3.2056989669799805
    7. '<|end|>' → logprob: -3.3306989669799805
    8. '[
' → logprob: -3.7056989669799805
    9. 'a' → logprob: -4.7056989669799805
    10. 'the' → logprob: -4.7056989669799805

Token 1704: '_i' (ID: 10853)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.05933424457907677
    2. 's' → logprob: -4.0593342781066895
    3. 'n' → logprob: -4.4343342781066895
    4. '#' → logprob: -5.3093342781066895
    5. '=' → logprob: -5.4343342781066895
    6. '<|end|>' → logprob: -6.1843342781066895
    7. ' =' → logprob: -6.1843342781066895
    8. '_' → logprob: -6.4343342781066895
    9. '
' → logprob: -6.6843342781066895
    10. '.' → logprob: -6.9343342781066895

Token 1705: ' and' (ID: 326)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.9631920456886292
    2. ' =' → logprob: -1.9631919860839844
    3. '<|end|>' → logprob: -1.9631919860839844
    4. '=' → logprob: -2.3381919860839844
    5. ')' → logprob: -2.7131919860839844
    6. ':' → logprob: -3.9631919860839844
    7. '<|end|>' → logprob: -3.9631919860839844
    8. ' ' → logprob: -4.088191986083984
    9. '_' → logprob: -4.213191986083984
    10. '```' → logprob: -4.213191986083984

Token 1706: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.12695299088954926
    2. ' b' → logprob: -2.126952886581421
    3. 'a' → logprob: -12.126953125
    4. '_b' → logprob: -12.501953125
    5. '```' → logprob: -12.626953125
    6. '2' → logprob: -12.751953125
    7. ' ' → logprob: -13.251953125
    8. ' a' → logprob: -13.501953125
    9. ' ' → logprob: -13.626953125
    10. '
' → logprob: -13.751953125

Token 1707: '_i' (ID: 10853)
  Prédit: '_i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_i' → logprob: -0.019163910299539566
    2. '_' → logprob: -4.019164085388184
    3. ')' → logprob: -8.019164085388184
    4. ',' → logprob: -8.769164085388184
    5. '_
' → logprob: -8.894164085388184
    6. ')_' → logprob: -9.394164085388184
    7. ' _' → logprob: -9.644164085388184
    8. '```' → logprob: -9.769164085388184
    9. '
' → logprob: -9.894164085388184
    10. ''_' → logprob: -10.519164085388184

Token 1708: ' are' (ID: 553)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -1.2240750789642334
    2. ',' → logprob: -2.3490750789642334
    3. ' =' → logprob: -2.3490750789642334
    4. '=' → logprob: -2.5990750789642334
    5. '```' → logprob: -2.7240750789642334
    6. ')' → logprob: -2.9740750789642334
    7. '<|end|>' → logprob: -2.9740750789642334
    8. 'def' → logprob: -3.0990750789642334
    9. 's' → logprob: -3.2240750789642334
    10. '
' → logprob: -3.5990750789642334

Token 1709: ' ex' (ID: 513)
  Prédit: ' integers'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' integers' → logprob: -0.6795976161956787
    2. '```' → logprob: -1.8045976161956787
    3. '0' → logprob: -2.6795976161956787
    4. ' ' → logprob: -3.0545976161956787
    5. ' a' → logprob: -3.3045976161956787
    6. ',' → logprob: -3.8045976161956787
    7. '[' → logprob: -3.9295976161956787
    8. '2' → logprob: -4.304597854614258
    9. '<|end|>' → logprob: -4.304597854614258
    10. ' (' → logprob: -4.429597854614258

Token 1710: 'ponents' (ID: 4331)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '```' → logprob: -0.918468713760376
    2. 'a' → logprob: -1.668468713760376
    3. 'p' → logprob: -2.043468713760376
    4. ')' → logprob: -2.668468713760376
    5. 'act' → logprob: -3.543468713760376
    6. '``' → logprob: -3.918468713760376
    7. 't' → logprob: -4.168468475341797
    8. '`' → logprob: -4.168468475341797
    9. '=' → logprob: -4.293468475341797
    10. '+' → logprob: -4.668468475341797

Token 1711: ' for' (ID: 395)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '```' → logprob: -1.1318001747131348
    2. '   ' → logprob: -1.2568001747131348
    3. '
' → logprob: -2.3818001747131348
    4. ')' → logprob: -2.3818001747131348
    5. '<|end|>' → logprob: -3.2568001747131348
    6. ',' → logprob: -3.6318001747131348
    7. ')
' → logprob: -3.6318001747131348
    8. '       ' → logprob: -3.7568001747131348
    9. ':
' → logprob: -4.381800174713135
    10. '<|end|>' → logprob: -4.381800174713135

Token 1712: ' ' (ID: 220)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.5281802415847778
    2. '2' → logprob: -1.7781802415847778
    3. '```' → logprob: -1.9031802415847778
    4. '0' → logprob: -2.2781801223754883
    5. 'Weight' → logprob: -2.5281801223754883
    6. 'x' → logprob: -2.6531801223754883
    7. '`' → logprob: -2.9031801223754883
    8. '1' → logprob: -3.0281801223754883
    9. 'weight' → logprob: -3.2781801223754883
    10. 'def' → logprob: -4.153180122375488

Token 1713: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.04794171079993248
    2. '```' → logprob: -4.1729416847229
    3. 'two' → logprob: -4.9229416847229
    4. 'weight' → logprob: -5.0479416847229
    5. 'the' → logprob: -5.7979416847229
    6. 'powers' → logprob: -5.9229416847229
    7. '`' → logprob: -6.0479416847229
    8. 'pow' → logprob: -6.2979416847229
    9. 'weights' → logprob: -6.2979416847229
    10. '(' → logprob: -6.4229416847229

Token 1714: '^' (ID: 61)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6496989727020264
    2. '       ' → logprob: -1.1496989727020264
    3. '
' → logprob: -3.1496989727020264
    4. '```' → logprob: -3.5246989727020264
    5. ',' → logprob: -3.6496989727020264
    6. ')' → logprob: -4.1496992111206055
    7. '**' → logprob: -4.5246992111206055
    8. ')
' → logprob: -5.3996992111206055
    9. '_' → logprob: -5.6496992111206055
    10. ':' → logprob: -6.2746992111206055

Token 1715: 'x' (ID: 87)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '```' → logprob: -0.49458804726600647
    2. '_' → logprob: -2.2445881366729736
    3. ',' → logprob: -2.7445881366729736
    4. '_
' → logprob: -2.8695881366729736
    5. '   ' → logprob: -2.9945881366729736
    6. '**' → logprob: -3.8695881366729736
    7. '`' → logprob: -4.1195878982543945
    8. ')' → logprob: -4.3695878982543945
    9. '``' → logprob: -4.4945878982543945
    10. '       ' → logprob: -5.1195878982543945

Token 1716: ' and' (ID: 326)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '```' → logprob: -0.8187015056610107
    2. '   ' → logprob: -1.3187015056610107
    3. ')' → logprob: -2.3187015056610107
    4. ',' → logprob: -3.1937015056610107
    5. '       ' → logprob: -3.5687015056610107
    6. ':' → logprob: -3.5687015056610107
    7. ')
' → logprob: -4.19370174407959
    8. '**' → logprob: -4.31870174407959
    9. '
' → logprob: -4.81870174407959
    10. '[' → logprob: -4.94370174407959

Token 1717: ' ' (ID: 220)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.04288031533360481
    2. 'b' → logprob: -3.2928802967071533
    3. 'a' → logprob: -5.792880535125732
    4. ' y' → logprob: -7.292880535125732
    5. '```' → logprob: -7.292880535125732
    6. '_y' → logprob: -8.792880058288574
    7. '2' → logprob: -9.417880058288574
    8. '`' → logprob: -9.792880058288574
    9. '``' → logprob: -10.917880058288574
    10. '
' → logprob: -11.042880058288574

Token 1718: '2' (ID: 17)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.001058295019902289
    2. 'b' → logprob: -7.376058101654053
    3. 'a' → logprob: -7.876058101654053
    4. ' y' → logprob: -11.251058578491211
    5. '
' → logprob: -11.501058578491211
    6. 'x' → logprob: -11.751058578491211
    7. '```' → logprob: -11.751058578491211
    8. '_y' → logprob: -12.251058578491211
    9. ''y' → logprob: -12.876058578491211
    10. '`' → logprob: -13.876058578491211

Token 1719: '^' (ID: 61)
  Prédit: '^'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '^' → logprob: -0.22289204597473145
    2. '_' → logprob: -3.0978920459747314
    3. ')' → logprob: -3.5978920459747314
    4. '**' → logprob: -3.5978920459747314
    5. ',' → logprob: -4.097891807556152
    6. '#' → logprob: -4.097891807556152
    7. 'x' → logprob: -4.472891807556152
    8. '<|end|>' → logprob: -4.722891807556152
    9. '```' → logprob: -4.847891807556152
    10. 'b' → logprob: -5.722891807556152

Token 1720: 'y' (ID: 88)
  Prédit: 'y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.001207019085995853
    2. 'b' → logprob: -6.751206874847412
    3. '```' → logprob: -11.37620735168457
    4. 'a' → logprob: -11.75120735168457
    5. '
' → logprob: -11.75120735168457
    6. ' y' → logprob: -12.62620735168457
    7. '#' → logprob: -13.62620735168457
    8. 'x' → logprob: -14.00120735168457
    9. '0' → logprob: -14.00120735168457
    10. '_y' → logprob: -14.25120735168457

Token 1721: ':

' (ID: 1402)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.45040175318717957
    2. '```' → logprob: -2.450401782989502
    3. '       ' → logprob: -2.950401782989502
    4. ':' → logprob: -2.950401782989502
    5. ')' → logprob: -3.450401782989502
    6. ',' → logprob: -3.700401782989502
    7. 'def' → logprob: -3.700401782989502
    8. '
' → logprob: -3.825401782989502
    9. '[' → logprob: -4.575401782989502
    10. '\n' → logprob: -5.075401782989502

Token 1722: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2896847128868103
    2. '   ' → logprob: -1.539684772491455
    3. 'def' → logprob: -4.664684772491455
    4. '```' → logprob: -5.164684772491455
    5. '           ' → logprob: -5.289684772491455
    6. 'class' → logprob: -5.539684772491455
    7. 'from' → logprob: -5.664684772491455
    8. ')' → logprob: -5.664684772491455
    9. '
' → logprob: -6.664684772491455
    10. '<|end|>' → logprob: -6.664684772491455

Token 1723: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.02035851590335369
    2. '           ' → logprob: -5.395358562469482
    3. '```' → logprob: -5.520358562469482
    4. '   ' → logprob: -6.020358562469482
    5. '...' → logprob: -6.145358562469482
    6. ',' → logprob: -6.270358562469482
    7. 'class' → logprob: -6.770358562469482
    8. 'def' → logprob: -7.520358562469482
    9. '#' (adapté à ' #') → logprob: -7.645358562469482
    10. 'from' → logprob: -7.645358562469482

Token 1724: ' Actually' (ID: 50557)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7121268510818481
    2. '#' → logprob: -1.3371268510818481
    3. '```' → logprob: -2.4621267318725586
    4. '   ' → logprob: -2.9621267318725586
    5. 'def' → logprob: -3.4621267318725586
    6. 'class' → logprob: -3.5871267318725586
    7. 'a' → logprob: -4.962126731872559
    8. 'from' → logprob: -4.962126731872559
    9. '...' → logprob: -4.962126731872559
    10. '           ' → logprob: -5.587126731872559

Token 1725: ' problem' (ID: 4792)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '```' → logprob: -1.1672364473342896
    2. '#' → logprob: -1.4172364473342896
    3. 'from' → logprob: -2.167236328125
    4. 'class' → logprob: -2.292236328125
    5. 'a' → logprob: -2.542236328125
    6. '       ' → logprob: -2.917236328125
    7. '   ' → logprob: -3.542236328125
    8. '...' → logprob: -3.792236328125
    9. ' a' → logprob: -5.042236328125
    10. 'def' → logprob: -5.167236328125

Token 1726: ' statement' (ID: 9710)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '```' → logprob: -0.7361449003219604
    2. '<|end|>' → logprob: -1.7361449003219604
    3. ':' → logprob: -2.11114501953125
    4. '   ' → logprob: -2.86114501953125
    5. '<|end|>' → logprob: -3.48614501953125
    6. 'def' → logprob: -3.61114501953125
    7. '#' → logprob: -3.98614501953125
    8. ')' → logprob: -4.11114501953125
    9. '
' → logprob: -4.61114501953125
    10. ',' → logprob: -4.86114501953125

Token 1727: ' says' (ID: 5003)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7399192452430725
    2. '```' → logprob: -1.3649191856384277
    3. ':' → logprob: -1.9899191856384277
    4. 'def' → logprob: -3.3649191856384277
    5. '       ' → logprob: -3.9899191856384277
    6. ':
' → logprob: -4.489919185638428
    7. ',' → logprob: -4.489919185638428
    8. '):' → logprob: -4.739919185638428
    9. '
' → logprob: -4.864919185638428
    10. '#' → logprob: -5.114919185638428

Token 1728: ':

' (ID: 1402)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6686946749687195
    2. '```' → logprob: -1.0436947345733643
    3. '       ' → logprob: -3.4186947345733643
    4. '
' → logprob: -3.7936947345733643
    5. 'def' → logprob: -3.9186947345733643
    6. 'class' → logprob: -4.668694496154785
    7. '#' → logprob: -4.793694496154785
    8. ':' → logprob: -5.043694496154785
    9. '``' → logprob: -5.168694496154785
    10. '...' → logprob: -5.668694496154785

Token 1729: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.08667255938053131
    2. '```' → logprob: -3.58667254447937
    3. '   ' → logprob: -4.211672782897949
    4. '           ' → logprob: -4.461672782897949
    5. '...' → logprob: -5.336672782897949
    6. '        ' → logprob: -5.461672782897949
    7. ',' → logprob: -5.836672782897949
    8. '<|end|>' → logprob: -6.086672782897949
    9. '`' → logprob: -6.211672782897949
    10. ')' → logprob: -6.211672782897949

Token 1730: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.15750892460346222
    2. '```' → logprob: -3.2825088500976562
    3. '   ' → logprob: -3.6575088500976562
    4. '...' → logprob: -4.407508850097656
    5. '           ' → logprob: -4.532508850097656
    6. '#' (adapté à ' #') → logprob: -5.032508850097656
    7. '(' → logprob: -5.032508850097656
    8. ',' → logprob: -5.407508850097656
    9. 'x' → logprob: -5.532508850097656
    10. ')' → logprob: -5.657508850097656

Token 1731: ' "' (ID: 392)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.2496098279953003
    2. 'def' → logprob: -1.7496098279953003
    3. '       ' → logprob: -2.12460994720459
    4. '```' → logprob: -2.12460994720459
    5. '#' → logprob: -2.24960994720459
    6. ')' → logprob: -3.62460994720459
    7. ':' → logprob: -3.74960994720459
    8. '0' → logprob: -4.49960994720459
    9. 'from' → logprob: -4.49960994720459
    10. 'a' → logprob: -4.49960994720459

Token 1732: 'x' (ID: 87)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -1.0590596199035645
    2. '```' → logprob: -1.5590596199035645
    3. ')' → logprob: -2.0590596199035645
    4. '   ' → logprob: -2.4340596199035645
    5. ' "' → logprob: -2.8090596199035645
    6. '       ' → logprob: -3.6840596199035645
    7. '`' → logprob: -3.8090596199035645
    8. 'a' → logprob: -3.9340596199035645
    9. ' ' → logprob: -4.3090596199035645
    10. 'x' → logprob: -4.8090596199035645

Token 1733: '"' (ID: 1)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.5735840797424316
    2. '```' → logprob: -1.5735840797424316
    3. '**' → logprob: -1.9485840797424316
    4. ',' → logprob: -2.3235840797424316
    5. '_' → logprob: -2.8235840797424316
    6. '+' → logprob: -3.1985840797424316
    7. '=' → logprob: -3.4485840797424316
    8. ':' → logprob: -3.5735840797424316
    9. '`' → logprob: -3.6985840797424316
    10. '#' → logprob: -3.8235840797424316

Token 1734: ' is' (ID: 382)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -1.2725106477737427
    2. ',' → logprob: -1.3975106477737427
    3. ')' → logprob: -1.7725106477737427
    4. '=' → logprob: -2.397510528564453
    5. '```' → logprob: -3.147510528564453
    6. '   ' → logprob: -3.647510528564453
    7. '#' → logprob: -3.647510528564453
    8. '**' → logprob: -3.772510528564453
    9. '_i' → logprob: -4.147510528564453
    10. ' =' → logprob: -4.272510528564453

Token 1735: ' the' (ID: 290)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.2441195398569107
    2. '0' → logprob: -1.8691195249557495
    3. '```' → logprob: -4.494119644165039
    4. 'x' → logprob: -4.744119644165039
    5. '`' → logprob: -4.994119644165039
    6. ' ' → logprob: -5.619119644165039
    7. ',' → logprob: -5.744119644165039
    8. ')' → logprob: -5.744119644165039
    9. 'a' → logprob: -5.869119644165039
    10. ' =' → logprob: -5.869119644165039

Token 1736: ' exponent' (ID: 51159)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '```' → logprob: -1.2630341053009033
    2. '`' → logprob: -1.5130341053009033
    3. '0' → logprob: -2.5130341053009033
    4. '+' → logprob: -2.6380341053009033
    5. '_' → logprob: -3.2630341053009033
    6. '=' → logprob: -3.2630341053009033
    7. '2' → logprob: -3.5130341053009033
    8. 'b' → logprob: -3.5130341053009033
    9. 'ex' → logprob: -3.6380341053009033
    10. 'a' → logprob: -3.6380341053009033

Token 1737: ' in' (ID: 306)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '```' → logprob: -0.8149147629737854
    2. '   ' → logprob: -1.4399147033691406
    3. ',' → logprob: -2.5649147033691406
    4. ')' → logprob: -2.6899147033691406
    5. '=' → logprob: -3.5649147033691406
    6. '**' → logprob: -4.064914703369141
    7. '
' → logprob: -4.314914703369141
    8. ' =' → logprob: -4.814914703369141
    9. 'def' → logprob: -4.814914703369141
    10. '``' → logprob: -4.814914703369141

Token 1738: ' the' (ID: 290)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.7803210616111755
    2. '`' → logprob: -1.9053211212158203
    3. 'b' → logprob: -2.1553211212158203
    4. 'the' → logprob: -2.4053211212158203
    5. '```' → logprob: -2.9053211212158203
    6. '2' → logprob: -3.2803211212158203
    7. ' the' → logprob: -4.53032112121582
    8. ' ' → logprob: -4.65532112121582
    9. 'weight' → logprob: -4.90532112121582
    10. '"' → logprob: -4.90532112121582

Token 1739: ' weight' (ID: 6049)
  Prédit: '`'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '`' → logprob: -0.8616917133331299
    2. 'a' → logprob: -1.7366917133331299
    3. 'b' → logprob: -2.11169171333313
    4. '```' → logprob: -2.73669171333313
    5. '0' → logprob: -3.73669171333313
    6. '2' → logprob: -3.73669171333313
    7. ''' → logprob: -3.73669171333313
    8. '^' → logprob: -3.98669171333313
    9. 'weight' → logprob: -4.236691474914551
    10. 'x' → logprob: -4.736691474914551

Token 1740: ' unit' (ID: 7670)
  Prédit: 'Unit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Unit' → logprob: -0.23536236584186554
    2. '   ' → logprob: -3.1103622913360596
    3. ')' → logprob: -3.4853622913360596
    4. ',' → logprob: -3.4853622913360596
    5. '_' → logprob: -3.7353622913360596
    6. '_unit' → logprob: -3.7353622913360596
    7. '```' → logprob: -4.360362529754639
    8. '_i' → logprob: -4.860362529754639
    9. ' Unit' → logprob: -5.610362529754639
    10. ' ' → logprob: -5.610362529754639

Token 1741: ' ' (ID: 220)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.9766837954521179
    2. '```' → logprob: -1.1016838550567627
    3. ')' → logprob: -2.7266838550567627
    4. ',' → logprob: -2.9766838550567627
    5. '=' → logprob: -3.6016838550567627
    6. '
' → logprob: -4.101683616638184
    7. ' =' → logprob: -4.476683616638184
    8. ':' → logprob: -4.601683616638184
    9. ')
' → logprob: -4.601683616638184
    10. 'def' → logprob: -4.976683616638184

Token 1742: '2' (ID: 17)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.2041833400726318
    2. '```' → logprob: -1.8291833400726318
    3. '   ' → logprob: -1.9541833400726318
    4. ',' → logprob: -2.454183340072632
    5. '=' → logprob: -3.204183340072632
    6. '[' → logprob: -3.454183340072632
    7. '_' → logprob: -3.454183340072632
    8. '#' → logprob: -3.704183340072632
    9. '`' → logprob: -4.079183578491211
    10. ':' → logprob: -4.204183578491211

Token 1743: '^' (ID: 61)
  Prédit: '**'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '**' → logprob: -0.8356856107711792
    2. '^' → logprob: -1.0856856107711792
    3. '0' → logprob: -2.3356857299804688
    4. '```' → logprob: -3.5856857299804688
    5. 'x' → logprob: -4.085685729980469
    6. '*' → logprob: -4.210685729980469
    7. '#' → logprob: -4.335685729980469
    8. '
' → logprob: -4.460685729980469
    9. ')' → logprob: -4.835685729980469
    10. ',' → logprob: -4.960685729980469

Token 1744: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.0007647183374501765
    2. '```' → logprob: -7.875764846801758
    3. 'b' → logprob: -8.625764846801758
    4. 'a' → logprob: -9.125764846801758
    5. '^' → logprob: -10.750764846801758
    6. '`' → logprob: -11.375764846801758
    7. '_x' → logprob: -11.375764846801758
    8. ')' → logprob: -11.500764846801758
    9. '#' → logprob: -11.750764846801758
    10. '-' → logprob: -11.875764846801758

Token 1745: ' grams' (ID: 55637)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.8589591979980469
    2. ')' → logprob: -1.4839591979980469
    3. '_' → logprob: -2.358959197998047
    4. '```' → logprob: -2.358959197998047
    5. '   ' → logprob: -2.983959197998047
    6. '+' → logprob: -3.608959197998047
    7. '#' → logprob: -4.233959197998047
    8. '=' → logprob: -4.733959197998047
    9. 'x' → logprob: -4.983959197998047
    10. '*' → logprob: -5.108959197998047

Token 1746: '

' (ID: 279)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '```' → logprob: -0.5869442224502563
    2. '   ' → logprob: -2.336944103240967
    3. '       ' → logprob: -2.586944103240967
    4. ',' → logprob: -3.086944103240967
    5. ':' → logprob: -3.086944103240967
    6. 'def' → logprob: -3.211944103240967
    7. '
' → logprob: -3.836944103240967
    8. ')' → logprob: -4.336944103240967
    9. '):' → logprob: -4.711944103240967
    10. ')
' → logprob: -4.961944103240967

Token 1747: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.19000555574893951
    2. '   ' → logprob: -2.9400055408477783
    3. '```' → logprob: -3.4400055408477783
    4. '<|end|>' → logprob: -3.5650055408477783
    5. ')' → logprob: -4.315005779266357
    6. '           ' → logprob: -4.940005779266357
    7. ',' → logprob: -5.065005779266357
    8. 'class' → logprob: -5.065005779266357
    9. '...' → logprob: -5.315005779266357
    10. '#' → logprob: -5.440005779266357

Token 1748: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7152091264724731
    2. '   ' → logprob: -1.0902091264724731
    3. ',' → logprob: -3.4652090072631836
    4. '```' → logprob: -3.5902090072631836
    5. ':' → logprob: -3.8402090072631836
    6. ')' → logprob: -3.9652090072631836
    7. '           ' → logprob: -4.465209007263184
    8. 'x' → logprob: -4.840209007263184
    9. ' ' → logprob: -5.215209007263184
    10. '#' (adapté à ' #') → logprob: -5.215209007263184

Token 1749: ' Similarly' (ID: 65037)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4934452474117279
    2. '   ' → logprob: -1.7434452772140503
    3. 'x' → logprob: -3.1184451580047607
    4. '```' → logprob: -3.1184451580047607
    5. ' ' → logprob: -3.7434451580047607
    6. '"' → logprob: -4.11844539642334
    7. ' x' → logprob: -4.24344539642334
    8. '#' → logprob: -4.24344539642334
    9. '0' → logprob: -4.61844539642334
    10. '<|end|>' → logprob: -5.11844539642334

Token 1750: ' for' (ID: 395)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5487639904022217
    2. '   ' → logprob: -1.4237639904022217
    3. '```' → logprob: -1.9237639904022217
    4. 'class' → logprob: -4.923764228820801
    5. '           ' → logprob: -5.048764228820801
    6. 'def' → logprob: -5.548764228820801
    7. 'from' → logprob: -5.798764228820801
    8. ',' → logprob: -5.923764228820801
    9. ')' → logprob: -6.548764228820801
    10. '#' → logprob: -6.548764228820801

Token 1751: ' y' (ID: 342)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.1101112812757492
    2. 'a' → logprob: -2.9851112365722656
    3. 'x' → logprob: -4.235111236572266
    4. 'quantity' → logprob: -4.235111236572266
    5. 'weight' → logprob: -4.860111236572266
    6. 'y' → logprob: -5.110111236572266
    7. 'Quantity' → logprob: -5.860111236572266
    8. 'the' → logprob: -6.235111236572266
    9. '#' → logprob: -6.360111236572266
    10. '`' → logprob: -6.610111236572266

Token 1752: '

' (ID: 279)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.41330498456954956
    2. '       ' → logprob: -1.4133050441741943
    3. '```' → logprob: -3.5383050441741943
    4. ':' → logprob: -4.163304805755615
    5. ',' → logprob: -4.163304805755615
    6. '
' → logprob: -4.663304805755615
    7. 'def' → logprob: -5.163304805755615
    8. '           ' → logprob: -5.663304805755615
    9. 'class' → logprob: -5.788304805755615
    10. '#' → logprob: -6.413304805755615

Token 1753: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.15028446912765503
    2. '   ' → logprob: -2.2752845287323
    3. ',' → logprob: -5.025284290313721
    4. '...' → logprob: -5.025284290313721
    5. '           ' → logprob: -5.275284290313721
    6. '```' → logprob: -5.525284290313721
    7. 'class' → logprob: -6.025284290313721
    8. ')' → logprob: -6.150284290313721
    9. '
' → logprob: -6.650284290313721
    10. '#' → logprob: -6.650284290313721

Token 1754: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.029292158782482147
    2. '           ' → logprob: -4.779292106628418
    3. '```' → logprob: -5.404292106628418
    4. ',' → logprob: -5.654292106628418
    5. ')' → logprob: -6.029292106628418
    6. '   ' → logprob: -6.154292106628418
    7. 'from' → logprob: -6.404292106628418
    8. '...' → logprob: -6.779292106628418
    9. '               ' → logprob: -6.904292106628418
    10. '
' → logprob: -7.279292106628418

Token 1755: ' Each' (ID: 11555)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.04364541545510292
    2. '```' → logprob: -4.29364538192749
    3. '   ' → logprob: -4.66864538192749
    4. '           ' → logprob: -4.91864538192749
    5. ',' → logprob: -5.54364538192749
    6. ')' → logprob: -6.79364538192749
    7. '#' → logprob: -6.79364538192749
    8. 'def' → logprob: -6.91864538192749
    9. 'class' → logprob: -7.04364538192749
    10. '...' → logprob: -7.04364538192749

Token 1756: ' chunk' (ID: 23958)
  Prédit: '`'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '`' → logprob: -1.1984689235687256
    2. '```' → logprob: -1.1984689235687256
    3. '   ' → logprob: -2.4484689235687256
    4. ' ' → logprob: -3.3234689235687256
    5. 'def' → logprob: -3.4484689235687256
    6. 'b' → logprob: -3.5734689235687256
    7. '_' → logprob: -3.5734689235687256
    8. ',' → logprob: -3.8234689235687256
    9. 'a' → logprob: -3.9484689235687256
    10. ')' → logprob: -3.9484689235687256

Token 1757: ' weight' (ID: 6049)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3664442300796509
    2. '       ' → logprob: -2.6164441108703613
    3. 'def' → logprob: -2.8664441108703613
    4. '```' → logprob: -3.1164441108703613
    5. ':' → logprob: -3.6164441108703613
    6. ' =' → logprob: -4.491444110870361
    7. ',' → logprob: -4.491444110870361
    8. 's' → logprob: -4.616444110870361
    9. ' is' → logprob: -4.616444110870361
    10. '=' → logprob: -4.991444110870361

Token 1758: ' =' (ID: 314)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7075566053390503
    2. ':' → logprob: -1.7075566053390503
    3. '       ' → logprob: -2.83255672454834
    4. '):' → logprob: -2.95755672454834
    5. '```' → logprob: -3.08255672454834
    6. ')' → logprob: -3.20755672454834
    7. ',' → logprob: -3.20755672454834
    8. ' =' → logprob: -3.95755672454834
    9. '=' → logprob: -3.95755672454834
    10. ':
' → logprob: -4.83255672454834

Token 1759: ' a' (ID: 261)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '2' → logprob: -0.8504932522773743
    2. '`' → logprob: -1.7254931926727295
    3. 'a' → logprob: -1.8504931926727295
    4. 'self' → logprob: -2.1004931926727295
    5. 'weight' → logprob: -3.7254931926727295
    6. 'x' → logprob: -3.9754931926727295
    7. '```' → logprob: -4.350493431091309
    8. '   ' → logprob: -4.475493431091309
    9. 'Weight' → logprob: -4.725493431091309
    10. '(self' → logprob: -4.850493431091309

Token 1760: '_i' (ID: 10853)
  Prédit: '_i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_i' → logprob: -0.03480908274650574
    2. ')' → logprob: -4.534809112548828
    3. ',' → logprob: -4.909809112548828
    4. '   ' → logprob: -5.659809112548828
    5. 's' → logprob: -6.034809112548828
    6. '       ' → logprob: -6.909809112548828
    7. '_' → logprob: -7.159809112548828
    8. ' _' → logprob: -7.284809112548828
    9. ' =' → logprob: -7.659809112548828
    10. ' ,' → logprob: -7.659809112548828

Token 1761: ' *' (ID: 425)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.12204909324646
    2. ',' → logprob: -1.87204909324646
    3. '   ' → logprob: -1.87204909324646
    4. ')' → logprob: -1.99704909324646
    5. '```' → logprob: -3.37204909324646
    6. ' =' → logprob: -3.62204909324646
    7. ')
' → logprob: -3.62204909324646
    8. '_' → logprob: -3.99704909324646
    9. '=' → logprob: -4.622049331665039
    10. ':' → logprob: -4.747049331665039

Token 1762: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.1285100281238556
    2. 'x' → logprob: -2.878509998321533
    3. '0' → logprob: -3.628509998321533
    4. '(' → logprob: -5.003509998321533
    5. 'b' → logprob: -5.253509998321533
    6. ' ' → logprob: -5.253509998321533
    7. '`' → logprob: -5.378509998321533
    8. ' (' → logprob: -5.878509998321533
    9. 'Weight' → logprob: -6.128509998321533
    10. 'Unit' → logprob: -6.378509998321533

Token 1763: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.265215128660202
    2. 'x' → logprob: -2.1402151584625244
    3. '0' → logprob: -2.8902151584625244
    4. 'b' → logprob: -3.6402151584625244
    5. 'Weight' → logprob: -5.015214920043945
    6. 'weight' → logprob: -5.515214920043945
    7. '`' → logprob: -5.765214920043945
    8. 'i' → logprob: -5.890214920043945
    9. 'Unit' → logprob: -6.140214920043945
    10. '**' → logprob: -6.140214920043945

Token 1764: '^' (ID: 61)
  Prédit: '**'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '**' → logprob: -0.5835253000259399
    2. '^' → logprob: -1.70852530002594
    3. 'x' → logprob: -1.70852530002594
    4. '<|end|>' → logprob: -3.4585251808166504
    5. '```' → logprob: -3.9585251808166504
    6. ')' → logprob: -4.83352518081665
    7. '
' → logprob: -4.83352518081665
    8. '#' → logprob: -5.08352518081665
    9. '_x' → logprob: -6.45852518081665
    10. ',' → logprob: -6.70852518081665

Token 1765: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.004629007540643215
    2. '0' → logprob: -5.879629135131836
    3. 'a' → logprob: -7.254629135131836
    4. 'b' → logprob: -7.379629135131836
    5. '```' → logprob: -8.754629135131836
    6. '(' → logprob: -9.379629135131836
    7. '
' → logprob: -9.629629135131836
    8. '<|end|>' → logprob: -10.129629135131836
    9. '(x' → logprob: -10.879629135131836
    10. 'Weight' → logprob: -11.254629135131836

Token 1766: ' grams' (ID: 55637)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '```' → logprob: -0.6986417174339294
    2. '   ' → logprob: -1.8236417770385742
    3. '       ' → logprob: -2.073641777038574
    4. ')' → logprob: -2.448641777038574
    5. ',' → logprob: -3.573641777038574
    6. ':' → logprob: -3.823641777038574
    7. '_' → logprob: -4.323641777038574
    8. '`' → logprob: -4.698641777038574
    9. '``' → logprob: -4.698641777038574
    10. '           ' → logprob: -4.948641777038574

Token 1767: '

' (ID: 279)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5430675745010376
    2. '       ' → logprob: -1.7930675745010376
    3. '```' → logprob: -1.7930675745010376
    4. ')' → logprob: -4.043067455291748
    5. '
' → logprob: -4.168067455291748
    6. ',' → logprob: -4.293067455291748
    7. ':' → logprob: -4.293067455291748
    8. 'def' → logprob: -5.793067455291748
    9. '``' → logprob: -6.043067455291748
    10. '**' → logprob: -6.418067455291748

Token 1768: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4734654724597931
    2. '```' → logprob: -1.8484654426574707
    3. '   ' → logprob: -1.9734654426574707
    4. ')' → logprob: -3.8484654426574707
    5. '<|end|>' → logprob: -4.473465442657471
    6. ',' → logprob: -4.848465442657471
    7. ' ' → logprob: -4.848465442657471
    8. '...' → logprob: -5.223465442657471
    9. '`' → logprob: -5.973465442657471
    10. '#' → logprob: -6.223465442657471

Token 1769: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4302184581756592
    2. '   ' → logprob: -2.055218458175659
    3. '```' → logprob: -2.180218458175659
    4. ')' → logprob: -4.055218696594238
    5. ' ' → logprob: -4.180218696594238
    6. ',' → logprob: -4.430218696594238
    7. '<|end|>' → logprob: -4.430218696594238
    8. '           ' → logprob: -4.930218696594238
    9. '        ' → logprob: -5.430218696594238
    10. '    ' → logprob: -5.555218696594238

Token 1770: ' Number' (ID: 9184)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '```' → logprob: -0.8992141485214233
    2. ' ' → logprob: -1.6492141485214233
    3. '       ' → logprob: -1.8992141485214233
    4. '`' → logprob: -3.399214267730713
    5. ',' → logprob: -3.524214267730713
    6. '   ' → logprob: -3.774214267730713
    7. ')' → logprob: -3.774214267730713
    8. '0' → logprob: -4.024214267730713
    9. '``' → logprob: -4.524214267730713
    10. ' (' → logprob: -4.524214267730713

Token 1771: ' of' (ID: 328)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.3968815505504608
    2. 's' → logprob: -2.146881580352783
    3. '#' → logprob: -3.271881580352783
    4. '=' → logprob: -3.396881580352783
    5. '```' → logprob: -3.771881580352783
    6. ')' → logprob: -4.396881580352783
    7. '`' → logprob: -4.521881580352783
    8. 'Of' → logprob: -5.021881580352783
    9. '
' → logprob: -5.021881580352783
    10. '.' → logprob: -5.146881580352783

Token 1772: ' item' (ID: 2169)
  Prédit: 'items'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'items' → logprob: -1.0554988384246826
    2. 'chunks' → logprob: -1.1804988384246826
    3. '_items' → logprob: -2.5554988384246826
    4. '_chunks' → logprob: -2.8054988384246826
    5. ' items' → logprob: -3.6804988384246826
    6. '```' → logprob: -3.8054988384246826
    7. ' chunks' → logprob: -4.055499076843262
    8. '`' → logprob: -4.055499076843262
    9. '_' → logprob: -4.305499076843262
    10. 'i' → logprob: -4.305499076843262

Token 1773: ' =' (ID: 314)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -4.1557283111615106e-05
    2. '   ' → logprob: -11.625041961669922
    3. ' s' → logprob: -11.750041961669922
    4. '```' → logprob: -12.500041961669922
    5. '_s' → logprob: -13.125041961669922
    6. 'def' → logprob: -13.125041961669922
    7. '       ' → logprob: -13.250041961669922
    8. '(s' → logprob: -13.250041961669922
    9. 'Quantity' → logprob: -13.250041961669922
    10. '
' → logprob: -13.500041961669922

Token 1774: ' b' (ID: 287)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.45994558930397034
    2. 'b' → logprob: -1.334945559501648
    3. ' a' → logprob: -3.8349456787109375
    4. '2' → logprob: -4.0849456787109375
    5. ' b' → logprob: -4.7099456787109375
    6. '```' → logprob: -4.7099456787109375
    7. 'each' → logprob: -5.0849456787109375
    8. '`' → logprob: -5.2099456787109375
    9. 'y' → logprob: -5.2099456787109375
    10. '1' → logprob: -5.3349456787109375

Token 1775: '_i' (ID: 10853)
  Prédit: '_i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_i' → logprob: -0.40426549315452576
    2. '_' → logprob: -1.7792655229568481
    3. ')' → logprob: -2.7792654037475586
    4. ',' → logprob: -3.1542654037475586
    5. '```' → logprob: -3.5292654037475586
    6. 's' → logprob: -5.904265403747559
    7. ':' → logprob: -6.154265403747559
    8. '   ' → logprob: -6.154265403747559
    9. '`' → logprob: -6.404265403747559
    10. '0' → logprob: -6.404265403747559

Token 1776: ' *' (ID: 425)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.16451406478881836
    2. '       ' → logprob: -2.9145140647888184
    3. '```' → logprob: -3.2895140647888184
    4. '
' → logprob: -3.5395140647888184
    5. ',' → logprob: -5.164514064788818
    6. '[' → logprob: -6.039514064788818
    7. ')' → logprob: -6.039514064788818
    8. ':' → logprob: -6.289514064788818
    9. 'def' → logprob: -6.414514064788818
    10. '_' → logprob: -6.539514064788818

Token 1777: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.4357535243034363
    2. ' ' → logprob: -1.060753583908081
    3. '0' → logprob: -5.060753345489502
    4. '`' → logprob: -8.43575382232666
    5. '```' → logprob: -8.43575382232666
    6. 'x' → logprob: -9.68575382232666
    7. ' x' → logprob: -10.06075382232666
    8. ' ' → logprob: -10.56075382232666
    9. '``' → logprob: -10.68575382232666
    10. '
' → logprob: -10.93575382232666

Token 1778: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.00932853389531374
    2. '0' → logprob: -5.134328365325928
    3. ' ' → logprob: -5.759328365325928
    4. 'x' → logprob: -9.384328842163086
    5. '```' → logprob: -10.009328842163086
    6. 'y' → logprob: -10.259328842163086
    7. '`' → logprob: -10.259328842163086
    8. '(' → logprob: -11.634328842163086
    9. ' ' → logprob: -12.134328842163086
    10. '``' → logprob: -12.134328842163086

Token 1779: '^' (ID: 61)
  Prédit: '^'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '^' → logprob: -0.34612083435058594
    2. '0' → logprob: -2.346120834350586
    3. ')' → logprob: -2.471120834350586
    4. 'x' → logprob: -3.096120834350586
    5. '```' → logprob: -3.471120834350586
    6. 'y' → logprob: -4.721120834350586
    7. '`' → logprob: -5.471120834350586
    8. '
' → logprob: -5.596120834350586
    9. ' x' → logprob: -5.971120834350586
    10. '**' → logprob: -6.096120834350586

Token 1780: 'y' (ID: 88)
  Prédit: 'y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.00010902655776590109
    2. 'x' → logprob: -9.37510871887207
    3. ' y' → logprob: -11.50010871887207
    4. '0' → logprob: -11.62510871887207
    5. 'y's' → logprob: -13.12510871887207
    6. '```' → logprob: -14.00010871887207
    7. 'z' → logprob: -14.50010871887207
    8. '#' → logprob: -14.75010871887207
    9. '
' → logprob: -14.87510871887207
    10. '_y' → logprob: -15.12510871887207

Token 1781: '

' (ID: 279)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.0430574417114258
    2. '<|end|>' → logprob: -1.5430574417114258
    3. '```' → logprob: -1.7930574417114258
    4. '
' → logprob: -2.043057441711426
    5. ')' → logprob: -2.793057441711426
    6. '       ' → logprob: -3.793057441711426
    7. ',' → logprob: -4.168057441711426
    8. 'def' → logprob: -5.293057441711426
    9. ')
' → logprob: -5.418057441711426
    10. '<|end|>' → logprob: -5.668057441711426

Token 1782: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.43367406725883484
    2. '<|end|>' → logprob: -1.4336740970611572
    3. '   ' → logprob: -2.9336740970611572
    4. '...' → logprob: -3.8086740970611572
    5. '```' → logprob: -4.433673858642578
    6. '
' → logprob: -5.183673858642578
    7. '<|end|>' → logprob: -5.433673858642578
    8. ')' → logprob: -5.808673858642578
    9. ' ' → logprob: -5.933673858642578
    10. '#' → logprob: -6.058673858642578

Token 1783: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.07446672767400742
    2. '```' → logprob: -3.9494667053222656
    3. '   ' → logprob: -4.074466705322266
    4. '...' → logprob: -4.699466705322266
    5. '\n' → logprob: -5.449466705322266
    6. '
' → logprob: -5.449466705322266
    7. '<|end|>' → logprob: -5.449466705322266
    8. '           ' → logprob: -5.574466705322266
    9. ',' → logprob: -6.449466705322266
    10. ')' → logprob: -6.574466705322266

Token 1784: ' So' (ID: 2632)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.12434472888708115
    2. '<|end|>' → logprob: -3.624344825744629
    3. '   ' → logprob: -3.749344825744629
    4. '
' → logprob: -4.124344825744629
    5. '```' → logprob: -4.499344825744629
    6. '#' → logprob: -4.874344825744629
    7. '...' → logprob: -4.999344825744629
    8. '           ' → logprob: -4.999344825744629
    9. ',' → logprob: -5.499344825744629
    10. ')' → logprob: -5.874344825744629

Token 1785: ' total' (ID: 3609)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.19802939891815186
    2. '#' → logprob: -2.6980295181274414
    3. '   ' → logprob: -2.6980295181274414
    4. 'def' → logprob: -4.698029518127441
    5. '
' → logprob: -5.198029518127441
    6. '           ' → logprob: -5.323029518127441
    7. '```' → logprob: -5.573029518127441
    8. 'from' → logprob: -5.823029518127441
    9. 'return' → logprob: -5.948029518127441
    10. 'class' → logprob: -6.073029518127441

Token 1786: ' mass' (ID: 4842)
  Prédit: '_mass'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_mass' → logprob: -0.9673540592193604
    2. '_weight' → logprob: -1.0923540592193604
    3. '_' → logprob: -2.0923540592193604
    4. '_i' → logprob: -3.0923540592193604
    5. '_a' → logprob: -3.9673540592193604
    6. 'weight' → logprob: -4.092353820800781
    7. '```' → logprob: -4.342353820800781
    8. 'mass' → logprob: -4.342353820800781
    9. ' _' → logprob: -4.592353820800781
    10. '_units' → logprob: -4.842353820800781

Token 1787: ' from' (ID: 591)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6819965839385986
    2. '   ' → logprob: -1.4319965839385986
    3. '```' → logprob: -2.4319965839385986
    4. ':' → logprob: -2.9319965839385986
    5. ' =' → logprob: -3.8069965839385986
    6. ',' → logprob: -4.4319963455200195
    7. '           ' → logprob: -4.6819963455200195
    8. '):' → logprob: -4.6819963455200195
    9. '
' → logprob: -4.9319963455200195
    10. ')' → logprob: -4.9319963455200195

Token 1788: ' chunk' (ID: 23958)
  Prédit: 'the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'the' → logprob: -1.400105595588684
    2. 'all' → logprob: -1.650105595588684
    3. 'input' → logprob: -1.775105595588684
    4. 'each' → logprob: -1.900105595588684
    5. 'a' → logprob: -2.4001054763793945
    6. 'chunks' → logprob: -2.5251054763793945
    7. '#' → logprob: -3.6501054763793945
    8. 'chunk' → logprob: -4.9001054763793945
    9. '```' → logprob: -5.2751054763793945
    10. 'weight' → logprob: -5.6501054763793945

Token 1789: ' i' (ID: 575)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.6623265743255615
    2. '   ' → logprob: -2.2873265743255615
    3. '       ' → logprob: -2.4123265743255615
    4. '=' → logprob: -2.5373265743255615
    5. '```' → logprob: -2.7873265743255615
    6. '_i' → logprob: -3.2873265743255615
    7. ':' → logprob: -3.5373265743255615
    8. '#' → logprob: -4.037326812744141
    9. '`' → logprob: -4.537326812744141
    10. '
' → logprob: -4.537326812744141

Token 1790: ' =' (ID: 314)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5651265382766724
    2. '       ' → logprob: -1.1901265382766724
    3. '```' → logprob: -3.690126419067383
    4. ' =' → logprob: -3.940126419067383
    5. '
' → logprob: -4.065126419067383
    6. ' *' → logprob: -4.190126419067383
    7. ')' → logprob: -4.565126419067383
    8. ',' → logprob: -5.065126419067383
    9. '#' → logprob: -5.190126419067383
    10. '=' → logprob: -5.690126419067383

Token 1791: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.26332542300224304
    2. ' a' → logprob: -1.6383254528045654
    3. 'b' → logprob: -4.388325214385986
    4. ' b' → logprob: -4.638325214385986
    5. '`' → logprob: -4.763325214385986
    6. 'self' → logprob: -6.638325214385986
    7. ' self' → logprob: -6.888325214385986
    8. '```' → logprob: -6.888325214385986
    9. 'weight' → logprob: -6.888325214385986
    10. ' (' → logprob: -7.638325214385986

Token 1792: '_i' (ID: 10853)
  Prédit: '_i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_i' → logprob: -0.0024420046247541904
    2. '_' → logprob: -6.127441883087158
    3. ' _' → logprob: -9.877442359924316
    4. '`' → logprob: -10.252442359924316
    5. '_
' → logprob: -10.752442359924316
    6. 'i' → logprob: -10.877442359924316
    7. '_n' → logprob: -11.002442359924316
    8. ')_' → logprob: -11.002442359924316
    9. '```' → logprob: -11.252442359924316
    10. 'def' → logprob: -11.752442359924316

Token 1793: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.19131791591644287
    2. ',' → logprob: -2.1913180351257324
    3. '*' → logprob: -3.6913180351257324
    4. ')' → logprob: -4.941318035125732
    5. ' ,' → logprob: -5.066318035125732
    6. '```' → logprob: -5.316318035125732
    7. '_i' → logprob: -5.566318035125732
    8. 'def' → logprob: -6.316318035125732
    9. '   ' → logprob: -6.316318035125732
    10. '`' → logprob: -6.566318035125732

Token 1794: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.09349120408296585
    2. ' ' → logprob: -2.468491315841675
    3. '`' → logprob: -6.968491077423096
    4. '
' → logprob: -7.218491077423096
    5. 'x' → logprob: -7.343491077423096
    6. '0' → logprob: -7.718491077423096
    7. '```' → logprob: -7.718491077423096
    8. ' x' → logprob: -7.968491077423096
    9. ' (' → logprob: -7.968491077423096
    10. '(' → logprob: -8.468491554260254

Token 1795: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.745762288570404
    2. 'x' → logprob: -0.745762288570404
    3. '(' → logprob: -3.120762348175049
    4. '(x' → logprob: -5.745762348175049
    5. ' (' → logprob: -7.120762348175049
    6. '`' → logprob: -7.120762348175049
    7. '```' → logprob: -7.495762348175049
    8. '0' → logprob: -7.745762348175049
    9. '
' → logprob: -7.745762348175049
    10. ' x' → logprob: -8.24576187133789

Token 1796: '^' (ID: 61)
  Prédit: '^'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '^' → logprob: -0.025432530790567398
    2. '**' → logprob: -3.775432586669922
    3. '```' → logprob: -6.525432586669922
    4. '
' → logprob: -7.900432586669922
    5. 'x' → logprob: -8.525432586669922
    6. '`' → logprob: -10.150432586669922
    7. '_^' → logprob: -10.650432586669922
    8. '^(' → logprob: -11.525432586669922
    9. '^{' → logprob: -11.650432586669922
    10. ' ' → logprob: -11.900432586669922

Token 1797: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.0009882692247629166
    2. 'b' → logprob: -7.000988483428955
    3. '```' → logprob: -10.125988006591797
    4. '
' → logprob: -11.000988006591797
    5. '^' → logprob: -12.375988006591797
    6. 'a' → logprob: -13.125988006591797
    7. '(' → logprob: -13.125988006591797
    8. ' x' → logprob: -13.250988006591797
    9. '_x' → logprob: -13.375988006591797
    10. 'y' → logprob: -13.375988006591797

Token 1798: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.6887220740318298
    2. ',' → logprob: -2.1887221336364746
    3. '```' → logprob: -2.3137221336364746
    4. ')' → logprob: -2.5637221336364746
    5. '<|end|>' → logprob: -2.5637221336364746
    6. '   ' → logprob: -2.8137221336364746
    7. '       ' → logprob: -3.5637221336364746
    8. '*' → logprob: -5.313722133636475
    9. ' ,' → logprob: -5.563722133636475
    10. ' ' → logprob: -5.688722133636475

Token 1799: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.014352009631693363
    2. ' b' → logprob: -4.389351844787598
    3. 'y' → logprob: -7.139351844787598
    4. '2' → logprob: -8.264351844787598
    5. 'quantity' → logprob: -8.514351844787598
    6. '`' → logprob: -9.139351844787598
    7. 'items' → logprob: -9.264351844787598
    8. ' y' → logprob: -9.389351844787598
    9. '```' → logprob: -9.889351844787598
    10. '(' → logprob: -10.264351844787598

Token 1800: '_i' (ID: 10853)
  Prédit: '_i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_i' → logprob: -7.433829159708694e-05
    2. '_' → logprob: -9.75007438659668
    3. '`' → logprob: -12.62507438659668
    4. 'i' → logprob: -12.75007438659668
    5. '_
' → logprob: -12.75007438659668
    6. '```' → logprob: -13.25007438659668
    7. ''_' → logprob: -13.75007438659668
    8. '
' → logprob: -13.75007438659668
    9. ' _' → logprob: -14.12507438659668
    10. ')_' → logprob: -14.50007438659668

Token 1801: ' *' (ID: 425)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -1.6019833087921143
    2. '       ' → logprob: -1.7269833087921143
    3. '```' → logprob: -1.7269833087921143
    4. '   ' → logprob: -2.2269833087921143
    5. '<|end|>' → logprob: -2.4769833087921143
    6. ')' → logprob: -2.7269833087921143
    7. ' *' → logprob: -2.8519833087921143
    8. ',' → logprob: -3.2269833087921143
    9. ' =' → logprob: -4.601983070373535
    10. '`' → logprob: -4.976983070373535

Token 1802: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.029985245317220688
    2. 'y' → logprob: -3.529985189437866
    3. ' ' → logprob: -8.654985427856445
    4. ' y' → logprob: -10.529985427856445
    5. '```' → logprob: -11.404985427856445
    6. '`' → logprob: -12.154985427856445
    7. '
' → logprob: -12.279985427856445
    8. '(' → logprob: -12.904985427856445
    9. ''y' → logprob: -13.154985427856445
    10. '0' → logprob: -13.779985427856445

Token 1803: '2' (ID: 17)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -3.0948158382670954e-05
    2. 'x' → logprob: -10.875030517578125
    3. 'y's' → logprob: -12.375030517578125
    4. '
' → logprob: -12.500030517578125
    5. '_y' → logprob: -13.500030517578125
    6. ' y' → logprob: -13.625030517578125
    7. '0' → logprob: -15.375030517578125
    8. ''y' → logprob: -15.500030517578125
    9. '```' → logprob: -15.625030517578125
    10. '2' → logprob: -16.000030517578125

Token 1804: '^' (ID: 61)
  Prédit: '^'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '^' → logprob: -0.05546201765537262
    2. 'y' → logprob: -2.930462121963501
    3. '
' → logprob: -8.805461883544922
    4. '_y' → logprob: -8.930461883544922
    5. '**' → logprob: -9.555461883544922
    6. '```' → logprob: -9.805461883544922
    7. ' y' → logprob: -9.930461883544922
    8. '#' → logprob: -10.555461883544922
    9. '*y' → logprob: -10.805461883544922
    10. '+y' → logprob: -10.805461883544922

Token 1805: 'y' (ID: 88)
  Prédit: 'y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -1.8312570318812504e-05
    2. 'x' → logprob: -11.250018119812012
    3. '_y' → logprob: -13.375018119812012
    4. 'y's' → logprob: -13.875018119812012
    5. ' y' → logprob: -14.250018119812012
    6. '0' → logprob: -14.250018119812012
    7. '
' → logprob: -14.750018119812012
    8. '#' → logprob: -15.125018119812012
    9. '```' → logprob: -15.500018119812012
    10. ''y' → logprob: -16.000019073486328

Token 1806: ' =' (ID: 314)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5930613875389099
    2. '
' → logprob: -1.3430614471435547
    3. '```' → logprob: -2.3430614471435547
    4. ':' → logprob: -4.093061447143555
    5. '\n' → logprob: -4.093061447143555
    6. 'def' → logprob: -4.593061447143555
    7. '       ' → logprob: -4.593061447143555
    8. ',' → logprob: -5.468061447143555
    9. '[' → logprob: -6.093061447143555
    10. ')' → logprob: -6.093061447143555

Token 1807: ' a' (ID: 261)
  Prédit: ' a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.4030287265777588
    2. 'a' → logprob: -2.278028726577759
    3. '2' → logprob: -2.528028726577759
    4. '0' → logprob: -3.028028726577759
    5. ' ' → logprob: -3.153028726577759
    6. ' b' → logprob: -3.903028726577759
    7. '1' → logprob: -4.27802848815918
    8. '`' → logprob: -4.77802848815918
    9. 'b' → logprob: -5.65302848815918
    10. ' total' → logprob: -6.15302848815918

Token 1808: '_i' (ID: 10853)
  Prédit: '_i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_i' → logprob: -0.030721761286258698
    2. '_' → logprob: -3.530721664428711
    3. ' _' → logprob: -8.155721664428711
    4. '_
' → logprob: -8.280721664428711
    5. '`' → logprob: -8.905721664428711
    6. ')_' → logprob: -9.655721664428711
    7. '```' → logprob: -10.280721664428711
    8. 'i' → logprob: -10.655721664428711
    9. '_n' → logprob: -10.780721664428711
    10. ')' → logprob: -10.905721664428711

Token 1809: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.021957872435450554
    2. ' +' → logprob: -5.021957874298096
    3. '*' → logprob: -5.146957874298096
    4. ',' → logprob: -5.646957874298096
    5. ')' → logprob: -6.271957874298096
    6. ' *
' → logprob: -6.771957874298096
    7. '```' → logprob: -7.521957874298096
    8. ' ' → logprob: -8.021957397460938
    9. ' ,' → logprob: -8.146957397460938
    10. '`' → logprob: -8.521957397460938

Token 1810: ' b' (ID: 287)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '2' → logprob: -0.4915919005870819
    2. ' ' → logprob: -1.3665919303894043
    3. 'x' → logprob: -2.7415919303894043
    4. ' x' → logprob: -3.2415919303894043
    5. ' (' → logprob: -4.866591930389404
    6. '(' → logprob: -5.116591930389404
    7. '0' → logprob: -5.616591930389404
    8. '`' → logprob: -5.991591930389404
    9. ' ' → logprob: -6.491591930389404
    10. '_' → logprob: -6.741591930389404

Token 1811: '_i' (ID: 10853)
  Prédit: '_i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_i' → logprob: -0.00012558852904476225
    2. '_' → logprob: -9.875125885009766
    3. 'i' → logprob: -10.875125885009766
    4. '`' → logprob: -10.875125885009766
    5. '```' → logprob: -11.375125885009766
    6. ')_' → logprob: -11.625125885009766
    7. ''_' → logprob: -12.500125885009766
    8. '_
' → logprob: -12.750125885009766
    9. '
' → logprob: -13.125125885009766
    10. ')' → logprob: -13.875125885009766

Token 1812: ' *' (ID: 425)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1813: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.06254275143146515
    2. '(' → logprob: -3.562542676925659
    3. ' ' → logprob: -4.062542915344238
    4. ' (' → logprob: -4.937542915344238
    5. '```' → logprob: -5.937542915344238
    6. '`' → logprob: -6.562542915344238
    7. '(x' → logprob: -6.812542915344238
    8. 'x' → logprob: -6.812542915344238
    9. '
' → logprob: -7.437542915344238
    10. '1' → logprob: -7.937542915344238

Token 1814: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.7911283373832703
    2. 'x' → logprob: -0.7911283373832703
    3. '(x' → logprob: -2.666128396987915
    4. '(' → logprob: -4.041128158569336
    5. '
' → logprob: -6.416128158569336
    6. ' (' → logprob: -6.666128158569336
    7. 'z' → logprob: -6.666128158569336
    8. '```' → logprob: -7.416128158569336
    9. '`' → logprob: -8.291128158569336
    10. ' ' → logprob: -8.541128158569336

Token 1815: '^{' (ID: 42923)
  Prédit: '_x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_x' → logprob: -1.2923980951309204
    2. '^' → logprob: -1.4173980951309204
    3. '_' → logprob: -1.6673980951309204
    4. ' _' → logprob: -2.542397975921631
    5. 'x' → logprob: -2.792397975921631
    6. '
' → logprob: -3.667397975921631
    7. '```' → logprob: -3.792397975921631
    8. '**' → logprob: -4.167397975921631
    9. '_y' → logprob: -4.167397975921631
    10. ' x' → logprob: -4.292397975921631

Token 1816: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.0013760682195425034
    2. '(x' → logprob: -6.876376152038574
    3. ' x' → logprob: -9.251376152038574
    4. '(' → logprob: -9.626376152038574
    5. ' (' → logprob: -10.376376152038574
    6. ''x' → logprob: -10.376376152038574
    7. '
' → logprob: -10.501376152038574
    8. '```' → logprob: -10.751376152038574
    9. '<|end|>' → logprob: -11.751376152038574
    10. '`' → logprob: -11.876376152038574

Token 1817: '+y' (ID: 102753)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.6490468382835388
    2. '_i' → logprob: -2.6490468978881836
    3. '_y' → logprob: -3.1490468978881836
    4. '
' → logprob: -3.2740468978881836
    5. '_x' → logprob: -3.3990468978881836
    6. '}' → logprob: -3.3990468978881836
    7. '```' → logprob: -3.3990468978881836
    8. 'y' → logprob: -3.3990468978881836
    9. ' _' → logprob: -3.5240468978881836
    10. '^' → logprob: -3.7740468978881836

Token 1818: '}

' (ID: 943)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '```' → logprob: -0.6186205744743347
    2. ')' → logprob: -1.4936206340789795
    3. '}' → logprob: -2.2436206340789795
    4. '   ' → logprob: -3.7436206340789795
    5. '_i' → logprob: -4.2436203956604
    6. ',' → logprob: -4.3686203956604
    7. ']' → logprob: -4.6186203956604
    8. '`' → logprob: -4.6186203956604
    9. '_' → logprob: -4.8686203956604
    10. '<|end|>' → logprob: -4.9936203956604

Token 1819: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7368740439414978
    2. '
' → logprob: -1.7368741035461426
    3. '```' → logprob: -1.8618741035461426
    4. '       ' → logprob: -1.9868741035461426
    5. 'def' → logprob: -4.736874103546143
    6. '\n' → logprob: -4.986874103546143
    7. ':' → logprob: -5.361874103546143
    8. 'class' → logprob: -5.736874103546143
    9. '<|end|>' → logprob: -5.861874103546143
    10. '`' → logprob: -5.861874103546143

Token 1820: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5680860877037048
    2. '
' → logprob: -1.8180861473083496
    3. '       ' → logprob: -2.8180861473083496
    4. 'from' → logprob: -2.8180861473083496
    5. '```' → logprob: -2.8180861473083496
    6. 'def' → logprob: -3.1930861473083496
    7. ':
' → logprob: -4.94308614730835
    8. ':' → logprob: -5.19308614730835
    9. '#' (adapté à ' #') → logprob: -5.44308614730835
    10. '[
' → logprob: -5.56808614730835

Token 1821: ' But' (ID: 3072)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.08677344769239426
    2. '   ' → logprob: -3.58677339553833
    3. '```' → logprob: -3.83677339553833
    4. 'def' → logprob: -4.33677339553833
    5. '           ' → logprob: -5.46177339553833
    6. '#' → logprob: -5.71177339553833
    7. '
' → logprob: -5.83677339553833
    8. 'class' → logprob: -5.83677339553833
    9. 'from' → logprob: -6.08677339553833
    10. ')' → logprob: -6.96177339553833

Token 1822: ' x' (ID: 1215)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '```' → logprob: -0.21344715356826782
    2. '   ' → logprob: -2.963447093963623
    3. '`' → logprob: -3.838447093963623
    4. '       ' → logprob: -3.963447093963623
    5. ' ' → logprob: -4.713447093963623
    6. ':' → logprob: -4.713447093963623
    7. ')' → logprob: -4.838447093963623
    8. 'b' → logprob: -4.838447093963623
    9. '``' → logprob: -4.838447093963623
    10. '0' → logprob: -4.838447093963623

Token 1823: ',y' (ID: 16103)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.7478440999984741
    2. ',' → logprob: -0.9978440999984741
    3. '#' → logprob: -3.7478442192077637
    4. '```' → logprob: -3.8728442192077637
    5. '=' → logprob: -4.122844219207764
    6. ')' → logprob: -4.247844219207764
    7. '_' → logprob: -4.247844219207764
    8. '_i' → logprob: -4.872844219207764
    9. '`' → logprob: -5.122844219207764
    10. 'y' → logprob: -5.122844219207764

Token 1824: ' are' (ID: 553)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.25892972946167
    2. '=' → logprob: -1.63392972946167
    3. ' =' → logprob: -1.88392972946167
    4. '```' → logprob: -2.38392972946167
    5. ' are' → logprob: -2.50892972946167
    6. '<|end|>' → logprob: -2.88392972946167
    7. '#' → logprob: -3.50892972946167
    8. '
' → logprob: -3.75892972946167
    9. '<|end|>' → logprob: -4.13392972946167
    10. ')' → logprob: -4.38392972946167

Token 1825: ' unknown' (ID: 17927)
  Prédit: 'not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'not' → logprob: -0.9352982044219971
    2. 'unknown' → logprob: -1.685298204421997
    3. '0' → logprob: -1.935298204421997
    4. 'undefined' → logprob: -2.060298204421997
    5. 'None' → logprob: -2.810298204421997
    6. '```' → logprob: -3.935298204421997
    7. ' not' → logprob: -4.435297966003418
    8. 'ind' → logprob: -4.560297966003418
    9. '=' → logprob: -5.310297966003418
    10. 'ignored' → logprob: -5.810297966003418

Token 1826: ' but' (ID: 889)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.49325525760650635
    2. '       ' → logprob: -1.2432552576065063
    3. '```' → logprob: -3.368255138397217
    4. ':' → logprob: -3.868255138397217
    5. '
' → logprob: -3.993255138397217
    6. ',' → logprob: -5.243255138397217
    7. ':
' → logprob: -5.743255138397217
    8. 'def' → logprob: -5.993255138397217
    9. ')' → logprob: -6.118255138397217
    10. '           ' → logprob: -6.368255138397217

Token 1827: ' same' (ID: 2684)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '```' → logprob: -1.1904312372207642
    2. '0' → logprob: -1.8154312372207642
    3. '       ' → logprob: -2.3154311180114746
    4. '   ' → logprob: -2.6904311180114746
    5. ':' → logprob: -3.1904311180114746
    6. ' ' → logprob: -3.4404311180114746
    7. ',' → logprob: -3.5654311180114746
    8. '
' → logprob: -3.6904311180114746
    9. 'def' → logprob: -3.6904311180114746
    10. '#' → logprob: -3.8154311180114746

Token 1828: ' for' (ID: 395)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5747472643852234
    2. '       ' → logprob: -1.5747473239898682
    3. '```' → logprob: -1.9497473239898682
    4. ',' → logprob: -4.074747085571289
    5. ')' → logprob: -4.574747085571289
    6. '**' → logprob: -4.824747085571289
    7. ':' → logprob: -4.949747085571289
    8. '
' → logprob: -5.324747085571289
    9. '#' → logprob: -5.699747085571289
    10. '``' → logprob: -5.824747085571289

Token 1829: ' all' (ID: 722)
  Prédit: 'all'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'all' → logprob: -0.00031139038037508726
    2. ' all' → logprob: -8.500311851501465
    3. 'the' → logprob: -9.500311851501465
    4. '```' → logprob: -11.625311851501465
    5. 'input' → logprob: -12.000311851501465
    6. 'each' → logprob: -12.500311851501465
    7. '
' → logprob: -13.000311851501465
    8. 'a' → logprob: -13.250311851501465
    9. 'everyone' → logprob: -13.625311851501465
    10. '所有' → logprob: -13.750311851501465

Token 1830: '

' (ID: 279)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5631475448608398
    2. '   ' → logprob: -1.8131475448608398
    3. '```' → logprob: -1.9381475448608398
    4. '
' → logprob: -2.56314754486084
    5. ',' → logprob: -4.43814754486084
    6. ')' → logprob: -5.31314754486084
    7. '...' → logprob: -5.56314754486084
    8. ':' → logprob: -5.56314754486084
    9. '           ' → logprob: -5.68814754486084
    10. 'def' → logprob: -5.81314754486084

Token 1831: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.8615245223045349
    2. '   ' → logprob: -1.1115245819091797
    3. ',' → logprob: -2.8615245819091797
    4. '\n' → logprob: -3.3615245819091797
    5. '#' → logprob: -3.6115245819091797
    6. '.' → logprob: -3.8615245819091797
    7. '
' → logprob: -3.8615245819091797
    8. ':' → logprob: -3.9865245819091797
    9. '```' → logprob: -4.23652458190918
    10. ')' → logprob: -4.36152458190918

Token 1832: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.21197748184204102
    2. '   ' → logprob: -1.836977481842041
    3. ',' → logprob: -4.961977481842041
    4. '
' → logprob: -5.336977481842041
    5. '#' (adapté à ' #') → logprob: -5.586977481842041
    6. '```' → logprob: -5.836977481842041
    7. ')' → logprob: -5.961977481842041
    8. '           ' → logprob: -6.336977481842041
    9. '...' → logprob: -6.586977481842041
    10. 'class' → logprob: -7.336977481842041

Token 1833: ' So' (ID: 2632)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.9243641495704651
    2. '#' → logprob: -1.4243640899658203
    3. '       ' → logprob: -1.7993640899658203
    4. ':' → logprob: -2.9243640899658203
    5. 'def' → logprob: -2.9243640899658203
    6. ':
' → logprob: -4.17436408996582
    7. '```' → logprob: -4.17436408996582
    8. ',' → logprob: -4.42436408996582
    9. '
' → logprob: -4.79936408996582
    10. '0' → logprob: -5.67436408996582

Token 1834: ' total' (ID: 3609)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.5150002241134644
    2. '       ' → logprob: -1.3900002241134644
    3. '#' → logprob: -2.640000343322754
    4. 'from' → logprob: -4.015000343322754
    5. '   ' → logprob: -4.265000343322754
    6. 'return' → logprob: -4.515000343322754
    7. ':' → logprob: -4.765000343322754
    8. '...' → logprob: -4.890000343322754
    9. '
' → logprob: -5.515000343322754
    10. '```' → logprob: -5.515000343322754

Token 1835: ' mass' (ID: 4842)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.18752621114253998
    2. '_weight' → logprob: -2.062526226043701
    3. '_mass' → logprob: -4.062526226043701
    4. '_
' → logprob: -5.062526226043701
    5. '```' → logprob: -5.187526226043701
    6. '#' → logprob: -6.062526226043701
    7. ' _' → logprob: -6.187526226043701
    8. '_units' → logprob: -6.312526226043701
    9. '_weights' → logprob: -7.062526226043701
    10. '`' → logprob: -7.187526226043701

Token 1836: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.7456697821617126
    2. '=' → logprob: -0.9956697821617126
    3. '```' → logprob: -2.6206698417663574
    4. '#' → logprob: -3.7456698417663574
    5. '   ' → logprob: -4.870669841766357
    6. ' is' → logprob: -4.870669841766357
    7. ':' → logprob: -4.995669841766357
    8. '_' → logprob: -5.245669841766357
    9. '
' → logprob: -5.495669841766357
    10. '=
' → logprob: -5.870669841766357

Token 1837: ' (' (ID: 350)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.6279617547988892
    2. ' a' → logprob: -1.6279617547988892
    3. ' sum' → logprob: -2.8779616355895996
    4. 'sum' → logprob: -2.8779616355895996
    5. 'total' → logprob: -3.6279616355895996
    6. ' total' → logprob: -3.7529616355895996
    7. 'self' → logprob: -3.7529616355895996
    8. 'b' → logprob: -4.5029616355896
    9. 'x' → logprob: -4.5029616355896
    10. '0' → logprob: -4.8779616355896

Token 1838: 'sum' (ID: 12298)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.41690880060195923
    2. 'x' → logprob: -1.6669087409973145
    3. ')' → logprob: -3.1669087409973145
    4. '`' → logprob: -3.5419087409973145
    5. ' a' → logprob: -4.0419087409973145
    6. 'sum' → logprob: -4.2919087409973145
    7. '2' → logprob: -4.5419087409973145
    8. 'total' → logprob: -5.1669087409973145
    9. 'b' → logprob: -5.2919087409973145
    10. ' x' → logprob: -5.4169087409973145

Token 1839: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.4788089394569397
    2. ' a' → logprob: -0.9788089394569397
    3. ' ' → logprob: -6.978808879852295
    4. ' of' → logprob: -6.978808879852295
    5. ')' → logprob: -7.353808879852295
    6. ' (' → logprob: -8.603809356689453
    7. ' )' → logprob: -8.728809356689453
    8. '```' → logprob: -8.728809356689453
    9. 'of' → logprob: -8.853809356689453
    10. ' #' → logprob: -8.853809356689453

Token 1840: '_i' (ID: 10853)
  Prédit: '_i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_i' → logprob: -0.0004521222144830972
    2. '_' → logprob: -8.625452041625977
    3. ')_' → logprob: -9.375452041625977
    4. '```' → logprob: -9.750452041625977
    5. 'i' → logprob: -10.125452041625977
    6. ')' → logprob: -10.500452041625977
    7. '_
' → logprob: -11.625452041625977
    8. '}_' → logprob: -12.000452041625977
    9. '   ' → logprob: -12.125452041625977
    10. '`' → logprob: -12.500452041625977

Token 1841: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.07308895140886307
    2. '*' → logprob: -3.1980888843536377
    3. ')' → logprob: -3.9480888843536377
    4. '*b' → logprob: -5.323089122772217
    5. '```' → logprob: -6.323089122772217
    6. ',' → logprob: -6.573089122772217
    7. 'def' → logprob: -7.323089122772217
    8. '),' → logprob: -7.948089122772217
    9. '
' → logprob: -8.573088645935059
    10. ' ' → logprob: -8.823088645935059

Token 1842: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -6.8497312895488e-05
    2. ' b' → logprob: -9.625068664550781
    3. 'i' → logprob: -13.875068664550781
    4. '```' → logprob: -14.500068664550781
    5. '_i' → logprob: -15.000068664550781
    6. ' ' → logprob: -15.875068664550781
    7. 'bi' → logprob: -16.00006866455078
    8. '`' → logprob: -16.25006866455078
    9. '_b' → logprob: -16.37506866455078
    10. '``' → logprob: -16.62506866455078

Token 1843: '_i' (ID: 10853)
  Prédit: '_i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_i' → logprob: -0.00011164903844473884
    2. 'i' → logprob: -9.12511157989502
    3. '_j' → logprob: -14.37511157989502
    4. '_' → logprob: -14.37511157989502
    5. '```' → logprob: -14.50011157989502
    6. ''_' → logprob: -15.37511157989502
    7. ' _' → logprob: -15.62511157989502
    8. '_b' → logprob: -15.75011157989502
    9. ')' → logprob: -16.000112533569336
    10. ')_' → logprob: -16.375112533569336

Token 1844: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0047525265254080296
    2. ')
' → logprob: -6.8797526359558105
    3. '*' → logprob: -7.1297526359558105
    4. ' )' → logprob: -7.3797526359558105
    5. ')*' → logprob: -7.6297526359558105
    6. '```' → logprob: -8.004752159118652
    7. ')_' → logprob: -8.379752159118652
    8. '`)' → logprob: -8.629752159118652
    9. ')`' → logprob: -8.754752159118652
    10. '*)' → logprob: -9.004752159118652

Token 1845: ' *' (ID: 425)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.6696498990058899
    2. 'def' → logprob: -2.294649839401245
    3. '```' → logprob: -2.419649839401245
    4. '   ' → logprob: -2.919649839401245
    5. '<|end|>' → logprob: -2.919649839401245
    6. ')' → logprob: -3.044649839401245
    7. ',' → logprob: -3.794649839401245
    8. '**' → logprob: -3.919649839401245
    9. ':' → logprob: -4.044650077819824
    10. '<|end|>' → logprob: -4.169650077819824

Token 1846: ' ' (ID: 220)
  Prédit: '(x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.16683538258075714
    2. ' (' → logprob: -2.791835308074951
    3. '2' → logprob: -3.041835308074951
    4. '{' → logprob: -3.791835308074951
    5. '(' → logprob: -4.666835308074951
    6. '{x' → logprob: -5.291835308074951
    7. '
' → logprob: -6.041835308074951
    8. '1' → logprob: -6.416835308074951
    9. '0' → logprob: -6.666835308074951
    10. ' ' → logprob: -7.041835308074951

Token 1847: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.02439265139400959
    2. '(' → logprob: -5.149392604827881
    3. '0' → logprob: -5.399392604827881
    4. '1' → logprob: -5.649392604827881
    5. '(x' → logprob: -6.024392604827881
    6. 'unknown' → logprob: -6.274392604827881
    7. 'None' → logprob: -6.524392604827881
    8. 'x' → logprob: -7.399392604827881
    9. '
' → logprob: -7.524392604827881
    10. ' (' → logprob: -7.524392604827881

Token 1848: '^{' (ID: 42923)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.2322622537612915
    2. '
' → logprob: -1.4822622537612915
    3. '+' → logprob: -2.107262134552002
    4. '**' → logprob: -2.857262134552002
    5. '<|end|>' → logprob: -2.857262134552002
    6. '#' → logprob: -3.357262134552002
    7. '+
' → logprob: -3.357262134552002
    8. '^' → logprob: -3.357262134552002
    9. '_' → logprob: -3.982262134552002
    10. 'x' → logprob: -4.357262134552002

Token 1849: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.009896920993924141
    2. '(x' → logprob: -4.884896755218506
    3. '0' → logprob: -6.884896755218506
    4. '(' → logprob: -7.884896755218506
    5. ' (' → logprob: -8.634897232055664
    6. '
' → logprob: -8.884897232055664
    7. 'y' → logprob: -9.259897232055664
    8. '#' → logprob: -9.759897232055664
    9. '...' → logprob: -10.259897232055664
    10. 'a' → logprob: -10.384897232055664

Token 1850: '+y' (ID: 102753)
  Prédit: '+y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+y' → logprob: -0.00861209537833929
    2. '_y' → logprob: -5.758612155914307
    3. 'y' → logprob: -6.508612155914307
    4. '+' → logprob: -6.508612155914307
    5. '+x' → logprob: -7.883612155914307
    6. '(' → logprob: -8.383611679077148
    7. '+b' → logprob: -8.508611679077148
    8. '_i' → logprob: -8.508611679077148
    9. '```' → logprob: -8.508611679077148
    10. '_plus' → logprob: -8.758611679077148

Token 1851: '}

' (ID: 943)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -1.091475486755371
    2. '```' → logprob: -1.216475486755371
    3. '       ' → logprob: -2.591475486755371
    4. ']' → logprob: -2.716475486755371
    5. 'def' → logprob: -3.091475486755371
    6. ':
' → logprob: -3.841475486755371
    7. '   ' → logprob: -3.966475486755371
    8. ')' → logprob: -3.966475486755371
    9. 's' → logprob: -3.966475486755371
    10. ':' → logprob: -4.091475486755371

Token 1852: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.844611644744873
    2. '
' → logprob: -1.469611644744873
    3. '```' → logprob: -1.469611644744873
    4. 'from' → logprob: -3.219611644744873
    5. 'def' → logprob: -3.594611644744873
    6. 'class' → logprob: -4.344611644744873
    7. '#' → logprob: -4.844611644744873
    8. '<|end|>' → logprob: -5.094611644744873
    9. '   ' → logprob: -5.344611644744873
    10. '[
' → logprob: -6.719611644744873

Token 1853: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.24249671399593353
    2. '#' (adapté à ' #') → logprob: -3.1174967288970947
    3. '```' → logprob: -3.1174967288970947
    4. '   ' → logprob: -4.117496490478516
    5. '.' → logprob: -4.242496490478516
    6. ',' → logprob: -4.367496490478516
    7. 'from' → logprob: -4.367496490478516
    8. '
' → logprob: -4.492496490478516
    9. 'def' → logprob: -4.617496490478516
    10. 'return' → logprob: -4.742496490478516

Token 1854: ' Since' (ID: 12265)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.32385528087615967
    2. 'def' → logprob: -2.448855400085449
    3. 'from' → logprob: -2.698855400085449
    4. '```' → logprob: -2.698855400085449
    5. '#' → logprob: -3.573855400085449
    6. '
' → logprob: -4.948855400085449
    7. ')' → logprob: -5.948855400085449
    8. '           ' → logprob: -6.073855400085449
    9. 'return' → logprob: -6.073855400085449
    10. '   ' → logprob: -6.698855400085449

Token 1855: ' ' (ID: 220)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -1.4917192459106445
    2. '`' → logprob: -1.6167192459106445
    3. '```' → logprob: -1.9917192459106445
    4. ' the' → logprob: -2.4917192459106445
    5. ' a' → logprob: -2.9917192459106445
    6. 'b' → logprob: -3.1167192459106445
    7. 'the' → logprob: -3.3667192459106445
    8. '#' → logprob: -3.6167192459106445
    9. ' total' → logprob: -4.1167192459106445
    10. '0' → logprob: -4.1167192459106445

Token 1856: '2' (ID: 17)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.7165430188179016
    2. 'len' → logprob: -2.216542959213257
    3. 'def' → logprob: -2.341542959213257
    4. 'b' → logprob: -2.841542959213257
    5. 'total' → logprob: -2.841542959213257
    6. '#' → logprob: -3.466542959213257
    7. 'self' → logprob: -3.591542959213257
    8. 'sum' → logprob: -3.716542959213257
    9. 'True' → logprob: -4.216543197631836
    10. '
' → logprob: -4.216543197631836

Token 1857: '^{' (ID: 42923)
  Prédit: '^'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '^' → logprob: -0.9242852926254272
    2. '**' → logprob: -1.1742852926254272
    3. '0' → logprob: -1.6742852926254272
    4. '
' → logprob: -3.549285411834717
    5. '^{' → logprob: -3.799285411834717
    6. '_' → logprob: -4.299285411834717
    7. '#' → logprob: -4.799285411834717
    8. '```' → logprob: -5.174285411834717
    9. ' **' → logprob: -5.799285411834717
    10. '\' → logprob: -6.049285411834717

Token 1858: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.06358297169208527
    2. '(x' → logprob: -3.0635828971862793
    3. '(a' → logprob: -5.313582897186279
    4. 'a' → logprob: -5.563582897186279
    5. 'y' → logprob: -6.063582897186279
    6. '0' → logprob: -6.188582897186279
    7. '(' → logprob: -7.438582897186279
    8. '
' → logprob: -8.938583374023438
    9. '-' → logprob: -9.063583374023438
    10. '64' → logprob: -9.313583374023438

Token 1859: '+y' (ID: 102753)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.18764182925224304
    2. '}' → logprob: -2.5626418590545654
    3. '_' → logprob: -3.9376418590545654
    4. '^' → logprob: -4.187641620635986
    5. '+y' → logprob: -4.812641620635986
    6. '*' → logprob: -4.812641620635986
    7. ',' → logprob: -4.937641620635986
    8. '+
' → logprob: -5.062641620635986
    9. '```' → logprob: -5.437641620635986
    10. '
' → logprob: -5.562641620635986

Token 1860: '}' (ID: 92)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.709632933139801
    2. '}' → logprob: -1.2096328735351562
    3. '`' → logprob: -2.7096328735351562
    4. '```' → logprob: -2.8346328735351562
    5. '_' → logprob: -3.7096328735351562
    6. '}`' → logprob: -4.834632873535156
    7. '+
' → logprob: -5.209632873535156
    8. ')' → logprob: -5.334632873535156
    9. '-' → logprob: -5.334632873535156
    10. '}
' → logprob: -5.584632873535156

Token 1861: ' is' (ID: 382)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '```' → logprob: -1.3219658136367798
    2. '<|end|>' → logprob: -1.9469658136367798
    3. '**' → logprob: -2.0719656944274902
    4. '=' → logprob: -2.1969656944274902
    5. '
' → logprob: -2.6969656944274902
    6. ' =' → logprob: -2.9469656944274902
    7. ',' → logprob: -3.3219656944274902
    8. ':' → logprob: -3.4469656944274902
    9. '#' → logprob: -3.5719656944274902
    10. ')' → logprob: -3.6969656944274902

Token 1862: ' constant' (ID: 9594)
  Prédit: 'unknown'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'unknown' → logprob: -0.5602733492851257
    2. 'constant' → logprob: -1.9352734088897705
    3. 'a' → logprob: -2.1852734088897705
    4. '1' → logprob: -2.6852734088897705
    5. 'known' → logprob: -3.0602734088897705
    6. 'fixed' → logprob: -4.310273170471191
    7. 'the' → logprob: -4.935273170471191
    8. ' unknown' → logprob: -5.685273170471191
    9. ' constant' → logprob: -5.685273170471191
    10. 'not' → logprob: -5.810273170471191

Token 1863: ' but' (ID: 889)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2644519805908203
    2. '
' → logprob: -1.6394519805908203
    3. ',' → logprob: -4.13945198059082
    4. ':
' → logprob: -5.63945198059082
    5. '#' → logprob: -6.26445198059082
    6. '   ' → logprob: -6.38945198059082
    7. ' and' → logprob: -6.51445198059082
    8. ',
' → logprob: -6.51445198059082
    9. '```' → logprob: -6.51445198059082
    10. 'from' → logprob: -6.76445198059082

Token 1864: ' unknown' (ID: 17927)
  Prédit: 'undefined'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'undefined' → logprob: -1.289272427558899
    2. 'not' → logprob: -2.0392723083496094
    3. '#' → logprob: -2.1642723083496094
    4. 'the' → logprob: -2.2892723083496094
    5. 'unknown' → logprob: -2.2892723083496094
    6. '
' → logprob: -3.1642723083496094
    7. '...' → logprob: -3.2892723083496094
    8. 'None' → logprob: -4.164272308349609
    9. ' not' → logprob: -4.289272308349609
    10. ' the' → logprob: -4.414272308349609

Token 1865: ',' (ID: 11)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2896011173725128
    2. 'def' → logprob: -1.7896010875701904
    3. '
' → logprob: -4.1646013259887695
    4. '   ' → logprob: -4.1646013259887695
    5. 'from' → logprob: -4.7896013259887695
    6. '```' → logprob: -4.7896013259887695
    7. '#' → logprob: -5.0396013259887695
    8. ',' → logprob: -5.1646013259887695
    9. ':
' → logprob: -5.2896013259887695
    10. ':' → logprob: -5.2896013259887695

Token 1866: ' as' (ID: 472)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.6661036014556885
    2. '       ' → logprob: -1.1661036014556885
    3. '   ' → logprob: -2.5411036014556885
    4. '```' → logprob: -3.6661036014556885
    5. 'def' → logprob: -4.041103363037109
    6. ':' → logprob: -4.041103363037109
    7. ',' → logprob: -5.541103363037109
    8. ')' → logprob: -5.666103363037109
    9. ':
' → logprob: -5.791103363037109
    10. '        
' → logprob: -5.916103363037109

Token 1867: ' is' (ID: 382)
  Prédit: 'the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'the' → logprob: -1.4023332595825195
    2. 'we' → logprob: -2.0273332595825195
    3. '#' → logprob: -2.1523332595825195
    4. 'a' → logprob: -2.1523332595825195
    5. 'sum' → logprob: -2.1523332595825195
    6. 'such' → logprob: -2.7773332595825195
    7. 'x' → logprob: -3.4023332595825195
    8. ' the' → logprob: -3.5273332595825195
    9. ' such' → logprob: -3.7773332595825195
    10. ' we' → logprob: -4.2773332595825195

Token 1868: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -1.2048380374908447
    2. 'the' → logprob: -1.2048380374908447
    3. 'a' → logprob: -2.0798380374908447
    4. 'unknown' → logprob: -2.2048380374908447
    5. 'not' → logprob: -3.2048380374908447
    6. 'sum' → logprob: -3.3298380374908447
    7. 'total' → logprob: -4.829837799072266
    8. '#' → logprob: -4.954837799072266
    9. 'b' → logprob: -5.079837799072266
    10. 'undefined' → logprob: -5.204837799072266

Token 1869: ',y' (ID: 16103)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.24460214376449585
    2. '   ' → logprob: -3.2446022033691406
    3. '+' → logprob: -3.6196022033691406
    4. ':' → logprob: -3.8696022033691406
    5. '_' → logprob: -4.119602203369141
    6. '```' → logprob: -4.119602203369141
    7. ')' → logprob: -4.244602203369141
    8. '#' → logprob: -4.244602203369141
    9. '
' → logprob: -4.619602203369141
    10. '=' → logprob: -4.994602203369141

Token 1870: ' >=' (ID: 5064)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6959728002548218
    2. '
' → logprob: -1.0709728002548218
    3. '```' → logprob: -2.8209729194641113
    4. ',' → logprob: -3.9459729194641113
    5. ':
' → logprob: -4.445972919464111
    6. '   ' → logprob: -4.570972919464111
    7. 'from' → logprob: -5.070972919464111
    8. ':' → logprob: -5.195972919464111
    9. ')' → logprob: -5.195972919464111
    10. '#' → logprob: -5.320972919464111

Token 1871: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0011904643615707755
    2. ' ' → logprob: -6.751190662384033
    3. '1' → logprob: -11.376190185546875
    4. '```' → logprob: -13.251190185546875
    5. '#' → logprob: -13.876190185546875
    6. 'def' → logprob: -14.126190185546875
    7. '-' → logprob: -14.126190185546875
    8. ' ' → logprob: -14.376190185546875
    9. '
' → logprob: -14.688690185546875
    10. '   ' → logprob: -14.751190185546875

Token 1872: ',' (ID: 11)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.40808263421058655
    2. '       ' → logprob: -1.2830826044082642
    3. 'def' → logprob: -4.283082485198975
    4. 'from' → logprob: -4.658082485198975
    5. '   ' → logprob: -4.908082485198975
    6. '```' → logprob: -5.033082485198975
    7. ',' → logprob: -5.158082485198975
    8. 'class' → logprob: -5.658082485198975
    9. '

' → logprob: -6.533082485198975
    10. '#' → logprob: -6.533082485198975

Token 1873: ' to' (ID: 316)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.9285770654678345
    2. '
' → logprob: -1.8035770654678345
    3. '```' → logprob: -2.053576946258545
    4. 'def' → logprob: -2.428576946258545
    5. 'from' → logprob: -2.678576946258545
    6. '   ' → logprob: -2.678576946258545
    7. '#' → logprob: -4.303576946258545
    8. ':
' → logprob: -4.553576946258545
    9. ':' → logprob: -4.553576946258545
    10. '           ' → logprob: -4.803576946258545

Token 1874: ' minimize' (ID: 41776)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.21618957817554474
    2. 'represent' → logprob: -3.3411896228790283
    3. ' minimize' → logprob: -3.3411896228790283
    4. 'find' → logprob: -3.7161896228790283
    5. 'ach' → logprob: -4.091189384460449
    6. 'output' → logprob: -4.216189384460449
    7. 'produce' → logprob: -4.591189384460449
    8. 'make' → logprob: -4.841189384460449
    9. 'combine' → logprob: -4.966189384460449
    10. 'solve' → logprob: -5.216189384460449

Token 1875: ' chunk' (ID: 23958)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '```' → logprob: -0.7351985573768616
    2. 'def' → logprob: -1.8601984977722168
    3. 'a' → logprob: -2.485198497772217
    4. 'from' → logprob: -3.235198497772217
    5. '
' → logprob: -3.235198497772217
    6. 'b' → logprob: -3.610198497772217
    7. '0' → logprob: -3.860198497772217
    8. '[
' → logprob: -3.860198497772217
    9. '       ' → logprob: -3.860198497772217
    10. '   ' → logprob: -4.110198497772217

Token 1876: ' count' (ID: 3605)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.015100480988621712
    2. '_count' → logprob: -4.890100479125977
    3. ' count' → logprob: -5.265100479125977
    4. 'number' → logprob: -7.265100479125977
    5. 's' → logprob: -7.890100479125977
    6. '数' → logprob: -7.890100479125977
    7. 'counts' → logprob: -8.265100479125977
    8. '
' → logprob: -8.640100479125977
    9. '   ' → logprob: -9.265100479125977
    10. ',' → logprob: -10.015100479125977

Token 1877: '

' (ID: 279)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.37820249795913696
    2. 'def' → logprob: -3.003202438354492
    3. ':' → logprob: -3.128202438354492
    4. '   ' → logprob: -3.253202438354492
    5. '
' → logprob: -3.253202438354492
    6. '```' → logprob: -3.378202438354492
    7. ':
' → logprob: -3.503202438354492
    8. ',' → logprob: -3.753202438354492
    9. 'from' → logprob: -3.753202438354492
    10. '#' → logprob: -5.128202438354492

Token 1878: '       ' (ID: 309)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.0128141641616821
    2. '   ' → logprob: -1.0128141641616821
    3. '       ' → logprob: -2.2628140449523926
    4. ':' → logprob: -2.5128140449523926
    5. ',
' → logprob: -4.137814044952393
    6. '#' → logprob: -4.512814044952393
    7. ':
' → logprob: -4.637814044952393
    8. '.' → logprob: -4.637814044952393
    9. 'def' → logprob: -4.637814044952393
    10. '
' → logprob: -5.512814044952393

Token 1879: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.23752586543560028
    2. '   ' → logprob: -2.3625259399414062
    3. ':' → logprob: -3.2375259399414062
    4. '```' → logprob: -3.3625259399414062
    5. ',' → logprob: -4.612525939941406
    6. '`' → logprob: -5.112525939941406
    7. '           ' → logprob: -5.612525939941406
    8. '[' → logprob: -6.112525939941406
    9. ' ' → logprob: -6.112525939941406
    10. '.' → logprob: -6.737525939941406

Token 1880: ' The' (ID: 623)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'from' → logprob: -1.123870849609375
    2. '#' → logprob: -1.248870849609375
    3. 'def' → logprob: -1.873870849609375
    4. '       ' → logprob: -2.998870849609375
    5. 'weights' → logprob: -3.623870849609375
    6. 'a' → logprob: -3.748870849609375
    7. '[
' → logprob: -4.248870849609375
    8. ':
' → logprob: -4.498870849609375
    9. '{
' → logprob: -4.498870849609375
    10. 'return' → logprob: -4.623870849609375

Token 1881: ' problem' (ID: 4792)
  Prédit: ' best'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' best' → logprob: -1.1903345584869385
    2. '`' → logprob: -1.9403345584869385
    3. '```' → logprob: -1.9403345584869385
    4. 'best' → logprob: -2.3153345584869385
    5. '#' → logprob: -2.9403345584869385
    6. 'a' → logprob: -3.6903345584869385
    7. ' next' → logprob: -3.9403345584869385
    8. '
' → logprob: -4.065334320068359
    9. 'def' → logprob: -4.065334320068359
    10. 's' → logprob: -4.065334320068359

Token 1882: ' is' (ID: 382)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.9020094275474548
    2. '```' → logprob: -1.5270094871520996
    3. ':' → logprob: -1.7770094871520996
    4. 'def' → logprob: -2.5270094871520996
    5. ' def' → logprob: -4.0270094871521
    6. '`' → logprob: -4.1520094871521
    7. 's' → logprob: -4.2770094871521
    8. '       ' → logprob: -4.2770094871521
    9. '
' → logprob: -4.4020094871521
    10. ''' → logprob: -5.2770094871521

Token 1883: ' to' (ID: 316)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.6450425982475281
    2. ' def' → logprob: -1.6450426578521729
    3. '```' → logprob: -1.6450426578521729
    4. '       ' → logprob: -3.395042657852173
    5. '
' → logprob: -4.145042419433594
    6. '#' → logprob: -5.020042419433594
    7. '   ' → logprob: -5.395042419433594
    8. ':' → logprob: -5.395042419433594
    9. '"' → logprob: -6.145042419433594
    10. 'self' → logprob: -6.270042419433594

Token 1884: ' express' (ID: 6101)
  Prédit: 'find'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'find' → logprob: -0.19053272902965546
    2. 'write' → logprob: -3.190532684326172
    3. 'split' → logprob: -3.315532684326172
    4. 'represent' → logprob: -3.315532684326172
    5. 'factor' → logprob: -4.190532684326172
    6. 'de' → logprob: -4.565532684326172
    7. 'def' → logprob: -4.565532684326172
    8. ' find' → logprob: -5.565532684326172
    9. 'express' → logprob: -5.940532684326172
    10. 'combine' → logprob: -6.190532684326172

Token 1885: ' sum' (ID: 4215)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '```' → logprob: -0.9807896614074707
    2. '`' → logprob: -1.7307896614074707
    3. ' the' → logprob: -2.7307896614074707
    4. ' a' → logprob: -2.9807896614074707
    5. '[
' → logprob: -3.1057896614074707
    6. 'a' → logprob: -3.1057896614074707
    7. ''' → logprob: -3.6057896614074707
    8. ' \' → logprob: -3.7307896614074707
    9. '[' → logprob: -3.7307896614074707
    10. 'the' → logprob: -4.105789661407471

Token 1886: ' over' (ID: 1072)
  Prédit: ' a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.4220990240573883
    2. 'a' → logprob: -1.422098994255066
    3. '```' → logprob: -3.5470991134643555
    4. ' ' → logprob: -4.0470991134643555
    5. ' =' → logprob: -4.6720991134643555
    6. ' of' → logprob: -5.1720991134643555
    7. ' (' → logprob: -5.4220991134643555
    8. '(' → logprob: -5.5470991134643555
    9. '[
' → logprob: -5.7970991134643555
    10. '_' → logprob: -6.0470991134643555

Token 1887: ' chunks' (ID: 53440)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.20201966166496277
    2. 'i' → logprob: -2.327019691467285
    3. 'chunks' → logprob: -2.702019691467285
    4. 'all' → logprob: -5.077019691467285
    5. 'chunk' → logprob: -5.702019691467285
    6. '_i' → logprob: -6.702019691467285
    7. 'weights' → logprob: -6.702019691467285
    8. 'b' → logprob: -6.827019691467285
    9. 'the' → logprob: -7.077019691467285
    10. ' chunks' → logprob: -7.452019691467285

Token 1888: ':' (ID: 25)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.0280241966247559
    2. '
' → logprob: -1.5280241966247559
    3. '       ' → logprob: -1.5280241966247559
    4. '```' → logprob: -2.403024196624756
    5. '<|end|>' → logprob: -4.028024196624756
    6. ':' → logprob: -4.278024196624756
    7. ',' → logprob: -4.528024196624756
    8. '\n' → logprob: -4.778024196624756
    9. 'def' → logprob: -4.778024196624756
    10. '<|end|>' → logprob: -4.778024196624756

Token 1889: ' a' (ID: 261)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.9629936814308167
    2. 'def' → logprob: -1.5879936218261719
    3. '```' → logprob: -1.5879936218261719
    4. '       ' → logprob: -2.587993621826172
    5. '[
' → logprob: -3.337993621826172
    6. 'a' → logprob: -4.087993621826172
    7. '#' → logprob: -4.337993621826172
    8. 'class' → logprob: -4.712993621826172
    9. ' from' → logprob: -4.712993621826172
    10. '
' → logprob: -4.962993621826172

Token 1890: '_i' (ID: 10853)
  Prédit: '_i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_i' → logprob: -0.007955331355333328
    2. '_' → logprob: -4.882955551147461
    3. 'i' → logprob: -9.882955551147461
    4. ' _' → logprob: -10.007955551147461
    5. '_n' → logprob: -10.257955551147461
    6. '_
' → logprob: -10.507955551147461
    7. 's' → logprob: -10.507955551147461
    8. ''_' → logprob: -11.007955551147461
    9. '[' → logprob: -11.132955551147461
    10. '_j' → logprob: -11.257955551147461

Token 1891: '*b' (ID: 72162)
  Prédit: ' *'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.0624343566596508
    2. '*' → logprob: -3.312434434890747
    3. ',' → logprob: -4.062434196472168
    4. '```' → logprob: -6.937434196472168
    5. '*b' → logprob: -6.937434196472168
    6. '_i' → logprob: -6.937434196472168
    7. ',b' → logprob: -7.062434196472168
    8. ' ,' → logprob: -7.562434196472168
    9. ')' → logprob: -7.812434196472168
    10. '[' → logprob: -8.312434196472168

Token 1892: '_i' (ID: 10853)
  Prédit: '_i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_i' → logprob: -0.05312037095427513
    2. '_' → logprob: -3.0531203746795654
    3. 'i' → logprob: -6.053120136260986
    4. ' _' → logprob: -7.553120136260986
    5. ''_' → logprob: -8.428120613098145
    6. '```' → logprob: -8.428120613098145
    7. ')_' → logprob: -8.928120613098145
    8. '_b' → logprob: -9.053120613098145
    9. ')' → logprob: -9.178120613098145
    10. '_j' → logprob: -9.178120613098145

Token 1893: ' with' (ID: 483)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '```' → logprob: -1.2002631425857544
    2. '
' → logprob: -1.8252631425857544
    3. '<|end|>' → logprob: -1.8252631425857544
    4. '   ' → logprob: -2.450263023376465
    5. 'def' → logprob: -3.075263023376465
    6. ',' → logprob: -3.450263023376465
    7. '       ' → logprob: -3.575263023376465
    8. 'import' → logprob: -3.700263023376465
    9. ':' → logprob: -3.825263023376465
    10. '<|end|>' → logprob: -3.950263023376465

Token 1894: ' minimal' (ID: 19957)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.8283101916313171
    2. 'a' → logprob: -2.203310251235962
    3. 'default' → logprob: -2.453310251235962
    4. '0' → logprob: -2.703310251235962
    5. 'b' → logprob: -2.703310251235962
    6. '```' → logprob: -2.953310251235962
    7. 'the' → logprob: -3.453310251235962
    8. '1' → logprob: -3.703310251235962
    9. '2' → logprob: -3.953310251235962
    10. 'weight' → logprob: -4.078310012817383

Token 1895: ' number' (ID: 2086)
  Prédit: '_chunks'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_chunks' → logprob: -0.8308526873588562
    2. '_' → logprob: -1.580852746963501
    3. '```' → logprob: -2.830852746963501
    4. '`' → logprob: -3.080852746963501
    5. ' _' → logprob: -3.330852746963501
    6. '_chunk' → logprob: -3.705852746963501
    7. '_
' → logprob: -3.830852746963501
    8. '
' → logprob: -3.830852746963501
    9. '+' → logprob: -3.955852746963501
    10. '_count' → logprob: -3.955852746963501

Token 1896: ' of' (ID: 328)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -1.4874603748321533
    2. '```' → logprob: -1.4874603748321533
    3. 'def' → logprob: -2.3624603748321533
    4. '_' → logprob: -2.4874603748321533
    5. 's' → logprob: -3.2374603748321533
    6. '\' → logprob: -3.7374603748321533
    7. '   ' → logprob: -3.8624603748321533
    8. '#' → logprob: -3.9874603748321533
    9. '_i' → logprob: -3.9874603748321533
    10. '**' → logprob: -4.112460136413574

Token 1897: ' chunks' (ID: 53440)
  Prédit: 'chunks'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'chunks' → logprob: -0.019451677799224854
    2. ' chunks' → logprob: -4.51945161819458
    3. '```' → logprob: -6.26945161819458
    4. 'lines' → logprob: -6.39445161819458
    5. 'tokens' → logprob: -6.51945161819458
    6. '1' → logprob: -7.26945161819458
    7. '
' → logprob: -7.51945161819458
    8. 'pieces' → logprob: -8.019452095031738
    9. 'chunk' → logprob: -8.269452095031738
    10. ' lines' → logprob: -9.019452095031738

Token 1898: ' a' (ID: 261)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4542612135410309
    2. '
' → logprob: -1.5792611837387085
    3. 'def' → logprob: -3.204261302947998
    4. ':
' → logprob: -3.579261302947998
    5. '```' → logprob: -3.579261302947998
    6. ':' → logprob: -4.329261302947998
    7. '   ' → logprob: -4.579261302947998
    8. 'from' → logprob: -4.579261302947998
    9. ',' → logprob: -5.204261302947998
    10. '#' → logprob: -6.079261302947998

Token 1899: '_j' (ID: 12021)
  Prédit: '_i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_i' → logprob: -0.04500929266214371
    2. '_' → logprob: -4.045009136199951
    3. 's' → logprob: -4.920009136199951
    4. 'd' → logprob: -5.795009136199951
    5. '_
' → logprob: -6.045009136199951
    6. '=' → logprob: -6.420009136199951
    7. 'r' → logprob: -6.420009136199951
    8. 'dd' → logprob: -6.670009136199951
    9. ' =' → logprob: -6.670009136199951
    10. '
' → logprob: -7.295009136199951

Token 1900: '*b' (ID: 72162)
  Prédit: '_i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_i' → logprob: -0.9466186165809631
    2. ',' → logprob: -1.8216185569763184
    3. '=' → logprob: -2.3216185569763184
    4. '_' → logprob: -2.9466185569763184
    5. '+' → logprob: -3.0716185569763184
    6. ' =' → logprob: -3.1966185569763184
    7. '   ' → logprob: -3.5716185569763184
    8. '       ' → logprob: -3.6966185569763184
    9. ' +' → logprob: -3.9466185569763184
    10. 's' → logprob: -3.9466185569763184

Token 1901: '_j' (ID: 12021)
  Prédit: '_i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_i' → logprob: -0.10380027443170547
    2. '_' → logprob: -2.3538002967834473
    3. ''_' → logprob: -6.728800296783447
    4. '_j' → logprob: -6.978800296783447
    5. 'i' → logprob: -8.228799819946289
    6. ' _' → logprob: -8.353799819946289
    7. ')_' → logprob: -8.728799819946289
    8. ')' → logprob: -8.978799819946289
    9. ''' → logprob: -9.103799819946289
    10. '_\' → logprob: -9.353799819946289

Token 1902: ' with' (ID: 483)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.7080228924751282
    2. '   ' → logprob: -1.5830228328704834
    3. ':' → logprob: -2.3330228328704834
    4. 'def' → logprob: -3.0830228328704834
    5. '       ' → logprob: -3.2080228328704834
    6. ':
' → logprob: -3.4580228328704834
    7. '```' → logprob: -3.7080228328704834
    8. ',' → logprob: -4.4580230712890625
    9. '[' → logprob: -5.0830230712890625
    10. '

' → logprob: -5.3330230712890625

Token 1903: ' total' (ID: 3609)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.5423842072486877
    2. '1' → logprob: -1.667384147644043
    3. '```' → logprob: -1.917384147644043
    4. 'a' → logprob: -3.167384147644043
    5. 'b' → logprob: -4.167384147644043
    6. ' ' → logprob: -4.917384147644043
    7. 'g' → logprob: -5.542384147644043
    8. 'sum' → logprob: -6.292384147644043
    9. 'def' → logprob: -6.542384147644043
    10. 'weight' → logprob: -6.542384147644043

Token 1904: ' sum' (ID: 4215)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.37346091866493225
    2. ' _' → logprob: -2.2484610080718994
    3. '_i' → logprob: -3.2484610080718994
    4. ' \' → logprob: -3.4984610080718994
    5. '=' → logprob: -3.6234610080718994
    6. ' =' → logprob: -4.12346076965332
    7. '```' → logprob: -4.12346076965332
    8. ' +' → logprob: -4.74846076965332
    9. '
' → logprob: -4.87346076965332
    10. '_
' → logprob: -4.99846076965332

Token 1905: ' equal' (ID: 12629)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -1.1377781629562378
    2. '```' → logprob: -1.7627781629562378
    3. '   ' → logprob: -2.1377782821655273
    4. 'def' → logprob: -2.6377782821655273
    5. ':' → logprob: -2.7627782821655273
    6. '=' → logprob: -2.8877782821655273
    7. 'from' → logprob: -3.1377782821655273
    8. ',' → logprob: -3.2627782821655273
    9. ' =' → logprob: -3.3877782821655273
    10. '       ' → logprob: -4.137778282165527

Token 1906: '.

' (ID: 364)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -1.139985203742981
    2. '```' → logprob: -1.889985203742981
    3. '_' → logprob: -2.5149850845336914
    4. '
' → logprob: -2.6399850845336914
    5. ' =' → logprob: -2.6399850845336914
    6. '   ' → logprob: -3.0149850845336914
    7. ' ' → logprob: -3.3899850845336914
    8. ',' → logprob: -3.7649850845336914
    9. 'def' → logprob: -4.014985084533691
    10. '0' → logprob: -4.264985084533691

Token 1907: '       ' (ID: 309)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.49001896381378174
    2. '       ' → logprob: -1.2400189638137817
    3. 'from' → logprob: -2.990018844604492
    4. '```' → logprob: -3.490018844604492
    5. '
' → logprob: -5.115018844604492
    6. '   ' → logprob: -6.365018844604492
    7. ':' → logprob: -6.490018844604492
    8. '#' → logprob: -6.490018844604492
    9. ')' → logprob: -6.740018844604492
    10. 'return' → logprob: -7.240018844604492

Token 1908: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6136850118637085
    2. 'def' → logprob: -1.1136850118637085
    3. '   ' → logprob: -2.863685131072998
    4. '```' → logprob: -3.738685131072998
    5. 'from' → logprob: -4.363685131072998
    6. ':' → logprob: -4.488685131072998
    7. ':
' → logprob: -4.613685131072998
    8. '
' → logprob: -5.238685131072998
    9. '#' (adapté à ' #') → logprob: -6.363685131072998
    10. ')' → logprob: -6.988685131072998

Token 1909: ' The' (ID: 623)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.9341022372245789
    2. 'def' → logprob: -1.3091022968292236
    3. 'from' → logprob: -1.4341022968292236
    4. '#' → logprob: -2.8091022968292236
    5. 'chunks' → logprob: -4.1841020584106445
    6. '```' → logprob: -4.3091020584106445
    7. 'a' → logprob: -6.1841020584106445
    8. '
' → logprob: -6.3091020584106445
    9. 'weights' → logprob: -6.8091020584106445
    10. '   ' → logprob: -7.5591020584106445

Token 1910: ' solution' (ID: 7578)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.19170218706130981
    2. '#' → logprob: -2.941702127456665
    3. '_' → logprob: -3.691702127456665
    4. 'a' → logprob: -4.316702365875244
    5. '```' → logprob: -4.441702365875244
    6. '
' → logprob: -4.816702365875244
    7. ']' → logprob: -5.066702365875244
    8. ')' → logprob: -5.316702365875244
    9. 'from' → logprob: -5.441702365875244
    10. 'b' → logprob: -5.441702365875244

Token 1911: ' is' (ID: 382)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.6196380853652954
    2. '```' → logprob: -1.8696380853652954
    3. '=' → logprob: -2.494637966156006
    4. ':' → logprob: -2.619637966156006
    5. 'def' → logprob: -3.369637966156006
    6. '`' → logprob: -3.744637966156006
    7. 's' → logprob: -3.869637966156006
    8. '   ' → logprob: -3.994637966156006
    9. '_' → logprob: -4.744637966156006
    10. '[' → logprob: -4.869637966156006

Token 1912: ' to' (ID: 316)
  Prédit: '[]
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]
' → logprob: -0.5394058227539062
    2. '[]' → logprob: -1.2894058227539062
    3. 'default' → logprob: -2.6644058227539062
    4. 'def' → logprob: -3.6644058227539062
    5. 'self' → logprob: -4.164405822753906
    6. '[' → logprob: -4.539405822753906
    7. ' defaultdict' → logprob: -5.414405822753906
    8. '[
' → logprob: -5.414405822753906
    9. '{}' → logprob: -6.039405822753906
    10. '[(' → logprob: -6.039405822753906

Token 1913: ' find' (ID: 1646)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -1.0529016256332397
    2. 'find' → logprob: -1.8029016256332397
    3. '[]' → logprob: -2.3029017448425293
    4. '[]
' → logprob: -2.4279017448425293
    5. 'de' → logprob: -2.5529017448425293
    6. 'break' → logprob: -3.4279017448425293
    7. 'default' → logprob: -3.5529017448425293
    8. 'write' → logprob: -3.6779017448425293
    9. 'split' → logprob: -3.6779017448425293
    10. 'from' → logprob: -3.9279017448425293

Token 1914: ' minimal' (ID: 19957)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -1.1082873344421387
    2. 'def' → logprob: -1.4832873344421387
    3. 'from' → logprob: -2.7332873344421387
    4. '[(' → logprob: -2.7332873344421387
    5. 'default' → logprob: -2.8582873344421387
    6. '[
' → logprob: -2.9832873344421387
    7. '```' → logprob: -3.1082873344421387
    8. '[]
' → logprob: -3.2332873344421387
    9. 'a' → logprob: -3.9832873344421387
    10. ' defaultdict' → logprob: -4.358287334442139

Token 1915: ' partition' (ID: 31512)
  Prédit: 'number'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'number' → logprob: -1.045241117477417
    2. '[
' → logprob: -1.920241117477417
    3. 'chunks' → logprob: -2.045241117477417
    4. 'def' → logprob: -2.170241117477417
    5. '_number' → logprob: -3.670241117477417
    6. '[]' → logprob: -3.670241117477417
    7. 'List' → logprob: -3.795241117477417
    8. '
' → logprob: -3.795241117477417
    9. '_chunks' → logprob: -3.920241117477417
    10. '```' → logprob: -4.045241355895996

Token 1916: ' of' (ID: 328)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3998885452747345
    2. '   ' → logprob: -1.774888515472412
    3. '
' → logprob: -3.274888515472412
    4. ':' → logprob: -3.649888515472412
    5. '```' → logprob: -3.774888515472412
    6. ':
' → logprob: -4.399888515472412
    7. 'def' → logprob: -4.899888515472412
    8. ')' → logprob: -5.524888515472412
    9. '#' → logprob: -5.524888515472412
    10. '[' → logprob: -5.649888515472412

Token 1917: ' sum' (ID: 4215)
  Prédit: 'total'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'total' → logprob: -0.198369562625885
    2. 'the' → logprob: -2.5733695030212402
    3. 'a' → logprob: -2.6983695030212402
    4. '{' → logprob: -4.69836950302124
    5. '{
' → logprob: -5.69836950302124
    6. '(total' → logprob: -5.82336950302124
    7. '
' → logprob: -5.94836950302124
    8. '9' → logprob: -5.94836950302124
    9. 'weights' → logprob: -5.94836950302124
    10. 'weight' → logprob: -5.94836950302124

Token 1918: '(a' (ID: 6271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -1.199760913848877
    2. ' =' → logprob: -2.074760913848877
    3. '```' → logprob: -2.199760913848877
    4. '=' → logprob: -2.699760913848877
    5. ' ' → logprob: -2.949760913848877
    6. '[' → logprob: -3.324760913848877
    7. 'def' → logprob: -3.449760913848877
    8. '   ' → logprob: -3.574760913848877
    9. '`' → logprob: -3.699760913848877
    10. ':' → logprob: -3.824760913848877

Token 1919: '_i' (ID: 10853)
  Prédit: '_i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_i' → logprob: -0.0411716029047966
    2. '_b' → logprob: -3.2911715507507324
    3. 'b' → logprob: -6.541171550750732
    4. 'i' → logprob: -7.041171550750732
    5. '_' → logprob: -8.29117202758789
    6. '_j' → logprob: -9.16617202758789
    7. '```' → logprob: -9.54117202758789
    8. '_p' → logprob: -9.79117202758789
    9. '}_' → logprob: -10.04117202758789
    10. '
' → logprob: -10.41617202758789

Token 1920: ' *' (ID: 425)
  Prédit: '*b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*b' → logprob: -0.6009800434112549
    2. ' *' → logprob: -1.1009800434112549
    3. '*' → logprob: -2.600980043411255
    4. ')' → logprob: -3.975980043411255
    5. '```' → logprob: -5.100979804992676
    6. '
' → logprob: -5.225979804992676
    7. 'b' → logprob: -5.475979804992676
    8. '_b' → logprob: -5.975979804992676
    9. '`' → logprob: -6.850979804992676
    10. '_' → logprob: -7.100979804992676

Token 1921: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.00026205103495158255
    2. ' b' → logprob: -8.500262260437012
    3. '`' → logprob: -11.000262260437012
    4. '_b' → logprob: -11.500262260437012
    5. ')' → logprob: -12.000262260437012
    6. '```' → logprob: -12.375262260437012
    7. '2' → logprob: -13.000262260437012
    8. '...' → logprob: -13.000262260437012
    9. ')b' → logprob: -13.000262260437012
    10. ' ' → logprob: -13.125262260437012

Token 1922: '_i' (ID: 10853)
  Prédit: '_i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_i' → logprob: -0.050341635942459106
    2. ')_' → logprob: -3.1753416061401367
    3. '_j' → logprob: -5.425341606140137
    4. ')' → logprob: -6.800341606140137
    5. '_' → logprob: -7.425341606140137
    6. ''_' → logprob: -7.675341606140137
    7. 'i' → logprob: -8.175341606140137
    8. '```' → logprob: -9.175341606140137
    9. '_)' → logprob: -9.550341606140137
    10. ' _' → logprob: -9.800341606140137

Token 1923: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5458274483680725
    2. '
' → logprob: -2.9208273887634277
    3. '):' → logprob: -2.9208273887634277
    4. '```' → logprob: -2.9208273887634277
    5. 'def' → logprob: -3.0458273887634277
    6. '=' → logprob: -3.1708273887634277
    7. '_' → logprob: -3.5458273887634277
    8. 's' → logprob: -4.045827388763428
    9. ':' → logprob: -4.420827388763428
    10. '}' → logprob: -4.420827388763428

Token 1924: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6149927973747253
    2. '
' → logprob: -1.7399928569793701
    3. '```' → logprob: -2.86499285697937
    4. '#' → logprob: -2.98999285697937
    5. ':' → logprob: -3.11499285697937
    6. '   ' → logprob: -3.98999285697937
    7. ':
' → logprob: -3.98999285697937
    8. ',' → logprob: -4.489992618560791
    9. 'from' → logprob: -4.614992618560791
    10. '.' → logprob: -4.739992618560791

Token 1925: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.8248795866966248
    2. '#' (adapté à ' #') → logprob: -1.6998796463012695
    3. 'from' → logprob: -2.5748796463012695
    4. 'def' → logprob: -2.9498796463012695
    5. ':' → logprob: -2.9498796463012695
    6. ':
' → logprob: -3.1998796463012695
    7. '```' → logprob: -3.8248796463012695
    8. '
' → logprob: -4.1998796463012695
    9. '   ' → logprob: -4.1998796463012695
    10. ',' → logprob: -4.3248796463012695

Token 1926: ' Which' (ID: 21580)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.42302459478378296
    2. 'def' → logprob: -1.6730246543884277
    3. 'from' → logprob: -2.9230246543884277
    4. '```' → logprob: -3.2980246543884277
    5. '#' → logprob: -4.173024654388428
    6. ':
' → logprob: -4.673024654388428
    7. '
' → logprob: -4.798024654388428
    8. '[
' → logprob: -5.298024654388428
    9. ':' → logprob: -5.548024654388428
    10. '[' → logprob: -5.923024654388428

Token 1927: ' equals' (ID: 29702)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -1.046695590019226
    2. ' =' → logprob: -1.796695590019226
    3. '_' → logprob: -1.796695590019226
    4. ' is' → logprob: -2.2966957092285156
    5. ':' → logprob: -3.2966957092285156
    6. '```' → logprob: -3.6716957092285156
    7. '#' → logprob: -3.7966957092285156
    8. '
' → logprob: -3.7966957092285156
    9. 'def' → logprob: -4.046695709228516
    10. '`' → logprob: -4.546695709228516

Token 1928: ' minimal' (ID: 19957)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -1.111938238143921
    2. 'Weight' → logprob: -2.111938238143921
    3. '1' → logprob: -2.361938238143921
    4. 'a' → logprob: -2.986938238143921
    5. 'default' → logprob: -3.236938238143921
    6. '[
' → logprob: -3.236938238143921
    7. '[(' → logprob: -3.361938238143921
    8. '[' → logprob: -3.361938238143921
    9. '[]' → logprob: -3.736938238143921
    10. 'div' → logprob: -3.736938238143921

Token 1929: ' number' (ID: 2086)
  Prédit: 'number'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'number' → logprob: -2.1995341777801514
    2. '_chunk' → logprob: -2.1995341777801514
    3. '`' → logprob: -2.3245341777801514
    4. 'def' → logprob: -2.4495341777801514
    5. '```' → logprob: -2.5745341777801514
    6. '
' → logprob: -2.8245341777801514
    7. '+' → logprob: -2.9495341777801514
    8. '_number' → logprob: -3.0745341777801514
    9. '_' → logprob: -3.1995341777801514
    10. 'chunk' → logprob: -3.6995341777801514

Token 1930: ' of' (ID: 328)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -1.4916837215423584
    2. 'def' → logprob: -1.8666837215423584
    3. '
' → logprob: -1.9916837215423584
    4. ')' → logprob: -2.4916837215423584
    5. '=' → logprob: -2.4916837215423584
    6. ':' → logprob: -2.9916837215423584
    7. '```' → logprob: -2.9916837215423584
    8. '0' → logprob: -3.9916837215423584
    9. '[
' → logprob: -4.1166839599609375
    10. '   ' → logprob: -4.2416839599609375

Token 1931: ' add' (ID: 1147)
  Prédit: 'chunks'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'chunks' → logprob: -0.13441619277000427
    2. '1' → logprob: -2.134416103363037
    3. 'Weight' → logprob: -6.759416103363037
    4. 'lines' → logprob: -7.134416103363037
    5. ' chunks' → logprob: -7.134416103363037
    6. 'pieces' → logprob: -7.384416103363037
    7. 'weights' → logprob: -7.509416103363037
    8. 'chunk' → logprob: -7.759416103363037
    9. 'powers' → logprob: -8.009416580200195
    10. 'b' → logprob: -8.134416580200195

Token 1932: 'ends' (ID: 1847)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.45740675926208496
    2. '=' → logprob: -1.582406759262085
    3. '+' → logprob: -2.957406759262085
    4. 'ition' → logprob: -3.082406759262085
    5. ' =' → logprob: -4.582406997680664
    6. 'ing' → logprob: -4.707406997680664
    7. ' ' → logprob: -4.957406997680664
    8. '`' → logprob: -5.707406997680664
    9. ' +' → logprob: -5.707406997680664
    10. '_' → logprob: -5.832406997680664

Token 1933: ' adding' (ID: 12673)
  Prédit: '[
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[
' → logprob: -1.3003236055374146
    2. '```' → logprob: -1.4253236055374146
    3. '[' → logprob: -1.8003236055374146
    4. 'def' → logprob: -1.9253236055374146
    5. '
' → logprob: -3.050323486328125
    6. ':' → logprob: -3.550323486328125
    7. '0' → logprob: -4.800323486328125
    8. '\' → logprob: -4.925323486328125
    9. '[]' → logprob: -4.925323486328125
    10. '\n' → logprob: -4.925323486328125

Token 1934: ' to' (ID: 316)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.25101521611213684
    2. '+' → logprob: -1.8760151863098145
    3. ' up' → logprob: -4.2510151863098145
    4. ' ' → logprob: -4.3760151863098145
    5. '1' → logprob: -4.8760151863098145
    6. ' =' → logprob: -5.3760151863098145
    7. ')' → logprob: -5.6260151863098145
    8. ''' → logprob: -5.7510151863098145
    9. ' +' → logprob: -5.7510151863098145
    10. '
' → logprob: -6.0010151863098145

Token 1935: ' sum' (ID: 4215)
  Prédit: 'total'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'total' → logprob: -0.29103633761405945
    2. 'sum' → logprob: -1.6660363674163818
    3. ' total' → logprob: -2.916036367416382
    4. ' sum' → logprob: -5.416036128997803
    5. '9' → logprob: -5.666036128997803
    6. 'the' → logprob: -7.541036128997803
    7. 'value' → logprob: -7.791036128997803
    8. ' the' → logprob: -9.416036605834961
    9. '```' → logprob: -9.416036605834961
    10. '1' → logprob: -9.541036605834961

Token 1936: '.

' (ID: 364)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -1.639804720878601
    2. '[' → logprob: -1.639804720878601
    3. '   ' → logprob: -2.3898048400878906
    4. '       ' → logprob: -2.5148048400878906
    5. ':
' → logprob: -2.6398048400878906
    6. '[
' → logprob: -2.6398048400878906
    7. '```' → logprob: -2.7648048400878906
    8. 'def' → logprob: -3.5148048400878906
    9. '+' → logprob: -3.6398048400878906
    10. '=' → logprob: -3.6398048400878906

Token 1937: '       ' (ID: 309)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -1.3478643894195557
    2. '[
' → logprob: -1.8478643894195557
    3. '```' → logprob: -1.8478643894195557
    4. '[' → logprob: -2.3478643894195557
    5. '       ' → logprob: -2.4728643894195557
    6. '#' → logprob: -2.5978643894195557
    7. 'from' → logprob: -3.2228643894195557
    8. '   ' → logprob: -3.5978643894195557
    9. '0' → logprob: -4.097864151000977
    10. '
' → logprob: -4.097864151000977

Token 1938: ' #' (ID: 1069)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.8436590433120728
    2. 'from' → logprob: -1.3436590433120728
    3. '       ' → logprob: -2.093658924102783
    4. '#' (adapté à ' #') → logprob: -2.968658924102783
    5. '
' → logprob: -3.718658924102783
    6. '```' → logprob: -3.718658924102783
    7. 'weights' → logprob: -4.093658924102783
    8. '[
' → logprob: -4.343658924102783
    9. 'if' → logprob: -4.468658924102783
    10. '[' → logprob: -4.968658924102783

Token 1939: ' Minimum' (ID: 47219)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.6783225536346436
    2. 'from' → logprob: -2.4283225536346436
    3. '[
' → logprob: -2.6783225536346436
    4. '
' → logprob: -2.8033225536346436
    5. '```' → logprob: -2.9283225536346436
    6. '#' → logprob: -3.0533225536346436
    7. ':
' → logprob: -3.0533225536346436
    8. '1' → logprob: -3.8033225536346436
    9. '       ' → logprob: -4.053322792053223
    10. ':' → logprob: -4.303322792053223

Token 1940: ' chunks' (ID: 53440)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '```' → logprob: -1.5793650150299072
    2. '+' → logprob: -1.9543650150299072
    3. '=' → logprob: -2.0793650150299072
    4. '_' → logprob: -2.2043650150299072
    5. '`' → logprob: -2.5793650150299072
    6. ':' → logprob: -3.0793650150299072
    7. 'def' → logprob: -3.3293650150299072
    8. ' =' → logprob: -3.4543650150299072
    9. 'a' → logprob: -3.8293650150299072
    10. '
' → logprob: -3.8293650150299072

Token 1941: ' =' (ID: 314)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -1.3038736581802368
    2. '       ' → logprob: -1.8038736581802368
    3. '```' → logprob: -2.1788735389709473
    4. '=' → logprob: -2.4288735389709473
    5. '
' → logprob: -2.9288735389709473
    6. '   ' → logprob: -2.9288735389709473
    7. ':
' → logprob: -3.3038735389709473
    8. 'def' → logprob: -3.4288735389709473
    9. '+' → logprob: -3.6788735389709473
    10. '[' → logprob: -3.8038735389709473

Token 1942: ' number' (ID: 2086)
  Prédit: 'bin'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'bin' → logprob: -0.38574525713920593
    2. '1' → logprob: -2.2607452869415283
    3. 'sum' → logprob: -2.2607452869415283
    4. '(bin' → logprob: -3.1357452869415283
    5. '(sum' → logprob: -3.7607452869415283
    6. 'len' → logprob: -3.8857452869415283
    7. '(' → logprob: -5.510745048522949
    8. 'weight' → logprob: -5.885745048522949
    9. 'int' → logprob: -6.135745048522949
    10. '(len' → logprob: -6.510745048522949

Token 1943: ' of' (ID: 328)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.38772985339164734
    2. '```' → logprob: -1.8877298831939697
    3. 'def' → logprob: -3.2627298831939697
    4. ' =' → logprob: -3.8877298831939697
    5. '**' → logprob: -4.262729644775391
    6. '#' → logprob: -4.512729644775391
    7. '0' → logprob: -4.637729644775391
    8. '=' → logprob: -4.762729644775391
    9. ']' → logprob: -4.887729644775391
    10. ':' → logprob: -5.012729644775391

Token 1944: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.018923789262771606
    2. 'a' → logprob: -5.393923759460449
    3. 'Weight' → logprob: -5.893923759460449
    4. 'ones' → logprob: -6.143923759460449
    5. '```' → logprob: -6.518923759460449
    6. 'bits' → logprob: -6.768923759460449
    7. '`' → logprob: -6.893923759460449
    8. 'weights' → logprob: -7.018923759460449
    9. '
' → logprob: -7.143923759460449
    10. 'def' → logprob: -7.643923759460449

Token 1945: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.02304990217089653
    2. 'ones' → logprob: -4.773049831390381
    3. 'set' → logprob: -5.273049831390381
    4. 'chunks' → logprob: -5.773049831390381
    5. 'bits' → logprob: -6.523049831390381
    6. 'a' → logprob: -7.148049831390381
    7. 'total' → logprob: -7.148049831390381
    8. 'sum' → logprob: -7.273049831390381
    9. 'bin' → logprob: -8.023050308227539
    10. 'one' → logprob: -8.148050308227539

Token 1946: 's' (ID: 82)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.7409765720367432
    2. '```' → logprob: -1.4909765720367432
    3. 'def' → logprob: -2.740976572036743
    4. ')' → logprob: -2.740976572036743
    5. ':' → logprob: -2.990976572036743
    6. '0' → logprob: -3.365976572036743
    7. ']' → logprob: -3.865976572036743
    8. 's' → logprob: -4.490976333618164
    9. ' =' → logprob: -5.365976333618164
    10. '=' → logprob: -5.490976333618164

Token 1947: ' in' (ID: 306)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.36939531564712524
    2. '
' → logprob: -1.6193952560424805
    3. 'from' → logprob: -3.1193952560424805
    4. ' =' → logprob: -3.4943952560424805
    5. '```' → logprob: -5.1193952560424805
    6. '=' → logprob: -5.3693952560424805
    7. ':' → logprob: -5.3693952560424805
    8. '   ' → logprob: -5.6193952560424805
    9. '       ' → logprob: -5.9943952560424805
    10. ':
' → logprob: -6.1193952560424805

Token 1948: ' the' (ID: 290)
  Prédit: 'bin'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'bin' → logprob: -2.6656825866666622e-05
    2. ' bin' → logprob: -11.25002670288086
    3. '(bin' → logprob: -12.00002670288086
    4. 'format' → logprob: -12.62502670288086
    5. '   ' → logprob: -13.00002670288086
    6. 'f' → logprob: -14.25002670288086
    7. '
' → logprob: -14.37502670288086
    8. '{' → logprob: -15.25002670288086
    9. '```' → logprob: -16.12502670288086
    10. '       ' → logprob: -16.75002670288086

Token 1949: ' binary' (ID: 15600)
  Prédit: 'bin'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'bin' → logprob: -0.00022249009634833783
    2. ' bin' → logprob: -9.250222206115723
    3. '(bin' → logprob: -10.125222206115723
    4. '
' → logprob: -10.375222206115723
    5. 'binary' → logprob: -10.500222206115723
    6. '   ' → logprob: -11.375222206115723
    7. 'b' → logprob: -12.375222206115723
    8. '```' → logprob: -12.625222206115723
    9. 'total' → logprob: -13.625222206115723
    10. 'bit' → logprob: -13.875222206115723

Token 1950: ' representation' (ID: 22311)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -1.1518906354904175
    2. '1' → logprob: -1.7768906354904175
    3. '\n' → logprob: -2.776890754699707
    4. '```' → logprob: -2.776890754699707
    5. ' =' → logprob: -2.901890754699707
    6. 'def' → logprob: -3.401890754699707
    7. ':' → logprob: -3.401890754699707
    8. '   ' → logprob: -3.401890754699707
    9. ' \' → logprob: -3.526890754699707
    10. '`' → logprob: -3.526890754699707

Token 1951: ' of' (ID: 328)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.40320509672164917
    2. '
' → logprob: -2.153205156326294
    3. ' =' → logprob: -2.778205156326294
    4. ':' → logprob: -3.403205156326294
    5. '=' → logprob: -3.528205156326294
    6. '   ' → logprob: -4.028204917907715
    7. ':
' → logprob: -4.028204917907715
    8. '```' → logprob: -4.278204917907715
    9. '       ' → logprob: -4.903204917907715
    10. '1' → logprob: -4.903204917907715

Token 1952: ' sum' (ID: 4215)
  Prédit: 'bin'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'bin' → logprob: -0.06699209660291672
    2. ' bin' → logprob: -3.1919920444488525
    3. 'total' → logprob: -3.9419920444488525
    4. ' total' → logprob: -6.566992282867432
    5. '(bin' → logprob: -7.191992282867432
    6. 'format' → logprob: -7.691992282867432
    7. '{' → logprob: -7.941992282867432
    8. '   ' → logprob: -8.316991806030273
    9. 'f' → logprob: -8.316991806030273
    10. 'hex' → logprob: -8.816991806030273

Token 1953: '(a' (ID: 6271)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.3318271040916443
    2. '
' → logprob: -1.706827163696289
    3. '```' → logprob: -3.706827163696289
    4. ':' → logprob: -3.956827163696289
    5. '   ' → logprob: -4.081827163696289
    6. ':
' → logprob: -4.206827163696289
    7. ' =' → logprob: -4.581827163696289
    8. '       ' → logprob: -4.831827163696289
    9. 'class' → logprob: -7.206827163696289
    10. '1' → logprob: -7.331827163696289

Token 1954: '_i' (ID: 10853)
  Prédit: '_i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_i' → logprob: -0.011683919467031956
    2. '_' → logprob: -4.636683940887451
    3. ' _' → logprob: -6.886683940887451
    4. ')_' → logprob: -8.136683464050293
    5. '_
' → logprob: -8.761683464050293
    6. 'i' → logprob: -9.011683464050293
    7. '`' → logprob: -9.636683464050293
    8. ')' → logprob: -10.261683464050293
    9. '(_' → logprob: -10.511683464050293
    10. ''_' → logprob: -10.761683464050293

Token 1955: '*b' (ID: 72162)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -1.272605061531067
    2. '`' → logprob: -1.647605061531067
    3. '.b' → logprob: -1.772605061531067
    4. '(b' → logprob: -2.3976049423217773
    5. '```' → logprob: -3.0226049423217773
    6. '_' → logprob: -3.2726049423217773
    7. '(a' → logprob: -3.6476049423217773
    8. ')' → logprob: -4.022604942321777
    9. '_b' → logprob: -4.147604942321777
    10. '*b' → logprob: -4.397604942321777

Token 1956: '_i' (ID: 10853)
  Prédit: '_i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_i' → logprob: -0.0016893428983166814
    2. 'i' → logprob: -6.626689434051514
    3. ')_' → logprob: -8.876688957214355
    4. '_' → logprob: -9.126688957214355
    5. ')' → logprob: -9.376688957214355
    6. '1' → logprob: -12.376688957214355
    7. ' _' → logprob: -12.501688957214355
    8. 's' → logprob: -12.751688957214355
    9. '`' → logprob: -12.751688957214355
    10. '(_' → logprob: -13.001688957214355

Token 1957: ')

' (ID: 1029)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -1.2769865989685059
    2. '```' → logprob: -1.4019865989685059
    3. 'def' → logprob: -2.026986598968506
    4. ' =' → logprob: -2.276986598968506
    5. '   ' → logprob: -3.151986598968506
    6. ':' → logprob: -3.526986598968506
    7. 'bin' → logprob: -3.651986598968506
    8. '(bin' → logprob: -4.151986598968506
    9. '`' → logprob: -4.401986598968506
    10. '1' → logprob: -4.401986598968506

Token 1958: '       ' (ID: 309)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.5226631760597229
    2. '```' → logprob: -1.3976631164550781
    3. '
' → logprob: -2.522663116455078
    4. '   ' → logprob: -3.397663116455078
    5. ':' → logprob: -3.772663116455078
    6. '       ' → logprob: -4.522663116455078
    7. ':
' → logprob: -5.897663116455078
    8. ' =' → logprob: -6.647663116455078
    9. '``' → logprob: -6.897663116455078
    10. 'import' → logprob: -7.022663116455078

Token 1959: ' #' (ID: 1069)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.6806970238685608
    2. 'def' → logprob: -1.430696964263916
    3. ':' → logprob: -2.805696964263916
    4. '=' → logprob: -3.055696964263916
    5. '       ' → logprob: -3.555696964263916
    6. '```' → logprob: -3.680696964263916
    7. ' =' → logprob: -4.055696964263916
    8. '   ' → logprob: -4.430696964263916
    9. 'bin' → logprob: -4.430696964263916
    10. ':
' → logprob: -4.555696964263916

Token 1960: ' Because' (ID: 13602)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.08740684390068054
    2. '
' → logprob: -3.837406873703003
    3. '   ' → logprob: -3.962406873703003
    4. '       ' → logprob: -4.087406635284424
    5. ':
' → logprob: -4.212406635284424
    6. ':' → logprob: -5.212406635284424
    7. '```' → logprob: -5.462406635284424
    8. '#' → logprob: -8.337407112121582
    9. ' =' → logprob: -8.462407112121582
    10. 'from' → logprob: -8.712407112121582

Token 1961: ' each' (ID: 2454)
  Prédit: 'bin'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'bin' → logprob: -0.027239235118031502
    2. ' bin' → logprob: -3.6522393226623535
    3. '
' → logprob: -8.152238845825195
    4. '1' → logprob: -8.152238845825195
    5. '(bin' → logprob: -8.402238845825195
    6. '   ' → logprob: -10.652238845825195
    7. 'sum' → logprob: -11.277238845825195
    8. '`' → logprob: -11.402238845825195
    9. 'format' → logprob: -11.527238845825195
    10. '```' → logprob: -11.777238845825195

Token 1962: ' chunk' (ID: 23958)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.8403136134147644
    2. 'chunk' → logprob: -1.9653136730194092
    3. '`' → logprob: -2.090313673019409
    4. '
' → logprob: -2.715313673019409
    5. '^' → logprob: -3.090313673019409
    6. ' &' → logprob: -3.965313673019409
    7. '_' → logprob: -4.21531343460083
    8. '&' → logprob: -4.34031343460083
    9. 'a' → logprob: -4.46531343460083
    10. ''s' → logprob: -4.59031343460083

Token 1963: ' has' (ID: 853)
  Prédit: '`'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '`' → logprob: -1.0668189525604248
    2. '```' → logprob: -1.5668189525604248
    3. '=' → logprob: -1.9418189525604248
    4. ' =' → logprob: -3.566818952560425
    5. '_' → logprob: -3.566818952560425
    6. ':' → logprob: -3.566818952560425
    7. ''' → logprob: -3.816818952560425
    8. '
' → logprob: -3.816818952560425
    9. '[' → logprob: -3.816818952560425
    10. 'def' → logprob: -4.316819190979004

Token 1964: ' weight' (ID: 6049)
  Prédit: 'weight'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'weight' → logprob: -0.26354506611824036
    2. 'a' → logprob: -1.763545036315918
    3. ' weight' → logprob: -3.263545036315918
    4. '1' → logprob: -4.513545036315918
    5. 'b' → logprob: -5.388545036315918
    6. ' a' → logprob: -5.763545036315918
    7. '(' → logprob: -7.138545036315918
    8. ' (' → logprob: -7.263545036315918
    9. 'quantity' → logprob: -7.263545036315918
    10. 'Weight' → logprob: -8.513545036315918

Token 1965: ' and' (ID: 326)
  Prédit: 'Unit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Unit' → logprob: -0.9607291221618652
    2. '=' → logprob: -1.3357291221618652
    3. ' =' → logprob: -1.9607291221618652
    4. '```' → logprob: -2.5857291221618652
    5. ':' → logprob: -3.4607291221618652
    6. '`' → logprob: -4.085729122161865
    7. '   ' → logprob: -4.085729122161865
    8. '
' → logprob: -4.335729122161865
    9. '_unit' → logprob: -5.210729122161865
    10. '_' → logprob: -5.210729122161865

Token 1966: ' quantity' (ID: 17245)
  Prédit: 'quantity'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'quantity' → logprob: -0.021251477301120758
    2. ' quantity' → logprob: -3.8962514400482178
    3. 'b' → logprob: -7.396251678466797
    4. '```' → logprob: -10.896251678466797
    5. 'count' → logprob: -11.146251678466797
    6. ' ' → logprob: -11.271251678466797
    7. ' b' → logprob: -11.646251678466797
    8. '
' → logprob: -11.771251678466797
    9. '`' → logprob: -11.896251678466797
    10. 'number' → logprob: -12.271251678466797

Token 1967: ' in' (ID: 306)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -1.1209673881530762
    2. '```' → logprob: -1.4959673881530762
    3. ' =' → logprob: -1.9959673881530762
    4. ':' → logprob: -2.620967388153076
    5. '   ' → logprob: -2.620967388153076
    6. 'def' → logprob: -2.745967388153076
    7. '=' → logprob: -3.370967388153076
    8. '       ' → logprob: -4.370967388153076
    9. ':
' → logprob: -4.370967388153076
    10. '`' → logprob: -5.245967388153076

Token 1968: ' units' (ID: 13306)
  Prédit: 'powers'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'powers' → logprob: -0.3647126853466034
    2. '{' → logprob: -1.9897127151489258
    3. 'power' → logprob: -3.364712715148926
    4. '0' → logprob: -3.864712715148926
    5. '1' → logprob: -3.989712715148926
    6. '[' → logprob: -4.239712715148926
    7. 'the' → logprob: -4.239712715148926
    8. '(' → logprob: -4.239712715148926
    9. '2' → logprob: -4.239712715148926
    10. 'binary' → logprob: -5.114712715148926

Token 1969: ' of' (ID: 328)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -1.0592588186264038
    2. ' =' → logprob: -2.0592589378356934
    3. '```' → logprob: -2.0592589378356934
    4. '   ' → logprob: -2.5592589378356934
    5. 'def' → logprob: -2.6842589378356934
    6. ':' → logprob: -2.9342589378356934
    7. '=' → logprob: -3.6842589378356934
    8. ':
' → logprob: -3.9342589378356934
    9. '_' → logprob: -3.9342589378356934
    10. '**' → logprob: -4.184258937835693

Token 1970: ' powers' (ID: 27742)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '2' → logprob: -0.39794036746025085
    2. '1' → logprob: -1.2729403972625732
    3. 'powers' → logprob: -3.7729403972625732
    4. 'two' → logprob: -4.022940158843994
    5. '```' → logprob: -6.147940158843994
    6. 'one' → logprob: -6.772940158843994
    7. 'power' → logprob: -7.022940158843994
    8. '`' → logprob: -7.772940158843994
    9. 'pow' → logprob: -7.772940158843994
    10. ' two' → logprob: -8.147940635681152

Token 1971: ' of' (ID: 328)
  Prédit: 'of'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'of' → logprob: -0.3371017277240753
    2. '2' → logprob: -2.087101697921753
    3. '[' → logprob: -3.712101697921753
    4. '(' → logprob: -4.087101936340332
    5. ' of' → logprob: -4.087101936340332
    6. 'Of' → logprob: -4.087101936340332
    7. '_of' → logprob: -4.212101936340332
    8. '_' → logprob: -4.587101936340332
    9. '   ' → logprob: -4.712101936340332
    10. '=' → logprob: -5.087101936340332

Token 1972: ' two' (ID: 1920)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.004506900440901518
    2. 'two' → logprob: -5.504507064819336
    3. ' two' → logprob: -8.004507064819336
    4. ' ' → logprob: -9.754507064819336
    5. 'Two' → logprob: -11.129507064819336
    6. '```' → logprob: -11.379507064819336
    7. '
' → logprob: -12.629507064819336
    8. '_two' → logprob: -13.004507064819336
    9. '-two' → logprob: -13.504507064819336
    10. '`' → logprob: -14.129507064819336

Token 1973: '.

' (ID: 364)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.295437216758728
    2. '
' → logprob: -1.420437216758728
    3. 'def' → logprob: -2.0454373359680176
    4. '   ' → logprob: -2.2954373359680176
    5. '```' → logprob: -2.4204373359680176
    6. ':' → logprob: -2.5454373359680176
    7. ' =' → logprob: -3.4204373359680176
    8. ':
' → logprob: -3.9204373359680176
    9. '=' → logprob: -5.295437335968018
    10. ',' → logprob: -5.795437335968018

Token 1974: '       ' (ID: 309)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.38580310344696045
    2. '   ' → logprob: -2.01080322265625
    3. '       ' → logprob: -2.63580322265625
    4. '[
' → logprob: -3.63580322265625
    5. '```' → logprob: -4.26080322265625
    6. '\n' → logprob: -4.63580322265625
    7. 'def' → logprob: -4.63580322265625
    8. '[' → logprob: -5.01080322265625
    9. ':
' → logprob: -5.01080322265625
    10. ',' → logprob: -5.13580322265625

Token 1975: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6275140643119812
    2. '
' → logprob: -1.752514123916626
    3. 'def' → logprob: -2.002514123916626
    4. '#' (adapté à ' #') → logprob: -3.377514123916626
    5. ':
' → logprob: -4.002513885498047
    6. '```' → logprob: -4.127513885498047
    7. ':' → logprob: -4.252513885498047
    8. '1' → logprob: -4.752513885498047
    9. '   ' → logprob: -4.752513885498047
    10. ' =' → logprob: -5.002513885498047

Token 1976: ' So' (ID: 2632)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.18484057486057281
    2. '       ' → logprob: -3.184840679168701
    3. '```' → logprob: -3.434840679168701
    4. ':
' → logprob: -3.559840679168701
    5. '
' → logprob: -3.934840679168701
    6. 'from' → logprob: -4.059840679168701
    7. ':' → logprob: -4.184840679168701
    8. '#' → logprob: -6.059840679168701
    9. 'chunks' → logprob: -6.059840679168701
    10. 'class' → logprob: -6.184840679168701

Token 1977: ' minimal' (ID: 19957)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.11224079132080078
    2. ' =' → logprob: -3.737240791320801
    3. '
' → logprob: -4.112240791320801
    4. '#' → logprob: -4.112240791320801
    5. 'bin' → logprob: -4.487240791320801
    6. 'total' → logprob: -5.487240791320801
    7. ':' → logprob: -5.612240791320801
    8. '1' → logprob: -5.737240791320801
    9. '   ' → logprob: -5.737240791320801
    10. 'bits' → logprob: -5.737240791320801

Token 1978: ' chunk' (ID: 23958)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -1.3247780799865723
    2. '`' → logprob: -1.6997780799865723
    3. 'number' → logprob: -1.8247780799865723
    4. '```' → logprob: -2.9497780799865723
    5. '_chunks' → logprob: -3.0747780799865723
    6. '_number' → logprob: -3.1997780799865723
    7. 'chunks' → logprob: -3.4497780799865723
    8. ' =' → logprob: -3.8247780799865723
    9. '_' → logprob: -4.199778079986572
    10. '_chunk' → logprob: -4.199778079986572

Token 1979: ' count' (ID: 3605)
  Prédit: '_count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_count' → logprob: -0.4271434545516968
    2. 'count' → logprob: -1.5521434545516968
    3. 's' → logprob: -2.1771435737609863
    4. ' =' → logprob: -4.302143573760986
    5. '=' → logprob: -6.052143573760986
    6. '`' → logprob: -6.427143573760986
    7. '_' → logprob: -6.802143573760986
    8. '```' → logprob: -6.927143573760986
    9. ' count' → logprob: -7.427143573760986
    10. '_number' → logprob: -8.177143096923828

Token 1980: ' equals' (ID: 29702)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -1.6662286520004272
    2. '=' → logprob: -1.6662286520004272
    3. ' =' → logprob: -1.6662286520004272
    4. 'def' → logprob: -2.166228771209717
    5. '
' → logprob: -2.291228771209717
    6. '   ' → logprob: -2.416228771209717
    7. ':
' → logprob: -2.541228771209717
    8. '       ' → logprob: -4.416228771209717
    9. '```' → logprob: -4.416228771209717
    10. '=
' → logprob: -5.666228771209717

Token 1981: ' pop' (ID: 2735)
  Prédit: 'bin'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'bin' → logprob: -0.0013689270708709955
    2. ' bin' → logprob: -7.376368999481201
    3. '1' → logprob: -7.626368999481201
    4. '(bin' → logprob: -8.751368522644043
    5. 'sum' → logprob: -10.126368522644043
    6. 'the' → logprob: -11.126368522644043
    7. 'bit' → logprob: -11.376368522644043
    8. 'number' → logprob: -11.751368522644043
    9. '
' → logprob: -11.751368522644043
    10. 'pop' → logprob: -12.751368522644043

Token 1982: 'count' (ID: 5420)
  Prédit: 'count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.0004846538067795336
    2. 'ulation' → logprob: -8.125484466552734
    3. 'cnt' → logprob: -9.125484466552734
    4. '1' → logprob: -10.875484466552734
    5. '_count' → logprob: -11.250484466552734
    6. ')' → logprob: -11.625484466552734
    7. 'sum' → logprob: -12.000484466552734
    8. 'c' → logprob: -12.250484466552734
    9. '```' → logprob: -12.375484466552734
    10. 'u' → logprob: -12.500484466552734

Token 1983: ' of' (ID: 328)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.7922660708427429
    2. '
' → logprob: -1.7922661304473877
    3. '   ' → logprob: -2.0422661304473877
    4. '       ' → logprob: -2.2922661304473877
    5. ':' → logprob: -3.5422661304473877
    6. ' =' → logprob: -3.5422661304473877
    7. ':
' → logprob: -4.167265892028809
    8. '```' → logprob: -4.417265892028809
    9. '1' → logprob: -4.542265892028809
    10. '=' → logprob: -4.667265892028809

Token 1984: ' sum' (ID: 4215)
  Prédit: 'total'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'total' → logprob: -0.29721441864967346
    2. 'bin' → logprob: -1.547214388847351
    3. 'sum' → logprob: -3.9222145080566406
    4. ' total' → logprob: -5.172214508056641
    5. '{' → logprob: -5.547214508056641
    6. ' bin' → logprob: -5.672214508056641
    7. 'str' → logprob: -6.047214508056641
    8. 'f' → logprob: -6.172214508056641
    9. '(total' → logprob: -6.172214508056641
    10. 'a' → logprob: -6.672214508056641

Token 1985: '(a' (ID: 6271)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -1.3328850269317627
    2. '
' → logprob: -1.8328850269317627
    3. ' =' → logprob: -1.8328850269317627
    4. '   ' → logprob: -1.9578850269317627
    5. '       ' → logprob: -2.5828850269317627
    6. '=' → logprob: -2.5828850269317627
    7. ':' → logprob: -3.3328850269317627
    8. '1' → logprob: -4.582884788513184
    9. '```' → logprob: -4.957884788513184
    10. '#' → logprob: -4.957884788513184

Token 1986: '_i' (ID: 10853)
  Prédit: '_i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_i' → logprob: -0.009525979869067669
    2. '_' → logprob: -5.009525775909424
    3. 'i' → logprob: -7.759525775909424
    4. ')_' → logprob: -7.884525775909424
    5. ')' → logprob: -8.009526252746582
    6. ' _' → logprob: -8.509526252746582
    7. '`' → logprob: -8.509526252746582
    8. 't' → logprob: -9.134526252746582
    9. '_t' → logprob: -9.134526252746582
    10. 'b' → logprob: -9.134526252746582

Token 1987: '*b' (ID: 72162)
  Prédit: '*b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*b' → logprob: -0.14421266317367554
    2. ' *' → logprob: -2.0192127227783203
    3. 'b' → logprob: -7.89421272277832
    4. '_b' → logprob: -8.01921272277832
    5. '.b' → logprob: -8.51921272277832
    6. ' ' → logprob: -9.14421272277832
    7. ')' → logprob: -9.39421272277832
    8. '
' → logprob: -9.51921272277832
    9. '*' → logprob: -9.64421272277832
    10. '`' → logprob: -9.76921272277832

Token 1988: '_i' (ID: 10853)
  Prédit: '_i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_i' → logprob: -0.09283337742090225
    2. '_' → logprob: -3.3428332805633545
    3. ')' → logprob: -3.4678332805633545
    4. 'i' → logprob: -4.467833518981934
    5. 'b' → logprob: -5.717833518981934
    6. ')_' → logprob: -5.967833518981934
    7. ' _' → logprob: -5.967833518981934
    8. '*b' → logprob: -7.842833518981934
    9. '```' → logprob: -8.342833518981934
    10. '_)' → logprob: -8.717833518981934

Token 1989: ').

' (ID: 3991)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.628385603427887
    2. ':' → logprob: -2.128385543823242
    3. '```' → logprob: -2.378385543823242
    4. ')' → logprob: -3.003385543823242
    5. '   ' → logprob: -3.253385543823242
    6. ' =' → logprob: -3.753385543823242
    7. 'def' → logprob: -3.878385543823242
    8. '=' → logprob: -4.003385543823242
    9. ',' → logprob: -4.128385543823242
    10. '       ' → logprob: -4.628385543823242

Token 1990: '       ' (ID: 309)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.2351614236831665
    2. '       ' → logprob: -2.485161304473877
    3. '
' → logprob: -3.360161304473877
    4. '   ' → logprob: -3.485161304473877
    5. ':' → logprob: -3.610161304473877
    6. '```' → logprob: -4.235161304473877
    7. ':
' → logprob: -5.235161304473877
    8. ' =' → logprob: -5.360161304473877
    9. '=' → logprob: -6.360161304473877
    10. 'from' → logprob: -6.735161304473877

Token 1991: ' #' (ID: 1069)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.4462527930736542
    2. '       ' → logprob: -1.5712528228759766
    3. '
' → logprob: -2.4462528228759766
    4. '   ' → logprob: -4.571252822875977
    5. '#' (adapté à ' #') → logprob: -4.696252822875977
    6. ':' → logprob: -4.946252822875977
    7. 'result' → logprob: -5.071252822875977
    8. 'return' → logprob: -5.321252822875977
    9. ' =' → logprob: -5.446252822875977
    10. '```' → logprob: -5.696252822875977

Token 1992: ' Each' (ID: 11555)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.06231227517127991
    2. '       ' → logprob: -4.062312126159668
    3. '
' → logprob: -4.562312126159668
    4. '```' → logprob: -4.562312126159668
    5. '#' → logprob: -4.937312126159668
    6. '   ' → logprob: -5.812312126159668
    7. ':
' → logprob: -6.437312126159668
    8. ':' → logprob: -6.562312126159668
    9. 'total' → logprob: -6.812312126159668
    10. 'count' → logprob: -7.062312126159668

Token 1993: ' chunk' (ID: 23958)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -1.020662546157837
    2. '_' → logprob: -1.270662546157837
    3. '
' → logprob: -3.145662546157837
    4. '_chunk' → logprob: -3.145662546157837
    5. '=' → logprob: -3.395662546157837
    6. 'chunk' → logprob: -3.395662546157837
    7. ' \' → logprob: -3.520662546157837
    8. '`' → logprob: -3.770662546157837
    9. ' ' → logprob: -3.770662546157837
    10. ' _' → logprob: -3.895662546157837

Token 1994: ' corresponds' (ID: 66938)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2724265456199646
    2. '=' → logprob: -2.8974266052246094
    3. '_' → logprob: -2.8974266052246094
    4. '```' → logprob: -3.2724266052246094
    5. 's' → logprob: -3.6474266052246094
    6. ',' → logprob: -4.522426605224609
    7. ':' → logprob: -4.772426605224609
    8. '`' → logprob: -5.022426605224609
    9. '
' → logprob: -5.772426605224609
    10. 'a' → logprob: -5.772426605224609

Token 1995: ' to' (ID: 316)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -1.0444910526275635
    2. ' =' → logprob: -1.4194910526275635
    3. 'to' → logprob: -1.5444910526275635
    4. ' to' → logprob: -1.6694910526275635
    5. '_to' → logprob: -5.794490814208984
    6. '```' → logprob: -8.294490814208984
    7. ' ' → logprob: -8.669490814208984
    8. '_' → logprob: -8.669490814208984
    9. '   ' → logprob: -8.669490814208984
    10. ',' → logprob: -8.794490814208984

Token 1996: ' a' (ID: 261)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.23376718163490295
    2. ' (' → logprob: -1.8587671518325806
    3. '1' → logprob: -3.23376727104187
    4. 'a' → logprob: -6.108767032623291
    5. 'weight' → logprob: -6.108767032623291
    6. '(a' → logprob: -6.358767032623291
    7. '(
' → logprob: -6.608767032623291
    8. ' a' → logprob: -7.108767032623291
    9. 'Weight' → logprob: -7.483767032623291
    10. '(bit' → logprob: -7.483767032623291

Token 1997: ' power' (ID: 3470)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.4660593569278717
    2. '1' → logprob: -1.5910593271255493
    3. ' (' → logprob: -1.9660593271255493
    4. '(
' → logprob: -3.841059446334839
    5. '`' → logprob: -6.71605920791626
    6. 'weight' → logprob: -6.84105920791626
    7. ' ' → logprob: -6.96605920791626
    8. 'bit' → logprob: -7.59105920791626
    9. ' (
' → logprob: -7.71605920791626
    10. 'a' → logprob: -7.84105920791626

Token 1998: ' of' (ID: 328)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -1.3662277460098267
    2. 'Of' → logprob: -1.4912277460098267
    3. 'of' → logprob: -2.116227626800537
    4. '_of' → logprob: -2.116227626800537
    5. '2' → logprob: -2.491227626800537
    6. 'Unit' → logprob: -2.741227626800537
    7. '(' → logprob: -3.241227626800537
    8. '   ' → logprob: -4.116227626800537
    9. ' =' → logprob: -4.491227626800537
    10. '[' → logprob: -4.991227626800537

Token 1999: ' two' (ID: 1920)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.030277194455266
    2. 'two' → logprob: -3.5302772521972656
    3. ' two' → logprob: -7.905277252197266
    4. ' ' → logprob: -9.530277252197266
    5. 'Two' → logprob: -10.405277252197266
    6. '```' → logprob: -10.405277252197266
    7. '-two' → logprob: -11.780277252197266
    8. '
' → logprob: -12.280277252197266
    9. '`' → logprob: -12.905277252197266
    10. '_two' → logprob: -13.155277252197266

Token 2000: '.

' (ID: 364)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -1.133772373199463
    2. '   ' → logprob: -1.508772373199463
    3. ':' → logprob: -2.008772373199463
    4. '       ' → logprob: -2.258772373199463
    5. ':
' → logprob: -2.508772373199463
    6. ' =' → logprob: -3.133772373199463
    7. '=' → logprob: -3.883772373199463
    8. '
' → logprob: -4.008772373199463
    9. '```' → logprob: -4.383772373199463
    10. '(' → logprob: -5.008772373199463

Token 2001: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.9394243955612183
    2. 'def' → logprob: -1.4394243955612183
    3. '   ' → logprob: -1.4394243955612183
    4. '
' → logprob: -3.189424514770508
    5. ':' → logprob: -3.564424514770508
    6. ' =' → logprob: -4.189424514770508
    7. ':
' → logprob: -4.439424514770508
    8. '```' → logprob: -4.439424514770508
    9. '[' → logprob: -5.814424514770508
    10. ',' → logprob: -5.939424514770508

Token 2002: ' #' (ID: 1069)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.06796755641698837
    2. '       ' → logprob: -3.317967653274536
    3. '   ' → logprob: -4.317967414855957
    4. '
' → logprob: -4.942967414855957
    5. ':' → logprob: -6.067967414855957
    6. ' =' → logprob: -6.567967414855957
    7. '```' → logprob: -6.567967414855957
    8. ':
' → logprob: -6.692967414855957
    9. '=' → logprob: -7.442967414855957
    10. '#' (adapté à ' #') → logprob: -7.567967414855957

Token 2003: ' So' (ID: 2632)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.02349214069545269
    2. '       ' → logprob: -4.398492336273193
    3. '   ' → logprob: -5.273492336273193
    4. '
' → logprob: -5.773492336273193
    5. 'class' → logprob: -7.023492336273193
    6. '```' → logprob: -7.023492336273193
    7. ':' → logprob: -8.398491859436035
    8. 'return' → logprob: -8.898491859436035
    9. ':
' → logprob: -9.273491859436035
    10. '#' → logprob: -9.273491859436035

Token 2004: ',' (ID: 11)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.009969393722712994
    2. 'result' → logprob: -6.009969234466553
    3. 'res' → logprob: -6.634969234466553
    4. 'total' → logprob: -6.759969234466553
    5. 're' → logprob: -7.134969234466553
    6. 'remaining' → logprob: -7.134969234466553
    7. '
' → logprob: -7.259969234466553
    8. '   ' → logprob: -7.759969234466553
    9. 'value' → logprob: -7.884969234466553
    10. '#' → logprob: -8.009969711303711

Token 2005: ' de' (ID: 334)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.23440656065940857
    2. '       ' → logprob: -2.4844064712524414
    3. 'if' → logprob: -3.2344064712524414
    4. '
' → logprob: -3.8594064712524414
    5. '   ' → logprob: -4.609406471252441
    6. '#' → logprob: -4.734406471252441
    7. 'total' → logprob: -5.234406471252441
    8. '1' → logprob: -5.359406471252441
    9. 'n' → logprob: -5.609406471252441
    10. 'bin' → logprob: -5.609406471252441

Token 2006: 'compose' (ID: 65322)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.05403728783130646
    2. 'com' → logprob: -3.42903733253479
    3. 'compose' → logprob: -3.92903733253479
    4. '=' → logprob: -9.304037094116211
    5. 'comp' → logprob: -9.429037094116211
    6. 'composition' → logprob: -9.429037094116211
    7. '```' → logprob: -9.929037094116211
    8. '#' → logprob: -10.054037094116211
    9. 'composer' → logprob: -10.429037094116211
    10. '{' → logprob: -10.679037094116211

Token 2007: ' total' (ID: 3609)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.6922479867935181
    2. '_' → logprob: -2.1922478675842285
    3. 'def' → logprob: -2.3172478675842285
    4. '=' → logprob: -3.0672478675842285
    5. '   ' → logprob: -3.4422478675842285
    6. '```' → logprob: -3.4422478675842285
    7. '(total' → logprob: -3.5672478675842285
    8. 'total' → logprob: -3.6922478675842285
    9. ':' → logprob: -4.0672478675842285
    10. '`' → logprob: -4.4422478675842285

Token 2008: ' sum' (ID: 4215)
  Prédit: '_weight'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_weight' → logprob: -0.04445153474807739
    2. 'weight' → logprob: -3.1694514751434326
    3. '_mass' → logprob: -7.294451713562012
    4. '_' → logprob: -8.794451713562012
    5. '_value' → logprob: -9.169451713562012
    6. ' =' → logprob: -9.169451713562012
    7. '_weights' → logprob: -9.544451713562012
    8. '_sum' → logprob: -9.669451713562012
    9. 'mass' → logprob: -9.919451713562012
    10. 'a' → logprob: -10.294451713562012

Token 2009: ' =' (ID: 314)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.2217490673065186
    2. ' =' → logprob: -1.4717490673065186
    3. 'def' → logprob: -1.5967490673065186
    4. '   ' → logprob: -2.0967490673065186
    5. '
' → logprob: -3.3467490673065186
    6. '=' → logprob: -3.4717490673065186
    7. ':' → logprob: -4.096749305725098
    8. ':
' → logprob: -4.346749305725098
    9. 'total' → logprob: -4.846749305725098
    10. '(self' → logprob: -5.221749305725098

Token 2010: ' sum' (ID: 4215)
  Prédit: 'total'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'total' → logprob: -0.12481621652841568
    2. '1' → logprob: -2.2498161792755127
    3. ' total' → logprob: -5.374816417694092
    4. '```' → logprob: -6.124816417694092
    5. '(total' → logprob: -6.624816417694092
    6. '{' → logprob: -7.124816417694092
    7. '{
' → logprob: -7.499816417694092
    8. 'bin' → logprob: -7.749816417694092
    9. '
' → logprob: -7.874816417694092
    10. '`' → logprob: -7.874816417694092

Token 2011: ' of' (ID: 328)
  Prédit: '(a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(a' → logprob: -1.4309098720550537
    2. '_a' → logprob: -1.9309098720550537
    3. ' =' → logprob: -2.0559098720550537
    4. 'a' → logprob: -2.1809098720550537
    5. '_' → logprob: -2.3059098720550537
    6. '=' → logprob: -2.3059098720550537
    7. '
' → logprob: -3.0559098720550537
    8. 'of' → logprob: -4.055910110473633
    9. '   ' → logprob: -4.180910110473633
    10. '```' → logprob: -4.805910110473633

Token 2012: ' powers' (ID: 27742)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.03934260457754135
    2. '(' → logprob: -3.7893426418304443
    3. 'powers' → logprob: -5.414342403411865
    4. '[' → logprob: -5.664342403411865
    5. 'a' → logprob: -6.039342403411865
    6. 'total' → logprob: -6.414342403411865
    7. 'pow' → logprob: -7.164342403411865
    8. ' ' → logprob: -7.539342403411865
    9. '(total' → logprob: -7.664342403411865
    10. ' (' → logprob: -8.164342880249023

Token 2013: ' of' (ID: 328)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.6778889298439026
    2. '       ' → logprob: -1.6778888702392578
    3. '
' → logprob: -2.552888870239258
    4. '```' → logprob: -2.677888870239258
    5. ' =' → logprob: -3.052888870239258
    6. '   ' → logprob: -3.427888870239258
    7. '_' → logprob: -4.177888870239258
    8. ':' → logprob: -4.552888870239258
    9. '#' → logprob: -5.052888870239258
    10. '2' → logprob: -5.177888870239258

Token 2014: ' ' (ID: 220)
  Prédit: 'two'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'two' → logprob: -0.6404325366020203
    2. '2' → logprob: -0.7654325366020203
    3. ' two' → logprob: -4.890432357788086
    4. '```' → logprob: -9.390432357788086
    5. 'Two' → logprob: -9.515432357788086
    6. '_two' → logprob: -10.140432357788086
    7. ' ' → logprob: -10.140432357788086
    8. '-two' → logprob: -10.765432357788086
    9. '(two' → logprob: -11.515432357788086
    10. '   ' → logprob: -12.765432357788086

Token 2015: '2' (ID: 17)
  Prédit: 'two'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'two' → logprob: -0.31418105959892273
    2. '2' → logprob: -1.3141810894012451
    3. ' two' → logprob: -7.189180850982666
    4. 'Two' → logprob: -9.439181327819824
    5. '```' → logprob: -10.064181327819824
    6. '_two' → logprob: -11.314181327819824
    7. '-two' → logprob: -11.939181327819824
    8. '   ' → logprob: -12.189181327819824
    9. ' ' → logprob: -12.439181327819824
    10. '(two' → logprob: -13.064181327819824

Token 2016: ',' (ID: 11)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.7165749073028564
    2. ':
' → logprob: -1.4665749073028564
    3. '       ' → logprob: -1.7165749073028564
    4. ':' → logprob: -3.2165749073028564
    5. '
' → logprob: -3.3415749073028564
    6. '   ' → logprob: -4.341574668884277
    7. '```' → logprob: -5.341574668884277
    8. ' =' → logprob: -5.966574668884277
    9. 'class' → logprob: -7.091574668884277
    10. ',' → logprob: -7.341574668884277

Token 2017: ' output' (ID: 4733)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.8462117910385132
    2. ':' → logprob: -1.8462117910385132
    3. '=' → logprob: -1.8462117910385132
    4. '_' → logprob: -2.7212119102478027
    5. '```' → logprob: -3.3462119102478027
    6. '[' → logprob: -3.4712119102478027
    7. ',' → logprob: -3.7212119102478027
    8. '   ' → logprob: -4.221211910247803
    9. '(' → logprob: -4.221211910247803
    10. '`' → logprob: -4.471211910247803

Token 2018: ' each' (ID: 2454)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.0900540351867676
    2. '
' → logprob: -1.3400540351867676
    3. 'def' → logprob: -1.5900540351867676
    4. ' =' → logprob: -2.7150540351867676
    5. '   ' → logprob: -3.0900540351867676
    6. '```' → logprob: -3.7150540351867676
    7. ':' → logprob: -3.8400540351867676
    8. ':
' → logprob: -4.215054035186768
    9. '(' → logprob: -5.840054035186768
    10. '[
' → logprob: -5.965054035186768

Token 2019: ' power' (ID: 3470)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.9337544441223145
    2. '   ' → logprob: -2.1837544441223145
    3. ' =' → logprob: -2.1837544441223145
    4. '
' → logprob: -2.4337544441223145
    5. ':' → logprob: -2.8087544441223145
    6. '_' → logprob: -2.9337544441223145
    7. '```' → logprob: -2.9337544441223145
    8. '       ' → logprob: -3.4337544441223145
    9. '`' → logprob: -4.6837544441223145
    10. '=' → logprob: -4.6837544441223145

Token 2020: ' as' (ID: 472)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.0467970371246338
    2. '
' → logprob: -1.1717970371246338
    3. '   ' → logprob: -1.7967970371246338
    4. 'def' → logprob: -2.921797037124634
    5. ' =' → logprob: -2.921797037124634
    6. ':' → logprob: -3.921797037124634
    7. ':
' → logprob: -4.171796798706055
    8. '```' → logprob: -5.296796798706055
    9. '        
' → logprob: -5.671796798706055
    10. '(' → logprob: -5.921796798706055

Token 2021: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -1.2397886514663696
    2. '(' → logprob: -1.4897886514663696
    3. '(a' → logprob: -1.4897886514663696
    4. '1' → logprob: -2.73978853225708
    5. '(
' → logprob: -3.23978853225708
    6. 'weight' → logprob: -3.86478853225708
    7. ' (' → logprob: -4.11478853225708
    8. 'def' → logprob: -4.23978853225708
    9. '(total' → logprob: -4.23978853225708
    10. 'Weight' → logprob: -4.36478853225708

Token 2022: ' chunk' (ID: 23958)
  Prédit: 'Weight'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Weight' → logprob: -0.09811849147081375
    2. '1' → logprob: -3.473118543624878
    3. '(' → logprob: -4.098118305206299
    4. '2' → logprob: -4.848118305206299
    5. 'Power' → logprob: -5.098118305206299
    6. '0' → logprob: -5.223118305206299
    7. 'b' → logprob: -5.848118305206299
    8. ' (' → logprob: -5.973118305206299
    9. 'pow' → logprob: -5.973118305206299
    10. 'weight' → logprob: -6.098118305206299

Token 2023: ' with' (ID: 483)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.25038573145866394
    2. 'def' → logprob: -2.0003857612609863
    3. '
' → logprob: -3.3753857612609863
    4. ':' → logprob: -3.7503857612609863
    5. ':
' → logprob: -4.250385761260986
    6. '   ' → logprob: -5.000385761260986
    7. '```' → logprob: -5.500385761260986
    8. ',' → logprob: -7.375385761260986
    9. '        
' → logprob: -8.000385284423828
    10. ' =' → logprob: -8.000385284423828

Token 2024: ' a' (ID: 261)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.04150686040520668
    2. '0' → logprob: -4.416506767272949
    3. 'total' → logprob: -4.791506767272949
    4. 'def' → logprob: -5.666506767272949
    5. 'weight' → logprob: -6.041506767272949
    6. '(total' → logprob: -6.041506767272949
    7. '
' → logprob: -6.166506767272949
    8. '(' → logprob: -6.291506767272949
    9. '```' → logprob: -6.291506767272949
    10. 'sum' → logprob: -6.416506767272949

Token 2025: '_j' (ID: 12021)
  Prédit: '_i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_i' → logprob: -0.15324905514717102
    2. ' =' → logprob: -3.6532490253448486
    3. 'b' → logprob: -3.9032490253448486
    4. 'Weight' → logprob: -4.028249263763428
    5. '_weight' → logprob: -4.278249263763428
    6. '_' → logprob: -4.403249263763428
    7. 'i' → logprob: -4.403249263763428
    8. '=' → logprob: -4.403249263763428
    9. ' _' → logprob: -4.778249263763428
    10. '`' → logprob: -6.278249263763428

Token 2026: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3177168071269989
    2. '=' → logprob: -1.5677168369293213
    3. ',' → logprob: -3.6927168369293213
    4. 'b' → logprob: -4.067716598510742
    5. '_' → logprob: -5.567716598510742
    6. '_b' → logprob: -6.067716598510742
    7. ',b' → logprob: -6.192716598510742
    8. ')' → logprob: -6.817716598510742
    9. '   ' → logprob: -6.817716598510742
    10. ' =
' → logprob: -6.942716598510742

Token 2027: ' power' (ID: 3470)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.013799804262816906
    2. 'total' → logprob: -5.888799667358398
    3. 'sum' → logprob: -6.013799667358398
    4. '{' → logprob: -6.513799667358398
    5. 'power' → logprob: -6.763799667358398
    6. 'pow' → logprob: -6.763799667358398
    7. '0' → logprob: -7.388799667358398
    8. 'pop' → logprob: -7.638799667358398
    9. '
' → logprob: -7.638799667358398
    10. '2' → logprob: -7.763799667358398

Token 2028: ' and' (ID: 326)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.2035670280456543
    2. '   ' → logprob: -1.3285670280456543
    3. '_' → logprob: -2.2035670280456543
    4. '```' → logprob: -2.2035670280456543
    5. ':' → logprob: -2.7035670280456543
    6. ',' → logprob: -3.0785670280456543
    7. ' =' → logprob: -3.5785670280456543
    8. 'def' → logprob: -4.203567028045654
    9. '
' → logprob: -4.453567028045654
    10. '=' → logprob: -4.703567028045654

Token 2029: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.022842057049274445
    2. '0' → logprob: -3.8978421688079834
    3. '1' → logprob: -6.272841930389404
    4. '```' → logprob: -7.897841930389404
    5. '
' → logprob: -11.397842407226562
    6. 'a' → logprob: -11.772842407226562
    7. ' b' → logprob: -12.022842407226562
    8. '``' → logprob: -12.147842407226562
    9. '`' → logprob: -13.272842407226562
    10. 'quantity' → logprob: -13.522842407226562

Token 2030: '_j' (ID: 12021)
  Prédit: '_j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_j' → logprob: -0.35949012637138367
    2. '_i' → logprob: -1.234490156173706
    3. '=' → logprob: -4.859489917755127
    4. '_' → logprob: -6.234489917755127
    5. ' =' → logprob: -7.609489917755127
    6. '```' → logprob: -8.359490394592285
    7. 'i' → logprob: -8.859490394592285
    8. '=_' → logprob: -9.234490394592285
    9. '`' → logprob: -9.609490394592285
    10. '_=' → logprob: -10.109490394592285

Token 2031: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5801156163215637
    2. ' =' → logprob: -1.080115556716919
    3. '```' → logprob: -3.455115556716919
    4. ',' → logprob: -3.580115556716919
    5. '_' → logprob: -4.455115795135498
    6. ':' → logprob: -4.955115795135498
    7. '`' → logprob: -5.705115795135498
    8. '   ' → logprob: -5.705115795135498
    9. '[' → logprob: -5.955115795135498
    10. '
' → logprob: -6.080115795135498

Token 2032: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -16.0
    3. '۰' → logprob: -20.0
    4. '```' → logprob: -20.875
    5. '1' → logprob: -21.0
    6. '０' → logprob: -21.875
    7. '<|end|>' → logprob: -22.25
    8. '000' → logprob: -22.875
    9. '00' → logprob: -23.0
    10. '[' → logprob: -23.375

Token 2033: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: 0.0
    2. ' ' → logprob: -17.875
    3. '۰' → logprob: -20.125
    4. '```' → logprob: -20.25
    5. '1' → logprob: -20.375
    6. '<|end|>' → logprob: -20.5
    7. '00' → logprob: -20.625
    8. '０' → logprob: -21.5
    9. '000' → logprob: -21.5
    10. '[' → logprob: -21.625

Token 2034: '

' (ID: 279)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.750778079032898
    2. 'def' → logprob: -1.125778079032898
    3. '   ' → logprob: -1.875778079032898
    4. '
' → logprob: -3.7507781982421875
    5. ':' → logprob: -4.5007781982421875
    6. ':
' → logprob: -5.3757781982421875
    7. '```' → logprob: -5.3757781982421875
    8. ' =' → logprob: -6.2507781982421875
    9. ' def' → logprob: -6.5007781982421875
    10. '`' → logprob: -8.000778198242188

Token 2035: '       ' (ID: 309)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.4261009395122528
    2. '       ' → logprob: -1.4261009693145752
    3. '   ' → logprob: -2.301100969314575
    4. ':' → logprob: -5.926100730895996
    5. ':
' → logprob: -6.676100730895996
    6. '
' → logprob: -7.051100730895996
    7. '```' → logprob: -7.551100730895996
    8. ' def' → logprob: -8.176100730895996
    9. ' =' → logprob: -8.426100730895996
    10. 'total' → logprob: -9.176100730895996

Token 2036: ' #' (ID: 1069)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.24613653123378754
    2. '       ' → logprob: -1.7461365461349487
    3. '   ' → logprob: -3.871136426925659
    4. '
' → logprob: -3.996136426925659
    5. ':' → logprob: -6.246136665344238
    6. '```' → logprob: -6.996136665344238
    7. ':
' → logprob: -7.371136665344238
    8. '#' (adapté à ' #') → logprob: -8.871136665344238
    9. 'total' → logprob: -9.121136665344238
    10. 'class' → logprob: -9.121136665344238

Token 2037: ' But' (ID: 3072)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.044940799474716187
    2. '
' → logprob: -3.919940710067749
    3. '       ' → logprob: -4.294940948486328
    4. 'total' → logprob: -5.294940948486328
    5. '   ' → logprob: -5.669940948486328
    6. 'result' → logprob: -7.669940948486328
    7. '#' → logprob: -8.044940948486328
    8. '```' → logprob: -8.294940948486328
    9. 'pow' → logprob: -9.169940948486328
    10. 'power' → logprob: -9.169940948486328

Token 2038: ' as' (ID: 472)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.19553634524345398
    2. ':' → logprob: -3.3205363750457764
    3. '
' → logprob: -3.8205363750457764
    4. '#' → logprob: -3.8205363750457764
    5. '   ' → logprob: -4.070536136627197
    6. '0' → logprob: -4.320536136627197
    7. '       ' → logprob: -4.570536136627197
    8. 'from' → logprob: -4.820536136627197
    9. ' =' → logprob: -4.945536136627197
    10. 'total' → logprob: -5.070536136627197

Token 2039: ' sample' (ID: 10176)
  Prédit: 'total'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'total' → logprob: -0.9440074563026428
    2. '
' → logprob: -2.194007396697998
    3. '       ' → logprob: -2.194007396697998
    4. 'sum' → logprob: -2.319007396697998
    5. '0' → logprob: -2.944007396697998
    6. '   ' → logprob: -3.194007396697998
    7. 'a' → logprob: -3.319007396697998
    8. '           ' → logprob: -3.819007396697998
    9. '#' → logprob: -3.944007396697998
    10. 'bin' → logprob: -4.319007396697998

Token 2040: ' output' (ID: 4733)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '```' → logprob: -0.6318044662475586
    2. ' =' → logprob: -1.3818044662475586
    3. '_' → logprob: -3.0068044662475586
    4. ':' → logprob: -3.0068044662475586
    5. 'def' → logprob: -3.7568044662475586
    6. '=' → logprob: -3.7568044662475586
    7. '`' → logprob: -3.7568044662475586
    8. '``' → logprob: -4.881804466247559
    9. '   ' → logprob: -5.631804466247559
    10. '_units' → logprob: -6.256804466247559

Token 2041: ' ' (ID: 220)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.7578682899475098
    2. '```' → logprob: -1.2578682899475098
    3. '=' → logprob: -1.8828682899475098
    4. ':' → logprob: -3.5078682899475098
    5. '[' → logprob: -3.6328682899475098
    6. '_' → logprob: -5.25786828994751
    7. '``' → logprob: -5.38286828994751
    8. '`' → logprob: -5.38286828994751
    9. '[
' → logprob: -5.50786828994751
    10. 'def' → logprob: -5.75786828994751

Token 2042: '1' (ID: 16)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.3838033080101013
    2. ' =' → logprob: -1.258803367614746
    3. '3' → logprob: -4.883803367614746
    4. '1' → logprob: -5.008803367614746
    5. '```' → logprob: -5.383803367614746
    6. '[' → logprob: -6.008803367614746
    7. ' ' → logprob: -6.008803367614746
    8. ':' → logprob: -6.133803367614746
    9. '[
' → logprob: -6.258803367614746
    10. '0' → logprob: -7.008803367614746

Token 2043: ' shows' (ID: 7398)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.927058219909668
    2. '=' → logprob: -1.427058219909668
    3. ':' → logprob: -1.552058219909668
    4. '```' → logprob: -2.427058219909668
    5. '[' → logprob: -3.927058219909668
    6. '   ' → logprob: -4.927058219909668
    7. '
' → logprob: -5.302058219909668
    8. ':
' → logprob: -5.552058219909668
    9. '=
' → logprob: -5.927058219909668
    10. '3' → logprob: -6.052058219909668

Token 2044: ' output' (ID: 4733)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.2181571125984192
    2. '   ' → logprob: -2.3431570529937744
    3. '
' → logprob: -3.0931570529937744
    4. '       ' → logprob: -3.8431570529937744
    5. '```' → logprob: -4.4681572914123535
    6. ':' → logprob: -4.9681572914123535
    7. ':
' → logprob: -5.0931572914123535
    8. 'class' → logprob: -5.5931572914123535
    9. ' =' → logprob: -6.3431572914123535
    10. 'from' → logprob: -7.3431572914123535

Token 2045: ' ' (ID: 220)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.7388266921043396
    2. '   ' → logprob: -1.7388267517089844
    3. ':
' → logprob: -2.4888267517089844
    4. '```' → logprob: -2.6138267517089844
    5. ':' → logprob: -2.8638267517089844
    6. '
' → logprob: -2.9888267517089844
    7. ' =' → logprob: -3.2388267517089844
    8. '       ' → logprob: -4.238826751708984
    9. '=' → logprob: -5.488826751708984
    10. '):
' → logprob: -5.863826751708984

Token 2046: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.37926504015922546
    2. '=' → logprob: -2.504265069961548
    3. '[
' → logprob: -2.504265069961548
    4. 'def' → logprob: -3.379265069961548
    5. ' =' → logprob: -3.629265069961548
    6. '```' → logprob: -3.629265069961548
    7. '[' → logprob: -4.004264831542969
    8. '(' → logprob: -4.629264831542969
    9. 'from' → logprob: -4.629264831542969
    10. ':' → logprob: -5.254264831542969

Token 2047: ' ' (ID: 220)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.5656935572624207
    2. '2' → logprob: -2.1906936168670654
    3. '
' → logprob: -2.5656936168670654
    4. ' ,' → logprob: -2.5656936168670654
    5. '<|end|>' → logprob: -3.3156936168670654
    6. '```' → logprob: -3.5656936168670654
    7. '3' → logprob: -3.9406936168670654
    8. ',
' → logprob: -4.065693378448486
    9. ' ' → logprob: -4.315693378448486
    10. '   ' → logprob: -4.440693378448486

Token 2048: '0' (ID: 15)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.2644895017147064
    2. '0' → logprob: -1.6394895315170288
    3. ',' → logprob: -3.8894894123077393
    4. ' ,' → logprob: -4.389489650726318
    5. '<|end|>' → logprob: -6.389489650726318
    6. '3' → logprob: -6.514489650726318
    7. '```' → logprob: -6.639489650726318
    8. '  ' → logprob: -8.51448917388916
    9. '2' → logprob: -9.01448917388916
    10. '1' → logprob: -9.26448917388916

Token 2049: ' and' (ID: 326)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.5493294596672058
    2. ',' → logprob: -1.1743295192718506
    3. ' ,' → logprob: -3.4243295192718506
    4. ',
' → logprob: -3.9243295192718506
    5. '<|end|>' → logprob: -4.4243292808532715
    6. '```' → logprob: -4.6743292808532715
    7. '   ' → logprob: -4.6743292808532715
    8. ' ' → logprob: -4.9243292808532715
    9. '[' → logprob: -5.6743292808532715
    10. '3' → logprob: -6.2993292808532715

Token 2050: ' ' (ID: 220)
  Prédit: '5'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '5' → logprob: -0.0034462378825992346
    2. ' ' → logprob: -5.753446102142334
    3. '6' → logprob: -8.628446578979492
    4. '3' → logprob: -10.253446578979492
    5. '4' → logprob: -10.503446578979492
    6. '   ' → logprob: -12.253446578979492
    7. '```' → logprob: -12.253446578979492
    8. '7' → logprob: -12.503446578979492
    9. '2' → logprob: -12.753446578979492
    10. '1' → logprob: -12.753446578979492

Token 2051: '5' (ID: 20)
  Prédit: '5'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '5' → logprob: -0.0014317858731374145
    2. '6' → logprob: -6.751431941986084
    3. '3' → logprob: -9.001431465148926
    4. '4' → logprob: -9.876431465148926
    5. '1' → logprob: -10.251431465148926
    6. ' ' → logprob: -11.126431465148926
    7. '```' → logprob: -11.376431465148926
    8. '0' → logprob: -11.501431465148926
    9. '2' → logprob: -11.876431465148926
    10. '8' → logprob: -13.251431465148926

Token 2052: ' ' (ID: 220)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '```' → logprob: -1.0959792137145996
    2. ',' → logprob: -1.7209792137145996
    3. '   ' → logprob: -1.8459792137145996
    4. '
' → logprob: -1.8459792137145996
    5. ' =' → logprob: -3.2209792137145996
    6. 'def' → logprob: -3.3459792137145996
    7. ':' → logprob: -3.7209792137145996
    8. ' ,' → logprob: -4.5959792137146
    9. '=' → logprob: -5.0959792137146
    10. ' ' → logprob: -5.0959792137146

Token 2053: '0' (ID: 15)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.2625799179077148
    2. ' ' → logprob: -1.3875799179077148
    3. '
' → logprob: -2.012579917907715
    4. '   ' → logprob: -2.387579917907715
    5. '<|end|>' → logprob: -2.387579917907715
    6. '```' → logprob: -2.887579917907715
    7. ' ,' → logprob: -3.387579917907715
    8. '0' → logprob: -4.012579917907715
    9. '  ' → logprob: -4.512579917907715
    10. '<|end|>' → logprob: -5.137579917907715

Token 2054: ',' (ID: 11)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -1.3162890672683716
    2. '   ' → logprob: -1.4412890672683716
    3. '       ' → logprob: -2.066288948059082
    4. 'def' → logprob: -2.191288948059082
    5. ':' → logprob: -2.566288948059082
    6. '```' → logprob: -2.691288948059082
    7. ':
' → logprob: -3.691288948059082
    8. ' =' → logprob: -4.316288948059082
    9. ',' → logprob: -4.316288948059082
    10. '[' → logprob: -4.566288948059082

Token 2055: ' sums' (ID: 73121)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -1.3222649097442627
    2. ':' → logprob: -1.6972649097442627
    3. '   ' → logprob: -1.6972649097442627
    4. '       ' → logprob: -2.3222649097442627
    5. ':
' → logprob: -2.5722649097442627
    6. '```' → logprob: -3.1972649097442627
    7. ',' → logprob: -3.6972649097442627
    8. 'def' → logprob: -3.8222649097442627
    9. ' =' → logprob: -4.197264671325684
    10. '[' → logprob: -4.197264671325684

Token 2056: ' to' (ID: 316)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6942205429077148
    2. ' =' → logprob: -0.9442205429077148
    3. '```' → logprob: -3.194220542907715
    4. ',' → logprob: -3.819220542907715
    5. '   ' → logprob: -4.819220542907715
    6. '3' → logprob: -4.944220542907715
    7. '=
' → logprob: -5.069220542907715
    8. ':' → logprob: -5.319220542907715
    9. ' ' → logprob: -5.694220542907715
    10. '
' → logprob: -5.944220542907715

Token 2057: ' ' (ID: 220)
  Prédit: '8'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '8' → logprob: -0.030815215781331062
    2. '3' → logprob: -3.6558151245117188
    3. ' ' → logprob: -6.155815124511719
    4. '9' → logprob: -6.905815124511719
    5. '(' → logprob: -7.280815124511719
    6. '```' → logprob: -8.405815124511719
    7. '1' → logprob: -8.530815124511719
    8. '``' → logprob: -9.780815124511719
    9. '[' → logprob: -10.155815124511719
    10. '`' → logprob: -10.780815124511719

Token 2058: '8' (ID: 23)
  Prédit: '8'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '8' → logprob: -0.00036918214755132794
    2. '9' → logprob: -8.37536907196045
    3. '(' → logprob: -9.87536907196045
    4. '3' → logprob: -10.12536907196045
    5. '```' → logprob: -10.75036907196045
    6. ' ' → logprob: -11.37536907196045
    7. '``' → logprob: -12.75036907196045
    8. '[' → logprob: -12.87536907196045
    9. '[
' → logprob: -13.37536907196045
    10. '1' → logprob: -13.62536907196045

Token 2059: ',' (ID: 11)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.7791342735290527
    2. '=' → logprob: -1.9041342735290527
    3. 'def' → logprob: -1.9041342735290527
    4. ':' → logprob: -2.1541342735290527
    5. '```' → logprob: -2.1541342735290527
    6. '
' → logprob: -2.2791342735290527
    7. ' =' → logprob: -2.9041342735290527
    8. ',' → logprob: -4.029134273529053
    9. ':
' → logprob: -4.029134273529053
    10. '3' → logprob: -4.529134273529053

Token 2060: ' but' (ID: 889)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '```' → logprob: -0.9926531314849854
    2. ',' → logprob: -2.3676531314849854
    3. '   ' → logprob: -2.3676531314849854
    4. '
' → logprob: -2.6176531314849854
    5. ':' → logprob: -2.8676531314849854
    6. '=' → logprob: -2.9926531314849854
    7. '3' → logprob: -3.2426531314849854
    8. '       ' → logprob: -3.7426531314849854
    9. 'def' → logprob: -3.9926531314849854
    10. ' ' → logprob: -4.117652893066406

Token 2061: ' input' (ID: 3422)
  Prédit: '3'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '3' → logprob: -1.1592141389846802
    2. '0' → logprob: -1.2842141389846802
    3. ' ' → logprob: -2.0342140197753906
    4. '```' → logprob: -2.1592140197753906
    5. '6' → logprob: -2.9092140197753906
    6. '7' → logprob: -3.2842140197753906
    7. '1' → logprob: -3.9092140197753906
    8. '2' → logprob: -4.659214019775391
    9. '
' → logprob: -5.409214019775391
    10. ':' → logprob: -5.534214019775391

Token 2062: ' sum' (ID: 4215)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '```' → logprob: -0.43282797932624817
    2. '
' → logprob: -1.8078279495239258
    3. ' ' → logprob: -3.057827949523926
    4. '3' → logprob: -3.432827949523926
    5. ',' → logprob: -3.932827949523926
    6. '\n' → logprob: -4.432827949523926
    7. ':' → logprob: -4.682827949523926
    8. '   ' → logprob: -4.807827949523926
    9. '``' → logprob: -4.807827949523926
    10. '6' → logprob: -5.057827949523926

Token 2063: ' is' (ID: 382)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '```' → logprob: -0.42842188477516174
    2. '=' → logprob: -3.053421974182129
    3. ' ' → logprob: -3.178421974182129
    4. '3' → logprob: -3.303421974182129
    5. ' =' → logprob: -3.303421974182129
    6. ',' → logprob: -3.428421974182129
    7. ':' → logprob: -3.803421974182129
    8. '
' → logprob: -4.178421974182129
    9. '2' → logprob: -4.303421974182129
    10. '`' → logprob: -4.428421974182129

Token 2064: ' ' (ID: 220)
  Prédit: '3'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.3447019159793854
    2. '9' → logprob: -2.0947020053863525
    3. '6' → logprob: -3.3447020053863525
    4. '7' → logprob: -3.5947020053863525
    5. '```' → logprob: -3.5947020053863525
    6. ' ' → logprob: -4.219701766967773
    7. '1' → logprob: -4.219701766967773
    8. '2' → logprob: -4.344701766967773
    9. '5' → logprob: -4.469701766967773
    10. '4' → logprob: -4.844701766967773

Token 2065: '9' (ID: 24)
  Prédit: '9'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: -0.01961732655763626
    2. '8' → logprob: -4.769617557525635
    3. '4' → logprob: -5.519617557525635
    4. '3' → logprob: -6.019617557525635
    5. '7' → logprob: -6.644617557525635
    6. '1' → logprob: -7.269617557525635
    7. '6' → logprob: -7.519617557525635
    8. '2' → logprob: -7.519617557525635
    9. ' ' → logprob: -8.269617080688477
    10. '```' → logprob: -8.394617080688477

Token 2066: '

' (ID: 279)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -1.3663020133972168
    2. '   ' → logprob: -1.9913020133972168
    3. '+
' → logprob: -2.366302013397217
    4. '```' → logprob: -2.491302013397217
    5. '
' → logprob: -2.741302013397217
    6. ',' → logprob: -2.991302013397217
    7. ',
' → logprob: -3.241302013397217
    8. '3' → logprob: -3.491302013397217
    9. ':
' → logprob: -3.491302013397217
    10. ':' → logprob: -3.616302013397217

Token 2067: '       ' (ID: 309)
  Prédit: '3'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '3' → logprob: -1.3153090476989746
    2. '9' → logprob: -1.9403090476989746
    3. '   ' → logprob: -2.0653090476989746
    4. '
' → logprob: -2.0653090476989746
    5. '1' → logprob: -2.5653090476989746
    6. '```' → logprob: -3.0653090476989746
    7. ',' → logprob: -3.4403090476989746
    8. ' ' → logprob: -3.5653090476989746
    9. '.' → logprob: -3.8153090476989746
    10. '0' → logprob: -3.8153090476989746

Token 2068: ' #' (ID: 1069)
  Prédit: '3'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '3' → logprob: -1.8655643463134766
    2. '1' → logprob: -2.1155643463134766
    3. '```' → logprob: -2.1155643463134766
    4. '+' → logprob: -2.3655643463134766
    5. '   ' → logprob: -2.3655643463134766
    6. '+
' → logprob: -2.8655643463134766
    7. '
' → logprob: -2.9905643463134766
    8. '6' → logprob: -3.2405643463134766
    9. ' +' → logprob: -3.3655643463134766
    10. ' ' → logprob: -3.3655643463134766

Token 2069: ' Sample' (ID: 31073)
  Prédit: '9'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '9' → logprob: -1.5600659847259521
    2. '   ' → logprob: -1.8100659847259521
    3. '3' → logprob: -2.310065984725952
    4. 'def' → logprob: -2.560065984725952
    5. '```' → logprob: -2.685065984725952
    6. '1' → logprob: -3.060065984725952
    7. '
' → logprob: -3.060065984725952
    8. '#' → logprob: -3.435065984725952
    9. '0' → logprob: -3.560065984725952
    10. ' ' → logprob: -3.685065984725952

Token 2070: ' input' (ID: 3422)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '```' → logprob: -1.814827561378479
    2. '9' → logprob: -2.0648274421691895
    3. ':' → logprob: -2.3148274421691895
    4. '3' → logprob: -2.5648274421691895
    5. '
' → logprob: -2.6898274421691895
    6. '   ' → logprob: -2.8148274421691895
    7. ' ' → logprob: -3.0648274421691895
    8. ',' → logprob: -3.3148274421691895
    9. '=' → logprob: -3.4398274421691895
    10. '.' → logprob: -3.4398274421691895

Token 2071: ' ' (ID: 220)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -1.8095933198928833
    2. ' =' → logprob: -1.9345933198928833
    3. '=' → logprob: -1.9345933198928833
    4. '```' → logprob: -1.9345933198928833
    5. '
' → logprob: -2.5595932006835938
    6. ',' → logprob: -3.1845932006835938
    7. ' ' → logprob: -3.4345932006835938
    8. '3' → logprob: -3.6845932006835938
    9. '+' → logprob: -3.6845932006835938
    10. '   ' → logprob: -3.8095932006835938

Token 2072: '1' (ID: 16)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -1.0118842124938965
    2. '=' → logprob: -1.7618842124938965
    3. ' =' → logprob: -2.1368842124938965
    4. '```' → logprob: -3.0118842124938965
    5. ',' → logprob: -3.3868842124938965
    6. 'a' → logprob: -3.5118842124938965
    7. '[' → logprob: -3.6368842124938965
    8. '.' → logprob: -4.0118842124938965
    9. '+' → logprob: -4.0118842124938965
    10. '#' → logprob: -4.2618842124938965

Token 2073: ':' (ID: 25)
  Prédit: '9'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: -0.9627130627632141
    2. '```' → logprob: -1.2127130031585693
    3. '3' → logprob: -1.8377130031585693
    4. 'a' → logprob: -3.7127130031585693
    5. ':' → logprob: -3.9627130031585693
    6. '
' → logprob: -4.337713241577148
    7. '7' → logprob: -4.462713241577148
    8. ' ' → logprob: -4.462713241577148
    9. '[
' → logprob: -4.587713241577148
    10. '2' → logprob: -4.712713241577148

Token 2074: ' (' (ID: 350)
  Prédit: '9'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '9' → logprob: -1.3892865180969238
    2. '3' → logprob: -2.014286518096924
    3. '[
' → logprob: -2.014286518096924
    4. '```' → logprob: -2.139286518096924
    5. '[' → logprob: -3.014286518096924
    6. '1' → logprob: -3.139286518096924
    7. '0' → logprob: -3.264286518096924
    8. 'a' → logprob: -3.389286518096924
    9. ' ' → logprob: -3.514286518096924
    10. '   ' → logprob: -3.514286518096924

Token 2075: '2' (ID: 17)
  Prédit: '3'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -1.0671179294586182
    2. '1' → logprob: -1.5671179294586182
    3. '9' → logprob: -2.192117929458618
    4. '2' → logprob: -2.442117929458618
    5. ' ' → logprob: -2.442117929458618
    6. '0' → logprob: -2.942117929458618
    7. '```' → logprob: -3.567117929458618
    8. 'a' → logprob: -4.317117691040039
    9. '4' → logprob: -4.442117691040039
    10. '7' → logprob: -5.067117691040039

Token 2076: ' ' (ID: 220)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.26249057054519653
    2. ' ,' → logprob: -1.7624905109405518
    3. ' ' → logprob: -3.6374905109405518
    4. '3' → logprob: -4.262490749359131
    5. ')' → logprob: -4.887490749359131
    6. '```' → logprob: -5.387490749359131
    7. '0' → logprob: -6.762490749359131
    8. '+' → logprob: -6.762490749359131
    9. '
' → logprob: -7.137490749359131
    10. '<|end|>' → logprob: -7.262490749359131

Token 2077: '1' (ID: 16)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.1416623294353485
    2. '*' → logprob: -3.266662359237671
    3. '3' → logprob: -3.641662359237671
    4. ' ' → logprob: -3.891662359237671
    5. '```' → logprob: -4.266662120819092
    6. '+' → logprob: -4.891662120819092
    7. ')' → logprob: -4.891662120819092
    8. ' ,' → logprob: -5.141662120819092
    9. '5' → logprob: -5.766662120819092
    10. '1' → logprob: -6.516662120819092

Token 2078: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.3621073067188263
    2. '+' → logprob: -2.612107276916504
    3. '```' → logprob: -2.737107276916504
    4. ')' → logprob: -3.237107276916504
    5. ')
' → logprob: -3.862107276916504
    6. ',
' → logprob: -3.987107276916504
    7. ' ,' → logprob: -3.987107276916504
    8. '``' → logprob: -4.237107276916504
    9. ' ' → logprob: -4.737107276916504
    10. '   ' → logprob: -4.862107276916504

Token 2079: ' ' (ID: 220)
  Prédit: '3'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.5700126886367798
    2. '4' → logprob: -1.4450126886367798
    3. '1' → logprob: -1.6950126886367798
    4. ' ' → logprob: -5.07001256942749
    5. '2' → logprob: -5.19501256942749
    6. '
' → logprob: -6.69501256942749
    7. '```' → logprob: -7.94501256942749
    8. '   ' → logprob: -8.070013046264648
    9. '``' → logprob: -8.070013046264648
    10. ')' → logprob: -8.195013046264648

Token 2080: '1' (ID: 16)
  Prédit: '3'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.718130886554718
    2. '4' → logprob: -0.843130886554718
    3. ' ' → logprob: -3.3431308269500732
    4. '1' → logprob: -3.4681308269500732
    5. '6' → logprob: -5.093131065368652
    6. '2' → logprob: -5.843131065368652
    7. '0' → logprob: -6.468131065368652
    8. '
' → logprob: -6.468131065368652
    9. '7' → logprob: -6.968131065368652
    10. '5' → logprob: -7.593131065368652

Token 2081: ' ' (ID: 220)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.9690313935279846
    2. ' ' → logprob: -0.9690313935279846
    3. '3' → logprob: -2.34403133392334
    4. ' ,' → logprob: -2.46903133392334
    5. '0' → logprob: -4.09403133392334
    6. '2' → logprob: -4.34403133392334
    7. '```' → logprob: -4.84403133392334
    8. '*' → logprob: -5.21903133392334
    9. '1' → logprob: -5.71903133392334
    10. ')' → logprob: -5.96903133392334

Token 2082: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.16115021705627441
    2. ' ' → logprob: -2.1611502170562744
    3. '2' → logprob: -3.9111502170562744
    4. '0' → logprob: -4.911149978637695
    5. '1' → logprob: -5.786149978637695
    6. ',' → logprob: -6.286149978637695
    7. ' ,' → logprob: -8.411149978637695
    8. ')' → logprob: -8.661149978637695
    9. '*' → logprob: -8.911149978637695
    10. '),' → logprob: -8.911149978637695

Token 2083: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.7998644709587097
    2. ')
' → logprob: -1.6748645305633545
    3. '```' → logprob: -1.9248645305633545
    4. ')' → logprob: -2.4248645305633545
    5. '   ' → logprob: -3.5498645305633545
    6. '2' → logprob: -4.424864292144775
    7. '``' → logprob: -4.549864292144775
    8. ' ,' → logprob: -4.799864292144775
    9. '),' → logprob: -4.924864292144775
    10. ' ' → logprob: -4.924864292144775

Token 2084: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.35495060682296753
    2. '4' → logprob: -1.8549506664276123
    3. '3' → logprob: -2.2299506664276123
    4. ' ' → logprob: -4.104950428009033
    5. '1' → logprob: -4.604950428009033
    6. '6' → logprob: -5.229950428009033
    7. '```' → logprob: -7.229950428009033
    8. '5' → logprob: -7.854950428009033
    9. '
' → logprob: -7.854950428009033
    10. '``' → logprob: -7.979950428009033

Token 2085: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.03537778556346893
    2. '3' → logprob: -4.2853779792785645
    3. '4' → logprob: -4.4103779792785645
    4. '1' → logprob: -5.1603779792785645
    5. '6' → logprob: -6.5353779792785645
    6. '5' → logprob: -7.2853779792785645
    7. '```' → logprob: -7.6603779792785645
    8. ' ' → logprob: -8.910377502441406
    9. '``' → logprob: -8.910377502441406
    10. '(' → logprob: -9.285377502441406

Token 2086: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.29728931188583374
    2. ',' → logprob: -1.9222893714904785
    3. '5' → logprob: -3.2972893714904785
    4. '*' → logprob: -3.6722893714904785
    5. '0' → logprob: -4.0472893714904785
    6. ')' → logprob: -4.4222893714904785
    7. '2' → logprob: -5.1722893714904785
    8. '1' → logprob: -5.2972893714904785
    9. ' ,' → logprob: -5.9222893714904785
    10. ' *' → logprob: -6.6722893714904785

Token 2087: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.6920475363731384
    2. '0' → logprob: -1.3170475959777832
    3. ' ' → logprob: -1.5670475959777832
    4. '5' → logprob: -4.442047595977783
    5. '1' → logprob: -4.817047595977783
    6. '4' → logprob: -6.942047595977783
    7. ',' → logprob: -7.442047595977783
    8. '```' → logprob: -7.567047595977783
    9. '3' → logprob: -7.942047595977783
    10. ')' → logprob: -8.567047119140625

Token 2088: ')

' (ID: 1029)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -1.3079248666763306
    2. '   ' → logprob: -1.5579248666763306
    3. '```' → logprob: -2.182924747467041
    4. ')' → logprob: -2.307924747467041
    5. '       ' → logprob: -2.807924747467041
    6. ')
' → logprob: -2.807924747467041
    7. ':' → logprob: -2.932924747467041
    8. ':
' → logprob: -4.057924747467041
    9. '):
' → logprob: -4.182924747467041
    10. '):' → logprob: -4.182924747467041

Token 2089: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.1979039907455444
    2. '3' → logprob: -1.6979039907455444
    3. '
' → logprob: -1.9479039907455444
    4. '```' → logprob: -2.197904109954834
    5. ' ' → logprob: -2.697904109954834
    6. '7' → logprob: -3.197904109954834
    7. '<|end|>' → logprob: -4.197904109954834
    8. '9' → logprob: -4.197904109954834
    9. ',' → logprob: -4.322904109954834
    10. 'def' → logprob: -4.447904109954834

Token 2090: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.1673979759216309
    2. '       ' → logprob: -1.5423979759216309
    3. ',' → logprob: -1.9173979759216309
    4. '
' → logprob: -2.792397975921631
    5. '3' → logprob: -3.417397975921631
    6. '```' → logprob: -3.417397975921631
    7. ')' → logprob: -3.542397975921631
    8. ':
' → logprob: -3.667397975921631
    9. ':' → logprob: -4.042397975921631
    10. '9' → logprob: -4.292397975921631

Token 2091: ' sum' (ID: 4215)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.5524705648422241
    2. '1' → logprob: -2.4274706840515137
    3. '9' → logprob: -2.8024706840515137
    4. '3' → logprob: -3.0524706840515137
    5. '       ' → logprob: -3.0524706840515137
    6. '0' → logprob: -3.1774706840515137
    7. '   ' → logprob: -3.4274706840515137
    8. '
' → logprob: -3.8024706840515137
    9. '2' → logprob: -3.9274706840515137
    10. '4' → logprob: -4.802470684051514

Token 2092: ' a' (ID: 261)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.4914243221282959
    2. '=' → logprob: -1.491424322128296
    3. ' ' → logprob: -2.741424322128296
    4. '3' → logprob: -3.241424322128296
    5. '2' → logprob: -3.741424322128296
    6. '1' → logprob: -5.241424560546875
    7. '```' → logprob: -5.241424560546875
    8. 'a' → logprob: -5.241424560546875
    9. '
' → logprob: -5.491424560546875
    10. '9' → logprob: -5.616424560546875

Token 2093: '_i' (ID: 10853)
  Prédit: '_i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_i' → logprob: -0.00040219054790213704
    2. '_' → logprob: -8.375402450561523
    3. 'i' → logprob: -9.500402450561523
    4. '=' → logprob: -10.375402450561523
    5. '```' → logprob: -10.875402450561523
    6. ' =' → logprob: -11.125402450561523
    7. '2' → logprob: -11.875402450561523
    8. '_
' → logprob: -12.000402450561523
    9. '
' → logprob: -12.375402450561523
    10. '3' → logprob: -12.750402450561523

Token 2094: ' *' (ID: 425)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -1.3960932493209839
    2. '_i' → logprob: -1.3960932493209839
    3. ' *' → logprob: -1.5210932493209839
    4. '=' → logprob: -2.3960933685302734
    5. '2' → logprob: -3.1460933685302734
    6. ' =' → logprob: -3.2710933685302734
    7. '3' → logprob: -3.6460933685302734
    8. '1' → logprob: -3.7710933685302734
    9. ',' → logprob: -4.271093368530273
    10. '
' → logprob: -4.896093368530273

Token 2095: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.001352498889900744
    2. '1' → logprob: -6.751352310180664
    3. '3' → logprob: -9.001352310180664
    4. ' b' → logprob: -10.501352310180664
    5. '```' → logprob: -10.876352310180664
    6. '
' → logprob: -12.751352310180664
    7. '2' → logprob: -13.001352310180664
    8. '(' → logprob: -13.376352310180664
    9. '`' → logprob: -13.626352310180664
    10. 'a' → logprob: -13.751352310180664

Token 2096: '_i' (ID: 10853)
  Prédit: '_i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_i' → logprob: -0.00028255043434910476
    2. '_j' → logprob: -9.125282287597656
    3. '```' → logprob: -9.125282287597656
    4. '
' → logprob: -11.250282287597656
    5. '_' → logprob: -11.500282287597656
    6. 'i' → logprob: -11.625282287597656
    7. '`' → logprob: -12.000282287597656
    8. '\' → logprob: -12.250282287597656
    9. '_
' → logprob: -12.250282287597656
    10. '``' → logprob: -12.625282287597656

Token 2097: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.630321741104126
    2. '=' → logprob: -1.630321741104126
    3. ' +' → logprob: -3.130321741104126
    4. '+' → logprob: -3.630321741104126
    5. ' *' → logprob: -3.630321741104126
    6. '3' → logprob: -3.630321741104126
    7. ',' → logprob: -3.755321741104126
    8. '*' → logprob: -3.755321741104126
    9. '
' → logprob: -4.130321502685547
    10. '```' → logprob: -4.130321502685547

Token 2098: ' ' (ID: 220)
  Prédit: '9'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: -0.056109603494405746
    2. '2' → logprob: -3.181109666824341
    3. '(' → logprob: -4.681109428405762
    4. '3' → logprob: -6.431109428405762
    5. '1' → logprob: -6.556109428405762
    6. '4' → logprob: -8.431109428405762
    7. ' ' → logprob: -8.556109428405762
    8. '```' → logprob: -9.431109428405762
    9. '`' → logprob: -10.431109428405762
    10. '((' → logprob: -10.556109428405762

Token 2099: '2' (ID: 17)
  Prédit: '9'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: -0.04835569113492966
    2. '(' → logprob: -3.7983555793762207
    3. '2' → logprob: -3.7983555793762207
    4. '1' → logprob: -6.548355579376221
    5. '3' → logprob: -7.923355579376221
    6. ' ' → logprob: -9.048356056213379
    7. '((' → logprob: -9.173356056213379
    8. '```' → logprob: -9.548356056213379
    9. ' (' → logprob: -9.923356056213379
    10. '(
' → logprob: -9.923356056213379

Token 2100: '*' (ID: 9)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.3743247985839844
    2. '+' → logprob: -1.9993247985839844
    3. ' ' → logprob: -1.9993247985839844
    4. ' +' → logprob: -1.9993247985839844
    5. '*' → logprob: -2.2493247985839844
    6. ' *' → logprob: -2.3743247985839844
    7. '1' → logprob: -2.8743247985839844
    8. ' ,' → logprob: -3.2493247985839844
    9. '3' → logprob: -4.124324798583984
    10. '```' → logprob: -4.624324798583984

Token 2101: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00016635251813568175
    2. '3' → logprob: -9.375165939331055
    3. ' ' → logprob: -9.500165939331055
    4. '```' → logprob: -13.437665939331055
    5. '(' → logprob: -14.312665939331055
    6. '   ' → logprob: -14.375165939331055
    7. '2' → logprob: -14.375165939331055
    8. '
' → logprob: -14.375165939331055
    9. '`' → logprob: -14.562665939331055
    10. '9' → logprob: -14.562665939331055

Token 2102: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -1.0649259090423584
    2. ',' → logprob: -1.5649259090423584
    3. '+' → logprob: -1.6899259090423584
    4. ',
' → logprob: -2.6899259090423584
    5. ' ' → logprob: -3.5649259090423584
    6. '
' → logprob: -3.5649259090423584
    7. '+
' → logprob: -3.5649259090423584
    8. ' ,' → logprob: -3.6899259090423584
    9. '```' → logprob: -3.9399259090423584
    10. '*' → logprob: -4.3149261474609375

Token 2103: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.21510420739650726
    2. '3' → logprob: -1.8401042222976685
    3. '7' → logprob: -3.965104103088379
    4. '2' → logprob: -4.965104103088379
    5. '4' → logprob: -5.090104103088379
    6. ' ' → logprob: -6.340104103088379
    7. '```' → logprob: -7.965104103088379
    8. '(' → logprob: -9.215104103088379
    9. '`' → logprob: -9.340104103088379
    10. '0' → logprob: -9.465104103088379

Token 2104: '1' (ID: 16)
  Prédit: '3'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.07090214639902115
    2. '1' → logprob: -2.695902109146118
    3. '2' → logprob: -7.445902347564697
    4. '7' → logprob: -8.445901870727539
    5. '```' → logprob: -9.695901870727539
    6. ' ' → logprob: -9.945901870727539
    7. '``' → logprob: -11.570901870727539
    8. '   ' → logprob: -11.570901870727539
    9. '
' → logprob: -11.695901870727539
    10. '(' → logprob: -11.758401870727539

Token 2105: '*' (ID: 9)
  Prédit: '3'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.08921109139919281
    2. '*' → logprob: -2.4642109870910645
    3. ' *' → logprob: -9.464211463928223
    4. '```' → logprob: -10.089211463928223
    5. '2' → logprob: -10.214211463928223
    6. '+' → logprob: -10.339211463928223
    7. '4' → logprob: -10.464211463928223
    8. ' ' → logprob: -11.089211463928223
    9. '``' → logprob: -11.464211463928223
    10. '5' → logprob: -11.464211463928223

Token 2106: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -1.6240566083070007e-06
    2. ' ' → logprob: -13.625001907348633
    3. '1' → logprob: -16.750001907348633
    4. '```' → logprob: -16.875001907348633
    5. '5' → logprob: -16.937501907348633
    6. '
' → logprob: -17.000001907348633
    7. '   ' → logprob: -17.062501907348633
    8. '2' → logprob: -17.687501907348633
    9. '３' → logprob: -18.125001907348633
    10. '``' → logprob: -18.312501907348633

Token 2107: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.7165672183036804
    2. ',' → logprob: -1.9665672779083252
    3. '+' → logprob: -2.091567277908325
    4. ' =' → logprob: -2.716567277908325
    5. '=' → logprob: -2.966567277908325
    6. '```' → logprob: -3.466567277908325
    7. ' ' → logprob: -3.841567277908325
    8. ' ,' → logprob: -3.966567277908325
    9. '2' → logprob: -4.216567039489746
    10. '*' → logprob: -4.716567039489746

Token 2108: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.00014060820103622973
    2. ' ' → logprob: -9.125140190124512
    3. '4' → logprob: -11.500140190124512
    4. '```' → logprob: -12.000140190124512
    5. '   ' → logprob: -12.250140190124512
    6. '(' → logprob: -12.875140190124512
    7. '6' → logprob: -13.312640190124512
    8. '
' → logprob: -13.437640190124512
    9. '  ' → logprob: -14.187640190124512
    10. '1' → logprob: -14.187640190124512

Token 2109: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0004827465454582125
    2. '4' → logprob: -9.250482559204102
    3. '6' → logprob: -9.375482559204102
    4. '1' → logprob: -9.375482559204102
    5. ' ' → logprob: -9.625482559204102
    6. '5' → logprob: -9.750482559204102
    7. '```' → logprob: -10.500482559204102
    8. '3' → logprob: -10.625482559204102
    9. '(' → logprob: -11.187982559204102
    10. '``' → logprob: -11.875482559204102

Token 2110: '*' (ID: 9)
  Prédit: '*'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.08879243582487106
    2. ' *' → logprob: -2.713792324066162
    3. '3' → logprob: -5.088792324066162
    4. '```' → logprob: -6.213792324066162
    5. '+' → logprob: -6.338792324066162
    6. ' =' → logprob: -6.713792324066162
    7. '2' → logprob: -7.088792324066162
    8. ' +' → logprob: -7.213792324066162
    9. '=' → logprob: -7.338792324066162
    10. '5' → logprob: -7.338792324066162

Token 2111: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -5.9153885558771435e-06
    2. '1' → logprob: -13.000005722045898
    3. ' ' → logprob: -13.250005722045898
    4. '```' → logprob: -14.250005722045898
    5. '3' → logprob: -14.750005722045898
    6. '
' → logprob: -15.500005722045898
    7. '   ' → logprob: -16.1875057220459
    8. '**' → logprob: -16.6250057220459
    9. '0' → logprob: -17.1250057220459
    10. '`' → logprob: -17.3750057220459

Token 2112: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5628166794776917
    2. '
' → logprob: -2.187816619873047
    3. '=' → logprob: -2.562816619873047
    4. '```' → logprob: -3.437816619873047
    5. '3' → logprob: -3.562816619873047
    6. '   ' → logprob: -3.937816619873047
    7. ':' → logprob: -4.187816619873047
    8. ',' → logprob: -4.187816619873047
    9. '       ' → logprob: -4.187816619873047
    10. '9' → logprob: -4.187816619873047

Token 2113: ' ' (ID: 220)
  Prédit: '9'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: -0.0006408308399841189
    2. ' ' → logprob: -7.625640869140625
    3. '1' → logprob: -9.375640869140625
    4. '(' → logprob: -11.000640869140625
    5. '3' → logprob: -11.375640869140625
    6. '```' → logprob: -11.500640869140625
    7. '2' → logprob: -12.000640869140625
    8. '   ' → logprob: -12.250640869140625
    9. '``' → logprob: -12.375640869140625
    10. '`' → logprob: -12.500640869140625

Token 2114: '2' (ID: 17)
  Prédit: '9'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: -1.4736459888808895e-05
    2. '(' → logprob: -12.750014305114746
    3. ' ' → logprob: -12.875014305114746
    4. '1' → logprob: -13.000014305114746
    5. '2' → logprob: -13.750014305114746
    6. '```' → logprob: -13.750014305114746
    7. '3' → logprob: -13.875014305114746
    8. '`' → logprob: -14.000014305114746
    9. '   ' → logprob: -14.250014305114746
    10. '``' → logprob: -14.375014305114746

Token 2115: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.9373394846916199
    2. '+' → logprob: -1.5623395442962646
    3. ',' → logprob: -1.8123395442962646
    4. '*' → logprob: -2.5623395442962646
    5. ' *' → logprob: -3.3123395442962646
    6. '
' → logprob: -3.4373395442962646
    7. '```' → logprob: -3.8123395442962646
    8. ' ,' → logprob: -4.3123393058776855
    9. ' ' → logprob: -4.4373393058776855
    10. '   ' → logprob: -4.9373393058776855

Token 2116: ' ' (ID: 220)
  Prédit: '4'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '4' → logprob: -0.40532997250556946
    2. '7' → logprob: -1.405329942703247
    3. '3' → logprob: -3.030329942703247
    4. '5' → logprob: -3.280329942703247
    5. ' ' → logprob: -6.280330181121826
    6. '2' → logprob: -9.155329704284668
    7. '1' → logprob: -10.780329704284668
    8. '```' → logprob: -11.405329704284668
    9. '9' → logprob: -11.530329704284668
    10. '   ' → logprob: -12.530329704284668

Token 2117: '3' (ID: 18)
  Prédit: '4'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '4' → logprob: -0.1131371483206749
    2. '3' → logprob: -2.7381372451782227
    3. '5' → logprob: -3.2381372451782227
    4. ' ' → logprob: -6.613137245178223
    5. '7' → logprob: -7.113137245178223
    6. '2' → logprob: -7.363137245178223
    7. '1' → logprob: -8.363137245178223
    8. '```' → logprob: -11.863137245178223
    9. '   ' → logprob: -12.988137245178223
    10. '
' → logprob: -13.238137245178223

Token 2118: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.17065902054309845
    2. '+' → logprob: -1.920659065246582
    3. '```' → logprob: -5.670659065246582
    4. ' ' → logprob: -6.545659065246582
    5. '3' → logprob: -6.920659065246582
    6. '
' → logprob: -7.295659065246582
    7. '+
' → logprob: -7.545659065246582
    8. '5' → logprob: -7.795659065246582
    9. '0' → logprob: -7.795659065246582
    10. '1' → logprob: -8.170659065246582

Token 2119: ' ' (ID: 220)
  Prédit: '4'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '4' → logprob: -6.034592388459714e-06
    2. '2' → logprob: -13.125005722045898
    3. '5' → logprob: -13.750005722045898
    4. ' ' → logprob: -14.000005722045898
    5. '
' → logprob: -14.125005722045898
    6. '```' → logprob: -14.250005722045898
    7. '7' → logprob: -15.875005722045898
    8. '``' → logprob: -16.6250057220459
    9. '...' → logprob: -16.6875057220459
    10. '４' → logprob: -16.9375057220459

Token 2120: '4' (ID: 19)
  Prédit: '4'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '4' → logprob: -1.1472419600977446e-06
    2. '```' → logprob: -14.750000953674316
    3. ' ' → logprob: -15.812500953674316
    4. '5' → logprob: -16.062501907348633
    5. '۴' → logprob: -16.937501907348633
    6. '7' → logprob: -16.937501907348633
    7. '...' → logprob: -17.312501907348633
    8. '2' → logprob: -17.375001907348633
    9. '４' → logprob: -17.437501907348633
    10. '
' → logprob: -17.937501907348633

Token 2121: ' =' (ID: 314)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -1.3785911798477173
    2. '```' → logprob: -1.8785911798477173
    3. '   ' → logprob: -2.0035910606384277
    4. '       ' → logprob: -2.6285910606384277
    5. ' +' → logprob: -2.8785910606384277
    6. '+' → logprob: -3.0035910606384277
    7. ' =' → logprob: -3.0035910606384277
    8. ',' → logprob: -3.1285910606384277
    9. '=' → logprob: -3.8785910606384277
    10. ':
' → logprob: -4.253591060638428

Token 2122: ' ' (ID: 220)
  Prédit: '9'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: -1.0683535037969705e-05
    2. ' ' → logprob: -11.75001049041748
    3. '7' → logprob: -13.37501049041748
    4. '```' → logprob: -14.75001049041748
    5. '`' → logprob: -15.75001049041748
    6. '5' → logprob: -16.375011444091797
    7. '``' → logprob: -16.500011444091797
    8. '3' → logprob: -16.500011444091797
    9. '10' → logprob: -16.750011444091797
    10. '[' → logprob: -16.750011444091797

Token 2123: '9' (ID: 24)
  Prédit: '9'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: -1.3902033970225602e-05
    2. ' ' → logprob: -11.875014305114746
    3. '```' → logprob: -12.500014305114746
    4. '`' → logprob: -14.375014305114746
    5. '``' → logprob: -14.375014305114746
    6. '5' → logprob: -14.750014305114746
    7. '10' → logprob: -14.875014305114746
    8. '[' → logprob: -14.875014305114746
    9. '7' → logprob: -15.625014305114746
    10. '1' → logprob: -15.875014305114746

Token 2124: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.4983801245689392
    2. 'def' → logprob: -1.998380184173584
    3. '```' → logprob: -2.748380184173584
    4. '       ' → logprob: -2.873380184173584
    5. '   ' → logprob: -3.623380184173584
    6. ' =' → logprob: -3.998380184173584
    7. 'class' → logprob: -3.998380184173584
    8. 'from' → logprob: -4.623380184173584
    9. ':
' → logprob: -4.748380184173584
    10. ':' → logprob: -4.873380184173584

Token 2125: '       ' (ID: 309)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.2184523493051529
    2. '   ' → logprob: -2.2184524536132812
    3. '       ' → logprob: -3.4684524536132812
    4. '```' → logprob: -3.9684524536132812
    5. 'def' → logprob: -4.468452453613281
    6. ',' → logprob: -5.343452453613281
    7. '3' → logprob: -5.718452453613281
    8. ',
' → logprob: -6.093452453613281
    9. ':
' → logprob: -6.218452453613281
    10. ' ' → logprob: -6.343452453613281

Token 2126: ' #' (ID: 1069)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -1.1253769397735596
    2. '   ' → logprob: -1.5003769397735596
    3. ',' → logprob: -2.1253769397735596
    4. ',
' → logprob: -2.6253769397735596
    5. '       ' → logprob: -2.7503769397735596
    6. '```' → logprob: -3.1253769397735596
    7. ':
' → logprob: -4.1253767013549805
    8. '3' → logprob: -4.2503767013549805
    9. '9' → logprob: -4.5003767013549805
    10. ')
' → logprob: -4.5003767013549805

Token 2127: ' Output' (ID: 18315)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.9272935390472412
    2. '
' → logprob: -1.1772935390472412
    3. 'def' → logprob: -3.052293539047241
    4. '```' → logprob: -3.052293539047241
    5. ':
' → logprob: -3.302293539047241
    6. ' =' → logprob: -3.802293539047241
    7. '           ' → logprob: -4.17729377746582
    8. ':' → logprob: -4.42729377746582
    9. '   ' → logprob: -4.42729377746582
    10. 'if' → logprob: -4.55229377746582

Token 2128: ' is' (ID: 382)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.6728031635284424
    2. '3' → logprob: -1.9228031635284424
    3. ' =' → logprob: -2.0478031635284424
    4. '```' → logprob: -2.0478031635284424
    5. '
' → logprob: -3.4228031635284424
    6. '2' → logprob: -4.672802925109863
    7. '=' → logprob: -4.922802925109863
    8. '9' → logprob: -5.047802925109863
    9. '0' → logprob: -5.422802925109863
    10. '`' → logprob: -5.547802925109863

Token 2129: ' ' (ID: 220)
  Prédit: '3'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.05665764957666397
    2. '9' → logprob: -3.181657552719116
    3. '```' → logprob: -5.556657791137695
    4. '4' → logprob: -5.806657791137695
    5. '2' → logprob: -5.931657791137695
    6. ' ' → logprob: -6.431657791137695
    7. '1' → logprob: -6.431657791137695
    8. '``' → logprob: -7.431657791137695
    9. '(' → logprob: -9.306657791137695
    10. '5' → logprob: -10.306657791137695

Token 2130: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.22412602603435516
    2. '1' → logprob: -1.7241259813308716
    3. '4' → logprob: -3.974126100540161
    4. '9' → logprob: -6.724125862121582
    5. '2' → logprob: -7.224125862121582
    6. '(' → logprob: -7.224125862121582
    7. '```' → logprob: -7.224125862121582
    8. '0' → logprob: -9.474125862121582
    9. '5' → logprob: -9.724125862121582
    10. '``' → logprob: -10.599125862121582

Token 2131: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.009252467192709446
    2. ' ,' → logprob: -6.009252548217773
    3. '```' → logprob: -6.134252548217773
    4. ',' → logprob: -6.634252548217773
    5. '<|end|>' → logprob: -7.009252548217773
    6. '0' → logprob: -7.509252548217773
    7. '  ' → logprob: -7.509252548217773
    8. '2' → logprob: -8.009252548217773
    9. '   ' → logprob: -8.634252548217773
    10. '
' → logprob: -8.634252548217773

Token 2132: '0' (ID: 15)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.14331959187984467
    2. '0' → logprob: -2.018319606781006
    3. '```' → logprob: -8.143319129943848
    4. ',' → logprob: -8.518319129943848
    5. '<|end|>' → logprob: -9.643319129943848
    6. ' ,' → logprob: -10.018319129943848
    7. '  ' → logprob: -11.393319129943848
    8. '   ' → logprob: -12.018319129943848
    9. '3' → logprob: -12.393319129943848
    10. '2' → logprob: -12.643319129943848

Token 2133: ' and' (ID: 326)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.33409586548805237
    2. '3' → logprob: -2.5840959548950195
    3. '```' → logprob: -2.7090959548950195
    4. ',' → logprob: -2.8340959548950195
    5. '<|end|>' → logprob: -3.5840959548950195
    6. '
' → logprob: -4.2090959548950195
    7. '0' → logprob: -4.5840959548950195
    8. ' ,' → logprob: -4.7090959548950195
    9. '   ' → logprob: -5.3340959548950195
    10. ',
' → logprob: -5.7090959548950195

Token 2134: ' ' (ID: 220)
  Prédit: '5'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '5' → logprob: -0.47480297088623047
    2. '6' → logprob: -0.9748029708862305
    3. '1' → logprob: -8.09980297088623
    4. '4' → logprob: -8.72480297088623
    5. '3' → logprob: -9.09980297088623
    6. ' ' → logprob: -9.09980297088623
    7. '```' → logprob: -10.59980297088623
    8. '
' → logprob: -12.59980297088623
    9. '7' → logprob: -13.22480297088623
    10. '`' → logprob: -13.34980297088623

Token 2135: '5' (ID: 20)
  Prédit: '5'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '5' → logprob: -0.20850935578346252
    2. '6' → logprob: -1.7085093259811401
    3. '4' → logprob: -5.08350944519043
    4. '1' → logprob: -7.45850944519043
    5. '3' → logprob: -8.45850944519043
    6. '```' → logprob: -9.70850944519043
    7. '``' → logprob: -12.08350944519043
    8. '
' → logprob: -12.33350944519043
    9. '`' → logprob: -12.83350944519043
    10. '7' → logprob: -13.08350944519043

Token 2136: ' ' (ID: 220)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '```' → logprob: -1.1334965229034424
    2. '<|end|>' → logprob: -1.2584965229034424
    3. ',' → logprob: -2.2584965229034424
    4. '
' → logprob: -2.2584965229034424
    5. ' ' → logprob: -2.6334965229034424
    6. '   ' → logprob: -3.3834965229034424
    7. '[' → logprob: -4.383496284484863
    8. '<|end|>' → logprob: -4.758496284484863
    9. ' ,' → logprob: -5.008496284484863
    10. '6' → logprob: -5.133496284484863

Token 2137: '0' (ID: 15)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.018442444503307343
    2. '0' → logprob: -4.268442630767822
    3. '<|end|>' → logprob: -6.518442630767822
    4. '```' → logprob: -7.018442630767822
    5. ',' → logprob: -7.143442630767822
    6. '6' → logprob: -8.143442153930664
    7. '
' → logprob: -8.768442153930664
    8. ' ,' → logprob: -8.768442153930664
    9. '  ' → logprob: -9.018442153930664
    10. '   ' → logprob: -9.393442153930664

Token 2138: ',' (ID: 11)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -1.308681607246399
    2. '```' → logprob: -1.558681607246399
    3. '\n' → logprob: -1.808681607246399
    4. ',' → logprob: -2.5586814880371094
    5. ':' → logprob: -2.5586814880371094
    6. ':
' → logprob: -3.3086814880371094
    7. '+' → logprob: -3.5586814880371094
    8. '<|end|>' → logprob: -4.058681488037109
    9. '   ' → logprob: -4.183681488037109
    10. ')' → logprob: -4.308681488037109

Token 2139: ' sum' (ID: 4215)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '\n' → logprob: -1.1250524520874023
    2. '
' → logprob: -1.2500524520874023
    3. '```' → logprob: -2.2500524520874023
    4. ' ' → logprob: -2.6250524520874023
    5. ',' → logprob: -3.3750524520874023
    6. ':' → logprob: -3.5000524520874023
    7. '6' → logprob: -4.125052452087402
    8. '   ' → logprob: -4.125052452087402
    9. ' 
' → logprob: -4.375052452087402
    10. '3' → logprob: -4.375052452087402

Token 2140: ' ' (ID: 220)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -1.0889917612075806
    2. '```' → logprob: -1.5889917612075806
    3. ' ' → logprob: -1.8389917612075806
    4. '=' → logprob: -2.338991641998291
    5. '<|end|>' → logprob: -2.963991641998291
    6. '3' → logprob: -3.213991641998291
    7. ' +' → logprob: -3.338991641998291
    8. '
' → logprob: -3.963991641998291
    9. ',' → logprob: -4.463991641998291
    10. '6' → logprob: -4.963991641998291

Token 2141: '3' (ID: 18)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.8796236515045166
    2. '9' → logprob: -1.1296236515045166
    3. '=' → logprob: -1.3796236515045166
    4. '3' → logprob: -5.1296234130859375
    5. '6' → logprob: -6.5046234130859375
    6. ' =' → logprob: -6.6296234130859375
    7. '8' → logprob: -7.3796234130859375
    8. '7' → logprob: -7.5046234130859375
    9. '```' → logprob: -9.379623413085938
    10. '+' → logprob: -9.879623413085938

Token 2142: ' +' (ID: 659)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.17787371575832367
    2. '```' → logprob: -2.6778736114501953
    3. ',' → logprob: -3.3028736114501953
    4. '2' → logprob: -4.427873611450195
    5. ' ,' → logprob: -4.552873611450195
    6. '6' → logprob: -5.052873611450195
    7. '0' → logprob: -5.427873611450195
    8. '   ' → logprob: -5.677873611450195
    9. '3' → logprob: -6.052873611450195
    10. '  ' → logprob: -6.302873611450195

Token 2143: '5' (ID: 20)
  Prédit: '4'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '4' → logprob: -0.0010329303331673145
    2. ' ' → logprob: -7.001032829284668
    3. '5' → logprob: -9.501032829284668
    4. '6' → logprob: -11.001032829284668
    5. '```' → logprob: -11.001032829284668
    6. '`' → logprob: -12.001032829284668
    7. '``' → logprob: -12.251032829284668
    8. '1' → logprob: -14.251032829284668
    9. '3' → logprob: -14.626032829284668
    10. '
' → logprob: -14.626032829284668

Token 2144: ' =' (ID: 314)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -1.3183332681655884
    2. '```' → logprob: -1.4433332681655884
    3. '
' → logprob: -1.6933332681655884
    4. '<|end|>' → logprob: -1.8183332681655884
    5. '6' → logprob: -3.818333148956299
    6. ',
' → logprob: -3.943333148956299
    7. '   ' → logprob: -4.443333148956299
    8. ' +' → logprob: -4.568333148956299
    9. ' ' → logprob: -4.818333148956299
    10. '+' → logprob: -4.943333148956299

Token 2145: '8' (ID: 23)
  Prédit: '9'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: -0.46588537096977234
    2. '4' → logprob: -1.0908854007720947
    3. ' ' → logprob: -3.4658854007720947
    4. '8' → logprob: -5.340885162353516
    5. '```' → logprob: -8.590885162353516
    6. '14' → logprob: -9.465885162353516
    7. '``' → logprob: -9.715885162353516
    8. '`' → logprob: -9.715885162353516
    9. ''' → logprob: -10.840885162353516
    10. '"' → logprob: -11.215885162353516

Token 2146: ' not' (ID: 625)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -1.1220165491104126
    2. '   ' → logprob: -1.7470165491104126
    3. '```' → logprob: -1.8720165491104126
    4. ',' → logprob: -2.372016429901123
    5. 'def' → logprob: -3.372016429901123
    6. ',
' → logprob: -3.622016429901123
    7. '<|end|>' → logprob: -3.747016429901123
    8. ':
' → logprob: -3.997016429901123
    9. '6' → logprob: -4.247016429901123
    10. ':' → logprob: -4.372016429901123

Token 2147: ' ' (ID: 220)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '```' → logprob: -0.685016930103302
    2. ' ' → logprob: -1.9350168704986572
    3. '<|end|>' → logprob: -2.5600168704986572
    4. '
' → logprob: -2.9350168704986572
    5. '9' → logprob: -3.0600168704986572
    6. '3' → logprob: -3.1850168704986572
    7. '\n' → logprob: -3.8100168704986572
    8. '+' → logprob: -4.435017108917236
    9. '2' → logprob: -4.560017108917236
    10. ''' → logprob: -4.560017108917236

Token 2148: '9' (ID: 24)
  Prédit: '3'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.462700217962265
    2. ' ' → logprob: -2.087700128555298
    3. '```' → logprob: -2.087700128555298
    4. '0' → logprob: -3.587700128555298
    5. '9' → logprob: -3.837700128555298
    6. '1' → logprob: -4.087700366973877
    7. '<|end|>' → logprob: -4.087700366973877
    8. '6' → logprob: -4.837700366973877
    9. '2' → logprob: -4.962700366973877
    10. '
' → logprob: -5.212700366973877

Token 2149: ' :' (ID: 712)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '```' → logprob: -0.47063353657722473
    2. ':' → logprob: -2.2206335067749023
    3. ',' → logprob: -2.3456335067749023
    4. ')' → logprob: -3.2206335067749023
    5. '
' → logprob: -3.2206335067749023
    6. '\n' → logprob: -3.7206335067749023
    7. ':
' → logprob: -4.345633506774902
    8. '[' → logprob: -4.845633506774902
    9. '+' → logprob: -5.095633506774902
    10. ']' → logprob: -5.345633506774902

Token 2150: ' discrepancy' (ID: 173834)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '```' → logprob: -0.22092585265636444
    2. ',' → logprob: -3.345925807952881
    3. '\n' → logprob: -3.345925807952881
    4. '
' → logprob: -3.470925807952881
    5. ')' → logprob: -4.220925807952881
    6. '[' → logprob: -4.470925807952881
    7. '\' → logprob: -4.470925807952881
    8. ':' → logprob: -4.720925807952881
    9. '`' → logprob: -5.095925807952881
    10. '0' → logprob: -5.345925807952881

Token 2151: '

' (ID: 279)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.6621738076210022
    2. '```' → logprob: -1.4121737480163574
    3. ')' → logprob: -2.9121737480163574
    4. ',' → logprob: -3.2871737480163574
    5. 'def' → logprob: -3.5371737480163574
    6. '[' → logprob: -3.7871737480163574
    7. '
' → logprob: -3.9121737480163574
    8. ':
' → logprob: -4.162173748016357
    9. '   ' → logprob: -4.287173748016357
    10. '.' → logprob: -4.537173748016357

Token 2152: '       ' (ID: 309)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '```' → logprob: -0.4110964834690094
    2. ')' → logprob: -2.1610965728759766
    3. '
' → logprob: -3.1610965728759766
    4. ',' → logprob: -3.1610965728759766
    5. '<|end|>' → logprob: -3.2860965728759766
    6. ':' → logprob: -4.161096572875977
    7. '   ' → logprob: -4.286096572875977
    8. '.' → logprob: -4.536096572875977
    9. 'def' → logprob: -4.911096572875977
    10. '<|end|>' → logprob: -5.036096572875977

Token 2153: ' #' (ID: 1069)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '```' → logprob: -1.3420748710632324
    2. ')' → logprob: -1.4670748710632324
    3. '<|end|>' → logprob: -2.2170748710632324
    4. ',' → logprob: -2.9670748710632324
    5. '
' → logprob: -2.9670748710632324
    6. '   ' → logprob: -3.2170748710632324
    7. ':' → logprob: -3.4670748710632324
    8. '.' → logprob: -3.5920748710632324
    9. '<|end|>' → logprob: -3.7170748710632324
    10. '[' → logprob: -4.217074871063232

Token 2154: ' re' (ID: 322)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.8538709878921509
    2. '```' → logprob: -1.8538709878921509
    3. '   ' → logprob: -1.9788709878921509
    4. 'def' → logprob: -2.7288708686828613
    5. 'class' → logprob: -2.9788708686828613
    6. '#' → logprob: -3.3538708686828613
    7. ')' → logprob: -3.4788708686828613
    8. '
' → logprob: -3.7288708686828613
    9. ':
' → logprob: -4.728870868682861
    10. '[
' → logprob: -5.103870868682861

Token 2155: '-check' (ID: 30411)
  Prédit: 'turn'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'turn' → logprob: -0.05261357128620148
    2. '```' → logprob: -4.427613735198975
    3. 'sum' → logprob: -5.052613735198975
    4. 's' → logprob: -5.052613735198975
    5. 'f' → logprob: -5.177613735198975
    6. '3' → logprob: -5.552613735198975
    7. '
' → logprob: -5.927613735198975
    8. 'turned' → logprob: -6.177613735198975
    9. '#' → logprob: -6.677613735198975
    10. 'mainder' → logprob: -6.927613735198975

Token 2156: ' sample' (ID: 10176)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '```' → logprob: -0.22315065562725067
    2. ':' → logprob: -3.3481507301330566
    3. '\n' → logprob: -3.4731507301330566
    4. '[' → logprob: -3.9731507301330566
    5. ',' → logprob: -3.9731507301330566
    6. '
' → logprob: -4.223150730133057
    7. ')' → logprob: -4.223150730133057
    8. '<|end|>' → logprob: -4.348150730133057
    9. '\' → logprob: -4.848150730133057
    10. '[
' → logprob: -5.098150730133057

Token 2157: ' output' (ID: 4733)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '```' → logprob: -0.6776993870735168
    2. ':' → logprob: -1.552699327468872
    3. '[' → logprob: -2.302699327468872
    4. ',' → logprob: -2.802699327468872
    5. '<|end|>' → logprob: -3.552699327468872
    6. ')' → logprob: -4.052699565887451
    7. '
' → logprob: -4.052699565887451
    8. '.' → logprob: -4.427699565887451
    9. '[
' → logprob: -4.552699565887451
    10. '+' → logprob: -5.552699565887451

Token 2158: ' ' (ID: 220)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '```' → logprob: -0.9267438054084778
    2. '
' → logprob: -1.551743745803833
    3. '<|end|>' → logprob: -2.426743745803833
    4. ',' → logprob: -2.926743745803833
    5. '[' → logprob: -2.926743745803833
    6. ')' → logprob: -3.426743745803833
    7. '3' → logprob: -3.426743745803833
    8. '[
' → logprob: -3.676743745803833
    9. ' ' → logprob: -4.051743984222412
    10. ':' → logprob: -4.051743984222412

Token 2159: '1' (ID: 16)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '```' → logprob: -0.5648331642150879
    2. '3' → logprob: -1.814833164215088
    3. ' ' → logprob: -2.814833164215088
    4. '
' → logprob: -3.314833164215088
    5. ',' → logprob: -3.314833164215088
    6. '[' → logprob: -3.439833164215088
    7. '\n' → logprob: -4.189833164215088
    8. ')' → logprob: -4.439833164215088
    9. '<|end|>' → logprob: -4.814833164215088
    10. '[
' → logprob: -4.939833164215088

Token 2160: ':' (ID: 25)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '```' → logprob: -0.5300796627998352
    2. '[' → logprob: -2.6550796031951904
    3. '<|end|>' → logprob: -2.6550796031951904
    4. '
' → logprob: -2.6550796031951904
    5. ':' → logprob: -2.9050796031951904
    6. ',' → logprob: -3.4050796031951904
    7. ')' → logprob: -3.5300796031951904
    8. '[
' → logprob: -3.7800796031951904
    9. ':
' → logprob: -4.9050798416137695
    10. '3' → logprob: -4.9050798416137695

Token 2161: ' "' (ID: 392)
  Prédit: '3'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '3' → logprob: -0.6429938077926636
    2. '```' → logprob: -1.1429938077926636
    3. ' ' → logprob: -3.892993927001953
    4. '[' → logprob: -4.017993927001953
    5. '9' → logprob: -4.017993927001953
    6. '[
' → logprob: -4.267993927001953
    7. ':' → logprob: -4.517993927001953
    8. '0' → logprob: -4.767993927001953
    9. '2' → logprob: -4.767993927001953
    10. '
' → logprob: -4.767993927001953

Token 2162: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.33441442251205444
    2. ' ' → logprob: -2.209414482116699
    3. '```' → logprob: -3.209414482116699
    4. '1' → logprob: -3.459414482116699
    5. '0' → logprob: -3.834414482116699
    6. '2' → logprob: -4.209414482116699
    7. '<|end|>' → logprob: -4.209414482116699
    8. '
' → logprob: -4.459414482116699
    9. '4' → logprob: -4.584414482116699
    10. '\n' → logprob: -5.084414482116699

Token 2163: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.0006042646709829569
    2. ',' → logprob: -8.250604629516602
    3. '0' → logprob: -8.500604629516602
    4. '```' → logprob: -9.875604629516602
    5. ' ,' → logprob: -10.000604629516602
    6. '"' → logprob: -11.250604629516602
    7. '3' → logprob: -12.125604629516602
    8. '  ' → logprob: -12.375604629516602
    9. '<|end|>' → logprob: -12.500604629516602
    10. '   ' → logprob: -12.750604629516602

Token 2164: '0' (ID: 15)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.142776221036911
    2. '0' → logprob: -2.0177762508392334
    3. '```' → logprob: -9.892776489257812
    4. ',' → logprob: -10.517776489257812
    5. ' ,' → logprob: -12.142776489257812
    6. '3' → logprob: -12.642776489257812
    7. '1' → logprob: -13.142776489257812
    8. ' ' → logprob: -13.142776489257812
    9. ')' → logprob: -13.267776489257812
    10. '<|end|>' → logprob: -13.392776489257812

Token 2165: '"' (ID: 1)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.5641968250274658
    2. '
' → logprob: -1.1891968250274658
    3. '"' → logprob: -2.439196825027466
    4. '3' → logprob: -4.439196586608887
    5. '```' → logprob: -4.439196586608887
    6. '"
' → logprob: -4.939196586608887
    7. '",' → logprob: -5.689196586608887
    8. ' ' → logprob: -6.189196586608887
    9. ',' → logprob: -7.689196586608887
    10. '"\' → logprob: -7.939196586608887

Token 2166: ' and' (ID: 326)
  Prédit: '3'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '3' → logprob: -0.506750762462616
    2. '\n' → logprob: -2.2567508220672607
    3. '
' → logprob: -2.2567508220672607
    4. '```' → logprob: -2.2567508220672607
    5. ' ' → logprob: -3.5067508220672607
    6. '<|end|>' → logprob: -4.256750583648682
    7. '0' → logprob: -5.131750583648682
    8. ',' → logprob: -5.381750583648682
    9. '6' → logprob: -5.506750583648682
    10. '1' → logprob: -6.006750583648682

Token 2167: ' "' (ID: 392)
  Prédit: '4'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '4' → logprob: -0.295908659696579
    2. '6' → logprob: -1.7959086894989014
    3. '1' → logprob: -3.1709086894989014
    4. '3' → logprob: -3.4209086894989014
    5. '"' → logprob: -4.920908451080322
    6. '5' → logprob: -5.920908451080322
    7. '2' → logprob: -5.920908451080322
    8. '7' → logprob: -6.920908451080322
    9. '```' → logprob: -7.170908451080322
    10. '`' → logprob: -8.04590892791748

Token 2168: '5' (ID: 20)
  Prédit: '4'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '4' → logprob: -0.5525442957878113
    2. '6' → logprob: -1.302544355392456
    3. '3' → logprob: -2.677544355392456
    4. '1' → logprob: -2.677544355392456
    5. '5' → logprob: -4.677544116973877
    6. '2' → logprob: -5.552544116973877
    7. '"' → logprob: -7.177544116973877
    8. '7' → logprob: -7.302544116973877
    9. '```' → logprob: -8.677544593811035
    10. '8' → logprob: -8.927544593811035

Token 2169: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.03806983679533005
    2. '0' → logprob: -3.288069725036621
    3. '```' → logprob: -10.788069725036621
    4. '3' → logprob: -12.413069725036621
    5. '``' → logprob: -13.538069725036621
    6. '1' → logprob: -14.163069725036621
    7. '6' → logprob: -14.913069725036621
    8. '"' → logprob: -15.413069725036621
    9. '`' → logprob: -15.788069725036621
    10. '7' → logprob: -15.788069725036621

Token 2170: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.1603270024061203
    2. ' ' → logprob: -1.9103269577026367
    3. '```' → logprob: -9.410326957702637
    4. '1' → logprob: -11.785326957702637
    5. '3' → logprob: -12.785326957702637
    6. '``' → logprob: -12.910326957702637
    7. '6' → logprob: -13.410326957702637
    8. '"' → logprob: -13.535326957702637
    9. '7' → logprob: -13.910326957702637
    10. '4' → logprob: -14.160326957702637

Token 2171: '"' (ID: 1)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.17384560406208038
    2. '
' → logprob: -2.5488455295562744
    3. '"' → logprob: -3.5488455295562744
    4. '```' → logprob: -3.5488455295562744
    5. '3' → logprob: -4.7988457679748535
    6. '"
' → logprob: -5.9238457679748535
    7. '"\' → logprob: -6.0488457679748535
    8. '``' → logprob: -6.4238457679748535
    9. '<|end|>' → logprob: -6.5488457679748535
    10. '6' → logprob: -6.6738457679748535

Token 2172: ' ?

' (ID: 13570)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.8489797115325928
    2. '```' → logprob: -0.9739797115325928
    3. '
' → logprob: -2.2239797115325928
    4. '[' → logprob: -4.098979949951172
    5. ':' → logprob: -4.223979949951172
    6. ')' → logprob: -4.473979949951172
    7. ',' → logprob: -5.098979949951172
    8. '[
' → logprob: -5.223979949951172
    9. '<|end|>' → logprob: -5.348979949951172
    10. '``' → logprob: -5.723979949951172

Token 2173: '       ' (ID: 309)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '```' → logprob: -0.4334672689437866
    2. '\n' → logprob: -2.308467388153076
    3. '
' → logprob: -3.058467388153076
    4. '3' → logprob: -3.183467388153076
    5. ':' → logprob: -3.183467388153076
    6. '   ' → logprob: -3.808467388153076
    7. '[' → logprob: -4.183467388153076
    8. '[
' → logprob: -4.558467388153076
    9. '``' → logprob: -4.558467388153076
    10. ')' → logprob: -4.808467388153076

Token 2174: ' #' (ID: 1069)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '```' → logprob: -0.7838040590286255
    2. '\n' → logprob: -2.033803939819336
    3. ':' → logprob: -2.533803939819336
    4. '
' → logprob: -2.908803939819336
    5. '   ' → logprob: -2.908803939819336
    6. '3' → logprob: -2.908803939819336
    7. '[' → logprob: -3.658803939819336
    8. ':
' → logprob: -3.783803939819336
    9. '[
' → logprob: -4.033803939819336
    10. '.' → logprob: -4.283803939819336

Token 2175: ' The' (ID: 623)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.9575117826461792
    2. '```' → logprob: -2.2075119018554688
    3. '
' → logprob: -2.3325119018554688
    4. ')' → logprob: -2.3325119018554688
    5. ':' → logprob: -2.4575119018554688
    6. '\n' → logprob: -2.5825119018554688
    7. '#' → logprob: -3.7075119018554688
    8. '[' → logprob: -3.8325119018554688
    9. ':
' → logprob: -4.082511901855469
    10. '       ' → logprob: -4.082511901855469

Token 2176: ' problem' (ID: 4792)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.794500470161438
    2. '"' → logprob: -2.1695003509521484
    3. '`' → logprob: -2.1695003509521484
    4. '3' → logprob: -2.1695003509521484
    5. '\n' → logprob: -2.6695003509521484
    6. '```' → logprob: -2.6695003509521484
    7. ''' → logprob: -4.169500350952148
    8. '
' → logprob: -4.419500350952148
    9. '[' → logprob: -5.544500350952148
    10. '``' → logprob: -5.669500350952148

Token 2177: ''s' (ID: 885)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '```' → logprob: -0.7886096239089966
    2. ':' → logprob: -1.7886096239089966
    3. '
' → logprob: -2.038609504699707
    4. '\n' → logprob: -2.663609504699707
    5. ',' → logprob: -3.413609504699707
    6. ':
' → logprob: -3.538609504699707
    7. '<|end|>' → logprob: -3.788609504699707
    8. '[' → logprob: -3.913609504699707
    9. '[
' → logprob: -4.788609504699707
    10. '`' → logprob: -4.788609504699707

Token 2178: ' sample' (ID: 10176)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '```' → logprob: -0.40515291690826416
    2. ':' → logprob: -2.4051527976989746
    3. '[' → logprob: -2.9051527976989746
    4. '
' → logprob: -3.0301527976989746
    5. ')' → logprob: -3.9051527976989746
    6. 'def' → logprob: -4.030152797698975
    7. ' ' → logprob: -4.155152797698975
    8. '#' → logprob: -4.530152797698975
    9. '   ' → logprob: -4.780152797698975
    10. '\n' → logprob: -4.905152797698975

Token 2179: ' output' (ID: 4733)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '```' → logprob: -0.9410590529441833
    2. ':' → logprob: -1.3160591125488281
    3. '[' → logprob: -1.9410591125488281
    4. ')' → logprob: -2.816059112548828
    5. '
' → logprob: -3.316059112548828
    6. ',' → logprob: -3.816059112548828
    7. '[
' → logprob: -4.066059112548828
    8. '\n' → logprob: -4.691059112548828
    9. ':
' → logprob: -4.691059112548828
    10. '<|end|>' → logprob: -5.191059112548828

Token 2180: ' seems' (ID: 7890)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '```' → logprob: -0.5742192268371582
    2. ':' → logprob: -1.4492192268371582
    3. '[' → logprob: -2.324219226837158
    4. ')' → logprob: -3.699219226837158
    5. '
' → logprob: -3.824219226837158
    6. '\n' → logprob: -4.074219226837158
    7. ',' → logprob: -4.574219226837158
    8. '[
' → logprob: -4.949219226837158
    9. ':
' → logprob: -5.324219226837158
    10. '``' → logprob: -6.074219226837158

Token 2181: ' inconsistent' (ID: 85596)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '```' → logprob: -1.2482143640518188
    2. '[' → logprob: -1.8732143640518188
    3. ' ' → logprob: -2.1232142448425293
    4. '3' → logprob: -2.1232142448425293
    5. '
' → logprob: -2.4982142448425293
    6. ':' → logprob: -2.9982142448425293
    7. ',' → logprob: -3.3732142448425293
    8. '\n' → logprob: -3.6232142448425293
    9. 's' → logprob: -3.9982142448425293
    10. '<|end|>' → logprob: -4.248214244842529

Token 2182: ' as' (ID: 472)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.5784437656402588
    2. 'def' → logprob: -1.7034437656402588
    3. '   ' → logprob: -1.8284437656402588
    4. '[' → logprob: -3.828443765640259
    5. ':
' → logprob: -4.07844352722168
    6. ')' → logprob: -4.57844352722168
    7. '```' → logprob: -4.70344352722168
    8. '):' → logprob: -4.82844352722168
    9. '       ' → logprob: -5.32844352722168
    10. '
' → logprob: -5.45344352722168

Token 2183: ' posted' (ID: 12314)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.8953326940536499
    2. '   ' → logprob: -1.27033269405365
    3. 'def' → logprob: -2.6453328132629395
    4. '```' → logprob: -2.8953328132629395
    5. '[' → logprob: -3.0203328132629395
    6. '
' → logprob: -3.3953328132629395
    7. ':
' → logprob: -3.6453328132629395
    8. '[
' → logprob: -4.0203328132629395
    9. ')' → logprob: -4.3953328132629395
    10. ']' → logprob: -4.6453328132629395

Token 2184: '?

' (ID: 1715)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.7955240607261658
    2. 'def' → logprob: -1.4205241203308105
    3. '   ' → logprob: -1.5455241203308105
    4. '       ' → logprob: -3.4205241203308105
    5. '```' → logprob: -4.4205241203308105
    6. '[' → logprob: -4.6705241203308105
    7. '):' → logprob: -4.7955241203308105
    8. ':
' → logprob: -4.7955241203308105
    9. '
' → logprob: -5.2955241203308105
    10. ')' → logprob: -5.4205241203308105

Token 2185: '       ' (ID: 309)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.5577287077903748
    2. '   ' → logprob: -2.0577287673950195
    3. '```' → logprob: -2.3077287673950195
    4. '[' → logprob: -2.8077287673950195
    5. ':
' → logprob: -3.1827287673950195
    6. '
' → logprob: -3.6827287673950195
    7. '[
' → logprob: -3.9327287673950195
    8. 'def' → logprob: -4.6827287673950195
    9. '       ' → logprob: -4.8077287673950195
    10. '\n' → logprob: -4.9327287673950195

Token 2186: ' #' (ID: 1069)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.8590717911720276
    2. '   ' → logprob: -1.2340717315673828
    3. '```' → logprob: -1.9840717315673828
    4. ':
' → logprob: -2.734071731567383
    5. '[
' → logprob: -3.984071731567383
    6. '[' → logprob: -4.109071731567383
    7. 'def' → logprob: -4.484071731567383
    8. '       ' → logprob: -4.859071731567383
    9. '
' → logprob: -5.109071731567383
    10. '\n' → logprob: -5.359071731567383

Token 2187: ' Wait' (ID: 24305)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.085958480834961
    2. ':' → logprob: -1.460958480834961
    3. '   ' → logprob: -1.835958480834961
    4. ':
' → logprob: -1.960958480834961
    5. '```' → logprob: -3.085958480834961
    6. 'def' → logprob: -3.210958480834961
    7. '):' → logprob: -4.585958480834961
    8. '           ' → logprob: -4.835958480834961
    9. '
' → logprob: -4.835958480834961
    10. '\n' → logprob: -5.210958480834961

Token 2188: ' original' (ID: 4756)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.4162820875644684
    2. '```' → logprob: -1.916282057762146
    3. '[' → logprob: -3.0412821769714355
    4. ':
' → logprob: -3.9162821769714355
    5. '\n' → logprob: -4.0412821769714355
    6. '#' → logprob: -4.1662821769714355
    7. '   ' → logprob: -4.1662821769714355
    8. '[
' → logprob: -4.4162821769714355
    9. ',' → logprob: -4.5412821769714355
    10. 'def' → logprob: -4.6662821769714355

Token 2189: ' output' (ID: 4733)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -1.0524559020996094
    2. '```' → logprob: -1.3024559020996094
    3. '[' → logprob: -1.6774559020996094
    4. ',' → logprob: -3.0524559020996094
    5. '[
' → logprob: -3.1774559020996094
    6. ':
' → logprob: -3.4274559020996094
    7. '
' → logprob: -3.9274559020996094
    8. '\n' → logprob: -4.427455902099609
    9. ')' → logprob: -5.177455902099609
    10. '.' → logprob: -5.552455902099609

Token 2190: ' is' (ID: 382)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '```' → logprob: -0.8176602125167847
    2. '[' → logprob: -1.6926602125167847
    3. '\n' → logprob: -2.317660331726074
    4. '3' → logprob: -3.192660331726074
    5. '
' → logprob: -3.692660331726074
    6. '[
' → logprob: -3.692660331726074
    7. '`' → logprob: -3.692660331726074
    8. '"' → logprob: -3.817660331726074
    9. ':' → logprob: -3.942660331726074
    10. ')' → logprob: -4.067660331726074

Token 2191: ':

' (ID: 1402)
  Prédit: '3'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '3' → logprob: -0.08299301564693451
    2. '```' → logprob: -3.0829930305480957
    3. '2' → logprob: -3.7079930305480957
    4. '1' → logprob: -5.832993030548096
    5. '``' → logprob: -5.957993030548096
    6. ' ' → logprob: -6.832993030548096
    7. '6' → logprob: -7.332993030548096
    8. '9' → logprob: -7.457993030548096
    9. '0' → logprob: -7.707993030548096
    10. '4' → logprob: -7.707993030548096

Token 2192: '       ' (ID: 309)
  Prédit: '3'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '3' → logprob: -0.6732593774795532
    2. '```' → logprob: -1.0482593774795532
    3. '\n' → logprob: -3.5482592582702637
    4. '``' → logprob: -3.9232592582702637
    5. '1' → logprob: -4.048259258270264
    6. '0' → logprob: -4.048259258270264
    7. ' ' → logprob: -4.048259258270264
    8. '`' → logprob: -4.673259258270264
    9. '2' → logprob: -5.298259258270264
    10. '4' → logprob: -5.673259258270264

Token 2193: ' #' (ID: 1069)
  Prédit: '3'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '3' → logprob: -0.22795288264751434
    2. ' ' → logprob: -2.4779529571533203
    3. '```' → logprob: -2.8529529571533203
    4. '\n' → logprob: -3.9779529571533203
    5. '``' → logprob: -4.60295295715332
    6. '`' → logprob: -4.97795295715332
    7. '1' → logprob: -4.97795295715332
    8. '"' → logprob: -5.60295295715332
    9. '   ' → logprob: -5.60295295715332
    10. '0' → logprob: -6.10295295715332

Token 2194: ' Sample' (ID: 31073)
  Prédit: '3'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '3' → logprob: -0.23483578860759735
    2. '```' → logprob: -2.2348358631134033
    3. '``' → logprob: -3.7348358631134033
    4. ' ' → logprob: -4.234835624694824
    5. '0' → logprob: -4.359835624694824
    6. '1' → logprob: -4.484835624694824
    7. '\n' → logprob: -4.609835624694824
    8. '2' → logprob: -4.734835624694824
    9. '`' → logprob: -5.234835624694824
    10. '4' → logprob: -5.609835624694824

Token 2195: ' Output' (ID: 18315)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '```' → logprob: -0.5531347990036011
    2. ' ' → logprob: -1.553134799003601
    3. '[' → logprob: -3.0531349182128906
    4. '_' → logprob: -3.4281349182128906
    5. '\' → logprob: -4.053134918212891
    6. '``' → logprob: -4.178134918212891
    7. '[
' → logprob: -4.303134918212891
    8. '1' → logprob: -4.428134918212891
    9. ':' → logprob: -4.553134918212891
    10. '
' → logprob: -4.803134918212891

Token 2196: ' ' (ID: 220)
  Prédit: '3'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.9011200666427612
    2. ' ' → logprob: -1.0261200666427612
    3. '```' → logprob: -2.026120185852051
    4. '2' → logprob: -3.026120185852051
    5. '1' → logprob: -3.401120185852051
    6. '9' → logprob: -4.151120185852051
    7. '<|end|>' → logprob: -7.026120185852051
    8. '4' → logprob: -7.151120185852051
    9. '``' → logprob: -7.151120185852051
    10. '[' → logprob: -7.526120185852051

Token 2197: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.5417675375938416
    2. '```' → logprob: -1.2917675971984863
    3. '2' → logprob: -3.2917675971984863
    4. '9' → logprob: -3.2917675971984863
    5. '3' → logprob: -3.6667675971984863
    6. ' ' → logprob: -3.9167675971984863
    7. ':' → logprob: -4.916767597198486
    8. '``' → logprob: -5.166767597198486
    9. '[' → logprob: -5.416767597198486
    10. '[
' → logprob: -6.166767597198486

Token 2198: '
' (ID: 198)
  Prédit: '3'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.05963413789868355
    2. '```' → logprob: -3.059634208679199
    3. '``' → logprob: -5.309634208679199
    4. ' ' → logprob: -5.934634208679199
    5. ':' → logprob: -6.684634208679199
    6. '2' → logprob: -7.309634208679199
    7. '
' → logprob: -7.934634208679199
    8. '[' → logprob: -8.6846342086792
    9. '\n' → logprob: -8.6846342086792
    10. '1' → logprob: -9.0596342086792

Token 2199: '       ' (ID: 309)
  Prédit: '3'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '3' → logprob: -0.18490725755691528
    2. '```' → logprob: -2.0599071979522705
    3. ' ' → logprob: -4.05990743637085
    4. '``' → logprob: -4.30990743637085
    5. '2' → logprob: -5.55990743637085
    6. '`' → logprob: -6.18490743637085
    7. '   ' → logprob: -6.68490743637085
    8. '1' → logprob: -7.18490743637085
    9. '"' → logprob: -7.80990743637085
    10. '4' → logprob: -8.059906959533691

Token 2200: ' #' (ID: 1069)
  Prédit: '3'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '3' → logprob: -0.02909974381327629
    2. '```' → logprob: -4.279099941253662
    3. ' ' → logprob: -5.029099941253662
    4. '``' → logprob: -5.529099941253662
    5. '2' → logprob: -6.279099941253662
    6. '1' → logprob: -7.529099941253662
    7. '4' → logprob: -7.529099941253662
    8. '`' → logprob: -7.654099941253662
    9. '6' → logprob: -8.654099464416504
    10. '"' → logprob: -8.779099464416504

Token 2201: ' ' (ID: 220)
  Prédit: '3'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.0021696516778320074
    2. '2' → logprob: -6.877169609069824
    3. '```' → logprob: -7.127169609069824
    4. '``' → logprob: -8.252169609069824
    5. '1' → logprob: -9.752169609069824
    6. '`' → logprob: -11.877169609069824
    7. ' ' → logprob: -13.127169609069824
    8. '0' → logprob: -13.502169609069824
    9. '4' → logprob: -13.752169609069824
    10. '9' → logprob: -14.502169609069824

Token 2202: '3' (ID: 18)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.04110308736562729
    2. '3' → logprob: -3.2911031246185303
    3. '``' → logprob: -6.291102886199951
    4. '```' → logprob: -6.916102886199951
    5. '1' → logprob: -9.16610336303711
    6. '9' → logprob: -9.79110336303711
    7. '4' → logprob: -10.41610336303711
    8. '`' → logprob: -11.41610336303711
    9. '"' → logprob: -12.54110336303711
    10. ''' → logprob: -13.41610336303711

Token 2203: ' ' (ID: 220)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 2204: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.014170682057738304
    2. ' ' → logprob: -4.2641706466674805
    3. '```' → logprob: -12.13917064666748
    4. ',' → logprob: -14.38917064666748
    5. '   ' → logprob: -15.01417064666748
    6. '  ' → logprob: -15.51417064666748
    7. '<|end|>' → logprob: -15.63917064666748
    8. ' ,' → logprob: -16.139171600341797
    9. '1' → logprob: -16.139171600341797
    10. ')' → logprob: -16.389171600341797

Token 2205: '
' (ID: 198)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.46741926670074463
    2. '<|end|>' → logprob: -1.5924192667007446
    3. '```' → logprob: -2.717419147491455
    4. '
' → logprob: -2.967419147491455
    5. '3' → logprob: -3.967419147491455
    6. '0' → logprob: -5.092419147491455
    7. ' ' → logprob: -5.092419147491455
    8. '<|end|>' → logprob: -5.967419147491455
    9. '`' → logprob: -6.342419147491455
    10. '6' → logprob: -6.592419147491455

Token 2206: '       ' (ID: 309)
  Prédit: '3'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '3' → logprob: -0.6247697472572327
    2. ' ' → logprob: -1.124769687652588
    3. '\n' → logprob: -2.999769687652588
    4. '```' → logprob: -3.874769687652588
    5. '0' → logprob: -4.124769687652588
    6. '6' → logprob: -4.374769687652588
    7. '1' → logprob: -4.749769687652588
    8. '
' → logprob: -4.749769687652588
    9. '4' → logprob: -4.999769687652588
    10. '``' → logprob: -5.499769687652588

Token 2207: ' #' (ID: 1069)
  Prédit: '3'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '3' → logprob: -1.026407241821289
    2. ' ' → logprob: -1.151407241821289
    3. '5' → logprob: -1.401407241821289
    4. '0' → logprob: -3.901407241821289
    5. '6' → logprob: -4.276407241821289
    6. '```' → logprob: -4.401407241821289
    7. '4' → logprob: -4.651407241821289
    8. '\n' → logprob: -5.276407241821289
    9. '
' → logprob: -5.276407241821289
    10. '1' → logprob: -5.401407241821289

Token 2208: ' ' (ID: 220)
  Prédit: '3'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.025388948619365692
    2. '```' → logprob: -4.650388717651367
    3. '\n' → logprob: -5.525388717651367
    4. '0' → logprob: -5.525388717651367
    5. ' ' → logprob: -6.150388717651367
    6. '1' → logprob: -6.525388717651367
    7. '   ' → logprob: -7.150388717651367
    8. '7' → logprob: -7.650388717651367
    9. '
' → logprob: -7.775388717651367
    10. '       ' → logprob: -7.900388717651367

Token 2209: '5' (ID: 20)
  Prédit: '3'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.07572934776544571
    2. '
' → logprob: -3.5757293701171875
    3. ' ' → logprob: -4.2007293701171875
    4. '0' → logprob: -4.9507293701171875
    5. '<|end|>' → logprob: -5.2007293701171875
    6. '5' → logprob: -5.3257293701171875
    7. '   ' → logprob: -5.5757293701171875
    8. '```' → logprob: -6.2007293701171875
    9. '\n' → logprob: -6.7007293701171875
    10. '       ' → logprob: -6.9507293701171875

Token 2210: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.010357154533267021
    2. '0' → logprob: -5.13535737991333
    3. '<|end|>' → logprob: -6.13535737991333
    4. '```' → logprob: -7.13535737991333
    5. ' "' → logprob: -8.510356903076172
    6. ' ```' → logprob: -8.885356903076172
    7. ' 
' → logprob: -8.885356903076172
    8. ' ,' → logprob: -9.135356903076172
    9. '   ' → logprob: -9.385356903076172
    10. '<|end|>' → logprob: -9.510356903076172

Token 2211: '0' (ID: 15)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.04861427843570709
    2. '0' → logprob: -3.048614263534546
    3. '```' → logprob: -10.923614501953125
    4. ' ' → logprob: -12.923614501953125
    5. '   ' → logprob: -14.298614501953125
    6. '6' → logprob: -14.298614501953125
    7. '<|end|>' → logprob: -14.298614501953125
    8. '  ' → logprob: -14.423614501953125
    9. '`' → logprob: -14.548614501953125
    10. ',' → logprob: -14.548614501953125

Token 2212: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.15627369284629822
    2. '```' → logprob: -3.281273603439331
    3. '\n' → logprob: -3.406273603439331
    4. '[
' → logprob: -3.531273603439331
    5. '   ' → logprob: -4.28127384185791
    6. '[' → logprob: -5.40627384185791
    7. ':' → logprob: -5.53127384185791
    8. 'class' → logprob: -5.53127384185791
    9. ':
' → logprob: -6.03127384185791
    10. 'def' → logprob: -6.15627384185791

Token 2213: '       ' (ID: 309)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '\n' → logprob: -1.1060010194778442
    2. '
' → logprob: -1.2310010194778442
    3. '```' → logprob: -1.4810010194778442
    4. '   ' → logprob: -2.4810009002685547
    5. ')' → logprob: -3.8560009002685547
    6. '<|end|>' → logprob: -4.856000900268555
    7. '0' → logprob: -5.606000900268555
    8. '``' → logprob: -5.731000900268555
    9. '       ' → logprob: -5.856000900268555
    10. '[
' → logprob: -6.106000900268555

Token 2214: ' #' (ID: 1069)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.7607991695404053
    2. '   ' → logprob: -1.3857991695404053
    3. '```' → logprob: -1.6357991695404053
    4. '       ' → logprob: -3.3857991695404053
    5. '
' → logprob: -4.510799407958984
    6. ')' → logprob: -5.385799407958984
    7. '0' → logprob: -5.385799407958984
    8. '<|end|>' → logprob: -5.510799407958984
    9. ':' → logprob: -5.885799407958984
    10. '``' → logprob: -6.135799407958984

Token 2215: ' That's' (ID: 21926)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '```' → logprob: -0.7447463870048523
    2. '       ' → logprob: -1.744746446609497
    3. '   ' → logprob: -1.994746446609497
    4. '
' → logprob: -2.869746446609497
    5. '\n' → logprob: -3.369746446609497
    6. '3' → logprob: -3.369746446609497
    7. 'def' → logprob: -3.494746446609497
    8. '[
' → logprob: -4.244746208190918
    9. '0' → logprob: -5.244746208190918
    10. '``' → logprob: -5.369746208190918

Token 2216: ' ' (ID: 220)
  Prédit: '3'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.7958404421806335
    2. '```' → logprob: -1.2958405017852783
    3. ' ' → logprob: -2.5458405017852783
    4. '2' → logprob: -3.0458405017852783
    5. '<|end|>' → logprob: -3.2958405017852783
    6. '9' → logprob: -3.5458405017852783
    7. '0' → logprob: -3.9208405017852783
    8. '\n' → logprob: -4.170840263366699
    9. '1' → logprob: -4.170840263366699
    10. '
' → logprob: -5.295840263366699

Token 2217: '3' (ID: 18)
  Prédit: '9'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: -0.5894206166267395
    2. '\n' → logprob: -1.2144205570220947
    3. '3' → logprob: -2.9644205570220947
    4. '```' → logprob: -3.7144205570220947
    5. ' ' → logprob: -3.9644205570220947
    6. '2' → logprob: -4.214420795440674
    7. '<|end|>' → logprob: -4.714420795440674
    8. '
' → logprob: -4.839420795440674
    9. '1' → logprob: -5.589420795440674
    10. ' (' → logprob: -5.714420795440674

Token 2218: ' and' (ID: 326)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.01814560778439045
    2. '```' → logprob: -4.268145561218262
    3. '
' → logprob: -7.268145561218262
    4. ',' → logprob: -7.268145561218262
    5. '3' → logprob: -7.393145561218262
    6. '   ' → logprob: -7.518145561218262
    7. ' 
' → logprob: -8.518145561218262
    8. '  ' → logprob: -8.643145561218262
    9. '5' → logprob: -8.768145561218262
    10. '2' → logprob: -8.893145561218262

Token 2219: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.15860967338085175
    2. '0' → logprob: -2.158609628677368
    3. '5' → logprob: -4.658609867095947
    4. '3' → logprob: -5.033609867095947
    5. '6' → logprob: -5.283609867095947
    6. '```' → logprob: -5.408609867095947
    7. '4' → logprob: -6.408609867095947
    8. '8' → logprob: -6.908609867095947
    9. '7' → logprob: -7.158609867095947
    10. '1' → logprob: -7.283609867095947

Token 2220: '5' (ID: 20)
  Prédit: '4'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '4' → logprob: -0.17310494184494019
    2. '0' → logprob: -2.923105001449585
    3. '5' → logprob: -3.048105001449585
    4. ' ' → logprob: -3.048105001449585
    5. '6' → logprob: -4.923104763031006
    6. '3' → logprob: -6.548104763031006
    7. '```' → logprob: -7.173104763031006
    8. '1' → logprob: -7.923104763031006
    9. '`' → logprob: -9.423105239868164
    10. '9' → logprob: -9.548105239868164

Token 2221: ' weight' (ID: 6049)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.6159093976020813
    2. '```' → logprob: -2.3659093379974365
    3. '   ' → logprob: -2.4909093379974365
    4. ',' → logprob: -2.4909093379974365
    5. '<|end|>' → logprob: -3.1159093379974365
    6. ':' → logprob: -3.7409093379974365
    7. ',
' → logprob: -3.9909093379974365
    8. ':
' → logprob: -4.365909576416016
    9. 'def' → logprob: -4.490909576416016
    10. '3' → logprob: -4.740909576416016

Token 2222: ' with' (ID: 483)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.7133835554122925
    2. '\n' → logprob: -2.088383674621582
    3. '<|end|>' → logprob: -2.213383674621582
    4. '```' → logprob: -2.588383674621582
    5. '3' → logprob: -2.713383674621582
    6. ',' → logprob: -3.463383674621582
    7. '0' → logprob: -3.963383674621582
    8. ' ' → logprob: -4.088383674621582
    9. '6' → logprob: -4.838383674621582
    10. ')' → logprob: -4.838383674621582

Token 2223: ' zero' (ID: 12421)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.2649363875389099
    2. ' ' → logprob: -2.1399364471435547
    3. '```' → logprob: -3.1399364471435547
    4. 'quantity' → logprob: -3.5149364471435547
    5. 'b' → logprob: -3.6399364471435547
    6. ' quantity' → logprob: -5.264936447143555
    7. ' b' → logprob: -5.514936447143555
    8. '1' → logprob: -5.639936447143555
    9. '``' → logprob: -7.139936447143555
    10. 'a' → logprob: -8.139936447143555

Token 2224: ' quantity' (ID: 17245)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.37496623396873474
    2. '\n' → logprob: -1.8749662637710571
    3. '<|end|>' → logprob: -1.9999662637710571
    4. '```' → logprob: -4.499966144561768
    5. ',' → logprob: -5.999966144561768
    6. '<|end|>' → logprob: -6.124966144561768
    7. '0' → logprob: -6.124966144561768
    8. ')' → logprob: -7.124966144561768
    9. '   ' → logprob: -7.624966144561768
    10. ',
' → logprob: -7.749966144561768

Token 2225: ',' (ID: 11)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.6346929669380188
    2. '
' → logprob: -1.134692907333374
    3. '```' → logprob: -2.634692907333374
    4. ',' → logprob: -3.884692907333374
    5. '<|end|>' → logprob: -4.009693145751953
    6. '\' → logprob: -5.259693145751953
    7. ',
' → logprob: -5.509693145751953
    8. ':' → logprob: -5.509693145751953
    9. '[' → logprob: -5.634693145751953
    10. '[
' → logprob: -5.884693145751953

Token 2226: ' zero' (ID: 12421)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '```' → logprob: -0.6084124445915222
    2. '
' → logprob: -1.733412504196167
    3. '\n' → logprob: -2.108412504196167
    4. '<|end|>' → logprob: -2.983412504196167
    5. '0' → logprob: -3.233412504196167
    6. ',' → logprob: -4.233412265777588
    7. ' ' → logprob: -4.608412265777588
    8. '``' → logprob: -4.858412265777588
    9. '3' → logprob: -5.108412265777588
    10. ' 
' → logprob: -5.233412265777588

Token 2227: ' quantity' (ID: 17245)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.1298825740814209
    2. '<|end|>' → logprob: -3.004882574081421
    3. '```' → logprob: -3.129882574081421
    4. '\n' → logprob: -4.6298828125
    5. '0' → logprob: -5.5048828125
    6. ',' → logprob: -5.7548828125
    7. ')' → logprob: -5.8798828125
    8. '<|end|>' → logprob: -6.5048828125
    9. ',
' → logprob: -7.2548828125
    10. ':
' → logprob: -7.2548828125

Token 2228: ' means' (ID: 4748)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.6699768304824829
    2. '\n' → logprob: -1.544976830482483
    3. '```' → logprob: -1.669976830482483
    4. '<|end|>' → logprob: -3.5449767112731934
    5. '0' → logprob: -3.7949767112731934
    6. ':' → logprob: -5.544976711273193
    7. ',' → logprob: -5.669976711273193
    8. '[' → logprob: -5.919976711273193
    9. '``' → logprob: -6.044976711273193
    10. ':
' → logprob: -6.044976711273193

Token 2229: ' ' (ID: 220)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 2230: '2' (ID: 17)
  Prédit: 'quantity'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'quantity' → logprob: -0.864176869392395
    2. '1' → logprob: -1.239176869392395
    3. ' quantity' → logprob: -2.3641767501831055
    4. ' ' → logprob: -2.6141767501831055
    5. ' (' → logprob: -3.1141767501831055
    6. '```' → logprob: -4.3641767501831055
    7. '0' → logprob: -4.4891767501831055
    8. '
' → logprob: -4.7391767501831055
    9. ' =' → logprob: -4.9891767501831055
    10. 'items' → logprob: -4.9891767501831055

Token 2231: '^' (ID: 61)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '```' → logprob: -0.9206934571266174
    2. '
' → logprob: -1.4206933975219727
    3. '^' → logprob: -1.7956933975219727
    4. '0' → logprob: -2.2956933975219727
    5. '<|end|>' → logprob: -3.0456933975219727
    6. '``' → logprob: -5.045693397521973
    7. ' ' → logprob: -5.545693397521973
    8. '[' → logprob: -5.670693397521973
    9. '[]' → logprob: -6.045693397521973
    10. '  
' → logprob: -6.170693397521973

Token 2232: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00023965541913639754
    2. ' ' → logprob: -9.250239372253418
    3. 'y' → logprob: -9.625239372253418
    4. '```' → logprob: -10.000239372253418
    5. '-' → logprob: -11.125239372253418
    6. '^' → logprob: -11.625239372253418
    7. '1' → logprob: -13.500239372253418
    8. 'b' → logprob: -13.875239372253418
    9. '`' → logprob: -14.000239372253418
    10. '=' → logprob: -14.125239372253418

Token 2233: '=' (ID: 28)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.8089442253112793
    2. '
' → logprob: -0.9339442253112793
    3. '```' → logprob: -2.3089442253112793
    4. '<|end|>' → logprob: -3.8089442253112793
    5. ')' → logprob: -3.9339442253112793
    6. ')
' → logprob: -5.308944225311279
    7. '``' → logprob: -6.058944225311279
    8. '   ' → logprob: -6.433944225311279
    9. '0' → logprob: -6.558944225311279
    10. ',' → logprob: -7.183944225311279

Token 2234: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0001329791557509452
    2. ' ' → logprob: -10.00013256072998
    3. '```' → logprob: -10.00013256072998
    4. 'items' → logprob: -11.12513256072998
    5. '0' → logprob: -11.75013256072998
    6. ' items' → logprob: -11.87513256072998
    7. '`' → logprob: -12.37513256072998
    8. '=' → logprob: -13.00013256072998
    9. '``' → logprob: -13.37513256072998
    10. ' =' → logprob: -13.50013256072998

Token 2235: ' item' (ID: 2169)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.1601538360118866
    2. '```' → logprob: -2.660153865814209
    3. '\n' → logprob: -3.160153865814209
    4. ',' → logprob: -5.160153865814209
    5. '   ' → logprob: -5.285153865814209
    6. '3' → logprob: -5.535153865814209
    7. ',
' → logprob: -5.785153865814209
    8. ':
' → logprob: -6.410153865814209
    9. '<|end|>' → logprob: -6.410153865814209
    10. '0' → logprob: -6.660153865814209

Token 2236: ' each' (ID: 2454)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.09349521994590759
    2. '\n' → logprob: -3.5934951305389404
    3. '<|end|>' → logprob: -3.7184951305389404
    4. '```' → logprob: -4.3434953689575195
    5. ',' → logprob: -5.0934953689575195
    6. '3' → logprob: -5.8434953689575195
    7. ',
' → logprob: -5.8434953689575195
    8. '   ' → logprob: -6.5934953689575195
    9. '1' → logprob: -6.7184953689575195
    10. '6' → logprob: -6.8434953689575195

Token 2237: ' chunk' (ID: 23958)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.5121867656707764
    2. '```' → logprob: -2.2621867656707764
    3. '\n' → logprob: -2.3871867656707764
    4. ',' → logprob: -2.7621867656707764
    5. '   ' → logprob: -3.2621867656707764
    6. ',
' → logprob: -3.3871867656707764
    7. '<|end|>' → logprob: -4.0121870040893555
    8. ')' → logprob: -5.0121870040893555
    9. '+
' → logprob: -5.1371870040893555
    10. ':' → logprob: -5.5121870040893555

Token 2238: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -1.4377743005752563
    2. '```' → logprob: -1.5627743005752563
    3. '   ' → logprob: -1.9377743005752563
    4. ':' → logprob: -2.062774181365967
    5. ',' → logprob: -2.437774181365967
    6. ',
' → logprob: -3.687774181365967
    7. ':
' → logprob: -3.687774181365967
    8. '\n' → logprob: -3.937774181365967
    9. '[' → logprob: -4.312774181365967
    10. '[
' → logprob: -4.312774181365967

Token 2239: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6997687220573425
    2. '
' → logprob: -1.8247687816619873
    3. '```' → logprob: -1.8247687816619873
    4. 'def' → logprob: -2.9497687816619873
    5. 'class' → logprob: -3.5747687816619873
    6. ',' → logprob: -3.9497687816619873
    7. ':
' → logprob: -3.9497687816619873
    8. ':' → logprob: -3.9497687816619873
    9. '       ' → logprob: -4.199768543243408
    10. ')' → logprob: -5.324768543243408

Token 2240: ' #' (ID: 1069)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '```' → logprob: -0.9469394087791443
    2. '   ' → logprob: -1.571939468383789
    3. '
' → logprob: -2.196939468383789
    4. '3' → logprob: -2.321939468383789
    5. 'def' → logprob: -2.946939468383789
    6. '       ' → logprob: -3.946939468383789
    7. '6' → logprob: -4.196939468383789
    8. '0' → logprob: -4.321939468383789
    9. 'class' → logprob: -4.321939468383789
    10. '7' → logprob: -4.446939468383789

Token 2241: ' Total' (ID: 17565)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.1816736459732056
    2. '```' → logprob: -1.1816736459732056
    3. 'def' → logprob: -2.181673526763916
    4. '       ' → logprob: -2.431673526763916
    5. '
' → logprob: -2.681673526763916
    6. ':' → logprob: -3.431673526763916
    7. ':
' → logprob: -3.556673526763916
    8. '0' → logprob: -4.681673526763916
    9. '\n' → logprob: -4.681673526763916
    10. '[
' → logprob: -5.306673526763916

Token 2242: ' weight' (ID: 6049)
  Prédit: '_weight'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_weight' → logprob: -0.5291712284088135
    2. 'weight' → logprob: -2.2791712284088135
    3. '```' → logprob: -2.5291712284088135
    4. 'Weight' → logprob: -3.5291712284088135
    5. ' weight' → logprob: -3.6541712284088135
    6. '_unit' → logprob: -3.7791712284088135
    7. '_items' → logprob: -3.7791712284088135
    8. '_' → logprob: -3.7791712284088135
    9. 'Unit' → logprob: -4.029170989990234
    10. '_units' → logprob: -4.279170989990234

Token 2243: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.948641836643219
    2. '=' → logprob: -1.3236417770385742
    3. 'Unit' → logprob: -1.4486417770385742
    4. '```' → logprob: -3.198641777038574
    5. 's' → logprob: -4.323641777038574
    6. '`' → logprob: -5.073641777038574
    7. '
' → logprob: -5.073641777038574
    8. ' ' → logprob: -5.198641777038574
    9. '(' → logprob: -5.323641777038574
    10. ':' → logprob: -5.448641777038574

Token 2244: ' sum' (ID: 4215)
  Prédit: '8'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '8' → logprob: -0.44085726141929626
    2. '3' → logprob: -1.3158572912216187
    3. ' ' → logprob: -2.440857172012329
    4. '1' → logprob: -8.19085693359375
    5. '`' → logprob: -8.56585693359375
    6. '```' → logprob: -9.06585693359375
    7. ' (' → logprob: -9.19085693359375
    8. '0' → logprob: -9.69085693359375
    9. '   ' → logprob: -9.81585693359375
    10. '5' → logprob: -10.06585693359375

Token 2245: ' weight' (ID: 6049)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -1.4369844198226929
    2. '3' → logprob: -1.8119844198226929
    3. '```' → logprob: -1.9369844198226929
    4. 'Unit' → logprob: -2.0619845390319824
    5. '=' → logprob: -2.3119845390319824
    6. ' =' → logprob: -2.6869845390319824
    7. ' ' → logprob: -3.0619845390319824
    8. '`' → logprob: -4.311984539031982
    9. 's' → logprob: -4.561984539031982
    10. ' (' → logprob: -4.686984539031982

Token 2246: ' *' (ID: 425)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '```' → logprob: -0.6648422479629517
    2. '
' → logprob: -1.5398422479629517
    3. '3' → logprob: -3.039842128753662
    4. '<|end|>' → logprob: -3.539842128753662
    5. ':' → logprob: -3.789842128753662
    6. '=' → logprob: -3.914842128753662
    7. 's' → logprob: -3.914842128753662
    8. ',' → logprob: -4.039842128753662
    9. '   ' → logprob: -4.164842128753662
    10. 'def' → logprob: -4.414842128753662

Token 2247: ' quantity' (ID: 17245)
  Prédit: 'quantity'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'quantity' → logprob: -0.36329981684684753
    2. '1' → logprob: -1.61329984664917
    3. ' quantity' → logprob: -2.48829984664917
    4. ' ' → logprob: -4.48829984664917
    5. '2' → logprob: -4.73829984664917
    6. '```' → logprob: -7.11329984664917
    7. 'b' → logprob: -7.61329984664917
    8. '`' → logprob: -9.238299369812012
    9. '``' → logprob: -9.238299369812012
    10. 'quant' → logprob: -9.363299369812012

Token 2248: ' =' (ID: 314)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '```' → logprob: -0.2876608371734619
    2. '
' → logprob: -3.037660837173462
    3. '<|end|>' → logprob: -3.412660837173462
    4. '[' → logprob: -3.412660837173462
    5. ',' → logprob: -3.787660837173462
    6. ')' → logprob: -3.787660837173462
    7. ':' → logprob: -4.412660598754883
    8. '[
' → logprob: -4.537660598754883
    9. '\n' → logprob: -4.787660598754883
    10. '   ' → logprob: -4.912660598754883

Token 2249: ' (' (ID: 350)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.5765345096588135
    2. ' ' → logprob: -0.9515345096588135
    3. '```' → logprob: -3.5765345096588135
    4. '0' → logprob: -4.576534271240234
    5. '2' → logprob: -5.576534271240234
    6. '3' → logprob: -5.701534271240234
    7. '9' → logprob: -6.201534271240234
    8. '<|end|>' → logprob: -7.076534271240234
    9. ' =' → logprob: -7.201534271240234
    10. '`' → logprob: -7.576534271240234

Token 2250: '3' (ID: 18)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.41069895029067993
    2. '3' → logprob: -1.1606988906860352
    3. ' ' → logprob: -4.035698890686035
    4. ')' → logprob: -5.910698890686035
    5. '```' → logprob: -6.660698890686035
    6. '2' → logprob: -7.910698890686035
    7. 'each' → logprob: -8.285698890686035
    8. '`' → logprob: -8.660698890686035
    9. '(' → logprob: -8.785698890686035
    10. 'Each' → logprob: -9.035698890686035

Token 2251: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.6414769291877747
    2. ')' → logprob: -1.5164768695831299
    3. ' +' → logprob: -1.5164768695831299
    4. '*' → logprob: -4.516477108001709
    5. ',' → logprob: -4.891477108001709
    6. '+' → logprob: -5.391477108001709
    7. ' )' → logprob: -5.641477108001709
    8. ' ' → logprob: -6.141477108001709
    9. ' ,' → logprob: -6.766477108001709
    10. '```' → logprob: -6.891477108001709

Token 2252: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.004633638076484203
    2. ' ' → logprob: -5.37963342666626
    3. '2' → logprob: -11.629633903503418
    4. '```' → logprob: -12.754633903503418
    5. '   ' → logprob: -14.504633903503418
    6. '`' → logprob: -15.129633903503418
    7. ' ' → logprob: -15.129633903503418
    8. '0' → logprob: -15.879633903503418
    9. '``' → logprob: -16.0046329498291
    10. ')' → logprob: -16.2546329498291

Token 2253: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00020711649267468601
    2. ' ' → logprob: -8.50020694732666
    3. '```' → logprob: -13.25020694732666
    4. '0' → logprob: -14.37520694732666
    5. '`' → logprob: -14.87520694732666
    6. '   ' → logprob: -14.87520694732666
    7. '
' → logprob: -15.87520694732666
    8. '``' → logprob: -16.250207901000977
    9. ' ' → logprob: -16.375207901000977
    10. '(' → logprob: -16.625207901000977

Token 2254: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.041003767400979996
    2. ')
' → logprob: -3.291003704071045
    3. ' +' → logprob: -6.916003704071045
    4. ' )' → logprob: -7.666003704071045
    5. ')+' → logprob: -8.166004180908203
    6. '+' → logprob: -8.291004180908203
    7. '+
' → logprob: -8.666004180908203
    8. '```' → logprob: -8.916004180908203
    9. ')+(' → logprob: -8.916004180908203
    10. ',' → logprob: -9.291004180908203

Token 2255: ' +' (ID: 659)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '```' → logprob: -0.5252152681350708
    2. '
' → logprob: -1.4002152681350708
    3. ',' → logprob: -2.9002151489257812
    4. '<|end|>' → logprob: -3.5252151489257812
    5. ')' → logprob: -3.7752151489257812
    6. '\n' → logprob: -4.525215148925781
    7. '+' → logprob: -5.150215148925781
    8. ',
' → logprob: -5.400215148925781
    9. '0' → logprob: -5.650215148925781
    10. '   ' → logprob: -6.025215148925781

Token 2256: ' (' (ID: 350)
  Prédit: '5'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '5' → logprob: -0.2591973543167114
    2. '3' → logprob: -2.509197235107422
    3. ' ' → logprob: -2.884197235107422
    4. '(' → logprob: -3.509197235107422
    5. ' (' → logprob: -3.509197235107422
    6. '1' → logprob: -3.634197235107422
    7. '2' → logprob: -5.759197235107422
    8. '```' → logprob: -7.384197235107422
    9. '0' → logprob: -7.759197235107422
    10. '6' → logprob: -8.884197235107422

Token 2257: '5' (ID: 20)
  Prédit: '5'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '5' → logprob: -0.006898893509060144
    2. '1' → logprob: -5.131898880004883
    3. '(' → logprob: -7.006898880004883
    4. ' ' → logprob: -10.631898880004883
    5. '0' → logprob: -11.256898880004883
    6. ' (' → logprob: -11.506898880004883
    7. '   ' → logprob: -12.131898880004883
    8. '3' → logprob: -12.506898880004883
    9. '```' → logprob: -13.131898880004883
    10. ')' → logprob: -13.506898880004883

Token 2258: ' *' (ID: 425)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.02538883499801159
    2. ')
' → logprob: -4.900388717651367
    3. ' *' → logprob: -4.900388717651367
    4. '0' → logprob: -5.775388717651367
    5. ' )' → logprob: -6.275388717651367
    6. '*' → logprob: -6.650388717651367
    7. '```' → logprob: -6.650388717651367
    8. ' ' → logprob: -7.400388717651367
    9. '
' → logprob: -7.900388717651367
    10. ',' → logprob: -8.275388717651367

Token 2259: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.002187022240832448
    2. ' ' → logprob: -6.127187252044678
    3. '0' → logprob: -13.75218677520752
    4. '```' → logprob: -14.37718677520752
    5. ' ' → logprob: -16.002187728881836
    6. '(' → logprob: -16.752187728881836
    7. '`' → logprob: -16.814687728881836
    8. '``' → logprob: -17.252187728881836
    9. '   ' → logprob: -17.564687728881836
    10. ')' → logprob: -18.002187728881836

Token 2260: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0004957250785082579
    2. '0' → logprob: -8.250495910644531
    3. ' ' → logprob: -8.375495910644531
    4. '```' → logprob: -13.000495910644531
    5. ')' → logprob: -14.750495910644531
    6. '`' → logprob: -15.437995910644531
    7. '   ' → logprob: -16.12549591064453
    8. ' ' → logprob: -16.25049591064453
    9. '(' → logprob: -16.31299591064453
    10. '...' → logprob: -16.43799591064453

Token 2261: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.005410315468907356
    2. ')
' → logprob: -5.380410194396973
    3. ' )' → logprob: -7.505410194396973
    4. '```' → logprob: -9.755410194396973
    5. ')=' → logprob: -10.505410194396973
    6. '`)' → logprob: -10.880410194396973
    7. '+' → logprob: -11.005410194396973
    8. ')`' → logprob: -11.130410194396973
    9. ' )
' → logprob: -11.380410194396973
    10. ')

' → logprob: -11.505410194396973

Token 2262: ' =' (ID: 314)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 2263: ' ' (ID: 220)
  Prédit: '8'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '8' → logprob: -0.0005177667480893433
    2. ' ' → logprob: -7.750517845153809
    3. '3' → logprob: -9.750517845153809
    4. '9' → logprob: -11.125517845153809
    5. '1' → logprob: -12.625517845153809
    6. '(' → logprob: -12.875517845153809
    7. '   ' → logprob: -13.250517845153809
    8. '
' → logprob: -13.250517845153809
    9. '=' → logprob: -13.875517845153809
    10. ' (' → logprob: -14.375517845153809

Token 2264: '8' (ID: 23)
  Prédit: '8'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '8' → logprob: -5.5577775128767826e-06
    2. ' ' → logprob: -12.375005722045898
    3. '9' → logprob: -14.750005722045898
    4. '3' → logprob: -15.500005722045898
    5. '
' → logprob: -15.500005722045898
    6. '```' → logprob: -15.625005722045898
    7. '``' → logprob: -16.5000057220459
    8. '(' → logprob: -16.8750057220459
    9. '`' → logprob: -18.2500057220459
    10. '   ' → logprob: -18.2500057220459

Token 2265: '

' (ID: 279)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '```' → logprob: -1.1099544763565063
    2. '   ' → logprob: -1.6099544763565063
    3. ',' → logprob: -2.234954357147217
    4. '
' → logprob: -2.484954357147217
    5. '<|end|>' → logprob: -2.734954357147217
    6. '\n' → logprob: -3.234954357147217
    7. ',
' → logprob: -3.484954357147217
    8. '       ' → logprob: -3.734954357147217
    9. '.' → logprob: -4.109954357147217
    10. ')' → logprob: -4.109954357147217

Token 2266: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 2267: ' #' (ID: 1069)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '```' → logprob: -0.7878403663635254
    2. '   ' → logprob: -1.9128403663635254
    3. '       ' → logprob: -2.0378403663635254
    4. '
' → logprob: -3.0378403663635254
    5. '<|end|>' → logprob: -3.1628403663635254
    6. '<|end|>' → logprob: -3.4128403663635254
    7. ')' → logprob: -3.4128403663635254
    8. '\n' → logprob: -3.5378403663635254
    9. ',' → logprob: -4.662840366363525
    10. '``' → logprob: -5.162840366363525

Token 2268: ' Input' (ID: 10090)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.1557621955871582
    2. '```' → logprob: -1.7807621955871582
    3. ')' → logprob: -2.030762195587158
    4. '       ' → logprob: -2.155762195587158
    5. ':' → logprob: -3.030762195587158
    6. '<|end|>' → logprob: -3.155762195587158
    7. ':
' → logprob: -3.405762195587158
    8. '\n' → logprob: -3.530762195587158
    9. '
' → logprob: -4.155762195587158
    10. '#' → logprob: -4.155762195587158

Token 2269: ' total' (ID: 3609)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '```' → logprob: -0.5103935599327087
    2. '
' → logprob: -2.1353936195373535
    3. '[' → logprob: -3.0103936195373535
    4. '<|end|>' → logprob: -3.0103936195373535
    5. ')' → logprob: -3.2603936195373535
    6. ',' → logprob: -3.3853936195373535
    7. ':' → logprob: -3.5103936195373535
    8. '[
' → logprob: -4.5103936195373535
    9. ':
' → logprob: -4.7603936195373535
    10. '\' → logprob: -5.1353936195373535

Token 2270: ' mass' (ID: 4842)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '```' → logprob: -0.7515185475349426
    2. '_i' → logprob: -2.376518487930298
    3. '_' → logprob: -2.501518487930298
    4. 'Unit' → logprob: -2.751518487930298
    5. ':' → logprob: -3.251518487930298
    6. 's' → logprob: -3.501518487930298
    7. ',' → logprob: -3.751518487930298
    8. '   ' → logprob: -4.001518726348877
    9. ' ' → logprob: -4.251518726348877
    10. ')' → logprob: -4.376518726348877

Token 2271: ' =' (ID: 314)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '```' → logprob: -0.9683074951171875
    2. '+' → logprob: -1.9683074951171875
    3. ':' → logprob: -1.9683074951171875
    4. '<|end|>' → logprob: -2.0933074951171875
    5. ',' → logprob: -2.9683074951171875
    6. '
' → logprob: -3.5933074951171875
    7. ')' → logprob: -3.9683074951171875
    8. '.' → logprob: -4.3433074951171875
    9. '=' → logprob: -4.3433074951171875
    10. '<|end|>' → logprob: -4.5933074951171875

Token 2272: ' ' (ID: 220)
  Prédit: '9'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: -0.3194331228733063
    2. ' ' → logprob: -1.5694330930709839
    3. '3' → logprob: -3.6944332122802734
    4. '1' → logprob: -4.319433212280273
    5. '```' → logprob: -4.444433212280273
    6. '6' → logprob: -5.694433212280273
    7. '`' → logprob: -6.319433212280273
    8. '4' → logprob: -6.444433212280273
    9. '2' → logprob: -6.819433212280273
    10. ''' → logprob: -6.819433212280273

Token 2273: '9' (ID: 24)
  Prédit: '9'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: -0.07381201535463333
    2. ' ' → logprob: -3.6988120079040527
    3. '1' → logprob: -4.073812007904053
    4. '3' → logprob: -4.573812007904053
    5. '2' → logprob: -4.823812007904053
    6. '4' → logprob: -6.198812007904053
    7. '7' → logprob: -6.323812007904053
    8. '```' → logprob: -6.323812007904053
    9. '10' → logprob: -6.698812007904053
    10. '(' → logprob: -7.073812007904053

Token 2274: ' ?' (ID: 1423)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 2275: ' 

' (ID: 1202)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -1.2135077714920044
    2. '```' → logprob: -1.3385077714920044
    3. '   ' → logprob: -2.088507652282715
    4. '\n' → logprob: -2.338507652282715
    5. ':
' → logprob: -2.588507652282715
    6. '       ' → logprob: -3.713507652282715
    7. '<|end|>' → logprob: -3.963507652282715
    8. ')' → logprob: -4.088507652282715
    9. ',' → logprob: -4.088507652282715
    10. '
' → logprob: -4.213507652282715

Token 2276: '       ' (ID: 309)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '```' → logprob: -1.2356784343719482
    2. '   ' → logprob: -1.3606784343719482
    3. '\n' → logprob: -2.3606784343719482
    4. '
' → logprob: -2.4856784343719482
    5. '       ' → logprob: -2.8606784343719482
    6. ')' → logprob: -3.1106784343719482
    7. '<|end|>' → logprob: -3.1106784343719482
    8. '<|end|>' → logprob: -3.9856784343719482
    9. ',' → logprob: -4.360678672790527
    10. ':' → logprob: -4.735678672790527

Token 2277: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.1221022605895996
    2. '```' → logprob: -1.4971022605895996
    3. ':' → logprob: -1.6221022605895996
    4. '       ' → logprob: -3.2471022605895996
    5. ':
' → logprob: -3.2471022605895996
    6. '\n' → logprob: -3.4971022605895996
    7. '
' → logprob: -3.6221022605895996
    8. '<|end|>' → logprob: -4.1221022605896
    9. '#' (adapté à ' #') → logprob: -4.3721022605896
    10. ')' → logprob: -4.3721022605896

Token 2278: ' There's' (ID: 32711)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -1.2673852443695068
    2. '   ' → logprob: -1.3923852443695068
    3. '       ' → logprob: -1.3923852443695068
    4. ':
' → logprob: -2.892385244369507
    5. '```' → logprob: -3.017385244369507
    6. '
' → logprob: -3.517385244369507
    7. '<|end|>' → logprob: -3.892385244369507
    8. ')' → logprob: -4.142385482788086
    9. '#' → logprob: -4.642385482788086
    10. '<|end|>' → logprob: -5.017385482788086

Token 2279: ' a' (ID: 261)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '```' → logprob: -0.3533824384212494
    2. '`' → logprob: -2.7283823490142822
    3. ' ' → logprob: -3.1033823490142822
    4. ''' → logprob: -3.9783823490142822
    5. '
' → logprob: -4.228382587432861
    6. '"' → logprob: -4.228382587432861
    7. ')' → logprob: -4.353382587432861
    8. '.' → logprob: -4.478382587432861
    9. '\n' → logprob: -4.603382587432861
    10. ',' → logprob: -4.728382587432861

Token 2280: ' note' (ID: 7477)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '```' → logprob: -0.9451753497123718
    2. '
' → logprob: -1.1951754093170166
    3. '\n' → logprob: -2.5701754093170166
    4. ''' → logprob: -2.9451754093170166
    5. 'n' → logprob: -2.9451754093170166
    6. '`' → logprob: -3.3201754093170166
    7. '"' → logprob: -3.9451754093170166
    8. ' ' → logprob: -4.0701751708984375
    9. ')' → logprob: -5.0701751708984375
    10. '#' → logprob: -5.4451751708984375

Token 2281: ' in' (ID: 306)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '```' → logprob: -0.8296436667442322
    2. ':' → logprob: -1.454643726348877
    3. '   ' → logprob: -1.704643726348877
    4. '
' → logprob: -3.829643726348877
    5. '       ' → logprob: -3.829643726348877
    6. '[' → logprob: -3.829643726348877
    7. ',' → logprob: -4.079643726348877
    8. ':
' → logprob: -4.454643726348877
    9. '\n' → logprob: -4.454643726348877
    10. ')' → logprob: -4.829643726348877

Token 2282: ' the' (ID: 290)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '```' → logprob: -0.1069360226392746
    2. '`' → logprob: -3.606935977935791
    3. ''' → logprob: -4.356935977935791
    4. '0' → logprob: -4.606935977935791
    5. 'the' → logprob: -4.731935977935791
    6. '"' → logprob: -4.731935977935791
    7. '
' → logprob: -5.106935977935791
    8. '``' → logprob: -5.481935977935791
    9. ' the' → logprob: -5.731935977935791
    10. '#' → logprob: -5.731935977935791

Token 2283: ' problem' (ID: 4792)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '```' → logprob: -0.4114314019680023
    2. '#' → logprob: -2.286431312561035
    3. '`' → logprob: -2.786431312561035
    4. '"' → logprob: -3.036431312561035
    5. '"""' → logprob: -3.911431312561035
    6. ''' → logprob: -4.661431312561035
    7. '[' → logprob: -4.661431312561035
    8. '[
' → logprob: -4.661431312561035
    9. ')' → logprob: -4.786431312561035
    10. '_' → logprob: -4.911431312561035

Token 2284: ' statement' (ID: 9710)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '```' → logprob: -0.38947707414627075
    2. ':' → logprob: -2.139477014541626
    3. ')' → logprob: -3.139477014541626
    4. ',' → logprob: -3.639477014541626
    5. '   ' → logprob: -3.764477014541626
    6. '\n' → logprob: -4.264477252960205
    7. '
' → logprob: -4.389477252960205
    8. ':
' → logprob: -4.639477252960205
    9. '[' → logprob: -4.764477252960205
    10. '`' → logprob: -4.889477252960205

Token 2285: ' or' (ID: 503)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '```' → logprob: -1.0817898511886597
    2. ':' → logprob: -1.8317898511886597
    3. '
' → logprob: -1.9567898511886597
    4. '   ' → logprob: -2.331789970397949
    5. ',' → logprob: -2.706789970397949
    6. ':
' → logprob: -3.206789970397949
    7. '[' → logprob: -3.706789970397949
    8. ',
' → logprob: -3.706789970397949
    9. '<|end|>' → logprob: -3.706789970397949
    10. '[
' → logprob: -4.331789970397949

Token 2286: ' a' (ID: 261)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '```' → logprob: -0.08023127168416977
    2. '0' → logprob: -4.205231189727783
    3. ':' → logprob: -4.830231189727783
    4. '
' → logprob: -4.955231189727783
    5. '`' → logprob: -5.080231189727783
    6. '\n' → logprob: -5.205231189727783
    7. '``' → logprob: -5.455231189727783
    8. ')' → logprob: -5.580231189727783
    9. '\' → logprob: -5.580231189727783
    10. '#' → logprob: -5.955231189727783

Token 2287: ' discrepancy' (ID: 173834)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '```' → logprob: -0.863699197769165
    2. '
' → logprob: -1.363699197769165
    3. ')' → logprob: -1.863699197769165
    4. '#' → logprob: -3.738699197769165
    5. '<|end|>' → logprob: -3.863699197769165
    6. ':' → logprob: -4.113698959350586
    7. '\n' → logprob: -4.238698959350586
    8. ',' → logprob: -4.613698959350586
    9. 'def' → logprob: -4.738698959350586
    10. 'n' → logprob: -4.738698959350586

Token 2288: ' ?

' (ID: 13570)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.2838482856750488
    2. '```' → logprob: -1.5338482856750488
    3. ':
' → logprob: -2.283848285675049
    4. ':' → logprob: -2.408848285675049
    5. '<|end|>' → logprob: -2.908848285675049
    6. '[
' → logprob: -3.158848285675049
    7. '.' → logprob: -3.408848285675049
    8. ',' → logprob: -3.408848285675049
    9. '
' → logprob: -3.408848285675049
    10. '[' → logprob: -3.658848285675049

Token 2289: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.09854181110858917
    2. '```' → logprob: -3.223541736602783
    3. '       ' → logprob: -3.473541736602783
    4. '
' → logprob: -5.223541736602783
    5. ':' → logprob: -5.598541736602783
    6. 'def' → logprob: -5.973541736602783
    7. ':
' → logprob: -6.223541736602783
    8. ')' → logprob: -6.223541736602783
    9. '<|end|>' → logprob: -6.223541736602783
    10. '<|end|>' → logprob: -7.098541736602783

Token 2290: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.17391443252563477
    2. '       ' → logprob: -2.9239144325256348
    3. '```' → logprob: -3.1739144325256348
    4. 'def' → logprob: -3.6739144325256348
    5. ':' → logprob: -4.048914432525635
    6. '
' → logprob: -5.173914432525635
    7. ':
' → logprob: -5.298914432525635
    8. ')' → logprob: -6.298914432525635
    9. '<|end|>' → logprob: -6.423914432525635
    10. '<|end|>' → logprob: -7.298914432525635

Token 2291: ' Ah' (ID: 18076)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.3920226991176605
    2. '   ' → logprob: -1.267022728919983
    3. '       ' → logprob: -3.5170226097106934
    4. '```' → logprob: -5.267022609710693
    5. ' def' → logprob: -5.892022609710693
    6. ':' → logprob: -6.642022609710693
    7. '
' → logprob: -6.767022609710693
    8. ')' → logprob: -7.642022609710693
    9. '<|end|>' → logprob: -8.017023086547852
    10. '#' → logprob: -8.267023086547852

Token 2292: ',' (ID: 11)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.113690733909607
    2. '```' → logprob: -1.363690733909607
    3. 'def' → logprob: -1.988690733909607
    4. '
' → logprob: -2.2386908531188965
    5. ':' → logprob: -2.8636908531188965
    6. '       ' → logprob: -3.6136908531188965
    7. ':
' → logprob: -3.6136908531188965
    8. 'class' → logprob: -3.9886908531188965
    9. '#' → logprob: -4.6136908531188965
    10. 'from' → logprob: -5.1136908531188965

Token 2293: ' re' (ID: 322)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '```' → logprob: -0.3897439241409302
    2. ' ' → logprob: -2.7647438049316406
    3. '6' → logprob: -3.0147438049316406
    4. '0' → logprob: -3.2647438049316406
    5. '<|end|>' → logprob: -3.6397438049316406
    6. '
' → logprob: -3.7647438049316406
    7. '#' → logprob: -3.8897438049316406
    8. ':' → logprob: -4.639743804931641
    9. '   ' → logprob: -5.014743804931641
    10. '3' → logprob: -5.014743804931641

Token 2294: '-check' (ID: 30411)
  Prédit: 'turn'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'turn' → logprob: -0.21493738889694214
    2. 'f' → logprob: -2.839937448501587
    3. '
' → logprob: -3.464937448501587
    4. ')' → logprob: -4.089937210083008
    5. '```' → logprob: -4.089937210083008
    6. 'turned' → logprob: -4.339937210083008
    7. 's' → logprob: -4.339937210083008
    8. '#' → logprob: -4.964937210083008
    9. ':' → logprob: -5.089937210083008
    10. ' ' → logprob: -5.339937210083008

Token 2295: ' problem' (ID: 4792)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '```' → logprob: -0.4447147846221924
    2. ':' → logprob: -2.3197147846221924
    3. '
' → logprob: -2.8197147846221924
    4. ')' → logprob: -2.9447147846221924
    5. '<|end|>' → logprob: -3.3197147846221924
    6. '\n' → logprob: -3.5697147846221924
    7. ',' → logprob: -4.069714546203613
    8. '   ' → logprob: -4.694714546203613
    9. '[' → logprob: -4.819714546203613
    10. '#' → logprob: -5.069714546203613

Token 2296: ' statement' (ID: 9710)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '```' → logprob: -0.6677982211112976
    2. ':' → logprob: -1.6677982807159424
    3. '   ' → logprob: -2.5427982807159424
    4. '
' → logprob: -2.5427982807159424
    5. ':
' → logprob: -3.2927982807159424
    6. 'def' → logprob: -3.6677982807159424
    7. '[' → logprob: -3.9177982807159424
    8. ')' → logprob: -4.667798042297363
    9. '[
' → logprob: -4.917798042297363
    10. '       ' → logprob: -5.042798042297363

Token 2297: ':

' (ID: 1402)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '```' → logprob: -0.8782068490982056
    2. ':' → logprob: -1.7532068490982056
    3. '   ' → logprob: -1.8782068490982056
    4. '
' → logprob: -2.003206729888916
    5. ':
' → logprob: -3.753206729888916
    6. '[' → logprob: -4.253206729888916
    7. ',' → logprob: -4.253206729888916
    8. '       ' → logprob: -4.378206729888916
    9. 'def' → logprob: -4.628206729888916
    10. '<|end|>' → logprob: -4.753206729888916

Token 2298: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.35486504435539246
    2. '       ' → logprob: -1.7298650741577148
    3. ':' → logprob: -2.854865074157715
    4. '```' → logprob: -3.479865074157715
    5. '
' → logprob: -4.854865074157715
    6. '<|end|>' → logprob: -5.354865074157715
    7. ':
' → logprob: -5.854865074157715
    8. '           ' → logprob: -5.979865074157715
    9. '...' → logprob: -6.354865074157715
    10. '<|end|>' → logprob: -6.604865074157715

Token 2299: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3388155698776245
    2. '       ' → logprob: -2.213815689086914
    3. 'def' → logprob: -2.338815689086914
    4. '```' → logprob: -3.088815689086914
    5. ':' → logprob: -4.463815689086914
    6. ':
' → logprob: -4.838815689086914
    7. '
' → logprob: -5.588815689086914
    8. 'class' → logprob: -6.213815689086914
    9. '           ' → logprob: -6.213815689086914
    10. '#' (adapté à ' #') → logprob: -6.713815689086914

Token 2300: ' Output' (ID: 18315)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.0135838985443115
    2. 'def' → logprob: -1.6385838985443115
    3. '       ' → logprob: -1.7635838985443115
    4. ':' → logprob: -2.1385838985443115
    5. '```' → logprob: -2.7635838985443115
    6. ':
' → logprob: -3.6385838985443115
    7. '#' → logprob: -4.138584136962891
    8. '           ' → logprob: -5.138584136962891
    9. ' def' → logprob: -5.263584136962891
    10. '
' → logprob: -5.263584136962891

Token 2301: ' must' (ID: 2804)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '```' → logprob: -0.7276262044906616
    2. ':' → logprob: -1.6026262044906616
    3. '
' → logprob: -2.727626323699951
    4. '   ' → logprob: -2.852626323699951
    5. '[' → logprob: -2.977626323699951
    6. 'def' → logprob: -3.477626323699951
    7. '[
' → logprob: -4.352626323699951
    8. ',' → logprob: -4.602626323699951
    9. ':
' → logprob: -4.727626323699951
    10. ')' → logprob: -4.727626323699951

Token 2302: ' be' (ID: 413)
  Prédit: ' be'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' be' → logprob: -1.0149260759353638
    2. '```' → logprob: -1.0149260759353638
    3. '=' → logprob: -2.014925956726074
    4. 'be' → logprob: -2.764925956726074
    5. ' =' → logprob: -3.764925956726074
    6. ':' → logprob: -3.889925956726074
    7. 'def' → logprob: -5.014925956726074
    8. '``' → logprob: -5.389925956726074
    9. '.' → logprob: -5.639925956726074
    10. ' ' → logprob: -6.639925956726074

Token 2303: ' sorted' (ID: 20099)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '```' → logprob: -0.40540316700935364
    2. '[
' → logprob: -1.9054031372070312
    3. '[' → logprob: -2.6554031372070312
    4. 'def' → logprob: -4.030403137207031
    5. ':' → logprob: -4.655403137207031
    6. '`' → logprob: -4.780403137207031
    7. ' ' → logprob: -4.780403137207031
    8. '0' → logprob: -4.905403137207031
    9. ' [' → logprob: -5.280403137207031
    10. '``' → logprob: -5.280403137207031

Token 2304: ' by' (ID: 656)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '```' → logprob: -0.9079510569572449
    2. '\n' → logprob: -1.7829511165618896
    3. '
' → logprob: -2.1579511165618896
    4. '[
' → logprob: -2.7829511165618896
    5. ',' → logprob: -2.9079511165618896
    6. '   ' → logprob: -3.0329511165618896
    7. '[' → logprob: -3.5329511165618896
    8. ',
' → logprob: -3.6579511165618896
    9. '``' → logprob: -3.6579511165618896
    10. '       ' → logprob: -4.7829508781433105

Token 2305: ' weight' (ID: 6049)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '```' → logprob: -0.9123305082321167
    2. 'a' → logprob: -1.9123305082321167
    3. '0' → logprob: -2.5373306274414062
    4. 'def' → logprob: -2.7873306274414062
    5. ' a' → logprob: -3.2873306274414062
    6. '`' → logprob: -3.4123306274414062
    7. 'weight' → logprob: -3.6623306274414062
    8. '_' → logprob: -3.9123306274414062
    9. ')' → logprob: -3.9123306274414062
    10. '   ' → logprob: -4.037330627441406

Token 2306: ' ascending' (ID: 75564)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.6830607652664185
    2. '```' → logprob: -1.3080607652664185
    3. '\n' → logprob: -2.683060646057129
    4. '   ' → logprob: -2.933060646057129
    5. ',' → logprob: -3.433060646057129
    6. ',
' → logprob: -4.558060646057129
    7. '[
' → logprob: -4.683060646057129
    8. '[' → logprob: -5.058060646057129
    9. '``' → logprob: -5.558060646057129
    10. ')' → logprob: -5.683060646057129

Token 2307: '.

' (ID: 364)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.9735678434371948
    2. '```' → logprob: -1.5985678434371948
    3. '   ' → logprob: -1.7235678434371948
    4. ',' → logprob: -2.8485679626464844
    5. '\n' → logprob: -2.9735679626464844
    6. ',
' → logprob: -3.4735679626464844
    7. '[
' → logprob: -4.098567962646484
    8. ':
' → logprob: -4.723567962646484
    9. '3' → logprob: -4.723567962646484
    10. '[' → logprob: -4.723567962646484

Token 2308: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3291343152523041
    2. '```' → logprob: -2.329134225845337
    3. 'def' → logprob: -2.454134225845337
    4. ':' → logprob: -3.329134225845337
    5. '[' → logprob: -4.204134464263916
    6. '       ' → logprob: -4.579134464263916
    7. ':
' → logprob: -4.829134464263916
    8. '[
' → logprob: -4.829134464263916
    9. ' def' → logprob: -5.329134464263916
    10. '
' → logprob: -5.454134464263916

Token 2309: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.38198140263557434
    2. '   ' → logprob: -1.756981372833252
    3. '```' → logprob: -2.256981372833252
    4. ':' → logprob: -3.506981372833252
    5. ':
' → logprob: -6.006981372833252
    6. 'def' → logprob: -6.381981372833252
    7. '
' → logprob: -6.756981372833252
    8. '           ' → logprob: -6.756981372833252
    9. '``' → logprob: -7.381981372833252
    10. '[' → logprob: -7.631981372833252

Token 2310: ' Perhaps' (ID: 30391)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '```' → logprob: -0.7127387523651123
    2. '   ' → logprob: -1.3377387523651123
    3. '       ' → logprob: -2.8377387523651123
    4. 'def' → logprob: -3.3377387523651123
    5. '\n' → logprob: -3.8377387523651123
    6. '
' → logprob: -3.9627387523651123
    7. '[
' → logprob: -4.212738990783691
    8. ',' → logprob: -4.212738990783691
    9. '[' → logprob: -4.462738990783691
    10. '0' → logprob: -4.587738990783691

Token 2311: ' the' (ID: 290)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '```' → logprob: -0.6973548531532288
    2. '
' → logprob: -1.572354793548584
    3. '   ' → logprob: -1.947354793548584
    4. '\n' → logprob: -3.322354793548584
    5. ':' → logprob: -3.447354793548584
    6. '[
' → logprob: -3.947354793548584
    7. 'def' → logprob: -4.197354793548584
    8. '       ' → logprob: -4.447354793548584
    9. '[' → logprob: -5.072354793548584
    10. ',' → logprob: -5.447354793548584

Token 2312: ' minimal' (ID: 19957)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '```' → logprob: -0.7767233848571777
    2. '   ' → logprob: -2.1517233848571777
    3. '
' → logprob: -2.5267233848571777
    4. '[' → logprob: -2.9017233848571777
    5. 'def' → logprob: -3.0267233848571777
    6. ':' → logprob: -3.1517233848571777
    7. ' ' → logprob: -3.2767233848571777
    8. '[
' → logprob: -3.7767233848571777
    9. '       ' → logprob: -4.151723384857178
    10. '_' → logprob: -4.276723384857178

Token 2313: ' number' (ID: 2086)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '```' → logprob: -0.3408852815628052
    2. '   ' → logprob: -2.7158851623535156
    3. '
' → logprob: -3.4658851623535156
    4. ' ' → logprob: -3.5908851623535156
    5. 'def' → logprob: -3.7158851623535156
    6. '``' → logprob: -4.215885162353516
    7. ' =' → logprob: -4.465885162353516
    8. '`' → logprob: -4.590885162353516
    9. '_' → logprob: -4.715885162353516
    10. '=' → logprob: -4.840885162353516

Token 2314: ' of' (ID: 328)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '```' → logprob: -0.39233776926994324
    2. '[' → logprob: -2.8923377990722656
    3. '   ' → logprob: -3.1423377990722656
    4. 'Unit' → logprob: -3.6423377990722656
    5. '`' → logprob: -3.7673377990722656
    6. '[
' → logprob: -3.8923377990722656
    7. 's' → logprob: -4.267337799072266
    8. ':' → logprob: -4.392337799072266
    9. '``' → logprob: -4.392337799072266
    10. '
' → logprob: -4.392337799072266

Token 2315: ' chunks' (ID: 53440)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '```' → logprob: -0.4551847577095032
    2. '_' → logprob: -2.3301846981048584
    3. '_chunks' → logprob: -2.5801846981048584
    4. 's' → logprob: -3.4551846981048584
    5. '[' → logprob: -3.7051846981048584
    6. ' ' → logprob: -4.0801849365234375
    7. '   ' → logprob: -4.3301849365234375
    8. 'chunks' → logprob: -4.4551849365234375
    9. '`' → logprob: -4.5801849365234375
    10. '_chunk' → logprob: -4.8301849365234375

Token 2316: ' are' (ID: 553)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.2172154188156128
    2. ':' → logprob: -1.4672154188156128
    3. '```' → logprob: -1.4672154188156128
    4. '       ' → logprob: -2.0922155380249023
    5. ':
' → logprob: -2.8422155380249023
    6. '[' → logprob: -3.9672155380249023
    7. 'def' → logprob: -4.467215538024902
    8. '
' → logprob: -5.092215538024902
    9. '[
' → logprob: -5.592215538024902
    10. ',' → logprob: -5.592215538024902

Token 2317: ' those' (ID: 2617)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '```' → logprob: -0.879813015460968
    2. '[' → logprob: -2.1298129558563232
    3. ' ' → logprob: -2.2548129558563232
    4. ',' → logprob: -2.8798129558563232
    5. '[
' → logprob: -2.8798129558563232
    6. ' (' → logprob: -3.1298129558563232
    7. '3' → logprob: -4.129813194274902
    8. '0' → logprob: -4.254813194274902
    9. '
' → logprob: -4.379813194274902
    10. '(' → logprob: -4.379813194274902

Token 2318: ' that' (ID: 484)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '```' → logprob: -1.1641415357589722
    2. '
' → logprob: -1.9141415357589722
    3. '   ' → logprob: -1.9141415357589722
    4. ',' → logprob: -2.5391416549682617
    5. '\n' → logprob: -2.6641416549682617
    6. '[' → logprob: -2.9141416549682617
    7. '[
' → logprob: -3.1641416549682617
    8. ':' → logprob: -3.4141416549682617
    9. ',
' → logprob: -4.164141654968262
    10. '       ' → logprob: -4.164141654968262

Token 2319: ' when' (ID: 1261)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.7080742120742798
    2. '```' → logprob: -2.3330740928649902
    3. ' =' → logprob: -2.5830740928649902
    4. ' ' → logprob: -2.7080740928649902
    5. '+' → logprob: -3.2080740928649902
    6. ',' → logprob: -3.5830740928649902
    7. ':' → logprob: -4.08307409286499
    8. '[' → logprob: -4.33307409286499
    9. '
' → logprob: -4.45807409286499
    10. '   ' → logprob: -4.45807409286499

Token 2320: ' merged' (ID: 49536)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '```' → logprob: -0.7987186312675476
    2. ' ' → logprob: -1.1737186908721924
    3. '_' → logprob: -2.7987186908721924
    4. ',' → logprob: -3.4237186908721924
    5. '3' → logprob: -3.9237186908721924
    6. '`' → logprob: -4.048718452453613
    7. '=' → logprob: -4.548718452453613
    8. '+' → logprob: -4.548718452453613
    9. '
' → logprob: -4.923718452453613
    10. ' =' → logprob: -5.173718452453613

Token 2321: ' by' (ID: 656)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.9023082852363586
    2. '```' → logprob: -1.2773082256317139
    3. '   ' → logprob: -2.152308225631714
    4. ',' → logprob: -3.027308225631714
    5. '3' → logprob: -3.402308225631714
    6. ' ' → logprob: -4.027308464050293
    7. '\n' → logprob: -4.527308464050293
    8. ':' → logprob: -4.777308464050293
    9. ',
' → logprob: -4.902308464050293
    10. ')' → logprob: -5.152308464050293

Token 2322: ' common' (ID: 5355)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '```' → logprob: -0.6097447872161865
    2. 'weight' → logprob: -2.3597447872161865
    3. ' weight' → logprob: -3.2347447872161865
    4. 'a' → logprob: -3.3597447872161865
    5. ' ' → logprob: -3.4847447872161865
    6. ' a' → logprob: -3.4847447872161865
    7. 'b' → logprob: -3.6097447872161865
    8. '0' → logprob: -3.7347447872161865
    9. '_weight' → logprob: -4.109745025634766
    10. 'def' → logprob: -4.234745025634766

Token 2323: ' divis' (ID: 37826)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.8952754139900208
    2. '```' → logprob: -1.145275354385376
    3. '_chunks' → logprob: -3.020275354385376
    4. ' ' → logprob: -3.270275354385376
    5. '_i' → logprob: -3.395275354385376
    6. '
' → logprob: -4.270275592803955
    7. '   ' → logprob: -4.395275592803955
    8. '`' → logprob: -4.520275592803955
    9. '_
' → logprob: -4.645275592803955
    10. '  ' → logprob: -4.770275592803955

Token 2324: 'ors' (ID: 914)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '```' → logprob: -0.7181869745254517
    2. '_' → logprob: -1.9681869745254517
    3. '_
' → logprob: -2.593186855316162
    4. '
' → logprob: -2.968186855316162
    5. '\n' → logprob: -3.468186855316162
    6. '0' → logprob: -3.843186855316162
    7. '#' → logprob: -4.093186855316162
    8. '``' → logprob: -4.093186855316162
    9. '[
' → logprob: -4.093186855316162
    10. '`' → logprob: -4.343186855316162

Token 2325: '.

' (ID: 364)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '```' → logprob: -1.0623477697372437
    2. '   ' → logprob: -1.1873477697372437
    3. '       ' → logprob: -1.3123477697372437
    4. ':' → logprob: -3.437347888946533
    5. ':
' → logprob: -4.187347888946533
    6. '
' → logprob: -4.437347888946533
    7. 'def' → logprob: -5.312347888946533
    8. '           ' → logprob: -5.937347888946533
    9. '``' → logprob: -5.937347888946533
    10. '[' → logprob: -6.437347888946533

Token 2326: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.0868792533874512
    2. '```' → logprob: -1.0868792533874512
    3. 'def' → logprob: -1.9618792533874512
    4. ':' → logprob: -2.586879253387451
    5. '
' → logprob: -3.336879253387451
    6. '[
' → logprob: -3.961879253387451
    7. ':
' → logprob: -4.086879253387451
    8. '[' → logprob: -4.586879253387451
    9. '       ' → logprob: -4.711879253387451
    10. '\n' → logprob: -5.461879253387451

Token 2327: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.09077883511781693
    2. '   ' → logprob: -3.0907788276672363
    3. '```' → logprob: -3.3407788276672363
    4. 'def' → logprob: -6.340778827667236
    5. '           ' → logprob: -6.590778827667236
    6. ':' → logprob: -6.715778827667236
    7. '
' → logprob: -7.590778827667236
    8. '``' → logprob: -8.465779304504395
    9. ':
' → logprob: -8.965779304504395
    10. '               ' → logprob: -9.465779304504395

Token 2328: ' Another' (ID: 20064)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.12273214012384415
    2. '```' → logprob: -2.497732162475586
    3. '   ' → logprob: -4.122732162475586
    4. 'def' → logprob: -4.622732162475586
    5. '           ' → logprob: -5.497732162475586
    6. ':' → logprob: -6.997732162475586
    7. '``' → logprob: -8.122732162475586
    8. ':
' → logprob: -8.247732162475586
    9. '               ' → logprob: -8.372732162475586
    10. '
' → logprob: -8.372732162475586

Token 2329: ' idea' (ID: 6056)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '```' → logprob: -0.45581552386283875
    2. '
' → logprob: -1.4558155536651611
    3. ',' → logprob: -3.580815553665161
    4. '_' → logprob: -3.705815553665161
    5. ')' → logprob: -4.205815315246582
    6. ':' → logprob: -4.455815315246582
    7. 'def' → logprob: -4.955815315246582
    8. '=' → logprob: -5.080815315246582
    9. ' ' → logprob: -5.330815315246582
    10. '   ' → logprob: -5.330815315246582

Token 2330: ':' (ID: 25)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4653478264808655
    2. '       ' → logprob: -1.3403477668762207
    3. '```' → logprob: -2.9653477668762207
    4. ':' → logprob: -3.4653477668762207
    5. 'def' → logprob: -4.715347766876221
    6. '
' → logprob: -5.465347766876221
    7. ':
' → logprob: -5.840347766876221
    8. ',' → logprob: -6.215347766876221
    9. '           ' → logprob: -6.840347766876221
    10. '``' → logprob: -7.090347766876221

Token 2331: ' sum' (ID: 4215)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '```' → logprob: -1.17977774143219
    2. '       ' → logprob: -1.42977774143219
    3. '   ' → logprob: -1.67977774143219
    4. ' ' → logprob: -2.5547776222229004
    5. '0' → logprob: -3.0547776222229004
    6. ' (' → logprob: -4.4297776222229
    7. '[' → logprob: -4.4297776222229
    8. 'def' → logprob: -4.5547776222229
    9. '``' → logprob: -4.6797776222229
    10. ',' → logprob: -4.6797776222229

Token 2332: ' all' (ID: 722)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -1.3194091320037842
    2. '_' → logprob: -1.6944091320037842
    3. '_i' → logprob: -2.194409132003784
    4. '```' → logprob: -2.194409132003784
    5. '=' → logprob: -2.444409132003784
    6. '   ' → logprob: -2.819409132003784
    7. ' ' → logprob: -3.069409132003784
    8. ',' → logprob: -3.444409132003784
    9. '
' → logprob: -4.069409370422363
    10. '(' → logprob: -5.069409370422363

Token 2333: ' total' (ID: 3609)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.9679600596427917
    2. ' =' → logprob: -1.7179601192474365
    3. '=' → logprob: -2.4679601192474365
    4. '_i' → logprob: -2.4679601192474365
    5. ' ' → logprob: -2.8429601192474365
    6. 'a' → logprob: -3.2179601192474365
    7. '```' → logprob: -3.4679601192474365
    8. '(' → logprob: -3.5929601192474365
    9. ' _' → logprob: -3.8429601192474365
    10. '   ' → logprob: -4.217959880828857

Token 2334: ' weights' (ID: 28460)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.5653002262115479
    2. '_weight' → logprob: -0.9403002262115479
    3. ' _' → logprob: -3.690300226211548
    4. 'Weight' → logprob: -5.440299987792969
    5. '_weights' → logprob: -5.690299987792969
    6. '```' → logprob: -6.440299987792969
    7. '_
' → logprob: -6.940299987792969
    8. 'weight' → logprob: -7.315299987792969
    9. '`' → logprob: -7.565299987792969
    10. 's' → logprob: -7.690299987792969

Token 2335: ' =' (ID: 314)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3068952262401581
    2. '   ' → logprob: -1.9318952560424805
    3. '```' → logprob: -3.0568952560424805
    4. ',' → logprob: -3.6818952560424805
    5. ':' → logprob: -4.4318952560424805
    6. '
' → logprob: -4.9318952560424805
    7. ':
' → logprob: -5.5568952560424805
    8. ',
' → logprob: -5.5568952560424805
    9. '           ' → logprob: -6.0568952560424805
    10. '=' → logprob: -6.1818952560424805

Token 2336: ' sum' (ID: 4215)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.197868824005127
    2. '```' → logprob: -1.572868824005127
    3. ' =' → logprob: -2.322868824005127
    4. '=' → logprob: -2.947868824005127
    5. '2' → logprob: -3.572868824005127
    6. '1' → logprob: -3.697868824005127
    7. '   ' → logprob: -3.947868824005127
    8. '[
' → logprob: -3.947868824005127
    9. '[' → logprob: -3.947868824005127
    10. ',' → logprob: -4.072868824005127

Token 2337: '_i' (ID: 10853)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -1.2921340465545654
    2. '```' → logprob: -1.6671340465545654
    3. ' =' → logprob: -2.4171340465545654
    4. '(' → logprob: -2.4171340465545654
    5. '=' → logprob: -2.5421340465545654
    6. '(a' → logprob: -2.6671340465545654
    7. '(
' → logprob: -3.5421340465545654
    8. '
' → logprob: -3.7921340465545654
    9. 'a' → logprob: -3.9171340465545654
    10. ' ' → logprob: -4.0421342849731445

Token 2338: ' a' (ID: 261)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -1.039282202720642
    2. '```' → logprob: -1.289282202720642
    3. ',' → logprob: -2.9142823219299316
    4. '+' → logprob: -3.0392823219299316
    5. '=' → logprob: -3.0392823219299316
    6. ':' → logprob: -3.5392823219299316
    7. '*' → logprob: -3.9142823219299316
    8. '_i' → logprob: -4.164282321929932
    9. ' =' → logprob: -4.289282321929932
    10. '`' → logprob: -4.289282321929932

Token 2339: '_i' (ID: 10853)
  Prédit: '_i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_i' → logprob: -0.013807565905153751
    2. '_' → logprob: -4.388807773590088
    3. '```' → logprob: -8.26380729675293
    4. '_j' → logprob: -9.01380729675293
    5. '_
' → logprob: -9.01380729675293
    6. 'i' → logprob: -9.38880729675293
    7. '+' → logprob: -9.63880729675293
    8. '#' → logprob: -9.88880729675293
    9. ' _' → logprob: -10.01380729675293
    10. ')' → logprob: -10.13880729675293

Token 2340: ' *' (ID: 425)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -1.3544474840164185
    2. '```' → logprob: -1.8544474840164185
    3. ',' → logprob: -1.9794474840164185
    4. '+' → logprob: -2.354447364807129
    5. '_i' → logprob: -2.604447364807129
    6. ')' → logprob: -2.729447364807129
    7. '=' → logprob: -2.979447364807129
    8. ':' → logprob: -3.729447364807129
    9. '   ' → logprob: -3.729447364807129
    10. ' =' → logprob: -4.354447364807129

Token 2341: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.000516813131980598
    2. '_i' → logprob: -8.875516891479492
    3. 'i' → logprob: -9.125516891479492
    4. '```' → logprob: -9.375516891479492
    5. ' b' → logprob: -9.875516891479492
    6. '`' → logprob: -10.250516891479492
    7. '2' → logprob: -10.375516891479492
    8. '1' → logprob: -11.000516891479492
    9. '*' → logprob: -12.125516891479492
    10. '0' → logprob: -12.375516891479492

Token 2342: '_i' (ID: 10853)
  Prédit: '_i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_i' → logprob: -0.12863707542419434
    2. '_' → logprob: -2.3786370754241943
    3. '```' → logprob: -4.128637313842773
    4. '+' → logprob: -6.253637313842773
    5. '_
' → logprob: -6.753637313842773
    6. ',' → logprob: -6.753637313842773
    7. ')' → logprob: -6.878637313842773
    8. ':' → logprob: -7.003637313842773
    9. ' _' → logprob: -7.128637313842773
    10. ' =' → logprob: -7.253637313842773

Token 2343: '

' (ID: 279)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '```' → logprob: -1.5249844789505005
    2. '   ' → logprob: -1.8999844789505005
    3. '       ' → logprob: -1.8999844789505005
    4. ',' → logprob: -2.399984359741211
    5. '
' → logprob: -2.399984359741211
    6. '=' → logprob: -2.774984359741211
    7. ' =' → logprob: -2.774984359741211
    8. ':' → logprob: -3.274984359741211
    9. '+' → logprob: -4.149984359741211
    10. '[' → logprob: -4.274984359741211

Token 2344: '       ' (ID: 309)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '```' → logprob: -1.2304764986038208
    2. ':' → logprob: -1.3554764986038208
    3. '   ' → logprob: -1.7304764986038208
    4. ',' → logprob: -3.1054763793945312
    5. '=' → logprob: -3.1054763793945312
    6. '
' → logprob: -3.3554763793945312
    7. '       ' → logprob: -3.6054763793945312
    8. ' =' → logprob: -3.6054763793945312
    9. '#' → logprob: -4.480476379394531
    10. '+' → logprob: -4.605476379394531

Token 2345: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.207999587059021
    2. ':' → logprob: -1.332999587059021
    3. '=' → logprob: -2.2079997062683105
    4. '```' → logprob: -2.5829997062683105
    5. '   ' → logprob: -2.8329997062683105
    6. '
' → logprob: -3.4579997062683105
    7. ':
' → logprob: -3.4579997062683105
    8. ' =' → logprob: -3.8329997062683105
    9. '#' (adapté à ' #') → logprob: -4.0829997062683105
    10. ',' → logprob: -4.2079997062683105

Token 2346: ' Output' (ID: 18315)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.9059725403785706
    2. '```' → logprob: -1.6559724807739258
    3. 'def' → logprob: -2.030972480773926
    4. ':' → logprob: -2.780972480773926
    5. ':
' → logprob: -2.905972480773926
    6. '=' → logprob: -3.905972480773926
    7. '
' → logprob: -3.905972480773926
    8. '#' → logprob: -3.905972480773926
    9. '   ' → logprob: -4.155972480773926
    10. ' =' → logprob: -4.405972480773926

Token 2347: ' chunks' (ID: 53440)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.8461365103721619
    2. ' =' → logprob: -1.0961365699768066
    3. '[' → logprob: -2.9711365699768066
    4. ' ' → logprob: -3.3461365699768066
    5. ':' → logprob: -3.4711365699768066
    6. '```' → logprob: -3.4711365699768066
    7. '_' → logprob: -4.221136569976807
    8. '[]' → logprob: -4.596136569976807
    9. 's' → logprob: -4.721136569976807
    10. ',' → logprob: -5.096136569976807

Token 2348: ' weight' (ID: 6049)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.7557736039161682
    2. '[' → logprob: -2.0057735443115234
    3. '```' → logprob: -2.0057735443115234
    4. '   ' → logprob: -2.5057735443115234
    5. '       ' → logprob: -2.8807735443115234
    6. '[
' → logprob: -3.1307735443115234
    7. ':
' → logprob: -4.005773544311523
    8. '=' → logprob: -4.505773544311523
    9. ',' → logprob: -4.880773544311523
    10. ' =' → logprob: -5.130773544311523

Token 2349: ' and' (ID: 326)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '```' → logprob: -0.8098668456077576
    2. '=' → logprob: -1.9348669052124023
    3. ' =' → logprob: -2.0598669052124023
    4. ',' → logprob: -2.1848669052124023
    5. 's' → logprob: -3.0598669052124023
    6. ':' → logprob: -3.8098669052124023
    7. '   ' → logprob: -4.434866905212402
    8. 'Unit' → logprob: -4.559866905212402
    9. '`' → logprob: -4.559866905212402
    10. '[' → logprob: -4.559866905212402

Token 2350: ' quantity' (ID: 17245)
  Prédit: 'quantity'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'quantity' → logprob: -0.45726636052131653
    2. ' quantity' → logprob: -1.2072663307189941
    3. 'b' → logprob: -3.082266330718994
    4. ' ' → logprob: -5.207266330718994
    5. '```' → logprob: -5.207266330718994
    6. ' b' → logprob: -5.582266330718994
    7. '`' → logprob: -6.582266330718994
    8. ',' → logprob: -7.207266330718994
    9. '_quantity' → logprob: -7.207266330718994
    10. 'count' → logprob: -7.207266330718994

Token 2351: ' b' (ID: 287)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.1800620555877686
    2. '       ' → logprob: -1.3050620555877686
    3. ',' → logprob: -2.1800620555877686
    4. '```' → logprob: -2.1800620555877686
    5. ':' → logprob: -3.0550620555877686
    6. '=' → logprob: -3.8050620555877686
    7. ' =' → logprob: -3.9300620555877686
    8. ':
' → logprob: -4.180062294006348
    9. '
' → logprob: -4.305062294006348
    10. ',
' → logprob: -4.555062294006348

Token 2352: '_j' (ID: 12021)
  Prédit: '_i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_i' → logprob: -0.787950336933136
    2. '```' → logprob: -1.4129502773284912
    3. '_' → logprob: -1.9129502773284912
    4. '=' → logprob: -3.162950277328491
    5. ',' → logprob: -3.412950277328491
    6. ' =' → logprob: -4.16295051574707
    7. '_
' → logprob: -4.41295051574707
    8. ':' → logprob: -4.78795051574707
    9. '`' → logprob: -5.03795051574707
    10. 's' → logprob: -5.03795051574707

Token 2353: ' (' (ID: 350)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -1.5896592140197754
    2. '       ' → logprob: -1.7146592140197754
    3. '   ' → logprob: -1.7146592140197754
    4. '```' → logprob: -1.9646592140197754
    5. ' =' → logprob: -2.7146592140197754
    6. '=' → logprob: -2.9646592140197754
    7. ':' → logprob: -3.2146592140197754
    8. '
' → logprob: -3.7146592140197754
    9. ')' → logprob: -3.7146592140197754
    10. '[' → logprob: -4.589659214019775

Token 2354: 'mar' (ID: 8185)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.3994767367839813
    2. ')' → logprob: -2.0244767665863037
    3. ' ' → logprob: -2.5244767665863037
    4. '=' → logprob: -3.0244767665863037
    5. '```' → logprob: -3.2744767665863037
    6. ',' → logprob: -4.024476528167725
    7. ' =' → logprob: -5.649476528167725
    8. ' ,' → logprob: -5.774476528167725
    9. '[' → logprob: -6.399476528167725
    10. ' )' → logprob: -6.899476528167725

Token 2355: 'ugu' (ID: 8060)
  Prédit: '_j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_j' → logprob: -0.43288007378578186
    2. '_i' → logprob: -1.5578800439834595
    3. '_' → logprob: -2.557880163192749
    4. ')' → logprob: -3.307880163192749
    5. ')_' → logprob: -5.05787992477417
    6. 'i' → logprob: -5.80787992477417
    7. ',' → logprob: -5.93287992477417
    8. '`' → logprob: -6.05787992477417
    9. ''_' → logprob: -6.05787992477417
    10. '```' → logprob: -6.30787992477417

Token 2356: ' units' (ID: 13306)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.6489467620849609
    2. '```' → logprob: -1.273946762084961
    3. ')' → logprob: -2.148946762084961
    4. '_i' → logprob: -4.398946762084961
    5. '=' → logprob: -4.648946762084961
    6. ')
' → logprob: -4.773946762084961
    7. ':' → logprob: -4.898946762084961
    8. '   ' → logprob: -5.398946762084961
    9. '_j' → logprob: -5.398946762084961
    10. ' ' → logprob: -5.523946762084961

Token 2357: ')' (ID: 8)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '```' → logprob: -1.1032700538635254
    2. ':' → logprob: -1.8532700538635254
    3. '=' → logprob: -1.8532700538635254
    4. '[' → logprob: -2.6032700538635254
    5. ',' → logprob: -2.7282700538635254
    6. '   ' → logprob: -3.2282700538635254
    7. ' =' → logprob: -3.6032700538635254
    8. ')' → logprob: -3.6032700538635254
    9. '       ' → logprob: -4.103270053863525
    10. '[
' → logprob: -4.228270053863525

Token 2358: ' that' (ID: 484)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03757602721452713
    2. '   ' → logprob: -4.037576198577881
    3. '```' → logprob: -5.162576198577881
    4. '           ' → logprob: -5.912576198577881
    5. ',' → logprob: -6.037576198577881
    6. '
' → logprob: -6.662576198577881
    7. ':' → logprob: -6.662576198577881
    8. ')' → logprob: -6.662576198577881
    9. '#' → logprob: -7.287576198577881
    10. '<|end|>' → logprob: -7.287576198577881

Token 2359: ' multiply' (ID: 57388)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.07045917212963104
    2. ' =' → logprob: -3.3204591274261475
    3. ',' → logprob: -4.320459365844727
    4. '```' → logprob: -4.570459365844727
    5. '+' → logprob: -6.195459365844727
    6. ' ' → logprob: -7.070459365844727
    7. ':' → logprob: -7.195459365844727
    8. '_' → logprob: -7.195459365844727
    9. '0' → logprob: -8.195459365844727
    10. ')' → logprob: -8.320459365844727

Token 2360: ' to' (ID: 316)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -1.180668592453003
    2. '```' → logprob: -1.430668592453003
    3. ',' → logprob: -1.680668592453003
    4. ')' → logprob: -2.305668592453003
    5. '_' → logprob: -3.555668592453003
    6. '(' → logprob: -4.180668830871582
    7. '`' → logprob: -4.180668830871582
    8. '[' → logprob: -4.305668830871582
    9. ':' → logprob: -4.555668830871582
    10. '   ' → logprob: -4.680668830871582

Token 2361: ' the' (ID: 290)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -1.299211025238037
    2. ''' → logprob: -1.674211025238037
    3. '2' → logprob: -2.049211025238037
    4. '`' → logprob: -2.674211025238037
    5. '0' → logprob: -2.924211025238037
    6. 'a' → logprob: -3.049211025238037
    7. '=' → logprob: -3.174211025238037
    8. '```' → logprob: -3.424211025238037
    9. ' ' → logprob: -3.549211025238037
    10. ' a' → logprob: -3.799211025238037

Token 2362: ' elements' (ID: 8632)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''' → logprob: -1.346967339515686
    2. '2' → logprob: -1.471967339515686
    3. '```' → logprob: -1.846967339515686
    4. '1' → logprob: -2.4719672203063965
    5. '`' → logprob: -2.4719672203063965
    6. '0' → logprob: -2.5969672203063965
    7. ' ' → logprob: -3.4719672203063965
    8. 'b' → logprob: -4.5969672203063965
    9. 'a' → logprob: -5.3469672203063965
    10. ' (' → logprob: -5.5969672203063965

Token 2363: ' of' (ID: 328)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6590908765792847
    2. '```' → logprob: -1.6590908765792847
    3. '       ' → logprob: -2.159090995788574
    4. ',' → logprob: -2.659090995788574
    5. ':' → logprob: -3.909090995788574
    6. ')' → logprob: -3.909090995788574
    7. '[' → logprob: -4.659090995788574
    8. '
' → logprob: -5.534090995788574
    9. '=' → logprob: -5.534090995788574
    10. ' ' → logprob: -5.659090995788574

Token 2364: ' binary' (ID: 15600)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '```' → logprob: -0.39418116211891174
    2. ' the' → logprob: -2.644181251525879
    3. 'the' → logprob: -2.769181251525879
    4. 'a' → logprob: -2.894181251525879
    5. ''' → logprob: -3.269181251525879
    6. 'b' → logprob: -3.519181251525879
    7. '`' → logprob: -4.894181251525879
    8. ' a' → logprob: -5.144181251525879
    9. ' ' → logprob: -5.269181251525879
    10. ')' → logprob: -5.394181251525879

Token 2365: ' representation' (ID: 22311)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '```' → logprob: -0.7694849967956543
    2. '_' → logprob: -1.6444849967956543
    3. '_
' → logprob: -2.6444849967956543
    4. '`' → logprob: -3.0194849967956543
    5. '_i' → logprob: -3.1444849967956543
    6. '``' → logprob: -3.8944849967956543
    7. ')' → logprob: -4.269484996795654
    8. '[' → logprob: -4.394484996795654
    9. '   ' → logprob: -4.394484996795654
    10. ',' → logprob: -4.644484996795654

Token 2366: ' of' (ID: 328)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -1.2166659832000732
    2. '       ' → logprob: -1.4666659832000732
    3. '```' → logprob: -1.5916659832000732
    4. '   ' → logprob: -2.0916659832000732
    5. '[' → logprob: -2.8416659832000732
    6. ',' → logprob: -4.091666221618652
    7. '[
' → logprob: -4.841666221618652
    8. '=' → logprob: -4.841666221618652
    9. '.' → logprob: -4.966666221618652
    10. ':
' → logprob: -4.966666221618652

Token 2367: ' total' (ID: 3609)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '```' → logprob: -0.6821607351303101
    2. '`' → logprob: -2.3071608543395996
    3. ' ' → logprob: -2.3071608543395996
    4. '[' → logprob: -2.5571608543395996
    5. '(' → logprob: -3.3071608543395996
    6. ''' → logprob: -3.4321608543395996
    7. '[
' → logprob: -3.5571608543395996
    8. '0' → logprob: -3.8071608543395996
    9. ' (' → logprob: -4.0571608543396
    10. ')' → logprob: -4.4321608543396

Token 2368: ' weight' (ID: 6049)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '```' → logprob: -1.3141530752182007
    2. ',' → logprob: -1.5641530752182007
    3. '   ' → logprob: -2.1891531944274902
    4. '_' → logprob: -2.1891531944274902
    5. ')' → logprob: -2.5641531944274902
    6. '[' → logprob: -3.3141531944274902
    7. '       ' → logprob: -3.4391531944274902
    8. ' ' → logprob: -3.5641531944274902
    9. '[
' → logprob: -4.31415319442749
    10. '_i' → logprob: -4.56415319442749

Token 2369: '.

' (ID: 364)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.9083815217018127
    2. '   ' → logprob: -1.408381462097168
    3. '```' → logprob: -1.783381462097168
    4. 'def' → logprob: -2.408381462097168
    5. '
' → logprob: -3.283381462097168
    6. ':' → logprob: -3.783381462097168
    7. ')' → logprob: -5.283381462097168
    8. ',' → logprob: -5.658381462097168
    9. ':
' → logprob: -5.658381462097168
    10. '           ' → logprob: -6.033381462097168

Token 2370: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.41738128662109375
    2. '   ' → logprob: -1.5423812866210938
    3. '```' → logprob: -2.9173812866210938
    4. ':' → logprob: -3.5423812866210938
    5. 'def' → logprob: -4.167381286621094
    6. ':
' → logprob: -4.292381286621094
    7. '           ' → logprob: -5.917381286621094
    8. '
' → logprob: -6.292381286621094
    9. ')' → logprob: -6.292381286621094
    10. ',' → logprob: -6.667381286621094

Token 2371: ' #' (ID: 1069)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.6558407545089722
    2. '       ' → logprob: -1.1558407545089722
    3. '```' → logprob: -2.6558408737182617
    4. '   ' → logprob: -2.9058408737182617
    5. ':' → logprob: -3.9058408737182617
    6. ':
' → logprob: -4.405840873718262
    7. '
' → logprob: -6.155840873718262
    8. 'from' → logprob: -7.030840873718262
    9. '           ' → logprob: -7.030840873718262
    10. ' def' → logprob: -7.280840873718262

Token 2372: ' Maybe' (ID: 17158)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.14918293058872223
    2. '```' → logprob: -2.6491830348968506
    3. '   ' → logprob: -3.7741830348968506
    4. ':' → logprob: -3.7741830348968506
    5. 'def' → logprob: -4.5241827964782715
    6. ':
' → logprob: -5.8991827964782715
    7. '           ' → logprob: -6.1491827964782715
    8. '[' → logprob: -7.2741827964782715
    9. '``' → logprob: -7.3991827964782715
    10. '`' → logprob: -7.3991827964782715

Token 2373: ' quantity' (ID: 17245)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6543461680412292
    2. '```' → logprob: -1.404346227645874
    3. ':' → logprob: -2.154346227645874
    4. '   ' → logprob: -2.904346227645874
    5. ':
' → logprob: -3.654346227645874
    6. 'def' → logprob: -3.779346227645874
    7. '
' → logprob: -5.904345989227295
    8. '           ' → logprob: -6.154345989227295
    9. '[' → logprob: -6.279345989227295
    10. '``' → logprob: -6.779345989227295

Token 2374: ' b' (ID: 287)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '```' → logprob: -1.3931663036346436
    2. ',' → logprob: -1.5181663036346436
    3. ':' → logprob: -2.0181663036346436
    4. '=' → logprob: -2.2681663036346436
    5. '[' → logprob: -2.7681663036346436
    6. '   ' → logprob: -3.0181663036346436
    7. '[
' → logprob: -3.1431663036346436
    8. ' =' → logprob: -3.6431663036346436
    9. ',
' → logprob: -4.143166542053223
    10. ')' → logprob: -4.393166542053223

Token 2375: '_j' (ID: 12021)
  Prédit: '_j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_j' → logprob: -0.49107974767684937
    2. '_' → logprob: -1.2410798072814941
    3. '```' → logprob: -3.366079807281494
    4. '_i' → logprob: -3.866079807281494
    5. ',' → logprob: -4.116079807281494
    6. '`' → logprob: -4.741079807281494
    7. '=' → logprob: -4.991079807281494
    8. ')' → logprob: -6.491079807281494
    9. '_
' → logprob: -6.491079807281494
    10. 'i' → logprob: -6.491079807281494

Token 2376: ' might' (ID: 3572)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '```' → logprob: -0.4425599277019501
    2. '=' → logprob: -2.5675599575042725
    3. ',' → logprob: -2.9425599575042725
    4. ':' → logprob: -3.3175599575042725
    5. '[' → logprob: -3.4425599575042725
    6. '   ' → logprob: -3.5675599575042725
    7. ')' → logprob: -3.6925599575042725
    8. ' =' → logprob: -4.067559719085693
    9. '0' → logprob: -4.192559719085693
    10. '`' → logprob: -4.317559719085693

Token 2377: ' be' (ID: 413)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.9936076998710632
    2. '=' → logprob: -1.493607759475708
    3. '```' → logprob: -1.868607759475708
    4. ',' → logprob: -2.368607759475708
    5. '_' → logprob: -2.743607759475708
    6. '`' → logprob: -3.618607759475708
    7. ' =' → logprob: -3.993607759475708
    8. ' ' → logprob: -5.243607521057129
    9. ''' → logprob: -5.368607521057129
    10. '``' → logprob: -5.618607521057129

Token 2378: ' non' (ID: 2893)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -1.4445264339447021
    2. '0' → logprob: -1.6945264339447021
    3. ' ' → logprob: -1.6945264339447021
    4. '```' → logprob: -1.9445264339447021
    5. '1' → logprob: -2.444526433944702
    6. ',' → logprob: -2.944526433944702
    7. '`' → logprob: -3.819526433944702
    8. '>' → logprob: -3.944526433944702
    9. '=' → logprob: -4.069526672363281
    10. '2' → logprob: -4.944526672363281

Token 2379: '-zero' (ID: 79097)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -1.4603006839752197
    2. '```' → logprob: -1.4603006839752197
    3. '0' → logprob: -1.7103006839752197
    4. '+' → logprob: -1.7103006839752197
    5. '=' → logprob: -3.0853006839752197
    6. ',
' → logprob: -3.8353006839752197
    7. '`' → logprob: -4.085300445556641
    8. '+
' → logprob: -4.460300445556641
    9. ')' → logprob: -4.585300445556641
    10. '``' → logprob: -4.960300445556641

Token 2380: '.

' (ID: 364)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.875582754611969
    2. '   ' → logprob: -1.1255826950073242
    3. '```' → logprob: -1.6255826950073242
    4. ',' → logprob: -4.250582695007324
    5. ':' → logprob: -4.500582695007324
    6. 'def' → logprob: -5.000582695007324
    7. '           ' → logprob: -5.125582695007324
    8. '
' → logprob: -5.250582695007324
    9. ')' → logprob: -6.125582695007324
    10. '[
' → logprob: -6.625582695007324

Token 2381: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2423907220363617
    2. '```' → logprob: -2.2423906326293945
    3. '   ' → logprob: -2.8673906326293945
    4. 'def' → logprob: -3.2423906326293945
    5. '           ' → logprob: -5.6173906326293945
    6. 'class' → logprob: -6.6173906326293945
    7. ' def' → logprob: -6.7423906326293945
    8. 'from' → logprob: -6.7423906326293945
    9. ':' → logprob: -6.8673906326293945
    10. '
' → logprob: -6.9923906326293945

Token 2382: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.31825292110443115
    2. 'def' → logprob: -1.6932529211044312
    3. '```' → logprob: -2.9432530403137207
    4. '   ' → logprob: -4.318253040313721
    5. 'from' → logprob: -4.443253040313721
    6. '
' → logprob: -6.193253040313721
    7. ':' → logprob: -6.318253040313721
    8. ':
' → logprob: -6.693253040313721
    9. '#' (adapté à ' #') → logprob: -6.818253040313721
    10. '           ' → logprob: -6.943253040313721

Token 2383: ' But' (ID: 3072)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4699283540248871
    2. 'def' → logprob: -1.3449283838272095
    3. '```' → logprob: -2.96992826461792
    4. '   ' → logprob: -3.84492826461792
    5. ':' → logprob: -4.34492826461792
    6. ':
' → logprob: -4.71992826461792
    7. '
' → logprob: -5.34492826461792
    8. 'from' → logprob: -5.59492826461792
    9. '           ' → logprob: -6.09492826461792
    10. '[' → logprob: -6.84492826461792

Token 2384: ' problem' (ID: 4792)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.993802547454834
    2. '   ' → logprob: -1.243802547454834
    3. 'def' → logprob: -2.118802547454834
    4. '```' → logprob: -2.493802547454834
    5. ':' → logprob: -2.618802547454834
    6. ':
' → logprob: -4.368802547454834
    7. '           ' → logprob: -4.618802547454834
    8. ' def' → logprob: -4.868802547454834
    9. '
' → logprob: -4.993802547454834
    10. 'from' → logprob: -5.493802547454834

Token 2385: ' output' (ID: 4733)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -1.129289150238037
    2. '   ' → logprob: -1.129289150238037
    3. 'def' → logprob: -1.504289150238037
    4. '```' → logprob: -2.879289150238037
    5. ':
' → logprob: -3.629289150238037
    6. ' def' → logprob: -4.754289150238037
    7. '
' → logprob: -5.129289150238037
    8. '[' → logprob: -5.254289150238037
    9. '[
' → logprob: -5.254289150238037
    10. ' =' → logprob: -5.504289150238037

Token 2386: ' has' (ID: 853)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.9962794184684753
    2. '   ' → logprob: -1.1212794780731201
    3. '```' → logprob: -1.8712794780731201
    4. '[' → logprob: -3.37127947807312
    5. '       ' → logprob: -3.74627947807312
    6. 'def' → logprob: -3.99627947807312
    7. '[
' → logprob: -4.246279239654541
    8. ':
' → logprob: -4.496279239654541
    9. ',' → logprob: -5.121279239654541
    10. ')' → logprob: -5.246279239654541

Token 2387: ' only' (ID: 1606)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '```' → logprob: -0.9007740616798401
    2. '0' → logprob: -1.5257740020751953
    3. ' ' → logprob: -1.7757740020751953
    4. '[' → logprob: -3.2757740020751953
    5. ' (' → logprob: -3.5257740020751953
    6. '`' → logprob: -3.6507740020751953
    7. '(' → logprob: -4.025774002075195
    8. '[
' → logprob: -4.150774002075195
    9. '   ' → logprob: -4.275774002075195
    10. ''' → logprob: -4.650774002075195

Token 2388: ' zeros' (ID: 42274)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.0143518447875977
    2. '```' → logprob: -1.2643518447875977
    3. '0' → logprob: -1.8893518447875977
    4. '[' → logprob: -3.1393518447875977
    5. '`' → logprob: -3.3893518447875977
    6. ' (' → logprob: -3.5143518447875977
    7. '1' → logprob: -4.139351844787598
    8. '(' → logprob: -4.264351844787598
    9. '[
' → logprob: -4.264351844787598
    10. '3' → logprob: -4.889351844787598

Token 2389: ' in' (ID: 306)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.825771152973175
    2. '```' → logprob: -1.0757710933685303
    3. '       ' → logprob: -2.8257710933685303
    4. ':' → logprob: -3.2007710933685303
    5. ',' → logprob: -3.7007710933685303
    6. ')' → logprob: -3.9507710933685303
    7. '[' → logprob: -4.575771331787109
    8. '
' → logprob: -4.700771331787109
    9. '\n' → logprob: -4.825771331787109
    10. '``' → logprob: -5.075771331787109

Token 2390: ' output' (ID: 4733)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '```' → logprob: -0.5230544805526733
    2. '0' → logprob: -1.5230544805526733
    3. ' ' → logprob: -3.148054599761963
    4. '`' → logprob: -3.898054599761963
    5. ')' → logprob: -4.023054599761963
    6. '[' → logprob: -4.273054599761963
    7. '``' → logprob: -4.273054599761963
    8. '1' → logprob: -4.523054599761963
    9. 'b' → logprob: -4.648054599761963
    10. '<|end|>' → logprob: -4.898054599761963

Token 2391: ' samples' (ID: 16902)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.28844884037971497
    2. '```' → logprob: -2.1634488105773926
    3. ':' → logprob: -3.0384488105773926
    4. '       ' → logprob: -3.2884488105773926
    5. '
' → logprob: -4.413448810577393
    6. 'def' → logprob: -4.538448810577393
    7. ':
' → logprob: -5.038448810577393
    8. ')' → logprob: -5.288448810577393
    9. '):' → logprob: -5.788448810577393
    10. ',' → logprob: -6.163448810577393

Token 2392: ',' (ID: 11)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3514188230037689
    2. '```' → logprob: -2.1014187335968018
    3. '       ' → logprob: -2.2264187335968018
    4. ':' → logprob: -4.101418972015381
    5. ')' → logprob: -4.226418972015381
    6. '
' → logprob: -4.851418972015381
    7. ',' → logprob: -5.226418972015381
    8. '[
' → logprob: -5.726418972015381
    9. '[' → logprob: -5.976418972015381
    10. ':
' → logprob: -6.351418972015381

Token 2393: ' might' (ID: 3572)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '```' → logprob: -0.8061923980712891
    2. '   ' → logprob: -1.181192398071289
    3. '       ' → logprob: -1.806192398071289
    4. ',' → logprob: -4.431192398071289
    5. '\n' → logprob: -4.556192398071289
    6. ':' → logprob: -4.556192398071289
    7. ')' → logprob: -4.931192398071289
    8. '
' → logprob: -5.306192398071289
    9. '`' → logprob: -5.431192398071289
    10. '\' → logprob: -5.556192398071289

Token 2394: ' mean' (ID: 4774)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '```' → logprob: -1.4006707668304443
    2. ' ' → logprob: -1.6506707668304443
    3. ' continue' → logprob: -2.1506707668304443
    4. ' be' → logprob: -2.2756707668304443
    5. '0' → logprob: -2.5256707668304443
    6. 'def' → logprob: -3.2756707668304443
    7. '   ' → logprob: -3.6506707668304443
    8. '
' → logprob: -3.7756707668304443
    9. '[
' → logprob: -3.7756707668304443
    10. ')' → logprob: -4.025671005249023

Token 2395: ' quantity' (ID: 17245)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '```' → logprob: -0.6530625224113464
    2. '       ' → logprob: -1.1530625820159912
    3. '   ' → logprob: -2.153062582015991
    4. 'def' → logprob: -3.653062582015991
    5. '           ' → logprob: -5.653062343597412
    6. '0' → logprob: -6.028062343597412
    7. '\n' → logprob: -6.153062343597412
    8. ' ' → logprob: -6.403062343597412
    9. '``' → logprob: -6.528062343597412
    10. '
' → logprob: -6.778062343597412

Token 2396: ' fixed' (ID: 13213)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '```' → logprob: -0.79033362865448
    2. ',' → logprob: -1.66533362865448
    3. '   ' → logprob: -2.6653337478637695
    4. '[' → logprob: -3.1653337478637695
    5. '=' → logprob: -3.2903337478637695
    6. '
' → logprob: -3.5403337478637695
    7. ')' → logprob: -3.5403337478637695
    8. ':' → logprob: -3.5403337478637695
    9. '[
' → logprob: -4.0403337478637695
    10. ',
' → logprob: -4.0403337478637695

Token 2397: ' ' (ID: 220)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.9403766989707947
    2. '       ' → logprob: -1.3153767585754395
    3. '```' → logprob: -1.8153767585754395
    4. '
' → logprob: -2.1903767585754395
    5. ':' → logprob: -4.0653767585754395
    6. 'def' → logprob: -4.8153767585754395
    7. ',' → logprob: -4.9403767585754395
    8. ':
' → logprob: -5.1903767585754395
    9. ')' → logprob: -5.5653767585754395
    10. '[' → logprob: -5.6903767585754395

Token 2398: '1' (ID: 16)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7743122577667236
    2. '       ' → logprob: -1.8993122577667236
    3. '```' → logprob: -2.2743122577667236
    4. ',' → logprob: -2.7743122577667236
    5. ')' → logprob: -3.0243122577667236
    6. ':' → logprob: -3.0243122577667236
    7. '
' → logprob: -3.3993122577667236
    8. ')
' → logprob: -3.8993122577667236
    9. '[' → logprob: -4.7743120193481445
    10. ':
' → logprob: -4.8993120193481445

Token 2399: '.

' (ID: 364)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5718247890472412
    2. 'def' → logprob: -1.3218247890472412
    3. '       ' → logprob: -2.071824789047241
    4. '```' → logprob: -4.19682502746582
    5. ':' → logprob: -5.32182502746582
    6. ':
' → logprob: -5.32182502746582
    7. '
' → logprob: -5.69682502746582
    8. ' def' → logprob: -5.69682502746582
    9. ',' → logprob: -6.19682502746582
    10. ')' → logprob: -6.32182502746582

Token 2400: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.178483247756958
    2. 'def' → logprob: -1.178483247756958
    3. '       ' → logprob: -1.303483247756958
    4. '```' → logprob: -2.303483247756958
    5. ' def' → logprob: -4.928483009338379
    6. ':' → logprob: -6.428483009338379
    7. '           ' → logprob: -7.428483009338379
    8. 'from' → logprob: -7.553483009338379
    9. '
' → logprob: -7.678483009338379
    10. '`' → logprob: -7.928483009338379

Token 2401: ' #' (ID: 1069)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.36735671758651733
    2. '       ' → logprob: -1.367356777191162
    3. '```' → logprob: -3.492356777191162
    4. '   ' → logprob: -4.242356777191162
    5. 'from' → logprob: -6.117356777191162
    6. ':' → logprob: -6.117356777191162
    7. ':
' → logprob: -6.867356777191162
    8. ' def' → logprob: -7.117356777191162
    9. '
' → logprob: -7.867356777191162
    10. ')' → logprob: -8.242356300354004

Token 2402: ' Possibly' (ID: 138743)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.18636830151081085
    2. 'def' → logprob: -2.936368227005005
    3. '   ' → logprob: -2.936368227005005
    4. '```' → logprob: -2.936368227005005
    5. '           ' → logprob: -6.186368465423584
    6. '
' → logprob: -6.186368465423584
    7. ')' → logprob: -7.186368465423584
    8. '#' → logprob: -7.186368465423584
    9. ':
' → logprob: -7.311368465423584
    10. ':' → logprob: -7.436368465423584

Token 2403: ',' (ID: 11)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.06824853271245956
    2. '```' → logprob: -3.6932485103607178
    3. ':' → logprob: -3.9432485103607178
    4. '   ' → logprob: -4.818248748779297
    5. '           ' → logprob: -4.818248748779297
    6. ':
' → logprob: -7.193248748779297
    7. ',' → logprob: -7.318248748779297
    8. '        ' → logprob: -7.568248748779297
    9. 'def' → logprob: -7.693248748779297
    10. '):' → logprob: -7.818248748779297

Token 2404: ' we' (ID: 581)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3363087475299835
    2. '```' → logprob: -1.9613087177276611
    3. '   ' → logprob: -2.836308717727661
    4. '
' → logprob: -3.086308717727661
    5. 'def' → logprob: -4.58630895614624
    6. '           ' → logprob: -4.96130895614624
    7. ':' → logprob: -5.08630895614624
    8. '\n' → logprob: -5.58630895614624
    9. '[
' → logprob: -6.21130895614624
    10. '\' → logprob: -6.96130895614624

Token 2405: ' can' (ID: 665)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.6634126901626587
    2. 'def' → logprob: -1.9134126901626587
    3. '
' → logprob: -2.038412570953369
    4. ')' → logprob: -2.163412570953369
    5. ' ' → logprob: -2.663412570953369
    6. '       ' → logprob: -2.788412570953369
    7. '```' → logprob: -2.913412570953369
    8. '[' → logprob: -3.538412570953369
    9. '#' → logprob: -3.663412570953369
    10. '_' → logprob: -3.788412570953369

Token 2406: ' store' (ID: 4897)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.2879798710346222
    2. '```' → logprob: -3.0379798412323
    3. '0' → logprob: -3.1629798412323
    4. '[
' → logprob: -3.5379798412323
    5. '[' → logprob: -3.7879798412323
    6. '   ' → logprob: -4.287980079650879
    7. ' def' → logprob: -4.412980079650879
    8. '       ' → logprob: -4.412980079650879
    9. ':' → logprob: -4.662980079650879
    10. 'from' → logprob: -4.787980079650879

Token 2407: ' total' (ID: 3609)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -1.2615220546722412
    2. ' ' → logprob: -1.2615220546722412
    3. '[
' → logprob: -2.386522054672241
    4. ')' → logprob: -2.511522054672241
    5. '<|end|>' → logprob: -3.261522054672241
    6. '```' → logprob: -3.511522054672241
    7. '   ' → logprob: -4.13652229309082
    8. ',' → logprob: -4.13652229309082
    9. '[]' → logprob: -4.26152229309082
    10. 'n' → logprob: -4.38652229309082

Token 2408: ' weight' (ID: 6049)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.29328522086143494
    2. '_weight' → logprob: -2.5432851314544678
    3. '```' → logprob: -2.6682851314544678
    4. '_unit' → logprob: -4.043285369873047
    5. '`' → logprob: -4.293285369873047
    6. '_
' → logprob: -4.543285369873047
    7. '_units' → logprob: -4.668285369873047
    8. '_b' → logprob: -4.793285369873047
    9. ' _' → logprob: -5.293285369873047
    10. 'Unit' → logprob: -5.543285369873047

Token 2409: ' as' (ID: 472)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '```' → logprob: -1.0270590782165527
    2. '       ' → logprob: -1.2770590782165527
    3. '[' → logprob: -2.5270590782165527
    4. '   ' → logprob: -3.0270590782165527
    5. ':' → logprob: -3.1520590782165527
    6. ',' → logprob: -3.4020590782165527
    7. '[
' → logprob: -3.4020590782165527
    8. ')' → logprob: -3.9020590782165527
    9. '=' → logprob: -4.152059078216553
    10. '
' → logprob: -4.152059078216553

Token 2410: ' sum' (ID: 4215)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -1.1985435485839844
    2. '[
' → logprob: -1.3235435485839844
    3. '```' → logprob: -1.8235435485839844
    4. ' ' → logprob: -3.1985435485839844
    5. 'Weight' → logprob: -3.3235435485839844
    6. ' (' → logprob: -3.3235435485839844
    7. '(' → logprob: -3.3235435485839844
    8. ' [
' → logprob: -3.9485435485839844
    9. '[]' → logprob: -4.198543548583984
    10. ' [' → logprob: -4.323543548583984

Token 2411: ' of' (ID: 328)
  Prédit: '[
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[
' → logprob: -1.0539411306381226
    2. '[' → logprob: -1.4289411306381226
    3. '_' → logprob: -2.178941249847412
    4. '=' → logprob: -2.553941249847412
    5. '```' → logprob: -3.178941249847412
    6. '(' → logprob: -3.303941249847412
    7. ')' → logprob: -3.678941249847412
    8. ' =' → logprob: -4.053941249847412
    9. 'of' → logprob: -4.678941249847412
    10. '   ' → logprob: -5.053941249847412

Token 2412: ' powers' (ID: 27742)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -1.4137574434280396
    2. '(' → logprob: -1.6637574434280396
    3. ' (' → logprob: -2.53875732421875
    4. '0' → logprob: -2.78875732421875
    5. 'a' → logprob: -3.03875732421875
    6. ')' → logprob: -3.16375732421875
    7. '2' → logprob: -3.16375732421875
    8. '```' → logprob: -3.28875732421875
    9. 'Weight' → logprob: -3.53875732421875
    10. ' ' → logprob: -3.78875732421875

Token 2413: ' of' (ID: 328)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.9223217964172363
    2. '```' → logprob: -1.6723217964172363
    3. '[
' → logprob: -2.0473217964172363
    4. '=' → logprob: -2.6723217964172363
    5. ')' → logprob: -2.9223217964172363
    6. ',' → logprob: -3.2973217964172363
    7. '(' → logprob: -3.9223217964172363
    8. '   ' → logprob: -4.422321796417236
    9. '_' → logprob: -4.547321796417236
    10. ':' → logprob: -4.672321796417236

Token 2414: ' two' (ID: 1920)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.00899387989193201
    2. 'two' → logprob: -5.008994102478027
    3. ' two' → logprob: -7.008994102478027
    4. '```' → logprob: -7.133994102478027
    5. ' ' → logprob: -7.883994102478027
    6. 'Two' → logprob: -10.008994102478027
    7. '-two' → logprob: -10.383994102478027
    8. ',' → logprob: -10.508994102478027
    9. '_two' → logprob: -10.758994102478027
    10. '-' → logprob: -11.258994102478027

Token 2415: ' (' (ID: 350)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.5547170639038086
    2. '```' → logprob: -1.8047170639038086
    3. '       ' → logprob: -2.0547170639038086
    4. ')' → logprob: -2.3047170639038086
    5. '[' → logprob: -2.3047170639038086
    6. ',' → logprob: -2.6797170639038086
    7. ':' → logprob: -3.0547170639038086
    8. '\n' → logprob: -3.5547170639038086
    9. '[
' → logprob: -3.6797170639038086
    10. ']' → logprob: -4.054717063903809

Token 2416: 'numbers' (ID: 85055)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.05546528846025467
    2. '[' → logprob: -4.180465221405029
    3. '0' → logprob: -4.680465221405029
    4. '1' → logprob: -5.055465221405029
    5. '2' → logprob: -5.805465221405029
    6. ']' → logprob: -5.805465221405029
    7. '[
' → logprob: -5.805465221405029
    8. ' )' → logprob: -6.305465221405029
    9. ' ' → logprob: -6.680465221405029
    10. '   ' → logprob: -6.805465221405029

Token 2417: ' with' (ID: 483)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -1.2259490489959717
    2. '=' → logprob: -1.6009490489959717
    3. '```' → logprob: -2.3509490489959717
    4. ')' → logprob: -2.7259490489959717
    5. '**' → logprob: -2.9759490489959717
    6. '[' → logprob: -3.1009490489959717
    7. '(' → logprob: -3.2259490489959717
    8. '_' → logprob: -3.2259490489959717
    9. '
' → logprob: -3.8509490489959717
    10. ':' → logprob: -4.100949287414551

Token 2418: ' quantity' (ID: 17245)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.2616504728794098
    2. ' ' → logprob: -2.261650562286377
    3. '```' → logprob: -2.511650562286377
    4. '2' → logprob: -4.511650562286377
    5. '0' → logprob: -4.886650562286377
    6. 'a' → logprob: -5.136650562286377
    7. '3' → logprob: -5.261650562286377
    8. '`' → logprob: -5.636650562286377
    9. ')' → logprob: -5.761650562286377
    10. 'b' → logprob: -6.511650562286377

Token 2419: '=' (ID: 28)
  Prédit: '='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5443772673606873
    2. '```' → logprob: -1.669377326965332
    3. 'Unit' → logprob: -2.919377326965332
    4. ')' → logprob: -3.169377326965332
    5. ',' → logprob: -3.544377326965332
    6. ' =' → logprob: -3.669377326965332
    7. '_' → logprob: -4.169377326965332
    8. '**' → logprob: -4.419377326965332
    9. '
' → logprob: -4.794377326965332
    10. '[' → logprob: -4.794377326965332

Token 2420: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.004198778886348009
    2. ' ' → logprob: -6.2541985511779785
    3. '1' → logprob: -6.5041985511779785
    4. '```' → logprob: -7.3791985511779785
    5. '`' → logprob: -9.754199028015137
    6. 'b' → logprob: -10.754199028015137
    7. '``' → logprob: -11.004199028015137
    8. ')' → logprob: -11.379199028015137
    9. '
' → logprob: -11.879199028015137
    10. 'a' → logprob: -12.379199028015137

Token 2421: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.0002965927124023
    2. '
' → logprob: -1.7502965927124023
    3. ')
' → logprob: -2.0002965927124023
    4. '```' → logprob: -2.3752965927124023
    5. ',' → logprob: -2.5002965927124023
    6. '   ' → logprob: -3.3752965927124023
    7. ',
' → logprob: -4.125296592712402
    8. '[' → logprob: -4.250296592712402
    9. '       ' → logprob: -4.500296592712402
    10. '):
' → logprob: -4.750296592712402

Token 2422: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5727542042732239
    2. '```' → logprob: -1.322754144668579
    3. '   ' → logprob: -2.072754144668579
    4. ',' → logprob: -4.822754383087158
    5. '[' → logprob: -5.447754383087158
    6. '#' → logprob: -5.697754383087158
    7. '`' → logprob: -5.822754383087158
    8. '           ' → logprob: -5.822754383087158
    9. 'def' → logprob: -5.947754383087158
    10. ':' → logprob: -5.947754383087158

Token 2423: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5481232404708862
    2. 'def' → logprob: -1.2981232404708862
    3. '```' → logprob: -2.798123359680176
    4. '[
' → logprob: -3.923123359680176
    5. '   ' → logprob: -4.173123359680176
    6. ':' → logprob: -4.298123359680176
    7. '[' → logprob: -4.423123359680176
    8. ':
' → logprob: -5.173123359680176
    9. 'return' → logprob: -5.923123359680176
    10. ')' → logprob: -5.923123359680176

Token 2424: ' ' (ID: 220)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.46369582414627075
    2. '       ' → logprob: -1.088695764541626
    3. '```' → logprob: -4.463696002960205
    4. '   ' → logprob: -4.588696002960205
    5. ':' → logprob: -5.088696002960205
    6. ':
' → logprob: -5.838696002960205
    7. '
' → logprob: -6.838696002960205
    8. ')' → logprob: -7.838696002960205
    9. '[' → logprob: -7.963696002960205
    10. '):' → logprob: -8.588695526123047

Token 2425: '9' (ID: 24)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.25924572348594666
    2. '       ' → logprob: -1.759245753288269
    3. '```' → logprob: -3.6342456340789795
    4. '   ' → logprob: -4.759245872497559
    5. ':' → logprob: -5.134245872497559
    6. ':
' → logprob: -5.384245872497559
    7. '[' → logprob: -5.509245872497559
    8. '[
' → logprob: -6.509245872497559
    9. 'return' → logprob: -6.759245872497559
    10. '0' → logprob: -7.509245872497559

Token 2426: ' =' (ID: 314)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.5638829469680786
    2. '```' → logprob: -2.188882827758789
    3. ' ' → logprob: -2.313882827758789
    4. ',' → logprob: -3.063882827758789
    5. '   ' → logprob: -3.688882827758789
    6. ':' → logprob: -3.938882827758789
    7. '\n' → logprob: -4.188882827758789
    8. '0' → logprob: -4.438882827758789
    9. '9' → logprob: -4.563882827758789
    10. ' 
' → logprob: -4.563882827758789

Token 2427: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.23562604188919067
    2. '(' → logprob: -2.110625982284546
    3. '3' → logprob: -3.610625982284546
    4. '9' → logprob: -3.610625982284546
    5. '8' → logprob: -4.110626220703125
    6. '4' → logprob: -4.360626220703125
    7. ' ' → logprob: -6.610626220703125
    8. ' (' → logprob: -6.735626220703125
    9. '7' → logprob: -7.360626220703125
    10. '`' → logprob: -7.360626220703125

Token 2428: '8' (ID: 23)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.13127510249614716
    2. '(' → logprob: -2.256275177001953
    3. '9' → logprob: -5.256275177001953
    4. '3' → logprob: -5.381275177001953
    5. '4' → logprob: -5.506275177001953
    6. '`' → logprob: -6.381275177001953
    7. '(
' → logprob: -7.006275177001953
    8. '8' → logprob: -7.756275177001953
    9. '\' → logprob: -8.506275177001953
    10. '``' → logprob: -8.756275177001953

Token 2429: ' +' (ID: 659)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.18724492192268372
    2. '```' → logprob: -2.6872448921203613
    3. '\n' → logprob: -2.9372448921203613
    4. '+' → logprob: -4.937244892120361
    5. '\' → logprob: -5.437244892120361
    6. ' =' → logprob: -5.562244892120361
    7. '9' → logprob: -5.562244892120361
    8. ' +' → logprob: -5.687244892120361
    9. '``' → logprob: -5.812244892120361
    10. ' ' → logprob: -5.937244892120361

Token 2430: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00018089536752086133
    2. ' ' → logprob: -8.625181198120117
    3. '`' → logprob: -14.625181198120117
    4. '4' → logprob: -15.500181198120117
    5. '```' → logprob: -15.625181198120117
    6. '0' → logprob: -15.875181198120117
    7. '   ' → logprob: -16.000181198120117
    8. '``' → logprob: -16.625181198120117
    9. ' ' → logprob: -17.375181198120117
    10. '  ' → logprob: -17.875181198120117

Token 2431: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.7697225252486533e-06
    2. '4' → logprob: -13.000003814697266
    3. ' ' → logprob: -13.625003814697266
    4. '0' → logprob: -16.125003814697266
    5. '```' → logprob: -16.875003814697266
    6. '`' → logprob: -17.500003814697266
    7. '``' → logprob: -17.500003814697266
    8. '
' → logprob: -18.750003814697266
    9. '   ' → logprob: -18.875003814697266
    10. '#' → logprob: -19.000003814697266

Token 2432: '

' (ID: 279)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '```' → logprob: -1.5205662250518799
    2. '   ' → logprob: -1.8955662250518799
    3. ' =' → logprob: -2.14556622505188
    4. ',' → logprob: -2.52056622505188
    5. '9' → logprob: -2.64556622505188
    6. ' ' → logprob: -2.77056622505188
    7. '
' → logprob: -3.02056622505188
    8. '=' → logprob: -3.39556622505188
    9. '1' → logprob: -4.020565986633301
    10. ':' → logprob: -4.020565986633301

Token 2433: '       ' (ID: 309)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.2957924604415894
    2. '   ' → logprob: -1.6707924604415894
    3. '```' → logprob: -1.6707924604415894
    4. '       ' → logprob: -2.420792579650879
    5. '1' → logprob: -2.670792579650879
    6. '9' → logprob: -3.295792579650879
    7. '
' → logprob: -3.420792579650879
    8. '3' → logprob: -3.670792579650879
    9. '\n' → logprob: -4.045792579650879
    10. ',' → logprob: -4.045792579650879

Token 2434: ' #' (ID: 1069)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.5010674595832825
    2. '9' → logprob: -1.6260673999786377
    3. '3' → logprob: -2.2510673999786377
    4. '```' → logprob: -3.6260673999786377
    5. '0' → logprob: -4.001067638397217
    6. ' ' → logprob: -4.376067638397217
    7. '   ' → logprob: -4.626067638397217
    8. '       ' → logprob: -5.501067638397217
    9. ',' → logprob: -5.626067638397217
    10. '(' → logprob: -5.876067638397217

Token 2435: ' So' (ID: 2632)
  Prédit: '3'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '3' → logprob: -0.15087462961673737
    2. '1' → logprob: -2.775874614715576
    3. '9' → logprob: -3.400874614715576
    4. '```' → logprob: -4.025874614715576
    5. '0' → logprob: -4.650874614715576
    6. '   ' → logprob: -5.775874614715576
    7. ' ' → logprob: -6.025874614715576
    8. '[
' → logprob: -6.150874614715576
    9. 'def' → logprob: -6.775874614715576
    10. '7' → logprob: -7.150874614715576

Token 2436: ' output' (ID: 4733)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0025088321417570114
    2. '3' → logprob: -6.127508640289307
    3. ' ' → logprob: -8.877509117126465
    4. '0' → logprob: -9.002509117126465
    5. '```' → logprob: -11.127509117126465
    6. '8' → logprob: -11.627509117126465
    7. '9' → logprob: -11.752509117126465
    8. '2' → logprob: -12.127509117126465
    9. '4' → logprob: -12.502509117126465
    10. '``' → logprob: -12.627509117126465

Token 2437: ' chunks' (ID: 53440)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.061914458870887756
    2. '3' → logprob: -3.0619144439697266
    3. '9' → logprob: -4.936914443969727
    4. '0' → logprob: -5.686914443969727
    5. '8' → logprob: -6.311914443969727
    6. '2' → logprob: -8.686914443969727
    7. '```' → logprob: -8.686914443969727
    8. ' ' → logprob: -9.061914443969727
    9. '(' → logprob: -9.186914443969727
    10. '7' → logprob: -9.561914443969727

Token 2438: ' with' (ID: 483)
  Prédit: '3'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '3' → logprob: -0.4728854298591614
    2. '1' → logprob: -1.3478853702545166
    3. '0' → logprob: -2.5978853702545166
    4. '9' → logprob: -3.7228853702545166
    5. '2' → logprob: -4.972885608673096
    6. '```' → logprob: -5.847885608673096
    7. '(' → logprob: -5.972885608673096
    8. '8' → logprob: -6.472885608673096
    9. ' (' → logprob: -6.847885608673096
    10. ' ' → logprob: -6.972885608673096

Token 2439: ' weight' (ID: 6049)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00024643904180265963
    2. '8' → logprob: -8.750246047973633
    3. '(' → logprob: -10.750246047973633
    4. ' ' → logprob: -11.375246047973633
    5. '```' → logprob: -11.375246047973633
    6. '3' → logprob: -11.500246047973633
    7. '`' → logprob: -11.625246047973633
    8. '``' → logprob: -11.750246047973633
    9. '7' → logprob: -12.125246047973633
    10. '9' → logprob: -12.875246047973633

Token 2440: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0011268829694017768
    2. '(' → logprob: -8.001127243041992
    3. '8' → logprob: -8.126127243041992
    4. '3' → logprob: -9.001127243041992
    5. '=' → logprob: -9.376127243041992
    6. ' ' → logprob: -9.376127243041992
    7. '```' → logprob: -9.501127243041992
    8. '9' → logprob: -10.251127243041992
    9. ' =' → logprob: -10.751127243041992
    10. '0' → logprob: -10.751127243041992

Token 2441: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.968934758333489e-05
    2. '(' → logprob: -10.250069618225098
    3. '3' → logprob: -11.250069618225098
    4. '8' → logprob: -11.500069618225098
    5. '```' → logprob: -12.750069618225098
    6. '`' → logprob: -13.000069618225098
    7. '``' → logprob: -13.500069618225098
    8. '9' → logprob: -13.875069618225098
    9. ' ' → logprob: -14.000069618225098
    10. '2' → logprob: -14.375069618225098

Token 2442: ' and' (ID: 326)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.7978903651237488
    2. '3' → logprob: -1.5478904247283936
    3. ' ' → logprob: -1.6728904247283936
    4. '```' → logprob: -2.9228904247283936
    5. '0' → logprob: -3.4228904247283936
    6. '\n' → logprob: -3.7978904247283936
    7. '
' → logprob: -4.4228901863098145
    8. '2' → logprob: -5.0478901863098145
    9. '6' → logprob: -5.6728901863098145
    10. '``' → logprob: -5.9228901863098145

Token 2443: ' ' (ID: 220)
  Prédit: '8'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '8' → logprob: -0.022194819524884224
    2. '4' → logprob: -4.397194862365723
    3. ' ' → logprob: -5.022194862365723
    4. '1' → logprob: -6.397194862365723
    5. '0' → logprob: -6.772194862365723
    6. '```' → logprob: -9.522194862365723
    7. '``' → logprob: -9.772194862365723
    8. '7' → logprob: -9.897194862365723
    9. '3' → logprob: -10.147194862365723
    10. '   ' → logprob: -12.522194862365723

Token 2444: '8' (ID: 23)
  Prédit: '8'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '8' → logprob: -0.86488276720047
    2. '4' → logprob: -1.4898827075958252
    3. '0' → logprob: -1.6148827075958252
    4. '6' → logprob: -2.739882707595825
    5. '1' → logprob: -2.989882707595825
    6. '5' → logprob: -3.614882707595825
    7. '3' → logprob: -4.739882946014404
    8. '```' → logprob: -5.989882946014404
    9. '7' → logprob: -7.739882946014404
    10. '``' → logprob: -7.864882946014404

Token 2445: '

' (ID: 279)
  Prédit: '3'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '3' → logprob: -0.6979333162307739
    2. '```' → logprob: -1.197933316230774
    3. '1' → logprob: -3.1979331970214844
    4. '\n' → logprob: -3.3229331970214844
    5. '9' → logprob: -4.072933197021484
    6. ',' → logprob: -4.322933197021484
    7. '
' → logprob: -4.322933197021484
    8. ' ' → logprob: -4.447933197021484
    9. '0' → logprob: -4.447933197021484
    10. '``' → logprob: -4.447933197021484

Token 2446: '       ' (ID: 309)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.770739734172821
    2. '3' → logprob: -2.145739793777466
    3. ' ' → logprob: -2.145739793777466
    4. '```' → logprob: -2.270739793777466
    5. '\n' → logprob: -3.020739793777466
    6. '9' → logprob: -3.020739793777466
    7. '
' → logprob: -3.520739793777466
    8. '0' → logprob: -4.145739555358887
    9. '2' → logprob: -4.395739555358887
    10. ',' → logprob: -4.770739555358887

Token 2447: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.9032279253005981
    2. '   ' → logprob: -1.2782279253005981
    3. '9' → logprob: -2.1532278060913086
    4. '```' → logprob: -3.2782278060913086
    5. '3' → logprob: -3.4032278060913086
    6. '0' → logprob: -3.5282278060913086
    7. ',' → logprob: -3.5282278060913086
    8. '1' → logprob: -3.7782278060913086
    9. ' ' → logprob: -4.403227806091309
    10. '8' → logprob: -5.028227806091309

Token 2448: ' but' (ID: 889)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -1.62569260597229
    2. '3' → logprob: -1.62569260597229
    3. '```' → logprob: -2.12569260597229
    4. '9' → logprob: -2.25069260597229
    5. '   ' → logprob: -2.37569260597229
    6. '       ' → logprob: -2.37569260597229
    7. '0' → logprob: -2.75069260597229
    8. '8' → logprob: -3.12569260597229
    9. '[
' → logprob: -3.62569260597229
    10. 'def' → logprob: -4.500692367553711

Token 2449: ' sample' (ID: 10176)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '```' → logprob: -0.8145172595977783
    2. ' ' → logprob: -1.3145172595977783
    3. '[
' → logprob: -2.8145172595977783
    4. '[' → logprob: -2.8145172595977783
    5. '1' → logprob: -3.4395172595977783
    6. '   ' → logprob: -3.4395172595977783
    7. '3' → logprob: -3.5645172595977783
    8. ' (' → logprob: -4.564517021179199
    9. '
' → logprob: -5.189517021179199
    10. ' [' → logprob: -5.189517021179199

Token 2450: ' output' (ID: 4733)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.2520421743392944
    2. '```' → logprob: -1.3770421743392944
    3. '[
' → logprob: -2.252042293548584
    4. '[' → logprob: -2.252042293548584
    5. '3' → logprob: -2.377042293548584
    6. '   ' → logprob: -3.252042293548584
    7. ',' → logprob: -3.752042293548584
    8. ')' → logprob: -4.377042293548584
    9. '`' → logprob: -4.877042293548584
    10. ' ,' → logprob: -4.877042293548584

Token 2451: ' is' (ID: 382)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.9189280271530151
    2. '[
' → logprob: -1.1689280271530151
    3. '3' → logprob: -2.4189281463623047
    4. '```' → logprob: -2.9189281463623047
    5. '   ' → logprob: -3.5439281463623047
    6. ',' → logprob: -3.7939281463623047
    7. ':' → logprob: -3.7939281463623047
    8. ' ' → logprob: -4.418928146362305
    9. '#' → logprob: -4.793928146362305
    10. ')' → logprob: -5.043928146362305

Token 2452: ' ' (ID: 220)
  Prédit: '3'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.13551975786685944
    2. '[' → logprob: -2.8855197429656982
    3. '[
' → logprob: -3.0105197429656982
    4. '```' → logprob: -4.135519981384277
    5. '4' → logprob: -5.635519981384277
    6. ' ' → logprob: -7.385519981384277
    7. '8' → logprob: -8.135519981384277
    8. '(' → logprob: -8.510519981384277
    9. '5' → logprob: -8.635519981384277
    10. '9' → logprob: -8.760519981384277

Token 2453: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.00776361208409071
    2. '4' → logprob: -5.632763385772705
    3. '```' → logprob: -6.132763385772705
    4. ' ' → logprob: -7.132763385772705
    5. '1' → logprob: -8.007763862609863
    6. '[
' → logprob: -8.382763862609863
    7. '9' → logprob: -9.132763862609863
    8. '8' → logprob: -9.257763862609863
    9. '[' → logprob: -9.257763862609863
    10. '(' → logprob: -9.382763862609863

Token 2454: ' and' (ID: 326)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.9033078551292419
    2. ',' → logprob: -1.5283079147338867
    3. '<|end|>' → logprob: -2.1533079147338867
    4. ' ,' → logprob: -2.2783079147338867
    5. '```' → logprob: -2.2783079147338867
    6. '   ' → logprob: -4.528307914733887
    7. '  ' → logprob: -4.778307914733887
    8. ')' → logprob: -4.903307914733887
    9. '
' → logprob: -5.653307914733887
    10. '<|end|>' → logprob: -5.653307914733887

Token 2455: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.3809029459953308
    2. '0' → logprob: -1.2559030055999756
    3. '```' → logprob: -3.8809030055999756
    4. '5' → logprob: -5.0059027671813965
    5. ''' → logprob: -6.0059027671813965
    6. '`' → logprob: -6.8809027671813965
    7. '1' → logprob: -8.630903244018555
    8. '8' → logprob: -8.755903244018555
    9. '6' → logprob: -9.005903244018555
    10. '4' → logprob: -9.130903244018555

Token 2456: '5' (ID: 20)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.4585195779800415
    2. ' ' → logprob: -1.0835195779800415
    3. '```' → logprob: -3.583519458770752
    4. '5' → logprob: -7.083519458770752
    5. '`' → logprob: -8.08351993560791
    6. ''' → logprob: -8.70851993560791
    7. '``' → logprob: -9.70851993560791
    8. ' ```' → logprob: -9.95851993560791
    9. '4' → logprob: -10.70851993560791
    10. '1' → logprob: -10.70851993560791

Token 2457: '

' (ID: 279)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '```' → logprob: -0.6753869652748108
    2. ')' → logprob: -2.425386905670166
    3. ':' → logprob: -2.550386905670166
    4. ',' → logprob: -2.550386905670166
    5. '[' → logprob: -3.050386905670166
    6. '   ' → logprob: -3.300386905670166
    7. '\n' → logprob: -3.300386905670166
    8. '[
' → logprob: -3.800386905670166
    9. 'def' → logprob: -4.425386905670166
    10. ']' → logprob: -4.425386905670166

Token 2458: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6414076089859009
    2. '```' → logprob: -1.7664076089859009
    3. ':' → logprob: -2.2664074897766113
    4. '       ' → logprob: -2.3914074897766113
    5. '[' → logprob: -3.5164074897766113
    6. ',' → logprob: -3.8914074897766113
    7. '\n' → logprob: -4.516407489776611
    8. ':
' → logprob: -5.266407489776611
    9. ')' → logprob: -5.391407489776611
    10. '``' → logprob: -5.516407489776611

Token 2459: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7475245594978333
    2. '       ' → logprob: -0.9975245594978333
    3. '```' → logprob: -2.3725244998931885
    4. ':' → logprob: -4.747524738311768
    5. '\n' → logprob: -4.997524738311768
    6. '[' → logprob: -4.997524738311768
    7. ')' → logprob: -5.122524738311768
    8. ',' → logprob: -5.247524738311768
    9. '#' (adapté à ' #') → logprob: -5.497524738311768
    10. '           ' → logprob: -5.872524738311768

Token 2460: ' ' (ID: 220)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4461609423160553
    2. '```' → logprob: -2.0711610317230225
    3. '       ' → logprob: -2.1961610317230225
    4. '\n' → logprob: -3.4461610317230225
    5. '#' → logprob: -4.196160793304443
    6. ':' → logprob: -4.196160793304443
    7. '<|end|>' → logprob: -4.196160793304443
    8. '
' → logprob: -5.071160793304443
    9. ')' → logprob: -5.196160793304443
    10. '...' → logprob: -5.321160793304443

Token 2461: '3' (ID: 18)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.9571526050567627
    2. '```' → logprob: -0.9571526050567627
    3. ')' → logprob: -3.3321526050567627
    4. '       ' → logprob: -3.7071526050567627
    5. '#' → logprob: -3.8321526050567627
    6. ':' → logprob: -4.082152366638184
    7. ',' → logprob: -4.082152366638184
    8. '[' → logprob: -4.082152366638184
    9. '\n' → logprob: -4.332152366638184
    10. ']' → logprob: -4.707152366638184

Token 2462: ' +' (ID: 659)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 2463: ' ' (ID: 220)
  Prédit: '6'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '6' → logprob: -1.1981788873672485
    2. '2' → logprob: -1.3231788873672485
    3. ' ' → logprob: -1.5731788873672485
    4. '4' → logprob: -1.9481788873672485
    5. '7' → logprob: -3.823178768157959
    6. '3' → logprob: -4.323178768157959
    7. '5' → logprob: -4.573178768157959
    8. '1' → logprob: -4.573178768157959
    9. '```' → logprob: -4.698178768157959
    10. '`' → logprob: -4.823178768157959

Token 2464: '5' (ID: 20)
  Prédit: '4'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '4' → logprob: -0.014606967568397522
    2. '6' → logprob: -4.389606952667236
    3. '1' → logprob: -6.889606952667236
    4. ' ' → logprob: -7.389606952667236
    5. '5' → logprob: -8.889607429504395
    6. '3' → logprob: -9.264607429504395
    7. '```' → logprob: -9.764607429504395
    8. ''' → logprob: -10.139607429504395
    9. '2' → logprob: -10.264607429504395
    10. '0' → logprob: -10.639607429504395

Token 2465: ' =' (ID: 314)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 2466: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.09816182404756546
    2. '8' → logprob: -2.8481619358062744
    3. '9' → logprob: -3.8481619358062744
    4. '1' → logprob: -5.723161697387695
    5. ''' → logprob: -5.848161697387695
    6. '```' → logprob: -6.098161697387695
    7. '2' → logprob: -6.473161697387695
    8. '7' → logprob: -6.723161697387695
    9. '3' → logprob: -6.848161697387695
    10. '6' → logprob: -7.723161697387695

Token 2467: '8' (ID: 23)
  Prédit: '8'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '8' → logprob: -0.36943548917770386
    2. ' ' → logprob: -1.2444355487823486
    3. '9' → logprob: -4.6194353103637695
    4. '1' → logprob: -5.7444353103637695
    5. '2' → logprob: -6.2444353103637695
    6. '3' → logprob: -6.3694353103637695
    7. '```' → logprob: -6.6194353103637695
    8. '7' → logprob: -7.4944353103637695
    9. '0' → logprob: -7.6194353103637695
    10. ''' → logprob: -8.11943531036377

Token 2468: ' only' (ID: 1606)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 2469: '

' (ID: 279)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '```' → logprob: -1.4962364435195923
    2. '[' → logprob: -2.1212363243103027
    3. '[
' → logprob: -2.1212363243103027
    4. ',' → logprob: -2.3712363243103027
    5. ':' → logprob: -2.4962363243103027
    6. '   ' → logprob: -2.9962363243103027
    7. '\n' → logprob: -3.1212363243103027
    8. ']' → logprob: -3.2462363243103027
    9. ')' → logprob: -3.2462363243103027
    10. ':
' → logprob: -3.6212363243103027

Token 2470: '       ' (ID: 309)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '```' → logprob: -0.47972768545150757
    2. '\n' → logprob: -2.1047277450561523
    3. '<|end|>' → logprob: -2.6047277450561523
    4. '   ' → logprob: -2.9797277450561523
    5. ')' → logprob: -3.4797277450561523
    6. ',' → logprob: -3.8547277450561523
    7. '<|end|>' → logprob: -4.354727745056152
    8. '\' → logprob: -4.604727745056152
    9. '``' → logprob: -5.479727745056152
    10. '
' → logprob: -5.479727745056152

Token 2471: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7563081383705139
    2. '       ' → logprob: -2.006308078765869
    3. 'def' → logprob: -2.256308078765869
    4. ':' → logprob: -2.631308078765869
    5. '```' → logprob: -2.631308078765869
    6. '[' → logprob: -2.881308078765869
    7. '[
' → logprob: -3.631308078765869
    8. '#' (adapté à ' #') → logprob: -4.506308078765869
    9. ':
' → logprob: -4.631308078765869
    10. ']' → logprob: -5.131308078765869

Token 2472: ' So' (ID: 2632)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.9907072186470032
    2. '   ' → logprob: -1.2407071590423584
    3. '       ' → logprob: -1.2407071590423584
    4. '```' → logprob: -3.7407071590423584
    5. ':' → logprob: -4.6157073974609375
    6. ':
' → logprob: -5.3657073974609375
    7. ' def' → logprob: -5.9907073974609375
    8. '[' → logprob: -6.2407073974609375
    9. '):' → logprob: -6.7407073974609375
    10. '           ' → logprob: -6.7407073974609375

Token 2473: ' is' (ID: 382)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -1.3495140075683594
    2. '   ' → logprob: -1.4745140075683594
    3. 'def' → logprob: -1.7245140075683594
    4. ':' → logprob: -2.5995140075683594
    5. '```' → logprob: -2.8495140075683594
    6. '[
' → logprob: -3.2245140075683594
    7. ']' → logprob: -3.3495140075683594
    8. ')' → logprob: -3.5995140075683594
    9. '       ' → logprob: -3.8495140075683594
    10. '#' → logprob: -4.349514007568359

Token 2474: ' it' (ID: 480)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '```' → logprob: -0.6758478879928589
    2. ' ' → logprob: -0.9258478879928589
    3. '[' → logprob: -3.5508480072021484
    4. '`' → logprob: -4.050848007202148
    5. ' ```' → logprob: -4.425848007202148
    6. '3' → logprob: -4.800848007202148
    7. ''' → logprob: -5.800848007202148
    8. '``' → logprob: -5.800848007202148
    9. '<|end|>' → logprob: -6.050848007202148
    10. '[
' → logprob: -6.175848007202148

Token 2475: ' typo' (ID: 186875)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '```' → logprob: -0.7518509030342102
    2. '[' → logprob: -1.7518508434295654
    3. ' ' → logprob: -2.5018508434295654
    4. '<|end|>' → logprob: -2.6268508434295654
    5. '[
' → logprob: -3.7518508434295654
    6. '3' → logprob: -3.7518508434295654
    7. ',' → logprob: -3.7518508434295654
    8. '#' → logprob: -3.8768508434295654
    9. ')' → logprob: -4.1268510818481445
    10. ':' → logprob: -4.6268510818481445

Token 2476: ' in' (ID: 306)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '```' → logprob: -1.0856517553329468
    2. '<|end|>' → logprob: -1.2106517553329468
    3. '[' → logprob: -2.0856518745422363
    4. '[
' → logprob: -2.9606518745422363
    5. '3' → logprob: -3.3356518745422363
    6. ',' → logprob: -3.4606518745422363
    7. '\n' → logprob: -4.335651874542236
    8. '<|end|>' → logprob: -4.460651874542236
    9. '
' → logprob: -4.585651874542236
    10. '.' → logprob: -4.710651874542236

Token 2477: ' sample' (ID: 10176)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '```' → logprob: -0.4398142099380493
    2. '3' → logprob: -1.4398142099380493
    3. ' ' → logprob: -3.3148140907287598
    4. '[' → logprob: -3.5648140907287598
    5. '[
' → logprob: -4.18981409072876
    6. '"' → logprob: -4.93981409072876
    7. '`' → logprob: -5.31481409072876
    8. ''' → logprob: -5.43981409072876
    9. ')' → logprob: -6.06481409072876
    10. '#' → logprob: -6.18981409072876

Token 2478: ' output' (ID: 4733)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '```' → logprob: -0.8402506709098816
    2. '<|end|>' → logprob: -1.0902507305145264
    3. '\n' → logprob: -2.7152507305145264
    4. '<|end|>' → logprob: -3.8402507305145264
    5. '[' → logprob: -3.9652507305145264
    6. '3' → logprob: -4.090250492095947
    7. ' ' → logprob: -4.215250492095947
    8. ',' → logprob: -4.215250492095947
    9. '`' → logprob: -4.465250492095947
    10. '
' → logprob: -4.840250492095947

Token 2479: ' ?

' (ID: 13570)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 2480: '       ' (ID: 309)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '```' → logprob: -0.8715118765830994
    2. '[' → logprob: -2.371511936187744
    3. '[
' → logprob: -2.496511936187744
    4. ':' → logprob: -2.496511936187744
    5. '<|end|>' → logprob: -2.746511936187744
    6. '   ' → logprob: -2.746511936187744
    7. '.' → logprob: -2.996511936187744
    8. 'def' → logprob: -3.871511936187744
    9. '[]' → logprob: -4.371511936187744
    10. '#' → logprob: -4.371511936187744

Token 2481: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5624565482139587
    2. '```' → logprob: -1.8124566078186035
    3. '[
' → logprob: -2.5624566078186035
    4. '[' → logprob: -2.6874566078186035
    5. '<|end|>' → logprob: -3.9374566078186035
    6. '       ' → logprob: -4.1874566078186035
    7. ']' → logprob: -4.3124566078186035
    8. ':' → logprob: -4.4374566078186035
    9. 'def' → logprob: -4.5624566078186035
    10. '#' (adapté à ' #') → logprob: -4.5624566078186035

Token 2482: ' Maybe' (ID: 17158)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7599307894706726
    2. 'def' → logprob: -1.0099308490753174
    3. '       ' → logprob: -2.6349308490753174
    4. '```' → logprob: -2.8849308490753174
    5. ':' → logprob: -4.384930610656738
    6. '[' → logprob: -4.634930610656738
    7. '[
' → logprob: -5.509930610656738
    8. ']' → logprob: -6.134930610656738
    9. ':
' → logprob: -6.384930610656738
    10. ')' → logprob: -6.759930610656738

Token 2483: ' ' (ID: 220)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '```' → logprob: -0.5083348155021667
    2. '[' → logprob: -1.6333348751068115
    3. '[
' → logprob: -2.5083348751068115
    4. ',' → logprob: -3.7583348751068115
    5. '\n' → logprob: -3.8833348751068115
    6. '0' → logprob: -4.758334636688232
    7. ':' → logprob: -4.758334636688232
    8. '``' → logprob: -4.758334636688232
    9. ']' → logprob: -4.883334636688232
    10. '`' → logprob: -5.008334636688232

Token 2484: '3' (ID: 18)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.9899865388870239
    2. '```' → logprob: -1.614986538887024
    3. '[
' → logprob: -2.1149864196777344
    4. '   ' → logprob: -2.2399864196777344
    5. '3' → logprob: -2.8649864196777344
    6. ':' → logprob: -3.3649864196777344
    7. '#' → logprob: -3.9899864196777344
    8. '<|end|>' → logprob: -4.114986419677734
    9. ']' → logprob: -4.489986419677734
    10. ',' → logprob: -4.739986419677734

Token 2485: ' and' (ID: 326)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.7185009717941284
    2. ',' → logprob: -1.2185009717941284
    3. '<|end|>' → logprob: -2.843501091003418
    4. '2' → logprob: -3.218501091003418
    5. '```' → logprob: -3.468501091003418
    6. ' ,' → logprob: -4.218501091003418
    7. '3' → logprob: -4.218501091003418
    8. '   ' → logprob: -4.593501091003418
    9. ')' → logprob: -4.843501091003418
    10. '  ' → logprob: -4.843501091003418

Token 2486: ' ' (ID: 220)
  Prédit: '6'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '6' → logprob: -0.11309009790420532
    2. '4' → logprob: -2.3630900382995605
    3. '5' → logprob: -4.9880900382995605
    4. '3' → logprob: -5.7380900382995605
    5. '1' → logprob: -6.9880900382995605
    6. '7' → logprob: -7.3630900382995605
    7. '```' → logprob: -7.8630900382995605
    8. '2' → logprob: -8.113090515136719
    9. '0' → logprob: -8.113090515136719
    10. '`' → logprob: -9.613090515136719

Token 2487: '5' (ID: 20)
  Prédit: '6'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '6' → logprob: -0.12884323298931122
    2. '4' → logprob: -2.628843307495117
    3. '5' → logprob: -3.253843307495117
    4. '3' → logprob: -5.628843307495117
    5. '7' → logprob: -5.753843307495117
    6. '1' → logprob: -6.503843307495117
    7. '0' → logprob: -7.378843307495117
    8. '2' → logprob: -7.503843307495117
    9. '```' → logprob: -8.003843307495117
    10. '9' → logprob: -8.878843307495117

Token 2488: ' are' (ID: 553)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '```' → logprob: -0.6648098826408386
    2. '<|end|>' → logprob: -1.9148099422454834
    3. ',' → logprob: -2.4148099422454834
    4. ' ' → logprob: -3.0398099422454834
    5. '
' → logprob: -3.2898099422454834
    6. ':' → logprob: -3.4148099422454834
    7. '<|end|>' → logprob: -3.7898099422454834
    8. '\n' → logprob: -4.164809703826904
    9. '[' → logprob: -4.289809703826904
    10. ')' → logprob: -4.414809703826904

Token 2489: ' a' (ID: 261)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.5005760788917542
    2. '```' → logprob: -1.0005760192871094
    3. '<|end|>' → logprob: -5.000576019287109
    4. '``' → logprob: -5.375576019287109
    5. '3' → logprob: -5.750576019287109
    6. '0' → logprob: -6.000576019287109
    7. ' ```' → logprob: -6.250576019287109
    8. '\n' → logprob: -6.625576019287109
    9. ',' → logprob: -7.125576019287109
    10. '`' → logprob: -7.125576019287109

Token 2490: ' and' (ID: 326)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.40364259481430054
    2. ',' → logprob: -2.9036426544189453
    3. '
' → logprob: -3.1536426544189453
    4. '<|end|>' → logprob: -3.1536426544189453
    5. '#' → logprob: -3.9036426544189453
    6. '0' → logprob: -4.153642654418945
    7. '+' → logprob: -4.278642654418945
    8. '  
' → logprob: -4.278642654418945
    9. '[' → logprob: -4.403642654418945
    10. ')' → logprob: -4.528642654418945

Token 2491: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.19798432290554047
    2. '0' → logprob: -2.072984218597412
    3. ' ' → logprob: -3.447984218597412
    4. ' b' → logprob: -3.947984218597412
    5. '
' → logprob: -7.072984218597412
    6. '```' → logprob: -7.572984218597412
    7. '1' → logprob: -8.07298469543457
    8. '3' → logprob: -8.44798469543457
    9. '`' → logprob: -8.44798469543457
    10. ' 
' → logprob: -9.32298469543457

Token 2492: ' are' (ID: 553)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 2493: ' exponent' (ID: 51159)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.25695285201072693
    2. '0' → logprob: -1.5069528818130493
    3. '1' → logprob: -6.25695276260376
    4. '```' → logprob: -6.25695276260376
    5. '3' → logprob: -8.381953239440918
    6. '2' → logprob: -8.631953239440918
    7. '[' → logprob: -9.006953239440918
    8. ' (' → logprob: -9.006953239440918
    9. ',' → logprob: -9.256953239440918
    10. '(' → logprob: -9.756953239440918

Token 2494: ' indices' (ID: 30378)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '```' → logprob: -0.4328448176383972
    2. ' ' → logprob: -1.932844877243042
    3. '3' → logprob: -3.057844877243042
    4. '<|end|>' → logprob: -3.307844877243042
    5. '0' → logprob: -3.557844877243042
    6. '[' → logprob: -4.182844638824463
    7. ',' → logprob: -4.307844638824463
    8. '``' → logprob: -4.682844638824463
    9. '`' → logprob: -4.807844638824463
    10. ':' → logprob: -5.307844638824463

Token 2495: ',' (ID: 11)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '```' → logprob: -1.269453525543213
    2. '[' → logprob: -1.644453525543213
    3. '3' → logprob: -1.894453525543213
    4. '<|end|>' → logprob: -2.269453525543213
    5. ',' → logprob: -3.019453525543213
    6. '[
' → logprob: -3.144453525543213
    7. ' ' → logprob: -3.269453525543213
    8. ':' → logprob: -3.394453525543213
    9. '0' → logprob: -3.769453525543213
    10. '(' → logprob: -4.769453525543213

Token 2496: ' not' (ID: 625)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '```' → logprob: -0.33215612173080444
    2. ' ' → logprob: -2.582156181335449
    3. '[' → logprob: -3.082156181335449
    4. '0' → logprob: -3.082156181335449
    5. '``' → logprob: -3.457156181335449
    6. '[
' → logprob: -4.207156181335449
    7. '1' → logprob: -4.457156181335449
    8. ':' → logprob: -4.582156181335449
    9. '3' → logprob: -4.582156181335449
    10. ',' → logprob: -4.707156181335449

Token 2497: ' exact' (ID: 6354)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '```' → logprob: -0.5129671096801758
    2. '0' → logprob: -1.7629671096801758
    3. '[' → logprob: -2.262967109680176
    4. '2' → logprob: -3.887967109680176
    5. ')' → logprob: -3.887967109680176
    6. ' ' → logprob: -4.137967109680176
    7. '3' → logprob: -4.512967109680176
    8. '[
' → logprob: -4.637967109680176
    9. '1' → logprob: -5.012967109680176
    10. ',' → logprob: -5.262967109680176

Token 2498: ' number' (ID: 2086)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '```' → logprob: -0.6692880392074585
    2. '[' → logprob: -1.5442880392074585
    3. '[
' → logprob: -3.169288158416748
    4. '0' → logprob: -3.169288158416748
    5. ' ' → logprob: -3.294288158416748
    6. ',' → logprob: -3.419288158416748
    7. ':' → logprob: -3.544288158416748
    8. '<|end|>' → logprob: -4.169288158416748
    9. '3' → logprob: -4.794288158416748
    10. '``' → logprob: -4.919288158416748

Token 2499: '.

' (ID: 364)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '```' → logprob: -0.3115522861480713
    2. ':' → logprob: -2.4365522861480713
    3. '[' → logprob: -2.6865522861480713
    4. ',' → logprob: -3.6865522861480713
    5. '``' → logprob: -4.436552047729492
    6. '[
' → logprob: -4.811552047729492
    7. '`' → logprob: -4.811552047729492
    8. ')' → logprob: -4.811552047729492
    9. '0' → logprob: -4.936552047729492
    10. '<|end|>' → logprob: -4.936552047729492

Token 2500: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5564360618591309
    2. ':' → logprob: -2.056436061859131
    3. '```' → logprob: -2.556436061859131
    4. '[' → logprob: -2.681436061859131
    5. 'def' → logprob: -3.056436061859131
    6. '       ' → logprob: -3.306436061859131
    7. '[
' → logprob: -4.556436061859131
    8. ')' → logprob: -4.681436061859131
    9. ',' → logprob: -4.806436061859131
    10. '0' → logprob: -5.181436061859131

Token 2501: ' #' (ID: 1069)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -1.4229016304016113
    2. '   ' → logprob: -1.4229016304016113
    3. '[' → logprob: -1.6729016304016113
    4. '[
' → logprob: -2.4229016304016113
    5. '```' → logprob: -2.5479016304016113
    6. 'def' → logprob: -3.1729016304016113
    7. '0' → logprob: -3.9229016304016113
    8. ':
' → logprob: -4.047901630401611
    9. ',' → logprob: -4.297901630401611
    10. ')' → logprob: -4.422901630401611

Token 2502: ' Guess' (ID: 84288)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -1.1666780710220337
    2. '[' → logprob: -1.6666780710220337
    3. '   ' → logprob: -1.6666780710220337
    4. '```' → logprob: -2.041677951812744
    5. '[
' → logprob: -3.166677951812744
    6. 'def' → logprob: -3.541677951812744
    7. ')' → logprob: -3.791677951812744
    8. '0' → logprob: -4.166677951812744
    9. ':
' → logprob: -4.291677951812744
    10. '):' → logprob: -4.666677951812744

Token 2503: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.9957404136657715
    2. '```' → logprob: -0.9957404136657715
    3. '[' → logprob: -1.7457404136657715
    4. '   ' → logprob: -3.8707404136657715
    5. '[
' → logprob: -4.2457404136657715
    6. ',' → logprob: -4.6207404136657715
    7. '.' → logprob: -4.9957404136657715
    8. ' ' → logprob: -5.7457404136657715
    9. '0' → logprob: -5.7457404136657715
    10. '``' → logprob: -5.8707404136657715

Token 2504: ' a' (ID: 261)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '```' → logprob: -0.46419426798820496
    2. '[' → logprob: -1.2141942977905273
    3. '0' → logprob: -3.8391942977905273
    4. ' ' → logprob: -4.964194297790527
    5. '`' → logprob: -4.964194297790527
    6. '1' → logprob: -5.339194297790527
    7. '[
' → logprob: -5.464194297790527
    8. '``' → logprob: -5.464194297790527
    9. ',' → logprob: -5.714194297790527
    10. ':' → logprob: -5.964194297790527

Token 2505: '_i' (ID: 10853)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.6197553277015686
    2. '_' → logprob: -1.7447552680969238
    3. '_i' → logprob: -1.7447552680969238
    4. ')' → logprob: -2.744755268096924
    5. '```' → logprob: -4.744755268096924
    6. '**' → logprob: -5.119755268096924
    7. '[' → logprob: -5.244755268096924
    8. 'i' → logprob: -5.494755268096924
    9. '=' → logprob: -5.619755268096924
    10. '`' → logprob: -5.869755268096924

Token 2506: ' and' (ID: 326)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.9438181519508362
    2. '```' → logprob: -1.3188180923461914
    3. '=' → logprob: -2.6938180923461914
    4. ')' → logprob: -2.6938180923461914
    5. '[' → logprob: -3.4438180923461914
    6. ':' → logprob: -3.4438180923461914
    7. '_i' → logprob: -3.4438180923461914
    8. '+' → logprob: -3.8188180923461914
    9. ' =' → logprob: -4.068818092346191
    10. '`' → logprob: -4.693818092346191

Token 2507: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.00037836082628928125
    2. ' b' → logprob: -8.500378608703613
    3. '```' → logprob: -10.000378608703613
    4. '0' → logprob: -10.250378608703613
    5. '=' → logprob: -11.000378608703613
    6. 'a' → logprob: -11.000378608703613
    7. ',' → logprob: -11.500378608703613
    8. '_b' → logprob: -11.625378608703613
    9. ' =' → logprob: -11.750378608703613
    10. '_i' → logprob: -12.500378608703613

Token 2508: '_i' (ID: 10853)
  Prédit: '_i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_i' → logprob: -0.19659358263015747
    2. '_' → logprob: -1.9465935230255127
    3. ',' → logprob: -3.8215935230255127
    4. '=' → logprob: -5.696593761444092
    5. ' _' → logprob: -6.071593761444092
    6. ')' → logprob: -6.196593761444092
    7. ' =' → logprob: -6.571593761444092
    8. 'i' → logprob: -6.946593761444092
    9. '```' → logprob: -7.071593761444092
    10. '_
' → logprob: -7.571593761444092

Token 2509: ' are' (ID: 553)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '```' → logprob: -0.5155996084213257
    2. '[' → logprob: -2.1405997276306152
    3. ' ' → logprob: -2.5155997276306152
    4. ',' → logprob: -2.6405997276306152
    5. '(' → logprob: -3.6405997276306152
    6. ':' → logprob: -4.140599727630615
    7. '0' → logprob: -4.390599727630615
    8. '`' → logprob: -4.640599727630615
    9. '=' → logprob: -4.765599727630615
    10. ' =' → logprob: -4.765599727630615

Token 2510: ' ex' (ID: 513)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -1.780349612236023
    2. ' ' → logprob: -1.780349612236023
    3. ',' → logprob: -1.905349612236023
    4. '[' → logprob: -2.4053497314453125
    5. '```' → logprob: -2.6553497314453125
    6. ')' → logprob: -2.7803497314453125
    7. '+' → logprob: -3.1553497314453125
    8. '2' → logprob: -3.2803497314453125
    9. ':' → logprob: -3.4053497314453125
    10. '(' → logprob: -3.6553497314453125

Token 2511: 'ponents' (ID: 4331)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.7486650347709656
    2. '```' → logprob: -1.9986650943756104
    3. '^' → logprob: -2.7486650943756104
    4. '+' → logprob: -2.8736650943756104
    5. '_i' → logprob: -3.1236650943756104
    6. '=' → logprob: -3.1236650943756104
    7. '[' → logprob: -3.2486650943756104
    8. 'ponent' → logprob: -3.4986650943756104
    9. ')' → logprob: -3.4986650943756104
    10. '``' → logprob: -4.123664855957031

Token 2512: ' for' (ID: 395)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -1.3009055852890015
    2. '```' → logprob: -1.4259055852890015
    3. '   ' → logprob: -2.050905704498291
    4. ',' → logprob: -2.175905704498291
    5. '[' → logprob: -3.050905704498291
    6. '(' → logprob: -3.300905704498291
    7. ' =' → logprob: -4.050905704498291
    8. ')' → logprob: -4.175905704498291
    9. ':
' → logprob: -4.300905704498291
    10. '=' → logprob: -4.550905704498291

Token 2513: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.2560655474662781
    2. 'Weight' → logprob: -2.756065607070923
    3. ')' → logprob: -3.631065607070923
    4. '`' → logprob: -3.881065607070923
    5. '3' → logprob: -4.006065368652344
    6. '1' → logprob: -4.256065368652344
    7. '```' → logprob: -4.256065368652344
    8. ''' → logprob: -4.631065368652344
    9. ' ' → logprob: -5.006065368652344
    10. '^' → logprob: -5.131065368652344

Token 2514: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.46288949251174927
    2. '**' → logprob: -2.3378894329071045
    3. '```' → logprob: -2.3378894329071045
    4. 'Weight' → logprob: -3.0878894329071045
    5. '`' → logprob: -3.4628894329071045
    6. '^' → logprob: -3.7128894329071045
    7. ')' → logprob: -4.462889671325684
    8. '1' → logprob: -4.837889671325684
    9. 'weight' → logprob: -4.837889671325684
    10. '0' → logprob: -4.962889671325684

Token 2515: '^' (ID: 61)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.47270381450653076
    2. ',' → logprob: -2.2227039337158203
    3. '```' → logprob: -2.3477039337158203
    4. '[
' → logprob: -3.2227039337158203
    5. '_' → logprob: -3.5977039337158203
    6. '^' → logprob: -3.7227039337158203
    7. '**' → logprob: -3.9727039337158203
    8. '*' → logprob: -4.34770393371582
    9. ')' → logprob: -4.72270393371582
    10. '`' → logprob: -5.34770393371582

Token 2516: 'x' (ID: 87)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.6209505200386047
    2. 'x' → logprob: -0.8709505200386047
    3. '3' → logprob: -3.49595046043396
    4. '```' → logprob: -4.870950698852539
    5. '0' → logprob: -5.870950698852539
    6. '^' → logprob: -6.745950698852539
    7. 'i' → logprob: -8.120950698852539
    8. '
' → logprob: -8.370950698852539
    9. '_x' → logprob: -8.495950698852539
    10. '#' → logprob: -8.745950698852539

Token 2517: ' and' (ID: 326)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '```' → logprob: -0.9678452610969543
    2. ',' → logprob: -1.4678452014923096
    3. ' ' → logprob: -2.3428452014923096
    4. '[' → logprob: -2.5928452014923096
    5. ':' → logprob: -2.7178452014923096
    6. '(' → logprob: -3.8428452014923096
    7. '`' → logprob: -4.092845439910889
    8. '   ' → logprob: -4.092845439910889
    9. '``' → logprob: -4.342845439910889
    10. ')' → logprob: -4.467845439910889

Token 2518: ' ' (ID: 220)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.15216375887393951
    2. 'b' → logprob: -2.0271637439727783
    3. 'a' → logprob: -4.902163982391357
    4. '0' → logprob: -7.027163982391357
    5. '```' → logprob: -7.402163982391357
    6. ' y' → logprob: -8.7771635055542
    7. '1' → logprob: -9.5271635055542
    8. '
' → logprob: -9.6521635055542
    9. '2' → logprob: -9.9021635055542
    10. '`' → logprob: -10.5271635055542

Token 2519: '2' (ID: 17)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.001921014511026442
    2. 'b' → logprob: -6.8769211769104
    3. '0' → logprob: -7.2519211769104
    4. 'a' → logprob: -10.001920700073242
    5. '```' → logprob: -10.126920700073242
    6. ' y' → logprob: -10.376920700073242
    7. 'x' → logprob: -10.876920700073242
    8. '^' → logprob: -11.751920700073242
    9. '1' → logprob: -11.751920700073242
    10. '_y' → logprob: -12.251920700073242

Token 2520: '^' (ID: 61)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.3764512836933136
    2. ')' → logprob: -2.001451253890991
    3. '0' → logprob: -3.001451253890991
    4. ' ' → logprob: -3.501451253890991
    5. '*' → logprob: -3.751451253890991
    6. '^' → logprob: -4.62645149230957
    7. '**' → logprob: -4.87645149230957
    8. ']' → logprob: -5.00145149230957
    9. '_i' → logprob: -5.00145149230957
    10. ' ,' → logprob: -5.12645149230957

Token 2521: 'y' (ID: 88)
  Prédit: 'y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.0012136871227994561
    2. 'x' → logprob: -7.501213550567627
    3. 'b' → logprob: -8.376214027404785
    4. 'a' → logprob: -8.751214027404785
    5. '0' → logprob: -8.876214027404785
    6. '```' → logprob: -9.876214027404785
    7. '
' → logprob: -11.001214027404785
    8. ')' → logprob: -11.501214027404785
    9. '^' → logprob: -11.626214027404785
    10. ' y' → logprob: -12.001214027404785

Token 2522: '

' (ID: 279)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '```' → logprob: -1.354040503501892
    2. '[' → logprob: -1.979040503501892
    3. ' ' → logprob: -1.979040503501892
    4. ',' → logprob: -2.7290406227111816
    5. '0' → logprob: -2.7290406227111816
    6. '(' → logprob: -2.9790406227111816
    7. ':' → logprob: -3.1040406227111816
    8. '   ' → logprob: -3.1040406227111816
    9. '[
' → logprob: -3.2290406227111816
    10. '``' → logprob: -3.8540406227111816

Token 2523: '       ' (ID: 309)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.7742249965667725
    2. '   ' → logprob: -1.5242249965667725
    3. '```' → logprob: -2.3992249965667725
    4. '       ' → logprob: -2.6492249965667725
    5. '[' → logprob: -3.2742249965667725
    6. ',' → logprob: -3.3992249965667725
    7. ')' → logprob: -4.274225234985352
    8. '0' → logprob: -4.899225234985352
    9. '.' → logprob: -4.899225234985352
    10. 'def' → logprob: -5.024225234985352

Token 2524: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7988874912261963
    2. ':' → logprob: -1.1738874912261963
    3. '```' → logprob: -3.0488874912261963
    4. '[' → logprob: -3.4238874912261963
    5. 'def' → logprob: -3.5488874912261963
    6. ':
' → logprob: -3.6738874912261963
    7. ',' → logprob: -3.9238874912261963
    8. '[
' → logprob: -4.298887252807617
    9. '       ' → logprob: -4.423887252807617
    10. '#' (adapté à ' #') → logprob: -4.923887252807617

Token 2525: ' Then' (ID: 7801)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.5226218104362488
    2. '```' → logprob: -2.0226218700408936
    3. '[' → logprob: -2.8976218700408936
    4. '   ' → logprob: -3.0226218700408936
    5. ',' → logprob: -3.1476218700408936
    6. '#' → logprob: -3.7726218700408936
    7. '[
' → logprob: -4.0226216316223145
    8. ':
' → logprob: -4.1476216316223145
    9. ')' → logprob: -4.6476216316223145
    10. '.' → logprob: -4.8976216316223145

Token 2526: ' weight' (ID: 6049)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.9447854161262512
    2. ',' → logprob: -1.3197853565216064
    3. '   ' → logprob: -2.5697853565216064
    4. '```' → logprob: -2.6947853565216064
    5. '+' → logprob: -3.6947853565216064
    6. '=' → logprob: -3.6947853565216064
    7. '(' → logprob: -3.6947853565216064
    8. ')' → logprob: -3.8197853565216064
    9. '[' → logprob: -4.0697855949401855
    10. ' ' → logprob: -4.4447855949401855

Token 2527: ' per' (ID: 777)
  Prédit: 'Unit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Unit' → logprob: -0.0484175831079483
    2. '```' → logprob: -4.173417568206787
    3. ',' → logprob: -5.048417568206787
    4. ' =' → logprob: -5.173417568206787
    5. '`' → logprob: -5.673417568206787
    6. '=' → logprob: -6.048417568206787
    7. ' ' → logprob: -6.173417568206787
    8. '_i' → logprob: -6.298417568206787
    9. '_' → logprob: -6.423417568206787
    10. '   ' → logprob: -6.923417568206787

Token 2528: ' chunk' (ID: 23958)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -1.300828218460083
    2. '_i' → logprob: -1.300828218460083
    3. 'unit' → logprob: -2.800828218460083
    4. ')' → logprob: -2.925828218460083
    5. 'Unit' → logprob: -2.925828218460083
    6. 'a' → logprob: -3.050828218460083
    7. '`' → logprob: -3.175828218460083
    8. '_unit' → logprob: -3.300828218460083
    9. 'chunk' → logprob: -3.300828218460083
    10. '2' → logprob: -3.425828218460083

Token 2529: ':' (ID: 25)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '```' → logprob: -1.064178705215454
    2. ',' → logprob: -1.439178705215454
    3. ':' → logprob: -2.439178705215454
    4. '[' → logprob: -2.564178705215454
    5. ' =' → logprob: -3.189178705215454
    6. ' ' → logprob: -3.439178705215454
    7. '=' → logprob: -3.564178705215454
    8. '   ' → logprob: -3.564178705215454
    9. 'Unit' → logprob: -4.439178466796875
    10. ',
' → logprob: -4.564178466796875

Token 2530: ' mass' (ID: 4842)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.2910763025283813
    2. '```' → logprob: -1.7910763025283813
    3. '[' → logprob: -2.166076183319092
    4. '0' → logprob: -2.541076183319092
    5. ' =' → logprob: -2.541076183319092
    6. ',' → logprob: -2.541076183319092
    7. '(' → logprob: -3.541076183319092
    8. '`' → logprob: -3.541076183319092
    9. '=' → logprob: -4.041076183319092
    10. ' (' → logprob: -4.416076183319092

Token 2531: '_i' (ID: 10853)
  Prédit: 'Unit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Unit' → logprob: -0.43148767948150635
    2. '```' → logprob: -2.556487560272217
    3. ' =' → logprob: -3.056487560272217
    4. '_i' → logprob: -3.181487560272217
    5. ' ' → logprob: -3.556487560272217
    6. '=' → logprob: -3.681487560272217
    7. ' *' → logprob: -3.931487560272217
    8. '_' → logprob: -4.181487560272217
    9. '[' → logprob: -4.431487560272217
    10. '*' → logprob: -4.556487560272217

Token 2532: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -1.3172672986984253
    2. 'Unit' → logprob: -1.3172672986984253
    3. '```' → logprob: -1.6922672986984253
    4. '=' → logprob: -2.692267417907715
    5. '_i' → logprob: -2.942267417907715
    6. ' ' → logprob: -3.942267417907715
    7. '`' → logprob: -4.317267417907715
    8. ' *' → logprob: -4.317267417907715
    9. '   ' → logprob: -4.567267417907715
    10. '_' → logprob: -4.567267417907715

Token 2533: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '2' → logprob: -0.7052290439605713
    2. 'a' → logprob: -0.7052290439605713
    3. '`' → logprob: -5.455228805541992
    4. '(' → logprob: -6.330228805541992
    5. '1' → logprob: -6.955228805541992
    6. '```' → logprob: -6.955228805541992
    7. '(a' → logprob: -7.080228805541992
    8. 'b' → logprob: -7.205228805541992
    9. 'weight' → logprob: -7.955228805541992
    10. ' a' → logprob: -8.205228805541992

Token 2534: '2' (ID: 17)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.061928242444992065
    2. '2' → logprob: -2.9369282722473145
    3. '```' → logprob: -6.3119282722473145
    4. 'b' → logprob: -6.5619282722473145
    5. '`' → logprob: -7.4369282722473145
    6. '0' → logprob: -7.5619282722473145
    7. '(' → logprob: -7.5619282722473145
    8. '{
' → logprob: -8.311927795410156
    9. '(a' → logprob: -8.311927795410156
    10. 'Weight' → logprob: -8.436927795410156

Token 2535: '^{' (ID: 42923)
  Prédit: '**'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '**' → logprob: -1.074824333190918
    2. '*' → logprob: -1.699824333190918
    3. '^' → logprob: -1.824824333190918
    4. ' *' → logprob: -2.074824333190918
    5. ',' → logprob: -2.699824333190918
    6. ' **' → logprob: -3.574824333190918
    7. '```' → logprob: -4.199824333190918
    8. '[' → logprob: -4.449824333190918
    9. '+' → logprob: -4.824824333190918
    10. ' ' → logprob: -5.199824333190918

Token 2536: 'a' (ID: 64)
  Prédit: 'a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.045020341873168945
    2. 'x' → logprob: -3.170020341873169
    3. '3' → logprob: -6.42002010345459
    4. '```' → logprob: -9.04502010345459
    5. 'b' → logprob: -9.79502010345459
    6. '(a' → logprob: -10.54502010345459
    7. '
' → logprob: -10.67002010345459
    8. '(' → logprob: -10.67002010345459
    9. '`' → logprob: -11.04502010345459
    10. '(x' → logprob: -11.17002010345459

Token 2537: '_i' (ID: 10853)
  Prédit: '_i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_i' → logprob: -0.04637492820620537
    2. '_' → logprob: -3.171375036239624
    3. '_x' → logprob: -6.046374797821045
    4. 'x' → logprob: -8.296375274658203
    5. '^' → logprob: -8.421375274658203
    6. '_
' → logprob: -9.171375274658203
    7. 'i' → logprob: -9.421375274658203
    8. '```' → logprob: -9.421375274658203
    9. ' _' → logprob: -9.546375274658203
    10. '}_' → logprob: -10.046375274658203

Token 2538: '}' (ID: 92)
  Prédit: '}'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '}' → logprob: -0.7427383065223694
    2. '_i' → logprob: -0.8677383065223694
    3. ',' → logprob: -3.7427382469177246
    4. '}_' → logprob: -3.7427382469177246
    5. '*' → logprob: -4.492738246917725
    6. ' *' → logprob: -4.617738246917725
    7. '_' → logprob: -4.742738246917725
    8. '```' → logprob: -4.867738246917725
    9. '_x' → logprob: -5.992738246917725
    10. ' _' → logprob: -6.117738246917725

Token 2539: ' *' (ID: 425)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '```' → logprob: -0.7342845797538757
    2. '[' → logprob: -1.3592846393585205
    3. ',' → logprob: -1.9842846393585205
    4. ')' → logprob: -3.4842846393585205
    5. ':' → logprob: -4.234284400939941
    6. '**' → logprob: -4.359284400939941
    7. '`' → logprob: -4.734284400939941
    8. '_' → logprob: -4.734284400939941
    9. '_i' → logprob: -5.109284400939941
    10. '[
' → logprob: -5.359284400939941

Token 2540: ' ' (ID: 220)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.0296847652643919
    2. 'y' → logprob: -4.029684543609619
    3. '2' → logprob: -4.529684543609619
    4. 'x' → logprob: -8.529685020446777
    5. '(' → logprob: -9.404685020446777
    6. ' ' → logprob: -9.654685020446777
    7. '^{' → logprob: -9.779685020446777
    8. '{' → logprob: -10.029685020446777
    9. '(b' → logprob: -10.029685020446777
    10. ' b' → logprob: -10.154685020446777

Token 2541: '2' (ID: 17)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.002251603174954653
    2. 'y' → logprob: -6.377251625061035
    3. 'x' → logprob: -8.502251625061035
    4. '2' → logprob: -9.502251625061035
    5. 'a' → logprob: -9.502251625061035
    6. '{' → logprob: -9.502251625061035
    7. '(b' → logprob: -9.627251625061035
    8. '0' → logprob: -11.502251625061035
    9. '(a' → logprob: -11.752251625061035
    10. '^{' → logprob: -11.752251625061035

Token 2542: '^{' (ID: 42923)
  Prédit: '^'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '^' → logprob: -0.2630024254322052
    2. '_' → logprob: -1.8880023956298828
    3. '```' → logprob: -4.013002395629883
    4. '**' → logprob: -4.388002395629883
    5. '_i' → logprob: -4.388002395629883
    6. '_x' → logprob: -4.763002395629883
    7. '_y' → logprob: -5.138002395629883
    8. 'y' → logprob: -5.888002395629883
    9. '`' → logprob: -6.138002395629883
    10. ',' → logprob: -6.263002395629883

Token 2543: 'b' (ID: 65)
  Prédit: 'b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.1774740070104599
    2. 'y' → logprob: -2.427474021911621
    3. 'x' → logprob: -2.802474021911621
    4. 'a' → logprob: -4.677474021911621
    5. '-' → logprob: -7.177474021911621
    6. '^{' → logprob: -7.427474021911621
    7. '{' → logprob: -7.427474021911621
    8. '(' → logprob: -7.927474021911621
    9. '0' → logprob: -7.927474021911621
    10. '(b' → logprob: -7.927474021911621

Token 2544: '_i' (ID: 10853)
  Prédit: '_i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_i' → logprob: -0.0662735253572464
    2. '^' → logprob: -2.9412734508514404
    3. '_' → logprob: -4.9412736892700195
    4. '_x' → logprob: -6.3162736892700195
    5. '}_' → logprob: -7.3162736892700195
    6. 'x' → logprob: -8.19127368927002
    7. '```' → logprob: -8.19127368927002
    8. '^{' → logprob: -8.31627368927002
    9. 'i' → logprob: -8.44127368927002
    10. ']_' → logprob: -9.19127368927002

Token 2545: '}' (ID: 92)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.8712912797927856
    2. '```' → logprob: -1.3712912797927856
    3. '}' → logprob: -2.371291160583496
    4. '^' → logprob: -2.871291160583496
    5. '[' → logprob: -2.996291160583496
    6. '_i' → logprob: -2.996291160583496
    7. ')' → logprob: -3.996291160583496
    8. '**' → logprob: -3.996291160583496
    9. '`' → logprob: -4.496291160583496
    10. ']' → logprob: -4.996291160583496

Token 2546: ' =' (ID: 314)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '```' → logprob: -0.7621461153030396
    2. '[' → logprob: -1.2621461153030396
    3. '**' → logprob: -2.76214599609375
    4. '^' → logprob: -2.88714599609375
    5. '`' → logprob: -3.51214599609375
    6. '[
' → logprob: -3.76214599609375
    7. '``' → logprob: -4.51214599609375
    8. '*' → logprob: -4.51214599609375
    9. '0' → logprob: -4.76214599609375
    10. ',' → logprob: -5.26214599609375

Token 2547: ' ' (ID: 220)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '```' → logprob: -0.5121529698371887
    2. '^' → logprob: -2.137152910232544
    3. '**' → logprob: -2.262152910232544
    4. '0' → logprob: -2.887152910232544
    5. '{' → logprob: -3.637152910232544
    6. ')' → logprob: -4.012153148651123
    7. '`' → logprob: -4.137153148651123
    8. '2' → logprob: -4.512153148651123
    9. '^{' → logprob: -4.887153148651123
    10. '[' → logprob: -5.262153148651123

Token 2548: '2' (ID: 17)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.0523003526031971
    2. 'x' → logprob: -4.177300453186035
    3. '2' → logprob: -4.302300453186035
    4. '^{' → logprob: -5.427300453186035
    5. '{' → logprob: -5.927300453186035
    6. '^' → logprob: -6.177300453186035
    7. '{
' → logprob: -6.302300453186035
    8. 'b' → logprob: -6.302300453186035
    9. '1' → logprob: -6.427300453186035
    10. '(a' → logprob: -6.427300453186035

Token 2549: '^{' (ID: 42923)
  Prédit: '^'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '^' → logprob: -0.2651059329509735
    2. '**' → logprob: -2.265105962753296
    3. '```' → logprob: -3.140105962753296
    4. '[' → logprob: -3.765105962753296
    5. '_' → logprob: -3.890105962753296
    6. '^{' → logprob: -4.640105724334717
    7. '`' → logprob: -5.390105724334717
    8. ',' → logprob: -5.390105724334717
    9. '[
' → logprob: -5.765105724334717
    10. ')' → logprob: -6.015105724334717

Token 2550: 'a' (ID: 64)
  Prédit: 'a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.10485684126615524
    2. 'x' → logprob: -2.3548567295074463
    3. '(a' → logprob: -6.354856967926025
    4. '0' → logprob: -6.729856967926025
    5. '(' → logprob: -7.604856967926025
    6. '}' → logprob: -7.979856967926025
    7. '
' → logprob: -8.604856491088867
    8. '...' → logprob: -9.604856491088867
    9. '_x' → logprob: -9.604856491088867
    10. ')' → logprob: -9.729856491088867

Token 2551: '_i' (ID: 10853)
  Prédit: '_i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_i' → logprob: -0.18481284379959106
    2. '^' → logprob: -2.5598127841949463
    3. '_' → logprob: -3.0598127841949463
    4. '_x' → logprob: -4.059813022613525
    5. '}' → logprob: -4.934813022613525
    6. '}_' → logprob: -5.059813022613525
    7. 'x' → logprob: -5.434813022613525
    8. '```' → logprob: -6.184813022613525
    9. '^{' → logprob: -6.559813022613525
    10. '**' → logprob: -6.934813022613525

Token 2552: ' +' (ID: 659)
  Prédit: '}'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '}' → logprob: -0.2070738524198532
    2. '}_' → logprob: -2.332073926925659
    3. '_i' → logprob: -3.957073926925659
    4. '+' → logprob: -3.957073926925659
    5. '^' → logprob: -4.08207368850708
    6. '_' → logprob: -4.08207368850708
    7. '```' → logprob: -5.20707368850708
    8. '}+' → logprob: -6.20707368850708
    9. '}`' → logprob: -6.33207368850708
    10. '^{' → logprob: -6.58207368850708

Token 2553: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -4.191489642835222e-05
    2. 'y' → logprob: -10.750041961669922
    3. ' b' → logprob: -11.125041961669922
    4. '```' → logprob: -13.625041961669922
    5. 'a' → logprob: -14.000041961669922
    6. 'x' → logprob: -14.125041961669922
    7. '
' → logprob: -14.125041961669922
    8. '}' → logprob: -14.875041961669922
    9. '...' → logprob: -15.000041961669922
    10. ' ' → logprob: -15.000041961669922

Token 2554: '_i' (ID: 10853)
  Prédit: '_i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_i' → logprob: -0.04314408823847771
    2. '_' → logprob: -3.9181439876556396
    3. '}_' → logprob: -4.168144226074219
    4. '}' → logprob: -5.168144226074219
    5. '_y' → logprob: -7.543144226074219
    6. '_j' → logprob: -8.418144226074219
    7. 'i' → logprob: -9.043144226074219
    8. '+' → logprob: -9.543144226074219
    9. '^' → logprob: -9.793144226074219
    10. '```' → logprob: -10.168144226074219

Token 2555: '}

' (ID: 943)
  Prédit: '}'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '}' → logprob: -0.1396295726299286
    2. '```' → logprob: -3.514629602432251
    3. ''' → logprob: -4.139629364013672
    4. '+' → logprob: -4.139629364013672
    5. '_' → logprob: -4.139629364013672
    6. '[' → logprob: -4.389629364013672
    7. '_i' → logprob: -4.514629364013672
    8. '`' → logprob: -4.889629364013672
    9. ']' → logprob: -5.264629364013672
    10. ')' → logprob: -5.639629364013672

Token 2556: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.3694539070129395
    2. '[' → logprob: -1.7444539070129395
    3. '[
' → logprob: -1.7444539070129395
    4. '```' → logprob: -1.7444539070129395
    5. ':' → logprob: -3.1194539070129395
    6. '
' → logprob: -3.2444539070129395
    7. '**' → logprob: -3.3694539070129395
    8. ',' → logprob: -3.7444539070129395
    9. '\n' → logprob: -3.9944539070129395
    10. 'class' → logprob: -5.2444539070129395

Token 2557: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8841944336891174
    2. '[' → logprob: -1.8841943740844727
    3. ':' → logprob: -2.0091943740844727
    4. '```' → logprob: -2.3841943740844727
    5. '[
' → logprob: -2.3841943740844727
    6. '**' → logprob: -3.5091943740844727
    7. ':
' → logprob: -3.8841943740844727
    8. ',' → logprob: -4.134194374084473
    9. '
' → logprob: -5.259194374084473
    10. '(' → logprob: -5.259194374084473

Token 2558: ' So' (ID: 2632)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -1.2558012008666992
    2. '   ' → logprob: -1.3808012008666992
    3. '```' → logprob: -1.8808012008666992
    4. ':
' → logprob: -2.505801200866699
    5. '**' → logprob: -2.630801200866699
    6. '[' → logprob: -3.005801200866699
    7. '[
' → logprob: -3.630801200866699
    8. '
' → logprob: -4.380801200866699
    9. '       ' → logprob: -4.630801200866699
    10. 'def' → logprob: -5.255801200866699

Token 2559: ' mass' (ID: 4842)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '```' → logprob: -0.5777590274810791
    2. '[' → logprob: -2.327759027481079
    3. '**' → logprob: -2.327759027481079
    4. '   ' → logprob: -2.952759027481079
    5. ':' → logprob: -3.202759027481079
    6. '^' → logprob: -3.452759027481079
    7. '`' → logprob: -3.702759027481079
    8. '[
' → logprob: -4.2027587890625
    9. ',' → logprob: -4.8277587890625
    10. '``' → logprob: -5.0777587890625

Token 2560: ' per' (ID: 777)
  Prédit: 'Unit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Unit' → logprob: -0.46618524193763733
    2. '_i' → logprob: -1.341185212135315
    3. '```' → logprob: -3.3411853313446045
    4. '_' → logprob: -3.8411853313446045
    5. 'i' → logprob: -4.466185092926025
    6. ' =' → logprob: -5.216185092926025
    7. '=' → logprob: -5.341185092926025
    8. ')' → logprob: -5.466185092926025
    9. ' ' → logprob: -5.716185092926025
    10. '`' → logprob: -5.841185092926025

Token 2561: ' chunk' (ID: 23958)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.362662672996521
    2. '_i' → logprob: -1.237662672996521
    3. 'i' → logprob: -5.4876627922058105
    4. '_chunk' → logprob: -5.7376627922058105
    5. ')' → logprob: -6.2376627922058105
    6. 'chunk' → logprob: -7.1126627922058105
    7. ' _' → logprob: -7.4876627922058105
    8. '`' → logprob: -7.7376627922058105
    9. '```' → logprob: -7.7376627922058105
    10. 'a' → logprob: -7.8626627922058105

Token 2562: ' is' (ID: 382)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '```' → logprob: -0.8135292530059814
    2. '   ' → logprob: -1.5635292530059814
    3. ':' → logprob: -1.9385292530059814
    4. '**' → logprob: -3.0635292530059814
    5. '
' → logprob: -3.4385292530059814
    6. '+' → logprob: -3.8135292530059814
    7. '[' → logprob: -3.9385292530059814
    8. '=' → logprob: -4.313529014587402
    9. ',' → logprob: -4.313529014587402
    10. ':
' → logprob: -4.813529014587402

Token 2563: ' ' (ID: 220)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.44475382566452026
    2. '2' → logprob: -2.069753885269165
    3. '**' → logprob: -3.194753885269165
    4. '```' → logprob: -3.319753885269165
    5. '`' → logprob: -3.569753885269165
    6. '+' → logprob: -3.694753885269165
    7. '0' → logprob: -3.819753885269165
    8. ')' → logprob: -4.319753646850586
    9. 'b' → logprob: -4.319753646850586
    10. '1' → logprob: -4.694753646850586

Token 2564: '2' (ID: 17)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.07723737508058548
    2. '0' → logprob: -3.702237367630005
    3. '2' → logprob: -4.077237606048584
    4. 'b' → logprob: -4.952237606048584
    5. '```' → logprob: -5.202237606048584
    6. '**' → logprob: -5.702237606048584
    7. '1' → logprob: -6.202237606048584
    8. '`' → logprob: -6.327237606048584
    9. '{' → logprob: -6.327237606048584
    10. '^{' → logprob: -6.327237606048584

Token 2565: '^{' (ID: 42923)
  Prédit: '^'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '^' → logprob: -0.22628210484981537
    2. '**' → logprob: -2.2262821197509766
    3. '^{' → logprob: -2.6012821197509766
    4. '```' → logprob: -4.351282119750977
    5. '_' → logprob: -5.601282119750977
    6. '`' → logprob: -6.976282119750977
    7. '#' → logprob: -7.226282119750977
    8. '
' → logprob: -7.601282119750977
    9. '[' → logprob: -8.101282119750977
    10. ')' → logprob: -8.351282119750977

Token 2566: 'a' (ID: 64)
  Prédit: 'a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.0038689509965479374
    2. 'x' → logprob: -6.37886905670166
    3. '
' → logprob: -7.62886905670166
    4. '(a' → logprob: -8.12886905670166
    5. '3' → logprob: -8.50386905670166
    6. ')' → logprob: -8.62886905670166
    7. '9' → logprob: -8.75386905670166
    8. '+' → logprob: -9.00386905670166
    9. '}' → logprob: -9.12886905670166
    10. '{
' → logprob: -9.62886905670166

Token 2567: '_i' (ID: 10853)
  Prédit: '_i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_i' → logprob: -0.01925957389175892
    2. '_' → logprob: -4.019259452819824
    3. '_
' → logprob: -8.019259452819824
    4. '^' → logprob: -8.519259452819824
    5. '```' → logprob: -8.519259452819824
    6. '}_' → logprob: -9.394259452819824
    7. '_x' → logprob: -9.394259452819824
    8. '`' → logprob: -10.019259452819824
    9. 'i' → logprob: -10.269259452819824
    10. '**' → logprob: -10.519259452819824

Token 2568: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.05352463573217392
    2. '}' → logprob: -3.5535247325897217
    3. '_' → logprob: -4.678524494171143
    4. ',' → logprob: -4.928524494171143
    5. '}_' → logprob: -6.678524494171143
    6. ' +' → logprob: -6.803524494171143
    7. '```' → logprob: -6.928524494171143
    8. '_i' → logprob: -7.178524494171143
    9. '}+' → logprob: -7.678524494171143
    10. '[' → logprob: -7.803524494171143

Token 2569: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.0002036595979006961
    2. 'a' → logprob: -8.875204086303711
    3. '_i' → logprob: -10.750204086303711
    4. '
' → logprob: -11.375204086303711
    5. '```' → logprob: -11.750204086303711
    6. ' b' → logprob: -12.000204086303711
    7. '_b' → logprob: -12.250204086303711
    8. '+' → logprob: -12.375204086303711
    9. '`' → logprob: -13.375204086303711
    10. 'i' → logprob: -13.750204086303711

Token 2570: '_i' (ID: 10853)
  Prédit: '_i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_i' → logprob: -0.00022678142704535276
    2. '_' → logprob: -9.500226974487305
    3. '_j' → logprob: -9.875226974487305
    4. '}_' → logprob: -10.375226974487305
    5. 'i' → logprob: -10.625226974487305
    6. ''_' → logprob: -10.750226974487305
    7. '_y' → logprob: -11.375226974487305
    8. '+' → logprob: -12.625226974487305
    9. '}' → logprob: -13.125226974487305
    10. 'y' → logprob: -13.750226974487305

Token 2571: '}.' (ID: 16255)
  Prédit: '}'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '}' → logprob: -0.8587824702262878
    2. '+' → logprob: -0.9837824702262878
    3. '_i' → logprob: -2.3587825298309326
    4. '_' → logprob: -3.1087825298309326
    5. '}_' → logprob: -4.1087822914123535
    6. '[' → logprob: -4.6087822914123535
    7. '```' → logprob: -4.9837822914123535
    8. '`' → logprob: -5.3587822914123535
    9. ' +' → logprob: -5.4837822914123535
    10. '+i' → logprob: -5.6087822914123535

Token 2572: ' So' (ID: 2632)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.40309667587280273
    2. ':' → logprob: -2.1530966758728027
    3. '```' → logprob: -2.6530966758728027
    4. '       ' → logprob: -3.1530966758728027
    5. '[' → logprob: -3.5280966758728027
    6. '[
' → logprob: -4.778096675872803
    7. 'class' → logprob: -5.028096675872803
    8. ':
' → logprob: -5.028096675872803
    9. '\n' → logprob: -5.278096675872803
    10. '#' → logprob: -5.278096675872803

Token 2573: ' mass' (ID: 4842)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '```' → logprob: -0.7211127281188965
    2. '+' → logprob: -2.0961127281188965
    3. '[' → logprob: -2.7211127281188965
    4. '#' → logprob: -2.8461127281188965
    5. '`' → logprob: -2.8461127281188965
    6. '**' → logprob: -3.4711127281188965
    7. '   ' → logprob: -3.4711127281188965
    8. ')' → logprob: -3.9711127281188965
    9. ' ' → logprob: -4.0961127281188965
    10. ':' → logprob: -4.2211127281188965

Token 2574: ' is' (ID: 382)
  Prédit: '_i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_i' → logprob: -0.42596399784088135
    2. '=' → logprob: -2.300963878631592
    3. '_' → logprob: -2.425963878631592
    4. '```' → logprob: -3.175963878631592
    5. 'i' → logprob: -3.675963878631592
    6. ' =' → logprob: -3.925963878631592
    7. ')' → logprob: -4.050963878631592
    8. '`' → logprob: -4.300963878631592
    9. 'Unit' → logprob: -4.550963878631592
    10. '
' → logprob: -5.675963878631592

Token 2575: ' just' (ID: 1327)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.009947441518306732
    2. 'b' → logprob: -6.134947299957275
    3. '`' → logprob: -6.509947299957275
    4. '```' → logprob: -6.509947299957275
    5. '2' → logprob: -6.884947299957275
    6. '^{' → logprob: -7.259947299957275
    7. 'sum' → logprob: -7.509947299957275
    8. '=' → logprob: -7.884947299957275
    9. '{
' → logprob: -8.009947776794434
    10. 'the' → logprob: -8.259947776794434

Token 2576: ' power' (ID: 3470)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.0029391907155513763
    2. '2' → logprob: -6.877939224243164
    3. '^{' → logprob: -7.752939224243164
    4. '`' → logprob: -8.002939224243164
    5. 'sum' → logprob: -8.252939224243164
    6. '{' → logprob: -8.627939224243164
    7. ' a' → logprob: -8.752939224243164
    8. 'b' → logprob: -9.252939224243164
    9. '{
' → logprob: -9.877939224243164
    10. '```' → logprob: -9.877939224243164

Token 2577: ' of' (ID: 328)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '```' → logprob: -0.551621675491333
    2. '   ' → logprob: -2.301621675491333
    3. '[' → logprob: -2.426621675491333
    4. ':' → logprob: -3.801621675491333
    5. '[
' → logprob: -3.801621675491333
    6. '+' → logprob: -3.801621675491333
    7. '_i' → logprob: -3.926621675491333
    8. 'Unit' → logprob: -4.301621437072754
    9. ',' → logprob: -4.426621437072754
    10. '
' → logprob: -4.426621437072754

Token 2578: ' ' (ID: 220)
  Prédit: 'two'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'two' → logprob: -0.6381478309631348
    2. '2' → logprob: -0.7631478309631348
    3. ' two' → logprob: -5.513147830963135
    4. '```' → logprob: -7.263147830963135
    5. '-two' → logprob: -7.888147830963135
    6. ' ' → logprob: -9.013147354125977
    7. '-' → logprob: -9.513147354125977
    8. 'Two' → logprob: -9.888147354125977
    9. '_two' → logprob: -10.138147354125977
    10. '`' → logprob: -10.638147354125977

Token 2579: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.2524821162223816
    2. 'two' → logprob: -1.5024821758270264
    3. ' two' → logprob: -8.127482414245605
    4. '```' → logprob: -8.502482414245605
    5. 'Two' → logprob: -10.377482414245605
    6. ' ' → logprob: -11.752482414245605
    7. '-two' → logprob: -12.752482414245605
    8. '``' → logprob: -12.877482414245605
    9. '_two' → logprob: -13.502482414245605
    10. '...' → logprob: -13.627482414245605

Token 2580: '.

' (ID: 364)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.9145384430885315
    2. '```' → logprob: -1.5395383834838867
    3. ':' → logprob: -2.5395383834838867
    4. '       ' → logprob: -2.7895383834838867
    5. '[' → logprob: -3.4145383834838867
    6. ',' → logprob: -3.4145383834838867
    7. '[
' → logprob: -4.039538383483887
    8. '**' → logprob: -4.164538383483887
    9. ')' → logprob: -4.164538383483887
    10. ']' → logprob: -4.289538383483887

Token 2581: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06044194474816322
    2. '```' → logprob: -4.185441970825195
    3. '       ' → logprob: -4.310441970825195
    4. 'class' → logprob: -4.435441970825195
    5. ':' → logprob: -4.685441970825195
    6. '
' → logprob: -5.685441970825195
    7. ',' → logprob: -6.560441970825195
    8. ':
' → logprob: -7.310441970825195
    9. ' class' → logprob: -8.060441970825195
    10. '...' → logprob: -8.185441970825195

Token 2582: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.31623679399490356
    2. ':' → logprob: -1.6912367343902588
    3. '       ' → logprob: -3.441236734390259
    4. '```' → logprob: -4.066236972808838
    5. ':
' → logprob: -4.441236972808838
    6. 'def' → logprob: -4.816236972808838
    7. '):' → logprob: -5.941236972808838
    8. ',' → logprob: -6.191236972808838
    9. '
' → logprob: -6.441236972808838
    10. ')' → logprob: -6.566236972808838

Token 2583: ' So' (ID: 2632)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.36833682656288147
    2. '       ' → logprob: -1.493336796760559
    3. ':' → logprob: -3.1183369159698486
    4. '           ' → logprob: -4.7433366775512695
    5. '```' → logprob: -5.1183366775512695
    6. ':
' → logprob: -5.4933366775512695
    7. 'class' → logprob: -5.8683366775512695
    8. 'def' → logprob: -6.1183366775512695
    9. '#' → logprob: -6.2433366775512695
    10. '...' → logprob: -6.3683366775512695

Token 2584: ' input' (ID: 3422)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '```' → logprob: -1.0025006532669067
    2. '   ' → logprob: -1.5025006532669067
    3. ':' → logprob: -1.7525006532669067
    4. '[' → logprob: -3.127500534057617
    5. 'class' → logprob: -3.127500534057617
    6. '**' → logprob: -3.252500534057617
    7. '#' → logprob: -4.002500534057617
    8. '`' → logprob: -4.502500534057617
    9. '(' → logprob: -4.502500534057617
    10. 'def' → logprob: -4.877500534057617

Token 2585: ' lines' (ID: 8698)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -1.463072419166565
    2. '```' → logprob: -1.588072419166565
    3. ':' → logprob: -1.963072419166565
    4. ',' → logprob: -2.8380722999572754
    5. '   ' → logprob: -3.2130722999572754
    6. '**' → logprob: -3.3380722999572754
    7. '#' → logprob: -3.3380722999572754
    8. '`' → logprob: -3.7130722999572754
    9. 'class' → logprob: -3.7130722999572754
    10. ']' → logprob: -3.8380722999572754

Token 2586: ' give' (ID: 3644)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '```' → logprob: -0.46287110447883606
    2. ':' → logprob: -2.7128710746765137
    3. '[' → logprob: -2.7128710746765137
    4. '   ' → logprob: -3.0878710746765137
    5. ',' → logprob: -3.2128710746765137
    6. '**' → logprob: -4.087871074676514
    7. '[
' → logprob: -4.087871074676514
    8. '=' → logprob: -4.087871074676514
    9. ' =' → logprob: -4.212871074676514
    10. '``' → logprob: -4.212871074676514

Token 2587: ' ex' (ID: 513)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.9612311720848083
    2. '```' → logprob: -1.8362312316894531
    3. '   ' → logprob: -2.211231231689453
    4. ' a' → logprob: -2.461231231689453
    5. ' (' → logprob: -2.711231231689453
    6. '(' → logprob: -3.461231231689453
    7. ' ' → logprob: -3.711231231689453
    8. '2' → logprob: -3.961231231689453
    9. '...' → logprob: -4.461231231689453
    10. '1' → logprob: -4.461231231689453

Token 2588: 'ponents' (ID: 4331)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '```' → logprob: -1.1189157962799072
    2. 'p' → logprob: -1.4939157962799072
    3. 'ponent' → logprob: -1.4939157962799072
    4. '^' → logprob: -2.1189157962799072
    5. 'ponents' → logprob: -3.3689157962799072
    6. '``' → logprob: -4.743915557861328
    7. '+' → logprob: -4.868915557861328
    8. '[' → logprob: -5.118915557861328
    9. 'a' → logprob: -5.118915557861328
    10. '**' → logprob: -5.368915557861328

Token 2589: ' a' (ID: 261)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -1.1438897848129272
    2. '   ' → logprob: -1.3938897848129272
    3. '+' → logprob: -1.7688897848129272
    4. ',' → logprob: -2.893889904022217
    5. '=' → logprob: -3.018889904022217
    6. '```' → logprob: -3.393889904022217
    7. '       ' → logprob: -3.643889904022217
    8. ')' → logprob: -4.143889904022217
    9. '):' → logprob: -4.893889904022217
    10. '**' → logprob: -4.893889904022217

Token 2590: '_i' (ID: 10853)
  Prédit: '_i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_i' → logprob: -0.46969863772392273
    2. '_' → logprob: -1.8446986675262451
    3. ',' → logprob: -2.094698667526245
    4. ')' → logprob: -3.719698667526245
    5. '```' → logprob: -4.219698429107666
    6. ':' → logprob: -4.594698429107666
    7. '=' → logprob: -5.094698429107666
    8. '**' → logprob: -5.219698429107666
    9. '_n' → logprob: -5.344698429107666
    10. '   ' → logprob: -5.719698429107666

Token 2591: ',b' (ID: 17568)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.8834415674209595
    2. '_' → logprob: -2.25844144821167
    3. ')' → logprob: -2.50844144821167
    4. '[' → logprob: -2.50844144821167
    5. '```' → logprob: -2.63344144821167
    6. '+' → logprob: -3.13344144821167
    7. '=' → logprob: -3.13344144821167
    8. ':' → logprob: -3.25844144821167
    9. '_i' → logprob: -3.38344144821167
    10. '**' → logprob: -4.00844144821167

Token 2592: '_i' (ID: 10853)
  Prédit: '_i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_i' → logprob: -0.5496277809143066
    2. '_' → logprob: -1.6746277809143066
    3. '```' → logprob: -2.2996277809143066
    4. '[' → logprob: -2.6746277809143066
    5. '**' → logprob: -3.9246277809143066
    6. '`' → logprob: -4.799627780914307
    7. ')' → logprob: -5.299627780914307
    8. '``' → logprob: -5.549627780914307
    9. '+' → logprob: -5.799627780914307
    10. ':' → logprob: -5.799627780914307

Token 2593: '.

' (ID: 364)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -1.3153514862060547
    2. '+' → logprob: -1.4403514862060547
    3. '```' → logprob: -1.9403514862060547
    4. ',' → logprob: -2.6903514862060547
    5. '**' → logprob: -2.9403514862060547
    6. '[' → logprob: -3.0653514862060547
    7. '   ' → logprob: -3.0653514862060547
    8. '=' → logprob: -3.8153514862060547
    9. ')' → logprob: -4.065351486206055
    10. '*' → logprob: -4.440351486206055

Token 2594: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.45954400300979614
    2. ':' → logprob: -1.4595439434051514
    3. ':
' → logprob: -3.3345439434051514
    4. '
' → logprob: -3.9595439434051514
    5. '```' → logprob: -4.2095441818237305
    6. 'class' → logprob: -4.8345441818237305
    7. '**' → logprob: -4.8345441818237305
    8. '       ' → logprob: -4.8345441818237305
    9. ',' → logprob: -4.9595441818237305
    10. '=' → logprob: -5.4595441818237305

Token 2595: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.40461838245391846
    2. ':' → logprob: -1.6546183824539185
    3. ':
' → logprob: -2.779618263244629
    4. '       ' → logprob: -4.279618263244629
    5. '```' → logprob: -4.404618263244629
    6. '
' → logprob: -4.779618263244629
    7. 'class' → logprob: -4.779618263244629
    8. '**' → logprob: -5.029618263244629
    9. ',' → logprob: -5.154618263244629
    10. 'def' → logprob: -5.779618263244629

Token 2596: ' Sample' (ID: 31073)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -1.0675990581512451
    2. '       ' → logprob: -1.3175990581512451
    3. '   ' → logprob: -1.8175990581512451
    4. '```' → logprob: -2.817599058151245
    5. '):' → logprob: -3.567599058151245
    6. ':
' → logprob: -3.817599058151245
    7. '**' → logprob: -3.942599058151245
    8. ')' → logprob: -4.567599296569824
    9. '           ' → logprob: -4.567599296569824
    10. '):
' → logprob: -4.942599296569824

Token 2597: ' input' (ID: 3422)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '```' → logprob: -0.45673081278800964
    2. '_i' → logprob: -2.081730842590332
    3. '=' → logprob: -3.331730842590332
    4. ':' → logprob: -3.456730842590332
    5. 'i' → logprob: -3.456730842590332
    6. '   ' → logprob: -3.831730842590332
    7. '``' → logprob: -4.206730842590332
    8. '**' → logprob: -4.456730842590332
    9. '#' → logprob: -4.581730842590332
    10. '`' → logprob: -4.956730842590332

Token 2598: ' ' (ID: 220)
  Prédit: '3'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '3' → logprob: -1.2589679956436157
    2. '```' → logprob: -1.7589679956436157
    3. '=' → logprob: -2.133967876434326
    4. ':' → logprob: -2.508967876434326
    5. ',' → logprob: -2.508967876434326
    6. '2' → logprob: -3.258967876434326
    7. 'a' → logprob: -3.508967876434326
    8. ' =' → logprob: -3.758967876434326
    9. '...' → logprob: -3.758967876434326
    10. '1' → logprob: -3.883967876434326

Token 2599: '1' (ID: 16)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.7981117963790894
    2. '=' → logprob: -1.9231117963790894
    3. '   ' → logprob: -2.423111915588379
    4. ',' → logprob: -3.048111915588379
    5. '```' → logprob: -3.048111915588379
    6. '#' → logprob: -3.173111915588379
    7. '2' → logprob: -4.048111915588379
    8. '3' → logprob: -4.173111915588379
    9. '...' → logprob: -4.173111915588379
    10. 'a' → logprob: -4.173111915588379

Token 2600: ':

' (ID: 1402)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.41966357827186584
    2. '```' → logprob: -2.794663667678833
    3. '=' → logprob: -3.044663667678833
    4. '2' → logprob: -3.044663667678833
    5. '10' → logprob: -3.419663667678833
    6. '3' → logprob: -3.669663667678833
    7. '   ' → logprob: -4.044663429260254
    8. '...' → logprob: -4.169663429260254
    9. 'a' → logprob: -4.544663429260254
    10. '[' → logprob: -4.794663429260254

Token 2601: '       ' (ID: 309)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -1.2967851161956787
    2. '2' → logprob: -2.1717851161956787
    3. '```' → logprob: -2.1717851161956787
    4. '3' → logprob: -2.5467851161956787
    5. ':' → logprob: -2.5467851161956787
    6. '1' → logprob: -2.7967851161956787
    7. '   ' → logprob: -3.0467851161956787
    8. ' ' → logprob: -3.1717851161956787
    9. '4' → logprob: -3.5467851161956787
    10. ')' → logprob: -3.5467851161956787

Token 2602: ' #' (ID: 1069)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -1.5186554193496704
    2. '```' → logprob: -1.7686554193496704
    3. '   ' → logprob: -2.018655300140381
    4. '0' → logprob: -2.643655300140381
    5. 'a' → logprob: -2.643655300140381
    6. '       ' → logprob: -3.018655300140381
    7. '2' → logprob: -3.143655300140381
    8. ',' → logprob: -3.518655300140381
    9. '...' → logprob: -3.643655300140381
    10. '[' → logprob: -4.018655300140381

Token 2603: ' ' (ID: 220)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -1.049267053604126
    2. '```' → logprob: -1.799267053604126
    3. '   ' → logprob: -2.424267053604126
    4. ',' → logprob: -2.674267053604126
    5. '[' → logprob: -2.924267053604126
    6. '**' → logprob: -3.299267053604126
    7. ' ' → logprob: -3.424267053604126
    8. '=' → logprob: -3.549267053604126
    9. '0' → logprob: -3.674267053604126
    10. ')' → logprob: -3.924267053604126

Token 2604: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -1.3312201499938965
    2. '2' → logprob: -1.8312201499938965
    3. '0' → logprob: -1.9562201499938965
    4. ':' → logprob: -2.4562201499938965
    5. '```' → logprob: -2.7062201499938965
    6. ',' → logprob: -2.8312201499938965
    7. '1' → logprob: -2.9562201499938965
    8. '4' → logprob: -3.3312201499938965
    9. '=' → logprob: -4.0812201499938965
    10. '7' → logprob: -4.2062201499938965

Token 2605: '
' (ID: 198)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '```' → logprob: -0.42521753907203674
    2. ' ' → logprob: -2.550217628479004
    3. '0' → logprob: -2.925217628479004
    4. '   ' → logprob: -3.300217628479004
    5. ',' → logprob: -3.550217628479004
    6. ')' → logprob: -4.050217628479004
    7. '2' → logprob: -4.050217628479004
    8. '3' → logprob: -4.300217628479004
    9. '**' → logprob: -4.300217628479004
    10. '=' → logprob: -4.300217628479004

Token 2606: '       ' (ID: 309)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.6367829442024231
    2. '```' → logprob: -2.0117828845977783
    3. '   ' → logprob: -2.1367828845977783
    4. ',' → logprob: -3.0117828845977783
    5. '2' → logprob: -3.3867828845977783
    6. ' ,' → logprob: -3.5117828845977783
    7. '3' → logprob: -4.011783123016357
    8. '...' → logprob: -4.011783123016357
    9. '1' → logprob: -4.636783123016357
    10. '0' → logprob: -4.761783123016357

Token 2607: ' #' (ID: 1069)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.2700487971305847
    2. '0' → logprob: -2.3950488567352295
    3. ',' → logprob: -3.1450488567352295
    4. ' ,' → logprob: -3.2700488567352295
    5. '```' → logprob: -3.5200488567352295
    6. '1' → logprob: -4.02004861831665
    7. '2' → logprob: -5.64504861831665
    8. '3' → logprob: -6.14504861831665
    9. '...' → logprob: -6.39504861831665
    10. '   ' → logprob: -6.64504861831665

Token 2608: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -1.581809639930725
    2. '3' → logprob: -1.706809639930725
    3. '1' → logprob: -1.831809639930725
    4. '0' → logprob: -1.956809639930725
    5. ' ' → logprob: -2.0818095207214355
    6. '```' → logprob: -2.0818095207214355
    7. '4' → logprob: -3.9568095207214355
    8. '   ' → logprob: -4.5818095207214355
    9. 'a' → logprob: -4.9568095207214355
    10. '``' → logprob: -5.4568095207214355

Token 2609: '2' (ID: 17)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.22138184309005737
    2. '2' → logprob: -1.8463819026947021
    3. '3' → logprob: -3.596381902694702
    4. '0' → logprob: -4.721381664276123
    5. '```' → logprob: -6.096381664276123
    6. '   ' → logprob: -6.846381664276123
    7. '``' → logprob: -7.721381664276123
    8. ' ' → logprob: -8.471382141113281
    9. 'a' → logprob: -8.721382141113281
    10. '4' → logprob: -8.971382141113281

Token 2610: ' ' (ID: 220)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '```' → logprob: -1.5945013761520386
    2. '0' → logprob: -1.8445013761520386
    3. '   ' → logprob: -2.094501495361328
    4. ':' → logprob: -2.469501495361328
    5. '=' → logprob: -2.719501495361328
    6. ' ' → logprob: -2.969501495361328
    7. ' =' → logprob: -2.969501495361328
    8. '(' → logprob: -3.969501495361328
    9. '2' → logprob: -3.969501495361328
    10. 'def' → logprob: -3.969501495361328

Token 2611: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.8560053110122681
    2. '0' → logprob: -1.731005311012268
    3. ' ' → logprob: -1.731005311012268
    4. '3' → logprob: -1.856005311012268
    5. '2' → logprob: -3.3560051918029785
    6. ',' → logprob: -4.7310051918029785
    7. '5' → logprob: -5.4810051918029785
    8. '4' → logprob: -5.7310051918029785
    9. ')' → logprob: -6.2310051918029785
    10. '```' → logprob: -6.2310051918029785

Token 2612: ' ' (ID: 220)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '```' → logprob: -1.501116156578064
    2. '3' → logprob: -1.751116156578064
    3. '
' → logprob: -1.876116156578064
    4. '0' → logprob: -2.2511162757873535
    5. '2' → logprob: -3.1261162757873535
    6. '+
' → logprob: -3.3761162757873535
    7. '   ' → logprob: -3.5011162757873535
    8. '\n' → logprob: -3.6261162757873535
    9. '+' → logprob: -3.6261162757873535
    10. '``' → logprob: -4.0011162757873535

Token 2613: ' ->' (ID: 2747)
  Prédit: '3'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '3' → logprob: -0.8405799865722656
    2. '0' → logprob: -1.7155799865722656
    3. '```' → logprob: -2.4655799865722656
    4. '2' → logprob: -2.5905799865722656
    5. '1' → logprob: -3.2155799865722656
    6. ' ' → logprob: -3.3405799865722656
    7. '   ' → logprob: -3.7155799865722656
    8. '*' → logprob: -3.7155799865722656
    9. '+' → logprob: -4.090579986572266
    10. '+
' → logprob: -4.465579986572266

Token 2614: ' mass' (ID: 4842)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.26880398392677307
    2. '2' → logprob: -2.8938040733337402
    3. '1' → logprob: -3.1438040733337402
    4. '```' → logprob: -3.2688040733337402
    5. '3' → logprob: -3.5188040733337402
    6. '``' → logprob: -3.8938040733337402
    7. '
' → logprob: -4.26880407333374
    8. '\n' → logprob: -4.51880407333374
    9. ' ' → logprob: -5.26880407333374
    10. '  
' → logprob: -5.39380407333374

Token 2615: ' =' (ID: 314)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '```' → logprob: -0.5981369614601135
    2. ')' → logprob: -1.8481369018554688
    3. '+' → logprob: -2.8481369018554688
    4. ')
' → logprob: -3.4731369018554688
    5. '*' → logprob: -3.5981369018554688
    6. '2' → logprob: -3.8481369018554688
    7. '``' → logprob: -4.223136901855469
    8. ':' → logprob: -4.223136901855469
    9. '
' → logprob: -4.473136901855469
    10. '=' → logprob: -4.473136901855469

Token 2616: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '2' → logprob: -0.07672611624002457
    2. '1' → logprob: -3.701726198196411
    3. '3' → logprob: -3.826726198196411
    4. '0' → logprob: -5.326725959777832
    5. '9' → logprob: -5.326725959777832
    6. '```' → logprob: -5.826725959777832
    7. '10' → logprob: -5.951725959777832
    8. '(' → logprob: -5.951725959777832
    9. '^{' → logprob: -6.576725959777832
    10. '^' → logprob: -6.576725959777832

Token 2617: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.03621167317032814
    2. '3' → logprob: -4.6612114906311035
    3. '1' → logprob: -4.7862114906311035
    4. '9' → logprob: -5.6612114906311035
    5. '(' → logprob: -6.0362114906311035
    6. 'a' → logprob: -6.0362114906311035
    7. '^{' → logprob: -6.5362114906311035
    8. '{' → logprob: -6.9112114906311035
    9. '```' → logprob: -6.9112114906311035
    10. '0' → logprob: -6.9112114906311035

Token 2618: '^{' (ID: 42923)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '2' → logprob: -1.6200758218765259
    2. '+' → logprob: -2.1200757026672363
    3. '3' → logprob: -2.2450757026672363
    4. ' ' → logprob: -2.3700757026672363
    5. '```' → logprob: -2.3700757026672363
    6. '0' → logprob: -2.6200757026672363
    7. '*' → logprob: -2.6200757026672363
    8. '1' → logprob: -2.9950757026672363
    9. ')' → logprob: -3.3700757026672363
    10. ',' → logprob: -3.8700757026672363

Token 2619: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0047990381717681885
    2. '(' → logprob: -5.629798889160156
    3. '3' → logprob: -7.129798889160156
    4. 'a' → logprob: -8.379798889160156
    5. '1' → logprob: -9.254798889160156
    6. '(a' → logprob: -10.879798889160156
    7. ' (' → logprob: -11.504798889160156
    8. '0' → logprob: -11.629798889160156
    9. '```' → logprob: -12.004798889160156
    10. ' ' → logprob: -12.004798889160156

Token 2620: '+' (ID: 10)
  Prédit: '}'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '}' → logprob: -0.6462889909744263
    2. ' ' → logprob: -1.0212889909744263
    3. ' }' → logprob: -2.5212888717651367
    4. '1' → logprob: -4.021288871765137
    5. '
' → logprob: -5.146288871765137
    6. '+' → logprob: -5.396288871765137
    7. ',' → logprob: -6.021288871765137
    8. '0' → logprob: -7.021288871765137
    9. '}
' → logprob: -7.271288871765137
    10. '```' → logprob: -7.271288871765137

Token 2621: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.000545526563655585
    2. ' ' → logprob: -7.750545501708984
    3. '0' → logprob: -9.750545501708984
    4. '3' → logprob: -10.625545501708984
    5. '2' → logprob: -11.375545501708984
    6. '```' → logprob: -12.125545501708984
    7. '   ' → logprob: -12.500545501708984
    8. '`' → logprob: -12.500545501708984
    9. '
' → logprob: -13.250545501708984
    10. '(' → logprob: -13.875545501708984

Token 2622: '}' (ID: 92)
  Prédit: '}'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '}' → logprob: -0.08164424449205399
    2. '}
' → logprob: -2.581644296646118
    3. '+' → logprob: -7.081644058227539
    4. '```' → logprob: -7.331644058227539
    5. '}`' → logprob: -7.831644058227539
    6. '}\' → logprob: -8.581644058227539
    7. '}
' → logprob: -8.956644058227539
    8. ' }' → logprob: -9.206644058227539
    9. '``' → logprob: -9.331644058227539
    10. '`}' → logprob: -10.081644058227539

Token 2623: ' =' (ID: 314)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.6060366630554199
    2. '```' → logprob: -1.60603666305542
    3. '   ' → logprob: -2.23103666305542
    4. '[' → logprob: -3.60603666305542
    5. '+
' → logprob: -3.60603666305542
    6. '       ' → logprob: -3.98103666305542
    7. '``' → logprob: -4.35603666305542
    8. ' +' → logprob: -4.48103666305542
    9. ':' → logprob: -4.85603666305542
    10. '**' → logprob: -4.85603666305542

Token 2624: ' ' (ID: 220)
  Prédit: '3'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.0010410251561552286
    2. ''' → logprob: -7.626040935516357
    3. ' ' → logprob: -8.126041412353516
    4. '4' → logprob: -9.251041412353516
    5. '\' → logprob: -10.376041412353516
    6. '`' → logprob: -10.626041412353516
    7. '0' → logprob: -10.626041412353516
    8. '2' → logprob: -11.001041412353516
    9. ''\' → logprob: -11.251041412353516
    10. '1' → logprob: -11.376041412353516

Token 2625: '2' (ID: 17)
  Prédit: '3'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.0006301135290414095
    2. ''' → logprob: -7.500629901885986
    3. '0' → logprob: -10.875630378723145
    4. '`' → logprob: -10.875630378723145
    5. '2' → logprob: -12.000630378723145
    6. '1' → logprob: -12.000630378723145
    7. '```' → logprob: -12.250630378723145
    8. '"' → logprob: -12.375630378723145
    9. ''\' → logprob: -12.750630378723145
    10. ' ' → logprob: -12.875630378723145

Token 2626: '^' (ID: 61)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.4698996841907501
    2. '3' → logprob: -2.0948996543884277
    3. '0' → logprob: -2.4698996543884277
    4. '**' → logprob: -3.3448996543884277
    5. ' +' → logprob: -3.4698996543884277
    6. '^{' → logprob: -4.094899654388428
    7. '1' → logprob: -4.344899654388428
    8. '```' → logprob: -4.469899654388428
    9. '4' → logprob: -4.594899654388428
    10. '2' → logprob: -4.594899654388428

Token 2627: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -1.1756367712223437e-05
    2. '(' → logprob: -11.875011444091797
    3. ' ' → logprob: -13.250011444091797
    4. ''' → logprob: -14.500011444091797
    5. '```' → logprob: -14.500011444091797
    6. '`' → logprob: -14.625011444091797
    7. '2' → logprob: -14.625011444091797
    8. '0' → logprob: -15.125011444091797
    9. '
' → logprob: -16.375011444091797
    10. '{' → logprob: -16.375011444091797

Token 2628: ' =' (ID: 314)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '```' → logprob: -0.22726719081401825
    2. '   ' → logprob: -2.852267265319824
    3. '+' → logprob: -3.602267265319824
    4. '``' → logprob: -3.852267265319824
    5. '+
' → logprob: -4.352267265319824
    6. ':' → logprob: -4.727267265319824
    7. '       ' → logprob: -4.977267265319824
    8. '\n' → logprob: -4.977267265319824
    9. '**' → logprob: -4.977267265319824
    10. '
' → logprob: -5.227267265319824

Token 2629: '8' (ID: 23)
  Prédit: '3'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '3' → logprob: -0.0074596768245100975
    2. '4' → logprob: -6.13245964050293
    3. '1' → logprob: -6.63245964050293
    4. '2' → logprob: -6.88245964050293
    5. ' ' → logprob: -7.13245964050293
    6. '`' → logprob: -7.63245964050293
    7. '```' → logprob: -7.75745964050293
    8. ''' → logprob: -8.13245964050293
    9. '0' → logprob: -8.63245964050293
    10. '\' → logprob: -8.88245964050293

Token 2630: '
' (ID: 198)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '```' → logprob: -0.5828781127929688
    2. '   ' → logprob: -1.7078781127929688
    3. '
' → logprob: -2.3328781127929688
    4. ' ' → logprob: -3.8328781127929688
    5. '+
' → logprob: -3.8328781127929688
    6. '+' → logprob: -3.9578781127929688
    7. '\n' → logprob: -4.332878112792969
    8. '``' → logprob: -4.457878112792969
    9. '`' → logprob: -4.832878112792969
    10. '\' → logprob: -4.957878112792969

Token 2631: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.622846782207489
    2. '```' → logprob: -1.2478468418121338
    3. '+' → logprob: -2.997846841812134
    4. ' ' → logprob: -3.997846841812134
    5. '2' → logprob: -4.122846603393555
    6. ' +' → logprob: -4.372846603393555
    7. '       ' → logprob: -4.622846603393555
    8. '+
' → logprob: -4.872846603393555
    9. '<|end|>' → logprob: -4.872846603393555
    10. '3' → logprob: -4.997846603393555

Token 2632: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6317621469497681
    2. '```' → logprob: -1.631762146949768
    3. '       ' → logprob: -2.5067620277404785
    4. '+' → logprob: -2.6317620277404785
    5. ':' → logprob: -4.2567620277404785
    6. ' +' → logprob: -4.6317620277404785
    7. '+
' → logprob: -4.7567620277404785
    8. '[' → logprob: -4.7567620277404785
    9. ')' → logprob: -5.0067620277404785
    10. ',' → logprob: -5.1317620277404785

Token 2633: ' ' (ID: 220)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '```' → logprob: -0.1803397536277771
    2. '       ' → logprob: -2.680339813232422
    3. '   ' → logprob: -3.430339813232422
    4. '``' → logprob: -3.930339813232422
    5. ':' → logprob: -5.430339813232422
    6. '           ' → logprob: -5.430339813232422
    7. '0' → logprob: -5.555339813232422
    8. ')' → logprob: -5.555339813232422
    9. '[' → logprob: -5.805339813232422
    10. '"""
' → logprob: -6.055339813232422

Token 2634: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.2642053365707397
    2. '   ' → logprob: -1.2642053365707397
    3. '3' → logprob: -2.1392054557800293
    4. ' ' → logprob: -2.2642054557800293
    5. '```' → logprob: -2.3892054557800293
    6. '0' → logprob: -3.5142054557800293
    7. '2' → logprob: -3.5142054557800293
    8. '       ' → logprob: -3.5142054557800293
    9. ' b' → logprob: -4.639205455780029
    10. '4' → logprob: -5.264205455780029

Token 2635: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.1316930055618286
    2. ' ' → logprob: -1.3816930055618286
    3. '2' → logprob: -1.8816930055618286
    4. '1' → logprob: -2.381692886352539
    5. '3' → logprob: -2.506692886352539
    6. '```' → logprob: -2.756692886352539
    7. '
' → logprob: -5.881692886352539
    8. '#' → logprob: -6.131692886352539
    9. '8' → logprob: -6.131692886352539
    10. '   ' → logprob: -6.131692886352539

Token 2636: '3' (ID: 18)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.8535507321357727
    2. '3' → logprob: -0.9785507321357727
    3. '0' → logprob: -2.728550672531128
    4. '```' → logprob: -3.103550672531128
    5. '2' → logprob: -3.478550672531128
    6. '1' → logprob: -3.728550672531128
    7. '   ' → logprob: -4.978550910949707
    8. ':' → logprob: -5.478550910949707
    9. ',' → logprob: -5.603550910949707
    10. ')' → logprob: -5.603550910949707

Token 2637: ' ' (ID: 220)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '```' → logprob: -1.2833199501037598
    2. '   ' → logprob: -1.4083199501037598
    3. ' ' → logprob: -1.5333199501037598
    4. '<|end|>' → logprob: -2.2833199501037598
    5. '    ' → logprob: -4.03331995010376
    6. '       ' → logprob: -4.03331995010376
    7. '2' → logprob: -4.15831995010376
    8. ')' → logprob: -4.53331995010376
    9. '<|end|>' → logprob: -4.53331995010376
    10. '
' → logprob: -4.90831995010376

Token 2638: ' ->' (ID: 2747)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 2639: ' mass' (ID: 4842)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.9304872751235962
    2. '2' → logprob: -1.3054872751235962
    3. '```' → logprob: -2.0554871559143066
    4. ' ' → logprob: -2.8054871559143066
    5. '   ' → logprob: -2.9304871559143066
    6. '``' → logprob: -4.180487155914307
    7. '4' → logprob: -4.680487155914307
    8. '3' → logprob: -4.680487155914307
    9. '0' → logprob: -4.805487155914307
    10. '       ' → logprob: -4.930487155914307

Token 2640: ' =' (ID: 314)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '```' → logprob: -0.8024900555610657
    2. '2' → logprob: -1.927489995956421
    3. ' ' → logprob: -1.927489995956421
    4. '1' → logprob: -2.052489995956421
    5. '   ' → logprob: -3.802489995956421
    6. '``' → logprob: -4.177490234375
    7. '+' → logprob: -4.427490234375
    8. '
' → logprob: -4.427490234375
    9. '\n' → logprob: -4.927490234375
    10. '^' → logprob: -4.927490234375

Token 2641: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.5953177809715271
    2. '2' → logprob: -1.5953178405761719
    3. '4' → logprob: -2.345317840576172
    4. '3' → logprob: -2.470317840576172
    5. '```' → logprob: -3.220317840576172
    6. '8' → logprob: -4.970317840576172
    7. ' ' → logprob: -5.220317840576172
    8. '5' → logprob: -5.220317840576172
    9. '``' → logprob: -5.720317840576172
    10. '0' → logprob: -6.470317840576172

Token 2642: '2' (ID: 17)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.40644049644470215
    2. '2' → logprob: -1.6564404964447021
    3. '3' → logprob: -2.156440496444702
    4. '4' → logprob: -4.031440734863281
    5. '0' → logprob: -5.281440734863281
    6. '```' → logprob: -5.781440734863281
    7. '``' → logprob: -7.906440734863281
    8. '`' → logprob: -7.906440734863281
    9. '{' → logprob: -9.031440734863281
    10. '5' → logprob: -9.031440734863281

Token 2643: '^{' (ID: 42923)
  Prédit: '3'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.8133309483528137
    2. '^' → logprob: -0.9383309483528137
    3. '4' → logprob: -2.938330888748169
    4. '+' → logprob: -2.938330888748169
    5. '^{' → logprob: -3.313330888748169
    6. '1' → logprob: -4.313331127166748
    7. '```' → logprob: -5.563331127166748
    8. '2' → logprob: -6.438331127166748
    9. '5' → logprob: -6.563331127166748
    10. '**' → logprob: -6.813331127166748

Token 2644: '1' (ID: 16)
  Prédit: '3'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.44142329692840576
    2. '4' → logprob: -1.3164232969284058
    3. '1' → logprob: -2.4414234161376953
    4. '```' → logprob: -7.941423416137695
    5. '2' → logprob: -8.066423416137695
    6. '0' → logprob: -8.191423416137695
    7. '(' → logprob: -8.566423416137695
    8. '
' → logprob: -9.191423416137695
    9. 'b' → logprob: -9.441423416137695
    10. '`' → logprob: -9.441423416137695

Token 2645: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0015536671271547675
    2. '+
' → logprob: -7.501553535461426
    3. '3' → logprob: -7.751553535461426
    4. '4' → logprob: -8.376553535461426
    5. ' +' → logprob: -8.376553535461426
    6. '```' → logprob: -10.126553535461426
    7. '}+' → logprob: -10.501553535461426
    8. '}' → logprob: -12.001553535461426
    9. '^' → logprob: -12.376553535461426
    10. '6' → logprob: -12.751553535461426

Token 2646: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.345169335603714
    2. '4' → logprob: -2.3451693058013916
    3. '2' → logprob: -2.3451693058013916
    4. '1' → logprob: -2.4701693058013916
    5. '0' → logprob: -4.720169544219971
    6. '```' → logprob: -5.470169544219971
    7. '5' → logprob: -6.720169544219971
    8. '`' → logprob: -7.845169544219971
    9. '``' → logprob: -7.845169544219971
    10. '6' → logprob: -9.720169067382812

Token 2647: '}' (ID: 92)
  Prédit: '}'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '}' → logprob: -0.05204326659440994
    2. '```' → logprob: -3.9270431995391846
    3. '+' → logprob: -4.677043437957764
    4. '}
' → logprob: -4.802043437957764
    5. ''}' → logprob: -5.177043437957764
    6. '`}' → logprob: -5.927043437957764
    7. ']' → logprob: -6.052043437957764
    8. '``' → logprob: -7.302043437957764
    9. '^' → logprob: -8.052042961120605
    10. '}`' → logprob: -8.677042961120605

Token 2648: ' =' (ID: 314)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '```' → logprob: -1.1609479188919067
    2. ':' → logprob: -1.7859479188919067
    3. '   ' → logprob: -2.160947799682617
    4. '+' → logprob: -2.410947799682617
    5. ')' → logprob: -2.410947799682617
    6. '[' → logprob: -3.410947799682617
    7. '**' → logprob: -3.785947799682617
    8. '``' → logprob: -3.785947799682617
    9. '       ' → logprob: -4.035947799682617
    10. ':
' → logprob: -4.410947799682617

Token 2649: ' ' (ID: 220)
  Prédit: '4'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '4' → logprob: -0.07940149307250977
    2. '3' → logprob: -3.9544014930725098
    3. '2' → logprob: -4.07940149307251
    4. '5' → logprob: -4.32940149307251
    5. '1' → logprob: -4.70440149307251
    6. '7' → logprob: -5.20440149307251
    7. '8' → logprob: -5.45440149307251
    8. '```' → logprob: -5.45440149307251
    9. '6' → logprob: -6.70440149307251
    10. '``' → logprob: -6.95440149307251

Token 2650: '2' (ID: 17)
  Prédit: '4'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '4' → logprob: -0.00043376852408982813
    2. '5' → logprob: -9.000433921813965
    3. '7' → logprob: -9.000433921813965
    4. '3' → logprob: -9.375433921813965
    5. '```' → logprob: -10.000433921813965
    6. ''' → logprob: -11.125433921813965
    7. '1' → logprob: -11.375433921813965
    8. '`' → logprob: -11.875433921813965
    9. '``' → logprob: -12.250433921813965
    10. '2' → logprob: -12.250433921813965

Token 2651: '^' (ID: 61)
  Prédit: '^'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '^' → logprob: -0.39582979679107666
    2. '+' → logprob: -2.020829677581787
    3. '^{' → logprob: -2.395829677581787
    4. '4' → logprob: -2.770829677581787
    5. '3' → logprob: -4.395829677581787
    6. '```' → logprob: -4.895829677581787
    7. '0' → logprob: -5.395829677581787
    8. '1' → logprob: -5.520829677581787
    9. '**' → logprob: -5.520829677581787
    10. '2' → logprob: -6.270829677581787

Token 2652: '4' (ID: 19)
  Prédit: '4'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '4' → logprob: -0.2533465623855591
    2. '3' → logprob: -1.878346562385559
    3. '1' → logprob: -2.8783464431762695
    4. '2' → logprob: -4.5033464431762695
    5. '0' → logprob: -5.8783464431762695
    6. '5' → logprob: -7.6283464431762695
    7. '
' → logprob: -8.87834644317627
    8. '7' → logprob: -9.50334644317627
    9. '6' → logprob: -9.75334644317627
    10. '```' → logprob: -9.75334644317627

Token 2653: ' =' (ID: 314)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '```' → logprob: -0.6285093426704407
    2. '4' → logprob: -2.253509283065796
    3. '\' → logprob: -3.003509283065796
    4. '2' → logprob: -3.253509283065796
    5. '``' → logprob: -3.253509283065796
    6. ' ' → logprob: -3.503509283065796
    7. '   ' → logprob: -3.503509283065796
    8. '[' → logprob: -3.628509283065796
    9. ')' → logprob: -4.628509521484375
    10. '0' → logprob: -4.628509521484375

Token 2654: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.6059556007385254
    2. '2' → logprob: -1.4809556007385254
    3. '4' → logprob: -1.7309556007385254
    4. '0' → logprob: -3.9809556007385254
    5. '5' → logprob: -4.230955600738525
    6. '3' → logprob: -5.230955600738525
    7. '7' → logprob: -5.230955600738525
    8. '8' → logprob: -6.355955600738525
    9. ' ' → logprob: -6.730955600738525
    10. '```' → logprob: -6.855955600738525

Token 2655: '16' (ID: 1125)
  Prédit: '4'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '4' → logprob: -0.7009340524673462
    2. '9' → logprob: -2.3259339332580566
    3. '7' → logprob: -2.4509339332580566
    4. '2' → logprob: -2.4509339332580566
    5. '5' → logprob: -2.4509339332580566
    6. '1' → logprob: -2.9509339332580566
    7. '6' → logprob: -3.3259339332580566
    8. '3' → logprob: -3.5759339332580566
    9. '8' → logprob: -3.8259339332580566
    10. '0' → logprob: -5.450933933258057

Token 2656: '
' (ID: 198)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '```' → logprob: -1.205086588859558
    2. '2' → logprob: -1.330086588859558
    3. '3' → logprob: -2.0800867080688477
    4. '4' → logprob: -2.7050867080688477
    5. ' ' → logprob: -2.7050867080688477
    6. '   ' → logprob: -2.7050867080688477
    7. '<|end|>' → logprob: -3.7050867080688477
    8. '...' → logprob: -4.205086708068848
    9. '
' → logprob: -4.455086708068848
    10. '#' → logprob: -4.705086708068848

Token 2657: '       ' (ID: 309)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '```' → logprob: -0.6139887571334839
    2. '   ' → logprob: -1.4889887571334839
    3. '[' → logprob: -3.4889888763427734
    4. '       ' → logprob: -3.6139888763427734
    5. '`' → logprob: -3.8639888763427734
    6. ' ' → logprob: -3.8639888763427734
    7. ')' → logprob: -4.238988876342773
    8. '...' → logprob: -4.488988876342773
    9. '    ' → logprob: -4.738988876342773
    10. '+' → logprob: -4.738988876342773

Token 2658: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.9289854168891907
    2. '```' → logprob: -1.178985357284546
    3. '       ' → logprob: -2.178985357284546
    4. '+' → logprob: -3.178985357284546
    5. ' ' → logprob: -3.928985357284546
    6. ' +' → logprob: -4.178985595703125
    7. '[' → logprob: -4.428985595703125
    8. ')' → logprob: -4.678985595703125
    9. '...' → logprob: -4.803985595703125
    10. '2' → logprob: -4.928985595703125

Token 2659: ' ' (ID: 220)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7300775647163391
    2. ':' → logprob: -1.9800775051116943
    3. '```' → logprob: -2.3550775051116943
    4. '+' → logprob: -2.7300775051116943
    5. '       ' → logprob: -2.9800775051116943
    6. '[' → logprob: -3.3550775051116943
    7. ')' → logprob: -4.480077743530273
    8. ' ' → logprob: -4.480077743530273
    9. '[
' → logprob: -4.980077743530273
    10. '
' → logprob: -5.105077743530273

Token 2660: '2' (ID: 17)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.0003982782363892
    2. '2' → logprob: -1.0003982782363892
    3. '       ' → logprob: -2.5003981590270996
    4. '   ' → logprob: -2.7503981590270996
    5. '```' → logprob: -3.5003981590270996
    6. '3' → logprob: -3.7503981590270996
    7. ' ' → logprob: -4.0003981590271
    8. '4' → logprob: -4.2503981590271
    9. '...' → logprob: -4.2503981590271
    10. '#' → logprob: -5.7503981590271

Token 2661: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.2591114938259125
    2. '```' → logprob: -2.6341114044189453
    3. '3' → logprob: -3.1341114044189453
    4. '2' → logprob: -3.5091114044189453
    5. '4' → logprob: -3.5091114044189453
    6. '0' → logprob: -3.6341114044189453
    7. '1' → logprob: -4.009111404418945
    8. ',' → logprob: -5.759111404418945
    9. ' ```' → logprob: -6.634111404418945
    10. '   ' → logprob: -7.134111404418945

Token 2662: '2' (ID: 17)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.3793330788612366
    2. '2' → logprob: -1.5043330192565918
    3. '3' → logprob: -2.504333019256592
    4. '1' → logprob: -5.629333019256592
    5. '4' → logprob: -5.879333019256592
    6. '```' → logprob: -6.129333019256592
    7. '0' → logprob: -6.379333019256592
    8. '5' → logprob: -7.254333019256592
    9. ',' → logprob: -8.00433349609375
    10. '+' → logprob: -9.25433349609375

Token 2663: ' ' (ID: 220)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8880710005760193
    2. ' ' → logprob: -1.888071060180664
    3. '```' → logprob: -2.263071060180664
    4. '       ' → logprob: -2.513071060180664
    5. '3' → logprob: -3.263071060180664
    6. '[' → logprob: -3.638071060180664
    7. '    ' → logprob: -3.763071060180664
    8. '2' → logprob: -3.888071060180664
    9. '4' → logprob: -4.388071060180664
    10. '1' → logprob: -4.388071060180664

Token 2664: ' ->' (ID: 2747)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.59067702293396
    2. '3' → logprob: -1.84067702293396
    3. ' ' → logprob: -2.09067702293396
    4. '       ' → logprob: -2.34067702293396
    5. '2' → logprob: -2.46567702293396
    6. '```' → logprob: -2.46567702293396
    7. '1' → logprob: -2.96567702293396
    8. '4' → logprob: -3.34067702293396
    9. '...' → logprob: -3.84067702293396
    10. '[' → logprob: -4.090677261352539

Token 2665: ' mass' (ID: 4842)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.4637102782726288
    2. '...' → logprob: -2.088710308074951
    3. '1' → logprob: -2.463710308074951
    4. ' ...' → logprob: -3.213710308074951
    5. '       ' → logprob: -3.838710308074951
    6. '```' → logprob: -4.088710308074951
    7. '        ' → logprob: -4.338710308074951
    8. '2' → logprob: -4.463710308074951
    9. '3' → logprob: -4.963710308074951
    10. '0' → logprob: -5.213710308074951

Token 2666: ' =' (ID: 314)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.9922448992729187
    2. '```' → logprob: -0.9922448992729187
    3. '3' → logprob: -3.1172449588775635
    4. '4' → logprob: -3.2422449588775635
    5. ' ' → logprob: -3.2422449588775635
    6. '[' → logprob: -3.4922449588775635
    7. ',' → logprob: -4.242244720458984
    8. '   ' → logprob: -4.492244720458984
    9. '2' → logprob: -4.617244720458984
    10. '``' → logprob: -4.992244720458984

Token 2667: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.011854521930217743
    2. '1' → logprob: -5.011854648590088
    3. '4' → logprob: -5.886854648590088
    4. ' ' → logprob: -6.761854648590088
    5. '3' → logprob: -7.636854648590088
    6. '   ' → logprob: -8.13685417175293
    7. '```' → logprob: -8.51185417175293
    8. '0' → logprob: -9.01185417175293
    9. '`' → logprob: -10.01185417175293
    10. '``' → logprob: -11.38685417175293

Token 2668: '2' (ID: 17)
  Prédit: '4'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '4' → logprob: -0.5019309520721436
    2. '2' → logprob: -1.0019309520721436
    3. '1' → logprob: -4.376931190490723
    4. '3' → logprob: -4.501931190490723
    5. '0' → logprob: -6.501931190490723
    6. '```' → logprob: -7.001931190490723
    7. ' ' → logprob: -7.626931190490723
    8. '`' → logprob: -8.376931190490723
    9. '   ' → logprob: -8.501931190490723
    10. '5' → logprob: -8.751931190490723

Token 2669: '^{' (ID: 42923)
  Prédit: '3'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '3' → logprob: -0.5969609618186951
    2. '+' → logprob: -1.0969610214233398
    3. '```' → logprob: -3.47196102142334
    4. '1' → logprob: -3.72196102142334
    5. '^' → logprob: -3.97196102142334
    6. '4' → logprob: -4.34696102142334
    7. '2' → logprob: -4.59696102142334
    8. '0' → logprob: -5.34696102142334
    9. '**' → logprob: -5.59696102142334
    10. ' ' → logprob: -5.72196102142334

Token 2670: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0005357555346563458
    2. '3' → logprob: -7.87553596496582
    3. '```' → logprob: -9.62553596496582
    4. '4' → logprob: -10.12553596496582
    5. ' ' → logprob: -11.25053596496582
    6. '0' → logprob: -11.87553596496582
    7. '`' → logprob: -11.87553596496582
    8. '``' → logprob: -11.87553596496582
    9. '   ' → logprob: -12.00053596496582
    10. '1' → logprob: -12.50053596496582

Token 2671: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0016088859410956502
    2. '+
' → logprob: -6.626608848571777
    3. ' +' → logprob: -8.501608848571777
    4. '```' → logprob: -10.126608848571777
    5. '3' → logprob: -10.876608848571777
    6. '2' → logprob: -12.001608848571777
    7. '＋' → logprob: -12.626608848571777
    8. '`' → logprob: -13.626608848571777
    9. '1' → logprob: -13.876608848571777
    10. '``' → logprob: -14.001608848571777

Token 2672: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0008596502593718469
    2. '3' → logprob: -7.62585973739624
    3. '```' → logprob: -8.625859260559082
    4. '1' → logprob: -9.250859260559082
    5. '``' → logprob: -10.125859260559082
    6. ' ' → logprob: -10.625859260559082
    7. '`' → logprob: -11.250859260559082
    8. '0' → logprob: -11.375859260559082
    9. '
' → logprob: -12.750859260559082
    10. '   ' → logprob: -13.375859260559082

Token 2673: '}' (ID: 92)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.6316670179367065
    2. ']' → logprob: -1.7566670179367065
    3. '```' → logprob: -1.7566670179367065
    4. '}' → logprob: -2.381667137145996
    5. '3' → logprob: -5.006667137145996
    6. '#' → logprob: -5.006667137145996
    7. '...' → logprob: -5.756667137145996
    8. '``' → logprob: -6.381667137145996
    9. '']' → logprob: -6.631667137145996
    10. ' +' → logprob: -7.006667137145996

Token 2674: ' =' (ID: 314)
  Prédit: '3'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -1.4345799684524536
    2. '```' → logprob: -1.9345799684524536
    3. ' =' → logprob: -2.184579849243164
    4. '=' → logprob: -2.309579849243164
    5. ']' → logprob: -2.559579849243164
    6. '2' → logprob: -2.934579849243164
    7. '4' → logprob: -2.934579849243164
    8. '[' → logprob: -3.184579849243164
    9. ':' → logprob: -3.559579849243164
    10. '+' → logprob: -3.684579849243164

Token 2675: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -1.0617982149124146
    2. '3' → logprob: -1.1867982149124146
    3. '1' → logprob: -1.6867982149124146
    4. ' ' → logprob: -2.311798095703125
    5. '4' → logprob: -3.311798095703125
    6. '```' → logprob: -4.311798095703125
    7. '5' → logprob: -4.936798095703125
    8. '0' → logprob: -5.561798095703125
    9. '`' → logprob: -6.686798095703125
    10. '``' → logprob: -6.811798095703125

Token 2676: '^' (ID: 61)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.5840023756027222
    2. '3' → logprob: -2.4590024948120117
    3. '^' → logprob: -2.5840024948120117
    4. '```' → logprob: -2.5840024948120117
    5. '4' → logprob: -2.9590024948120117
    6. '2' → logprob: -3.0840024948120117
    7. '1' → logprob: -3.3340024948120117
    8. '**' → logprob: -3.8340024948120117
    9. '+' → logprob: -4.709002494812012
    10. '^{' → logprob: -5.209002494812012

Token 2677: '4' (ID: 19)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.010080341249704361
    2. '3' → logprob: -4.635080337524414
    3. '```' → logprob: -9.010080337524414
    4. '1' → logprob: -9.385080337524414
    5. '0' → logprob: -9.885080337524414
    6. '4' → logprob: -10.135080337524414
    7. '``' → logprob: -11.635080337524414
    8. '`' → logprob: -11.635080337524414
    9. ' ' → logprob: -12.385080337524414
    10. '
' → logprob: -13.760080337524414

Token 2678: '=' (ID: 28)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '```' → logprob: -0.6785907745361328
    2. '   ' → logprob: -1.8035907745361328
    3. '[' → logprob: -3.053590774536133
    4. '\n' → logprob: -3.178590774536133
    5. '       ' → logprob: -3.553590774536133
    6. ')' → logprob: -3.553590774536133
    7. ':' → logprob: -3.803590774536133
    8. '
' → logprob: -4.178590774536133
    9. '``' → logprob: -4.178590774536133
    10. '[
' → logprob: -4.303590774536133

Token 2679: '16' (ID: 1125)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '2' → logprob: -0.8757227063179016
    2. '3' → logprob: -1.3757226467132568
    3. '4' → logprob: -1.8757226467132568
    4. '1' → logprob: -2.250722646713257
    5. '```' → logprob: -3.375722646713257
    6. '0' → logprob: -4.250722885131836
    7. '``' → logprob: -4.625722885131836
    8. ' ' → logprob: -5.125722885131836
    9. '5' → logprob: -5.375722885131836
    10. '`' → logprob: -6.250722885131836

Token 2680: '

' (ID: 279)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '```' → logprob: -0.6610356569290161
    2. '   ' → logprob: -2.1610355377197266
    3. 'class' → logprob: -2.4110355377197266
    4. '
' → logprob: -3.1610355377197266
    5. ':' → logprob: -3.2860355377197266
    6. '       ' → logprob: -3.6610355377197266
    7. '\n' → logprob: -3.9110355377197266
    8. '#' → logprob: -4.036035537719727
    9. '3' → logprob: -4.286035537719727
    10. '``' → logprob: -4.786035537719727

Token 2681: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8194698691368103
    2. ':' → logprob: -1.569469928741455
    3. '```' → logprob: -1.819469928741455
    4. '
' → logprob: -3.444469928741455
    5. '       ' → logprob: -3.569469928741455
    6. ':
' → logprob: -3.944469928741455
    7. '[' → logprob: -3.944469928741455
    8. '[
' → logprob: -4.319469928741455
    9. 'class' → logprob: -4.569469928741455
    10. '**' → logprob: -4.694469928741455

Token 2682: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.9954564571380615
    2. '```' → logprob: -1.1204564571380615
    3. '       ' → logprob: -1.7454564571380615
    4. '
' → logprob: -3.4954564571380615
    5. ':' → logprob: -3.6204564571380615
    6. 'class' → logprob: -3.7454564571380615
    7. ':
' → logprob: -4.870456695556641
    8. '[' → logprob: -5.120456695556641
    9. ')' → logprob: -5.370456695556641
    10. '``' → logprob: -5.620456695556641

Token 2683: ' Total' (ID: 17565)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6528414487838745
    2. '   ' → logprob: -1.5278414487838745
    3. ':' → logprob: -2.027841567993164
    4. '```' → logprob: -2.902841567993164
    5. '           ' → logprob: -4.277841567993164
    6. ')' → logprob: -4.527841567993164
    7. '):' → logprob: -4.777841567993164
    8. ':
' → logprob: -5.277841567993164
    9. '\n' → logprob: -5.277841567993164
    10. '**' → logprob: -5.902841567993164

Token 2684: ' mass' (ID: 4842)
  Prédit: '3'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '3' → logprob: -0.8940741419792175
    2. '```' → logprob: -1.2690742015838623
    3. '4' → logprob: -2.1440742015838623
    4. '   ' → logprob: -2.7690742015838623
    5. '=' → logprob: -3.5190742015838623
    6. '
' → logprob: -4.269073963165283
    7. ' ' → logprob: -4.269073963165283
    8. '       ' → logprob: -4.394073963165283
    9. '`' → logprob: -4.644073963165283
    10. '``' → logprob: -4.894073963165283

Token 2685: ' =' (ID: 314)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '```' → logprob: -0.4855465590953827
    2. '   ' → logprob: -2.360546588897705
    3. '+' → logprob: -2.985546588897705
    4. '
' → logprob: -3.610546588897705
    5. ':' → logprob: -3.610546588897705
    6. '=' → logprob: -3.610546588897705
    7. '**' → logprob: -3.985546588897705
    8. ' =' → logprob: -4.110546588897705
    9. '3' → logprob: -4.110546588897705
    10. '       ' → logprob: -4.360546588897705

Token 2686: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.19366197288036346
    2. '32' → logprob: -3.19366192817688
    3. ' ' → logprob: -3.31866192817688
    4. '9' → logprob: -4.443662166595459
    5. '`' → logprob: -4.693662166595459
    6. '8' → logprob: -4.943662166595459
    7. '3' → logprob: -4.943662166595459
    8. '4' → logprob: -4.943662166595459
    9. '1' → logprob: -5.443662166595459
    10. '   ' → logprob: -5.568662166595459

Token 2687: '8' (ID: 23)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -1.0349059104919434
    2. '9' → logprob: -1.5349059104919434
    3. '4' → logprob: -2.4099059104919434
    4. '8' → logprob: -2.9099059104919434
    5. '7' → logprob: -3.0349059104919434
    6. '3' → logprob: -3.5349059104919434
    7. '1' → logprob: -3.7849059104919434
    8. '31' → logprob: -3.9099059104919434
    9. '32' → logprob: -4.034905910491943
    10. '10' → logprob: -4.534905910491943

Token 2688: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -1.3197590112686157
    2. '\n' → logprob: -1.4447590112686157
    3. '```' → logprob: -1.9447590112686157
    4. ' +' → logprob: -3.194758892059326
    5. '**' → logprob: -3.319758892059326
    6. '\' → logprob: -3.444758892059326
    7. '*' → logprob: -3.694758892059326
    8. '
' → logprob: -3.944758892059326
    9. '<|end|>' → logprob: -3.944758892059326
    10. ')' → logprob: -4.069758892059326

Token 2689: ' ' (ID: 220)
  Prédit: '4'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '4' → logprob: -0.48660731315612793
    2. '2' → logprob: -1.236607313156128
    3. '16' → logprob: -2.986607313156128
    4. '3' → logprob: -3.861607313156128
    5. '1' → logprob: -3.986607313156128
    6. ' ' → logprob: -6.236607551574707
    7. '```' → logprob: -6.861607551574707
    8. '`' → logprob: -7.861607551574707
    9. '``' → logprob: -7.861607551574707
    10. '5' → logprob: -8.111607551574707

Token 2690: '16' (ID: 1125)
  Prédit: '4'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '4' → logprob: -0.5701165199279785
    2. '2' → logprob: -0.9451165199279785
    3. '3' → logprob: -3.8201165199279785
    4. '1' → logprob: -4.0701165199279785
    5. '16' → logprob: -5.5701165199279785
    6. ' ' → logprob: -6.8201165199279785
    7. '`' → logprob: -7.5701165199279785
    8. '5' → logprob: -7.8201165199279785
    9. '```' → logprob: -7.8201165199279785
    10. '   ' → logprob: -8.44511604309082

Token 2691: ' +' (ID: 659)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '```' → logprob: -0.7174735069274902
    2. '4' → logprob: -2.0924735069274902
    3. '3' → logprob: -2.2174735069274902
    4. '2' → logprob: -2.9674735069274902
    5. '   ' → logprob: -3.3424735069274902
    6. '+' → logprob: -3.4674735069274902
    7. ' ' → logprob: -3.7174735069274902
    8. '[' → logprob: -3.9674735069274902
    9. '
' → logprob: -4.34247350692749
    10. ')' → logprob: -4.59247350692749

Token 2692: '16' (ID: 1125)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.1088666170835495
    2. '4' → logprob: -2.3588666915893555
    3. '16' → logprob: -5.2338666915893555
    4. '3' → logprob: -6.6088666915893555
    5. '1' → logprob: -6.7338666915893555
    6. '```' → logprob: -7.6088666915893555
    7. ' ' → logprob: -9.358866691589355
    8. '`' → logprob: -10.233866691589355
    9. '``' → logprob: -10.233866691589355
    10. '5' → logprob: -10.608866691589355

Token 2693: ' =' (ID: 314)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '```' → logprob: -0.3960971236228943
    2. '   ' → logprob: -1.521097183227539
    3. '\n' → logprob: -3.396097183227539
    4. '``' → logprob: -3.896097183227539
    5. '       ' → logprob: -4.021097183227539
    6. '`' → logprob: -5.396097183227539
    7. '
' → logprob: -5.521097183227539
    8. '...' → logprob: -5.521097183227539
    9. '"""
' → logprob: -5.896097183227539
    10. '\' → logprob: -6.021097183227539

Token 2694: ' ' (ID: 220)
  Prédit: '32'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '32' → logprob: -1.092891812324524
    2. '41' → logprob: -1.342891812324524
    3. ' ' → logprob: -1.967891812324524
    4. '40' → logprob: -2.7178916931152344
    5. '4' → logprob: -3.3428916931152344
    6. '34' → logprob: -3.7178916931152344
    7. '48' → logprob: -3.7178916931152344
    8. '9' → logprob: -3.8428916931152344
    9. '5' → logprob: -4.467891693115234
    10. '45' → logprob: -4.717891693115234

Token 2695: '40' (ID: 1723)
  Prédit: '5'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '5' → logprob: -0.9988811612129211
    2. '4' → logprob: -1.1238811016082764
    3. '9' → logprob: -2.6238811016082764
    4. '2' → logprob: -3.4988811016082764
    5. '1' → logprob: -3.8738811016082764
    6. '3' → logprob: -3.9988811016082764
    7. '37' → logprob: -4.1238813400268555
    8. '7' → logprob: -4.1238813400268555
    9. '35' → logprob: -4.4988813400268555
    10. '45' → logprob: -4.4988813400268555

Token 2696: '

' (ID: 279)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '```' → logprob: -0.9643258452415466
    2. '
' → logprob: -2.3393259048461914
    3. '   ' → logprob: -2.3393259048461914
    4. ':' → logprob: -2.5893259048461914
    5. '[' → logprob: -2.9643259048461914
    6. '<|end|>' → logprob: -3.0893259048461914
    7. ',' → logprob: -3.4643259048461914
    8. '\n' → logprob: -3.4643259048461914
    9. '**' → logprob: -3.8393259048461914
    10. '+' → logprob: -4.089325904846191

Token 2697: '       ' (ID: 309)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '```' → logprob: -0.6708210110664368
    2. '   ' → logprob: -1.670820951461792
    3. '       ' → logprob: -2.295820951461792
    4. '\n' → logprob: -2.545820951461792
    5. '
' → logprob: -3.045820951461792
    6. '+' → logprob: -5.045821189880371
    7. '``' → logprob: -5.045821189880371
    8. ':' → logprob: -5.170821189880371
    9. 'class' → logprob: -5.170821189880371
    10. ':
' → logprob: -5.295821189880371

Token 2698: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7346251010894775
    2. '```' → logprob: -1.8596251010894775
    3. '       ' → logprob: -1.9846251010894775
    4. ':' → logprob: -1.9846251010894775
    5. ':
' → logprob: -3.8596251010894775
    6. '\n' → logprob: -4.359624862670898
    7. '[
' → logprob: -4.359624862670898
    8. '
' → logprob: -4.484624862670898
    9. '[' → logprob: -4.859624862670898
    10. '           ' → logprob: -6.109624862670898

Token 2699: ' Output' (ID: 18315)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6669963002204895
    2. ':' → logprob: -1.7919962406158447
    3. '```' → logprob: -1.9169962406158447
    4. '   ' → logprob: -2.6669962406158447
    5. ')' → logprob: -3.9169962406158447
    6. ':
' → logprob: -4.416996479034424
    7. '):' → logprob: -4.416996479034424
    8. '           ' → logprob: -4.666996479034424
    9. '\n' → logprob: -4.916996479034424
    10. '``' → logprob: -5.666996479034424

Token 2700: ' ' (ID: 220)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '```' → logprob: -0.5957281589508057
    2. '   ' → logprob: -1.9707281589508057
    3. '3' → logprob: -3.0957281589508057
    4. ':' → logprob: -3.2207281589508057
    5. '[
' → logprob: -3.2207281589508057
    6. '2' → logprob: -3.4707281589508057
    7. ' ' → logprob: -3.4707281589508057
    8. '4' → logprob: -3.8457281589508057
    9. 'class' → logprob: -4.095727920532227
    10. '       ' → logprob: -4.220727920532227

Token 2701: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.8166001439094543
    2. '2' → logprob: -1.3166000843048096
    3. '```' → logprob: -1.8166000843048096
    4. '4' → logprob: -3.5666000843048096
    5. '[' → logprob: -4.066600322723389
    6. '[
' → logprob: -4.441600322723389
    7. '=' → logprob: -4.691600322723389
    8. ':' → logprob: -4.816600322723389
    9. '1' → logprob: -4.816600322723389
    10. '(' → logprob: -4.941600322723389

Token 2702: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.14415785670280457
    2. ' ,' → logprob: -3.144157886505127
    3. ',' → logprob: -3.644157886505127
    4. '  ' → logprob: -4.269157886505127
    5. '```' → logprob: -4.394157886505127
    6. '<|end|>' → logprob: -4.519157886505127
    7. '   ' → logprob: -5.019157886505127
    8. '0' → logprob: -5.644157886505127
    9. '3' → logprob: -5.894157886505127
    10. '[' → logprob: -6.144157886505127

Token 2703: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.09149979799985886
    2. ' ' → logprob: -2.5914998054504395
    3. '```' → logprob: -4.5914998054504395
    4. 'def' → logprob: -6.7164998054504395
    5. ',' → logprob: -7.7164998054504395
    6. '<|end|>' → logprob: -8.341499328613281
    7. '...' → logprob: -9.591499328613281
    8. '   ' → logprob: -9.841499328613281
    9. ')' → logprob: -9.966499328613281
    10. 'b' → logprob: -10.216499328613281

Token 2704: ' and' (ID: 326)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '```' → logprob: -0.5159108638763428
    2. '   ' → logprob: -2.1409108638763428
    3. '
' → logprob: -2.2659108638763428
    4. '\n' → logprob: -2.3909108638763428
    5. ':' → logprob: -4.515911102294922
    6. ' ' → logprob: -4.640911102294922
    7. '3' → logprob: -4.765911102294922
    8. '1' → logprob: -4.765911102294922
    9. '``' → logprob: -4.890911102294922
    10. '[' → logprob: -5.015911102294922

Token 2705: ' ' (ID: 220)
  Prédit: '5'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '5' → logprob: -0.002468643942847848
    2. '3' → logprob: -6.252468585968018
    3. '2' → logprob: -8.877469062805176
    4. '0' → logprob: -9.002469062805176
    5. '1' → logprob: -9.127469062805176
    6. '7' → logprob: -9.252469062805176
    7. '4' → logprob: -10.127469062805176
    8. '
' → logprob: -11.502469062805176
    9. '```' → logprob: -11.877469062805176
    10. ' ' → logprob: -12.252469062805176

Token 2706: '5' (ID: 20)
  Prédit: '5'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '5' → logprob: -0.02672160230576992
    2. '3' → logprob: -4.401721477508545
    3. '7' → logprob: -5.026721477508545
    4. '4' → logprob: -5.651721477508545
    5. '2' → logprob: -6.401721477508545
    6. '6' → logprob: -7.026721477508545
    7. '0' → logprob: -7.151721477508545
    8. '1' → logprob: -7.526721477508545
    9. '8' → logprob: -9.151721954345703
    10. '
' → logprob: -10.901721954345703

Token 2707: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.5488730072975159
    2. '<|end|>' → logprob: -1.548872947692871
    3. '```' → logprob: -1.798872947692871
    4. '0' → logprob: -4.423872947692871
    5. '   ' → logprob: -4.798872947692871
    6. '<|end|>' → logprob: -5.548872947692871
    7. ' (' → logprob: -5.673872947692871
    8. '``' → logprob: -5.798872947692871
    9. ',' → logprob: -6.048872947692871
    10. '  ' → logprob: -6.423872947692871

Token 2708: '0' (ID: 15)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.044887006282806396
    2. '0' → logprob: -3.544887065887451
    3. '```' → logprob: -4.919887065887451
    4. '6' → logprob: -5.544887065887451
    5. '3' → logprob: -6.669887065887451
    6. '<|end|>' → logprob: -7.544887065887451
    7. '2' → logprob: -7.669887065887451
    8. '5' → logprob: -7.919887065887451
    9. '1' → logprob: -8.544886589050293
    10. '`' → logprob: -8.919886589050293

Token 2709: ' means' (ID: 4748)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '```' → logprob: -0.6826538443565369
    2. '\n' → logprob: -2.1826539039611816
    3. '
' → logprob: -2.4326539039611816
    4. '   ' → logprob: -2.8076539039611816
    5. ' ' → logprob: -2.9326539039611816
    6. '3' → logprob: -3.4326539039611816
    7. '``' → logprob: -3.4326539039611816
    8. '<|end|>' → logprob: -3.8076539039611816
    9. '1' → logprob: -4.182653903961182
    10. '2' → logprob: -4.432653903961182

Token 2710: ':

' (ID: 1402)
  Prédit: '3'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '3' → logprob: -0.7296772003173828
    2. ' ' → logprob: -1.3546772003173828
    3. '2' → logprob: -1.6046772003173828
    4. '0' → logprob: -3.354677200317383
    5. '```' → logprob: -4.979677200317383
    6. '1' → logprob: -5.229677200317383
    7. ' (' → logprob: -5.479677200317383
    8. '(' → logprob: -6.479677200317383
    9. '``' → logprob: -6.604677200317383
    10. '`' → logprob: -6.604677200317383

Token 2711: '       ' (ID: 309)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '```' → logprob: -0.9873033165931702
    2. '   ' → logprob: -1.8623032569885254
    3. ' ' → logprob: -2.1123032569885254
    4. '\n' → logprob: -2.3623032569885254
    5. '
' → logprob: -2.8623032569885254
    6. '       ' → logprob: -3.1123032569885254
    7. ':' → logprob: -3.2373032569885254
    8. '``' → logprob: -3.6123032569885254
    9. '`' → logprob: -4.362303256988525
    10. ' (' → logprob: -4.487303256988525

Token 2712: ' #' (ID: 1069)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '```' → logprob: -0.5963500738143921
    2. '+' → logprob: -2.4713501930236816
    3. ':' → logprob: -2.7213501930236816
    4. '<|end|>' → logprob: -2.8463501930236816
    5. ' ' → logprob: -3.0963501930236816
    6. '\n' → logprob: -3.2213501930236816
    7. '   ' → logprob: -3.9713501930236816
    8. '
' → logprob: -4.346350193023682
    9. '[' → logprob: -4.346350193023682
    10. '``' → logprob: -4.346350193023682

Token 2713: ' ' (ID: 220)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.3681374788284302
    2. '```' → logprob: -1.8681374788284302
    3. '\n' → logprob: -2.1181373596191406
    4. ' ' → logprob: -2.3681373596191406
    5. '[' → logprob: -2.7431373596191406
    6. '
' → logprob: -2.8681373596191406
    7. '(' → logprob: -2.8681373596191406
    8. ' (' → logprob: -3.4931373596191406
    9. '[
' → logprob: -3.8681373596191406
    10. '+' → logprob: -3.8681373596191406

Token 2714: '2' (ID: 17)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '```' → logprob: -1.5244159698486328
    2. ' ' → logprob: -1.7744159698486328
    3. '3' → logprob: -1.8994159698486328
    4. '2' → logprob: -2.024415969848633
    5. '(' → logprob: -2.024415969848633
    6. '\n' → logprob: -3.024415969848633
    7. ' (' → logprob: -3.524415969848633
    8. '`' → logprob: -3.524415969848633
    9. '0' → logprob: -4.024415969848633
    10. '``' → logprob: -4.524415969848633

Token 2715: '^{' (ID: 42923)
  Prédit: '^'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '^' → logprob: -1.085878849029541
    2. ' ' → logprob: -1.460878849029541
    3. '3' → logprob: -1.710878849029541
    4. '```' → logprob: -2.585878849029541
    5. '+' → logprob: -2.835878849029541
    6. '^{' → logprob: -3.335878849029541
    7. '2' → logprob: -3.835878849029541
    8. '0' → logprob: -3.960878849029541
    9. '**' → logprob: -4.585878849029541
    10. '5' → logprob: -4.835878849029541

Token 2716: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.0009440997382625937
    2. '(' → logprob: -7.375944137573242
    3. '5' → logprob: -8.125944137573242
    4. '0' → logprob: -12.250944137573242
    5. '6' → logprob: -12.875944137573242
    6. '(a' → logprob: -12.875944137573242
    7. ' ' → logprob: -13.000944137573242
    8. '```' → logprob: -13.125944137573242
    9. '   ' → logprob: -13.500944137573242
    10. ' (' → logprob: -13.625944137573242

Token 2717: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.02073609083890915
    2. ' +' → logprob: -4.395736217498779
    3. '}' → logprob: -5.020736217498779
    4. '}+' → logprob: -7.145736217498779
    5. ',' → logprob: -8.270735740661621
    6. '```' → logprob: -8.520735740661621
    7. '},' → logprob: -9.895735740661621
    8. ' ' → logprob: -9.895735740661621
    9. '   ' → logprob: -10.020735740661621
    10. '+
' → logprob: -10.145735740661621

Token 2718: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -4.847109812544659e-05
    2. '5' → logprob: -10.125048637390137
    3. '1' → logprob: -12.750048637390137
    4. ' ' → logprob: -13.000048637390137
    5. '```' → logprob: -13.500048637390137
    6. '``' → logprob: -14.375048637390137
    7. '6' → logprob: -14.625048637390137
    8. '`' → logprob: -15.000048637390137
    9. '   ' → logprob: -16.12504768371582
    10. '}' → logprob: -16.75004768371582

Token 2719: '}=' (ID: 102838)
  Prédit: '}'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '}' → logprob: -0.07542628049850464
    2. '+' → logprob: -2.8254263401031494
    3. '```' → logprob: -5.32542610168457
    4. '4' → logprob: -6.32542610168457
    5. '}+' → logprob: -6.45042610168457
    6. ']' → logprob: -6.70042610168457
    7. '}
' → logprob: -7.20042610168457
    8. ' +' → logprob: -7.82542610168457
    9. '}`' → logprob: -7.95042610168457
    10. '}=' → logprob: -8.07542610168457

Token 2720: '8' (ID: 23)
  Prédit: '8'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '8' → logprob: -0.4561825692653656
    2. '3' → logprob: -1.081182599067688
    3. '6' → logprob: -4.206182479858398
    4. '1' → logprob: -4.956182479858398
    5. ' ' → logprob: -6.706182479858398
    6. '4' → logprob: -7.331182479858398
    7. '```' → logprob: -7.331182479858398
    8. '2' → logprob: -7.331182479858398
    9. '`' → logprob: -7.706182479858398
    10. '5' → logprob: -7.831182479858398

Token 2721: ' and' (ID: 326)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '```' → logprob: -0.5384598970413208
    2. '+' → logprob: -1.5384598970413208
    3. '[' → logprob: -3.1634597778320312
    4. ')' → logprob: -3.1634597778320312
    5. '``' → logprob: -3.9134597778320312
    6. ':' → logprob: -4.038459777832031
    7. '+
' → logprob: -4.663459777832031
    8. '   ' → logprob: -4.788459777832031
    9. '
' → logprob: -5.288459777832031
    10. '`' → logprob: -5.288459777832031

Token 2722: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.02198503538966179
    2. '5' → logprob: -4.521985054016113
    3. ' ' → logprob: -4.646985054016113
    4. '`' → logprob: -7.771985054016113
    5. '(' → logprob: -8.646985054016113
    6. '1' → logprob: -8.896985054016113
    7. ''' → logprob: -8.896985054016113
    8. '6' → logprob: -9.021985054016113
    9. '3' → logprob: -9.271985054016113
    10. '4' → logprob: -9.396985054016113

Token 2723: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.7034111618995667
    2. '5' → logprob: -0.7034111618995667
    3. '3' → logprob: -5.578411102294922
    4. '4' → logprob: -6.203411102294922
    5. '6' → logprob: -6.578411102294922
    6. '(' → logprob: -7.203411102294922
    7. '`' → logprob: -7.578411102294922
    8. ' ' → logprob: -7.703411102294922
    9. '1' → logprob: -7.828411102294922
    10. '0' → logprob: -8.453411102294922

Token 2724: '^{' (ID: 42923)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.02773851342499256
    2. '5' → logprob: -3.652738571166992
    3. '4' → logprob: -7.652738571166992
    4. '^{' → logprob: -8.027738571166992
    5. '0' → logprob: -8.402738571166992
    6. '6' → logprob: -8.527738571166992
    7. '1' → logprob: -9.652738571166992
    8. '3' → logprob: -10.027738571166992
    9. '```' → logprob: -10.277738571166992
    10. '2' → logprob: -10.902738571166992

Token 2725: '5' (ID: 20)
  Prédit: '5'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '5' → logprob: -1.4855663721391466e-05
    2. ' ' → logprob: -12.500015258789062
    3. '4' → logprob: -12.750015258789062
    4. '0' → logprob: -12.750015258789062
    5. '3' → logprob: -13.625015258789062
    6. '(' → logprob: -13.875015258789062
    7. '   ' → logprob: -13.875015258789062
    8. ''' → logprob: -14.375015258789062
    9. '
' → logprob: -14.500015258789062
    10. '1' → logprob: -15.750015258789062

Token 2726: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.00018661346985027194
    2. ' +' → logprob: -9.500186920166016
    3. '```' → logprob: -10.000186920166016
    4. '+
' → logprob: -10.500186920166016
    5. '0' → logprob: -11.000186920166016
    6. ' ' → logprob: -12.625186920166016
    7. '}+' → logprob: -12.625186920166016
    8. '<|end|>' → logprob: -13.000186920166016
    9. '=' → logprob: -13.250186920166016
    10. '}' → logprob: -13.500186920166016

Token 2727: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.0683535037969705e-05
    2. '1' → logprob: -11.62501049041748
    3. '```' → logprob: -14.37501049041748
    4. ' ' → logprob: -14.75001049041748
    5. '``' → logprob: -16.125011444091797
    6. '3' → logprob: -16.250011444091797
    7. '-' → logprob: -16.500011444091797
    8. '`' → logprob: -16.750011444091797
    9. '<|end|>' → logprob: -16.750011444091797
    10. '5' → logprob: -16.875011444091797

Token 2728: '}=' (ID: 102838)
  Prédit: '}'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '}' → logprob: -0.04284638911485672
    2. '}=' → logprob: -3.667846441268921
    3. ''}' → logprob: -4.167846202850342
    4. '```' → logprob: -8.1678466796875
    5. '}
' → logprob: -8.2928466796875
    6. '`}' → logprob: -8.4178466796875
    7. ''' → logprob: -10.4178466796875
    8. '}`' → logprob: -11.0428466796875
    9. '+' → logprob: -11.1678466796875
    10. '`' → logprob: -11.1678466796875

Token 2729: '32' (ID: 1398)
  Prédit: '32'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '32' → logprob: -2.045823566731997e-05
    2. '6' → logprob: -11.375020027160645
    3. '
' → logprob: -12.625020027160645
    4. '`' → logprob: -13.625020027160645
    5. '"' → logprob: -14.125020027160645
    6. ' ' → logprob: -14.250020027160645
    7. '``' → logprob: -14.375020027160645
    8. '2' → logprob: -14.875020027160645
    9. ''' → logprob: -15.000020027160645
    10. '0' → logprob: -15.250020027160645

Token 2730: '

' (ID: 279)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.25038018822669983
    2. '```' → logprob: -2.000380277633667
    3. '
' → logprob: -2.750380277633667
    4. '\' → logprob: -5.500380039215088
    5. '``' → logprob: -5.750380039215088
    6. '<|end|>' → logprob: -6.250380039215088
    7. '`' → logprob: -6.375380039215088
    8. '   ' → logprob: -6.500380039215088
    9. ')' → logprob: -7.000380039215088
    10. '0' → logprob: -7.250380039215088

Token 2731: '       ' (ID: 309)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '```' → logprob: -0.6479875445365906
    2. ':' → logprob: -1.6479876041412354
    3. '   ' → logprob: -2.3979876041412354
    4. '\n' → logprob: -3.2729876041412354
    5. '
' → logprob: -3.6479876041412354
    6. '[
' → logprob: -3.6479876041412354
    7. ':
' → logprob: -3.6479876041412354
    8. '[' → logprob: -3.6479876041412354
    9. '``' → logprob: -4.647987365722656
    10. '       ' → logprob: -5.022987365722656

Token 2732: ' #' (ID: 1069)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.706445574760437
    2. '```' → logprob: -1.706445574760437
    3. '   ' → logprob: -1.956445574760437
    4. ':
' → logprob: -2.5814456939697266
    5. '\n' → logprob: -3.4564456939697266
    6. '[
' → logprob: -3.9564456939697266
    7. '
' → logprob: -4.081445693969727
    8. '[' → logprob: -4.331445693969727
    9. 'def' → logprob: -5.206445693969727
    10. '       ' → logprob: -5.581445693969727

Token 2733: ' sum' (ID: 4215)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.2609814703464508
    2. '
' → logprob: -3.010981559753418
    3. '       ' → logprob: -3.260981559753418
    4. ':' → logprob: -3.385981559753418
    5. '```' → logprob: -3.510981559753418
    6. ':
' → logprob: -3.635981559753418
    7. '   ' → logprob: -4.010981559753418
    8. '[
' → logprob: -4.635981559753418
    9. '[' → logprob: -5.260981559753418
    10. 'class' → logprob: -5.635981559753418

Token 2734: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -1.18534255027771
    2. ' =' → logprob: -1.43534255027771
    3. ' ' → logprob: -1.43534255027771
    4. '+' → logprob: -2.93534255027771
    5. ' +' → logprob: -3.31034255027771
    6. '```' → logprob: -3.31034255027771
    7. '`' → logprob: -4.435342788696289
    8. ' (' → logprob: -4.560342788696289
    9. '(' → logprob: -4.560342788696289
    10. 'a' → logprob: -4.685342788696289

Token 2735: ' ' (ID: 220)
  Prédit: '40'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '40' → logprob: -0.016512172296643257
    2. '8' → logprob: -4.516512393951416
    3. '2' → logprob: -5.516512393951416
    4. '{' → logprob: -7.266512393951416
    5. '32' → logprob: -7.891512393951416
    6. '48' → logprob: -9.016511917114258
    7. ' ' → logprob: -9.266511917114258
    8. '`' → logprob: -10.391511917114258
    9. '\(' → logprob: -10.891511917114258
    10. '64' → logprob: -10.891511917114258

Token 2736: '8' (ID: 23)
  Prédit: '40'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '40' → logprob: -0.026243403553962708
    2. '8' → logprob: -4.151243209838867
    3. '{' → logprob: -4.901243209838867
    4. '2' → logprob: -7.026243209838867
    5. '3' → logprob: -7.901243209838867
    6. '32' → logprob: -7.901243209838867
    7. '48' → logprob: -8.276243209838867
    8. '`' → logprob: -9.026243209838867
    9. '(' → logprob: -9.151243209838867
    10. ' ' → logprob: -9.401243209838867

Token 2737: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.2745755910873413
    2. ' +' → logprob: -1.8995755910873413
    3. '```' → logprob: -3.524575710296631
    4. '+
' → logprob: -3.899575710296631
    5. ')' → logprob: -4.774575710296631
    6. '`' → logprob: -5.899575710296631
    7. ' +
' → logprob: -6.024575710296631
    8. '[' → logprob: -6.149575710296631
    9. '0' → logprob: -6.399575710296631
    10. '   ' → logprob: -6.399575710296631

Token 2738: '32' (ID: 1398)
  Prédit: '32'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '32' → logprob: -8.77627644513268e-06
    2. '64' → logprob: -12.625008583068848
    3. '37' → logprob: -12.875008583068848
    4. '33' → logprob: -13.750008583068848
    5. '`' → logprob: -14.125008583068848
    6. '```' → logprob: -15.000008583068848
    7. ' ' → logprob: -15.500008583068848
    8. '36' → logprob: -15.625008583068848
    9. '``' → logprob: -16.125009536743164
    10. ''' → logprob: -16.125009536743164

Token 2739: ' =' (ID: 314)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.9406442046165466
    2. '\n' → logprob: -1.0656442642211914
    3. '```' → logprob: -1.4406442642211914
    4. '<|end|>' → logprob: -4.690644264221191
    5. '+' → logprob: -5.565644264221191
    6. '``' → logprob: -5.565644264221191
    7. '\' → logprob: -6.565644264221191
    8. ')' → logprob: -6.690644264221191
    9. '
' → logprob: -6.940644264221191
    10. '+
' → logprob: -7.065644264221191

Token 2740: '40' (ID: 1723)
  Prédit: '40'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '40' → logprob: -3.128163257315464e-07
    2. '`' → logprob: -17.0
    3. ' ' → logprob: -17.125
    4. '48' → logprob: -17.375
    5. ''' → logprob: -17.5
    6. '41' → logprob: -17.625
    7. '50' → logprob: -18.75
    8. '```' → logprob: -19.125
    9. '"' → logprob: -19.375
    10. '``' → logprob: -19.5

Token 2741: '

' (ID: 279)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -1.0090363025665283
    2. '```' → logprob: -1.1340363025665283
    3. '   ' → logprob: -1.7590363025665283
    4. '\n' → logprob: -2.7590363025665283
    5. 'class' → logprob: -4.259036064147949
    6. '
' → logprob: -4.509036064147949
    7. ')' → logprob: -4.759036064147949
    8. '[' → logprob: -5.009036064147949
    9. 'def' → logprob: -5.134036064147949
    10. ':
' → logprob: -5.384036064147949

Token 2742: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6487808227539062
    2. ':' → logprob: -1.0237808227539062
    3. '       ' → logprob: -3.0237808227539062
    4. ':
' → logprob: -3.5237808227539062
    5. '```' → logprob: -3.8987808227539062
    6. 'def' → logprob: -4.523780822753906
    7. '
' → logprob: -6.148780822753906
    8. '):' → logprob: -6.273780822753906
    9. '           ' → logprob: -7.023780822753906
    10. '\n' → logprob: -7.148780822753906

Token 2743: ' #' (ID: 1069)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.5345219969749451
    2. '   ' → logprob: -1.4095220565795898
    3. '       ' → logprob: -3.28452205657959
    4. '```' → logprob: -3.28452205657959
    5. ':
' → logprob: -3.40952205657959
    6. '\n' → logprob: -3.78452205657959
    7. '
' → logprob: -4.40952205657959
    8. 'def' → logprob: -4.53452205657959
    9. '):' → logprob: -4.78452205657959
    10. ')' → logprob: -6.40952205657959

Token 2744: ' This' (ID: 1328)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.8318653702735901
    2. '   ' → logprob: -1.5818653106689453
    3. '       ' → logprob: -2.4568653106689453
    4. '\n' → logprob: -2.5818653106689453
    5. '```' → logprob: -2.8318653106689453
    6. 'def' → logprob: -3.3318653106689453
    7. '
' → logprob: -3.8318653106689453
    8. ':
' → logprob: -3.9568653106689453
    9. 'class' → logprob: -4.456865310668945
    10. '):' → logprob: -4.581865310668945

Token 2745: ' matches' (ID: 15248)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 2746: ' total' (ID: 3609)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4329359233379364
    2. ':' → logprob: -2.057935953140259
    3. '
' → logprob: -2.807935953140259
    4. '```' → logprob: -3.057935953140259
    5. 'def' → logprob: -3.432935953140259
    6. '       ' → logprob: -3.682935953140259
    7. 'class' → logprob: -4.18293571472168
    8. '[' → logprob: -4.93293571472168
    9. '[
' → logprob: -4.93293571472168
    10. ':
' → logprob: -5.05793571472168

Token 2747: ' mass' (ID: 4842)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '```' → logprob: -0.11656598746776581
    2. '   ' → logprob: -3.2415659427642822
    3. ':' → logprob: -4.366566181182861
    4. '`' → logprob: -4.491566181182861
    5. '``' → logprob: -4.616566181182861
    6. '[' → logprob: -4.741566181182861
    7. 'class' → logprob: -5.991566181182861
    8. '#' → logprob: -6.116566181182861
    9. ']' → logprob: -6.116566181182861
    10. ',' → logprob: -6.366566181182861

Token 2748: '!

' (ID: 1703)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.738090991973877
    2. ':' → logprob: -1.238090991973877
    3. '```' → logprob: -2.363090991973877
    4. '
' → logprob: -3.238090991973877
    5. 'def' → logprob: -4.113090991973877
    6. ':
' → logprob: -4.238090991973877
    7. 'class' → logprob: -4.488090991973877
    8. '\n' → logprob: -4.613090991973877
    9. '       ' → logprob: -4.738090991973877
    10. '[
' → logprob: -4.738090991973877

Token 2749: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5109803080558777
    2. ':' → logprob: -1.1359803676605225
    3. '
' → logprob: -4.260980129241943
    4. ':
' → logprob: -4.260980129241943
    5. '```' → logprob: -4.385980129241943
    6. '       ' → logprob: -4.510980129241943
    7. '\n' → logprob: -5.010980129241943
    8. 'def' → logprob: -5.260980129241943
    9. '[
' → logprob: -5.885980129241943
    10. '[' → logprob: -6.010980129241943

Token 2750: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5816235542297363
    2. ':' → logprob: -1.0816235542297363
    3. '       ' → logprob: -3.3316235542297363
    4. '```' → logprob: -3.7066235542297363
    5. 'def' → logprob: -4.206623554229736
    6. ':
' → logprob: -4.456623554229736
    7. '
' → logprob: -5.331623554229736
    8. '):' → logprob: -5.831623554229736
    9. ')' → logprob: -6.581623554229736
    10. '\n' → logprob: -6.706623554229736

Token 2751: ' So' (ID: 2632)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7053146958351135
    2. ':' → logprob: -0.8303146958351135
    3. 'def' → logprob: -3.7053146362304688
    4. '       ' → logprob: -4.830314636230469
    5. '```' → logprob: -4.955314636230469
    6. ')' → logprob: -5.080314636230469
    7. '):' → logprob: -5.455314636230469
    8. '
' → logprob: -5.705314636230469
    9. ':
' → logprob: -5.705314636230469
    10. '[' → logprob: -6.080314636230469

Token 2752: ' the' (ID: 290)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.516465961933136
    2. 'def' → logprob: -2.141465902328491
    3. '```' → logprob: -2.141465902328491
    4. '   ' → logprob: -3.891465902328491
    5. '[' → logprob: -3.891465902328491
    6. 'class' → logprob: -4.14146614074707
    7. '#' → logprob: -4.26646614074707
    8. '.' → logprob: -4.26646614074707
    9. ']' → logprob: -4.26646614074707
    10. '(' → logprob: -4.51646614074707

Token 2753: ' input' (ID: 3422)
  Prédit: '`'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '`' → logprob: -0.4622593820095062
    2. '```' → logprob: -2.337259292602539
    3. '"' → logprob: -2.587259292602539
    4. '#' → logprob: -3.462259292602539
    5. ' ' → logprob: -4.462259292602539
    6. ''' → logprob: -4.462259292602539
    7. ' reasoning' → logprob: -4.837259292602539
    8. 'def' → logprob: -5.087259292602539
    9. 'a' → logprob: -5.087259292602539
    10. 'n' → logprob: -5.212259292602539

Token 2754: ' and' (ID: 326)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '```' → logprob: -1.1553579568862915
    2. ':' → logprob: -1.4053579568862915
    3. '   ' → logprob: -2.530357837677002
    4. ' lines' → logprob: -2.780357837677002
    5. ' ' → logprob: -3.530357837677002
    6. '`' → logprob: -3.655357837677002
    7. '\n' → logprob: -3.905357837677002
    8. '[' → logprob: -4.155357837677002
    9. '=' → logprob: -4.155357837677002
    10. '3' → logprob: -4.155357837677002

Token 2755: ' output' (ID: 4733)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -1.6881078481674194
    2. '3' → logprob: -1.9381078481674194
    3. '4' → logprob: -1.9381078481674194
    4. '```' → logprob: -1.9381078481674194
    5. ' ' → logprob: -2.063107967376709
    6. 'b' → logprob: -2.938107967376709
    7. '1' → logprob: -2.938107967376709
    8. '2' → logprob: -3.063107967376709
    9. 'output' → logprob: -3.313107967376709
    10. ' b' → logprob: -4.188107967376709

Token 2756: ' units' (ID: 13306)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.8626468181610107
    2. '```' → logprob: -1.1126468181610107
    3. ':
' → logprob: -2.8626468181610107
    4. '[' → logprob: -3.2376468181610107
    5. '\n' → logprob: -3.3626468181610107
    6. 's' → logprob: -3.8626468181610107
    7. '   ' → logprob: -4.11264705657959
    8. '
' → logprob: -4.48764705657959
    9. ']' → logprob: -4.86264705657959
    10. ',' → logprob: -5.11264705657959

Token 2757: ' represent' (ID: 5188)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.7944429516792297
    2. '```' → logprob: -1.044442892074585
    3. '[' → logprob: -2.794442892074585
    4. '   ' → logprob: -3.419442892074585
    5. ':
' → logprob: -3.419442892074585
    6. '[
' → logprob: -4.544443130493164
    7. '``' → logprob: -4.919443130493164
    8. ',' → logprob: -5.044443130493164
    9. '
' → logprob: -5.169443130493164
    10. '):' → logprob: -5.544443130493164

Token 2758: ' powers' (ID: 27742)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '```' → logprob: -1.1906723976135254
    2. ' ' → logprob: -2.3156723976135254
    3. '`' → logprob: -2.4406723976135254
    4. '(' → logprob: -2.6906723976135254
    5. ' the' → logprob: -2.9406723976135254
    6. ',' → logprob: -2.9406723976135254
    7. ''' → logprob: -3.1906723976135254
    8. ')' → logprob: -3.1906723976135254
    9. ' a' → logprob: -3.3156723976135254
    10. '   ' → logprob: -3.3156723976135254

Token 2759: ' of' (ID: 328)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7491600513458252
    2. '```' → logprob: -1.1241600513458252
    3. ':' → logprob: -2.249160051345825
    4. '[' → logprob: -4.124159812927246
    5. '``' → logprob: -4.499159812927246
    6. '(' → logprob: -4.624159812927246
    7. ',' → logprob: -4.624159812927246
    8. '`' → logprob: -4.749159812927246
    9. '       ' → logprob: -4.999159812927246
    10. 'def' → logprob: -5.374159812927246

Token 2760: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.08016591519117355
    2. 'two' → logprob: -2.5801658630371094
    3. '```' → logprob: -7.205165863037109
    4. ' two' → logprob: -8.08016586303711
    5. '``' → logprob: -9.45516586303711
    6. 'Two' → logprob: -10.08016586303711
    7. '`' → logprob: -10.33016586303711
    8. ' ' → logprob: -10.83016586303711
    9. '-two' → logprob: -11.95516586303711
    10. '(two' → logprob: -12.08016586303711

Token 2761: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.05648484081029892
    2. 'two' → logprob: -2.9314849376678467
    3. '```' → logprob: -6.681484699249268
    4. ' two' → logprob: -8.806485176086426
    5. '``' → logprob: -9.681485176086426
    6. 'Two' → logprob: -10.681485176086426
    7. '-two' → logprob: -10.931485176086426
    8. '`' → logprob: -11.181485176086426
    9. '２' → logprob: -11.681485176086426
    10. '
' → logprob: -11.681485176086426

Token 2762: ' on' (ID: 402)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.1273088455200195
    2. '```' → logprob: -1.2523088455200195
    3. ':' → logprob: -1.7523088455200195
    4. '[' → logprob: -2.7523088455200195
    5. '\n' → logprob: -4.0023088455200195
    6. '
' → logprob: -4.0023088455200195
    7. ')' → logprob: -4.1273088455200195
    8. ',' → logprob: -4.2523088455200195
    9. '[
' → logprob: -4.3773088455200195
    10. ']' → logprob: -4.7523088455200195

Token 2763: ' exponent' (ID: 51159)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.3193679749965668
    2. 'the' → logprob: -1.5693680047988892
    3. 'x' → logprob: -3.5693678855895996
    4. '```' → logprob: -4.1943678855896
    5. ' the' → logprob: -5.3193678855896
    6. '`' → logprob: -5.6943678855896
    7. 'ex' → logprob: -5.6943678855896
    8. 'weight' → logprob: -6.3193678855896
    9. 'both' → logprob: -6.3193678855896
    10. 'their' → logprob: -7.1943678855896

Token 2764: 'ials' (ID: 16596)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.3348976671695709
    2. '```' → logprob: -1.9598976373672485
    3. '   ' → logprob: -3.959897756576538
    4. ':
' → logprob: -4.459897518157959
    5. '[' → logprob: -4.459897518157959
    6. '+' → logprob: -4.584897518157959
    7. '.' → logprob: -4.709897518157959
    8. 'def' → logprob: -4.709897518157959
    9. 'class' → logprob: -4.834897518157959
    10. '**' → logprob: -5.084897518157959

Token 2765: '.

' (ID: 364)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.5824230313301086
    2. '   ' → logprob: -1.0824229717254639
    3. '```' → logprob: -3.082422971725464
    4. '):' → logprob: -4.207423210144043
    5. '       ' → logprob: -4.332423210144043
    6. ':
' → logprob: -4.957423210144043
    7. ')' → logprob: -5.457423210144043
    8. ',' → logprob: -5.957423210144043
    9. '
' → logprob: -6.082423210144043
    10. 'def' → logprob: -6.207423210144043

Token 2766: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.25101351737976074
    2. ':' → logprob: -2.5010135173797607
    3. '```' → logprob: -2.7510135173797607
    4. '       ' → logprob: -3.3760135173797607
    5. 'def' → logprob: -3.7510135173797607
    6. ')' → logprob: -5.62601375579834
    7. '):' → logprob: -5.87601375579834
    8. '[' → logprob: -6.25101375579834
    9. '           ' → logprob: -6.75101375579834
    10. ' def' → logprob: -6.87601375579834

Token 2767: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1480298936367035
    2. ':' → logprob: -2.8980298042297363
    3. 'def' → logprob: -3.3980298042297363
    4. '       ' → logprob: -3.7730298042297363
    5. '```' → logprob: -4.148029804229736
    6. ')' → logprob: -5.648029804229736
    7. '):' → logprob: -6.148029804229736
    8. ':
' → logprob: -7.023029804229736
    9. '           ' → logprob: -7.148029804229736
    10. ' def' → logprob: -7.523029804229736

Token 2768: ' The' (ID: 623)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7165489792823792
    2. '   ' → logprob: -1.2165489196777344
    3. 'def' → logprob: -2.0915489196777344
    4. ':' → logprob: -3.2165489196777344
    5. '```' → logprob: -3.3415489196777344
    6. '):' → logprob: -5.341548919677734
    7. ' def' → logprob: -6.091548919677734
    8. ':
' → logprob: -6.091548919677734
    9. ')' → logprob: -6.091548919677734
    10. '           ' → logprob: -6.216548919677734

Token 2769: ' problem' (ID: 4792)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '```' → logprob: -1.2802977561950684
    2. '`' → logprob: -1.7802977561950684
    3. '#' → logprob: -2.1552977561950684
    4. 'def' → logprob: -2.5302977561950684
    5. ''' → logprob: -2.5302977561950684
    6. '+' → logprob: -2.6552977561950684
    7. ':' → logprob: -3.4052977561950684
    8. ' ' → logprob: -4.155297756195068
    9. '[' → logprob: -4.155297756195068
    10. '"' → logprob: -4.530297756195068

Token 2770: ' states' (ID: 9407)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '```' → logprob: -0.7879355549812317
    2. ':' → logprob: -1.162935495376587
    3. '   ' → logprob: -2.412935495376587
    4. 'def' → logprob: -3.287935495376587
    5. '#' → logprob: -4.037935733795166
    6. '``' → logprob: -4.537935733795166
    7. '[' → logprob: -4.662935733795166
    8. 'class' → logprob: -4.787935733795166
    9. '`' → logprob: -5.162935733795166
    10. '
' → logprob: -5.162935733795166

Token 2771: ':

' (ID: 1402)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.6699888706207275
    2. '```' → logprob: -1.4199888706207275
    3. '   ' → logprob: -1.6699888706207275
    4. '[' → logprob: -5.169988632202148
    5. 'def' → logprob: -5.169988632202148
    6. '``' → logprob: -5.294988632202148
    7. '):' → logprob: -5.419988632202148
    8. ':
' → logprob: -5.419988632202148
    9. ',' → logprob: -5.419988632202148
    10. '       ' → logprob: -5.544988632202148

Token 2772: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2812263071537018
    2. ':' → logprob: -2.281226396560669
    3. '       ' → logprob: -2.781226396560669
    4. '```' → logprob: -3.406226396560669
    5. ':
' → logprob: -4.28122615814209
    6. 'def' → logprob: -4.65622615814209
    7. 'class' → logprob: -5.40622615814209
    8. '
' → logprob: -5.90622615814209
    9. ',' → logprob: -6.03122615814209
    10. '           ' → logprob: -6.28122615814209

Token 2773: ' #' (ID: 1069)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.7442067265510559
    2. '   ' → logprob: -1.1192066669464111
    3. '```' → logprob: -2.494206666946411
    4. '[' → logprob: -3.619206666946411
    5. '#' (adapté à ' #') → logprob: -4.36920690536499
    6. ' ' → logprob: -4.86920690536499
    7. '(' → logprob: -4.99420690536499
    8. ',' → logprob: -5.11920690536499
    9. 'class' → logprob: -5.24420690536499
    10. ':
' → logprob: -5.24420690536499

Token 2774: ' weight' (ID: 6049)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.8184347748756409
    2. '   ' → logprob: -1.193434715270996
    3. '       ' → logprob: -2.693434715270996
    4. '```' → logprob: -3.068434715270996
    5. ':
' → logprob: -3.443434715270996
    6. '):' → logprob: -3.443434715270996
    7. 'def' → logprob: -3.568434715270996
    8. ')' → logprob: -4.693434715270996
    9. '           ' → logprob: -5.193434715270996
    10. '
' → logprob: -5.193434715270996

Token 2775: ' =' (ID: 314)
  Prédit: 'Unit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Unit' → logprob: -0.011757094413042068
    2. '```' → logprob: -5.636756896972656
    3. '   ' → logprob: -5.761756896972656
    4. '`' → logprob: -6.636756896972656
    5. ':' → logprob: -7.136756896972656
    6. ' =' → logprob: -8.261756896972656
    7. ' ' → logprob: -8.261756896972656
    8. '
' → logprob: -8.386756896972656
    9. '       ' → logprob: -8.511756896972656
    10. 's' → logprob: -8.761756896972656

Token 2776: ' ' (ID: 220)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.056284621357917786
    2. '`' → logprob: -4.056284427642822
    3. '2' → logprob: -4.431284427642822
    4. 'b' → logprob: -4.556284427642822
    5. '```' → logprob: -5.931284427642822
    6. ' a' → logprob: -6.181284427642822
    7. '0' → logprob: -6.181284427642822
    8. 'x' → logprob: -6.431284427642822
    9. '   ' → logprob: -6.556284427642822
    10. 'weight' → logprob: -6.806284427642822

Token 2777: '2' (ID: 17)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5651159286499023
    2. '`' → logprob: -1.9401159286499023
    3. 'Unit' → logprob: -1.9401159286499023
    4. 'a' → logprob: -2.8151159286499023
    5. '```' → logprob: -3.4401159286499023
    6. '**' → logprob: -4.315115928649902
    7. 'i' → logprob: -4.440115928649902
    8. '^' → logprob: -5.315115928649902
    9. '0' → logprob: -5.440115928649902
    10. '2' → logprob: -6.065115928649902

Token 2778: '^' (ID: 61)
  Prédit: '^'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '^' → logprob: -0.6680362820625305
    2. '**' → logprob: -1.1680362224578857
    3. '```' → logprob: -2.5430362224578857
    4. '^{' → logprob: -3.1680362224578857
    5. '
' → logprob: -4.168036460876465
    6. ',' → logprob: -5.043036460876465
    7. '_' → logprob: -5.293036460876465
    8. ')' → logprob: -5.418036460876465
    9. '\' → logprob: -6.043036460876465
    10. '<|end|>' → logprob: -6.043036460876465

Token 2779: 'a' (ID: 64)
  Prédit: 'a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.2857813835144043
    2. 'x' → logprob: -1.4107813835144043
    3. '```' → logprob: -5.535781383514404
    4. '(a' → logprob: -8.910781860351562
    5. '`' → logprob: -9.035781860351562
    6. ')' → logprob: -9.410781860351562
    7. '
' → logprob: -9.785781860351562
    8. '(x' → logprob: -10.285781860351562
    9. '#' → logprob: -10.410781860351562
    10. 'b' → logprob: -10.535781860351562

Token 2780: ',' (ID: 11)
  Prédit: 'Unit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Unit' → logprob: -1.0576483011245728
    2. '```' → logprob: -1.1826483011245728
    3. '`' → logprob: -2.432648181915283
    4. '_' → logprob: -2.432648181915283
    5. '**' → logprob: -3.557648181915283
    6. '_i' → logprob: -3.682648181915283
    7. ')' → logprob: -4.057648181915283
    8. ']' → logprob: -4.057648181915283
    9. ''' → logprob: -4.432648181915283
    10. '[' → logprob: -4.682648181915283

Token 2781: ' quantity' (ID: 17245)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '```' → logprob: -0.33716368675231934
    2. 'Unit' → logprob: -1.4621636867523193
    3. '``' → logprob: -4.587163925170898
    4. '`' → logprob: -4.587163925170898
    5. '_' → logprob: -5.212163925170898
    6. '_i' → logprob: -5.462163925170898
    7. ':' → logprob: -5.712163925170898
    8. '   ' → logprob: -5.837163925170898
    9. ')' → logprob: -5.837163925170898
    10. '**' → logprob: -5.962163925170898

Token 2782: ' =' (ID: 314)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '```' → logprob: -0.2560969293117523
    2. 'Unit' → logprob: -1.7560969591140747
    3. '_i' → logprob: -4.506096839904785
    4. '`' → logprob: -5.131096839904785
    5. ':' → logprob: -5.256096839904785
    6. ')' → logprob: -5.506096839904785
    7. '``' → logprob: -5.506096839904785
    8. '   ' → logprob: -5.881096839904785
    9. '+' → logprob: -6.381096839904785
    10. '_' → logprob: -6.381096839904785

Token 2783: '2' (ID: 17)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -5.228561349213123e-05
    2. 'a' → logprob: -10.750052452087402
    3. '```' → logprob: -11.625052452087402
    4. '(b' → logprob: -11.875052452087402
    5. '0' → logprob: -12.375052452087402
    6. '(' → logprob: -13.000052452087402
    7. '`' → logprob: -13.750052452087402
    8. '2' → logprob: -13.750052452087402
    9. '{' → logprob: -14.125052452087402
    10. '
' → logprob: -14.500052452087402

Token 2784: '^' (ID: 61)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.7932242751121521
    2. '^' → logprob: -1.5432243347167969
    3. ')' → logprob: -2.168224334716797
    4. '```' → logprob: -2.168224334716797
    5. '**' → logprob: -3.418224334716797
    6. '_i' → logprob: -4.418224334716797
    7. '[' → logprob: -4.793224334716797
    8. '`' → logprob: -4.793224334716797
    9. 'Unit' → logprob: -4.793224334716797
    10. ''' → logprob: -5.293224334716797

Token 2785: 'b' (ID: 65)
  Prédit: 'b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.0012832103529945016
    2. 'a' → logprob: -6.751283168792725
    3. '```' → logprob: -9.876283645629883
    4. '_b' → logprob: -10.501283645629883
    5. '_' → logprob: -11.876283645629883
    6. '_a' → logprob: -12.376283645629883
    7. '`' → logprob: -12.626283645629883
    8. 'y' → logprob: -12.751283645629883
    9. ',' → logprob: -13.001283645629883
    10. ')' → logprob: -13.126283645629883

Token 2786: ',' (ID: 11)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.155798316001892
    2. '```' → logprob: -1.405798316001892
    3. ':' → logprob: -1.780798316001892
    4. '
' → logprob: -2.5307984352111816
    5. ':
' → logprob: -2.6557984352111816
    6. '\n' → logprob: -3.7807984352111816
    7. '[' → logprob: -4.030798435211182
    8. '[
' → logprob: -4.030798435211182
    9. 'def' → logprob: -4.155798435211182
    10. '**' → logprob: -4.905798435211182

Token 2787: ' total' (ID: 3609)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '```' → logprob: -0.26229342818260193
    2. '   ' → logprob: -2.7622933387756348
    3. '``' → logprob: -3.2622933387756348
    4. ':' → logprob: -4.387293338775635
    5. '`' → logprob: -4.387293338775635
    6. '**' → logprob: -4.512293338775635
    7. 'Unit' → logprob: -4.512293338775635
    8. ')' → logprob: -4.512293338775635
    9. '"""
' → logprob: -4.637293338775635
    10. '#' → logprob: -5.012293338775635

Token 2788: ' mass' (ID: 4842)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '```' → logprob: -0.07971514761447906
    2. '_i' → logprob: -3.9547152519226074
    3. ')' → logprob: -4.329715251922607
    4. '_' → logprob: -4.954715251922607
    5. ''' → logprob: -4.954715251922607
    6. '``' → logprob: -5.079715251922607
    7. 'Unit' → logprob: -5.329715251922607
    8. '`' → logprob: -5.329715251922607
    9. '   ' → logprob: -6.079715251922607
    10. ''_' → logprob: -6.204715251922607

Token 2789: ' per' (ID: 777)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '```' → logprob: -0.2017538994550705
    2. ':' → logprob: -2.826753854751587
    3. ''' → logprob: -3.701753854751587
    4. '   ' → logprob: -3.826753854751587
    5. '`' → logprob: -4.076754093170166
    6. '``' → logprob: -4.701754093170166
    7. '*' → logprob: -5.326754093170166
    8. '[' → logprob: -5.326754093170166
    9. ')' → logprob: -5.451754093170166
    10. '**' → logprob: -5.701754093170166

Token 2790: ' chunk' (ID: 23958)
  Prédit: 'chunk'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'chunk' → logprob: -0.0072989752516150475
    2. '_chunk' → logprob: -5.382298946380615
    3. 'a' → logprob: -6.257298946380615
    4. '```' → logprob: -8.257299423217773
    5. 'i' → logprob: -8.882299423217773
    6. 'line' → logprob: -9.257299423217773
    7. '_i' → logprob: -9.507299423217773
    8. 'item' → logprob: -9.757299423217773
    9. ' chunk' → logprob: -11.132299423217773
    10. 'unit' → logprob: -11.257299423217773

Token 2791: ' =' (ID: 314)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '```' → logprob: -0.4398096203804016
    2. '   ' → logprob: -1.5648095607757568
    3. ':' → logprob: -3.064809560775757
    4. ',' → logprob: -4.314809799194336
    5. '``' → logprob: -4.564809799194336
    6. '`' → logprob: -4.564809799194336
    7. '**' → logprob: -4.689809799194336
    8. '[' → logprob: -4.939809799194336
    9. '
' → logprob: -5.439809799194336
    10. ' ' → logprob: -5.564809799194336

Token 2792: ' ' (ID: 220)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.05261391028761864
    2. 'b' → logprob: -3.3026139736175537
    3. '```' → logprob: -5.802613735198975
    4. '`' → logprob: -6.052613735198975
    5. '2' → logprob: -6.427613735198975
    6. '{' → logprob: -6.927613735198975
    7. ' a' → logprob: -7.177613735198975
    8. '+' → logprob: -7.427613735198975
    9. '(a' → logprob: -7.427613735198975
    10. '^{' → logprob: -7.677613735198975

Token 2793: '2' (ID: 17)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.037254609167575836
    2. '(a' → logprob: -4.037254810333252
    3. '{' → logprob: -4.537254810333252
    4. 'b' → logprob: -5.412254810333252
    5. '^{' → logprob: -6.412254810333252
    6. '{
' → logprob: -7.662254810333252
    7. '`' → logprob: -7.787254810333252
    8. '(' → logprob: -7.787254810333252
    9. '(b' → logprob: -9.037254333496094
    10. ' (' → logprob: -9.037254333496094

Token 2794: '^{' (ID: 42923)
  Prédit: '^{'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '^{' → logprob: -0.6783332824707031
    2. '^' → logprob: -1.0533332824707031
    3. '**' → logprob: -2.553333282470703
    4. '```' → logprob: -3.053333282470703
    5. '`' → logprob: -5.928333282470703
    6. '_' → logprob: -6.053333282470703
    7. '
' → logprob: -6.178333282470703
    8. 'a' → logprob: -6.553333282470703
    9. '\' → logprob: -6.678333282470703
    10. '_a' → logprob: -6.678333282470703

Token 2795: 'a' (ID: 64)
  Prédit: 'a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.17026515305042267
    2. '(a' → logprob: -1.9202651977539062
    3. '(' → logprob: -4.670265197753906
    4. ' (' → logprob: -8.670265197753906
    5. '
' → logprob: -9.545265197753906
    6. '+' → logprob: -9.670265197753906
    7. '(
' → logprob: -9.920265197753906
    8. '(self' → logprob: -10.170265197753906
    9. '```' → logprob: -10.545265197753906
    10. '`' → logprob: -10.920265197753906

Token 2796: '+b' (ID: 76609)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.4259123206138611
    2. '_' → logprob: -1.6759123802185059
    3. '}' → logprob: -2.425912380218506
    4. '```' → logprob: -3.800912380218506
    5. '_i' → logprob: -4.800912380218506
    6. '#' → logprob: -5.050912380218506
    7. '^' → logprob: -5.675912380218506
    8. ']' → logprob: -5.800912380218506
    9. '}_' → logprob: -5.800912380218506
    10. '+
' → logprob: -5.800912380218506

Token 2797: '}

' (ID: 943)
  Prédit: '}'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '}' → logprob: -0.1616910845041275
    2. '```' → logprob: -2.411691188812256
    3. '+' → logprob: -3.161691188812256
    4. '}
' → logprob: -5.911691188812256
    5. '}`' → logprob: -6.036691188812256
    6. '#' → logprob: -6.286691188812256
    7. ']' → logprob: -6.411691188812256
    8. '**' → logprob: -6.411691188812256
    9. '``' → logprob: -6.786691188812256
    10. ')' → logprob: -7.161691188812256

Token 2798: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7345980405807495
    2. ':' → logprob: -1.8595980405807495
    3. '
' → logprob: -1.9845980405807495
    4. '```' → logprob: -2.234598159790039
    5. ':
' → logprob: -2.984598159790039
    6. '\n' → logprob: -4.234598159790039
    7. '[
' → logprob: -4.234598159790039
    8. '[' → logprob: -4.609598159790039
    9. 'class' → logprob: -5.109598159790039
    10. 'def' → logprob: -5.234598159790039

Token 2799: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2145671248435974
    2. ':' → logprob: -2.589567184448242
    3. 'def' → logprob: -3.339567184448242
    4. '```' → logprob: -3.464567184448242
    5. ':
' → logprob: -3.964567184448242
    6. '       ' → logprob: -4.214567184448242
    7. '
' → logprob: -5.089567184448242
    8. 'class' → logprob: -5.589567184448242
    9. '):' → logprob: -6.964567184448242
    10. ' def' → logprob: -6.964567184448242

Token 2800: ' The' (ID: 623)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.5605040788650513
    2. '   ' → logprob: -1.0605040788650513
    3. '```' → logprob: -3.3105039596557617
    4. ':' → logprob: -4.310503959655762
    5. ':
' → logprob: -4.810503959655762
    6. ' def' → logprob: -4.935503959655762
    7. '
' → logprob: -5.060503959655762
    8. '       ' → logprob: -5.560503959655762
    9. 'from' → logprob: -5.560503959655762
    10. 'class' → logprob: -6.560503959655762

Token 2801: ' problem' (ID: 4792)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '```' → logprob: -0.22781316936016083
    2. '`' → logprob: -2.727813243865967
    3. ''' → logprob: -3.227813243865967
    4. ':' → logprob: -3.477813243865967
    5. ' ' → logprob: -4.727813243865967
    6. '``' → logprob: -4.727813243865967
    7. ')' → logprob: -4.977813243865967
    8. '"' → logprob: -5.102813243865967
    9. '+' → logprob: -5.352813243865967
    10. '#' → logprob: -5.477813243865967

Token 2802: ' wants' (ID: 10648)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.3669578433036804
    2. '   ' → logprob: -2.116957902908325
    3. '```' → logprob: -2.866957902908325
    4. ':
' → logprob: -3.366957902908325
    5. 'def' → logprob: -4.241957664489746
    6. '):' → logprob: -4.366957664489746
    7. '[' → logprob: -4.741957664489746
    8. '#' → logprob: -4.741957664489746
    9. ')' → logprob: -4.866957664489746
    10. '[
' → logprob: -5.616957664489746

Token 2803: ' minimal' (ID: 19957)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7684776186943054
    2. '```' → logprob: -1.1434776782989502
    3. 'def' → logprob: -2.26847767829895
    4. ':' → logprob: -3.01847767829895
    5. ' to' → logprob: -4.018477439880371
    6. '`' → logprob: -4.893477439880371
    7. '``' → logprob: -5.143477439880371
    8. '
' → logprob: -5.143477439880371
    9. 'to' → logprob: -5.393477439880371
    10. '       ' → logprob: -5.768477439880371

Token 2804: ' number' (ID: 2086)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '```' → logprob: -0.20746006071567535
    2. '_chunk' → logprob: -2.3324601650238037
    3. '_chunks' → logprob: -2.8324601650238037
    4. 'def' → logprob: -5.332459926605225
    5. 'chunks' → logprob: -5.332459926605225
    6. '_count' → logprob: -5.582459926605225
    7. '``' → logprob: -5.707459926605225
    8. '_lines' → logprob: -5.707459926605225
    9. 'Chunks' → logprob: -6.082459926605225
    10. 'Chunk' → logprob: -6.457459926605225

Token 2805: ' of' (ID: 328)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '```' → logprob: -0.7869383096694946
    2. '
' → logprob: -1.4119383096694946
    3. 's' → logprob: -2.286938190460205
    4. 'of' → logprob: -3.411938190460205
    5. '#' → logprob: -3.661938190460205
    6. 'def' → logprob: -4.036938190460205
    7. '``' → logprob: -4.411938190460205
    8. ' of' → logprob: -4.411938190460205
    9. '**' → logprob: -4.911938190460205
    10. '   ' → logprob: -5.036938190460205

Token 2806: ' chunks' (ID: 53440)
  Prédit: 'chunks'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'chunks' → logprob: -0.011998703703284264
    2. '```' → logprob: -5.011998653411865
    3. '_chunks' → logprob: -6.886998653411865
    4. 'chunk' → logprob: -7.136998653411865
    5. ' chunks' → logprob: -7.386998653411865
    6. '(' → logprob: -7.386998653411865
    7. ' (' → logprob: -7.886998653411865
    8. 'lines' → logprob: -8.261999130249023
    9. 'Chunks' → logprob: -8.386999130249023
    10. ')' → logprob: -8.386999130249023

Token 2807: ' such' (ID: 2238)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5053382515907288
    2. ':' → logprob: -2.130338191986084
    3. '```' → logprob: -2.380338191986084
    4. ':
' → logprob: -2.630338191986084
    5. 'def' → logprob: -3.505338191986084
    6. '
' → logprob: -4.005338191986084
    7. '       ' → logprob: -4.130338191986084
    8. '[
' → logprob: -4.130338191986084
    9. '):' → logprob: -5.255338191986084
    10. ')' → logprob: -5.505338191986084

Token 2808: ' that' (ID: 484)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.04177134111523628
    2. ':' → logprob: -4.166771411895752
    3. '```' → logprob: -4.791771411895752
    4. 'def' → logprob: -5.041771411895752
    5. '**' → logprob: -6.291771411895752
    6. '#' → logprob: -6.666771411895752
    7. '=
' → logprob: -6.666771411895752
    8. '.' → logprob: -7.291771411895752
    9. 'that' → logprob: -7.541771411895752
    10. 'to' → logprob: -7.791771411895752

Token 2809: ' sum' (ID: 4215)
  Prédit: 'the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'the' → logprob: -1.2705191373825073
    2. 'a' → logprob: -1.6455191373825073
    3. '```' → logprob: -1.6455191373825073
    4. '   ' → logprob: -2.645519256591797
    5. 'each' → logprob: -2.895519256591797
    6. '#' → logprob: -3.020519256591797
    7. ' the' → logprob: -3.645519256591797
    8. '
' → logprob: -4.020519256591797
    9. '`' → logprob: -4.270519256591797
    10. 'they' → logprob: -4.270519256591797

Token 2810: ' of' (ID: 328)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '```' → logprob: -0.7803584933280945
    2. '
' → logprob: -1.9053585529327393
    3. '   ' → logprob: -2.1553585529327393
    4. '(' → logprob: -2.7803585529327393
    5. ' ' → logprob: -3.1553585529327393
    6. '_i' → logprob: -3.6553585529327393
    7. '(a' → logprob: -4.15535831451416
    8. ' (' → logprob: -4.15535831451416
    9. '[' → logprob: -4.28035831451416
    10. '`' → logprob: -4.28035831451416

Token 2811: ' ' (ID: 220)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.03100534901022911
    2. '2' → logprob: -4.906005382537842
    3. 'powers' → logprob: -5.156005382537842
    4. 'ex' → logprob: -5.281005382537842
    5. 'mass' → logprob: -5.281005382537842
    6. 'chunk' → logprob: -6.281005382537842
    7. 'chunks' → logprob: -6.656005382537842
    8. 'pow' → logprob: -7.156005382537842
    9. '(a' → logprob: -7.156005382537842
    10. '```' → logprob: -7.531005382537842

Token 2812: '2' (ID: 17)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.01250446867197752
    2. 'ex' → logprob: -4.512504577636719
    3. 'b' → logprob: -7.762504577636719
    4. '```' → logprob: -8.137504577636719
    5. 'powers' → logprob: -8.262504577636719
    6. '(a' → logprob: -8.762504577636719
    7. '`' → logprob: -10.137504577636719
    8. '``' → logprob: -10.137504577636719
    9. 'chunks' → logprob: -10.137504577636719
    10. '
' → logprob: -10.887504577636719

Token 2813: '^{' (ID: 42923)
  Prédit: '^'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '^' → logprob: -0.09642015397548676
    2. '**' → logprob: -2.9714200496673584
    3. '^{' → logprob: -3.3464200496673584
    4. '```' → logprob: -5.8464202880859375
    5. '
' → logprob: -6.7214202880859375
    6. '`' → logprob: -7.4714202880859375
    7. '_' → logprob: -8.471420288085938
    8. ''s' → logprob: -8.971420288085938
    9. '**
' → logprob: -9.471420288085938
    10. '#' → logprob: -9.846420288085938

Token 2814: 'a' (ID: 64)
  Prédit: 'a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.0013260759878903627
    2. '(a' → logprob: -7.126326084136963
    3. 'b' → logprob: -8.751325607299805
    4. 'x' → logprob: -9.001325607299805
    5. '(' → logprob: -9.126325607299805
    6. '```' → logprob: -10.751325607299805
    7. '+' → logprob: -11.626325607299805
    8. '
' → logprob: -11.751325607299805
    9. '...' → logprob: -11.751325607299805
    10. ''a' → logprob: -11.751325607299805

Token 2815: '_j' (ID: 12021)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.030273372307419777
    2. '_' → logprob: -4.5302734375
    3. '+b' → logprob: -4.9052734375
    4. '```' → logprob: -5.7802734375
    5. '_i' → logprob: -6.0302734375
    6. ',' → logprob: -6.2802734375
    7. '}' → logprob: -7.4052734375
    8. '+
' → logprob: -7.5302734375
    9. '_b' → logprob: -8.1552734375
    10. '_j' → logprob: -8.2802734375

Token 2816: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.261025995016098
    2. '+b' → logprob: -1.5110260248184204
    3. '+j' → logprob: -5.511025905609131
    4. '+
' → logprob: -5.886025905609131
    5. ' +' → logprob: -7.136025905609131
    6. '```' → logprob: -7.886025905609131
    7. ',' → logprob: -8.136026382446289
    8. ',b' → logprob: -9.261026382446289
    9. '}' → logprob: -9.386026382446289
    10. 'b' → logprob: -9.511026382446289

Token 2817: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -1.8624639324116288e-06
    2. 'j' → logprob: -13.625001907348633
    3. ' b' → logprob: -15.000001907348633
    4. '```' → logprob: -15.250001907348633
    5. '
' → logprob: -17.750001907348633
    6. '`' → logprob: -18.125001907348633
    7. '...' → logprob: -18.875001907348633
    8. '_j' → logprob: -19.125001907348633
    9. '_b' → logprob: -19.250001907348633
    10. '**' → logprob: -19.375001907348633

Token 2818: '_j' (ID: 12021)
  Prédit: '_j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_j' → logprob: -0.01876165345311165
    2. '_i' → logprob: -4.76876163482666
    3. '}_' → logprob: -4.89376163482666
    4. '}' → logprob: -6.39376163482666
    5. '+' → logprob: -7.64376163482666
    6. '+j' → logprob: -9.01876163482666
    7. '_' → logprob: -9.01876163482666
    8. ''_' → logprob: -9.39376163482666
    9. '```' → logprob: -9.64376163482666
    10. 'j' → logprob: -10.51876163482666

Token 2819: '}' (ID: 92)
  Prédit: '}'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '}' → logprob: -0.027409056201577187
    2. ''}' → logprob: -3.777409076690674
    3. '```' → logprob: -6.402409076690674
    4. '}
' → logprob: -6.902409076690674
    5. '}`' → logprob: -7.277409076690674
    6. '}'' → logprob: -8.152408599853516
    7. '}=' → logprob: -9.152408599853516
    8. ''' → logprob: -9.152408599853516
    9. '`}' → logprob: -9.152408599853516
    10. '``' → logprob: -10.402408599853516

Token 2820: ' =' (ID: 314)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '```' → logprob: -0.9239206910133362
    2. '+' → logprob: -1.9239206314086914
    3. ':' → logprob: -2.1739206314086914
    4. ''' → logprob: -2.4239206314086914
    5. '#' → logprob: -3.2989206314086914
    6. '_' → logprob: -3.6739206314086914
    7. '[' → logprob: -3.9239206314086914
    8. '}' → logprob: -3.9239206314086914
    9. '_j' → logprob: -3.9239206314086914
    10. '=' → logprob: -4.173920631408691

Token 2821: ' total' (ID: 3609)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.051095061004161835
    2. '`' → logprob: -4.301095008850098
    3. ''' → logprob: -5.051095008850098
    4. '2' → logprob: -5.551095008850098
    5. '1' → logprob: -5.676095008850098
    6. ''a' → logprob: -5.801095008850098
    7. ''s' → logprob: -5.926095008850098
    8. 'b' → logprob: -5.926095008850098
    9. '40' → logprob: -6.176095008850098
    10. 'total' → logprob: -6.301095008850098

Token 2822: ' mass' (ID: 4842)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '```' → logprob: -0.8738024830818176
    2. '
' → logprob: -1.8738024234771729
    3. '\n' → logprob: -2.373802423477173
    4. '_' → logprob: -2.998802423477173
    5. '_i' → logprob: -3.123802423477173
    6. ':' → logprob: -3.623802423477173
    7. '_
' → logprob: -3.873802423477173
    8. '`' → logprob: -3.873802423477173
    9. '\' → logprob: -3.998802423477173
    10. '   ' → logprob: -4.248802661895752

Token 2823: '.

' (ID: 364)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -1.023903250694275
    2. '   ' → logprob: -1.023903250694275
    3. '```' → logprob: -2.1489033699035645
    4. ':
' → logprob: -3.0239033699035645
    5. 'def' → logprob: -3.6489033699035645
    6. '
' → logprob: -3.8989033699035645
    7. '[' → logprob: -4.0239033699035645
    8. '[
' → logprob: -4.2739033699035645
    9. '):' → logprob: -5.0239033699035645
    10. ',' → logprob: -5.1489033699035645

Token 2824: '       ' (ID: 309)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.41681402921676636
    2. '   ' → logprob: -1.4168140888214111
    3. '```' → logprob: -3.291814088821411
    4. ':' → logprob: -3.916814088821411
    5. ':
' → logprob: -4.416813850402832
    6. '
' → logprob: -4.916813850402832
    7. ' def' → logprob: -4.916813850402832
    8. '       ' → logprob: -5.166813850402832
    9. 'from' → logprob: -6.166813850402832
    10. 'class' → logprob: -6.416813850402832

Token 2825: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.0112950801849365
    2. '       ' → logprob: -1.3862950801849365
    3. ':' → logprob: -2.0112950801849365
    4. 'def' → logprob: -2.0112950801849365
    5. ':
' → logprob: -2.7612950801849365
    6. '```' → logprob: -3.6362950801849365
    7. '
' → logprob: -4.886295318603516
    8. '           ' → logprob: -5.386295318603516
    9. ' def' → logprob: -5.636295318603516
    10. '#' (adapté à ' #') → logprob: -6.261295318603516

Token 2826: ' Since' (ID: 12265)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.06874868273735046
    2. '   ' → logprob: -4.068748474121094
    3. '       ' → logprob: -4.318748474121094
    4. 'from' → logprob: -4.318748474121094
    5. '```' → logprob: -4.943748474121094
    6. ':
' → logprob: -4.943748474121094
    7. ':' → logprob: -5.443748474121094
    8. '#' → logprob: -7.318748474121094
    9. '):
' → logprob: -7.568748474121094
    10. '           ' → logprob: -7.818748474121094

Token 2827: ' mass' (ID: 4842)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '```' → logprob: -0.9427939057350159
    2. '   ' → logprob: -1.567793846130371
    3. ':' → logprob: -1.692793846130371
    4. 'def' → logprob: -2.317793846130371
    5. '0' → logprob: -4.067793846130371
    6. '`' → logprob: -4.192793846130371
    7. ']' → logprob: -4.567793846130371
    8. '):' → logprob: -4.817793846130371
    9. '``' → logprob: -4.817793846130371
    10. '
' → logprob: -4.942793846130371

Token 2828: ' is' (ID: 382)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''' → logprob: -0.8639052510261536
    2. '`' → logprob: -2.238905191421509
    3. '=' → logprob: -2.488905191421509
    4. '```' → logprob: -2.738905191421509
    5. ' =' → logprob: -2.988905191421509
    6. 'Unit' → logprob: -3.113905191421509
    7. '#' → logprob: -3.488905191421509
    8. '"' → logprob: -3.613905191421509
    9. ':' → logprob: -3.738905191421509
    10. '   ' → logprob: -3.988905191421509

Token 2829: ' a' (ID: 261)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '2' → logprob: -0.6416050791740417
    2. 'always' → logprob: -2.0166051387786865
    3. 'a' → logprob: -2.2666051387786865
    4. 'the' → logprob: -2.8916051387786865
    5. 'express' → logprob: -3.2666051387786865
    6. 'sum' → logprob: -3.3916051387786865
    7. 'represented' → logprob: -3.8916051387786865
    8. '`' → logprob: -4.016604900360107
    9. '```' → logprob: -4.266604900360107
    10. 'exact' → logprob: -5.391604900360107

Token 2830: ' power' (ID: 3470)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -1.6567213535308838
    2. '_' → logprob: -1.7817213535308838
    3. 'n' → logprob: -2.156721353530884
    4. '**' → logprob: -2.656721353530884
    5. ')' → logprob: -2.781721353530884
    6. '^' → logprob: -2.906721353530884
    7. '`' → logprob: -3.156721353530884
    8. '^{' → logprob: -3.156721353530884
    9. 's' → logprob: -3.281721353530884
    10. '=' → logprob: -3.531721353530884

Token 2831: ' of' (ID: 328)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '```' → logprob: -1.1424566507339478
    2. '_' → logprob: -1.5174566507339478
    3. '\' → logprob: -2.392456531524658
    4. ')' → logprob: -3.017456531524658
    5. '[' → logprob: -3.142456531524658
    6. '#' → logprob: -3.517456531524658
    7. ' ' → logprob: -3.517456531524658
    8. '`' → logprob: -3.767456531524658
    9. 'i' → logprob: -3.892456531524658
    10. '=' → logprob: -4.017456531524658

Token 2832: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '2' → logprob: -0.12529908120632172
    2. 'two' → logprob: -2.5002989768981934
    3. '-two' → logprob: -4.000298976898193
    4. '-' → logprob: -4.250298976898193
    5. '```' → logprob: -6.125298976898193
    6. 'Two' → logprob: -7.750298976898193
    7. ' two' → logprob: -9.500299453735352
    8. '``' → logprob: -9.500299453735352
    9. '_two' → logprob: -9.625299453735352
    10. '_' → logprob: -10.125299453735352

Token 2833: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0031716525554656982
    2. 'two' → logprob: -6.003171443939209
    3. '-' → logprob: -7.503171443939209
    4. '-two' → logprob: -9.378171920776367
    5. 'Two' → logprob: -10.753171920776367
    6. '{' → logprob: -11.253171920776367
    7. '```' → logprob: -11.628171920776367
    8. '_' → logprob: -13.128171920776367
    9. ' two' → logprob: -13.253171920776367
    10. '**' → logprob: -13.878171920776367

Token 2834: ' exponent' (ID: 51159)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.9032482504844666
    2. ':' → logprob: -1.5282483100891113
    3. ':
' → logprob: -2.5282483100891113
    4. '```' → logprob: -2.6532483100891113
    5. 'def' → logprob: -2.7782483100891113
    6. '
' → logprob: -3.2782483100891113
    7. '[
' → logprob: -3.7782483100891113
    8. '\n' → logprob: -4.028248310089111
    9. '[' → logprob: -4.028248310089111
    10. ' =' → logprob: -4.528248310089111

Token 2835: ',' (ID: 11)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '```' → logprob: -0.5875848531723022
    2. '+' → logprob: -1.7125848531723022
    3. ':' → logprob: -2.962584972381592
    4. '_' → logprob: -3.587584972381592
    5. '``' → logprob: -3.587584972381592
    6. '=' → logprob: -3.837584972381592
    7. '[' → logprob: -4.087584972381592
    8. 's' → logprob: -4.462584972381592
    9. '`' → logprob: -4.462584972381592
    10. '#' → logprob: -4.587584972381592

Token 2836: ' it's' (ID: 4275)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '```' → logprob: -0.7836191654205322
    2. 'def' → logprob: -2.0336191654205322
    3. '   ' → logprob: -2.6586191654205322
    4. '
' → logprob: -3.2836191654205322
    5. 'class' → logprob: -3.4086191654205322
    6. '       ' → logprob: -3.5336191654205322
    7. '\n' → logprob: -3.6586191654205322
    8. '#' → logprob: -3.7836191654205322
    9. '`' → logprob: -3.9086191654205322
    10. ':' → logprob: -4.033618927001953

Token 2837: ' sum' (ID: 4215)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -1.1821118593215942
    2. '`' → logprob: -2.0571117401123047
    3. ']' → logprob: -2.3071117401123047
    4. '```' → logprob: -2.4321117401123047
    5. '_' → logprob: -2.6821117401123047
    6. '\' → logprob: -3.5571117401123047
    7. ')' → logprob: -3.5571117401123047
    8. '=' → logprob: -3.6821117401123047
    9. '^' → logprob: -3.9321117401123047
    10. 'a' → logprob: -3.9321117401123047

Token 2838: ' of' (ID: 328)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -1.9433653354644775
    2. '```' → logprob: -1.9433653354644775
    3. '[' → logprob: -2.0683653354644775
    4. '[
' → logprob: -2.4433653354644775
    5. '=' → logprob: -2.8183653354644775
    6. '**' → logprob: -3.3183653354644775
    7. '   ' → logprob: -3.4433653354644775
    8. '}' → logprob: -3.6933653354644775
    9. ')' → logprob: -3.6933653354644775
    10. '_' → logprob: -3.6933653354644775

Token 2839: ' powers' (ID: 27742)
  Prédit: 'powers'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'powers' → logprob: -0.06217774376273155
    2. '2' → logprob: -3.0621776580810547
    3. '1' → logprob: -5.437177658081055
    4. 'a' → logprob: -5.687177658081055
    5. 'chunks' → logprob: -6.312177658081055
    6. 'two' → logprob: -6.812177658081055
    7. 'ex' → logprob: -7.312177658081055
    8. '```' → logprob: -7.812177658081055
    9. '`' → logprob: -8.437177658081055
    10. 'pow' → logprob: -8.562177658081055

Token 2840: ' of' (ID: 328)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '```' → logprob: -0.5723512172698975
    2. '   ' → logprob: -2.1973512172698975
    3. '`' → logprob: -2.6973512172698975
    4. '       ' → logprob: -2.9473512172698975
    5. '``' → logprob: -3.4473512172698975
    6. ':' → logprob: -3.6973512172698975
    7. '[' → logprob: -3.8223512172698975
    8. '[
' → logprob: -3.9473512172698975
    9. ')' → logprob: -4.447351455688477
    10. '#' → logprob: -4.447351455688477

Token 2841: ' two' (ID: 1920)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.004676830023527145
    2. 'two' → logprob: -5.379676818847656
    3. '```' → logprob: -10.754676818847656
    4. 'Two' → logprob: -11.379676818847656
    5. ' two' → logprob: -11.754676818847656
    6. '
' → logprob: -12.129676818847656
    7. ' ' → logprob: -12.629676818847656
    8. '``' → logprob: -13.504676818847656
    9. '...' → logprob: -13.629676818847656
    10. '-two' → logprob: -14.004676818847656

Token 2842: '.

' (ID: 364)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6695072054862976
    2. ':' → logprob: -1.1695072650909424
    3. '```' → logprob: -2.5445072650909424
    4. '       ' → logprob: -3.0445072650909424
    5. '[' → logprob: -4.544507026672363
    6. 'def' → logprob: -4.919507026672363
    7. ':
' → logprob: -5.169507026672363
    8. ',' → logprob: -5.419507026672363
    9. '):' → logprob: -5.919507026672363
    10. '[
' → logprob: -6.169507026672363

Token 2843: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.37003567814826965
    2. 'def' → logprob: -1.7450356483459473
    3. ':
' → logprob: -3.4950356483459473
    4. ':' → logprob: -3.6200356483459473
    5. '       ' → logprob: -3.7450356483459473
    6. '```' → logprob: -3.8700356483459473
    7. 'class' → logprob: -4.620035648345947
    8. 'from' → logprob: -4.745035648345947
    9. '
' → logprob: -4.995035648345947
    10. ')' → logprob: -6.870035648345947

Token 2844: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7237364053726196
    2. ':' → logprob: -1.0987364053726196
    3. '       ' → logprob: -2.72373628616333
    4. 'def' → logprob: -3.47373628616333
    5. '```' → logprob: -3.72373628616333
    6. '):' → logprob: -3.97373628616333
    7. ':
' → logprob: -4.09873628616333
    8. ')' → logprob: -5.22373628616333
    9. ',' → logprob: -5.72373628616333
    10. '#' (adapté à ' #') → logprob: -6.34873628616333

Token 2845: ' Thus' (ID: 23586)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.37615829706192017
    2. '       ' → logprob: -1.3761582374572754
    3. '```' → logprob: -4.126158237457275
    4. '   ' → logprob: -4.251158237457275
    5. ':' → logprob: -5.126158237457275
    6. '           ' → logprob: -5.251158237457275
    7. 'from' → logprob: -5.376158237457275
    8. ':
' → logprob: -5.376158237457275
    9. '):
' → logprob: -6.126158237457275
    10. '               ' → logprob: -6.751158237457275

Token 2846: ',' (ID: 11)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8887098431587219
    2. ':' → logprob: -1.5137097835540771
    3. 'def' → logprob: -2.013709783554077
    4. '       ' → logprob: -2.513709783554077
    5. ':
' → logprob: -3.013709783554077
    6. '```' → logprob: -3.263709783554077
    7. '):' → logprob: -5.138710021972656
    8. ']' → logprob: -5.263710021972656
    9. '
' → logprob: -5.263710021972656
    10. '           ' → logprob: -5.263710021972656

Token 2847: ' we' (ID: 581)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.913213312625885
    2. '       ' → logprob: -1.4132132530212402
    3. 'from' → logprob: -2.1632132530212402
    4. ':' → logprob: -2.5382132530212402
    5. '```' → logprob: -3.0382132530212402
    6. ':
' → logprob: -3.2882132530212402
    7. '   ' → logprob: -3.5382132530212402
    8. 'import' → logprob: -4.78821325302124
    9. 'class' → logprob: -5.03821325302124
    10. '           ' → logprob: -5.03821325302124

Token 2848: ' get' (ID: 717)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.2892589271068573
    2. ':' → logprob: -3.1642589569091797
    3. ' can' → logprob: -3.2892589569091797
    4. '```' → logprob: -3.4142589569091797
    5. ' need' → logprob: -3.6642589569091797
    6. '=' → logprob: -3.9142589569091797
    7. '#' → logprob: -4.41425895690918
    8. 'can' → logprob: -4.41425895690918
    9. ' =' → logprob: -4.41425895690918
    10. 'need' → logprob: -4.66425895690918

Token 2849: ' total' (ID: 3609)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.176695704460144
    2. '```' → logprob: -2.3016958236694336
    3. '[' → logprob: -2.8016958236694336
    4. '   ' → logprob: -2.8016958236694336
    5. '`' → logprob: -3.1766958236694336
    6. 'def' → logprob: -3.4266958236694336
    7. ' \' → logprob: -3.4266958236694336
    8. ''' → logprob: -3.5516958236694336
    9. ' a' → logprob: -3.6766958236694336
    10. ':' → logprob: -3.9266958236694336

Token 2850: ' mass' (ID: 4842)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.43291953206062317
    2. '```' → logprob: -2.182919502258301
    3. '`' → logprob: -2.682919502258301
    4. '^{' → logprob: -3.182919502258301
    5. ' ' → logprob: -4.057919502258301
    6. ''' → logprob: -4.057919502258301
    7. '^' → logprob: -4.307919502258301
    8. '_i' → logprob: -4.807919502258301
    9. '   ' → logprob: -4.807919502258301
    10. 'i' → logprob: -5.182919502258301

Token 2851: ' exponent' (ID: 51159)
  Prédit: '**'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '**' → logprob: -1.3344334363937378
    2. ':' → logprob: -1.5844334363937378
    3. '```' → logprob: -2.2094335556030273
    4. ' =' → logprob: -2.3344335556030273
    5. '=' → logprob: -2.4594335556030273
    6. ':
' → logprob: -2.9594335556030273
    7. 'def' → logprob: -3.0844335556030273
    8. '
' → logprob: -3.3344335556030273
    9. '   ' → logprob: -3.5844335556030273
    10. '       ' → logprob: -4.334433555603027

Token 2852: ' by' (ID: 656)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '```' → logprob: -0.8477843999862671
    2. '`' → logprob: -2.0977845191955566
    3. '+' → logprob: -2.3477845191955566
    4. '_' → logprob: -2.8477845191955566
    5. '   ' → logprob: -2.9727845191955566
    6. '=' → logprob: -3.0977845191955566
    7. '#' → logprob: -3.2227845191955566
    8. ' =' → logprob: -3.5977845191955566
    9. ':' → logprob: -3.5977845191955566
    10. '``' → logprob: -3.9727845191955566

Token 2853: ' summ' (ID: 16552)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.459798127412796
    2. 'adding' → logprob: -2.3347980976104736
    3. 's' → logprob: -2.9597980976104736
    4. '1' → logprob: -3.0847980976104736
    5. 'sum' → logprob: -3.0847980976104736
    6. '+' → logprob: -3.5847980976104736
    7. '`' → logprob: -4.334798336029053
    8. '2' → logprob: -4.584798336029053
    9. '```' → logprob: -4.709798336029053
    10. 'b' → logprob: -4.959798336029053

Token 2854: 'ing' (ID: 289)
  Prédit: '^'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '^' → logprob: -0.5437463521957397
    2. '```' → logprob: -2.1687464714050293
    3. '**' → logprob: -3.2937464714050293
    4. '+' → logprob: -3.5437464714050293
    5. '=' → logprob: -3.6687464714050293
    6. ')' → logprob: -3.7937464714050293
    7. '_' → logprob: -3.7937464714050293
    8. 'e' → logprob: -3.7937464714050293
    9. '^{' → logprob: -3.7937464714050293
    10. '1' → logprob: -4.293746471405029

Token 2855: ' ' (ID: 220)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '```' → logprob: -0.14871598780155182
    2. '**' → logprob: -3.3987159729003906
    3. '+' → logprob: -4.273715972900391
    4. '`' → logprob: -4.398715972900391
    5. '[
' → logprob: -4.648715972900391
    6. '=' → logprob: -4.648715972900391
    7. '``' → logprob: -4.898715972900391
    8. '   ' → logprob: -5.148715972900391
    9. '
' → logprob: -5.273715972900391
    10. ' ' → logprob: -5.398715972900391

Token 2856: '2' (ID: 17)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.6906888484954834
    2. '```' → logprob: -2.0656888484954834
    3. 'a' → logprob: -2.8156888484954834
    4. '{' → logprob: -3.0656888484954834
    5. '2' → logprob: -3.0656888484954834
    6. ')' → logprob: -3.4406888484954834
    7. '`' → logprob: -3.4406888484954834
    8. '^' → logprob: -3.5656888484954834
    9. '**' → logprob: -3.6906888484954834
    10. '^{' → logprob: -4.1906890869140625

Token 2857: '^{' (ID: 42923)
  Prédit: '^{'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '^{' → logprob: -1.0001064538955688
    2. '^' → logprob: -1.1251064538955688
    3. '**' → logprob: -1.2501064538955688
    4. '
' → logprob: -4.500106334686279
    5. '```' → logprob: -5.625106334686279
    6. '_' → logprob: -6.375106334686279
    7. '\' → logprob: -7.250106334686279
    8. '`' → logprob: -7.250106334686279
    9. '+' → logprob: -7.375106334686279
    10. ',' → logprob: -7.750106334686279

Token 2858: 'a' (ID: 64)
  Prédit: 'a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.009722677990794182
    2. 'total' → logprob: -5.009722709655762
    3. '40' → logprob: -7.009722709655762
    4. '
' → logprob: -8.134722709655762
    5. 'x' → logprob: -8.384722709655762
    6. '```' → logprob: -8.634722709655762
    7. 'sum' → logprob: -8.884722709655762
    8. 'input' → logprob: -9.009722709655762
    9. '(a' → logprob: -9.009722709655762
    10. '`' → logprob: -9.134722709655762

Token 2859: '_i' (ID: 10853)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.2026941478252411
    2. '_' → logprob: -1.8276941776275635
    3. '_j' → logprob: -5.202693939208984
    4. '```' → logprob: -6.077693939208984
    5. '+
' → logprob: -6.202693939208984
    6. '_i' → logprob: -6.327693939208984
    7. '+j' → logprob: -6.577693939208984
    8. '_{' → logprob: -6.827693939208984
    9. '^{' → logprob: -7.202693939208984
    10. '^' → logprob: -7.202693939208984

Token 2860: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.007286911830306053
    2. '```' → logprob: -5.75728702545166
    3. '+
' → logprob: -6.25728702545166
    4. ',' → logprob: -7.63228702545166
    5. '_' → logprob: -7.75728702545166
    6. '`' → logprob: -8.13228702545166
    7. '[' → logprob: -9.00728702545166
    8. ' +' → logprob: -9.00728702545166
    9. ':' → logprob: -9.13228702545166
    10. '}' → logprob: -9.50728702545166

Token 2861: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.0005302758072502911
    2. 'i' → logprob: -8.125530242919922
    3. '_i' → logprob: -8.875530242919922
    4. '```' → logprob: -10.000530242919922
    5. '+' → logprob: -11.000530242919922
    6. '
' → logprob: -11.750530242919922
    7. '`' → logprob: -12.125530242919922
    8. ' b' → logprob: -12.250530242919922
    9. '_b' → logprob: -12.500530242919922
    10. '1' → logprob: -13.875530242919922

Token 2862: '_i' (ID: 10853)
  Prédit: '_i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_i' → logprob: -0.1555982530117035
    2. '+' → logprob: -2.4055981636047363
    3. '_' → logprob: -3.5305981636047363
    4. '_j' → logprob: -4.405598163604736
    5. '}_' → logprob: -5.155598163604736
    6. '```' → logprob: -5.655598163604736
    7. ''_' → logprob: -7.030598163604736
    8. '}' → logprob: -7.530598163604736
    9. 'i' → logprob: -7.655598163604736
    10. '+i' → logprob: -8.155598640441895

Token 2863: '}' (ID: 92)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.21616289019584656
    2. '}' → logprob: -2.341162919998169
    3. '```' → logprob: -2.716162919998169
    4. ':' → logprob: -5.34116268157959
    5. '[' → logprob: -5.34116268157959
    6. '`' → logprob: -5.71616268157959
    7. ']' → logprob: -5.84116268157959
    8. '+
' → logprob: -5.96616268157959
    9. ',' → logprob: -6.21616268157959
    10. ')' → logprob: -6.46616268157959

Token 2864: '.

' (ID: 364)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.33275550603866577
    2. '       ' → logprob: -2.2077555656433105
    3. 'def' → logprob: -2.5827555656433105
    4. '```' → logprob: -3.3327555656433105
    5. ':' → logprob: -3.4577555656433105
    6. ':
' → logprob: -5.0827555656433105
    7. '
' → logprob: -5.4577555656433105
    8. '           ' → logprob: -5.9577555656433105
    9. ' def' → logprob: -6.0827555656433105
    10. ')' → logprob: -6.0827555656433105

Token 2865: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.9161535501480103
    2. 'def' → logprob: -1.4161535501480103
    3. '       ' → logprob: -2.2911534309387207
    4. ':' → logprob: -2.4161534309387207
    5. '```' → logprob: -2.6661534309387207
    6. ':
' → logprob: -3.5411534309387207
    7. '
' → logprob: -3.7911534309387207
    8. 'class' → logprob: -4.166153430938721
    9. 'from' → logprob: -4.291153430938721
    10. ' def' → logprob: -5.791153430938721

Token 2866: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8940370678901672
    2. 'def' → logprob: -1.1440370082855225
    3. '       ' → logprob: -2.6440370082855225
    4. '
' → logprob: -3.0190370082855225
    5. ':' → logprob: -3.3940370082855225
    6. '```' → logprob: -3.5190370082855225
    7. 'from' → logprob: -3.5190370082855225
    8. ':
' → logprob: -3.7690370082855225
    9. 'class' → logprob: -4.019037246704102
    10. ')' → logprob: -6.019037246704102

Token 2867: ' Then' (ID: 7801)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.17628417909145355
    2. '       ' → logprob: -2.051284074783325
    3. '   ' → logprob: -4.176284313201904
    4. '```' → logprob: -5.426284313201904
    5. ':' → logprob: -5.551284313201904
    6. ')' → logprob: -6.051284313201904
    7. ':
' → logprob: -6.426284313201904
    8. '):
' → logprob: -6.676284313201904
    9. '):' → logprob: -6.926284313201904
    10. 'from' → logprob: -7.301284313201904

Token 2868: ' minimal' (ID: 19957)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -1.020470142364502
    2. ':' → logprob: -1.645470142364502
    3. '```' → logprob: -2.145470142364502
    4. 'from' → logprob: -2.645470142364502
    5. '       ' → logprob: -2.770470142364502
    6. '   ' → logprob: -2.895470142364502
    7. ' =' → logprob: -3.645470142364502
    8. '
' → logprob: -4.020470142364502
    9. '`' → logprob: -4.270470142364502
    10. ':
' → logprob: -4.645470142364502

Token 2869: ' chunk' (ID: 23958)
  Prédit: '`'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '`' → logprob: -1.301541805267334
    2. '```' → logprob: -1.301541805267334
    3. '_chunk' → logprob: -2.301541805267334
    4. '_' → logprob: -2.801541805267334
    5. 'def' → logprob: -3.176541805267334
    6. '[
' → logprob: -3.551541805267334
    7. '``' → logprob: -3.801541805267334
    8. ':' → logprob: -4.301541805267334
    9. '+' → logprob: -4.301541805267334
    10. ']' → logprob: -4.426541805267334

Token 2870: ' number' (ID: 2086)
  Prédit: '_count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_count' → logprob: -0.3520408272743225
    2. 's' → logprob: -2.7270407676696777
    3. '_' → logprob: -2.9770407676696777
    4. 'Count' → logprob: -3.3520407676696777
    5. '   ' → logprob: -3.6020407676696777
    6. 'count' → logprob: -3.9770407676696777
    7. ':' → logprob: -3.9770407676696777
    8. '```' → logprob: -3.9770407676696777
    9. '`' → logprob: -4.352040767669678
    10. '_counts' → logprob: -5.227040767669678

Token 2871: ' is' (ID: 382)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.6323934197425842
    2. '=' → logprob: -2.1323933601379395
    3. '```' → logprob: -2.1323933601379395
    4. '   ' → logprob: -2.3823933601379395
    5. ':
' → logprob: -4.2573933601379395
    6. 'def' → logprob: -4.2573933601379395
    7. '[' → logprob: -4.3823933601379395
    8. ' =' → logprob: -4.3823933601379395
    9. '
' → logprob: -4.5073933601379395
    10. ',' → logprob: -4.5073933601379395

Token 2872: ' pop' (ID: 2735)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '```' → logprob: -1.625976324081421
    2. 'def' → logprob: -2.000976324081421
    3. ' =' → logprob: -2.125976324081421
    4. 'pop' → logprob: -2.375976324081421
    5. '1' → logprob: -2.750976324081421
    6. '{
' → logprob: -2.875976324081421
    7. '=' → logprob: -3.000976324081421
    8. '`' → logprob: -3.000976324081421
    9. ':' → logprob: -3.625976324081421
    10. 'the' → logprob: -3.875976324081421

Token 2873: 'count' (ID: 5420)
  Prédit: 'count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.017179252579808235
    2. 'ulation' → logprob: -4.767179489135742
    3. '_count' → logprob: -5.267179489135742
    4. ')' → logprob: -6.517179489135742
    5. 'c' → logprob: -7.267179489135742
    6. 'u' → logprob: -7.767179489135742
    7. '```' → logprob: -9.017179489135742
    8. '\' → logprob: -9.767179489135742
    9. 's' → logprob: -9.767179489135742
    10. ')
' → logprob: -10.142179489135742

Token 2874: ' of' (ID: 328)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.8894177079200745
    2. '   ' → logprob: -1.2644176483154297
    3. ':' → logprob: -2.0144176483154297
    4. 'def' → logprob: -2.3894176483154297
    5. '```' → logprob: -3.1394176483154297
    6. '):' → logprob: -4.88941764831543
    7. ':
' → logprob: -5.26441764831543
    8. ')' → logprob: -5.26441764831543
    9. '           ' → logprob: -5.51441764831543
    10. ' def' → logprob: -5.63941764831543

Token 2875: ' total' (ID: 3609)
  Prédit: 'total'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'total' → logprob: -0.11080106347799301
    2. 'sum' → logprob: -2.4858009815216064
    3. '(total' → logprob: -4.7358012199401855
    4. 'a' → logprob: -5.4858012199401855
    5. 'bin' → logprob: -5.8608012199401855
    6. 'str' → logprob: -6.6108012199401855
    7. '(sum' → logprob: -6.7358012199401855
    8. 'the' → logprob: -7.3608012199401855
    9. '(str' → logprob: -7.9858012199401855
    10. '{' → logprob: -7.9858012199401855

Token 2876: ' mass' (ID: 4842)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -1.1034661531448364
    2. '```' → logprob: -1.6034661531448364
    3. '`' → logprob: -2.103466033935547
    4. '_mass' → logprob: -2.853466033935547
    5. '(' → logprob: -2.978466033935547
    6. ' ' → logprob: -3.353466033935547
    7. '_weight' → logprob: -3.603466033935547
    8. ')' → logprob: -3.978466033935547
    9. '``' → logprob: -4.103466033935547
    10. '(
' → logprob: -4.228466033935547

Token 2877: '.

' (ID: 364)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.0707690715789795
    2. 'def' → logprob: -1.3207690715789795
    3. '       ' → logprob: -1.5707690715789795
    4. '```' → logprob: -2.4457690715789795
    5. ':
' → logprob: -3.3207690715789795
    6. ':' → logprob: -3.8207690715789795
    7. '
' → logprob: -4.195769309997559
    8. 'class' → logprob: -5.695769309997559
    9. ' =' → logprob: -5.820769309997559
    10. ')' → logprob: -6.445769309997559

Token 2878: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.9498921036720276
    2. 'def' → logprob: -0.9498921036720276
    3. ':
' → logprob: -2.824892044067383
    4. ':' → logprob: -2.824892044067383
    5. '
' → logprob: -3.074892044067383
    6. '```' → logprob: -3.449892044067383
    7. '       ' → logprob: -4.449892044067383
    8. ' def' → logprob: -5.199892044067383
    9. 'from' → logprob: -5.699892044067383
    10. 'class' → logprob: -5.824892044067383

Token 2879: ' #' (ID: 1069)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.31539788842201233
    2. '   ' → logprob: -2.1903979778289795
    3. '       ' → logprob: -2.8153979778289795
    4. '```' → logprob: -3.3153979778289795
    5. '
' → logprob: -4.1903977394104
    6. ':
' → logprob: -4.1903977394104
    7. ':' → logprob: -4.1903977394104
    8. 'class' → logprob: -4.9403977394104
    9. 'from' → logprob: -6.0653977394104
    10. ' def' → logprob: -6.3153977394104

Token 2880: ' Then' (ID: 7801)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.4320947229862213
    2. '       ' → logprob: -1.932094693183899
    3. '   ' → logprob: -2.4320948123931885
    4. ':
' → logprob: -2.9320948123931885
    5. '```' → logprob: -3.5570948123931885
    6. ':' → logprob: -4.057094573974609
    7. ' def' → logprob: -5.182094573974609
    8. '
' → logprob: -5.432094573974609
    9. '):
' → logprob: -6.557094573974609
    10. ')' → logprob: -6.682094573974609

Token 2881: ' output' (ID: 4733)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.36572447419166565
    2. '```' → logprob: -2.115724563598633
    3. ':' → logprob: -3.115724563598633
    4. '   ' → logprob: -3.240724563598633
    5. ' =' → logprob: -3.990724563598633
    6. ' def' → logprob: -4.115724563598633
    7. 'from' → logprob: -4.615724563598633
    8. '`' → logprob: -4.615724563598633
    9. '       ' → logprob: -4.990724563598633
    10. ':
' → logprob: -5.240724563598633

Token 2882: ' chunks' (ID: 53440)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.13339687883853912
    2. '   ' → logprob: -3.508396863937378
    3. '       ' → logprob: -3.633396863937378
    4. '```' → logprob: -3.633396863937378
    5. ':' → logprob: -4.258397102355957
    6. ':
' → logprob: -4.383397102355957
    7. ' =' → logprob: -6.008397102355957
    8. 'from' → logprob: -6.133397102355957
    9. '
' → logprob: -6.508397102355957
    10. ' def' → logprob: -7.008397102355957

Token 2883: ' with' (ID: 483)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.8606591820716858
    2. 'def' → logprob: -1.235659122467041
    3. '   ' → logprob: -1.610659122467041
    4. ':' → logprob: -3.735659122467041
    5. '```' → logprob: -3.735659122467041
    6. ':
' → logprob: -3.985659122467041
    7. ' def' → logprob: -4.860659122467041
    8. '
' → logprob: -5.360659122467041
    9. ' =' → logprob: -6.485659122467041
    10. ')' → logprob: -7.110659122467041

Token 2884: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.015170813538134098
    2. 'ex' → logprob: -4.515171051025391
    3. '(a' → logprob: -7.015171051025391
    4. '2' → logprob: -7.140171051025391
    5. 'pow' → logprob: -7.765171051025391
    6. '```' → logprob: -8.14017105102539
    7. 'def' → logprob: -8.51517105102539
    8. 'powers' → logprob: -8.64017105102539
    9. 'Exponent' → logprob: -8.76517105102539
    10. '
' → logprob: -9.01517105102539

Token 2885: ' and' (ID: 326)
  Prédit: '_i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_i' → logprob: -0.41427552700042725
    2. '_j' → logprob: -1.1642755270004272
    3. '_' → logprob: -4.039275646209717
    4. ',' → logprob: -5.539275646209717
    5. '+' → logprob: -6.539275646209717
    6. 'i' → logprob: -6.664275646209717
    7. ')' → logprob: -7.914275646209717
    8. '_,' → logprob: -8.039275169372559
    9. '`' → logprob: -8.289275169372559
    10. '_n' → logprob: -8.289275169372559

Token 2886: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.000320565392030403
    2. '```' → logprob: -9.125320434570312
    3. ' b' → logprob: -9.250320434570312
    4. '0' → logprob: -9.625320434570312
    5. 'a' → logprob: -10.625320434570312
    6. '`' → logprob: -11.500320434570312
    7. '``' → logprob: -12.500320434570312
    8. ' ' → logprob: -13.500320434570312
    9. '(' → logprob: -13.625320434570312
    10. '
' → logprob: -13.625320434570312

Token 2887: ' where' (ID: 1919)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4107845723628998
    2. '       ' → logprob: -1.9107846021652222
    3. ':' → logprob: -2.4107844829559326
    4. ':
' → logprob: -3.7857844829559326
    5. '```' → logprob: -3.9107844829559326
    6. ' =' → logprob: -4.660784721374512
    7. '
' → logprob: -4.660784721374512
    8. '):' → logprob: -5.035784721374512
    9. ')' → logprob: -5.410784721374512
    10. '           ' → logprob: -5.660784721374512

Token 2888: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.00782061368227005
    2. 'b' → logprob: -5.8828206062316895
    3. '0' → logprob: -6.1328206062316895
    4. '(a' → logprob: -6.2578206062316895
    5. '```' → logprob: -7.8828206062316895
    6. 'the' → logprob: -9.632821083068848
    7. '`' → logprob: -9.757821083068848
    8. ' a' → logprob: -9.757821083068848
    9. '(' → logprob: -9.757821083068848
    10. '   ' → logprob: -10.007821083068848

Token 2889: '+b' (ID: 76609)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.02981274574995041
    2. '=' → logprob: -5.154812812805176
    3. ',' → logprob: -5.279812812805176
    4. '_j' → logprob: -5.404812812805176
    5. '```' → logprob: -5.779812812805176
    6. ' +' → logprob: -5.904812812805176
    7. '+j' → logprob: -6.529812812805176
    8. '+
' → logprob: -6.654812812805176
    9. '_' → logprob: -6.779812812805176
    10. '_i' → logprob: -7.404812812805176

Token 2890: ' is' (ID: 382)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0583174042403698
    2. '```' → logprob: -3.3083174228668213
    3. '=' → logprob: -4.683317184448242
    4. '`' → logprob: -5.933317184448242
    5. ' +' → logprob: -6.433317184448242
    6. '_' → logprob: -6.558317184448242
    7. ' =' → logprob: -6.808317184448242
    8. '+
' → logprob: -6.933317184448242
    9. ''' → logprob: -7.433317184448242
    10. '[' → logprob: -7.933317184448242

Token 2891: ' exponent' (ID: 51159)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -1.026408314704895
    2. 'the' → logprob: -1.901408314704895
    3. '```' → logprob: -2.0264081954956055
    4. '0' → logprob: -2.5264081954956055
    5. 'equal' → logprob: -3.0264081954956055
    6. 'total' → logprob: -3.0264081954956055
    7. 'c' → logprob: -3.6514081954956055
    8. 'i' → logprob: -4.2764081954956055
    9. 'k' → logprob: -4.4014081954956055
    10. '   ' → logprob: -4.5264081954956055

Token 2892: ' of' (ID: 328)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.9319620728492737
    2. '   ' → logprob: -1.431962013244629
    3. '```' → logprob: -1.806962013244629
    4. '       ' → logprob: -2.181962013244629
    5. ':
' → logprob: -3.556962013244629
    6. '
' → logprob: -4.056962013244629
    7. 'def' → logprob: -4.431962013244629
    8. '):' → logprob: -5.556962013244629
    9. '``' → logprob: -5.681962013244629
    10. '\n' → logprob: -5.806962013244629

Token 2893: ' each' (ID: 2454)
  Prédit: 'the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'the' → logprob: -0.9646552801132202
    2. '2' → logprob: -1.7146552801132202
    3. '```' → logprob: -1.7146552801132202
    4. '1' → logprob: -2.2146553993225098
    5. 'power' → logprob: -3.5896553993225098
    6. 'next' → logprob: -3.7146553993225098
    7. 'a' → logprob: -3.8396553993225098
    8. 'previous' → logprob: -4.33965539932251
    9. '`' → logprob: -4.46465539932251
    10. '0' → logprob: -4.96465539932251

Token 2894: ' bit' (ID: 3546)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '```' → logprob: -0.5407333970069885
    2. ':' → logprob: -2.0407333374023438
    3. '
' → logprob: -2.5407333374023438
    4. '   ' → logprob: -3.5407333374023438
    5. '[' → logprob: -3.6657333374023438
    6. '``' → logprob: -3.6657333374023438
    7. '\n' → logprob: -3.9157333374023438
    8. '[
' → logprob: -4.040733337402344
    9. ':
' → logprob: -4.165733337402344
    10. '\' → logprob: -4.415733337402344

Token 2895: ' set' (ID: 920)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -1.1134212017059326
    2. '   ' → logprob: -1.4884212017059326
    3. ':
' → logprob: -1.8634212017059326
    4. '
' → logprob: -2.4884212017059326
    5. '```' → logprob: -2.7384212017059326
    6. '       ' → logprob: -3.1134212017059326
    7. 'def' → logprob: -3.4884212017059326
    8. '\n' → logprob: -3.7384212017059326
    9. ',' → logprob: -5.238421440124512
    10. '[
' → logprob: -5.488421440124512

Token 2896: ' in' (ID: 306)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.836861252784729
    2. ':
' → logprob: -1.836861252784729
    3. '   ' → logprob: -1.961861252784729
    4. '```' → logprob: -2.2118611335754395
    5. '       ' → logprob: -2.4618611335754395
    6. 'def' → logprob: -3.5868611335754395
    7. '
' → logprob: -4.2118611335754395
    8. '):
' → logprob: -5.7118611335754395
    9. '):' → logprob: -5.8368611335754395
    10. ' def' → logprob: -5.9618611335754395

Token 2897: ' total' (ID: 3609)
  Prédit: 'total'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'total' → logprob: -0.004056313540786505
    2. ' total' → logprob: -6.254056453704834
    3. 'the' → logprob: -6.504056453704834
    4. '(total' → logprob: -8.504055976867676
    5. '```' → logprob: -9.129055976867676
    6. '`' → logprob: -9.379055976867676
    7. '
' → logprob: -9.879055976867676
    8. 'bin' → logprob: -10.254055976867676
    9. '{' → logprob: -10.504055976867676
    10. '``' → logprob: -10.879055976867676

Token 2898: ' mass' (ID: 4842)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '```' → logprob: -0.9110422730445862
    2. ':' → logprob: -1.7860422134399414
    3. '   ' → logprob: -2.0360422134399414
    4. '       ' → logprob: -2.6610422134399414
    5. ':
' → logprob: -2.9110422134399414
    6. '
' → logprob: -3.1610422134399414
    7. '``' → logprob: -3.7860422134399414
    8. '[' → logprob: -4.161042213439941
    9. '\n' → logprob: -4.286042213439941
    10. 'def' → logprob: -4.536042213439941

Token 2899: '.

' (ID: 364)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.39191195368766785
    2. ':
' → logprob: -1.7669119834899902
    3. ':' → logprob: -2.8919119834899902
    4. '```' → logprob: -3.0169119834899902
    5. '   ' → logprob: -3.6419119834899902
    6. '       ' → logprob: -4.39191198348999
    7. '
' → logprob: -5.39191198348999
    8. ' def' → logprob: -7.01691198348999
    9. 'from' → logprob: -7.01691198348999
    10. '):
' → logprob: -7.39191198348999

Token 2900: '       ' (ID: 309)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -1.1980626583099365
    2. '   ' → logprob: -1.3230626583099365
    3. ':' → logprob: -1.5730626583099365
    4. '```' → logprob: -2.4480626583099365
    5. ':
' → logprob: -3.0730626583099365
    6. '       ' → logprob: -3.0730626583099365
    7. '
' → logprob: -4.573062896728516
    8. ' def' → logprob: -5.073062896728516
    9. 'class' → logprob: -5.448062896728516
    10. '`' → logprob: -5.448062896728516

Token 2901: ' #' (ID: 1069)
  Prédit: ':
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':
' → logprob: -1.3465536832809448
    2. ':' → logprob: -1.5965536832809448
    3. '```' → logprob: -1.8465536832809448
    4. '       ' → logprob: -1.9715536832809448
    5. 'def' → logprob: -2.0965538024902344
    6. '   ' → logprob: -2.5965538024902344
    7. '
' → logprob: -3.8465538024902344
    8. ' =' → logprob: -6.346553802490234
    9. '\n' → logprob: -6.346553802490234
    10. ' def' → logprob: -6.596553802490234

Token 2902: ' How' (ID: 3253)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.5911447405815125
    2. '```' → logprob: -1.5911448001861572
    3. '       ' → logprob: -1.8411448001861572
    4. '   ' → logprob: -3.0911448001861572
    5. ':
' → logprob: -3.9661448001861572
    6. ':' → logprob: -4.841144561767578
    7. '
' → logprob: -5.091144561767578
    8. '):
' → logprob: -6.841144561767578
    9. '``' → logprob: -6.966144561767578
    10. 'from' → logprob: -7.091144561767578

Token 2903: ' to' (ID: 316)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.5262039303779602
    2. ':
' → logprob: -1.2762038707733154
    3. 'def' → logprob: -2.5262038707733154
    4. '   ' → logprob: -4.0262041091918945
    5. '```' → logprob: -4.7762041091918945
    6. ' def' → logprob: -5.4012041091918945
    7. '
' → logprob: -5.7762041091918945
    8. '=' → logprob: -5.9012041091918945
    9. '_' → logprob: -6.1512041091918945
    10. '\n' → logprob: -6.2762041091918945

Token 2904: ' split' (ID: 12648)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.7356698513031006
    2. '```' → logprob: -1.9856698513031006
    3. ':' → logprob: -2.3606698513031006
    4. '       ' → logprob: -2.8606698513031006
    5. '
' → logprob: -3.1106698513031006
    6. '   ' → logprob: -3.2356698513031006
    7. 'from' → logprob: -3.2356698513031006
    8. ':
' → logprob: -3.3606698513031006
    9. '=' → logprob: -4.23567008972168
    10. '_' → logprob: -5.11067008972168

Token 2905: ' exponent' (ID: 51159)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.5624340176582336
    2. '   ' → logprob: -1.5624339580535889
    3. '       ' → logprob: -2.937433958053589
    4. ':
' → logprob: -2.937433958053589
    5. '```' → logprob: -3.062433958053589
    6. '
' → logprob: -4.187434196472168
    7. 'from' → logprob: -4.562434196472168
    8. 'def' → logprob: -4.562434196472168
    9. ',' → logprob: -5.437434196472168
    10. ' :' → logprob: -5.812434196472168

Token 2906: ' into' (ID: 1511)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '```' → logprob: -0.36226263642311096
    2. ':' → logprob: -2.612262725830078
    3. '   ' → logprob: -3.362262725830078
    4. '       ' → logprob: -3.362262725830078
    5. '
' → logprob: -3.487262725830078
    6. ':
' → logprob: -3.862262725830078
    7. '`' → logprob: -4.237262725830078
    8. ' =' → logprob: -4.237262725830078
    9. '``' → logprob: -4.487262725830078
    10. 'def' → logprob: -4.987262725830078

Token 2907: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -1.1523737907409668
    2. '```' → logprob: -1.5273737907409668
    3. '<|end|>' → logprob: -1.9023737907409668
    4. ''' → logprob: -2.152373790740967
    5. '0' → logprob: -2.777373790740967
    6. '"' → logprob: -3.027373790740967
    7. ''a' → logprob: -4.027373790740967
    8. '`' → logprob: -4.527373790740967
    9. ''s' → logprob: -4.902373790740967
    10. '#' → logprob: -5.027373790740967

Token 2908: ' and' (ID: 326)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.37655219435691833
    2. '```' → logprob: -1.8765522241592407
    3. ',' → logprob: -3.251552104949951
    4. ' ' → logprob: -3.751552104949951
    5. '
' → logprob: -4.126552104949951
    6. '_i' → logprob: -4.251552104949951
    7. ')' → logprob: -4.376552104949951
    8. ' ,' → logprob: -5.126552104949951
    9. '=' → logprob: -5.376552104949951
    10. '`' → logprob: -5.376552104949951

Token 2909: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.0013109555002301931
    2. ' b' → logprob: -6.8763108253479
    3. '0' → logprob: -8.876311302185059
    4. '```' → logprob: -9.376311302185059
    5. '_' → logprob: -11.126311302185059
    6. '
' → logprob: -11.376311302185059
    7. '_b' → logprob: -11.376311302185059
    8. '`' → logprob: -12.501311302185059
    9. ''b' → logprob: -12.626311302185059
    10. ' ' → logprob: -12.876311302185059

Token 2910: '?

' (ID: 1715)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.5380967259407043
    2. '   ' → logprob: -2.2880966663360596
    3. '```' → logprob: -2.2880966663360596
    4. '       ' → logprob: -3.1630966663360596
    5. ':
' → logprob: -3.1630966663360596
    6. ',' → logprob: -3.5380966663360596
    7. '
' → logprob: -3.7880966663360596
    8. '.' → logprob: -4.288096904754639
    9. '[' → logprob: -4.913096904754639
    10. '\' → logprob: -5.288096904754639

Token 2911: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.40772873163223267
    2. '```' → logprob: -1.157728672027588
    3. '        ' → logprob: -5.282728672027588
    4. '           ' → logprob: -5.532728672027588
    5. ':' → logprob: -5.907728672027588
    6. '`' → logprob: -6.032728672027588
    7. '               ' → logprob: -7.157728672027588
    8. ' =' → logprob: -7.282728672027588
    9. '``' → logprob: -7.407728672027588
    10. ',' → logprob: -7.407728672027588

Token 2912: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1519748419523239
    2. '```' → logprob: -2.02697491645813
    3. '           ' → logprob: -5.776974678039551
    4. ',' → logprob: -6.651974678039551
    5. '
' → logprob: -7.276974678039551
    6. '``' → logprob: -7.401974678039551
    7. ':
' → logprob: -7.526974678039551
    8. ':' → logprob: -7.651974678039551
    9. '               ' → logprob: -7.776974678039551
    10. '`' → logprob: -7.901974678039551

Token 2913: ' Output' (ID: 18315)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6136236786842346
    2. '```' → logprob: -0.8636236786842346
    3. 'def' → logprob: -4.48862361907959
    4. ':
' → logprob: -4.73862361907959
    5. ':' → logprob: -4.86362361907959
    6. '``' → logprob: -5.98862361907959
    7. '           ' → logprob: -6.61362361907959
    8. '   ' → logprob: -6.73862361907959
    9. ' =' → logprob: -7.36362361907959
    10. '
' → logprob: -7.73862361907959

Token 2914: ' requires' (ID: 10860)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.6019072532653809
    2. '```' → logprob: -1.4769072532653809
    3. 'def' → logprob: -2.851907253265381
    4. '0' → logprob: -3.476907253265381
    5. '[
' → logprob: -3.476907253265381
    6. ':' → logprob: -3.726907253265381
    7. '=' → logprob: -3.851907253265381
    8. '[' → logprob: -4.726907253265381
    9. '
' → logprob: -4.851907253265381
    10. ':
' → logprob: -5.101907253265381

Token 2915: ' a' (ID: 261)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '```' → logprob: -0.6733527779579163
    2. 'def' → logprob: -1.5483527183532715
    3. '0' → logprob: -2.2983527183532715
    4. '`' → logprob: -2.4233527183532715
    5. 'a' → logprob: -3.7983527183532715
    6. ''' → logprob: -4.1733527183532715
    7. ' def' → logprob: -5.0483527183532715
    8. ' a' → logprob: -5.1733527183532715
    9. ' ' → logprob: -5.4233527183532715
    10. '"' → logprob: -5.4233527183532715

Token 2916: '_j' (ID: 12021)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.8680647015571594
    2. '```' → logprob: -1.8680646419525146
    3. ',' → logprob: -2.3680646419525146
    4. ' =' → logprob: -2.9930646419525146
    5. '=' → logprob: -3.6180646419525146
    6. ' ' → logprob: -3.7430646419525146
    7. '[' → logprob: -3.9930646419525146
    8. '`' → logprob: -4.118064880371094
    9. ':' → logprob: -4.243064880371094
    10. '
' → logprob: -4.243064880371094

Token 2917: ',' (ID: 11)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '```' → logprob: -0.8530295491218567
    2. ',' → logprob: -1.228029489517212
    3. '+' → logprob: -2.853029489517212
    4. '_' → logprob: -3.228029489517212
    5. '=' → logprob: -3.353029489517212
    6. '`' → logprob: -3.478029489517212
    7. ' =' → logprob: -3.603029489517212
    8. ':' → logprob: -3.728029489517212
    9. 'def' → logprob: -4.353029727935791
    10. '
' → logprob: -4.478029727935791

Token 2918: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.01825331151485443
    2. ',b' → logprob: -4.768253326416016
    3. ',' → logprob: -4.893253326416016
    4. '```' → logprob: -6.643253326416016
    5. '0' → logprob: -7.518253326416016
    6. ' b' → logprob: -8.893253326416016
    7. '
' → logprob: -10.643253326416016
    8. ',
' → logprob: -10.893253326416016
    9. '`,`' → logprob: -10.893253326416016
    10. ' ,' → logprob: -11.143253326416016

Token 2919: '_j' (ID: 12021)
  Prédit: '_j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_j' → logprob: -0.9840683341026306
    2. '```' → logprob: -1.2340683937072754
    3. '_' → logprob: -1.9840683937072754
    4. ',' → logprob: -2.1090683937072754
    5. '_i' → logprob: -3.4840683937072754
    6. '`' → logprob: -4.484068393707275
    7. ')' → logprob: -4.984068393707275
    8. '
' → logprob: -5.234068393707275
    9. '_n' → logprob: -5.609068393707275
    10. '_,' → logprob: -5.984068393707275

Token 2920: ' such' (ID: 2238)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '```' → logprob: -0.7701925039291382
    2. ':' → logprob: -1.7701925039291382
    3. '   ' → logprob: -2.0201926231384277
    4. '       ' → logprob: -2.3951926231384277
    5. '
' → logprob: -3.2701926231384277
    6. ':
' → logprob: -3.5201926231384277
    7. 'def' → logprob: -3.5201926231384277
    8. ' =' → logprob: -4.770192623138428
    9. '``' → logprob: -5.020192623138428
    10. ',' → logprob: -5.395192623138428

Token 2921: ' that' (ID: 484)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.07868596166372299
    2. '```' → logprob: -3.328685998916626
    3. ' =' → logprob: -4.203685760498047
    4. '#' → logprob: -4.203685760498047
    5. '==' → logprob: -5.078685760498047
    6. '[' → logprob: -7.828685760498047
    7. '+' → logprob: -7.953685760498047
    8. ':' → logprob: -8.203685760498047
    9. '``' → logprob: -8.203685760498047
    10. ' ==' → logprob: -8.578685760498047

Token 2922: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.2100236415863037
    2. 'b' → logprob: -2.3350236415863037
    3. ' a' → logprob: -3.8350236415863037
    4. '```' → logprob: -3.9600236415863037
    5. '0' → logprob: -4.335023880004883
    6. ' (' → logprob: -4.710023880004883
    7. ' b' → logprob: -4.960023880004883
    8. '`' → logprob: -5.085023880004883
    9. '(a' → logprob: -5.335023880004883
    10. '=' → logprob: -5.960023880004883

Token 2923: '_j' (ID: 12021)
  Prédit: '_j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_j' → logprob: -0.15000738203525543
    2. '+' → logprob: -2.650007486343384
    3. '_' → logprob: -3.275007486343384
    4. ',' → logprob: -4.400007247924805
    5. '_i' → logprob: -5.650007247924805
    6. '+j' → logprob: -5.650007247924805
    7. '```' → logprob: -5.900007247924805
    8. '_,' → logprob: -5.900007247924805
    9. '=' → logprob: -6.525007247924805
    10. ''_' → logprob: -6.775007247924805

Token 2924: '+b' (ID: 76609)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.2500167787075043
    2. '```' → logprob: -2.250016689300537
    3. '`' → logprob: -3.375016689300537
    4. ''' → logprob: -4.125016689300537
    5. '=' → logprob: -4.375016689300537
    6. ',' → logprob: -4.500016689300537
    7. '[' → logprob: -4.750016689300537
    8. ' +' → logprob: -5.375016689300537
    9. '_' → logprob: -5.375016689300537
    10. '+
' → logprob: -5.625016689300537

Token 2925: '_j' (ID: 12021)
  Prédit: '_j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_j' → logprob: -0.05840938165783882
    2. '_' → logprob: -3.0584094524383545
    3. ''_' → logprob: -5.308409214019775
    4. '+' → logprob: -6.308409214019775
    5. '_i' → logprob: -6.683409214019775
    6. '```' → logprob: -6.933409214019775
    7. '`' → logprob: -8.183409690856934
    8. 'j' → logprob: -9.183409690856934
    9. '_
' → logprob: -9.433409690856934
    10. '+j' → logprob: -10.183409690856934

Token 2926: ' equals' (ID: 29702)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.2074880748987198
    2. '```' → logprob: -1.9574880599975586
    3. ''' → logprob: -4.707488059997559
    4. '=' → logprob: -4.957488059997559
    5. ' +' → logprob: -4.957488059997559
    6. '`' → logprob: -5.582488059997559
    7. '+
' → logprob: -5.957488059997559
    8. '[' → logprob: -5.957488059997559
    9. '+=' → logprob: -6.457488059997559
    10. '``' → logprob: -6.582488059997559

Token 2927: ' the' (ID: 290)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.40628892183303833
    2. '0' → logprob: -2.4062888622283936
    3. '`' → logprob: -2.9062888622283936
    4. 'b' → logprob: -3.0312888622283936
    5. ''' → logprob: -3.4062888622283936
    6. '```' → logprob: -3.7812888622283936
    7. ' a' → logprob: -4.156289100646973
    8. 'the' → logprob: -4.781289100646973
    9. 'x' → logprob: -4.906289100646973
    10. '1' → logprob: -5.031289100646973

Token 2928: ' bit' (ID: 3546)
  Prédit: 'next'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'next' → logprob: -0.8766001462936401
    2. 'ex' → logprob: -2.2516002655029297
    3. '`' → logprob: -2.5016002655029297
    4. 'a' → logprob: -2.6266002655029297
    5. 'bit' → logprob: -2.6266002655029297
    6. ' next' → logprob: -2.7516002655029297
    7. 'i' → logprob: -4.00160026550293
    8. 'highest' → logprob: -4.00160026550293
    9. '```' → logprob: -4.37660026550293
    10. 'n' → logprob: -4.37660026550293

Token 2929: ' position' (ID: 4010)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '```' → logprob: -0.40062999725341797
    2. '_' → logprob: -2.900629997253418
    3. '`' → logprob: -3.150629997253418
    4. ',' → logprob: -3.150629997253418
    5. '\n' → logprob: -3.900629997253418
    6. '       ' → logprob: -4.025629997253418
    7. '=' → logprob: -4.150629997253418
    8. ''' → logprob: -4.275629997253418
    9. ':' → logprob: -4.275629997253418
    10. '``' → logprob: -4.400629997253418

Token 2930: '.

' (ID: 364)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '```' → logprob: -0.29249414801597595
    2. ':' → logprob: -2.542494058609009
    3. '\n' → logprob: -2.792494058609009
    4. '
' → logprob: -3.167494058609009
    5. 'def' → logprob: -4.417494297027588
    6. '``' → logprob: -4.917494297027588
    7. '       ' → logprob: -4.917494297027588
    8. '   ' → logprob: -4.917494297027588
    9. '0' → logprob: -5.167494297027588
    10. ':
' → logprob: -5.292494297027588

Token 2931: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2144239991903305
    2. '```' → logprob: -2.089423894882202
    3. '           ' → logprob: -4.339424133300781
    4. ':' → logprob: -4.339424133300781
    5. '   ' → logprob: -4.714424133300781
    6. '
' → logprob: -4.839424133300781
    7. ',' → logprob: -4.964424133300781
    8. '\n' → logprob: -5.714424133300781
    9. '               ' → logprob: -5.964424133300781
    10. 'def' → logprob: -6.089424133300781

Token 2932: ' #' (ID: 1069)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '```' → logprob: -0.029521698132157326
    2. '       ' → logprob: -4.029521465301514
    3. '``' → logprob: -5.279521465301514
    4. ':' → logprob: -6.529521465301514
    5. 'def' → logprob: -7.154521465301514
    6. ':
' → logprob: -7.279521465301514
    7. '   ' → logprob: -7.404521465301514
    8. '           ' → logprob: -7.404521465301514
    9. ',' → logprob: -7.654521465301514
    10. '\n' → logprob: -7.779521465301514

Token 2933: ' Since' (ID: 12265)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5836969614028931
    2. '```' → logprob: -0.8336969614028931
    3. ':' → logprob: -6.3336968421936035
    4. ':
' → logprob: -6.4586968421936035
    5. '``' → logprob: -6.5836968421936035
    6. '           ' → logprob: -6.7086968421936035
    7. '
' → logprob: -6.8336968421936035
    8. '   ' → logprob: -8.708697319030762
    9. '               ' → logprob: -9.083697319030762
    10. ',' → logprob: -9.208697319030762

Token 2934: ' problem' (ID: 4792)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '```' → logprob: -0.8684634566307068
    2. '0' → logprob: -1.2434635162353516
    3. 'def' → logprob: -1.4934635162353516
    4. 'a' → logprob: -3.7434635162353516
    5. ':' → logprob: -3.8684635162353516
    6. '#' → logprob: -5.493463516235352
    7. '
' → logprob: -6.243463516235352
    8. ':
' → logprob: -6.368463516235352
    9. '`' → logprob: -6.368463516235352
    10. ' (' → logprob: -6.743463516235352

Token 2935: ' wants' (ID: 10648)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '```' → logprob: -0.7460655570030212
    2. ':' → logprob: -1.121065616607666
    3. 'def' → logprob: -2.621065616607666
    4. ':
' → logprob: -4.121065616607666
    5. '   ' → logprob: -4.246065616607666
    6. '_' → logprob: -4.496065616607666
    7. '=' → logprob: -4.621065616607666
    8. '
' → logprob: -4.871065616607666
    9. '[' → logprob: -4.871065616607666
    10. ' =' → logprob: -5.121065616607666

Token 2936: ' minimal' (ID: 19957)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '```' → logprob: -0.275105744600296
    2. '0' → logprob: -2.7751057147979736
    3. ''' → logprob: -3.1501057147979736
    4. '`' → logprob: -4.025105953216553
    5. 'a' → logprob: -4.150105953216553
    6. 'def' → logprob: -4.150105953216553
    7. '_' → logprob: -4.650105953216553
    8. ' ```' → logprob: -4.650105953216553
    9. ' (' → logprob: -4.775105953216553
    10. '"' → logprob: -5.025105953216553

Token 2937: ' chunks' (ID: 53440)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '```' → logprob: -0.1588035374879837
    2. ''' → logprob: -3.1588034629821777
    3. '`' → logprob: -3.2838034629821777
    4. '_' → logprob: -3.6588034629821777
    5. '_
' → logprob: -5.033803462982178
    6. ' ' → logprob: -5.283803462982178
    7. ',' → logprob: -5.658803462982178
    8. 'def' → logprob: -5.783803462982178
    9. '``' → logprob: -5.783803462982178
    10. ' ```' → logprob: -5.908803462982178

Token 2938: ' =' (ID: 314)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.201276496052742
    2. ':' → logprob: -2.9512765407562256
    3. '           ' → logprob: -2.9512765407562256
    4. '```' → logprob: -3.3262765407562256
    5. ':
' → logprob: -4.3262763023376465
    6. '   ' → logprob: -4.4512763023376465
    7. '               ' → logprob: -5.0762763023376465
    8. ',' → logprob: -5.8262763023376465
    9. ' =' → logprob: -6.4512763023376465
    10. '                   ' → logprob: -6.8262763023376465

Token 2939: ' pop' (ID: 2735)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '```' → logprob: -0.6520307064056396
    2. '0' → logprob: -0.9020307064056396
    3. '`' → logprob: -3.6520307064056396
    4. '1' → logprob: -4.277030944824219
    5. 'a' → logprob: -5.027030944824219
    6. ''' → logprob: -5.277030944824219
    7. 'def' → logprob: -5.527030944824219
    8. 'b' → logprob: -6.027030944824219
    9. ',' → logprob: -6.152030944824219
    10. ':' → logprob: -6.652030944824219

Token 2940: 'count' (ID: 5420)
  Prédit: 'count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.22213494777679443
    2. '_count' → logprob: -1.9721349477767944
    3. ')' → logprob: -3.847135066986084
    4. 'c' → logprob: -4.597135066986084
    5. '```' → logprob: -5.347135066986084
    6. 's' → logprob: -5.722135066986084
    7. '_c' → logprob: -6.097135066986084
    8. 'op' → logprob: -6.222135066986084
    9. ')
' → logprob: -6.847135066986084
    10. '_j' → logprob: -6.847135066986084

Token 2941: ',' (ID: 11)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.8790962100028992
    2. '```' → logprob: -1.379096269607544
    3. '   ' → logprob: -2.379096269607544
    4. '       ' → logprob: -2.379096269607544
    5. ':
' → logprob: -3.129096269607544
    6. ',' → logprob: -3.504096269607544
    7. '
' → logprob: -3.754096269607544
    8. '):' → logprob: -5.379096031188965
    9. 'def' → logprob: -5.629096031188965
    10. '``' → logprob: -5.629096031188965

Token 2942: ' we' (ID: 581)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '```' → logprob: -0.23221904039382935
    2. ':' → logprob: -2.4822189807891846
    3. '       ' → logprob: -3.1072189807891846
    4. '0' → logprob: -3.9822189807891846
    5. ':
' → logprob: -4.607219219207764
    6. ',' → logprob: -4.982219219207764
    7. '``' → logprob: -4.982219219207764
    8. 'def' → logprob: -4.982219219207764
    9. '   ' → logprob: -5.232219219207764
    10. '
' → logprob: -5.732219219207764

Token 2943: ' can' (ID: 665)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '```' → logprob: -0.899395763874054
    2. ' =' → logprob: -2.024395704269409
    3. ' def' → logprob: -2.274395704269409
    4. 'def' → logprob: -2.274395704269409
    5. ':' → logprob: -3.024395704269409
    6. '=' → logprob: -3.649395704269409
    7. ' can' → logprob: -3.774395704269409
    8. '
' → logprob: -3.899395704269409
    9. ' continue' → logprob: -3.899395704269409
    10. ' need' → logprob: -4.149395942687988

Token 2944: ' in' (ID: 306)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '```' → logprob: -1.0468566417694092
    2. 'choose' → logprob: -1.2968566417694092
    3. 'def' → logprob: -1.6718566417694092
    4. 'split' → logprob: -2.171856641769409
    5. '0' → logprob: -3.671856641769409
    6. 'write' → logprob: -4.421856880187988
    7. 'assign' → logprob: -4.671856880187988
    8. 'pick' → logprob: -5.296856880187988
    9. '``' → logprob: -6.171856880187988
    10. 'for' → logprob: -6.171856880187988

Token 2945: ' output' (ID: 4733)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.19951774179935455
    2. '```' → logprob: -2.3245177268981934
    3. 'put' → logprob: -2.9495177268981934
    4. 't' → logprob: -4.699517726898193
    5. '#' → logprob: -4.824517726898193
    6. '``' → logprob: -6.074517726898193
    7. '   ' → logprob: -6.199517726898193
    8. 'ter' → logprob: -6.449517726898193
    9. 'sert' → logprob: -6.574517726898193
    10. 'for' → logprob: -6.824517726898193

Token 2946: ' set' (ID: 920)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.9301690459251404
    2. '```' → logprob: -0.9301690459251404
    3. ' =' → logprob: -3.680169105529785
    4. '`' → logprob: -3.805169105529785
    5. ',' → logprob: -3.930169105529785
    6. '
' → logprob: -4.180169105529785
    7. ':' → logprob: -4.305169105529785
    8. '_' → logprob: -4.305169105529785
    9. '=' → logprob: -4.555169105529785
    10. '[
' → logprob: -4.680169105529785

Token 2947: ' b' (ID: 287)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.4552523195743561
    2. 'a' → logprob: -1.8302522897720337
    3. '```' → logprob: -2.0802524089813232
    4. 'b' → logprob: -3.0802524089813232
    5. 'bit' → logprob: -4.955252170562744
    6. '``' → logprob: -5.080252170562744
    7. '`' → logprob: -5.330252170562744
    8. '1' → logprob: -5.455252170562744
    9. 'each' → logprob: -5.580252170562744
    10. 'the' → logprob: -6.830252170562744

Token 2948: '_j' (ID: 12021)
  Prédit: '_j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_j' → logprob: -0.05733721703290939
    2. '=' → logprob: -3.3073372840881348
    3. ',' → logprob: -4.807337284088135
    4. '```' → logprob: -5.182337284088135
    5. ' =' → logprob: -5.807337284088135
    6. '_' → logprob: -7.307337284088135
    7. '_,' → logprob: -7.557337284088135
    8. '
' → logprob: -7.807337284088135
    9. '`' → logprob: -8.807336807250977
    10. 'j' → logprob: -9.432336807250977

Token 2949: '=' (ID: 28)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '```' → logprob: -0.18050256371498108
    2. '+' → logprob: -2.6805026531219482
    3. '=' → logprob: -3.3055026531219482
    4. ' =' → logprob: -3.3055026531219482
    5. '`' → logprob: -5.055502414703369
    6. '0' → logprob: -5.680502414703369
    7. '``' → logprob: -5.680502414703369
    8. ' +' → logprob: -6.055502414703369
    9. ',' → logprob: -7.180502414703369
    10. '**' → logprob: -7.180502414703369

Token 2950: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.7120533811976202e-05
    2. ' ' → logprob: -11.625017166137695
    3. '```' → logprob: -12.875017166137695
    4. '`' → logprob: -13.250017166137695
    5. 'a' → logprob: -13.375017166137695
    6. '1' → logprob: -14.750017166137695
    7. '``' → logprob: -14.750017166137695
    8. '
' → logprob: -14.875017166137695
    9. '#' → logprob: -16.062517166137695
    10. '   ' → logprob: -16.125017166137695

Token 2951: ' for' (ID: 395)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.45827555656433105
    2. '   ' → logprob: -1.583275556564331
    3. 'def' → logprob: -3.333275556564331
    4. ':' → logprob: -3.333275556564331
    5. ':
' → logprob: -3.333275556564331
    6. '```' → logprob: -3.708275556564331
    7. '
' → logprob: -4.33327579498291
    8. ')' → logprob: -5.58327579498291
    9. '           ' → logprob: -5.83327579498291
    10. '\n' → logprob: -6.08327579498291

Token 2952: ' all' (ID: 722)
  Prédit: 'each'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'each' → logprob: -0.10108249634504318
    2. 'bit' → logprob: -3.2260825634002686
    3. 'a' → logprob: -3.8510825634002686
    4. 'the' → logprob: -4.1010823249816895
    5. ' each' → logprob: -4.4760823249816895
    6. '_' → logprob: -5.7260823249816895
    7. 'j' → logprob: -6.9760823249816895
    8. '0' → logprob: -7.6010823249816895
    9. 'i' → logprob: -8.101082801818848
    10. ' bit' → logprob: -8.101082801818848

Token 2953: ',' (ID: 11)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.9373090863227844
    2. '   ' → logprob: -1.3123090267181396
    3. ':
' → logprob: -2.0623090267181396
    4. 'def' → logprob: -2.9373090267181396
    5. '
' → logprob: -3.0623090267181396
    6. '       ' → logprob: -3.1873090267181396
    7. '```' → logprob: -3.1873090267181396
    8. ',' → logprob: -4.687309265136719
    9. '0' → logprob: -5.562309265136719
    10. ' def' → logprob: -6.187309265136719

Token 2954: ' a' (ID: 261)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.4559288024902344
    2. '```' → logprob: -1.9559288024902344
    3. '0' → logprob: -2.5809288024902344
    4. '\n' → logprob: -2.8309288024902344
    5. 'def' → logprob: -3.3309288024902344
    6. 'a' → logprob: -4.330928802490234
    7. ':' → logprob: -5.455928802490234
    8. ',' → logprob: -5.580928802490234
    9. '   ' → logprob: -5.580928802490234
    10. '\' → logprob: -5.580928802490234

Token 2955: '_j' (ID: 12021)
  Prédit: '_j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_j' → logprob: -0.0015865087043493986
    2. '_' → logprob: -7.501586437225342
    3. '=' → logprob: -7.626586437225342
    4. '_i' → logprob: -8.5015869140625
    5. '+' → logprob: -9.1265869140625
    6. ')' → logprob: -10.2515869140625
    7. ' =' → logprob: -10.2515869140625
    8. ',' → logprob: -10.6265869140625
    9. '+=' → logprob: -10.6265869140625
    10. '```' → logprob: -10.6265869140625

Token 2956: '=' (ID: 28)
  Prédit: '='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.42937782406806946
    2. '+' → logprob: -1.554377794265747
    3. ' =' → logprob: -2.554377794265747
    4. '```' → logprob: -3.304377794265747
    5. '+=' → logprob: -4.929378032684326
    6. ',' → logprob: -5.179378032684326
    7. '_' → logprob: -6.929378032684326
    8. ')' → logprob: -6.929378032684326
    9. ' +' → logprob: -6.929378032684326
    10. ':' → logprob: -7.179378032684326

Token 2957: 'bit' (ID: 6516)
  Prédit: 'bit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bit' → logprob: -0.15693522989749908
    2. 'the' → logprob: -2.281935214996338
    3. 'ex' → logprob: -3.906935214996338
    4. 'each' → logprob: -5.156935214996338
    5. '(bit' → logprob: -5.406935214996338
    6. 'pos' → logprob: -5.656935214996338
    7. 'k' → logprob: -5.906935214996338
    8. 'position' → logprob: -6.031935214996338
    9. 'set' → logprob: -6.656935214996338
    10. 'i' → logprob: -7.531935214996338

Token 2958: ' positions' (ID: 15897)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '```' → logprob: -0.29092228412628174
    2. '``' → logprob: -2.665922164916992
    3. '`' → logprob: -3.415922164916992
    4. '[
' → logprob: -3.665922164916992
    5. '[' → logprob: -3.790922164916992
    6. '_' → logprob: -3.915922164916992
    7. '
' → logprob: -4.290922164916992
    8. '+' → logprob: -4.290922164916992
    9. '       ' → logprob: -4.915922164916992
    10. '_
' → logprob: -5.040922164916992

Token 2959: '

' (ID: 279)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.0339335203170776
    2. '\n' → logprob: -1.2839335203170776
    3. '```' → logprob: -1.7839335203170776
    4. ':' → logprob: -2.033933639526367
    5. '   ' → logprob: -4.033933639526367
    6. '
' → logprob: -4.158933639526367
    7. ':
' → logprob: -4.658933639526367
    8. ')' → logprob: -5.783933639526367
    9. 'def' → logprob: -5.908933639526367
    10. '           ' → logprob: -5.908933639526367

Token 2960: '       ' (ID: 309)
  Prédit: ':
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.9714651107788086
    2. ':' → logprob: -1.3464651107788086
    3. '       ' → logprob: -1.8464651107788086
    4. '   ' → logprob: -2.0964651107788086
    5. 'def' → logprob: -3.3464651107788086
    6. '
' → logprob: -4.221465110778809
    7. '```' → logprob: -4.596465110778809
    8. '\n' → logprob: -5.221465110778809
    9. '):
' → logprob: -5.971465110778809
    10. ',' → logprob: -6.221465110778809

Token 2961: ' #' (ID: 1069)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.472800612449646
    2. '   ' → logprob: -1.597800612449646
    3. '```' → logprob: -2.4728007316589355
    4. '       ' → logprob: -2.9728007316589355
    5. ':
' → logprob: -3.8478007316589355
    6. ' def' → logprob: -5.0978007316589355
    7. '
' → logprob: -5.3478007316589355
    8. ':' → logprob: -5.4728007316589355
    9. '           ' → logprob: -7.7228007316589355
    10. '):
' → logprob: -8.097800254821777

Token 2962: ' Or' (ID: 2604)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.21763768792152405
    2. '       ' → logprob: -2.217637777328491
    3. '   ' → logprob: -2.842637777328491
    4. '```' → logprob: -3.717637777328491
    5. ' def' → logprob: -6.717637538909912
    6. '           ' → logprob: -7.092637538909912
    7. 'from' → logprob: -7.342637538909912
    8. ':' → logprob: -7.467637538909912
    9. '
' → logprob: -8.09263801574707
    10. '               ' → logprob: -9.21763801574707

Token 2963: ' set' (ID: 920)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '```' → logprob: -0.04763646423816681
    2. 'a' → logprob: -4.92263650894165
    3. '`' → logprob: -5.04763650894165
    4. '0' → logprob: -5.04763650894165
    5. 'def' → logprob: -5.42263650894165
    6. 'for' → logprob: -5.42263650894165
    7. 'b' → logprob: -5.67263650894165
    8. ':' → logprob: -5.92263650894165
    9. '
' → logprob: -6.54763650894165
    10. ' for' → logprob: -6.79763650894165

Token 2964: ' a' (ID: 261)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.9956259727478027
    2. 'a' → logprob: -1.1206259727478027
    3. 'b' → logprob: -1.3706259727478027
    4. '```' → logprob: -3.3706259727478027
    5. '`' → logprob: -5.495625972747803
    6. '_,' → logprob: -5.995625972747803
    7. '_j' → logprob: -6.370625972747803
    8. '
' → logprob: -6.495625972747803
    9. ',' → logprob: -6.620625972747803
    10. '``' → logprob: -7.120625972747803

Token 2965: '_j' (ID: 12021)
  Prédit: '_j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_j' → logprob: -0.005029171239584684
    2. '_' → logprob: -6.380029201507568
    3. ',' → logprob: -7.005029201507568
    4. '=' → logprob: -7.130029201507568
    5. ' =' → logprob: -7.755029201507568
    6. '```' → logprob: -8.38002872467041
    7. '_i' → logprob: -8.75502872467041
    8. '_,' → logprob: -9.00502872467041
    9. '\' → logprob: -9.25502872467041
    10. '_
' → logprob: -9.50502872467041

Token 2966: '=' (ID: 28)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '```' → logprob: -0.8188275098800659
    2. ':' → logprob: -1.818827509880066
    3. 'def' → logprob: -2.1938276290893555
    4. '=' → logprob: -2.4438276290893555
    5. '_' → logprob: -3.0688276290893555
    6. '+' → logprob: -3.3188276290893555
    7. '):' → logprob: -4.0688276290893555
    8. '[' → logprob: -4.1938276290893555
    9. ',' → logprob: -4.5688276290893555
    10. ')' → logprob: -4.6938276290893555

Token 2967: 'bit' (ID: 6516)
  Prédit: 'bit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bit' → logprob: -0.6024370193481445
    2. '0' → logprob: -0.9774370193481445
    3. 'b' → logprob: -3.1024370193481445
    4. 'i' → logprob: -4.4774370193481445
    5. 'a' → logprob: -5.4774370193481445
    6. 'pos' → logprob: -5.9774370193481445
    7. '(bit' → logprob: -6.1024370193481445
    8. '```' → logprob: -6.6024370193481445
    9. 'k' → logprob: -6.7274370193481445
    10. 'x' → logprob: -6.8524370193481445

Token 2968: ' positions' (ID: 15897)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.4301505982875824
    2. '_j' → logprob: -1.1801506280899048
    3. '```' → logprob: -3.6801505088806152
    4. '_
' → logprob: -5.180150508880615
    5. '`' → logprob: -5.555150508880615
    6. ',' → logprob: -5.805150508880615
    7. '=' → logprob: -6.930150508880615
    8. '_,' → logprob: -6.930150508880615
    9. ' _' → logprob: -7.680150508880615
    10. '_i' → logprob: -8.305150985717773

Token 2969: ',' (ID: 11)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.43141549825668335
    2. ':
' → logprob: -2.056415557861328
    3. '
' → logprob: -3.056415557861328
    4. '\n' → logprob: -3.181415557861328
    5. '```' → logprob: -3.181415557861328
    6. '   ' → logprob: -3.431415557861328
    7. '[' → logprob: -4.681415557861328
    8. ',' → logprob: -4.681415557861328
    9. '       ' → logprob: -4.806415557861328
    10. 'def' → logprob: -4.931415557861328

Token 2970: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.27551862597465515
    2. ' b' → logprob: -2.1505186557769775
    3. ',' → logprob: -3.0255186557769775
    4. '```' → logprob: -3.1505186557769775
    5. '0' → logprob: -4.400518417358398
    6. '=' → logprob: -5.525518417358398
    7. 'a' → logprob: -5.525518417358398
    8. ',b' → logprob: -5.900518417358398
    9. '
' → logprob: -6.400518417358398
    10. 'def' → logprob: -6.525518417358398

Token 2971: '_j' (ID: 12021)
  Prédit: '_j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_j' → logprob: -1.6047699318733066e-05
    2. '```' → logprob: -12.000016212463379
    3. '_i' → logprob: -12.750016212463379
    4. '_' → logprob: -12.875016212463379
    5. '=' → logprob: -13.625016212463379
    6. ''_' → logprob: -13.750016212463379
    7. '`' → logprob: -14.375016212463379
    8. '\' → logprob: -14.750016212463379
    9. 'j' → logprob: -15.000016212463379
    10. '
' → logprob: -15.875016212463379

Token 2972: '=' (ID: 28)
  Prédit: '='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.06535893678665161
    2. '```' → logprob: -3.315358877182007
    3. '+' → logprob: -4.190359115600586
    4. ',' → logprob: -5.940359115600586
    5. ' =' → logprob: -5.940359115600586
    6. '0' → logprob: -7.065359115600586
    7. '=
' → logprob: -7.190359115600586
    8. '`' → logprob: -7.190359115600586
    9. '+=' → logprob: -7.315359115600586
    10. '[' → logprob: -7.815359115600586

Token 2973: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.3856492842023727e-06
    2. ' ' → logprob: -14.125000953674316
    3. '1' → logprob: -16.250001907348633
    4. '```' → logprob: -16.250001907348633
    5. '
' → logprob: -16.500001907348633
    6. '`' → logprob: -16.625001907348633
    7. 'a' → logprob: -17.250001907348633
    8. '-' → logprob: -17.500001907348633
    9. '000' → logprob: -17.750001907348633
    10. '[' → logprob: -18.312501907348633

Token 2974: '

' (ID: 279)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.9230843186378479
    2. 'def' → logprob: -1.7980842590332031
    3. '```' → logprob: -1.7980842590332031
    4. '   ' → logprob: -2.298084259033203
    5. '
' → logprob: -2.548084259033203
    6. ':
' → logprob: -3.298084259033203
    7. '       ' → logprob: -3.673084259033203
    8. '[' → logprob: -4.673084259033203
    9. '[
' → logprob: -4.798084259033203
    10. '\n' → logprob: -5.673084259033203

Token 2975: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7342143058776855
    2. ':' → logprob: -1.7342143058776855
    3. '   ' → logprob: -2.1092143058776855
    4. '```' → logprob: -2.2342143058776855
    5. '\n' → logprob: -2.9842143058776855
    6. ':
' → logprob: -3.7342143058776855
    7. '
' → logprob: -4.1092143058776855
    8. '           ' → logprob: -5.7342143058776855
    9. '\' → logprob: -5.8592143058776855
    10. 'def' → logprob: -5.8592143058776855

Token 2976: ' #' (ID: 1069)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.45162421464920044
    2. '       ' → logprob: -1.5766241550445557
    3. '   ' → logprob: -2.3266241550445557
    4. '```' → logprob: -3.4516241550445557
    5. ':
' → logprob: -4.701624393463135
    6. ':' → logprob: -4.826624393463135
    7. ' def' → logprob: -5.451624393463135
    8. '
' → logprob: -5.701624393463135
    9. '           ' → logprob: -7.826624393463135
    10. ',' → logprob: -8.326623916625977

Token 2977: ' So' (ID: 2632)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.32688218355178833
    2. '       ' → logprob: -1.7018821239471436
    3. '```' → logprob: -2.9518821239471436
    4. '   ' → logprob: -3.2018821239471436
    5. ' def' → logprob: -6.701882362365723
    6. ':' → logprob: -7.201882362365723
    7. 'from' → logprob: -7.951882362365723
    8. ':
' → logprob: -8.076882362365723
    9. '           ' → logprob: -8.201882362365723
    10. '
' → logprob: -8.451882362365723

Token 2978: ' final' (ID: 1721)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.008287840522825718
    2. '   ' → logprob: -5.1332879066467285
    3. '```' → logprob: -7.1332879066467285
    4. '       ' → logprob: -7.6332879066467285
    5. 'for' → logprob: -8.63328742980957
    6. '
' → logprob: -8.88328742980957
    7. ' def' → logprob: -8.88328742980957
    8. ':
' → logprob: -9.13328742980957
    9. '0' → logprob: -9.25828742980957
    10. '           ' → logprob: -9.50828742980957

Token 2979: ' output' (ID: 4733)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '```' → logprob: -0.32547876238822937
    2. '_j' → logprob: -2.2004787921905518
    3. '`' → logprob: -3.3254787921905518
    4. ',' → logprob: -3.8254787921905518
    5. 'def' → logprob: -3.8254787921905518
    6. ' =' → logprob: -4.325478553771973
    7. '_' → logprob: -4.450478553771973
    8. '``' → logprob: -4.450478553771973
    9. '=' → logprob: -4.700478553771973
    10. ':' → logprob: -4.825478553771973

Token 2980: ' is' (ID: 382)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.545513927936554
    2. '```' → logprob: -1.7955138683319092
    3. '       ' → logprob: -2.045513868331909
    4. ':
' → logprob: -2.920513868331909
    5. '   ' → logprob: -3.795513868331909
    6. '
' → logprob: -4.045514106750488
    7. ':' → logprob: -4.170514106750488
    8. 'for' → logprob: -5.420514106750488
    9. '           ' → logprob: -5.545514106750488
    10. ' =' → logprob: -6.545514106750488

Token 2981: ' output' (ID: 4733)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.8121481537818909
    2. '```' → logprob: -0.8121481537818909
    3. 'bit' → logprob: -3.562148094177246
    4. 'for' → logprob: -4.187148094177246
    5. '``' → logprob: -4.187148094177246
    6. 'n' → logprob: -4.312148094177246
    7. '   ' → logprob: -4.812148094177246
    8. 'bits' → logprob: -4.937148094177246
    9. '       ' → logprob: -5.937148094177246
    10. '
' → logprob: -6.062148094177246

Token 2982: ' bits' (ID: 18189)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '```' → logprob: -0.892064094543457
    2. '[' → logprob: -1.267064094543457
    3. '[
' → logprob: -1.642064094543457
    4. '``' → logprob: -3.767064094543457
    5. ' =' → logprob: -4.017064094543457
    6. '`' → logprob: -4.017064094543457
    7. '_' → logprob: -4.517064094543457
    8. '
' → logprob: -4.767064094543457
    9. '=' → logprob: -4.767064094543457
    10. '(' → logprob: -5.392064094543457

Token 2983: ' of' (ID: 328)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '```' → logprob: -1.2433158159255981
    2. ':' → logprob: -1.3683158159255981
    3. '       ' → logprob: -1.7433158159255981
    4. ':
' → logprob: -2.3683156967163086
    5. 'def' → logprob: -2.7433156967163086
    6. '
' → logprob: -2.8683156967163086
    7. '   ' → logprob: -3.2433156967163086
    8. '[' → logprob: -5.118315696716309
    9. '[
' → logprob: -5.118315696716309
    10. '):' → logprob: -5.868315696716309

Token 2984: ' total' (ID: 3609)
  Prédit: 'total'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'total' → logprob: -0.0005293221911415458
    2. '(total' → logprob: -8.125529289245605
    3. '1' → logprob: -9.875529289245605
    4. 'the' → logprob: -10.000529289245605
    5. 'i' → logprob: -10.250529289245605
    6. 'int' → logprob: -10.625529289245605
    7. '`' → logprob: -11.375529289245605
    8. '```' → logprob: -11.750529289245605
    9. 'sum' → logprob: -11.875529289245605
    10. '40' → logprob: -12.000529289245605

Token 2985: ' mass' (ID: 4842)
  Prédit: '_mass'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_mass' → logprob: -0.18281704187393188
    2. '_i' → logprob: -2.182816982269287
    3. 'mass' → logprob: -3.682816982269287
    4. '_' → logprob: -4.432816982269287
    5. '_weight' → logprob: -4.807816982269287
    6. '_j' → logprob: -6.557816982269287
    7. 'i' → logprob: -6.932816982269287
    8. '_
' → logprob: -7.057816982269287
    9. '_m' → logprob: -7.182816982269287
    10. '_mask' → logprob: -7.182816982269287

Token 2986: ' as' (ID: 472)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.6276443600654602
    2. '   ' → logprob: -2.0026443004608154
    3. '       ' → logprob: -2.2526443004608154
    4. '```' → logprob: -2.3776443004608154
    5. ':' → logprob: -2.7526443004608154
    6. ':
' → logprob: -2.8776443004608154
    7. '
' → logprob: -5.2526445388793945
    8. ' def' → logprob: -5.7526445388793945
    9. '):' → logprob: -6.7526445388793945
    10. '):
' → logprob: -6.8776445388793945

Token 2987: ' pairs' (ID: 24702)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -1.1592323780059814
    2. '[
' → logprob: -1.2842323780059814
    3. 'bit' → logprob: -1.4092323780059814
    4. '[(' → logprob: -3.0342323780059814
    5. 'def' → logprob: -3.9092323780059814
    6. 'ex' → logprob: -4.409232139587402
    7. '```' → logprob: -4.534232139587402
    8. '2' → logprob: -4.784232139587402
    9. '(bit' → logprob: -4.909232139587402
    10. '[' → logprob: -5.034232139587402

Token 2988: ' (' (ID: 350)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.1500808000564575
    2. 'def' → logprob: -1.5250808000564575
    3. '   ' → logprob: -2.025080680847168
    4. ':
' → logprob: -2.150080680847168
    5. ':' → logprob: -2.400080680847168
    6. '```' → logprob: -2.400080680847168
    7. '
' → logprob: -3.900080680847168
    8. '[' → logprob: -5.900080680847168
    9. ' def' → logprob: -6.150080680847168
    10. '):' → logprob: -6.400080680847168

Token 2989: 'a' (ID: 64)
  Prédit: 'bit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bit' → logprob: -0.3253941237926483
    2. 'a' → logprob: -1.5753941535949707
    3. 'i' → logprob: -3.7003941535949707
    4. 'ex' → logprob: -4.325394153594971
    5. 'pos' → logprob: -4.325394153594971
    6. '(bit' → logprob: -5.450394153594971
    7. 'position' → logprob: -5.575394153594971
    8. 'set' → logprob: -6.075394153594971
    9. 'x' → logprob: -6.450394153594971
    10. '```' → logprob: -6.825394153594971

Token 2990: '_j' (ID: 12021)
  Prédit: '_j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_j' → logprob: -0.09978286176919937
    2. '_' → logprob: -3.474782943725586
    3. ',' → logprob: -3.599782943725586
    4. '_i' → logprob: -3.974782943725586
    5. '_,' → logprob: -4.224782943725586
    6. ')_' → logprob: -7.099782943725586
    7. ')' → logprob: -7.849782943725586
    8. 'j' → logprob: -8.224782943725586
    9. ''_' → logprob: -8.474782943725586
    10. ',j' → logprob: -8.724782943725586

Token 2991: ',b' (ID: 17568)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.027719147503376007
    2. '+' → logprob: -4.777719020843506
    3. '```' → logprob: -4.777719020843506
    4. ',j' → logprob: -6.152719020843506
    5. '_,' → logprob: -6.652719020843506
    6. '_j' → logprob: -6.902719020843506
    7. ')' → logprob: -7.152719020843506
    8. '+j' → logprob: -7.277719020843506
    9. ' +' → logprob: -7.777719020843506
    10. '',' → logprob: -7.777719020843506

Token 2992: '_j' (ID: 12021)
  Prédit: '_j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_j' → logprob: -0.0001673061487963423
    2. ')_' → logprob: -9.375166893005371
    3. ',' → logprob: -10.375166893005371
    4. 'j' → logprob: -11.000166893005371
    5. '_,' → logprob: -11.375166893005371
    6. '_i' → logprob: -11.500166893005371
    7. ')' → logprob: -11.875166893005371
    8. ',j' → logprob: -13.000166893005371
    9. '```' → logprob: -13.625166893005371
    10. '),' → logprob: -14.000166893005371

Token 2993: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.6857402920722961
    2. ',' → logprob: -1.4357402324676514
    3. '```' → logprob: -2.1857402324676514
    4. '[' → logprob: -2.5607402324676514
    5. '):' → logprob: -4.3107404708862305
    6. ')
' → logprob: -4.9357404708862305
    7. '',' → logprob: -4.9357404708862305
    8. '[
' → logprob: -5.1857404708862305
    9. '):
' → logprob: -5.4357404708862305
    10. '[j' → logprob: -5.5607404708862305

Token 2994: '       ' (ID: 309)
  Prédit: ':
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.9244896173477173
    2. ':' → logprob: -1.5494896173477173
    3. '
' → logprob: -2.0494894981384277
    4. '       ' → logprob: -2.1744894981384277
    5. '```' → logprob: -2.4244894981384277
    6. '   ' → logprob: -3.4244894981384277
    7. 'def' → logprob: -5.424489498138428
    8. '):' → logprob: -5.424489498138428
    9. '):
' → logprob: -5.549489498138428
    10. ',' → logprob: -5.924489498138428

Token 2995: ' #' (ID: 1069)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.345340758562088
    2. '   ' → logprob: -1.7203407287597656
    3. '```' → logprob: -2.8453407287597656
    4. '       ' → logprob: -3.0953407287597656
    5. ':' → logprob: -5.345340728759766
    6. ' def' → logprob: -6.220340728759766
    7. ':
' → logprob: -6.595340728759766
    8. '
' → logprob: -7.345340728759766
    9. '``' → logprob: -8.845340728759766
    10. 'from' → logprob: -9.095340728759766

Token 2996: ' Sample' (ID: 31073)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.42953571677207947
    2. 'def' → logprob: -1.4295357465744019
    3. '```' → logprob: -2.4295356273651123
    4. '   ' → logprob: -4.804535865783691
    5. ':
' → logprob: -5.304535865783691
    6. ' def' → logprob: -5.929535865783691
    7. ':' → logprob: -6.054535865783691
    8. '):
' → logprob: -7.429535865783691
    9. '        
' → logprob: -7.554535865783691
    10. '
' → logprob: -7.679535865783691

Token 2997: ' output' (ID: 4733)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.9407303929328918
    2. ':' → logprob: -1.315730333328247
    3. 'def' → logprob: -1.940730333328247
    4. '```' → logprob: -2.315730333328247
    5. ':
' → logprob: -3.190730333328247
    6. '
' → logprob: -3.940730333328247
    7. '       ' → logprob: -4.065730571746826
    8. '):' → logprob: -5.565730571746826
    9. '[
' → logprob: -5.815730571746826
    10. '[' → logprob: -5.815730571746826

Token 2998: ' ' (ID: 220)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.7335173487663269
    2. '   ' → logprob: -2.1085174083709717
    3. ':
' → logprob: -2.1085174083709717
    4. '```' → logprob: -2.2335174083709717
    5. ':' → logprob: -2.3585174083709717
    6. '       ' → logprob: -2.9835174083709717
    7. '
' → logprob: -4.608517169952393
    8. ' def' → logprob: -5.858517169952393
    9. ' =' → logprob: -6.108517169952393
    10. 'from' → logprob: -6.608517169952393

Token 2999: '1' (ID: 16)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -1.0247677564620972
    2. ' =' → logprob: -1.1497677564620972
    3. '1' → logprob: -1.3997677564620972
    4. '```' → logprob: -3.3997678756713867
    5. '2' → logprob: -4.399767875671387
    6. '0' → logprob: -4.524767875671387
    7. ':' → logprob: -5.024767875671387
    8. '3' → logprob: -5.649767875671387
    9. '``' → logprob: -6.774767875671387
    10. '=[' → logprob: -6.774767875671387

Token 3000: ':

' (ID: 1402)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.21742698550224304
    2. ':
' → logprob: -2.5924270153045654
    3. '[' → logprob: -3.8424270153045654
    4. '
' → logprob: -3.8424270153045654
    5. '```' → logprob: -3.8424270153045654
    6. '(' → logprob: -4.467426776885986
    7. '   ' → logprob: -4.967426776885986
    8. '0' → logprob: -5.092426776885986
    9. ',' → logprob: -5.217426776885986
    10. ' =' → logprob: -5.467426776885986

Token 3001: '       ' (ID: 309)
  Prédit: '3'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '3' → logprob: -0.6647121906280518
    2. '0' → logprob: -1.4147121906280518
    3. '2' → logprob: -2.4147121906280518
    4. '```' → logprob: -2.4147121906280518
    5. '1' → logprob: -3.4147121906280518
    6. '``' → logprob: -4.664711952209473
    7. '9' → logprob: -5.289711952209473
    8. '
' → logprob: -6.164711952209473
    9. '   ' → logprob: -6.289711952209473
    10. ' ' → logprob: -6.289711952209473

Token 3002: ' #' (ID: 1069)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.467978298664093
    2. '2' → logprob: -1.3429782390594482
    3. '```' → logprob: -3.2179782390594482
    4. '3' → logprob: -3.3429782390594482
    5. '1' → logprob: -3.5929782390594482
    6. '4' → logprob: -5.842978477478027
    7. '``' → logprob: -6.467978477478027
    8. ' ' → logprob: -6.842978477478027
    9. '5' → logprob: -6.967978477478027
    10. '
' → logprob: -7.342978477478027

Token 3003: ' bits' (ID: 18189)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.7640887498855591
    2. '```' → logprob: -1.514088749885559
    3. 'def' → logprob: -2.5140886306762695
    4. '1' → logprob: -2.6390886306762695
    5. '   ' → logprob: -2.8890886306762695
    6. '       ' → logprob: -3.2640886306762695
    7. ':' → logprob: -4.2640886306762695
    8. '
' → logprob: -4.5140886306762695
    9. '``' → logprob: -4.7640886306762695
    10. '2' → logprob: -5.0140886306762695

Token 3004: ' in' (ID: 306)
  Prédit: '3'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '3' → logprob: -1.0632745027542114
    2. '```' → logprob: -1.4382745027542114
    3. '(' → logprob: -2.438274383544922
    4. '0' → logprob: -2.688274383544922
    5. ' =' → logprob: -2.688274383544922
    6. '=' → logprob: -3.313274383544922
    7. '1' → logprob: -3.438274383544922
    8. '[' → logprob: -3.688274383544922
    9. '``' → logprob: -3.938274383544922
    10. ' ' → logprob: -4.063274383544922

Token 3005: ' ' (ID: 220)
  Prédit: '3'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.11624692380428314
    2. '0' → logprob: -2.2412469387054443
    3. '4' → logprob: -6.616246700286865
    4. ' ' → logprob: -7.991246700286865
    5. '1' → logprob: -8.116247177124023
    6. '`' → logprob: -8.741247177124023
    7. 'total' → logprob: -8.741247177124023
    8. '2' → logprob: -8.866247177124023
    9. '(' → logprob: -8.991247177124023
    10. 'a' → logprob: -9.241247177124023

Token 3006: '40' (ID: 1723)
  Prédit: '3'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.12803857028484344
    2. '4' → logprob: -2.5030386447906494
    3. '0' → logprob: -3.6280386447906494
    4. '1' → logprob: -6.25303840637207
    5. '5' → logprob: -6.50303840637207
    6. ' ' → logprob: -6.75303840637207
    7. '40' → logprob: -6.87803840637207
    8. '{
' → logprob: -7.12803840637207
    9. '```' → logprob: -7.37803840637207
    10. '9' → logprob: -7.50303840637207

Token 3007: ' (' (ID: 350)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -1.1831185817718506
    2. ' =' → logprob: -1.9331185817718506
    3. ' ' → logprob: -2.5581185817718506
    4. '```' → logprob: -2.5581185817718506
    5. ' (' → logprob: -2.6831185817718506
    6. '0' → logprob: -2.9331185817718506
    7. '[' → logprob: -2.9331185817718506
    8. ':' → logprob: -3.3081185817718506
    9. '=' → logprob: -3.3081185817718506
    10. '2' → logprob: -3.6831185817718506

Token 3008: 'binary' (ID: 57009)
  Prédit: '3'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '3' → logprob: -0.6655781269073486
    2. '4' → logprob: -1.2905781269073486
    3. ')' → logprob: -3.0405781269073486
    4. '6' → logprob: -3.2905781269073486
    5. '0' → logprob: -3.9155781269073486
    6. '```' → logprob: -4.2905778884887695
    7. ' ' → logprob: -4.2905778884887695
    8. '7' → logprob: -4.4155778884887695
    9. '(' → logprob: -4.4155778884887695
    10. ',' → logprob: -4.7905778884887695

Token 3009: ' ' (ID: 220)
  Prédit: '`'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '`' → logprob: -1.5889376401901245
    2. ''' → logprob: -1.7139376401901245
    3. '1' → logprob: -1.8389376401901245
    4. '0' → logprob: -2.463937759399414
    5. '```' → logprob: -2.463937759399414
    6. '10' → logprob: -3.213937759399414
    7. ')' → logprob: -3.213937759399414
    8. ' ' → logprob: -3.338937759399414
    9. '"' → logprob: -3.838937759399414
    10. ' =' → logprob: -3.963937759399414

Token 3010: '101' (ID: 7959)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -1.4030134677886963
    2. '`' → logprob: -1.6530134677886963
    3. '```' → logprob: -1.9030134677886963
    4. '0' → logprob: -2.2780134677886963
    5. '``' → logprob: -2.9030134677886963
    6. '(' → logprob: -3.2780134677886963
    7. ')' → logprob: -3.2780134677886963
    8. ''' → logprob: -3.5280134677886963
    9. '4' → logprob: -3.5280134677886963
    10. ' ' → logprob: -3.5280134677886963

Token 3011: '000' (ID: 1302)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.07607342302799225
    2. '1' → logprob: -3.076073408126831
    3. '```' → logprob: -4.32607364654541
    4. ')' → logprob: -4.82607364654541
    5. '`' → logprob: -6.20107364654541
    6. '_' → logprob: -7.20107364654541
    7. '00' → logprob: -7.32607364654541
    8. '``' → logprob: -7.70107364654541
    9. '01' → logprob: -8.07607364654541
    10. '010' → logprob: -8.20107364654541

Token 3012: '):

' (ID: 15626)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.7751709818840027
    2. '1' → logprob: -1.0251710414886475
    3. '```' → logprob: -2.9001710414886475
    4. ')' → logprob: -3.2751710414886475
    5. '
' → logprob: -4.025170803070068
    6. '\n' → logprob: -4.275170803070068
    7. '``' → logprob: -4.775170803070068
    8. ' ' → logprob: -5.025170803070068
    9. ',' → logprob: -5.400170803070068
    10. '):
' → logprob: -5.525170803070068

Token 3013: '       ' (ID: 309)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '```' → logprob: -0.3965938985347748
    2. ':' → logprob: -2.6465938091278076
    3. '       ' → logprob: -2.8965938091278076
    4. '   ' → logprob: -3.1465938091278076
    5. '0' → logprob: -3.2715938091278076
    6. '[' → logprob: -3.6465938091278076
    7. ',' → logprob: -3.7715938091278076
    8. '``' → logprob: -3.8965938091278076
    9. '6' → logprob: -4.896594047546387
    10. ' ' → logprob: -5.021594047546387

Token 3014: ' #' (ID: 1069)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -1.0846102237701416
    2. '6' → logprob: -1.4596102237701416
    3. '```' → logprob: -1.4596102237701416
    4. '1' → logprob: -2.8346102237701416
    5. ' ' → logprob: -3.4596102237701416
    6. '``' → logprob: -4.0846099853515625
    7. '3' → logprob: -4.4596099853515625
    8. '   ' → logprob: -4.4596099853515625
    9. '[' → logprob: -4.5846099853515625
    10. '7' → logprob: -4.7096099853515625

Token 3015: ' positions' (ID: 15897)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.08644407242536545
    2. '1' → logprob: -3.836444139480591
    3. '3' → logprob: -4.086443901062012
    4. '```' → logprob: -4.461443901062012
    5. '6' → logprob: -4.711443901062012
    6. '2' → logprob: -4.711443901062012
    7. '``' → logprob: -5.336443901062012
    8. ' ' → logprob: -5.461443901062012
    9. '4' → logprob: -6.086443901062012
    10. '5' → logprob: -6.836443901062012

Token 3016: ' (' (ID: 350)
  Prédit: '6'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '6' → logprob: -0.642681896686554
    2. '```' → logprob: -2.017681837081909
    3. '0' → logprob: -2.392681837081909
    4. ':' → logprob: -2.392681837081909
    5. '(' → logprob: -3.767681837081909
    6. ' ' → logprob: -3.892681837081909
    7. '7' → logprob: -4.142682075500488
    8. '[' → logprob: -4.142682075500488
    9. '3' → logprob: -4.642682075500488
    10. '``' → logprob: -4.642682075500488

Token 3017: 'zero' (ID: 29221)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.23694221675395966
    2. '3' → logprob: -3.2369422912597656
    3. '```' → logprob: -3.2369422912597656
    4. ')' → logprob: -3.3619422912597656
    5. '4' → logprob: -3.9869422912597656
    6. '6' → logprob: -4.236942291259766
    7. '2' → logprob: -4.361942291259766
    8. ':' → logprob: -4.611942291259766
    9. '(' → logprob: -4.986942291259766
    10. ',' → logprob: -5.361942291259766

Token 3018: '-based' (ID: 8235)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.8484166860580444
    2. '1' → logprob: -2.223416805267334
    3. '
' → logprob: -2.473416805267334
    4. '-based' → logprob: -2.473416805267334
    5. '```' → logprob: -2.598416805267334
    6. ',' → logprob: -2.723416805267334
    7. 'b' → logprob: -2.848416805267334
    8. ':' → logprob: -3.098416805267334
    9. '):
' → logprob: -3.348416805267334
    10. ':
' → logprob: -3.348416805267334

Token 3019: '):' (ID: 3127)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -1.411332130432129
    2. '```' → logprob: -1.786332130432129
    3. '6' → logprob: -2.161332130432129
    4. '[' → logprob: -2.536332130432129
    5. ')' → logprob: -2.661332130432129
    6. ' ' → logprob: -2.786332130432129
    7. ',' → logprob: -2.911332130432129
    8. '``' → logprob: -3.286332130432129
    9. ':' → logprob: -3.786332130432129
    10. '(' → logprob: -3.911332130432129

Token 3020: ' bits' (ID: 18189)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.27570557594299316
    2. '```' → logprob: -2.400705575942993
    3. ' ' → logprob: -3.025705575942993
    4. '6' → logprob: -3.525705575942993
    5. '``' → logprob: -3.525705575942993
    6. '2' → logprob: -4.650705337524414
    7. '1' → logprob: -5.525705337524414
    8. ' (' → logprob: -5.525705337524414
    9. ',' → logprob: -5.525705337524414
    10. '(' → logprob: -5.650705337524414

Token 3021: ' set' (ID: 920)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '```' → logprob: -0.6001109480857849
    2. '0' → logprob: -1.1001110076904297
    3. '``' → logprob: -3.2251110076904297
    4. '[' → logprob: -3.6001110076904297
    5. ':' → logprob: -4.60011100769043
    6. '(' → logprob: -4.60011100769043
    7. '`' → logprob: -4.97511100769043
    8. '6' → logprob: -5.22511100769043
    9. '3' → logprob: -5.97511100769043
    10. '(
' → logprob: -6.35011100769043

Token 3022: ' at' (ID: 540)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -1.149881362915039
    2. '```' → logprob: -1.524881362915039
    3. '(' → logprob: -2.274881362915039
    4. ',' → logprob: -2.899881362915039
    5. '``' → logprob: -2.899881362915039
    6. ':' → logprob: -2.899881362915039
    7. '[' → logprob: -3.274881362915039
    8. ' (' → logprob: -3.524881362915039
    9. '`' → logprob: -4.149881362915039
    10. '3' → logprob: -4.274881362915039

Token 3023: ' ' (ID: 220)
  Prédit: '3'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '3' → logprob: -0.051877353340387344
    2. '0' → logprob: -3.92687726020813
    3. '5' → logprob: -4.051877498626709
    4. '2' → logprob: -4.801877498626709
    5. '1' → logprob: -5.551877498626709
    6. '```' → logprob: -7.676877498626709
    7. '[' → logprob: -7.801877498626709
    8. '`' → logprob: -8.67687702178955
    9. '(' → logprob: -9.67687702178955
    10. '``' → logprob: -9.67687702178955

Token 3024: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.16778340935707092
    2. '0' → logprob: -1.9177833795547485
    3. '5' → logprob: -5.542783260345459
    4. '1' → logprob: -6.167783260345459
    5. '2' → logprob: -7.667783260345459
    6. '[' → logprob: -8.292783737182617
    7. '```' → logprob: -8.292783737182617
    8. '`' → logprob: -9.167783737182617
    9. '{
' → logprob: -9.667783737182617
    10. '{' → logprob: -9.792783737182617

Token 3025: ' and' (ID: 326)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '```' → logprob: -0.21083539724349976
    2. '``' → logprob: -3.0858354568481445
    3. '+' → logprob: -3.2108354568481445
    4. ',' → logprob: -3.7108354568481445
    5. ')' → logprob: -4.4608354568481445
    6. ':' → logprob: -4.5858354568481445
    7. '       ' → logprob: -4.7108354568481445
    8. '`' → logprob: -4.9608354568481445
    9. '   ' → logprob: -5.0858354568481445
    10. '\n' → logprob: -5.0858354568481445

Token 3026: ' ' (ID: 220)
  Prédit: '5'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '5' → logprob: -0.000145137935760431
    2. '6' → logprob: -9.125144958496094
    3. '```' → logprob: -11.625144958496094
    4. '0' → logprob: -12.000144958496094
    5. '4' → logprob: -12.250144958496094
    6. '
' → logprob: -12.500144958496094
    7. '1' → logprob: -12.625144958496094
    8. '...' → logprob: -13.125144958496094
    9. '2' → logprob: -13.875144958496094
    10. '`' → logprob: -14.125144958496094

Token 3027: '5' (ID: 20)
  Prédit: '5'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '5' → logprob: -2.546478935983032e-05
    2. '6' → logprob: -10.750025749206543
    3. '1' → logprob: -14.000025749206543
    4. '```' → logprob: -14.250025749206543
    5. '0' → logprob: -14.375025749206543
    6. '...' → logprob: -14.500025749206543
    7. '
' → logprob: -15.000025749206543
    8. '`' → logprob: -15.750025749206543
    9. '4' → logprob: -16.000024795532227
    10. '2' → logprob: -16.000024795532227

Token 3028: ' (' (ID: 350)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.9107003808021545
    2. '```' → logprob: -1.1607003211975098
    3. '       ' → logprob: -2.0357003211975098
    4. '   ' → logprob: -2.9107003211975098
    5. ':
' → logprob: -3.0357003211975098
    6. 'def' → logprob: -4.41070032119751
    7. '[' → logprob: -4.53570032119751
    8. '):' → logprob: -5.16070032119751
    9. '[
' → logprob: -5.66070032119751
    10. '
' → logprob: -6.03570032119751

Token 3029: 'count' (ID: 5420)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '```' → logprob: -0.8694023489952087
    2. ')' → logprob: -1.1194024085998535
    3. '``' → logprob: -2.7444024085998535
    4. ')
' → logprob: -2.7444024085998535
    5. '):' → logprob: -3.6194024085998535
    6. ',' → logprob: -3.7444024085998535
    7. '\n' → logprob: -3.7444024085998535
    8. '3' → logprob: -4.1194024085998535
    9. '):
' → logprob: -4.2444024085998535
    10. ')\' → logprob: -5.8694024085998535

Token 3030: 'ing' (ID: 289)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '```' → logprob: -0.348240464925766
    2. ',' → logprob: -2.223240375518799
    3. ':' → logprob: -3.098240375518799
    4. '``' → logprob: -3.223240375518799
    5. ')' → logprob: -3.473240375518799
    6. '=' → logprob: -4.348240375518799
    7. '):' → logprob: -4.848240375518799
    8. '
' → logprob: -5.098240375518799
    9. ')
' → logprob: -5.348240375518799
    10. '3' → logprob: -5.473240375518799

Token 3031: ' from' (ID: 591)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '```' → logprob: -0.45838314294815063
    2. ',' → logprob: -2.333383083343506
    3. '``' → logprob: -2.583383083343506
    4. ')' → logprob: -2.833383083343506
    5. ':' → logprob: -3.208383083343506
    6. '`' → logprob: -4.458383083343506
    7. '):' → logprob: -4.708383083343506
    8. ' ' → logprob: -4.833383083343506
    9. '0' → logprob: -4.958383083343506
    10. '+' → logprob: -4.958383083343506

Token 3032: ' L' (ID: 451)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0006009306525811553
    2. 'least' → logprob: -8.500600814819336
    3. '```' → logprob: -9.125600814819336
    4. 'right' → logprob: -9.125600814819336
    5. '1' → logprob: -10.125600814819336
    6. 'lowest' → logprob: -10.625600814819336
    7. 'zero' → logprob: -10.875600814819336
    8. '``' → logprob: -11.000600814819336
    9. '`' → logprob: -11.125600814819336
    10. 'the' → logprob: -11.500600814819336

Token 3033: 'SB' (ID: 28639)
  Prédit: '3'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '3' → logprob: -0.759684145450592
    2. '0' → logprob: -1.3846840858459473
    3. '1' → logprob: -2.5096840858459473
    4. '6' → logprob: -3.3846840858459473
    5. 'i' → logprob: -3.3846840858459473
    6. 'ine' → logprob: -3.3846840858459473
    7. ')' → logprob: -3.6346840858459473
    8. 'ines' → logprob: -4.509684085845947
    9. '7' → logprob: -4.634684085845947
    10. '```' → logprob: -4.634684085845947

Token 3034: ' as' (ID: 472)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '```' → logprob: -0.16527889668941498
    2. '``' → logprob: -2.790278911590576
    3. ':' → logprob: -3.415278911590576
    4. ')' → logprob: -4.665278911590576
    5. ',' → logprob: -4.665278911590576
    6. '+' → logprob: -5.415278911590576
    7. '):
' → logprob: -5.415278911590576
    8. '[' → logprob: -5.540278911590576
    9. ')
' → logprob: -5.540278911590576
    10. '       ' → logprob: -5.540278911590576

Token 3035: ' position' (ID: 4010)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0006158163887448609
    2. '3' → logprob: -8.125616073608398
    3. '```' → logprob: -9.000616073608398
    4. '1' → logprob: -9.125616073608398
    5. '``' → logprob: -10.625616073608398
    6. '2' → logprob: -10.875616073608398
    7. '`' → logprob: -11.625616073608398
    8. ' ' → logprob: -12.125616073608398
    9. '5' → logprob: -12.250616073608398
    10. '6' → logprob: -12.375616073608398

Token 3036: ' ' (ID: 220)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '```' → logprob: -0.8524551391601562
    2. '+' → logprob: -1.2274551391601562
    3. ':' → logprob: -2.6024551391601562
    4. '``' → logprob: -3.2274551391601562
    5. '3' → logprob: -3.3524551391601562
    6. ',' → logprob: -3.6024551391601562
    7. '`' → logprob: -4.102455139160156
    8. ')' → logprob: -4.227455139160156
    9. '=' → logprob: -4.227455139160156
    10. '0' → logprob: -4.352455139160156

Token 3037: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.12510406970977783
    2. '3' → logprob: -3.2501039505004883
    3. '```' → logprob: -3.2501039505004883
    4. '`' → logprob: -4.750103950500488
    5. ')' → logprob: -5.125103950500488
    6. '=' → logprob: -5.250103950500488
    7. '+' → logprob: -5.375103950500488
    8. '``' → logprob: -5.500103950500488
    9. '(' → logprob: -6.875103950500488
    10. ':' → logprob: -6.875103950500488

Token 3038: ')

' (ID: 1029)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '```' → logprob: -0.6658170819282532
    2. ':' → logprob: -2.2908170223236084
    3. '
' → logprob: -2.2908170223236084
    4. ',' → logprob: -2.7908170223236084
    5. '\n' → logprob: -2.9158170223236084
    6. '[' → logprob: -3.2908170223236084
    7. ':
' → logprob: -3.4158170223236084
    8. '``' → logprob: -4.2908172607421875
    9. '[
' → logprob: -4.4158172607421875
    10. '3' → logprob: -4.4158172607421875

Token 3039: '       ' (ID: 309)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.10871724039316177
    2. '[' → logprob: -3.358717203140259
    3. '```' → logprob: -3.608717203140259
    4. '   ' → logprob: -4.108717441558838
    5. ':
' → logprob: -5.108717441558838
    6. ')' → logprob: -5.483717441558838
    7. '[
' → logprob: -5.983717441558838
    8. '
' → logprob: -6.233717441558838
    9. 'def' → logprob: -6.233717441558838
    10. ',' → logprob: -6.483717441558838

Token 3040: ' #' (ID: 1069)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -1.0410133600234985
    2. '       ' → logprob: -1.2910133600234985
    3. '   ' → logprob: -1.4160133600234985
    4. '```' → logprob: -2.291013240814209
    5. ':' → logprob: -4.416013240814209
    6. ':
' → logprob: -4.666013240814209
    7. ' def' → logprob: -5.666013240814209
    8. '           ' → logprob: -6.541013240814209
    9. '``' → logprob: -7.166013240814209
    10. '`' → logprob: -8.541013717651367

Token 3041: ' bit' (ID: 3546)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7327505350112915
    2. '```' → logprob: -1.2327505350112915
    3. ':
' → logprob: -2.607750415802002
    4. ':' → logprob: -2.857750415802002
    5. '   ' → logprob: -3.482750415802002
    6. '
' → logprob: -3.732750415802002
    7. 'def' → logprob: -5.107750415802002
    8. '):' → logprob: -5.232750415802002
    9. '\n' → logprob: -5.232750415802002
    10. '):
' → logprob: -5.357750415802002

Token 3042: ' ' (ID: 220)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.4889352321624756
    2. '3' → logprob: -1.9889352321624756
    3. ' ' → logprob: -2.3639352321624756
    4. '```' → logprob: -3.3639352321624756
    5. '_set' → logprob: -3.4889352321624756
    6. '_' → logprob: -3.4889352321624756
    7. 'set' → logprob: -4.238935470581055
    8. ' =' → logprob: -4.863935470581055
    9. ' set' → logprob: -5.113935470581055
    10. '_s' → logprob: -5.238935470581055

Token 3043: '3' (ID: 18)
  Prédit: 'set'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'set' → logprob: -0.26936835050582886
    2. 's' → logprob: -2.2693684101104736
    3. '3' → logprob: -2.5193684101104736
    4. '_set' → logprob: -4.2693681716918945
    5. '0' → logprob: -4.3943681716918945
    6. 'positions' → logprob: -4.7693681716918945
    7. 'position' → logprob: -5.5193681716918945
    8. 'pos' → logprob: -6.0193681716918945
    9. '```' → logprob: -6.1443681716918945
    10. ' set' → logprob: -6.3943681716918945

Token 3044: ':' (ID: 25)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '```' → logprob: -0.4747133255004883
    2. '=' → logprob: -2.2247133255004883
    3. '3' → logprob: -2.4747133255004883
    4. ',' → logprob: -3.3497133255004883
    5. ' =' → logprob: -3.3497133255004883
    6. ':' → logprob: -3.3497133255004883
    7. ')' → logprob: -4.224713325500488
    8. '
' → logprob: -4.599713325500488
    9. '0' → logprob: -5.099713325500488
    10. '[' → logprob: -5.224713325500488

Token 3045: ' ' (ID: 220)
  Prédit: '3'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.011106422170996666
    2. '```' → logprob: -5.261106491088867
    3. ',' → logprob: -6.636106491088867
    4. '0' → logprob: -6.761106491088867
    5. '``' → logprob: -6.761106491088867
    6. ' ' → logprob: -6.886106491088867
    7. ' (' → logprob: -8.136106491088867
    8. '`' → logprob: -8.761106491088867
    9. '=' → logprob: -9.011106491088867
    10. '   ' → logprob: -9.011106491088867

Token 3046: '8' (ID: 23)
  Prédit: '3'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '3' → logprob: -1.5332478142227046e-05
    2. '(' → logprob: -11.375015258789062
    3. ' ' → logprob: -13.625015258789062
    4. '```' → logprob: -14.000015258789062
    5. '0' → logprob: -14.125015258789062
    6. '   ' → logprob: -14.375015258789062
    7. '`' → logprob: -16.250015258789062
    8. ' (' → logprob: -16.250015258789062
    9. '``' → logprob: -16.250015258789062
    10. '       ' → logprob: -16.750015258789062

Token 3047: '

' (ID: 279)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '```' → logprob: -1.2163817882537842
    2. ':' → logprob: -1.3413817882537842
    3. '\n' → logprob: -1.5913817882537842
    4. '   ' → logprob: -2.466381788253784
    5. '       ' → logprob: -2.716381788253784
    6. ':
' → logprob: -3.841381788253784
    7. '
' → logprob: -3.966381788253784
    8. '):' → logprob: -4.966382026672363
    9. ')' → logprob: -4.966382026672363
    10. '``' → logprob: -5.216382026672363

Token 3048: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5808661580085754
    2. '```' → logprob: -1.7058660984039307
    3. ':' → logprob: -2.2058660984039307
    4. '   ' → logprob: -2.7058660984039307
    5. ',' → logprob: -3.5808660984039307
    6. '
' → logprob: -4.95586633682251
    7. ':
' → logprob: -4.95586633682251
    8. '\n' → logprob: -5.08086633682251
    9. '``' → logprob: -5.08086633682251
    10. '           ' → logprob: -5.58086633682251

Token 3049: ' #' (ID: 1069)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -1.2524982690811157
    2. '```' → logprob: -1.3774982690811157
    3. '       ' → logprob: -1.7524982690811157
    4. ',' → logprob: -2.002498149871826
    5. '   ' → logprob: -2.877498149871826
    6. '\n' → logprob: -4.002498149871826
    7. '
' → logprob: -4.252498149871826
    8. ':
' → logprob: -4.877498149871826
    9. '=' → logprob: -4.877498149871826
    10. '``' → logprob: -5.127498149871826

Token 3050: ' bit' (ID: 3546)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '```' → logprob: -0.18084855377674103
    2. '   ' → logprob: -3.3058485984802246
    3. '``' → logprob: -3.4308485984802246
    4. '       ' → logprob: -4.055848598480225
    5. ',' → logprob: -4.305848598480225
    6. '`' → logprob: -4.305848598480225
    7. ' (' → logprob: -4.930848598480225
    8. '0' → logprob: -4.930848598480225
    9. ' ' → logprob: -4.930848598480225
    10. '\n' → logprob: -4.930848598480225

Token 3051: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.28201669454574585
    2. '3' → logprob: -1.6570167541503906
    3. '```' → logprob: -3.6570167541503906
    4. '6' → logprob: -4.157016754150391
    5. '5' → logprob: -5.532016754150391
    6. '4' → logprob: -6.157016754150391
    7. '   ' → logprob: -6.657016754150391
    8. '`' → logprob: -6.782016754150391
    9. '``' → logprob: -6.782016754150391
    10. '_' → logprob: -7.032016754150391

Token 3052: '5' (ID: 20)
  Prédit: '6'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '6' → logprob: -0.5167951583862305
    2. '0' → logprob: -1.5167951583862305
    3. '1' → logprob: -2.6417951583862305
    4. '4' → logprob: -3.3917951583862305
    5. '5' → logprob: -3.5167951583862305
    6. '3' → logprob: -4.1417951583862305
    7. '2' → logprob: -4.2667951583862305
    8. ' ' → logprob: -4.3917951583862305
    9. '```' → logprob: -5.6417951583862305
    10. '7' → logprob: -6.2667951583862305

Token 3053: ':' (ID: 25)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '```' → logprob: -0.9193288683891296
    2. ',' → logprob: -1.1693289279937744
    3. ':' → logprob: -1.7943289279937744
    4. '   ' → logprob: -2.7943289279937744
    5. ' ' → logprob: -4.419328689575195
    6. '       ' → logprob: -4.669328689575195
    7. '=' → logprob: -4.919328689575195
    8. '_j' → logprob: -5.169328689575195
    9. '``' → logprob: -5.294328689575195
    10. ' =' → logprob: -5.419328689575195

Token 3054: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.004929885733872652
    2. ' ' → logprob: -6.004930019378662
    3. '```' → logprob: -7.129930019378662
    4. '1' → logprob: -7.629930019378662
    5. '32' → logprob: -8.004929542541504
    6. '5' → logprob: -8.379929542541504
    7. '9' → logprob: -8.629929542541504
    8. '8' → logprob: -8.754929542541504
    9. '``' → logprob: -9.879929542541504
    10. '2' → logprob: -10.004929542541504

Token 3055: '32' (ID: 1398)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.000623918604105711
    2. '32' → logprob: -8.00062370300293
    3. '5' → logprob: -8.62562370300293
    4. ' ' → logprob: -9.87562370300293
    5. '```' → logprob: -10.75062370300293
    6. '1' → logprob: -10.87562370300293
    7. '`' → logprob: -12.62562370300293
    8. '40' → logprob: -12.75062370300293
    9. '
' → logprob: -13.12562370300293
    10. '3' → logprob: -13.37562370300293

Token 3056: '

' (ID: 279)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5064245462417603
    2. '```' → logprob: -1.7564245462417603
    3. '   ' → logprob: -2.1314244270324707
    4. 'def' → logprob: -3.1314244270324707
    5. ':' → logprob: -3.3814244270324707
    6. ':
' → logprob: -4.631424427032471
    7. '):' → logprob: -5.006424427032471
    8. ')' → logprob: -5.506424427032471
    9. '           ' → logprob: -5.631424427032471
    10. '):
' → logprob: -6.631424427032471

Token 3057: '       ' (ID: 309)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.6467893719673157
    2. '   ' → logprob: -0.7717893719673157
    3. '       ' → logprob: -5.02178955078125
    4. '```' → logprob: -5.14678955078125
    5. '
' → logprob: -7.39678955078125
    6. ' def' → logprob: -7.89678955078125
    7. ':' → logprob: -8.27178955078125
    8. ')' → logprob: -8.52178955078125
    9. ':
' → logprob: -9.02178955078125
    10. '):
' → logprob: -10.52178955078125

Token 3058: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.17469891905784607
    2. '```' → logprob: -2.674698829650879
    3. '   ' → logprob: -2.924698829650879
    4. 'def' → logprob: -4.049698829650879
    5. ':' → logprob: -4.424698829650879
    6. ':
' → logprob: -5.424698829650879
    7. '           ' → logprob: -6.549698829650879
    8. ' def' → logprob: -6.924698829650879
    9. '``' → logprob: -7.924698829650879
    10. '
' → logprob: -8.674698829650879

Token 3059: ' output' (ID: 4733)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3243977129459381
    2. '   ' → logprob: -2.4493978023529053
    3. ':' → logprob: -2.9493978023529053
    4. '```' → logprob: -2.9493978023529053
    5. ':
' → logprob: -3.3243978023529053
    6. 'def' → logprob: -3.6993978023529053
    7. '0' → logprob: -5.074397563934326
    8. '           ' → logprob: -5.574397563934326
    9. '
' → logprob: -5.949397563934326
    10. ')' → logprob: -6.324397563934326

Token 3060: ':

' (ID: 1402)
  Prédit: '3'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '3' → logprob: -0.15281645953655243
    2. '=' → logprob: -2.7778165340423584
    3. ' =' → logprob: -2.9028165340423584
    4. '0' → logprob: -4.777816295623779
    5. '[
' → logprob: -5.152816295623779
    6. '```' → logprob: -5.527816295623779
    7. '=
' → logprob: -6.402816295623779
    8. '``' → logprob: -6.777816295623779
    9. '   ' → logprob: -7.152816295623779
    10. ' ' → logprob: -7.152816295623779

Token 3061: '       ' (ID: 309)
  Prédit: '3'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.3440876007080078
    2. '       ' → logprob: -2.344087600708008
    3. '```' → logprob: -2.469087600708008
    4. '   ' → logprob: -2.594087600708008
    5. '0' → logprob: -3.969087600708008
    6. '``' → logprob: -4.719087600708008
    7. 'def' → logprob: -6.594087600708008
    8. ' ' → logprob: -6.719087600708008
    9. 'for' → logprob: -6.844087600708008
    10. '           ' → logprob: -6.969087600708008

Token 3062: ' #' (ID: 1069)
  Prédit: '3'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '3' → logprob: -0.0003096023283433169
    2. '```' → logprob: -8.375309944152832
    3. '``' → logprob: -10.250309944152832
    4. '(' → logprob: -11.250309944152832
    5. '   ' → logprob: -11.625309944152832
    6. '0' → logprob: -11.750309944152832
    7. '5' → logprob: -11.875309944152832
    8. '[
' → logprob: -12.250309944152832
    9. ' ' → logprob: -14.625309944152832
    10. '[' → logprob: -14.750309944152832

Token 3063: ' ' (ID: 220)
  Prédit: '3'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.0002600245934445411
    2. '```' → logprob: -8.750260353088379
    3. '0' → logprob: -9.750260353088379
    4. '``' → logprob: -10.375260353088379
    5. '   ' → logprob: -11.500260353088379
    6. ' ' → logprob: -14.375260353088379
    7. '(' → logprob: -15.125260353088379
    8. 'for' → logprob: -15.125260353088379
    9. '1' → logprob: -15.375260353088379
    10. '`' → logprob: -15.875260353088379

Token 3064: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.0001698094274615869
    2. '0' → logprob: -9.00016975402832
    3. '```' → logprob: -10.37516975402832
    4. '``' → logprob: -12.12516975402832
    5. '   ' → logprob: -12.25016975402832
    6. '1' → logprob: -13.62516975402832
    7. 'for' → logprob: -13.87516975402832
    8. '[
' → logprob: -14.37516975402832
    9. '2' → logprob: -14.75016975402832
    10. 'print' → logprob: -14.75016975402832

Token 3065: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.02588382549583912
    2. ',' → logprob: -4.025883674621582
    3. '0' → logprob: -4.900883674621582
    4. ' ,' → logprob: -8.275883674621582
    5. '```' → logprob: -11.900883674621582
    6. ' b' → logprob: -14.150883674621582
    7. '   ' → logprob: -15.150883674621582
    8. ' ' → logprob: -15.275883674621582
    9. ')' → logprob: -15.275883674621582
    10. '  ' → logprob: -15.400883674621582

Token 3066: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.003604224883019924
    2. ' ' → logprob: -5.628604412078857
    3. ',' → logprob: -13.0036039352417
    4. '```' → logprob: -13.3786039352417
    5. '``' → logprob: -16.628604888916016
    6. ')' → logprob: -17.003604888916016
    7. ' ,' → logprob: -17.378604888916016
    8. '   ' → logprob: -17.878604888916016
    9. '
' → logprob: -18.003604888916016
    10. '<|end|>' → logprob: -18.253604888916016

Token 3067: '

' (ID: 279)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.29207712411880493
    2. '
' → logprob: -1.5420770645141602
    3. '   ' → logprob: -3.54207706451416
    4. '```' → logprob: -5.16707706451416
    5. '       ' → logprob: -6.79207706451416
    6. '"\' → logprob: -7.29207706451416
    7. '``' → logprob: -7.29207706451416
    8. '3' → logprob: -7.66707706451416
    9. '\' → logprob: -7.91707706451416
    10. '`
' → logprob: -8.41707706451416

Token 3068: '       ' (ID: 309)
  Prédit: '5'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '5' → logprob: -0.04545089974999428
    2. '```' → logprob: -3.9204509258270264
    3. '
' → logprob: -4.670450687408447
    4. '   ' → logprob: -4.795450687408447
    5. '       ' → logprob: -5.420450687408447
    6. '\n' → logprob: -6.545450687408447
    7. '``' → logprob: -8.045451164245605
    8. '0' → logprob: -8.170451164245605
    9. ' ' → logprob: -8.420451164245605
    10. ',' → logprob: -9.920451164245605

Token 3069: ' #' (ID: 1069)
  Prédit: '5'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '5' → logprob: -0.03240607678890228
    2. '\n' → logprob: -3.5324060916900635
    3. '```' → logprob: -6.657405853271484
    4. '
' → logprob: -7.282405853271484
    5. '``' → logprob: -8.032405853271484
    6. '\' → logprob: -9.282405853271484
    7. '   ' → logprob: -9.407405853271484
    8. ' ' → logprob: -10.157405853271484
    9. '       ' → logprob: -10.282405853271484
    10. '"\' → logprob: -10.532405853271484

Token 3070: ' ' (ID: 220)
  Prédit: '5'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '5' → logprob: -6.704273118884885e-07
    2. ' ' → logprob: -15.125000953674316
    3. '```' → logprob: -15.125000953674316
    4. '   ' → logprob: -17.5
    5. '``' → logprob: -17.5
    6. '       ' → logprob: -19.0
    7. '`' → logprob: -19.125
    8. '
' → logprob: -20.625
    9. '"' → logprob: -21.125
    10. '#' → logprob: -21.25

Token 3071: '5' (ID: 20)
  Prédit: '5'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '5' → logprob: -3.128163257315464e-07
    2. '0' → logprob: -15.875
    3. '```' → logprob: -16.0
    4. ' ' → logprob: -17.25
    5. '
' → logprob: -18.25
    6. '   ' → logprob: -18.875
    7. '``' → logprob: -19.125
    8. '`' → logprob: -19.625
    9. '1' → logprob: -20.125
    10. '５' → logprob: -20.125

Token 3072: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.01886623725295067
    2. '0' → logprob: -4.143866062164307
    3. '```' → logprob: -5.893866062164307
    4. '``' → logprob: -9.768866539001465
    5. ' ' → logprob: -12.018866539001465
    6. '   ' → logprob: -12.893866539001465
    7. ' ```' → logprob: -12.893866539001465
    8. '`' → logprob: -13.893866539001465
    9. ',' → logprob: -14.268866539001465
    10. '	' → logprob: -14.768866539001465

Token 3073: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.007611481938511133
    2. ' ' → logprob: -4.882611274719238
    3. '```' → logprob: -12.257611274719238
    4. '``' → logprob: -14.757611274719238
    5. '1' → logprob: -16.132612228393555
    6. '   ' → logprob: -16.757612228393555
    7. '`' → logprob: -16.757612228393555
    8. ')' → logprob: -17.382612228393555
    9. ',' → logprob: -17.507612228393555
    10. ' ' → logprob: -18.382612228393555

Token 3074: '

' (ID: 279)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.04174996167421341
    2. '       ' → logprob: -3.916749954223633
    3. '   ' → logprob: -4.291749954223633
    4. '```' → logprob: -5.166749954223633
    5. 'mask' → logprob: -8.291749954223633
    6. 'bits' → logprob: -8.416749954223633
    7. 'bit' → logprob: -8.416749954223633
    8. '           ' → logprob: -8.541749954223633
    9. 'return' → logprob: -8.541749954223633
    10. ' def' → logprob: -8.666749954223633

Token 3075: '       ' (ID: 309)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.6754227876663208
    2. '       ' → logprob: -1.4254227876663208
    3. '   ' → logprob: -1.6754227876663208
    4. '```' → logprob: -3.1754226684570312
    5. '
' → logprob: -4.800422668457031
    6. ':
' → logprob: -4.925422668457031
    7. ':' → logprob: -5.425422668457031
    8. ' def' → logprob: -7.675422668457031
    9. '):
' → logprob: -8.425422668457031
    10. ')' → logprob: -8.550422668457031

Token 3076: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.10112559795379639
    2. '```' → logprob: -3.101125717163086
    3. '   ' → logprob: -3.976125717163086
    4. ':' → logprob: -4.226125717163086
    5. 'def' → logprob: -4.976125717163086
    6. '           ' → logprob: -5.851125717163086
    7. '):' → logprob: -6.226125717163086
    8. ':
' → logprob: -6.601125717163086
    9. ')' → logprob: -6.601125717163086
    10. '
' → logprob: -6.976125717163086

Token 3077: ' Exactly' (ID: 108825)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.07869676500558853
    2. '       ' → logprob: -2.9536967277526855
    3. '```' → logprob: -4.2036967277526855
    4. '   ' → logprob: -4.8286967277526855
    5. '           ' → logprob: -8.578697204589844
    6. ' def' → logprob: -9.078697204589844
    7. '               ' → logprob: -10.078697204589844
    8. 'for' → logprob: -10.078697204589844
    9. 'bits' → logprob: -10.078697204589844
    10. 'mask' → logprob: -10.203697204589844

Token 3078: ' sample' (ID: 10176)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.31241023540496826
    2. '       ' → logprob: -1.6874102354049683
    3. '   ' → logprob: -2.812410354614258
    4. ' def' → logprob: -4.187410354614258
    5. '```' → logprob: -5.187410354614258
    6. '           ' → logprob: -6.812410354614258
    7. ':' → logprob: -7.062410354614258
    8. ':
' → logprob: -8.312410354614258
    9. '               ' → logprob: -9.437410354614258
    10. '
' → logprob: -10.062410354614258

Token 3079: ' output' (ID: 4733)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.08078891038894653
    2. '   ' → logprob: -3.3307888507843018
    3. 'def' → logprob: -3.5807888507843018
    4. '```' → logprob: -4.455789089202881
    5. '
' → logprob: -7.205789089202881
    6. ':' → logprob: -7.330789089202881
    7. ':
' → logprob: -8.080788612365723
    8. '           ' → logprob: -8.330788612365723
    9. ' def' → logprob: -9.080788612365723
    10. '``' → logprob: -9.330788612365723

Token 3080: '.

' (ID: 364)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.146271213889122
    2. '   ' → logprob: -2.146271228790283
    3. '```' → logprob: -4.646271228790283
    4. ' def' → logprob: -5.146271228790283
    5. '       ' → logprob: -5.646271228790283
    6. ':' → logprob: -9.646270751953125
    7. ')' → logprob: -10.146270751953125
    8. '           ' → logprob: -10.771270751953125
    9. ':
' → logprob: -11.021270751953125
    10. '
' → logprob: -11.021270751953125

Token 3081: '       ' (ID: 309)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '```' → logprob: -0.6688018441200256
    2. 'def' → logprob: -1.0438017845153809
    3. '   ' → logprob: -2.668801784515381
    4. '       ' → logprob: -2.793801784515381
    5. ' def' → logprob: -5.543801784515381
    6. '           ' → logprob: -7.418801784515381
    7. '``' → logprob: -8.668802261352539
    8. ')' → logprob: -9.293802261352539
    9. '`' → logprob: -9.918802261352539
    10. ':' → logprob: -10.043802261352539

Token 3082: ' #' (ID: 1069)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0388527438044548
    2. '   ' → logprob: -4.038852691650391
    3. '       ' → logprob: -4.663852691650391
    4. '```' → logprob: -4.913852691650391
    5. ' def' → logprob: -5.663852691650391
    6. '           ' → logprob: -9.03885269165039
    7. ':' → logprob: -10.66385269165039
    8. '               ' → logprob: -10.91385269165039
    9. ')' → logprob: -11.16385269165039
    10. '``' → logprob: -11.66385269165039

Token 3083: ' Therefore' (ID: 19233)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.10230551660060883
    2. '   ' → logprob: -2.8523054122924805
    3. '       ' → logprob: -3.6023054122924805
    4. '```' → logprob: -4.4773054122924805
    5. ' def' → logprob: -7.2273054122924805
    6. '           ' → logprob: -9.10230541229248
    7. '``' → logprob: -10.85230541229248
    8. '
' → logprob: -11.72730541229248
    9. 'from' → logprob: -11.85230541229248
    10. ')' → logprob: -12.10230541229248

Token 3084: ' the' (ID: 290)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.01977325603365898
    2. '   ' → logprob: -4.394773483276367
    3. '       ' → logprob: -6.019773483276367
    4. '
' → logprob: -6.269773483276367
    5. '```' → logprob: -6.269773483276367
    6. ' def' → logprob: -7.269773483276367
    7. ':
' → logprob: -9.019773483276367
    8. ':' → logprob: -9.644773483276367
    9. 'import' → logprob: -10.144773483276367
    10. 'return' → logprob: -11.269773483276367

Token 3085: ' problem' (ID: 4792)
  Prédit: '`'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '`' → logprob: -1.0258924961090088
    2. 'def' → logprob: -1.1508924961090088
    3. ':' → logprob: -2.025892496109009
    4. 'final' → logprob: -4.27589225769043
    5. 'n' → logprob: -4.40089225769043
    6. 'a' → logprob: -4.65089225769043
    7. 're' → logprob: -4.65089225769043
    8. 'Re' → logprob: -4.65089225769043
    9. '#' → logprob: -4.65089225769043
    10. '"' → logprob: -4.77589225769043

Token 3086: ' is' (ID: 382)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.20970802009105682
    2. '   ' → logprob: -2.7097079753875732
    3. ':' → logprob: -3.3347079753875732
    4. ':
' → logprob: -3.9597079753875732
    5. ' =' → logprob: -4.334708213806152
    6. '```' → logprob: -4.334708213806152
    7. '       ' → logprob: -4.584708213806152
    8. '=' → logprob: -4.834708213806152
    9. ' def' → logprob: -5.459708213806152
    10. '
' → logprob: -5.459708213806152

Token 3087: ' to' (ID: 316)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.31090247631073
    2. '   ' → logprob: -1.43590247631073
    3. ' def' → logprob: -4.1859025955200195
    4. '```' → logprob: -4.6859025955200195
    5. '"' → logprob: -6.8109025955200195
    6. ':' → logprob: -7.0609025955200195
    7. '       ' → logprob: -7.5609025955200195
    8. ' to' → logprob: -7.5609025955200195
    9. '`' → logprob: -7.8109025955200195
    10. '``' → logprob: -7.9359025955200195

Token 3088: ':

' (ID: 1402)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.007418032735586166
    2. 'de' → logprob: -6.382418155670166
    3. '```' → logprob: -6.382418155670166
    4. '   ' → logprob: -7.007418155670166
    5. ' def' → logprob: -7.132418155670166
    6. 'return' → logprob: -7.507418155670166
    7. 'write' → logprob: -8.007417678833008
    8. 'reg' → logprob: -8.132417678833008
    9. 'compute' → logprob: -8.382417678833008
    10. 'generate' → logprob: -8.757417678833008

Token 3089: '       ' (ID: 309)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.4480764865875244
    2. '   ' → logprob: -1.3230764865875244
    3. '       ' → logprob: -2.8230764865875244
    4. ' def' → logprob: -4.073076248168945
    5. '```' → logprob: -4.698076248168945
    6. '
' → logprob: -5.573076248168945
    7. ':
' → logprob: -5.823076248168945
    8. ':' → logprob: -6.698076248168945
    9. '           ' → logprob: -8.448076248168945
    10. ',' → logprob: -9.073076248168945

Token 3090: ' #' (ID: 1069)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.21740971505641937
    2. '   ' → logprob: -1.7174097299575806
    3. '
' → logprob: -5.342409610748291
    4. '```' → logprob: -5.592409610748291
    5. ' def' → logprob: -5.717409610748291
    6. '       ' → logprob: -5.842409610748291
    7. ':' → logprob: -7.717409610748291
    8. ':
' → logprob: -8.71741008758545
    9. 'from' → logprob: -9.34241008758545
    10. ')' → logprob: -9.34241008758545

Token 3091: ' ' (ID: 220)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.06808038055896759
    2. '       ' → logprob: -3.068080425262451
    3. '   ' → logprob: -4.443080425262451
    4. ':
' → logprob: -5.818080425262451
    5. '```' → logprob: -6.568080425262451
    6. '
' → logprob: -6.943080425262451
    7. ':' → logprob: -7.318080425262451
    8. ' def' → logprob: -8.193079948425293
    9. '           ' → logprob: -8.318079948425293
    10. '#' → logprob: -8.693079948425293

Token 3092: '1' (ID: 16)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.010832746513187885
    2. '
' → logprob: -5.260832786560059
    3. '       ' → logprob: -5.885832786560059
    4. '   ' → logprob: -6.385832786560059
    5. 'total' → logprob: -7.635832786560059
    6. '#' → logprob: -8.635832786560059
    7. ' def' → logprob: -9.010832786560059
    8. '```' → logprob: -9.260832786560059
    9. '``' → logprob: -10.260832786560059
    10. 'from' → logprob: -10.510832786560059

Token 3093: '.' (ID: 13)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.28606340289115906
    2. '=' → logprob: -1.9110634326934814
    3. ':' → logprob: -3.5360634326934814
    4. ' =' → logprob: -4.036063194274902
    5. '#' → logprob: -4.661063194274902
    6. '0' → logprob: -4.661063194274902
    7. '```' → logprob: -4.786063194274902
    8. ')' → logprob: -5.161063194274902
    9. '**' → logprob: -5.411063194274902
    10. '.' → logprob: -5.536063194274902

Token 3094: ' compute' (ID: 23864)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.005542158614844084
    2. 'total' → logprob: -6.255542278289795
    3. '#' → logprob: -6.630542278289795
    4. '       ' → logprob: -6.880542278289795
    5. '   ' → logprob: -7.505542278289795
    6. ' def' → logprob: -8.755541801452637
    7. '```' → logprob: -9.380541801452637
    8. 'from' → logprob: -10.005541801452637
    9. 'for' → logprob: -10.130541801452637
    10. 'count' → logprob: -10.130541801452637

Token 3095: ' total' (ID: 3609)
  Prédit: 'total'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'total' → logprob: -0.025190310552716255
    2. 'self' → logprob: -5.025190353393555
    3. 'def' → logprob: -5.150190353393555
    4. 'sum' → logprob: -5.400190353393555
    5. '(total' → logprob: -6.525190353393555
    6. '#' → logprob: -7.025190353393555
    7. 'the' → logprob: -7.150190353393555
    8. 'a' → logprob: -7.400190353393555
    9. '       ' → logprob: -7.400190353393555
    10. ')' → logprob: -7.525190353393555

Token 3096: ' mass' (ID: 4842)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -1.051263689994812
    2. '_mass' → logprob: -1.301263689994812
    3. '_weight' → logprob: -1.426263689994812
    4. '_i' → logprob: -3.5512638092041016
    5. 'a' → logprob: -4.176263809204102
    6. 'mass' → logprob: -4.301263809204102
    7. '```' → logprob: -4.301263809204102
    8. '_a' → logprob: -4.426263809204102
    9. '`' → logprob: -4.801263809204102
    10. 'weight' → logprob: -5.176263809204102

Token 3097: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.4371919631958008
    2. ' =' → logprob: -1.0621919631958008
    3. '```' → logprob: -6.187191963195801
    4. '   ' → logprob: -6.562191963195801
    5. '=sum' → logprob: -6.687191963195801
    6. '=`' → logprob: -7.312191963195801
    7. '       ' → logprob: -7.312191963195801
    8. '=
' → logprob: -7.937191963195801
    9. '#' → logprob: -8.3121919631958
    10. 'def' → logprob: -8.3121919631958

Token 3098: ' sum' (ID: 4215)
  Prédit: 'sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sum' → logprob: -0.44076552987098694
    2. 'a' → logprob: -1.0657655000686646
    3. '0' → logprob: -5.940765380859375
    4. '`' → logprob: -6.690765380859375
    5. '1' → logprob: -6.690765380859375
    6. '```' → logprob: -6.815765380859375
    7. '2' → logprob: -7.190765380859375
    8. '   ' → logprob: -7.315765380859375
    9. 'def' → logprob: -7.315765380859375
    10. '
' → logprob: -7.440765380859375

Token 3099: ' ' (ID: 220)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.5317544937133789
    2. '(a' → logprob: -1.031754493713379
    3. 'i' → logprob: -3.781754493713379
    4. '(
' → logprob: -4.781754493713379
    5. '(' → logprob: -5.281754493713379
    6. '_i' → logprob: -5.281754493713379
    7. '(i' → logprob: -5.781754493713379
    8. '((' → logprob: -6.406754493713379
    9. '_' → logprob: -6.531754493713379
    10. 'of' → logprob: -6.781754493713379

Token 3100: '2' (ID: 17)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.3232007622718811
    2. '(a' → logprob: -1.8232007026672363
    3. '_i' → logprob: -3.1982007026672363
    4. 'i' → logprob: -3.3232007026672363
    5. '_' → logprob: -4.948200702667236
    6. '(' → logprob: -5.073200702667236
    7. 'def' → logprob: -5.323200702667236
    8. '(
' → logprob: -5.323200702667236
    9. '_a' → logprob: -6.323200702667236
    10. 'pow' → logprob: -6.323200702667236

Token 3101: '^{' (ID: 42923)
  Prédit: '**'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '**' → logprob: -0.5555049180984497
    2. '^' → logprob: -1.1805049180984497
    3. '^{' → logprob: -2.18050479888916
    4. '_i' → logprob: -5.93050479888916
    5. '^(' → logprob: -7.05550479888916
    6. '(a' → logprob: -7.68050479888916
    7. 'a' → logprob: -7.68050479888916
    8. '_' → logprob: -7.93050479888916
    9. '```' → logprob: -7.93050479888916
    10. '+' → logprob: -8.05550479888916

Token 3102: 'a' (ID: 64)
  Prédit: 'a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.0004885728703811765
    2. '(a' → logprob: -7.875488758087158
    3. 'ai' → logprob: -10.50048828125
    4. ' a' → logprob: -10.62548828125
    5. '   ' → logprob: -11.12548828125
    6. 'i' → logprob: -11.12548828125
    7. ' (' → logprob: -11.62548828125
    8. '(i' → logprob: -12.50048828125
    9. '```' → logprob: -13.12548828125
    10. '(' → logprob: -13.25048828125

Token 3103: '_i' (ID: 10853)
  Prédit: '_i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_i' → logprob: -0.013695631176233292
    2. '+' → logprob: -4.76369571685791
    3. '_j' → logprob: -6.38869571685791
    4. 'i' → logprob: -6.38869571685791
    5. '_' → logprob: -7.51369571685791
    6. '+i' → logprob: -7.88869571685791
    7. '+b' → logprob: -8.51369571685791
    8. '+
' → logprob: -9.38869571685791
    9. '_b' → logprob: -9.63869571685791
    10. '_
' → logprob: -9.76369571685791

Token 3104: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.03757695108652115
    2. '+
' → logprob: -3.912576913833618
    3. '+b' → logprob: -4.162577152252197
    4. ' +' → logprob: -6.787577152252197
    5. '+,' → logprob: -9.287576675415039
    6. ',' → logprob: -10.787576675415039
    7. '```' → logprob: -11.287576675415039
    8. ' ' → logprob: -11.537576675415039
    9. '+B' → logprob: -11.787576675415039
    10. ' +
' → logprob: -11.912576675415039

Token 3105: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -1.3306015716807451e-05
    2. '```' → logprob: -11.37501335144043
    3. ' b' → logprob: -14.00001335144043
    4. '(b' → logprob: -15.50001335144043
    5. '`' → logprob: -15.75001335144043
    6. 'i' → logprob: -16.12501335144043
    7. '   ' → logprob: -16.50001335144043
    8. '
' → logprob: -16.62501335144043
    9. '``' → logprob: -17.12501335144043
    10. 'a' → logprob: -17.37501335144043

Token 3106: '_i' (ID: 10853)
  Prédit: '_i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_i' → logprob: -0.005297196563333273
    2. '_j' → logprob: -5.6302971839904785
    3. '+' → logprob: -7.1302971839904785
    4. '_' → logprob: -7.7552971839904785
    5. '```' → logprob: -8.630297660827637
    6. 'i' → logprob: -9.255297660827637
    7. '}_' → logprob: -9.630297660827637
    8. ''_' → logprob: -10.505297660827637
    9. '`' → logprob: -10.880297660827637
    10. ')_' → logprob: -11.255297660827637

Token 3107: '}

' (ID: 943)
  Prédit: '}'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '}' → logprob: -0.20623217523097992
    2. 'for' → logprob: -2.8312320709228516
    3. ',' → logprob: -3.3312320709228516
    4. '+' → logprob: -3.4562320709228516
    5. '}
' → logprob: -4.081232070922852
    6. '```' → logprob: -4.456232070922852
    7. '_i' → logprob: -4.581232070922852
    8. '}`' → logprob: -5.581232070922852
    9. ' for' → logprob: -5.831232070922852
    10. '   ' → logprob: -5.956232070922852

Token 3108: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5284429788589478
    2. '   ' → logprob: -1.5284429788589478
    3. '
' → logprob: -2.653442859649658
    4. '```' → logprob: -2.903442859649658
    5. 'def' → logprob: -3.778442859649658
    6. ':' → logprob: -3.903442859649658
    7. ':
' → logprob: -5.028442859649658
    8. 'class' → logprob: -5.403442859649658
    9. 'from' → logprob: -6.403442859649658
    10. '\n' → logprob: -6.528442859649658

Token 3109: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.0158793926239014
    2. ':' → logprob: -1.5158793926239014
    3. '   ' → logprob: -1.8908793926239014
    4. '```' → logprob: -2.5158793926239014
    5. '
' → logprob: -3.5158793926239014
    6. 'def' → logprob: -3.6408793926239014
    7. ' =' → logprob: -3.6408793926239014
    8. ':
' → logprob: -3.7658793926239014
    9. '**' → logprob: -4.1408796310424805
    10. '=' → logprob: -4.6408796310424805

Token 3110: ' ' (ID: 220)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.13247248530387878
    2. ':
' → logprob: -3.507472515106201
    3. ' =' → logprob: -3.882472515106201
    4. ':' → logprob: -4.132472515106201
    5. '
' → logprob: -4.132472515106201
    6. '=' → logprob: -4.632472515106201
    7. '#' → logprob: -4.882472515106201
    8. '```' → logprob: -5.007472515106201
    9. '   ' → logprob: -5.632472515106201
    10. 'def' → logprob: -5.757472515106201

Token 3111: '2' (ID: 17)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.3384501338005066
    2. '       ' → logprob: -1.4634501934051514
    3. ':
' → logprob: -4.338449954986572
    4. '   ' → logprob: -4.713449954986572
    5. '
' → logprob: -4.838449954986572
    6. '#' → logprob: -5.088449954986572
    7. '):
' → logprob: -5.213449954986572
    8. ':' → logprob: -6.088449954986572
    9. '```' → logprob: -6.213449954986572
    10. ' =' → logprob: -6.463449954986572

Token 3112: '.' (ID: 13)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.795767068862915
    2. ' =' → logprob: -1.795767068862915
    3. '#' → logprob: -2.670767068862915
    4. '   ' → logprob: -2.795767068862915
    5. 'def' → logprob: -2.795767068862915
    6. '       ' → logprob: -3.170767068862915
    7. '```' → logprob: -3.170767068862915
    8. 'bit' → logprob: -3.420767068862915
    9. '
' → logprob: -4.045766830444336
    10. '_bit' → logprob: -5.045766830444336

Token 3113: ' de' (ID: 334)
  Prédit: 'bit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'bit' → logprob: -0.9932753443717957
    2. 'def' → logprob: -1.4932754039764404
    3. '
' → logprob: -2.1182754039764404
    4. 'bits' → logprob: -2.4932754039764404
    5. '#' → logprob: -2.9932754039764404
    6. ' =' → logprob: -3.9932754039764404
    7. 'total' → logprob: -4.118275165557861
    8. 'positions' → logprob: -4.118275165557861
    9. 'pop' → logprob: -4.243275165557861
    10. 'mask' → logprob: -4.493275165557861

Token 3114: 'compose' (ID: 65322)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.029168635606765747
    2. 'compose' → logprob: -3.6541686058044434
    3. 'c' → logprob: -6.404168605804443
    4. 'com' → logprob: -6.904168605804443
    5. '
' → logprob: -10.154169082641602
    6. '```' → logprob: -10.279169082641602
    7. 'fine' → logprob: -10.904169082641602
    8. '`' → logprob: -11.154169082641602
    9. '#' → logprob: -11.279169082641602
    10. '^' → logprob: -11.654169082641602

Token 3115: ' total' (ID: 3609)
  Prédit: 'total'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'total' → logprob: -0.23679021000862122
    2. ' =' → logprob: -1.9867901802062988
    3. '=' → logprob: -3.236790180206299
    4. '(total' → logprob: -5.111790180206299
    5. ' total' → logprob: -5.361790180206299
    6. '_' → logprob: -5.611790180206299
    7. '       ' → logprob: -5.861790180206299
    8. '`' → logprob: -5.986790180206299
    9. '```' → logprob: -6.111790180206299
    10. '#' → logprob: -6.236790180206299

Token 3116: ' mass' (ID: 4842)
  Prédit: '_mass'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_mass' → logprob: -0.8440282344818115
    2. '_i' → logprob: -1.7190282344818115
    3. 'mass' → logprob: -1.7190282344818115
    4. '_' → logprob: -2.0940282344818115
    5. '_
' → logprob: -3.8440282344818115
    6. ' _' → logprob: -4.344028472900391
    7. '_a' → logprob: -4.594028472900391
    8. 'a' → logprob: -4.844028472900391
    9. '`' → logprob: -4.844028472900391
    10. '_m' → logprob: -5.594028472900391

Token 3117: ' into' (ID: 1511)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '```' → logprob: -1.3088781833648682
    2. ':' → logprob: -1.4338781833648682
    3. ' =' → logprob: -1.9338781833648682
    4. '_' → logprob: -2.433878183364868
    5. '=' → logprob: -2.683878183364868
    6. '   ' → logprob: -3.183878183364868
    7. 'def' → logprob: -3.308878183364868
    8. '       ' → logprob: -3.933878183364868
    9. ',' → logprob: -4.558877944946289
    10. '**' → logprob: -4.558877944946289

Token 3118: ' powers' (ID: 27742)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.481295645236969
    2. 'powers' → logprob: -1.4812955856323242
    3. 'bits' → logprob: -2.856295585632324
    4. 'bit' → logprob: -2.981295585632324
    5. '(' → logprob: -3.606295585632324
    6. 'a' → logprob: -5.981295585632324
    7. '[' → logprob: -6.106295585632324
    8. '```' → logprob: -6.356295585632324
    9. '**' → logprob: -6.481295585632324
    10. 'def' → logprob: -6.481295585632324

Token 3119: ' of' (ID: 328)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.5858742594718933
    2. 'of' → logprob: -1.585874319076538
    3. '_of' → logprob: -1.835874319076538
    4. '```' → logprob: -3.460874319076538
    5. '**' → logprob: -5.210874080657959
    6. '   ' → logprob: -5.460874080657959
    7. '\' → logprob: -5.460874080657959
    8. '^{' → logprob: -5.585874080657959
    9. 'Of' → logprob: -5.710874080657959
    10. '_
' → logprob: -5.835874080657959

Token 3120: ' two' (ID: 1920)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.07003224641084671
    2. 'two' → logprob: -2.6950323581695557
    3. ' two' → logprob: -9.695032119750977
    4. 'Two' → logprob: -11.070032119750977
    5. ' ' → logprob: -12.320032119750977
    6. '```' → logprob: -12.570032119750977
    7. '-two' → logprob: -13.070032119750977
    8. '(two' → logprob: -13.195032119750977
    9. '-' → logprob: -13.695032119750977
    10. '_two' → logprob: -13.945032119750977

Token 3121: '

' (ID: 279)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.242019921541214
    2. ':
' → logprob: -2.6170198917388916
    3. '```' → logprob: -2.8670198917388916
    4. ':' → logprob: -3.1170198917388916
    5. 'def' → logprob: -3.6170198917388916
    6. '   ' → logprob: -4.617020130157471
    7. '):
' → logprob: -7.117020130157471
    8. '           ' → logprob: -7.617020130157471
    9. '
' → logprob: -7.742020130157471
    10. '#' → logprob: -8.117019653320312

Token 3122: '       ' (ID: 309)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.9009135961532593
    2. '```' → logprob: -1.5259135961532593
    3. '       ' → logprob: -1.6509135961532593
    4. ':
' → logprob: -2.525913715362549
    5. '   ' → logprob: -2.775913715362549
    6. 'def' → logprob: -3.650913715362549
    7. '
' → logprob: -4.900913715362549
    8. ' =' → logprob: -6.400913715362549
    9. '``' → logprob: -6.775913715362549
    10. '):' → logprob: -7.150913715362549

Token 3123: ' #' (ID: 1069)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.33320701122283936
    2. '       ' → logprob: -1.7082070112228394
    3. '   ' → logprob: -2.708207130432129
    4. '```' → logprob: -3.833207130432129
    5. ':' → logprob: -5.333207130432129
    6. ':
' → logprob: -5.708207130432129
    7. ' def' → logprob: -5.958207130432129
    8. 'class' → logprob: -6.833207130432129
    9. '
' → logprob: -6.958207130432129
    10. ')' → logprob: -8.708207130432129

Token 3124: ' ' (ID: 220)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3407026529312134
    2. 'def' → logprob: -1.5907026529312134
    3. ':
' → logprob: -3.340702533721924
    4. ':' → logprob: -3.715702533721924
    5. '   ' → logprob: -4.215702533721924
    6. '```' → logprob: -5.715702533721924
    7. ' =' → logprob: -6.340702533721924
    8. '=' → logprob: -6.590702533721924
    9. '#' → logprob: -6.840702533721924
    10. '):
' → logprob: -7.715702533721924

Token 3125: '3' (ID: 18)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.9363360404968262
    2. 'def' → logprob: -1.4363360404968262
    3. ':
' → logprob: -1.8113360404968262
    4. '#' → logprob: -2.936336040496826
    5. ':' → logprob: -3.311336040496826
    6. '```' → logprob: -3.436336040496826
    7. ' =' → logprob: -3.811336040496826
    8. '
' → logprob: -4.061336040496826
    9. '=' → logprob: -4.311336040496826
    10. '   ' → logprob: -4.436336040496826

Token 3126: '.' (ID: 13)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6103243827819824
    2. '   ' → logprob: -2.2353243827819824
    3. 'return' → logprob: -2.2353243827819824
    4. ' =' → logprob: -2.3603243827819824
    5. '#' → logprob: -2.6103243827819824
    6. '=' → logprob: -3.1103243827819824
    7. 'def' → logprob: -5.110324382781982
    8. 'for' → logprob: -5.235324382781982
    9. 'output' → logprob: -5.360324382781982
    10. ':' → logprob: -6.485324382781982

Token 3127: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.9336327314376831
    2. 'def' → logprob: -1.433632731437683
    3. '       ' → logprob: -2.0586328506469727
    4. 'bits' → logprob: -2.4336328506469727
    5. 'return' → logprob: -2.9336328506469727
    6. 'bit' → logprob: -3.4336328506469727
    7. '#' → logprob: -3.6836328506469727
    8. 'set' → logprob: -4.433632850646973
    9. '   ' → logprob: -5.183632850646973
    10. 'yield' → logprob: -5.308632850646973

Token 3128: ' each' (ID: 2454)
  Prédit: 'bit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bit' → logprob: -0.15130531787872314
    2. 'each' → logprob: -2.1513051986694336
    3. 'pos' → logprob: -4.526305198669434
    4. ' bit' → logprob: -5.401305198669434
    5. 'a' → logprob: -5.776305198669434
    6. ' each' → logprob: -6.651305198669434
    7. 'i' → logprob: -6.901305198669434
    8. 'set' → logprob: -7.151305198669434
    9. '_bit' → logprob: -8.026305198669434
    10. '_each' → logprob: -8.026305198669434

Token 3129: ' power' (ID: 3470)
  Prédit: 'set'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'set' → logprob: -0.40388819575309753
    2. 'bit' → logprob: -1.27888822555542
    3. ' set' → logprob: -4.02888822555542
    4. '_set' → logprob: -4.40388822555542
    5. '1' → logprob: -4.90388822555542
    6. '(bit' → logprob: -5.02888822555542
    7. ' bit' → logprob: -5.90388822555542
    8. '`' → logprob: -6.77888822555542
    9. ' (' → logprob: -7.02888822555542
    10. 'a' → logprob: -7.15388822555542

Token 3130: ' of' (ID: 328)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '```' → logprob: -1.3042874336242676
    2. '_' → logprob: -1.4292874336242676
    3. '``' → logprob: -2.4292874336242676
    4. 'of' → logprob: -2.8042874336242676
    5. '_j' → logprob: -2.9292874336242676
    6. '_i' → logprob: -2.9292874336242676
    7. '_,' → logprob: -2.9292874336242676
    8. ',' → logprob: -3.1792874336242676
    9. '_of' → logprob: -3.1792874336242676
    10. '
' → logprob: -3.4292874336242676

Token 3131: ' two' (ID: 1920)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.5760868787765503
    2. 'two' → logprob: -0.8260868787765503
    3. ' two' → logprob: -8.95108699798584
    4. 'Two' → logprob: -12.32608699798584
    5. '-two' → logprob: -12.70108699798584
    6. ' ' → logprob: -12.82608699798584
    7. '(two' → logprob: -13.07608699798584
    8. '_two' → logprob: -13.20108699798584
    9. '```' → logprob: -13.95108699798584
    10. '-' → logprob: -14.57608699798584

Token 3132: ' set' (ID: 920)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.9067696928977966
    2. '```' → logprob: -0.9067696928977966
    3. ':' → logprob: -2.5317697525024414
    4. '_j' → logprob: -3.9067697525024414
    5. '_' → logprob: -4.031769752502441
    6. '`' → logprob: -4.156769752502441
    7. '=' → logprob: -4.781769752502441
    8. '(' → logprob: -5.031769752502441
    9. '[' → logprob: -5.281769752502441
    10. '_,' → logprob: -5.281769752502441

Token 3133: ' bit' (ID: 3546)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'in' → logprob: -1.0063105821609497
    2. '```' → logprob: -1.2563105821609497
    3. ',' → logprob: -2.63131046295166
    4. '_set' → logprob: -2.88131046295166
    5. '=' → logprob: -3.13131046295166
    6. ' in' → logprob: -3.25631046295166
    7. '`' → logprob: -3.25631046295166
    8. '_in' → logprob: -3.75631046295166
    9. '_' → logprob: -3.88131046295166
    10. 'set' → logprob: -4.75631046295166

Token 3134: ' at' (ID: 540)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.5697624683380127
    2. '```' → logprob: -1.0697624683380127
    3. ',' → logprob: -3.0697624683380127
    4. '_' → logprob: -4.444762229919434
    5. '=' → logprob: -4.569762229919434
    6. 'in' → logprob: -5.069762229919434
    7. '**' → logprob: -6.194762229919434
    8. '[' → logprob: -6.194762229919434
    9. '`' → logprob: -6.444762229919434
    10. ' in' → logprob: -6.694762229919434

Token 3135: ' position' (ID: 4010)
  Prédit: 'bit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'bit' → logprob: -0.3867581784725189
    2. 'pos' → logprob: -1.7617582082748413
    3. 'i' → logprob: -2.2617580890655518
    4. 'position' → logprob: -3.8867580890655518
    5. '_' → logprob: -5.136758327484131
    6. 'a' → logprob: -6.261758327484131
    7. '1' → logprob: -6.386758327484131
    8. '_i' → logprob: -6.511758327484131
    9. '_bit' → logprob: -6.511758327484131
    10. '_)' → logprob: -6.761758327484131

Token 3136: ' k' (ID: 372)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.6331869959831238
    2. 'pos' → logprob: -2.2581870555877686
    3. 'bit' → logprob: -2.3831870555877686
    4. 'set' → logprob: -2.5081870555877686
    5. ' =' → logprob: -2.8831870555877686
    6. '```' → logprob: -3.1331870555877686
    7. '=' → logprob: -4.2581868171691895
    8. '(bit' → logprob: -4.6331868171691895
    9. '_' → logprob: -4.7581868171691895
    10. '
' → logprob: -4.7581868171691895

Token 3137: ' output' (ID: 4733)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.4173841178417206
    2. '```' → logprob: -2.042384147644043
    3. ',' → logprob: -2.667384147644043
    4. ' in' → logprob: -3.167384147644043
    5. ':
' → logprob: -3.292384147644043
    6. '       ' → logprob: -3.542384147644043
    7. ' =' → logprob: -5.042384147644043
    8. ' (' → logprob: -5.792384147644043
    9. 'in' → logprob: -5.792384147644043
    10. '`' → logprob: -5.917384147644043

Token 3138: ' a' (ID: 261)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.00012678056373260915
    2. '(k' → logprob: -9.000126838684082
    3. '```' → logprob: -13.375126838684082
    4. '
' → logprob: -14.500126838684082
    5. '   ' → logprob: -14.875126838684082
    6. '(' → logprob: -15.625126838684082
    7. ' k' → logprob: -15.750126838684082
    8. '(
' → logprob: -15.750126838684082
    9. '{k' → logprob: -16.000125885009766
    10. ' (' → logprob: -16.000125885009766

Token 3139: ' chunk' (ID: 23958)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.03487183153629303
    2. '(k' → logprob: -4.034872055053711
    3. ' (' → logprob: -4.409872055053711
    4. 'a' → logprob: -7.284872055053711
    5. '(' → logprob: -7.409872055053711
    6. '   ' → logprob: -7.659872055053711
    7. '[
' → logprob: -7.784872055053711
    8. '
' → logprob: -8.034872055053711
    9. '[k' → logprob: -8.159872055053711
    10. 'bit' → logprob: -8.159872055053711

Token 3140: ' a' (ID: 261)
  Prédit: ':
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':
' → logprob: -1.4570441246032715
    2. 'def' → logprob: -1.4570441246032715
    3. '   ' → logprob: -1.5820441246032715
    4. '       ' → logprob: -1.7070441246032715
    5. ':' → logprob: -2.3320441246032715
    6. '
' → logprob: -3.8320441246032715
    7. ' def' → logprob: -4.8320441246032715
    8. '```' → logprob: -4.8320441246032715
    9. '\n' → logprob: -4.9570441246032715
    10. '\' → logprob: -6.3320441246032715

Token 3141: '_j' (ID: 12021)
  Prédit: '_j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_j' → logprob: -0.008396602235734463
    2. ',' → logprob: -5.508396625518799
    3. ' =' → logprob: -6.508396625518799
    4. '=' → logprob: -6.508396625518799
    5. '_' → logprob: -7.883396625518799
    6. '_k' → logprob: -8.00839614868164
    7. '_i' → logprob: -9.00839614868164
    8. '`' → logprob: -9.38339614868164
    9. '_,' → logprob: -9.38339614868164
    10. ')' → logprob: -9.75839614868164

Token 3142: '=k' (ID: 105633)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.5053579211235046
    2. '_j' → logprob: -1.7553579807281494
    3. '=' → logprob: -1.8803579807281494
    4. ' =' → logprob: -3.2553579807281494
    5. '```' → logprob: -4.25535774230957
    6. '
' → logprob: -5.50535774230957
    7. '`' → logprob: -5.88035774230957
    8. ')' → logprob: -6.13035774230957
    9. '`,' → logprob: -6.38035774230957
    10. '   ' → logprob: -6.63035774230957

Token 3143: ',' (ID: 11)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '```' → logprob: -1.1471651792526245
    2. '_j' → logprob: -1.6471651792526245
    3. '       ' → logprob: -1.7721651792526245
    4. ',' → logprob: -2.522165298461914
    5. '_' → logprob: -3.022165298461914
    6. ':' → logprob: -3.147165298461914
    7. '
' → logprob: -3.772165298461914
    8. '   ' → logprob: -3.897165298461914
    9. '):' → logprob: -4.272165298461914
    10. ')' → logprob: -4.397165298461914

Token 3144: ' b' (ID: 287)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.1314191222190857
    2. 'b' → logprob: -3.0064191818237305
    3. ' b' → logprob: -3.2564191818237305
    4. ' ' → logprob: -3.3814191818237305
    5. '```' → logprob: -7.1314191818237305
    6. '`' → logprob: -9.38141918182373
    7. '       ' → logprob: -9.38141918182373
    8. '``' → logprob: -9.50641918182373
    9. ',' → logprob: -10.38141918182373
    10. '   ' → logprob: -10.88141918182373

Token 3145: '_j' (ID: 12021)
  Prédit: '_j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_j' → logprob: -0.12792417407035828
    2. '0' → logprob: -2.1279242038726807
    3. 'j' → logprob: -7.377923965454102
    4. '=' → logprob: -9.127923965454102
    5. '```' → logprob: -9.127923965454102
    6. '_' → logprob: -9.627923965454102
    7. ' ' → logprob: -10.252923965454102
    8. '_i' → logprob: -11.252923965454102
    9. ',' → logprob: -11.252923965454102
    10. '_k' → logprob: -11.627923965454102

Token 3146: '=' (ID: 28)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.07052328437566757
    2. '=' → logprob: -2.695523262023926
    3. '```' → logprob: -7.820523262023926
    4. ' =' → logprob: -9.320523262023926
    5. ',' → logprob: -10.320523262023926
    6. '`' → logprob: -10.945523262023926
    7. ':' → logprob: -11.195523262023926
    8. '+' → logprob: -11.945523262023926
    9. '``' → logprob: -11.945523262023926
    10. '#' → logprob: -12.445523262023926

Token 3147: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -15.75
    3. '```' → logprob: -20.5
    4. '   ' → logprob: -20.75
    5. '1' → logprob: -21.375
    6. '000' → logprob: -21.5
    7. '00' → logprob: -21.75
    8. '`' → logprob: -22.375
    9. '
' → logprob: -23.125
    10. '۰' → logprob: -23.125

Token 3148: ' sorting' (ID: 51375)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7773836851119995
    2. 'def' → logprob: -1.4023836851119995
    3. ':' → logprob: -2.152383804321289
    4. '   ' → logprob: -2.277383804321289
    5. ':
' → logprob: -3.152383804321289
    6. '```' → logprob: -4.527383804321289
    7. '
' → logprob: -4.777383804321289
    8. ')' → logprob: -5.902383804321289
    9. ' def' → logprob: -5.902383804321289
    10. '):' → logprob: -6.152383804321289

Token 3149: ' by' (ID: 656)
  Prédit: ':
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.9034518599510193
    2. '   ' → logprob: -1.278451919555664
    3. 'def' → logprob: -2.028451919555664
    4. ':' → logprob: -2.653451919555664
    5. '```' → logprob: -2.903451919555664
    6. '
' → logprob: -3.653451919555664
    7. '       ' → logprob: -4.528451919555664
    8. ' def' → logprob: -4.903451919555664
    9. '):
' → logprob: -5.778451919555664
    10. '(
' → logprob: -5.903451919555664

Token 3150: ' a' (ID: 261)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.48405152559280396
    2. 'a' → logprob: -1.3590514659881592
    3. 'ascending' → logprob: -2.734051465988159
    4. '0' → logprob: -3.484051465988159
    5. 'bit' → logprob: -3.984051465988159
    6. '```' → logprob: -5.109051704406738
    7. '
' → logprob: -6.359051704406738
    8. 'in' → logprob: -7.609051704406738
    9. '`' → logprob: -7.734051704406738
    10. '+' → logprob: -7.984051704406738

Token 3151: '_j' (ID: 12021)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4407441318035126
    2. '   ' → logprob: -1.815744161605835
    3. 'def' → logprob: -1.815744161605835
    4. '
' → logprob: -4.690743923187256
    5. ':
' → logprob: -5.190743923187256
    6. ')' → logprob: -5.440743923187256
    7. '```' → logprob: -5.440743923187256
    8. '):
' → logprob: -6.190743923187256
    9. ':' → logprob: -6.940743923187256
    10. '           ' → logprob: -7.065743923187256

Token 3152: ' ascending' (ID: 75564)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.06392689794301987
    2. '```' → logprob: -3.813926935195923
    3. '       ' → logprob: -3.938926935195923
    4. '   ' → logprob: -4.313926696777344
    5. ':
' → logprob: -5.813926696777344
    6. ' def' → logprob: -6.188926696777344
    7. ':' → logprob: -7.188926696777344
    8. '
' → logprob: -7.813926696777344
    9. 'class' → logprob: -8.438926696777344
    10. ')' → logprob: -9.313926696777344

Token 3153: '

' (ID: 279)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.03734879195690155
    2. '   ' → logprob: -4.037348747253418
    3. '       ' → logprob: -4.412348747253418
    4. '```' → logprob: -5.662348747253418
    5. ' def' → logprob: -6.037348747253418
    6. ')' → logprob: -8.162348747253418
    7. '
' → logprob: -8.287348747253418
    8. ':
' → logprob: -8.662348747253418
    9. ':' → logprob: -8.787348747253418
    10. '):
' → logprob: -9.662348747253418

Token 3154: '       ' (ID: 309)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.051051221787929535
    2. '   ' → logprob: -3.551051139831543
    3. '       ' → logprob: -4.301051139831543
    4. '```' → logprob: -5.176051139831543
    5. ' def' → logprob: -6.551051139831543
    6. ')' → logprob: -8.301051139831543
    7. 'class' → logprob: -10.676051139831543
    8. '):
' → logprob: -10.801051139831543
    9. '
' → logprob: -10.801051139831543
    10. ':' → logprob: -11.051051139831543

Token 3155: ' #' (ID: 1069)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.27398306131362915
    2. '   ' → logprob: -1.8989830017089844
    3. '       ' → logprob: -2.7739830017089844
    4. ':' → logprob: -4.148983001708984
    5. ':
' → logprob: -5.398983001708984
    6. ' def' → logprob: -5.398983001708984
    7. '```' → logprob: -6.898983001708984
    8. ')' → logprob: -7.273983001708984
    9. '):' → logprob: -8.398983001708984
    10. '
' → logprob: -8.898983001708984

Token 3156: ' Now' (ID: 6549)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.6272560954093933
    2. '       ' → logprob: -0.8772560954093933
    3. '   ' → logprob: -3.627256155014038
    4. ':' → logprob: -5.002255916595459
    5. '```' → logprob: -5.002255916595459
    6. ':
' → logprob: -5.502255916595459
    7. '):' → logprob: -6.752255916595459
    8. ')' → logprob: -6.877255916595459
    9. ' def' → logprob: -7.377255916595459
    10. '):
' → logprob: -7.502255916595459

Token 3157: ' implement' (ID: 6365)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.03219382092356682
    2. '   ' → logprob: -3.532193899154663
    3. '```' → logprob: -6.782193660736084
    4. ' def' → logprob: -6.907193660736084
    5. '       ' → logprob: -8.532194137573242
    6. '
' → logprob: -9.907194137573242
    7. ')' → logprob: -11.157194137573242
    8. 'return' → logprob: -11.907194137573242
    9. 'from' → logprob: -12.282194137573242
    10. ':
' → logprob: -12.407194137573242

Token 3158: ' this' (ID: 495)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.09011781960725784
    2. '   ' → logprob: -2.465117931365967
    3. ' def' → logprob: -7.340117931365967
    4. 'class' → logprob: -8.340117454528809
    5. '```' → logprob: -8.590117454528809
    6. '       ' → logprob: -9.965117454528809
    7. 'from' → logprob: -10.215117454528809
    8. '
' → logprob: -11.465117454528809
    9. 'import' → logprob: -13.215117454528809
    10. '#' → logprob: -13.340117454528809

Token 3159: '.

' (ID: 364)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.06772518157958984
    2. '   ' → logprob: -3.19272518157959
    3. '       ' → logprob: -3.94272518157959
    4. '```' → logprob: -5.44272518157959
    5. ' def' → logprob: -7.94272518157959
    6. 'class' → logprob: -8.94272518157959
    7. '
' → logprob: -9.56772518157959
    8. 'total' → logprob: -10.06772518157959
    9. ')' → logprob: -10.81772518157959
    10. 'from' → logprob: -10.94272518157959

Token 3160: 'class' (ID: 1444)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.6128430366516113
    2. '   ' → logprob: -1.3628430366516113
    3. '       ' → logprob: -1.7378430366516113
    4. '```' → logprob: -3.7378430366516113
    5. ' def' → logprob: -6.862843036651611
    6. '           ' → logprob: -7.612843036651611
    7. 'class' → logprob: -7.737843036651611
    8. ')' → logprob: -8.612842559814453
    9. '
' → logprob: -8.612842559814453
    10. '``' → logprob: -10.112842559814453

Token 3161: ' Input' (ID: 10090)
  Prédit: 'All'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'All' → logprob: -0.00020342117932159454
    2. 'Solution' → logprob: -9.250203132629395
    3. 'Weight' → logprob: -9.875203132629395
    4. ' Alloy' → logprob: -10.625203132629395
    5. '
' → logprob: -11.875203132629395
    6. ' All' → logprob: -12.125203132629395
    7. 'Method' → logprob: -12.625203132629395
    8. 'Code' → logprob: -12.750203132629395
    9. '`' → logprob: -12.875203132629395
    10. 'Unit' → logprob: -13.625203132629395

Token 3162: 'Processor' (ID: 22334)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.6919159889221191
    2. ':
' → logprob: -0.9419159889221191
    3. 'class' → logprob: -2.441915988922119
    4. '():
' → logprob: -4.316915988922119
    5. 'def' → logprob: -5.691915988922119
    6. 'Parser' → logprob: -5.941915988922119
    7. '():' → logprob: -6.566915988922119
    8. 'data' → logprob: -8.441915512084961
    9. ' class' → logprob: -8.691915512084961
    10. '```' → logprob: -8.941915512084961

Token 3163: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.023280655965209007
    2. ':
' → logprob: -3.773280620574951
    3. ':def' → logprob: -11.14828109741211
    4. '```' → logprob: -12.14828109741211
    5. '():' → logprob: -12.39828109741211
    6. 'def' → logprob: -12.64828109741211
    7. ':

' → logprob: -13.02328109741211
    8. '):' → logprob: -13.77328109741211
    9. '(' → logprob: -13.89828109741211
    10. '(object' → logprob: -13.89828109741211

Token 3164: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5502477288246155
    2. ':' → logprob: -0.9252477288246155
    3. ':
' → logprob: -3.6752476692199707
    4. '```' → logprob: -7.175247669219971
    5. 'def' → logprob: -7.675247669219971
    6. 'class' → logprob: -9.800248146057129
    7. '(' → logprob: -10.425248146057129
    8. '    
' → logprob: -11.050248146057129
    9. ' def' → logprob: -11.175248146057129
    10. '
' → logprob: -11.675248146057129

Token 3165: ' """
' (ID: 7037)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0176752507686615
    2. 'def' → logprob: -4.267675399780273
    3. 'class' → logprob: -5.892675399780273
    4. '```' → logprob: -7.892675399780273
    5. ' def' → logprob: -8.267675399780273
    6. ':' → logprob: -9.767675399780273
    7. '
' → logprob: -10.142675399780273
    8. '    
' → logprob: -11.892675399780273
    9. '	def' → logprob: -12.892675399780273
    10. ':
' → logprob: -12.892675399780273

Token 3166: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.33179235458374023
    2. 'def' → logprob: -1.3317923545837402
    3. ' def' → logprob: -4.95679235458374
    4. '```' → logprob: -5.33179235458374
    5. 'class' → logprob: -5.45679235458374
    6. ':' → logprob: -6.33179235458374
    7. ')' → logprob: -8.456792831420898
    8. '
' → logprob: -9.956792831420898
    9. ':
' → logprob: -9.956792831420898
    10. '):
' → logprob: -10.581792831420898

Token 3167: ' Parses' (ID: 179117)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4085647761821747
    2. 'class' → logprob: -1.408564805984497
    3. 'def' → logprob: -2.533564805984497
    4. '```' → logprob: -4.533564567565918
    5. '
' → logprob: -8.283564567565918
    6. ' def' → logprob: -8.408564567565918
    7. ':' → logprob: -8.783564567565918
    8. ':
' → logprob: -9.533564567565918
    9. '``' → logprob: -10.783564567565918
    10. '    
' → logprob: -11.283564567565918

Token 3168: ' input' (ID: 3422)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.9127841591835022
    2. 'the' → logprob: -1.4127840995788574
    3. '   ' → logprob: -2.1627840995788574
    4. 'input' → logprob: -2.4127840995788574
    5. '```' → logprob: -2.5377840995788574
    6. 'and' → logprob: -4.412784099578857
    7. 'def' → logprob: -4.412784099578857
    8. ':
' → logprob: -4.662784099578857
    9. ' the' → logprob: -5.287784099578857
    10. 'inputs' → logprob: -5.412784099578857

Token 3169: ' data' (ID: 1238)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.013589788228273392
    2. ':' → logprob: -5.513589859008789
    3. ':
' → logprob: -5.763589859008789
    4. '```' → logprob: -6.263589859008789
    5. '):
' → logprob: -6.513589859008789
    6. 'def' → logprob: -7.388589859008789
    7. '       ' → logprob: -7.763589859008789
    8. '    
' → logprob: -7.888589859008789
    9. ' and' → logprob: -8.013589859008789
    10. 'and' → logprob: -8.013589859008789

Token 3170: ' into' (ID: 1511)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.039881810545921326
    2. ':' → logprob: -4.039881706237793
    3. ':
' → logprob: -4.539881706237793
    4. '):
' → logprob: -5.289881706237793
    5. 'from' → logprob: -6.414881706237793
    6. '):' → logprob: -6.664881706237793
    7. 'and' → logprob: -7.164881706237793
    8. '```' → logprob: -7.414881706237793
    9. ')' → logprob: -7.914881706237793
    10. '
' → logprob: -7.914881706237793

Token 3171: ' appropriate' (ID: 11081)
  Prédit: 'List'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'List' → logprob: -0.3116903007030487
    2. 'def' → logprob: -2.186690330505371
    3. 'class' → logprob: -3.561690330505371
    4. 'lines' → logprob: -3.686690330505371
    5. '   ' → logprob: -3.936690330505371
    6. 'the' → logprob: -4.186690330505371
    7. '```' → logprob: -4.186690330505371
    8. ' lines' → logprob: -4.686690330505371
    9. '...' → logprob: -4.811690330505371
    10. 'a' → logprob: -5.061690330505371

Token 3172: ' objects' (ID: 11736)
  Prédit: 'class'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'class' → logprob: -0.4003617763519287
    2. 'def' → logprob: -2.1503617763519287
    3. '```' → logprob: -2.4003617763519287
    4. ' lines' → logprob: -3.0253617763519287
    5. 'lines' → logprob: -3.7753617763519287
    6. '   ' → logprob: -3.7753617763519287
    7. 'objects' → logprob: -5.650362014770508
    8. 'tokens' → logprob: -5.775362014770508
    9. 'units' → logprob: -5.900362014770508
    10. '``' → logprob: -6.025362014770508

Token 3173: '.
' (ID: 558)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.20237678289413452
    2. ':' → logprob: -1.8273768424987793
    3. ':
' → logprob: -4.327376842498779
    4. '```' → logprob: -5.577376842498779
    5. '):' → logprob: -6.077376842498779
    6. '):
' → logprob: -6.452376842498779
    7. '
' → logprob: -7.952376842498779
    8. 'class' → logprob: -8.327376365661621
    9. '(' → logprob: -8.452376365661621
    10. 'from' → logprob: -8.452376365661621

Token 3174: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.005857804790139198
    2. '```' → logprob: -5.255857944488525
    3. 'class' → logprob: -8.005857467651367
    4. '
' → logprob: -9.380857467651367
    5. 'def' → logprob: -10.005857467651367
    6. '    
' → logprob: -10.255857467651367
    7. '    ' → logprob: -10.630857467651367
    8. ':' → logprob: -10.630857467651367
    9. '``' → logprob: -11.005857467651367
    10. ')' → logprob: -11.255857467651367

Token 3175: ' """

' (ID: 28800)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0024189415853470564
    2. 'class' → logprob: -6.7524189949035645
    3. '```' → logprob: -6.8774189949035645
    4. 'def' → logprob: -8.752418518066406
    5. '
' → logprob: -11.002418518066406
    6. '    ' → logprob: -11.377418518066406
    7. '    
' → logprob: -11.377418518066406
    8. ':' → logprob: -12.502418518066406
    9. ' def' → logprob: -12.627418518066406
    10. '``' → logprob: -12.627418518066406

Token 3176: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.07869632542133331
    2. 'class' → logprob: -3.3286962509155273
    3. '```' → logprob: -3.5786962509155273
    4. 'def' → logprob: -4.703696250915527
    5. ' def' → logprob: -5.953696250915527
    6. '
' → logprob: -9.453696250915527
    7. ' class' → logprob: -9.453696250915527
    8. '	def' → logprob: -10.203696250915527
    9. '``' → logprob: -10.203696250915527
    10. '    
' → logprob: -10.953696250915527

Token 3177: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.0001600347168277949
    2. ' def' → logprob: -9.000160217285156
    3. '   ' → logprob: -10.750160217285156
    4. '@' → logprob: -11.375160217285156
    5. '```' → logprob: -12.625160217285156
    6. 'staticmethod' → logprob: -16.125160217285156
    7. '
' → logprob: -16.125160217285156
    8. '	def' → logprob: -16.500160217285156
    9. '__' → logprob: -16.625160217285156
    10. 'class' → logprob: -17.375160217285156

Token 3178: ' __' (ID: 2516)
  Prédit: 'init'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'init' → logprob: -0.02694801613688469
    2. 'parse' → logprob: -4.526947975158691
    3. '__' → logprob: -4.651947975158691
    4. 'process' → logprob: -5.151947975158691
    5. 'staticmethod' → logprob: -9.026947975158691
    6. 'def' → logprob: -9.151947975158691
    7. '_init' → logprob: -9.526947975158691
    8. 'read' → logprob: -9.651947975158691
    9. 'next' → logprob: -10.901947975158691
    10. 'predict' → logprob: -11.276947975158691

Token 3179: 'init' (ID: 3287)
  Prédit: 'init'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: -0.0033126999624073505
    2. 'staticmethod' → logprob: -5.753312587738037
    3. 'classmethod' → logprob: -9.253313064575195
    4. '__' → logprob: -10.878313064575195
    5. 'def' → logprob: -12.128313064575195
    6. '```' → logprob: -12.753313064575195
    7. 'class' → logprob: -12.753313064575195
    8. 'call' → logprob: -13.378313064575195
    9. 'method' → logprob: -13.628313064575195
    10. 'next' → logprob: -13.628313064575195

Token 3180: '__(' (ID: 8241)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.02278764359652996
    2. 'self' → logprob: -4.647787570953369
    3. '   ' → logprob: -4.897787570953369
    4. '(' → logprob: -5.772787570953369
    5. '(
' → logprob: -7.522787570953369
    6. '()' → logprob: -8.022788047790527
    7. '       ' → logprob: -8.272788047790527
    8. '```' → logprob: -8.397788047790527
    9. 'def' → logprob: -8.772788047790527
    10. ' (' → logprob: -9.397788047790527

Token 3181: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -2.2842308680992573e-05
    2. ')' → logprob: -11.625022888183594
    3. '):
' → logprob: -11.625022888183594
    4. '   ' → logprob: -12.750022888183594
    5. ' self' → logprob: -13.625022888183594
    6. '
' → logprob: -15.125022888183594
    7. '	self' → logprob: -15.750022888183594
    8. '       ' → logprob: -16.000022888183594
    9. ')
' → logprob: -16.250022888183594
    10. '):' → logprob: -16.250022888183594

Token 3182: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.7052035927772522
    2. '):' → logprob: -1.0802035331726074
    3. ',' → logprob: -2.2052035331726074
    4. 'self' → logprob: -3.3302035331726074
    5. '   ' → logprob: -3.9552035331726074
    6. '       ' → logprob: -7.330203533172607
    7. '(self' → logprob: -7.955203533172607
    8. '():' → logprob: -10.205204010009766
    9. ')' → logprob: -10.330204010009766
    10. ' self' → logprob: -10.455204010009766

Token 3183: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.172688290476799
    2. 'self' → logprob: -1.9226882457733154
    3. '```' → logprob: -5.2976884841918945
    4. '(self' → logprob: -5.6726884841918945
    5. '   ' → logprob: -5.7976884841918945
    6. ' self' → logprob: -8.422688484191895
    7. ')' → logprob: -8.547688484191895
    8. '):
' → logprob: -9.047688484191895
    9. '``' → logprob: -10.047688484191895
    10. '        
' → logprob: -10.172688484191895

Token 3184: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.008070633746683598
    2. '       ' → logprob: -4.883070468902588
    3. ' self' → logprob: -8.258070945739746
    4. 'def' → logprob: -8.758070945739746
    5. '
' → logprob: -11.258070945739746
    6. '	self' → logprob: -11.383070945739746
    7. '```' → logprob: -12.008070945739746
    8. '   ' → logprob: -12.258070945739746
    9. '(self' → logprob: -13.008070945739746
    10. '[self' → logprob: -13.258070945739746

Token 3185: '.N' (ID: 4439)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.18339921534061432
    2. '.data' → logprob: -2.683399200439453
    3. '._' → logprob: -2.933399200439453
    4. '.lines' → logprob: -3.808399200439453
    5. '.input' → logprob: -4.933399200439453
    6. 'vehicles' → logprob: -5.433399200439453
    7. '.inputs' → logprob: -6.308399200439453
    8. '.buffer' → logprob: -6.433399200439453
    9. 'data' → logprob: -6.558399200439453
    10. '.items' → logprob: -6.683399200439453

Token 3186: ':' (ID: 25)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.014044330455362797
    2. ' =' → logprob: -4.639044284820557
    3. '   ' → logprob: -6.014044284820557
    4. '       ' → logprob: -7.264044284820557
    5. '+=' → logprob: -7.389044284820557
    6. ':' → logprob: -9.139044761657715
    7. '=int' → logprob: -9.514044761657715
    8. ' +=' → logprob: -9.764044761657715
    9. '```' → logprob: -9.889044761657715
    10. '=
' → logprob: -10.014044761657715

Token 3187: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.0002181987656513229
    2. '0' → logprob: -9.250218391418457
    3. ' int' → logprob: -10.000218391418457
    4. 'None' → logprob: -10.500218391418457
    5. '[int' → logprob: -10.625218391418457
    6. '=int' → logprob: -11.375218391418457
    7. 'List' → logprob: -11.750218391418457
    8. '[]' → logprob: -13.250218391418457
    9. '
' → logprob: -14.125218391418457
    10. '...' → logprob: -14.500218391418457

Token 3188: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0009125363430939615
    2. ' =' → logprob: -7.000912666320801
    3. '=int' → logprob: -15.2509126663208
    4. '=None' → logprob: -15.2509126663208
    5. '=
' → logprob: -15.2509126663208
    6. '   ' → logprob: -15.3759126663208
    7. '       ' → logprob: -16.375911712646484
    8. ':' → logprob: -17.375911712646484
    9. '＝' → logprob: -17.375911712646484
    10. '=self' → logprob: -18.250911712646484

Token 3189: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.10344265401363373
    2. 'None' → logprob: -2.603442668914795
    3. 'int' → logprob: -3.728442668914795
    4. ' None' → logprob: -8.853442192077637
    5. ' ' → logprob: -10.353442192077637
    6. ' int' → logprob: -10.603442192077637
    7. '
' → logprob: -11.478442192077637
    8. '[]' → logprob: -12.728442192077637
    9. '   ' → logprob: -12.853442192077637
    10. '[int' → logprob: -13.228442192077637

Token 3190: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0010093499440699816
    2. 'int' → logprob: -7.126009464263916
    3. 'None' → logprob: -8.501008987426758
    4. ' ' → logprob: -14.501008987426758
    5. '
' → logprob: -14.876008987426758
    6. '...' → logprob: -15.126008987426758
    7. '[]' → logprob: -15.751008987426758
    8. ' None' → logprob: -17.001008987426758
    9. '[]
' → logprob: -17.001008987426758
    10. '   ' → logprob: -17.126008987426758

Token 3191: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3289715051651001
    2. '       ' → logprob: -1.3289715051651
    3. 'self' → logprob: -5.2039713859558105
    4. '=' → logprob: -5.4539713859558105
    5. 'def' → logprob: -6.0789713859558105
    6. '```' → logprob: -6.5789713859558105
    7. '
' → logprob: -7.0789713859558105
    8. ',' → logprob: -7.3289713859558105
    9. ' =' → logprob: -8.203971862792969
    10. ':' → logprob: -9.828971862792969

Token 3192: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.28252679109573364
    2. 'self' → logprob: -1.9075267314910889
    3. '
' → logprob: -2.907526731491089
    4. 'def' → logprob: -4.157526969909668
    5. '```' → logprob: -4.157526969909668
    6. '   ' → logprob: -5.532526969909668
    7. '	' → logprob: -6.157526969909668
    8. '	self' → logprob: -6.157526969909668
    9. ' self' → logprob: -6.782526969909668
    10. '	def' → logprob: -7.782526969909668

Token 3193: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.0221586711704731
    2. '       ' → logprob: -4.022158622741699
    3. 'def' → logprob: -6.397158622741699
    4. '	' → logprob: -6.522158622741699
    5. ' self' → logprob: -7.397158622741699
    6. '
' → logprob: -9.7721586227417
    7. '	self' → logprob: -10.0221586227417
    8. '\t' → logprob: -10.1471586227417
    9. '   ' → logprob: -10.3971586227417
    10. '\' → logprob: -10.8971586227417

Token 3194: '.ex' (ID: 3482)
  Prédit: '.data'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.data' → logprob: -1.1950494050979614
    2. 'data' → logprob: -1.4450494050979614
    3. '.ch' → logprob: -1.6950494050979614
    4. '.lines' → logprob: -2.695049285888672
    5. 'chunks' → logprob: -2.820049285888672
    6. '.inputs' → logprob: -3.070049285888672
    7. '.items' → logprob: -3.820049285888672
    8. '.' → logprob: -4.320049285888672
    9. '.entries' → logprob: -4.445049285888672
    10. '.input' → logprob: -4.820049285888672

Token 3195: 'ponents' (ID: 4331)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.28996211290359497
    2. 'ponents' → logprob: -1.7899620532989502
    3. 'pected' → logprob: -3.28996205329895
    4. 'pressions' → logprob: -3.91496205329895
    5. 'ponent' → logprob: -4.289962291717529
    6. 'ps' → logprob: -5.789962291717529
    7. 'amples' → logprob: -6.164962291717529
    8. '```' → logprob: -6.539962291717529
    9. '{
' → logprob: -6.664962291717529
    10. 'pression' → logprob: -6.914962291717529

Token 3196: ':' (ID: 25)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.12986603379249573
    2. '_' → logprob: -3.129866123199463
    3. '=' → logprob: -4.254866123199463
    4. '_list' → logprob: -4.379866123199463
    5. '_weights' → logprob: -4.879866123199463
    6. 's' → logprob: -5.004866123199463
    7. '_tokens' → logprob: -5.379866123199463
    8. '_values' → logprob: -5.379866123199463
    9. '_positions' → logprob: -5.379866123199463
    10. '   ' → logprob: -5.879866123199463

Token 3197: ' List' (ID: 2655)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.20185017585754395
    2. 'List' → logprob: -1.701850175857544
    3. ' []' → logprob: -7.951849937438965
    4. '[List' → logprob: -10.076849937438965
    5. '[]
' → logprob: -10.951849937438965
    6. ' List' → logprob: -11.201849937438965
    7. 'list' → logprob: -12.201849937438965
    8. '[]}' → logprob: -13.326849937438965
    9. '[]"' → logprob: -13.576849937438965
    10. '=[]' → logprob: -13.701849937438965

Token 3198: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.016831055283546448
    2. '=' → logprob: -4.766830921173096
    3. '[int' → logprob: -5.516830921173096
    4. 'Tuple' → logprob: -6.266830921173096
    5. '[List' → logprob: -6.766830921173096
    6. '[
' → logprob: -7.891830921173096
    7. ' =' → logprob: -8.266831398010254
    8. '[]' → logprob: -9.016831398010254
    9. '=[]' → logprob: -9.016831398010254
    10. '   ' → logprob: -9.391831398010254

Token 3199: 'Tuple' (ID: 40048)
  Prédit: 'Tuple'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Tuple' → logprob: -1.0280383548888494e-06
    2. ' Tuple' → logprob: -14.000000953674316
    3. '[' → logprob: -16.000001907348633
    4. 'tuple' → logprob: -17.000001907348633
    5. '   ' → logprob: -18.375001907348633
    6. 'int' → logprob: -20.750001907348633
    7. '
' → logprob: -20.875001907348633
    8. 'Tu' → logprob: -20.875001907348633
    9. '.Tuple' → logprob: -21.000001907348633
    10. '#' → logprob: -21.625001907348633

Token 3200: '[int' (ID: 40124)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.03808704763650894
    2. '[int' → logprob: -3.2880871295928955
    3. '(int' → logprob: -10.038086891174316
    4. ']int' → logprob: -14.288086891174316
    5. ' int' → logprob: -14.913086891174316
    6. '   ' → logprob: -15.038086891174316
    7. '
' → logprob: -15.663086891174316
    8. ',int' → logprob: -16.038087844848633
    9. '<int' → logprob: -16.288087844848633
    10. '```' → logprob: -16.788087844848633

Token 3201: ',int' (ID: 20909)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.07109390944242477
    2. ',int' → logprob: -2.696093797683716
    3. '[int' → logprob: -7.321094036102295
    4. 'int' → logprob: -7.821094036102295
    5. ' ,' → logprob: -10.196093559265137
    6. ',Integer' → logprob: -10.946093559265137
    7. '(int' → logprob: -11.446093559265137
    8. ',
' → logprob: -12.446093559265137
    9. ']int' → logprob: -12.446093559265137
    10. '   ' → logprob: -12.696093559265137

Token 3202: ']]' (ID: 8928)
  Prédit: ']]'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']]' → logprob: -7.624555291840807e-05
    2. ']]=' → logprob: -10.625076293945312
    3. ']]
' → logprob: -10.875076293945312
    4. ']' → logprob: -11.375076293945312
    5. ')]' → logprob: -11.500076293945312
    6. '']]' → logprob: -11.750076293945312
    7. ']]

' → logprob: -13.875076293945312
    8. ']]:
' → logprob: -14.000076293945312
    9. ']]]' → logprob: -14.250076293945312
    10. '"]]' → logprob: -15.625076293945312

Token 3203: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.011475004255771637
    2. ' =' → logprob: -4.511475086212158
    3. '       ' → logprob: -8.636474609375
    4. '   ' → logprob: -9.261474609375
    5. '=[]' → logprob: -9.761474609375
    6. '=
' → logprob: -10.261474609375
    7. '[' → logprob: -11.261474609375
    8. '=[]
' → logprob: -11.386474609375
    9. '[]' → logprob: -12.136474609375
    10. '=None' → logprob: -12.261474609375

Token 3204: ' []

' (ID: 32833)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -2.236549335066229e-05
    2. '[]
' → logprob: -10.875021934509277
    3. ' []' → logprob: -14.000021934509277
    4. '[])' → logprob: -14.125021934509277
    5. '[]"' → logprob: -14.375021934509277
    6. '[]

' → logprob: -15.000021934509277
    7. '[]}' → logprob: -15.125021934509277
    8. '=[]' → logprob: -15.250021934509277
    9. '   ' → logprob: -16.250022888183594
    10. '[]>' → logprob: -16.250022888183594

Token 3205: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0015867470065131783
    2. 'def' → logprob: -7.1265869140625
    3. '```' → logprob: -7.3765869140625
    4. '
' → logprob: -8.8765869140625
    5. '    
' → logprob: -11.3765869140625
    6. ' def' → logprob: -13.2515869140625
    7. '``' → logprob: -13.7515869140625
    8. '<|end|>' → logprob: -14.3765869140625
    9. '       ' → logprob: -14.7515869140625
    10. '        
' → logprob: -15.6265869140625

Token 3206: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.12869052588939667
    2. '   ' → logprob: -2.128690481185913
    3. ' def' → logprob: -6.503690719604492
    4. '```' → logprob: -8.253690719604492
    5. '
' → logprob: -13.503690719604492
    6. '	def' → logprob: -14.128690719604492
    7. '``' → logprob: -15.003690719604492
    8. 'Def' → logprob: -16.503690719604492
    9. '    
' → logprob: -16.753690719604492
    10. '       ' → logprob: -17.253690719604492

Token 3207: ' read' (ID: 1729)
  Prédit: 'read'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'read' → logprob: -0.005513823125511408
    2. 'parse' → logprob: -5.255513668060303
    3. 'process' → logprob: -8.505514144897461
    4. 'def' → logprob: -9.755514144897461
    5. 'load' → logprob: -11.005514144897461
    6. 'consume' → logprob: -13.380514144897461
    7. ' read' → logprob: -13.880514144897461
    8. 'receive' → logprob: -15.630514144897461
    9. 'set' → logprob: -15.755514144897461
    10. 'get' → logprob: -16.25551414489746

Token 3208: '_input' (ID: 12507)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'line' → logprob: -0.8003710508346558
    2. '_line' → logprob: -0.8003710508346558
    3. 'self' → logprob: -3.0503711700439453
    4. '(self' → logprob: -3.3003711700439453
    5. '_' → logprob: -5.550371170043945
    6. '()' → logprob: -5.675371170043945
    7. ' line' → logprob: -6.050371170043945
    8. '_next' → logprob: -6.675371170043945
    9. '(' → logprob: -6.925371170043945
    10. '_token' → logprob: -6.925371170043945

Token 3209: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.0001322639436693862
    2. 'self' → logprob: -9.62513256072998
    3. '(' → logprob: -10.75013256072998
    4. '   ' → logprob: -11.12513256072998
    5. '_line' → logprob: -11.12513256072998
    6. '       ' → logprob: -12.25013256072998
    7. 'from' → logprob: -12.62513256072998
    8. '(
' → logprob: -12.87513256072998
    9. '()' → logprob: -14.00013256072998
    10. '```' → logprob: -14.12513256072998

Token 3210: '):
' (ID: 1883)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.029750367626547813
    2. '()' → logprob: -4.654750347137451
    3. '(' → logprob: -5.029750347137451
    4. '():
' → logprob: -5.529750347137451
    5. '(
' → logprob: -5.779750347137451
    6. 'self' → logprob: -6.029750347137451
    7. ')' → logprob: -6.904750347137451
    8. '())' → logprob: -7.279750347137451
    9. '_line' → logprob: -7.779750347137451
    10. '():' → logprob: -8.02975082397461

Token 3211: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0077340384013950825
    2. '```' → logprob: -4.8827338218688965
    3. '	' → logprob: -9.882734298706055
    4. 'self' → logprob: -10.257734298706055
    5. '``' → logprob: -12.132734298706055
    6. '
' → logprob: -12.132734298706055
    7. 'def' → logprob: -12.257734298706055
    8. '   ' → logprob: -12.507734298706055
    9. '()' → logprob: -12.632734298706055
    10. 'for' → logprob: -12.757734298706055

Token 3212: ' self' (ID: 1051)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.26541656255722046
    2. '```' → logprob: -1.6404166221618652
    3. 'self' (adapté à ' self') → logprob: -3.7654166221618652
    4. 'import' → logprob: -4.265416622161865
    5. 'for' → logprob: -7.265416622161865
    6. '``' → logprob: -7.515416622161865
    7. 'lines' → logprob: -8.265416145324707
    8. 'line' → logprob: -9.140416145324707
    9. '
' → logprob: -9.140416145324707
    10. '	' → logprob: -9.640416145324707

Token 3213: '.N' (ID: 4439)
  Prédit: '.N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.N' → logprob: -0.043563585728406906
    2. '.' → logprob: -3.2935636043548584
    3. '=' → logprob: -6.293563365936279
    4. 'N' → logprob: -6.793563365936279
    5. ' =' → logprob: -7.543563365936279
    6. 'import' → logprob: -7.918563365936279
    7. '.=' → logprob: -7.918563365936279
    8. 'def' → logprob: -8.293563842773438
    9. '=N' → logprob: -8.418563842773438
    10. '.
' → logprob: -8.918563842773438

Token 3214: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.3134628236293793
    2. ' =' → logprob: -1.3134628534317017
    3. '=int' → logprob: -8.81346321105957
    4. ' +=' → logprob: -10.93846321105957
    5. '+=' → logprob: -11.06346321105957
    6. '=input' → logprob: -12.56346321105957
    7. '   ' → logprob: -12.81346321105957
    8. ',' → logprob: -12.81346321105957
    9. '       ' → logprob: -12.93846321105957
    10. '    ' → logprob: -14.06346321105957

Token 3215: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -7.493430894101039e-05
    2. ' int' → logprob: -9.500075340270996
    3. '(int' → logprob: -20.87507438659668
    4. '[int' → logprob: -21.00007438659668
    5. '
' → logprob: -21.50007438659668
    6. '	int' → logprob: -21.62507438659668
    7. '=int' → logprob: -22.00007438659668
    8. '   ' → logprob: -22.12507438659668
    9. '```' → logprob: -22.25007438659668
    10. '<int' → logprob: -23.12507438659668

Token 3216: '(input' (ID: 10054)
  Prédit: '(input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.0009055070113390684
    2. 'input' → logprob: -7.500905513763428
    3. '(' → logprob: -8.00090503692627
    4. '()' → logprob: -11.12590503692627
    5. '(
' → logprob: -13.12590503692627
    6. ' input' → logprob: -15.62590503692627
    7. '=input' → logprob: -15.75090503692627
    8. '()
' → logprob: -16.625905990600586
    9. '('' → logprob: -16.750905990600586
    10. '(int' → logprob: -17.750905990600586

Token 3217: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.03180902078747749
    2. '()' → logprob: -3.781809091567993
    3. '())
' → logprob: -4.781808853149414
    4. '().' → logprob: -9.156808853149414
    5. '()
' → logprob: -10.656808853149414
    6. ')' → logprob: -11.781808853149414
    7. '(' → logprob: -12.281808853149414
    8. ' ())' → logprob: -13.656808853149414
    9. '()`' → logprob: -13.781808853149414
    10. '())
' → logprob: -14.156808853149414

Token 3218: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.07998490333557129
    2. 'for' → logprob: -2.5799849033355713
    3. '```' → logprob: -6.954984664916992
    4. ' for' → logprob: -9.829984664916992
    5. '
' → logprob: -10.204984664916992
    6. '   ' → logprob: -10.704984664916992
    7. '``' → logprob: -11.704984664916992
    8. '	' → logprob: -11.954984664916992
    9. 'self' → logprob: -12.454984664916992
    10. 'def' → logprob: -13.079984664916992

Token 3219: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.018188927322626114
    2. '       ' → logprob: -4.018188953399658
    3. ' for' → logprob: -10.5181884765625
    4. 'self' → logprob: -11.6431884765625
    5. '```' → logprob: -12.7681884765625
    6. '   ' → logprob: -15.6431884765625
    7. '	for' → logprob: -16.5181884765625
    8. '
' → logprob: -16.7681884765625
    9. '``' → logprob: -18.6431884765625
    10. 'while' → logprob: -19.1431884765625

Token 3220: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.0005701907211914659
    2. ' _' → logprob: -7.500570297241211
    3. '_
' → logprob: -11.875570297241211
    4. '_i' → logprob: -12.125570297241211
    5. '_range' → logprob: -13.625570297241211
    6. 'i' → logprob: -14.125570297241211
    7. '
' → logprob: -14.625570297241211
    8. '_line' → logprob: -14.625570297241211
    9. ' ' → logprob: -14.625570297241211
    10. ' i' → logprob: -14.750570297241211

Token 3221: ' in' (ID: 306)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.00091217877343297
    2. ' range' → logprob: -7.000912189483643
    3. '_' → logprob: -15.125911712646484
    4. '_range' → logprob: -15.250911712646484
    5. '(range' → logprob: -17.000911712646484
    6. '   ' → logprob: -17.500911712646484
    7. 'self' → logprob: -17.625911712646484
    8. ' in' → logprob: -17.875911712646484
    9. ' ' → logprob: -18.000911712646484
    10. '```' → logprob: -18.125911712646484

Token 3222: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -2.7968066206085496e-05
    2. ' range' → logprob: -10.500027656555176
    3. '
' → logprob: -15.250027656555176
    4. 'self' → logprob: -16.625028610229492
    5. '	range' → logprob: -19.250028610229492
    6. '[' → logprob: -19.375028610229492
    7. '_range' → logprob: -19.500028610229492
    8. '(range' → logprob: -19.625028610229492
    9. '```' → logprob: -19.625028610229492
    10. ' ' → logprob: -20.375028610229492

Token 3223: '(self' (ID: 2402)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.3020615577697754
    2. '():' → logprob: -2.5520615577697754
    3. '():
' → logprob: -2.6770615577697754
    4. '(int' → logprob: -3.6770615577697754
    5. '()' → logprob: -3.8020615577697754
    6. '(self' → logprob: -4.052061557769775
    7. 'self' → logprob: -4.302061557769775
    8. '       ' → logprob: -4.427061557769775
    9. '1' → logprob: -5.302061557769775
    10. '   ' → logprob: -5.677061557769775

Token 3224: '.N' (ID: 4439)
  Prédit: '.N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.N' → logprob: -0.08075537532567978
    2. 'N' → logprob: -3.0807554721832275
    3. '.' → logprob: -4.580755233764648
    4. '):
' → logprob: -4.830755233764648
    5. '       ' → logprob: -5.455755233764648
    6. '<N' → logprob: -6.330755233764648
    7. '   ' → logprob: -6.455755233764648
    8. ')' → logprob: -7.080755233764648
    9. '):' → logprob: -7.205755233764648
    10. ' N' → logprob: -7.205755233764648

Token 3225: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.1839524507522583
    2. '():
' → logprob: -2.3089523315429688
    3. '           ' → logprob: -3.8089523315429688
    4. '):' → logprob: -4.183952331542969
    5. '       ' → logprob: -4.433952331542969
    6. ':
' → logprob: -5.058952331542969
    7. ':' → logprob: -5.558952331542969
    8. '()):
' → logprob: -5.558952331542969
    9. ',' → logprob: -6.183952331542969
    10. '```' → logprob: -6.558952331542969

Token 3226: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0003863438032567501
    2. '```' → logprob: -8.625386238098145
    3. 'a' → logprob: -8.750386238098145
    4. 'line' → logprob: -10.875386238098145
    5. ' line' → logprob: -11.875386238098145
    6. '		' → logprob: -12.375386238098145
    7. 'input' → logprob: -13.000386238098145
    8. 't' → logprob: -13.125386238098145
    9. '(a' → logprob: -13.250386238098145
    10. '   ' → logprob: -13.375386238098145

Token 3227: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' (adapté à ' a') → logprob: -0.00025788258062675595
    2. 'line' → logprob: -8.37525749206543
    3. ' a' → logprob: -10.87525749206543
    4. '           ' → logprob: -12.25025749206543
    5. ' line' → logprob: -13.12525749206543
    6. '               ' → logprob: -14.37525749206543
    7. 'ai' → logprob: -14.62525749206543
    8. 'x' → logprob: -15.12525749206543
    9. '	a' → logprob: -16.87525749206543
    10. '(a' → logprob: -17.00025749206543

Token 3228: '_i' (ID: 10853)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.3859025835990906
    2. '_i' → logprob: -1.3859026432037354
    3. '_,' → logprob: -2.7609026432037354
    4. ',_' → logprob: -5.635902404785156
    5. ' ,' → logprob: -6.760902404785156
    6. 'i' → logprob: -7.135902404785156
    7. '_' → logprob: -7.885902404785156
    8. '_j' → logprob: -8.135902404785156
    9. ',i' → logprob: -8.260902404785156
    10. ',b' → logprob: -9.260902404785156

Token 3229: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.02096807397902012
    2. ',b' → logprob: -3.895967960357666
    3. ' ,' → logprob: -7.895967960357666
    4. 'b' → logprob: -10.770968437194824
    5. '_,' → logprob: -11.645968437194824
    6. ',a' → logprob: -12.395968437194824
    7. ',int' → logprob: -12.645968437194824
    8. ',p' → logprob: -12.895968437194824
    9. ',s' → logprob: -13.020968437194824
    10. ',k' → logprob: -13.270968437194824

Token 3230: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.0619756355881691
    2. ' b' → logprob: -2.8119757175445557
    3. ' ' → logprob: -13.436975479125977
    4. ',b' → logprob: -13.561975479125977
    5. ' ' → logprob: -13.811975479125977
    6. '<|end|>' → logprob: -13.811975479125977
    7. 'space' → logprob: -14.186975479125977
    8. '```' → logprob: -14.561975479125977
    9. 's' → logprob: -14.936975479125977
    10. '=' → logprob: -15.186975479125977

Token 3231: '_i' (ID: 10853)
  Prédit: '_i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_i' → logprob: -0.24205343425273895
    2. '_' → logprob: -1.7420533895492554
    3. '_,' → logprob: -3.617053508758545
    4. ',' → logprob: -4.492053508758545
    5. ')' → logprob: -7.992053508758545
    6. 'i' → logprob: -8.367053031921387
    7. '_
' → logprob: -8.492053031921387
    8. ',_' → logprob: -8.617053031921387
    9. ' _' → logprob: -8.742053031921387
    10. '<|end|>' → logprob: -9.367053031921387

Token 3232: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.1006040871143341
    2. ' =' → logprob: -2.3506040573120117
    3. ',' → logprob: -7.850604057312012
    4. '=input' → logprob: -12.225604057312012
    5. '=
' → logprob: -14.100604057312012
    6. '=int' → logprob: -14.225604057312012
    7. '=line' → logprob: -15.225604057312012
    8. ',input' → logprob: -15.350604057312012
    9. '＝' → logprob: -15.725604057312012
    10. ' ,' → logprob: -15.850604057312012

Token 3233: ' map' (ID: 4014)
  Prédit: 'map'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'map' → logprob: -0.011048054322600365
    2. ' map' → logprob: -4.511047840118408
    3. '[' → logprob: -16.01104736328125
    4. '	map' → logprob: -16.26104736328125
    5. '
' → logprob: -16.63604736328125
    6. '(map' → logprob: -17.26104736328125
    7. '_map' → logprob: -18.51104736328125
    8. 'm' → logprob: -18.63604736328125
    9. 'list' → logprob: -19.26104736328125
    10. 'tuple' → logprob: -19.51104736328125

Token 3234: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.06198493763804436
    2. 'int' → logprob: -2.8119850158691406
    3. 'input' → logprob: -11.81198501586914
    4. ' int' → logprob: -12.93698501586914
    5. '(str' → logprob: -13.31198501586914
    6. '```' → logprob: -13.31198501586914
    7. '(' → logprob: -13.93698501586914
    8. '<int' → logprob: -14.18698501586914
    9. '(input' → logprob: -14.31198501586914
    10. 'str' → logprob: -14.31198501586914

Token 3235: ',' (ID: 11)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.15574415028095245
    2. ',input' → logprob: -2.5307440757751465
    3. 'input' → logprob: -3.2807440757751465
    4. ',' → logprob: -3.7807440757751465
    5. '           ' → logprob: -6.4057440757751465
    6. '   ' → logprob: -7.2807440757751465
    7. '(' → logprob: -7.9057440757751465
    8. '```' → logprob: -8.030744552612305
    9. '               ' → logprob: -8.155744552612305
    10. '=input' → logprob: -8.280744552612305

Token 3236: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -2.7610454708337784e-05
    2. ' input' → logprob: -10.500027656555176
    3. '_input' → logprob: -20.12502670288086
    4. '(input' → logprob: -21.50002670288086
    5. '<input' → logprob: -22.00002670288086
    6. 'Input' → logprob: -22.00002670288086
    7. '=input' → logprob: -22.50002670288086
    8. '	input' → logprob: -23.12502670288086
    9. '   ' → logprob: -23.50002670288086
    10. 'inputs' → logprob: -24.37502670288086

Token 3237: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.0008463177946396172
    2. '()' → logprob: -7.2508463859558105
    3. '()
' → logprob: -9.625845909118652
    4. '())' → logprob: -10.000845909118652
    5. '()[' → logprob: -11.625845909118652
    6. '(' → logprob: -12.375845909118652
    7. 'split' → logprob: -13.000845909118652
    8. '().__' → logprob: -13.250845909118652
    9. '().
' → logprob: -13.625845909118652
    10. '()]' → logprob: -14.000845909118652

Token 3238: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -1.8074162653647363e-05
    2. 'strip' → logprob: -11.000018119812012
    3. 'rstrip' → logprob: -14.875018119812012
    4. '(split' → logprob: -15.125018119812012
    5. ' split' → logprob: -15.250018119812012
    6. '().' → logprob: -15.375018119812012
    7. '_split' → logprob: -16.750017166137695
    8. 'spl' → logprob: -17.375017166137695
    9. '.split' → logprob: -17.500017166137695
    10. 'plit' → logprob: -18.375017166137695

Token 3239: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.16187472641468048
    2. '())
' → logprob: -1.911874771118164
    3. ')' → logprob: -7.161874771118164
    4. '()' → logprob: -7.161874771118164
    5. ')
' → logprob: -10.286874771118164
    6. '())
' → logprob: -10.536874771118164
    7. '()
' → logprob: -11.411874771118164
    8. '(' → logprob: -11.786874771118164
    9. '('' → logprob: -12.661874771118164
    10. '()))' → logprob: -12.661874771118164

Token 3240: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00012964145571459085
    2. '            
' → logprob: -9.750129699707031
    3. '       ' → logprob: -10.750129699707031
    4. '               ' → logprob: -11.000129699707031
    5. 'self' → logprob: -11.375129699707031
    6. '```' → logprob: -11.875129699707031
    7. '
' → logprob: -12.875129699707031
    8. '<|end|>' → logprob: -13.000129699707031
    9. '          ' → logprob: -13.500129699707031
    10. '	       ' → logprob: -13.625129699707031

Token 3241: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.5768555998802185
    2. '           ' → logprob: -0.8268555998802185
    3. '       ' → logprob: -7.076855659484863
    4. ' self' → logprob: -9.951855659484863
    5. '               ' → logprob: -11.076855659484863
    6. '   ' → logprob: -11.951855659484863
    7. '```' → logprob: -14.326855659484863
    8. '
' → logprob: -14.826855659484863
    9. '(self' → logprob: -15.701855659484863
    10. '		' → logprob: -15.826855659484863

Token 3242: '.ex' (ID: 3482)
  Prédit: '.ex'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.ex' → logprob: -0.00027111053350381553
    2. 'ex' → logprob: -8.25027084350586
    3. '.context' → logprob: -11.87527084350586
    4. '```' → logprob: -14.37527084350586
    5. ' ex' → logprob: -14.87527084350586
    6. '.e' → logprob: -15.12527084350586
    7. '_ex' → logprob: -15.37527084350586
    8. 'context' → logprob: -16.12527084350586
    9. '.con' → logprob: -16.25027084350586
    10. '       ' → logprob: -16.25027084350586

Token 3243: 'ponents' (ID: 4331)
  Prédit: 'ponents'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ponents' → logprob: -0.0035397247411310673
    2. 'x' → logprob: -6.503539562225342
    3. 'ex' → logprob: -6.878539562225342
    4. '_i' → logprob: -7.878539562225342
    5. '_ex' → logprob: -8.3785400390625
    6. 'ponent' → logprob: -9.0035400390625
    7. '       ' → logprob: -9.2535400390625
    8. 'i' → logprob: -9.8785400390625
    9. '           ' → logprob: -10.2535400390625
    10. '```' → logprob: -10.6285400390625

Token 3244: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.001030903891660273
    2. '.' → logprob: -7.251030921936035
    3. '.app' → logprob: -8.251030921936035
    4. 'append' → logprob: -10.626030921936035
    5. '.extend' → logprob: -11.751030921936035
    6. '.ap' → logprob: -12.251030921936035
    7. ' .' → logprob: -12.251030921936035
    8. '           ' → logprob: -12.251030921936035
    9. '.setdefault' → logprob: -13.001030921936035
    10. 'app' → logprob: -13.251030921936035

Token 3245: '((' (ID: 2054)
  Prédit: '(a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.00013965457037556916
    2. ' (' → logprob: -9.125139236450195
    3. '(' → logprob: -10.500139236450195
    4. '((' → logprob: -13.250139236450195
    5. '   ' → logprob: -13.750139236450195
    6. '(ai' → logprob: -16.000139236450195
    7. '(A' → logprob: -17.000139236450195
    8. '(an' → logprob: -17.125139236450195
    9. '(
' → logprob: -17.125139236450195
    10. '           ' → logprob: -17.875139236450195

Token 3246: 'a' (ID: 64)
  Prédit: 'a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: 0.0
    2. ' a' → logprob: -17.5
    3. '           ' → logprob: -19.625
    4. '   ' → logprob: -20.375
    5. ')a' → logprob: -20.5
    6. '	a' → logprob: -20.875
    7. '
' → logprob: -21.5
    8. '       ' → logprob: -22.875
    9. '_a' → logprob: -23.0
    10. '               ' → logprob: -23.25

Token 3247: '_i' (ID: 10853)
  Prédit: '_i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_i' → logprob: -0.0067301723174750805
    2. 'i' → logprob: -5.006730079650879
    3. ')' → logprob: -12.881730079650879
    4. 'a' → logprob: -13.006730079650879
    5. '[i' → logprob: -13.131730079650879
    6. ')_' → logprob: -13.256730079650879
    7. '_' → logprob: -14.256730079650879
    8. '[' → logprob: -14.256730079650879
    9. '_
' → logprob: -14.381730079650879
    10. '_,' → logprob: -14.381730079650879

Token 3248: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.018191847950220108
    2. ',b' → logprob: -4.018191814422607
    3. ' ,' → logprob: -10.768192291259766
    4. '```' → logprob: -12.643192291259766
    5. ',
' → logprob: -12.768192291259766
    6. ',p' → logprob: -13.018192291259766
    7. '       ' → logprob: -13.143192291259766
    8. '           ' → logprob: -13.143192291259766
    9. '_,' → logprob: -13.393192291259766
    10. ',a' → logprob: -13.768192291259766

Token 3249: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -9.615255839889869e-05
    2. ' b' → logprob: -9.250096321105957
    3. '   ' → logprob: -19.00009536743164
    4. ' ' → logprob: -19.37509536743164
    5. '	b' → logprob: -19.50009536743164
    6. '       ' → logprob: -20.00009536743164
    7. '    ' → logprob: -20.75009536743164
    8. ')b' → logprob: -21.00009536743164
    9. '
' → logprob: -21.37509536743164
    10. '     ' → logprob: -21.50009536743164

Token 3250: '_i' (ID: 10853)
  Prédit: '_i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_i' → logprob: -0.0003360582049936056
    2. 'i' → logprob: -8.000335693359375
    3. '_j' → logprob: -14.750335693359375
    4. ')' → logprob: -16.625335693359375
    5. ')_' → logprob: -17.000335693359375
    6. 'I' → logprob: -17.125335693359375
    7. '   ' → logprob: -17.875335693359375
    8. '```' → logprob: -18.250335693359375
    9. '_
' → logprob: -18.750335693359375
    10. '))' → logprob: -19.500335693359375

Token 3251: '))

' (ID: 9746)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '))' → logprob: -0.003148842602968216
    2. '           ' → logprob: -6.003149032592773
    3. '))
' → logprob: -8.003149032592773
    4. ')' → logprob: -8.128149032592773
    5. '               ' → logprob: -10.753149032592773
    6. '       ' → logprob: -11.253149032592773
    7. ')))' → logprob: -12.753149032592773
    8. '                   ' → logprob: -13.753149032592773
    9. '()))' → logprob: -14.003149032592773
    10. '   ' → logprob: -14.128149032592773

Token 3252: 'class' (ID: 1444)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.056810617446899414
    2. 'def' → logprob: -3.0568106174468994
    3. '
' → logprob: -5.18181037902832
    4. '```' → logprob: -6.68181037902832
    5. '<|end|>' → logprob: -8.05681037902832
    6. 'class' → logprob: -8.18181037902832
    7. 'import' → logprob: -8.68181037902832
    8. ' def' → logprob: -8.93181037902832
    9. '       ' → logprob: -9.05681037902832
    10. '    
' → logprob: -9.18181037902832

Token 3253: ' Alloy' (ID: 115477)
  Prédit: 'Solution'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Solution' → logprob: -0.5847891569137573
    2. 'All' → logprob: -1.7097891569137573
    3. 'Main' → logprob: -1.7097891569137573
    4. 'Output' → logprob: -3.209789276123047
    5. 'Solver' → logprob: -3.334789276123047
    6. 'Re' → logprob: -5.959789276123047
    7. 'Processor' → logprob: -6.584789276123047
    8. 'Problem' → logprob: -7.959789276123047
    9. 'main' → logprob: -8.459789276123047
    10. 'Runner' → logprob: -9.209789276123047

Token 3254: 'Re' (ID: 720)
  Prédit: 'Re'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Re' → logprob: -0.00013738969573751092
    2. 'De' → logprob: -9.000137329101562
    3. 'Recycler' → logprob: -12.875137329101562
    4. '
' → logprob: -13.000137329101562
    5. 'Chunk' → logprob: -13.000137329101562
    6. 'Processing' → logprob: -13.000137329101562
    7. 'Processor' → logprob: -14.375137329101562
    8. 'Reducer' → logprob: -14.750137329101562
    9. 'Recovery' → logprob: -14.750137329101562
    10. 'Recycle' → logprob: -14.750137329101562

Token 3255: 'cycling' (ID: 72499)
  Prédit: 'cycling'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cycling' → logprob: -3.810037742368877e-05
    2. 'cycle' → logprob: -11.000038146972656
    3. 'cy' → logprob: -11.375038146972656
    4. 'cycler' → logprob: -11.875038146972656
    5. 'c' → logprob: -13.250038146972656
    6. 'cycl' → logprob: -14.375038146972656
    7. 'ycl' → logprob: -15.125038146972656
    8. 'cycled' → logprob: -15.875038146972656
    9. 'cycles' → logprob: -17.000038146972656
    10. 'cyclerview' → logprob: -18.625038146972656

Token 3256: 'Solver' (ID: 70484)
  Prédit: 'System'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'System' → logprob: -6.694766489090398e-05
    2. ':
' → logprob: -10.250066757202148
    3. ':' → logprob: -10.875066757202148
    4. 'Processor' → logprob: -13.250066757202148
    5. '{
' → logprob: -13.500066757202148
    6. '```' → logprob: -13.500066757202148
    7. 'Solver' → logprob: -13.625066757202148
    8. '{' → logprob: -13.750066757202148
    9. ' System' → logprob: -13.875066757202148
    10. '(
' → logprob: -13.875066757202148

Token 3257: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0338406041264534
    2. ':
' → logprob: -3.4088406562805176
    3. '```' → logprob: -9.40884017944336
    4. '<|end|>' → logprob: -10.78384017944336
    5. '):
' → logprob: -11.03384017944336
    6. '(' → logprob: -11.03384017944336
    7. '):' → logprob: -11.53384017944336
    8. '   ' → logprob: -11.78384017944336
    9. ':

' → logprob: -12.15884017944336
    10. '>:' → logprob: -12.28384017944336

Token 3258: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3189835846424103
    2. 'class' → logprob: -1.318983554840088
    3. '```' → logprob: -5.193983554840088
    4. ':
' → logprob: -10.193984031677246
    5. 'def' → logprob: -10.318984031677246
    6. ':' → logprob: -10.443984031677246
    7. '``' → logprob: -11.318984031677246
    8. '
' → logprob: -11.443984031677246
    9. '    
' → logprob: -12.068984031677246
    10. '(' → logprob: -12.318984031677246

Token 3259: ' """
' (ID: 7037)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.22804465889930725
    2. ':
' → logprob: -2.3530447483062744
    3. 'class' → logprob: -2.7280447483062744
    4. ':' → logprob: -3.2280447483062744
    5. 'def' → logprob: -6.228044509887695
    6. '```' → logprob: -6.478044509887695
    7. '
' → logprob: -8.728044509887695
    8. '(
' → logprob: -9.728044509887695
    9. '(' → logprob: -10.228044509887695
    10. '    
' → logprob: -10.478044509887695

Token 3260: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.02285907045006752
    2. 'class' → logprob: -4.1478590965271
    3. ':
' → logprob: -5.7728590965271
    4. '```' → logprob: -6.0228590965271
    5. '
' → logprob: -7.0228590965271
    6. 'def' → logprob: -8.397858619689941
    7. '``' → logprob: -9.647858619689941
    8. '):
' → logprob: -10.397858619689941
    9. ':' → logprob: -10.647858619689941
    10. '    
' → logprob: -10.772858619689941

Token 3261: ' Solution' (ID: 20858)
  Prédit: 'class'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'class' → logprob: -0.014352714642882347
    2. '   ' → logprob: -4.264352798461914
    3. '```' → logprob: -8.764352798461914
    4. '
' → logprob: -10.639352798461914
    5. '``' → logprob: -12.514352798461914
    6. 'def' → logprob: -12.514352798461914
    7. '    
' → logprob: -14.264352798461914
    8. 'from' → logprob: -14.514352798461914
    9. ' class' → logprob: -15.014352798461914
    10. 'import' → logprob: -17.014352798461914

Token 3262: ' solver' (ID: 63271)
  Prédit: ':
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.5471743941307068
    2. '   ' → logprob: -1.1721744537353516
    3. ':' → logprob: -2.9221744537353516
    4. 'class' → logprob: -2.9221744537353516
    5. '```' → logprob: -6.547174453735352
    6. ':

' → logprob: -6.672174453735352
    7. '
' → logprob: -7.797174453735352
    8. '(
' → logprob: -7.922174453735352
    9. '(' → logprob: -8.422174453735352
    10. '():
' → logprob: -9.297174453735352

Token 3263: ' operating' (ID: 14359)
  Prédit: ':
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.1713351011276245
    2. ':' → logprob: -2.546335220336914
    3. '   ' → logprob: -2.796335220336914
    4. '```' → logprob: -4.921335220336914
    5. '(All' → logprob: -5.046335220336914
    6. 'class' → logprob: -6.171335220336914
    7. '):
' → logprob: -6.796335220336914
    8. ':

' → logprob: -8.296335220336914
    9. '
' → logprob: -8.421335220336914
    10. '(' → logprob: -8.671335220336914

Token 3264: ' on' (ID: 402)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.07000856846570969
    2. '
' → logprob: -3.5700085163116455
    3. '```' → logprob: -3.6950085163116455
    4. 'class' → logprob: -5.445008754730225
    5. '``' → logprob: -6.070008754730225
    6. ':
' → logprob: -6.445008754730225
    7. '):
' → logprob: -6.445008754730225
    8. ':' → logprob: -6.945008754730225
    9. '<|end|>' → logprob: -7.070008754730225
    10. '    
' → logprob: -7.195008754730225

Token 3265: ' ex' (ID: 513)
  Prédit: 'Input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Input' → logprob: -1.119684100151062
    2. 'All' → logprob: -1.869684100151062
    3. 'List' → logprob: -1.994684100151062
    4. '   ' → logprob: -1.994684100151062
    5. '
' → logprob: -2.7446842193603516
    6. '):
' → logprob: -2.8696842193603516
    7. 'ex' → logprob: -3.4946842193603516
    8. 'self' → logprob: -3.7446842193603516
    9. ')' → logprob: -4.119684219360352
    10. 'class' → logprob: -4.244684219360352

Token 3266: 'ponents' (ID: 4331)
  Prédit: 'ponents'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ponents' → logprob: -0.35259923338890076
    2. 'class' → logprob: -2.1025991439819336
    3. 'p' → logprob: -2.4775991439819336
    4. '```' → logprob: -3.2275991439819336
    5. 'ponent' → logprob: -3.7275991439819336
    6. 't' → logprob: -4.727599143981934
    7. '{
' → logprob: -5.727599143981934
    8. 'c' → logprob: -6.227599143981934
    9. 'plements' → logprob: -6.352599143981934
    10. 'x' → logprob: -6.352599143981934

Token 3267: ' to' (ID: 316)
  Prédit: ':
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':
' → logprob: -1.0426923036575317
    2. '):
' → logprob: -1.4176923036575317
    3. '   ' → logprob: -1.6676923036575317
    4. ':' → logprob: -2.042692184448242
    5. '):' → logprob: -2.792692184448242
    6. '```' → logprob: -4.417692184448242
    7. 'class' → logprob: -4.917692184448242
    8. 'Unit' → logprob: -6.167692184448242
    9. ')' → logprob: -7.042692184448242
    10. '
' → logprob: -7.667692184448242

Token 3268: ' minimize' (ID: 41776)
  Prédit: 'solve'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'solve' → logprob: -0.20860087871551514
    2. 'def' → logprob: -2.8336009979248047
    3. 'process' → logprob: -2.8336009979248047
    4. 'run' → logprob: -3.5836009979248047
    5. 'compute' → logprob: -4.208600997924805
    6. 'find' → logprob: -5.208600997924805
    7. '```' → logprob: -5.208600997924805
    8. 'complete' → logprob: -5.958600997924805
    9. '   ' → logprob: -5.958600997924805
    10. 'class' → logprob: -6.333600997924805

Token 3269: ' chunk' (ID: 23958)
  Prédit: 'chunk'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'chunk' → logprob: -0.3077072501182556
    2. 'chunks' → logprob: -1.9327073097229004
    3. 'the' → logprob: -2.6827073097229004
    4. '   ' → logprob: -4.5577073097229
    5. '_chunk' → logprob: -4.6827073097229
    6. 'number' → logprob: -4.9327073097229
    7. '```' → logprob: -5.0577073097229
    8. 'token' → logprob: -5.3077073097229
    9. '
' → logprob: -5.8077073097229
    10. ' chunk' → logprob: -5.8077073097229

Token 3270: ' count' (ID: 3605)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.19217269122600555
    2. '   ' → logprob: -2.0671727657318115
    3. '_count' → logprob: -3.3171727657318115
    4. ' count' → logprob: -5.317172527313232
    5. 'number' → logprob: -6.067172527313232
    6. 'def' → logprob: -6.442172527313232
    7. 'counts' → logprob: -7.067172527313232
    8. 's' → logprob: -7.567172527313232
    9. '
' → logprob: -7.817172527313232
    10. ' ' → logprob: -8.19217300415039

Token 3271: '.
' (ID: 558)
  Prédit: ':
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.6343878507614136
    2. ':' → logprob: -1.1343878507614136
    3. '   ' → logprob: -2.009387969970703
    4. '):
' → logprob: -5.009387969970703
    5. '```' → logprob: -5.634387969970703
    6. '{' → logprob: -6.259387969970703
    7. '{
' → logprob: -7.384387969970703
    8. '):' → logprob: -7.759387969970703
    9. '<|end|>' → logprob: -8.759387969970703
    10. ':

' → logprob: -8.759387969970703

Token 3272: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.11351979523897171
    2. '
' → logprob: -2.4885199069976807
    3. '    
' → logprob: -4.363519668579102
    4. '```' → logprob: -4.863519668579102
    5. 'class' → logprob: -5.613519668579102
    6. '``' → logprob: -9.863519668579102
    7. ' 
' → logprob: -10.238519668579102
    8. '(
' → logprob: -10.863519668579102
    9. '  
' → logprob: -11.238519668579102
    10. '        
' → logprob: -11.363519668579102

Token 3273: ' """

' (ID: 28800)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.010752556845545769
    2. '
' → logprob: -4.8857526779174805
    3. '```' → logprob: -6.1357526779174805
    4. '    
' → logprob: -7.3857526779174805
    5. 'class' → logprob: -8.38575267791748
    6. 'def' → logprob: -9.88575267791748
    7. ':' → logprob: -10.51075267791748
    8. ':
' → logprob: -10.51075267791748
    9. '``' → logprob: -11.76075267791748
    10. '  
' → logprob: -12.63575267791748

Token 3274: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.02544311061501503
    2. '```' → logprob: -4.025443077087402
    3. 'class' → logprob: -5.275443077087402
    4. 'def' → logprob: -6.650443077087402
    5. '
' → logprob: -7.650443077087402
    6. ' def' → logprob: -8.275443077087402
    7. '    
' → logprob: -9.400443077087402
    8. '``' → logprob: -10.775443077087402
    9. ' class' → logprob: -11.275443077087402
    10. '    ' → logprob: -12.400443077087402

Token 3275: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -9.531813702778891e-05
    2. '__' → logprob: -10.12509536743164
    3. '   ' → logprob: -10.75009536743164
    4. ' def' → logprob: -11.12509536743164
    5. '```' → logprob: -11.25009536743164
    6. '
' → logprob: -12.75009536743164
    7. 'class' → logprob: -12.75009536743164
    8. '``' → logprob: -16.12509536743164
    9. '_def' → logprob: -17.75009536743164
    10. '@' → logprob: -18.37509536743164

Token 3276: ' __' (ID: 2516)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.7100121974945068
    2. 'init' → logprob: -0.7100121974945068
    3. 'def' → logprob: -4.460012435913086
    4. 'solve' → logprob: -5.960012435913086
    5. '_init' → logprob: -6.585012435913086
    6. ' __' → logprob: -6.960012435913086
    7. 'run' → logprob: -8.710012435913086
    8. 'compute' → logprob: -10.335012435913086
    9. ' def' → logprob: -10.710012435913086
    10. 'process' → logprob: -11.835012435913086

Token 3277: 'init' (ID: 3287)
  Prédit: 'init'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: -1.7432603272027336e-06
    2. 'call' → logprob: -14.125001907348633
    3. '_init' → logprob: -14.500001907348633
    4. 'next' → logprob: -15.875001907348633
    5. ' init' → logprob: -16.000001907348633
    6. '```' → logprob: -16.500001907348633
    7. '__' → logprob: -17.625001907348633
    8. 'def' → logprob: -18.250001907348633
    9. 'predict' → logprob: -18.375001907348633
    10. 'token' → logprob: -18.625001907348633

Token 3278: '__(' (ID: 8241)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.2993297874927521
    2. '__(' → logprob: -1.4243297576904297
    3. '   ' → logprob: -4.54932975769043
    4. '__' → logprob: -5.54932975769043
    5. '__(
' → logprob: -6.92432975769043
    6. '       ' → logprob: -7.29932975769043
    7. '(' → logprob: -7.42432975769043
    8. 'self' → logprob: -7.92432975769043
    9. '
' → logprob: -8.04932975769043
    10. '(
' → logprob: -8.79932975769043

Token 3279: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.001675302512012422
    2. '):
' → logprob: -7.251675128936768
    3. '       ' → logprob: -7.376675128936768
    4. '
' → logprob: -8.626675605773926
    5. '   ' → logprob: -9.251675605773926
    6. ')' → logprob: -10.001675605773926
    7. ' self' → logprob: -12.126675605773926
    8. '):' → logprob: -12.126675605773926
    9. '           ' → logprob: -13.251675605773926
    10. '(self' → logprob: -13.751675605773926

Token 3280: ',' (ID: 11)
  Prédit: '):
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.5396986603736877
    2. ',' → logprob: -1.039698600769043
    3. '):' → logprob: -3.414698600769043
    4. '   ' → logprob: -4.414698600769043
    5. '       ' → logprob: -4.539698600769043
    6. 'self' → logprob: -5.289698600769043
    7. '(self' → logprob: -6.164698600769043
    8. '```' → logprob: -8.914698600769043
    9. '_' → logprob: -9.039698600769043
    10. ' (' → logprob: -10.164698600769043

Token 3281: ' exponent' (ID: 51159)
  Prédit: 'ex'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ex' → logprob: -0.010922376066446304
    2. 'N' → logprob: -5.260922431945801
    3. 'self' → logprob: -6.385922431945801
    4. '   ' → logprob: -6.885922431945801
    5. '):
' → logprob: -6.885922431945801
    6. 'data' → logprob: -7.385922431945801
    7. 'input' → logprob: -7.510922431945801
    8. ')' → logprob: -8.0109224319458
    9. ' ex' → logprob: -9.1359224319458
    10. '       ' → logprob: -9.3859224319458

Token 3282: '_pairs' (ID: 90005)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.0003469057264737785
    2. '_list' → logprob: -9.125347137451172
    3. ')' → logprob: -9.500347137451172
    4. '_pairs' → logprob: -9.625347137451172
    5. '   ' → logprob: -10.625347137451172
    6. '):
' → logprob: -10.875347137451172
    7. '_s' → logprob: -11.375347137451172
    8. ')s' → logprob: -11.750347137451172
    9. ' s' → logprob: -11.875347137451172
    10. '       ' → logprob: -12.500347137451172

Token 3283: ':' (ID: 25)
  Prédit: '):
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.06450923532247543
    2. '):' → logprob: -3.439509153366089
    3. ':' → logprob: -3.939509153366089
    4. '       ' → logprob: -5.314509391784668
    5. '=' → logprob: -5.814509391784668
    6. '(self' → logprob: -7.314509391784668
    7. '   ' → logprob: -7.314509391784668
    8. 'self' → logprob: -7.564509391784668
    9. ' =' → logprob: -7.939509391784668
    10. ' (' → logprob: -9.064509391784668

Token 3284: ' List' (ID: 2655)
  Prédit: 'List'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'List' → logprob: -0.000377049611415714
    2. 'list' → logprob: -8.50037670135498
    3. 'self' → logprob: -9.00037670135498
    4. '[List' → logprob: -10.25037670135498
    5. '       ' → logprob: -12.12537670135498
    6. ' List' → logprob: -12.62537670135498
    7. ')' → logprob: -13.00037670135498
    8. '   ' → logprob: -13.62537670135498
    9. '):
' → logprob: -13.62537670135498
    10. '
' → logprob: -14.50037670135498

Token 3285: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0020542622078210115
    2. '[int' → logprob: -6.252054214477539
    3. '):
' → logprob: -9.502054214477539
    4. '   ' → logprob: -10.877054214477539
    5. '[
' → logprob: -11.877054214477539
    6. '<Tuple' → logprob: -12.252054214477539
    7. '       ' → logprob: -12.627054214477539
    8. '[(' → logprob: -12.627054214477539
    9. '):' → logprob: -12.627054214477539
    10. 'Tuple' → logprob: -12.627054214477539

Token 3286: 'Tuple' (ID: 40048)
  Prédit: 'Tuple'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Tuple' → logprob: -2.2200749754119897e-06
    2. 'tuple' → logprob: -13.875001907348633
    3. ' Tuple' → logprob: -14.250001907348633
    4. 'int' → logprob: -15.000001907348633
    5. '[' → logprob: -16.250001907348633
    6. '   ' → logprob: -17.375001907348633
    7. '           ' → logprob: -17.625001907348633
    8. '       ' → logprob: -17.625001907348633
    9. '```' → logprob: -17.750001907348633
    10. '<Tuple' → logprob: -19.000001907348633

Token 3287: '[int' (ID: 40124)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.38688457012176514
    2. '[int' → logprob: -1.1368845701217651
    3. ',int' → logprob: -12.011884689331055
    4. '(int' → logprob: -12.511884689331055
    5. ']int' → logprob: -13.761884689331055
    6. '```' → logprob: -14.011884689331055
    7. '<int' → logprob: -14.136884689331055
    8. ' int' → logprob: -14.761884689331055
    9. '   ' → logprob: -15.261884689331055
    10. ':int' → logprob: -15.886884689331055

Token 3288: ',int' (ID: 20909)
  Prédit: '[int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[int' → logprob: -0.15632079541683197
    2. ',int' → logprob: -2.156320810317993
    3. 'int' → logprob: -3.656320810317993
    4. ',' → logprob: -5.781320571899414
    5. '<int' → logprob: -10.781320571899414
    6. ']int' → logprob: -11.406320571899414
    7. '(int' → logprob: -11.906320571899414
    8. '   ' → logprob: -12.156320571899414
    9. '       ' → logprob: -12.781320571899414
    10. ':int' → logprob: -13.406320571899414

Token 3289: ']]' (ID: 8928)
  Prédit: ']):
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']):
' → logprob: -0.00688551552593708
    2. ']):' → logprob: -5.506885528564453
    3. ']' → logprob: -6.256885528564453
    4. '']):
' → logprob: -7.756885528564453
    5. '       ' → logprob: -8.256885528564453
    6. ',' → logprob: -9.881885528564453
    7. ')]' → logprob: -10.506885528564453
    8. ']]' → logprob: -10.756885528564453
    9. '):
' → logprob: -10.881885528564453
    10. '])' → logprob: -11.131885528564453

Token 3290: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.06699053198099136
    2. '       ' → logprob: -3.066990613937378
    3. '   ' → logprob: -4.066990375518799
    4. '):' → logprob: -7.066990375518799
    5. '[' → logprob: -9.191990852355957
    6. '```' → logprob: -10.316990852355957
    7. ']):
' → logprob: -10.691990852355957
    8. ')' → logprob: -10.941990852355957
    9. '):
' → logprob: -11.441990852355957
    10. '(self' → logprob: -11.816990852355957

Token 3291: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.04867605119943619
    2. '   ' → logprob: -3.173676013946533
    3. 'def' → logprob: -5.798676013946533
    4. '```' → logprob: -6.423676013946533
    5. '
' → logprob: -7.048676013946533
    6. 'self' → logprob: -9.423676490783691
    7. '     ' → logprob: -11.673676490783691
    8. '           ' → logprob: -11.798676490783691
    9. ' def' → logprob: -12.048676490783691
    10. '    ' → logprob: -12.173676490783691

Token 3292: ' self' (ID: 1051)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6931557655334473
    2. 'self' (adapté à ' self') → logprob: -0.6931557655334473
    3. ' self' → logprob: -12.443155288696289
    4. 'class' → logprob: -13.068155288696289
    5. '   ' → logprob: -13.193155288696289
    6. '(self' → logprob: -15.943155288696289
    7. 'from' → logprob: -16.06815528869629
    8. 'def' → logprob: -16.19315528869629
    9. '           ' → logprob: -16.31815528869629
    10. '```' → logprob: -16.31815528869629

Token 3293: '.ex' (ID: 3482)
  Prédit: '.ex'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.ex' → logprob: -0.38693392276763916
    2. 'ex' → logprob: -1.1369339227676392
    3. '_ex' → logprob: -10.511934280395508
    4. '```' → logprob: -10.511934280395508
    5. '._' → logprob: -12.761934280395508
    6. '   ' → logprob: -12.761934280395508
    7. 'class' → logprob: -14.511934280395508
    8. '
' → logprob: -15.261934280395508
    9. '.' → logprob: -15.386934280395508
    10. ' .' → logprob: -15.511934280395508

Token 3294: 'ponent' (ID: 1758)
  Prédit: 'ponents'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ponents' → logprob: -0.15155726671218872
    2. 'ponent' → logprob: -2.026557207107544
    3. 'p' → logprob: -4.776557445526123
    4. 'x' → logprob: -8.026556968688965
    5. '```' → logprob: -10.276556968688965
    6. '_p' → logprob: -11.526556968688965
    7. '_' → logprob: -11.901556968688965
    8. '__' → logprob: -12.276556968688965
    9. '{
' → logprob: -12.526556968688965
    10. 'pon' → logprob: -12.526556968688965

Token 3295: '_pairs' (ID: 90005)
  Prédit: '_pairs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_pairs' → logprob: -0.05950004607439041
    2. 's' → logprob: -3.059499979019165
    3. '_s' → logprob: -4.559500217437744
    4. '```' → logprob: -8.434499740600586
    5. ')_' → logprob: -9.434499740600586
    6. '   ' → logprob: -11.309499740600586
    7. '_counter' → logprob: -11.434499740600586
    8. ' _' → logprob: -11.809499740600586
    9. '       ' → logprob: -11.934499740600586
    10. 'es' → logprob: -11.934499740600586

Token 3296: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.43461164832115173
    2. ' =' → logprob: -1.0596116781234741
    3. '       ' → logprob: -6.559611797332764
    4. '[' → logprob: -6.809611797332764
    5. '   ' → logprob: -7.184611797332764
    6. '<|end|>' → logprob: -7.184611797332764
    7. '.append' → logprob: -7.684611797332764
    8. ')' → logprob: -8.184611320495605
    9. '=
' → logprob: -8.809611320495605
    10. '[
' → logprob: -8.934611320495605

Token 3297: ' exponent' (ID: 51159)
  Prédit: 'ex'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ex' → logprob: -4.763666947837919e-05
    2. '[]' → logprob: -11.12504768371582
    3. '[' → logprob: -11.25004768371582
    4. '[
' → logprob: -11.62504768371582
    5. ' exponent' → logprob: -12.50004768371582
    6. 'self' → logprob: -13.00004768371582
    7. '[(' → logprob: -13.00004768371582
    8. '[]
' → logprob: -13.62504768371582
    9. '   ' → logprob: -15.00004768371582
    10. '       ' → logprob: -15.12504768371582

Token 3298: '_pairs' (ID: 90005)
  Prédit: '_pairs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_pairs' → logprob: -0.03982740640640259
    2. '[
' → logprob: -3.914827346801758
    3. '[' → logprob: -4.164827346801758
    4. '_' → logprob: -6.539827346801758
    5. 's' → logprob: -6.664827346801758
    6. '_
' → logprob: -8.414827346801758
    7. '```' → logprob: -8.414827346801758
    8. '_tokens' → logprob: -8.664827346801758
    9. 'Pairs' → logprob: -9.789827346801758
    10. '[self' → logprob: -10.289827346801758

Token 3299: '

' (ID: 279)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.012334931641817093
    2. '
' → logprob: -5.512334823608398
    3. ':' → logprob: -6.012334823608398
    4. '    
' → logprob: -6.137334823608398
    5. '       ' → logprob: -6.637334823608398
    6. ':
' → logprob: -7.012334823608398
    7. '<|end|>' → logprob: -7.762334823608398
    8. '```' → logprob: -8.137334823608398
    9. '):
' → logprob: -8.637334823608398
    10. 'def' → logprob: -8.762334823608398

Token 3300: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.000686817744281143
    2. 'def' → logprob: -7.6256866455078125
    3. '
' → logprob: -8.625686645507812
    4. '    
' → logprob: -11.000686645507812
    5. '```' → logprob: -14.000686645507812
    6. '       ' → logprob: -14.125686645507812
    7. ' def' → logprob: -14.250686645507812
    8. 'import' → logprob: -16.125686645507812
    9. '        
' → logprob: -16.375686645507812
    10. 'from' → logprob: -16.625686645507812

Token 3301: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.2829499840736389
    2. '   ' → logprob: -1.4079499244689941
    3. ' def' → logprob: -7.532949924468994
    4. '
' → logprob: -7.532949924468994
    5. '```' → logprob: -7.782949924468994
    6. '    
' → logprob: -8.532950401306152
    7. ':' → logprob: -10.532950401306152
    8. '       ' → logprob: -10.657950401306152
    9. ')' → logprob: -11.407950401306152
    10. ':
' → logprob: -11.782950401306152

Token 3302: ' total' (ID: 3609)
  Prédit: 'solve'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'solve' → logprob: -0.20155005156993866
    2. 'compute' → logprob: -2.201550006866455
    3. 'reg' → logprob: -3.326550006866455
    4. 'calculate' → logprob: -3.701550006866455
    5. 'total' → logprob: -5.201550006866455
    6. 'minimal' → logprob: -6.326550006866455
    7. 'run' → logprob: -6.576550006866455
    8. 'min' → logprob: -7.076550006866455
    9. 'calc' → logprob: -7.576550006866455
    10. 'process' → logprob: -7.951550006866455

Token 3303: '_mass' (ID: 98668)
  Prédit: '_mass'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_mass' → logprob: -0.004798918962478638
    2. 'mass' → logprob: -5.379798889160156
    3. '_power' → logprob: -9.254798889160156
    4. '_weight' → logprob: -9.754798889160156
    5. 'def' → logprob: -12.004798889160156
    6. '_' → logprob: -12.254798889160156
    7. '_ex' → logprob: -12.379798889160156
    8. ' mass' → logprob: -12.754798889160156
    9. '```' → logprob: -13.504798889160156
    10. '_pow' → logprob: -13.629798889160156

Token 3304: '_bits' (ID: 48415)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.0001319063303526491
    2. '   ' → logprob: -9.750131607055664
    3. '       ' → logprob: -10.375131607055664
    4. 'self' → logprob: -10.625131607055664
    5. ' =' → logprob: -11.750131607055664
    6. '(' → logprob: -13.125131607055664
    7. '_(' → logprob: -13.250131607055664
    8. '=' → logprob: -13.375131607055664
    9. ' (' → logprob: -13.500131607055664
    10. 'def' → logprob: -13.875131607055664

Token 3305: 'um' (ID: 394)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.018201569095253944
    2. '       ' → logprob: -4.7682013511657715
    3. 'self' → logprob: -5.6432013511657715
    4. '(' → logprob: -6.2682013511657715
    5. '(
' → logprob: -6.3932013511657715
    6. '   ' → logprob: -6.5182013511657715
    7. ' =' → logprob: -7.8932013511657715
    8. '```' → logprob: -8.89320182800293
    9. '[self' → logprob: -9.26820182800293
    10. '=' → logprob: -9.64320182800293

Token 3306: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.00022046364028938115
    2. 'self' → logprob: -9.25022029876709
    3. '   ' → logprob: -10.12522029876709
    4. '(' → logprob: -10.25022029876709
    5. '       ' → logprob: -10.37522029876709
    6. ' =' → logprob: -11.87522029876709
    7. ' (' → logprob: -12.62522029876709
    8. '=' → logprob: -13.62522029876709
    9. '_sum' → logprob: -13.62522029876709
    10. '=self' → logprob: -13.87522029876709

Token 3307: ')' (ID: 8)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.04935969412326813
    2. '=' → logprob: -4.2993597984313965
    3. '   ' → logprob: -4.6743597984313965
    4. '       ' → logprob: -5.0493597984313965
    5. '(
' → logprob: -5.7993597984313965
    6. ')' → logprob: -5.7993597984313965
    7. '(' → logprob: -6.0493597984313965
    8. 'self' → logprob: -6.0493597984313965
    9. ' =' → logprob: -6.0493597984313965
    10. '):
' → logprob: -6.0493597984313965

Token 3308: ' ->' (ID: 2747)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.015778718516230583
    2. '       ' → logprob: -4.390778541564941
    3. '   ' → logprob: -6.765778541564941
    4. 'self' → logprob: -7.265778541564941
    5. ':
' → logprob: -7.765778541564941
    6. ':' → logprob: -8.015778541564941
    7. '(' → logprob: -8.265778541564941
    8. '(
' → logprob: -8.765778541564941
    9. '->' → logprob: -9.515778541564941
    10. '```' → logprob: -10.265778541564941

Token 3309: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -1.0564331205387134e-05
    2. 'self' → logprob: -12.37501049041748
    3. ' int' → logprob: -12.75001049041748
    4. '(int' → logprob: -13.87501049041748
    5. '   ' → logprob: -14.37501049041748
    6. '0' → logprob: -14.37501049041748
    7. 'sum' → logprob: -14.62501049041748
    8. 'def' → logprob: -15.75001049041748
    9. '```' → logprob: -15.75001049041748
    10. '1' → logprob: -16.000011444091797

Token 3310: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.982549786567688
    2. ':
' → logprob: -1.107549786567688
    3. '       ' → logprob: -1.232549786567688
    4. '(self' → logprob: -6.107549667358398
    5. '):
' → logprob: -7.607549667358398
    6. '():
' → logprob: -8.982549667358398
    7. 'self' → logprob: -9.232549667358398
    8. '(' → logprob: -9.357549667358398
    9. ':return' → logprob: -9.357549667358398
    10. ',' → logprob: -9.482549667358398

Token 3311: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -9.865583706414327e-05
    2. '```' → logprob: -9.87509822845459
    3. 'return' → logprob: -10.62509822845459
    4. ':' → logprob: -11.62509822845459
    5. '0' → logprob: -13.37509822845459
    6. '#' → logprob: -13.75009822845459
    7. '        ' → logprob: -13.75009822845459
    8. '        
' → logprob: -13.75009822845459
    9. ' return' → logprob: -13.87509822845459
    10. '
' → logprob: -13.87509822845459

Token 3312: ' total' (ID: 3609)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.10501697659492493
    2. 'result' → logprob: -3.2300169467926025
    3. 'return' → logprob: -3.6050169467926025
    4. 'total' (adapté à ' total') → logprob: -3.9800169467926025
    5. 'mass' → logprob: -5.230017185211182
    6. 'res' → logprob: -5.480017185211182
    7. 'sum' → logprob: -5.605017185211182
    8. '```' → logprob: -7.230017185211182
    9. 'bits' → logprob: -9.230016708374023
    10. 'ret' → logprob: -9.480016708374023

Token 3313: ' =' (ID: 314)
  Prédit: '_mass'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_mass' → logprob: -0.0004098195640835911
    2. '_' → logprob: -8.500410079956055
    3. 'mass' → logprob: -8.875410079956055
    4. '=' → logprob: -11.250410079956055
    5. '_
' → logprob: -12.000410079956055
    6. ' =' → logprob: -12.250410079956055
    7. '```' → logprob: -12.375410079956055
    8. 'Mass' → logprob: -12.500410079956055
    9. ' _' → logprob: -12.750410079956055
    10. '_tokens' → logprob: -12.875410079956055

Token 3314: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -3.054500666621607e-06
    2. '       ' → logprob: -13.00000286102295
    3. ' ' → logprob: -14.37500286102295
    4. '   ' → logprob: -16.875003814697266
    5. '```' → logprob: -17.125003814697266
    6. '(' → logprob: -19.250003814697266
    7. '           ' → logprob: -19.250003814697266
    8. '=' → logprob: -19.625003814697266
    9. '
' → logprob: -19.625003814697266
    10. 'sum' → logprob: -19.625003814697266

Token 3315: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -7.896309739408025e-07
    2. 'sum' → logprob: -14.875000953674316
    3. ' ' → logprob: -16.25
    4. '(' → logprob: -16.625
    5. '   ' → logprob: -16.625
    6. '       ' → logprob: -17.625
    7. '```' → logprob: -18.125
    8. '=' → logprob: -19.125
    9. '1' → logprob: -19.25
    10. 'total' → logprob: -19.625

Token 3316: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7764586210250854
    2. ' +' → logprob: -0.9014586210250854
    3. '+' → logprob: -2.776458740234375
    4. ' +=' → logprob: -3.401458740234375
    5. '
' → logprob: -3.651458740234375
    6. 'for' → logprob: -5.901458740234375
    7. '+
' → logprob: -6.026458740234375
    8. '+=' → logprob: -6.276458740234375
    9. ' +
' → logprob: -6.401458740234375
    10. ' for' → logprob: -7.526458740234375

Token 3317: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6520311236381531
    2. ' +=' → logprob: -1.9020311832427979
    3. '+=' → logprob: -1.9020311832427979
    4. '+' → logprob: -2.027031183242798
    5. ' +' → logprob: -3.527031183242798
    6. '=' → logprob: -4.152030944824219
    7. ' =' → logprob: -6.402030944824219
    8. '|' → logprob: -7.902030944824219
    9. '+
' → logprob: -8.152030944824219
    10. 'for' → logprob: -8.777030944824219

Token 3318: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.006131064612418413
    2. '       ' → logprob: -5.506131172180176
    3. ' for' → logprob: -6.756131172180176
    4. '1' → logprob: -7.256131172180176
    5. '
' → logprob: -8.881131172180176
    6. '```' → logprob: -11.881131172180176
    7. '0' → logprob: -12.006131172180176
    8. 'def' → logprob: -12.381131172180176
    9. '   ' → logprob: -12.756131172180176
    10. '=' → logprob: -13.006131172180176

Token 3319: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.00029744720086455345
    2. ' a' → logprob: -8.500297546386719
    3. '(a' → logprob: -9.875297546386719
    4. '_,' → logprob: -11.000297546386719
    5. 'ai' → logprob: -11.750297546386719
    6. '_a' → logprob: -12.000297546386719
    7. '   ' → logprob: -12.500297546386719
    8. 'self' → logprob: -12.750297546386719
    9. ' (' → logprob: -13.750297546386719
    10. ',' → logprob: -14.375297546386719

Token 3320: ',b' (ID: 17568)
  Prédit: '_i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_i' → logprob: -0.07421375066041946
    2. '_' → logprob: -2.699213743209839
    3. ',' → logprob: -6.449213981628418
    4. '+' → logprob: -7.324213981628418
    5. '_,' → logprob: -7.574213981628418
    6. ' _' → logprob: -8.199213981628418
    7. '_j' → logprob: -8.449213981628418
    8. '[' → logprob: -8.574213981628418
    9. '[i' → logprob: -8.574213981628418
    10. 'i' → logprob: -9.199213981628418

Token 3321: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.11571679264307022
    2. ':' → logprob: -3.4907166957855225
    3. ':
' → logprob: -3.6157166957855225
    4. '+' → logprob: -4.490716934204102
    5. ',' → logprob: -4.615716934204102
    6. ' +=' → logprob: -4.865716934204102
    7. '+=' → logprob: -5.115716934204102
    8. 'in' → logprob: -5.115716934204102
    9. '       ' → logprob: -5.865716934204102
    10. '):
' → logprob: -6.615716934204102

Token 3322: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0015903194434940815
    2. 'range' → logprob: -7.001590251922607
    3. 'a' → logprob: -8.001590728759766
    4. ' self' → logprob: -8.126590728759766
    5. 'ex' → logprob: -10.501590728759766
    6. '(self' → logprob: -11.751590728759766
    7. ' range' → logprob: -13.126590728759766
    8. '(a' → logprob: -13.501590728759766
    9. 'enumer' → logprob: -13.626590728759766
    10. 'total' → logprob: -13.626590728759766

Token 3323: '.ex' (ID: 3482)
  Prédit: 'ex'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ex' → logprob: -0.07592957466840744
    2. '.ex' → logprob: -3.450929641723633
    3. '+' → logprob: -3.950929641723633
    4. '_pairs' → logprob: -4.700929641723633
    5. '_ex' → logprob: -5.450929641723633
    6. '   ' → logprob: -6.825929641723633
    7. '._' → logprob: -7.075929641723633
    8. ' ex' → logprob: -7.450929641723633
    9. ' +' → logprob: -7.450929641723633
    10. '+
' → logprob: -7.575929641723633

Token 3324: 'ponent' (ID: 1758)
  Prédit: 'ponent'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ponent' → logprob: -0.5678171515464783
    2. '+' → logprob: -1.567817211151123
    3. '^' → logprob: -2.317817211151123
    4. 'ponents' → logprob: -2.817817211151123
    5. 'x' → logprob: -3.442817211151123
    6. '+
' → logprob: -5.317817211151123
    7. '**' → logprob: -5.317817211151123
    8. '```' → logprob: -5.567817211151123
    9. '_pairs' → logprob: -5.942817211151123
    10. '       ' → logprob: -6.442817211151123

Token 3325: '_pairs' (ID: 90005)
  Prédit: '_pairs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_pairs' → logprob: -0.0020621151197701693
    2. '_' → logprob: -7.0020623207092285
    3. '_sum' → logprob: -7.3770623207092285
    4. '_bits' → logprob: -8.37706184387207
    5. '_
' → logprob: -10.00206184387207
    6. 's' → logprob: -10.00206184387207
    7. '_i' → logprob: -10.37706184387207
    8. ')_' → logprob: -10.75206184387207
    9. '```' → logprob: -10.75206184387207
    10. '_positions' → logprob: -11.12706184387207

Token 3326: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -1.0070432424545288
    2. '           ' → logprob: -1.0070432424545288
    3. '+' → logprob: -1.7570432424545288
    4. ':
' → logprob: -2.7570433616638184
    5. ' +=' → logprob: -4.632043361663818
    6. '+=' → logprob: -5.257043361663818
    7. ' +' → logprob: -5.382043361663818
    8. ',' → logprob: -6.132043361663818
    9. '<|end|>' → logprob: -6.257043361663818
    10. '=' → logprob: -6.507043361663818

Token 3327: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0029826906975358725
    2. 'total' → logprob: -6.3779826164245605
    3. '       ' → logprob: -8.002983093261719
    4. '(total' → logprob: -8.002983093261719
    5. '```' → logprob: -8.502983093261719
    6. '               ' → logprob: -9.127983093261719
    7. ' total' → logprob: -9.752983093261719
    8. '^' → logprob: -10.252983093261719
    9. '
' → logprob: -10.877983093261719
    10. '            
' → logprob: -10.877983093261719

Token 3328: ' total' (ID: 3609)
  Prédit: 'total'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'total' (adapté à ' total') → logprob: -0.04056624323129654
    2. '           ' → logprob: -3.2905662059783936
    3. ' total' → logprob: -6.040566444396973
    4. '               ' → logprob: -9.165566444396973
    5. '(total' → logprob: -10.915566444396973
    6. '       ' → logprob: -11.415566444396973
    7. '```' → logprob: -13.290566444396973
    8. ',total' → logprob: -13.415566444396973
    9. '	total' → logprob: -14.165566444396973
    10. '1' → logprob: -14.290566444396973

Token 3329: ' +=' (ID: 2757)
  Prédit: '|'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '|' → logprob: -0.04492221772670746
    2. '+=' → logprob: -3.169922113418579
    3. ' |=' → logprob: -6.419922351837158
    4. ' +=' → logprob: -8.544921875
    5. '=' → logprob: -10.669921875
    6. '```' → logprob: -10.919921875
    7. '       ' → logprob: -11.169921875
    8. '   ' → logprob: -11.294921875
    9. '<<' → logprob: -11.919921875
    10. ']+=' → logprob: -12.294921875

Token 3330: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.4811568558216095
    2. '1' → logprob: -0.9811568260192871
    3. '(' → logprob: -4.981156826019287
    4. 'pow' → logprob: -8.606157302856445
    5. ' ' → logprob: -13.481157302856445
    6. '(pow' → logprob: -13.731157302856445
    7. '
' → logprob: -13.856157302856445
    8. ' (' → logprob: -13.856157302856445
    9. '   ' → logprob: -14.356157302856445
    10. '```' → logprob: -14.981157302856445

Token 3331: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.255563348531723
    2. '1' → logprob: -1.5055633783340454
    3. '(' → logprob: -5.630563259124756
    4. 'pow' → logprob: -10.130563735961914
    5. ' ' → logprob: -14.630563735961914
    6. ' (' → logprob: -15.130563735961914
    7. '
' → logprob: -15.255563735961914
    8. '(pow' → logprob: -15.630563735961914
    9. '   ' → logprob: -16.630563735961914
    10. '```' → logprob: -17.630563735961914

Token 3332: ' **' (ID: 6240)
  Prédit: '**'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '**' → logprob: -0.0002978048287332058
    2. '^{' → logprob: -8.625297546386719
    3. ' **' → logprob: -9.250297546386719
    4. '^(' → logprob: -11.875297546386719
    5. '**
' → logprob: -12.375297546386719
    6. '[a' → logprob: -12.750297546386719
    7. '(a' → logprob: -13.375297546386719
    8. '^' → logprob: -13.375297546386719
    9. '**)' → logprob: -13.500297546386719
    10. '```' → logprob: -13.750297546386719

Token 3333: ' (' (ID: 350)
  Prédit: '(a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -4.990154047845863e-05
    2. 'a' → logprob: -10.125049591064453
    3. ' (' → logprob: -11.875049591064453
    4. '(' → logprob: -13.000049591064453
    5. '(b' → logprob: -14.875049591064453
    6. '[a' → logprob: -15.375049591064453
    7. '((' → logprob: -17.125049591064453
    8. '(
' → logprob: -17.500049591064453
    9. '
' → logprob: -18.250049591064453
    10. '{' → logprob: -19.000049591064453

Token 3334: 'a' (ID: 64)
  Prédit: 'a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.03804459050297737
    2. '(a' → logprob: -3.2880446910858154
    3. ' (' → logprob: -13.538044929504395
    4. ' a' → logprob: -13.913044929504395
    5. '(' → logprob: -14.163044929504395
    6. '(
' → logprob: -16.288043975830078
    7. '[a' → logprob: -16.538043975830078
    8. ')a' → logprob: -17.288043975830078
    9. '   ' → logprob: -17.913043975830078
    10. '
' → logprob: -19.038043975830078

Token 3335: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.00765313021838665
    2. ' +' → logprob: -5.00765323638916
    3. '+b' → logprob: -7.00765323638916
    4. '+
' → logprob: -10.38265323638916
    5. '   ' → logprob: -14.25765323638916
    6. '+B' → logprob: -15.75765323638916
    7. '
' → logprob: -15.88265323638916
    8. ' ' → logprob: -16.007652282714844
    9. ' +
' → logprob: -16.382652282714844
    10. '    ' → logprob: -16.632652282714844

Token 3336: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -1.9361264946837764e-07
    2. ' b' → logprob: -15.75
    3. '       ' → logprob: -18.875
    4. '   ' → logprob: -20.875
    5. '```' → logprob: -21.0
    6. '           ' → logprob: -21.375
    7. ')b' → logprob: -22.0
    8. '	b' → logprob: -23.625
    9. '
' → logprob: -24.25
    10. ' ' → logprob: -24.375

Token 3337: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0001227276516146958
    2. ')
' → logprob: -10.000123023986816
    3. '       ' → logprob: -10.375123023986816
    4. '           ' → logprob: -11.625123023986816
    5. '+' → logprob: -11.875123023986816
    6. ' )' → logprob: -11.875123023986816
    7. '<|end|>' → logprob: -12.375123023986816
    8. ')+' → logprob: -12.500123023986816
    9. '')' → logprob: -13.000123023986816
    10. '<|end|>' → logprob: -13.125123023986816

Token 3338: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0019231601618230343
    2. 'return' → logprob: -7.126923084259033
    3. '
' → logprob: -8.001923561096191
    4. '```' → logprob: -8.626923561096191
    5. '<|end|>' → logprob: -8.626923561096191
    6. '+' → logprob: -8.876923561096191
    7. ' return' → logprob: -9.126923561096191
    8. '        
' → logprob: -10.126923561096191
    9. '   ' → logprob: -10.876923561096191
    10. '[' → logprob: -11.001923561096191

Token 3339: ' return' (ID: 622)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0026342803612351418
    2. 'return' (adapté à ' return') → logprob: -6.002634048461914
    3. ' return' → logprob: -8.877634048461914
    4. '   ' → logprob: -12.002634048461914
    5. '```' → logprob: -12.127634048461914
    6. '	' → logprob: -12.627634048461914
    7. '
' → logprob: -13.377634048461914
    8. '           ' → logprob: -13.877634048461914
    9. '	return' → logprob: -15.002634048461914
    10. ' ' → logprob: -15.627634048461914

Token 3340: ' total' (ID: 3609)
  Prédit: 'total'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'total' → logprob: -2.7610454708337784e-05
    2. ' total' → logprob: -10.500027656555176
    3. '       ' → logprob: -20.12502670288086
    4. '(total' → logprob: -20.87502670288086
    5. '   ' → logprob: -22.50002670288086
    6. '0' → logprob: -22.75002670288086
    7. 'tot' → logprob: -23.00002670288086
    8. '$total' → logprob: -23.00002670288086
    9. '	total' → logprob: -23.00002670288086
    10. '           ' → logprob: -24.12502670288086

Token 3341: '

' (ID: 279)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.12933743000030518
    2. '
' → logprob: -2.1293373107910156
    3. '```' → logprob: -6.879337310791016
    4. '    
' → logprob: -7.254337310791016
    5. '<|end|>' → logprob: -7.504337310791016
    6. 'def' → logprob: -10.379337310791016
    7. '

' → logprob: -10.754337310791016
    8. '<|end|>' → logprob: -10.879337310791016
    9. '       ' → logprob: -11.379337310791016
    10. 'Next' → logprob: -11.879337310791016

Token 3342: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.018951520323753357
    2. '
' → logprob: -4.018951416015625
    3. '```' → logprob: -7.268951416015625
    4. 'def' → logprob: -9.893951416015625
    5. '    
' → logprob: -10.018951416015625
    6. '<|end|>' → logprob: -12.393951416015625
    7. ' def' → logprob: -13.143951416015625
    8. '

' → logprob: -14.268951416015625
    9. '``' → logprob: -14.518951416015625
    10. '<|end|>' → logprob: -14.768951416015625

Token 3343: ' def' (ID: 1056)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3388124108314514
    2. 'def' (adapté à ' def') → logprob: -1.3388123512268066
    3. '
' → logprob: -3.7138123512268066
    4. ' def' → logprob: -7.213812351226807
    5. '```' → logprob: -9.588812828063965
    6. '    
' → logprob: -10.338812828063965
    7. '	def' → logprob: -13.088812828063965
    8. '

' → logprob: -14.463812828063965
    9. '  
' → logprob: -14.588812828063965
    10. ' 
' → logprob: -15.088812828063965

Token 3344: ' de' (ID: 334)
  Prédit: 'de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'de' → logprob: -0.721302330493927
    2. 'reg' → logprob: -1.3463022708892822
    3. 'minimal' → logprob: -1.9713022708892822
    4. 'generate' → logprob: -2.7213022708892822
    5. 'min' → logprob: -3.3463022708892822
    6. 'solve' → logprob: -5.096302509307861
    7. 'get' → logprob: -6.346302509307861
    8. 'total' → logprob: -6.721302509307861
    9. ' minimal' → logprob: -6.971302509307861
    10. 'def' → logprob: -7.221302509307861

Token 3345: 'compose' (ID: 65322)
  Prédit: 'compose'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'compose' → logprob: -0.00021974841365590692
    2. 'com' → logprob: -8.750219345092773
    3. 'f' → logprob: -9.750219345092773
    4. 'comp' → logprob: -13.500219345092773
    5. 'c' → logprob: -14.125219345092773
    6. 'composer' → logprob: -15.000219345092773
    7. 'composition' → logprob: -15.625219345092773
    8. 'compound' → logprob: -16.500219345092773
    9. '-compose' → logprob: -16.625219345092773
    10. 'code' → logprob: -16.750219345092773

Token 3346: '_mass' (ID: 98668)
  Prédit: 'total'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'total' → logprob: -0.5938560962677002
    2. '_total' → logprob: -1.2188560962677002
    3. '_' → logprob: -2.4688560962677
    4. '_bits' → logprob: -3.5938560962677
    5. '(self' → logprob: -4.468855857849121
    6. '_into' → logprob: -4.843855857849121
    7. '```' → logprob: -5.593855857849121
    8. '(total' → logprob: -5.968855857849121
    9. '(' → logprob: -5.968855857849121
    10. '_bit' → logprob: -6.093855857849121

Token 3347: '(self' (ID: 2402)
  Prédit: '_bits'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_bits' → logprob: -0.0032976088114082813
    2. '_' → logprob: -6.878297805786133
    3. '(self' → logprob: -7.003297805786133
    4. '_into' → logprob: -7.128297805786133
    5. '_bit' → logprob: -9.003297805786133
    6. '```' → logprob: -9.628297805786133
    7. 'bits' → logprob: -10.253297805786133
    8. '_
' → logprob: -10.378297805786133
    9. '_tokens' → logprob: -10.628297805786133
    10. 's' → logprob: -10.628297805786133

Token 3348: ',' (ID: 11)
  Prédit: '_bits'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_bits' → logprob: -0.07618466019630432
    2. '_into' → logprob: -2.7011847496032715
    3. '_' → logprob: -6.7011847496032715
    4. '```' → logprob: -7.0761847496032715
    5. '_tokens' → logprob: -7.2011847496032715
    6. '(self' → logprob: -7.4511847496032715
    7. '_to' → logprob: -7.5761847496032715
    8. ')' → logprob: -8.326184272766113
    9. 's' → logprob: -8.451184272766113
    10. '   ' → logprob: -8.576184272766113

Token 3349: ' total' (ID: 3609)
  Prédit: 'mass'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mass' → logprob: -0.3267619013786316
    2. 'total' → logprob: -1.3267619609832764
    3. ' mass' → logprob: -5.451761722564697
    4. 'self' → logprob: -5.826761722564697
    5. 'value' → logprob: -6.201761722564697
    6. ' total' → logprob: -6.326761722564697
    7. '       ' → logprob: -7.201761722564697
    8. ')' → logprob: -7.451761722564697
    9. '   ' → logprob: -7.451761722564697
    10. 'n' → logprob: -8.576762199401855

Token 3350: '_mass' (ID: 98668)
  Prédit: '_mass'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_mass' → logprob: -0.017029719427227974
    2. '_' → logprob: -4.392029762268066
    3. ')' → logprob: -6.517029762268066
    4. '_
' → logprob: -6.767029762268066
    5. 'mass' → logprob: -7.642029762268066
    6. ' _' → logprob: -7.767029762268066
    7. '_bits' → logprob: -7.892029762268066
    8. ')_' → logprob: -9.142029762268066
    9. '_)' → logprob: -9.517029762268066
    10. '
' → logprob: -10.267029762268066

Token 3351: ':' (ID: 25)
  Prédit: '):
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.22585554420948029
    2. '):' → logprob: -1.8508555889129639
    3. ')' → logprob: -3.225855588912964
    4. ':' → logprob: -6.225855350494385
    5. ' ):
' → logprob: -7.100855350494385
    6. '   ' → logprob: -7.475855350494385
    7. '       ' → logprob: -8.225855827331543
    8. '
' → logprob: -8.225855827331543
    9. ' ):' → logprob: -8.225855827331543
    10. '():
' → logprob: -8.225855827331543

Token 3352: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.000960296718403697
    2. ')' → logprob: -7.000960350036621
    3. ' int' → logprob: -10.125960350036621
    4. '
' → logprob: -13.000960350036621
    5. ':int' → logprob: -13.375960350036621
    6. '):' → logprob: -13.750960350036621
    7. '):
' → logprob: -13.875960350036621
    8. '(int' → logprob: -14.125960350036621
    9. '[int' → logprob: -14.125960350036621
    10. ' )' → logprob: -14.625960350036621

Token 3353: ')' (ID: 8)
  Prédit: '):
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.515083372592926
    2. ')' → logprob: -1.5150833129882812
    3. '):' → logprob: -2.6400833129882812
    4. ':' → logprob: -2.6400833129882812
    5. '       ' → logprob: -3.5150833129882812
    6. ':
' → logprob: -4.890083312988281
    7. '   ' → logprob: -6.265083312988281
    8. ',' → logprob: -8.265083312988281
    9. '):
' → logprob: -8.765083312988281
    10. ')->' → logprob: -9.140083312988281

Token 3354: ' ->' (ID: 2747)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.05361684039235115
    2. ':
' → logprob: -3.303616762161255
    3. '       ' → logprob: -4.178617000579834
    4. '():
' → logprob: -10.428616523742676
    5. ',' → logprob: -10.928616523742676
    6. ':return' → logprob: -10.928616523742676
    7. '):
' → logprob: -11.678616523742676
    8. '   ' → logprob: -12.053616523742676
    9. '->' → logprob: -12.053616523742676
    10. '**' → logprob: -12.178616523742676

Token 3355: ' List' (ID: 2655)
  Prédit: 'List'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'List' → logprob: -4.763666947837919e-05
    2. ' List' → logprob: -10.75004768371582
    3. '[List' → logprob: -10.75004768371582
    4. 'list' → logprob: -13.00004768371582
    5. 'int' → logprob: -13.25004768371582
    6. '   ' → logprob: -15.50004768371582
    7. '_list' → logprob: -15.87504768371582
    8. '[]' → logprob: -16.75004768371582
    9. '[int' → logprob: -17.00004768371582
    10. '```' → logprob: -17.37504768371582

Token 3356: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.47474029660224915
    2. '[int' → logprob: -0.9747402667999268
    3. '[
' → logprob: -7.724740505218506
    4. 'int' → logprob: -9.224740028381348
    5. '[(' → logprob: -9.599740028381348
    6. '[List' → logprob: -10.474740028381348
    7. '[Int' → logprob: -11.974740028381348
    8. '<int' → logprob: -12.099740028381348
    9. '   ' → logprob: -12.474740028381348
    10. '```' → logprob: -12.474740028381348

Token 3357: 'Tuple' (ID: 40048)
  Prédit: 'Tuple'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Tuple' → logprob: -0.0031817557755857706
    2. 'int' → logprob: -5.7531819343566895
    3. 'tuple' → logprob: -12.753181457519531
    4. ' Tuple' → logprob: -13.753181457519531
    5. '[int' → logprob: -16.37818145751953
    6. 'Tu' → logprob: -17.50318145751953
    7. '[' → logprob: -17.62818145751953
    8. '(int' → logprob: -18.37818145751953
    9. '_tuple' → logprob: -18.75318145751953
    10. ' int' → logprob: -19.00318145751953

Token 3358: '[int' (ID: 40124)
  Prédit: '[int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[int' → logprob: -0.5759410262107849
    2. 'int' → logprob: -0.8259410262107849
    3. '(int' → logprob: -14.20094108581543
    4. ',int' → logprob: -14.95094108581543
    5. '<int' → logprob: -15.70094108581543
    6. ' int' → logprob: -15.70094108581543
    7. ']int' → logprob: -16.70094108581543
    8. '[
' → logprob: -17.32594108581543
    9. '
' → logprob: -17.45094108581543
    10. '   ' → logprob: -17.45094108581543

Token 3359: ',int' (ID: 20909)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.432195246219635
    2. ',int' → logprob: -1.0571951866149902
    3. 'int' → logprob: -6.18219518661499
    4. '[int' → logprob: -6.68219518661499
    5. ',bool' → logprob: -9.557195663452148
    6. '   ' → logprob: -10.057195663452148
    7. ' ,' → logprob: -10.557195663452148
    8. '       ' → logprob: -11.932195663452148
    9. ',List' → logprob: -12.057195663452148
    10. ']int' → logprob: -12.807195663452148

Token 3360: ']]:
' (ID: 183340)
  Prédit: ']:
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']:
' → logprob: -0.0015283133834600449
    2. ']:' → logprob: -7.501528263092041
    3. ']' → logprob: -8.1265287399292
    4. '       ' → logprob: -8.1265287399292
    5. '']:
' → logprob: -9.0015287399292
    6. '):
' → logprob: -9.3765287399292
    7. ']]:
' → logprob: -10.0015287399292
    8. '   ' → logprob: -10.3765287399292
    9. ']:
' → logprob: -10.5015287399292
    10. ']:

' → logprob: -10.6265287399292

Token 3361: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0036220469046384096
    2. '```' → logprob: -5.628622055053711
    3. '``' → logprob: -11.253622055053711
    4. '`' → logprob: -12.503622055053711
    5. '   ' → logprob: -13.378622055053711
    6. '        
' → logprob: -13.878622055053711
    7. ':' → logprob: -14.503622055053711
    8. '           ' → logprob: -14.628622055053711
    9. '​' → logprob: -15.003622055053711
    10. ',' → logprob: -15.378622055053711

Token 3362: ' """
' (ID: 7037)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.001923875417560339
    2. '```' → logprob: -6.62692403793335
    3. '[]' → logprob: -9.376923561096191
    4. '        
' → logprob: -9.376923561096191
    5. '
' → logprob: -9.501923561096191
    6. 'if' → logprob: -9.876923561096191
    7. 'def' → logprob: -9.876923561096191
    8. '[' → logprob: -10.251923561096191
    9. ' if' → logprob: -10.751923561096191
    10. 'result' → logprob: -10.751923561096191

Token 3363: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0030096732079982758
    2. '```' → logprob: -6.128009796142578
    3. 'tokens' → logprob: -8.253009796142578
    4. 'i' → logprob: -8.878009796142578
    5. 'if' → logprob: -9.503009796142578
    6. '   ' → logprob: -10.128009796142578
    7. 'result' → logprob: -10.128009796142578
    8. 'token' → logprob: -10.378009796142578
    9. '``' → logprob: -10.628009796142578
    10. 'pos' → logprob: -10.753009796142578

Token 3364: ' De' (ID: 1516)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03367036581039429
    2. 'result' → logprob: -4.283670425415039
    3. 'bits' → logprob: -4.408670425415039
    4. 'def' → logprob: -5.533670425415039
    5. '```' → logprob: -7.533670425415039
    6. 'tokens' → logprob: -7.658670425415039
    7. '   ' → logprob: -7.908670425415039
    8. '
' → logprob: -7.908670425415039
    9. 'positions' → logprob: -8.283670425415039
    10. 'bit' → logprob: -8.283670425415039

Token 3365: 'compose' (ID: 65322)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.013295638374984264
    2. 'compose' → logprob: -4.388295650482178
    3. 'com' → logprob: -7.763295650482178
    4. 'c' → logprob: -8.51329517364502
    5. 'def' → logprob: -10.01329517364502
    6. '   ' → logprob: -10.38829517364502
    7. '_f' → logprob: -10.51329517364502
    8. '```' → logprob: -11.01329517364502
    9. '
' → logprob: -11.88829517364502
    10. '_' → logprob: -12.13829517364502

Token 3366: ' total' (ID: 3609)
  Prédit: '_mass'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_mass' → logprob: -0.8900554776191711
    2. 'total' → logprob: -1.2650554180145264
    3. 'mass' → logprob: -1.2650554180145264
    4. 'self' → logprob: -4.3900556564331055
    5. '       ' → logprob: -5.3900556564331055
    6. '(total' → logprob: -6.0150556564331055
    7. ' mass' → logprob: -6.1400556564331055
    8. '(self' → logprob: -6.8900556564331055
    9. '
' → logprob: -7.3900556564331055
    10. '_total' → logprob: -8.015055656433105

Token 3367: '_mass' (ID: 98668)
  Prédit: '_mass'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_mass' → logprob: -0.0012845216551795602
    2. 'mass' → logprob: -6.751284599304199
    3. '_' → logprob: -10.2512845993042
    4. '_
' → logprob: -11.0012845993042
    5. '_m' → logprob: -11.2512845993042
    6. '
' → logprob: -11.6262845993042
    7. '```' → logprob: -11.6262845993042
    8. '   ' → logprob: -11.8762845993042
    9. 'Mass' → logprob: -12.8762845993042
    10. '`' → logprob: -13.0012845993042

Token 3368: ' (' (ID: 350)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.3644188642501831
    2. '       ' → logprob: -1.489418864250183
    3. '=' → logprob: -3.3644189834594727
    4. '
' → logprob: -4.114418983459473
    5. '```' → logprob: -4.864418983459473
    6. 'into' → logprob: -5.614418983459473
    7. ' =' → logprob: -5.989418983459473
    8. '   ' → logprob: -6.114418983459473
    9. 'self' → logprob: -6.114418983459473
    10. '&' → logprob: -6.364418983459473

Token 3369: 'integer' (ID: 27378)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.6003682017326355
    2. 'int' → logprob: -1.7253682613372803
    3. 'total' → logprob: -2.3503682613372803
    4. '       ' → logprob: -2.9753682613372803
    5. '):
' → logprob: -3.3503682613372803
    6. '):' → logprob: -3.6003682613372803
    7. ',' → logprob: -4.225368022918701
    8. ':' → logprob: -4.475368022918701
    9. '```' → logprob: -4.600368022918701
    10. '
' → logprob: -4.600368022918701

Token 3370: ')' (ID: 8)
  Prédit: '):
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):
' → logprob: -1.5816593170166016
    2. '>>' → logprob: -1.9566593170166016
    3. 'into' → logprob: -2.2066593170166016
    4. ':
' → logprob: -2.2066593170166016
    5. '
' → logprob: -2.3316593170166016
    6. '=' → logprob: -2.4566593170166016
    7. ' into' → logprob: -3.0816593170166016
    8. ':' → logprob: -3.2066593170166016
    9. '       ' → logprob: -3.4566593170166016
    10. '```' → logprob: -3.4566593170166016

Token 3371: ' into' (ID: 1511)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.9372422695159912
    2. '(self' → logprob: -1.1872422695159912
    3. 'into' → logprob: -1.4372422695159912
    4. ' into' → logprob: -3.437242269515991
    5. '```' → logprob: -4.18724250793457
    6. '=' → logprob: -4.93724250793457
    7. '
' → logprob: -6.06224250793457
    8. '   ' → logprob: -6.43724250793457
    9. '_into' → logprob: -6.68724250793457
    10. ' =' → logprob: -6.93724250793457

Token 3372: ' powers' (ID: 27742)
  Prédit: '[('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[(' → logprob: -0.30336838960647583
    2. 'bits' → logprob: -1.928368330001831
    3. '[]' → logprob: -2.428368330001831
    4. 'powers' → logprob: -4.67836856842041
    5. '[
' → logprob: -4.80336856842041
    6. 'List' → logprob: -5.67836856842041
    7. 'bit' → logprob: -5.92836856842041
    8. '[]
' → logprob: -7.05336856842041
    9. 'positions' → logprob: -7.67836856842041
    10. '[' → logprob: -8.05336856842041

Token 3373: ' of' (ID: 328)
  Prédit: 'of'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'of' → logprob: -0.3290540277957916
    2. '       ' → logprob: -1.5790539979934692
    3. ' of' → logprob: -3.204054117202759
    4. '_of' → logprob: -3.954054117202759
    5. '   ' → logprob: -5.20405387878418
    6. '```' → logprob: -5.32905387878418
    7. '_' → logprob: -6.45405387878418
    8. '[' → logprob: -7.07905387878418
    9. '(' → logprob: -7.70405387878418
    10. ')' → logprob: -8.95405387878418

Token 3374: ' two' (ID: 1920)
  Prédit: 'two'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'two' → logprob: -0.10313283652067184
    2. '2' → logprob: -2.353132724761963
    3. ' two' → logprob: -5.853132724761963
    4. 'Two' → logprob: -10.228133201599121
    5. '_two' → logprob: -11.978133201599121
    6. '-two' → logprob: -12.353133201599121
    7. '(two' → logprob: -12.728133201599121
    8. '   ' → logprob: -14.603133201599121
    9. '```' → logprob: -15.228133201599121
    10. '
' → logprob: -15.353133201599121

Token 3375: '.
' (ID: 558)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.08902889490127563
    2. ':
' → logprob: -3.214028835296631
    3. ':' → logprob: -3.714028835296631
    4. '=' → logprob: -5.214028835296631
    5. '(' → logprob: -5.589028835296631
    6. ' =' → logprob: -6.214028835296631
    7. '
' → logprob: -6.214028835296631
    8. ',' → logprob: -6.339028835296631
    9. ' (' → logprob: -6.464028835296631
    10. '   ' → logprob: -7.339028835296631

Token 3376: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -3.774276774493046e-05
    2. '```' → logprob: -10.375038146972656
    3. '   ' → logprob: -12.750038146972656
    4. 'def' → logprob: -14.250038146972656
    5. '           ' → logprob: -14.250038146972656
    6. ':' → logprob: -14.250038146972656
    7. '        
' → logprob: -14.875038146972656
    8. '
' → logprob: -15.625038146972656
    9. '``' → logprob: -15.625038146972656
    10. 'tokens' → logprob: -15.750038146972656

Token 3377: ' Return' (ID: 6318)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.003240101272240281
    2. '```' → logprob: -6.25324010848999
    3. 'tokens' → logprob: -7.37824010848999
    4. 'result' → logprob: -8.128239631652832
    5. '
' → logprob: -8.503239631652832
    6. 'def' → logprob: -9.128239631652832
    7. 'for' → logprob: -10.503239631652832
    8. 'bits' → logprob: -11.253239631652832
    9. 'res' → logprob: -12.128239631652832
    10. '   ' → logprob: -12.628239631652832

Token 3378: ' list' (ID: 1562)
  Prédit: '[('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[(' → logprob: -0.03974388539791107
    2. '[
' → logprob: -3.4147439002990723
    3. 'List' → logprob: -5.414743900299072
    4. '       ' → logprob: -7.664743900299072
    5. ' [(' → logprob: -7.914743900299072
    6. 'bits' → logprob: -8.664743423461914
    7. 'a' → logprob: -8.914743423461914
    8. '[' → logprob: -9.289743423461914
    9. '_list' → logprob: -9.414743423461914
    10. '   ' → logprob: -9.789743423461914

Token 3379: ' of' (ID: 328)
  Prédit: '[
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[
' → logprob: -0.8389224410057068
    2. '[(' → logprob: -1.3389225006103516
    3. ' of' → logprob: -2.0889225006103516
    4. '[' → logprob: -2.5889225006103516
    5. 'of' → logprob: -2.9639225006103516
    6. '       ' → logprob: -3.5889225006103516
    7. '```' → logprob: -4.588922500610352
    8. '[int' → logprob: -5.338922500610352
    9. ':' → logprob: -5.463922500610352
    10. '=' → logprob: -6.838922500610352

Token 3380: ' (' (ID: 350)
  Prédit: 'Tuple'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Tuple' → logprob: -0.016521437093615532
    2. '(int' → logprob: -4.766521453857422
    3. '[int' → logprob: -5.641521453857422
    4. 'int' → logprob: -5.891521453857422
    5. 'Tu' → logprob: -6.766521453857422
    6. ' Tuple' → logprob: -9.516521453857422
    7. ' (' → logprob: -9.641521453857422
    8. '(' → logprob: -9.641521453857422
    9. 'List' → logprob: -10.141521453857422
    10. '[' → logprob: -10.141521453857422

Token 3381: 'a' (ID: 64)
  Prédit: 'a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.00825486145913601
    2. 'int' → logprob: -5.2582550048828125
    3. '(a' → logprob: -6.7582550048828125
    4. 'bit' → logprob: -7.5082550048828125
    5. ')' → logprob: -7.8832550048828125
    6. 'ex' → logprob: -8.633255004882812
    7. '(int' → logprob: -8.758255004882812
    8. 'k' → logprob: -9.133255004882812
    9. ')a' → logprob: -9.383255004882812
    10. '
' → logprob: -9.508255004882812

Token 3382: '_j' (ID: 12021)
  Prédit: '_j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_j' → logprob: -0.045092709362506866
    2. ',' → logprob: -3.170092821121216
    3. '_,' → logprob: -7.045092582702637
    4. ',j' → logprob: -7.670092582702637
    5. ')' → logprob: -8.295092582702637
    6. '       ' → logprob: -8.670092582702637
    7. '```' → logprob: -9.295092582702637
    8. ')_' → logprob: -9.920092582702637
    9. '           ' → logprob: -10.420092582702637
    10. '   ' → logprob: -10.545092582702637

Token 3383: ',b' (ID: 17568)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0011371198343113065
    2. ',int' → logprob: -7.2511372566223145
    3. ',j' → logprob: -9.001136779785156
    4. ',b' → logprob: -9.251136779785156
    5. ',
' → logprob: -9.501136779785156
    6. ',a' → logprob: -10.126136779785156
    7. ',k' → logprob: -10.376136779785156
    8. ' ,' → logprob: -11.501136779785156
    9. ',n' → logprob: -12.251136779785156
    10. '<|end|>' → logprob: -12.251136779785156

Token 3384: '_j' (ID: 12021)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.5277476906776428
    2. '_j' → logprob: -1.027747631072998
    3. '_,' → logprob: -3.152747631072998
    4. ',_' → logprob: -5.527747631072998
    5. ',int' → logprob: -6.527747631072998
    6. '_' → logprob: -6.777747631072998
    7. ',j' → logprob: -7.402747631072998
    8. 'int' → logprob: -7.902747631072998
    9. ')_' → logprob: -7.902747631072998
    10. ',
' → logprob: -8.027748107910156

Token 3385: ')' (ID: 8)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.058782633394002914
    2. '):
' → logprob: -3.0587825775146484
    3. ')' → logprob: -5.558782577514648
    4. '       ' → logprob: -6.558782577514648
    5. '[int' → logprob: -6.683782577514648
    6. ']:
' → logprob: -7.433782577514648
    7. '):' → logprob: -7.683782577514648
    8. '[
' → logprob: -8.308782577514648
    9. ']' → logprob: -8.558782577514648
    10. '[(' → logprob: -8.683782577514648

Token 3386: ' pairs' (ID: 24702)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -1.462679147720337
    2. '       ' → logprob: -1.462679147720337
    3. ':
' → logprob: -1.587679147720337
    4. '```' → logprob: -2.087679147720337
    5. '[]' → logprob: -2.462679147720337
    6. '=' → logprob: -3.337679147720337
    7. ' =' → logprob: -3.837679147720337
    8. '[
' → logprob: -3.837679147720337
    9. '[' → logprob: -4.712678909301758
    10. '
' → logprob: -5.462678909301758

Token 3387: ' such' (ID: 2238)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7962106466293335
    2. ':
' → logprob: -1.2962106466293335
    3. ':' → logprob: -1.9212106466293335
    4. '[' → logprob: -3.921210765838623
    5. ',' → logprob: -3.921210765838623
    6. '[]' → logprob: -4.171210765838623
    7. '[
' → logprob: -4.421210765838623
    8. '():
' → logprob: -4.671210765838623
    9. '):
' → logprob: -5.046210765838623
    10. '(' → logprob: -5.171210765838623

Token 3388: ' that' (ID: 484)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.07628042995929718
    2. '=
' → logprob: -3.701280355453491
    3. '```' → logprob: -4.57628059387207
    4. 'that' → logprob: -4.82628059387207
    5. '[
' → logprob: -5.20128059387207
    6. '[' → logprob: -5.57628059387207
    7. ':' → logprob: -5.70128059387207
    8. '       ' → logprob: -5.95128059387207
    9. 'as' → logprob: -6.07628059387207
    10. 'def' → logprob: -6.57628059387207

Token 3389: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.045731402933597565
    2. '(a' → logprob: -3.67073130607605
    3. 'bit' → logprob: -4.295731544494629
    4. 'b' → logprob: -6.045731544494629
    5. 'total' → logprob: -6.670731544494629
    6. '(bit' → logprob: -7.545731544494629
    7. '(total' → logprob: -8.170731544494629
    8. '   ' → logprob: -8.420731544494629
    9. '(' → logprob: -8.670731544494629
    10. '
' → logprob: -9.170731544494629

Token 3390: '_j' (ID: 12021)
  Prédit: '_j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_j' → logprob: -0.0002988776541315019
    2. '_' → logprob: -9.375298500061035
    3. '_,' → logprob: -9.750298500061035
    4. ',' → logprob: -10.000298500061035
    5. '_i' → logprob: -10.375298500061035
    6. '
' → logprob: -10.750298500061035
    7. '_
' → logprob: -11.250298500061035
    8. 'j' → logprob: -11.625298500061035
    9. '```' → logprob: -11.875298500061035
    10. '}_' → logprob: -12.625298500061035

Token 3391: ' +' (ID: 659)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.46314480900764465
    2. ',' → logprob: -1.3381447792053223
    3. '+' → logprob: -3.8381447792053223
    4. '==' → logprob: -3.9631447792053223
    5. '
' → logprob: -4.213144779205322
    6. ',j' → logprob: -4.838144779205322
    7. '```' → logprob: -4.838144779205322
    8. ',b' → logprob: -4.963144779205322
    9. '+=' → logprob: -4.963144779205322
    10. ' =' → logprob: -5.213144779205322

Token 3392: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.0023343784268945456
    2. ' b' → logprob: -6.5023345947265625
    3. 'bit' → logprob: -8.127334594726562
    4. '=' → logprob: -9.502334594726562
    5. ' =' → logprob: -9.752334594726562
    6. '
' → logprob: -9.877334594726562
    7. '```' → logprob: -10.252334594726562
    8. 'k' → logprob: -10.252334594726562
    9. '   ' → logprob: -10.377334594726562
    10. '           ' → logprob: -10.377334594726562

Token 3393: '_j' (ID: 12021)
  Prédit: '_j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_j' → logprob: -0.011532507836818695
    2. '_' → logprob: -4.511532306671143
    3. '_i' → logprob: -8.7615327835083
    4. ')_' → logprob: -9.0115327835083
    5. '```' → logprob: -9.1365327835083
    6. ''_' → logprob: -10.5115327835083
    7. '=' → logprob: -10.8865327835083
    8. ')' → logprob: -11.2615327835083
    9. '+' → logprob: -11.6365327835083
    10. ',' → logprob: -12.3865327835083

Token 3394: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.15134117007255554
    2. ' ==' → logprob: -2.901341199874878
    3. '==' → logprob: -3.026341199874878
    4. ' =' → logprob: -3.401341199874878
    5. ')' → logprob: -6.651340961456299
    6. '```' → logprob: -7.026340961456299
    7. '=
' → logprob: -8.151341438293457
    8. '==
' → logprob: -8.276341438293457
    9. '       ' → logprob: -8.776341438293457
    10. ',' → logprob: -9.401341438293457

Token 3395: ' bit' (ID: 3546)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -1.3587334156036377
    2. 'bit' → logprob: -1.3587334156036377
    3. 'total' → logprob: -1.4837334156036377
    4. ' total' → logprob: -2.3587334156036377
    5. ' bit' → logprob: -2.4837334156036377
    6. ' k' → logprob: -3.4837334156036377
    7. 'i' → logprob: -4.608733177185059
    8. 'int' → logprob: -4.733733177185059
    9. 'the' → logprob: -4.858733177185059
    10. 'position' → logprob: -5.108733177185059

Token 3396: ' position' (ID: 4010)
  Prédit: 'position'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'position' → logprob: -1.230146050453186
    2. '_set' → logprob: -1.480146050453186
    3. '_position' → logprob: -1.730146050453186
    4. '_positions' → logprob: -1.730146050453186
    5. '```' → logprob: -2.7301459312438965
    6. '_pos' → logprob: -4.6051459312438965
    7. 'set' → logprob: -4.7301459312438965
    8. '1' → logprob: -4.9801459312438965
    9. '
' → logprob: -5.1051459312438965
    10. 'positions' → logprob: -5.1051459312438965

Token 3397: '.
' (ID: 558)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.05150943994522095
    2. '
' → logprob: -4.551509380340576
    3. ' =' → logprob: -4.926509380340576
    4. ':
' → logprob: -5.301509380340576
    5. '           ' → logprob: -5.301509380340576
    6. ',' → logprob: -5.676509380340576
    7. ':' → logprob: -6.051509380340576
    8. '```' → logprob: -6.051509380340576
    9. '):
' → logprob: -6.301509380340576
    10. '=' → logprob: -6.301509380340576

Token 3398: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0013317868579179049
    2. '```' → logprob: -6.876331806182861
    3. '           ' → logprob: -9.126331329345703
    4. '        
' → logprob: -10.001331329345703
    5. '(' → logprob: -10.501331329345703
    6. ',' → logprob: -10.501331329345703
    7. ':' → logprob: -11.001331329345703
    8. '   ' → logprob: -11.126331329345703
    9. ':
' → logprob: -11.626331329345703
    10. '``' → logprob: -11.876331329345703

Token 3399: ' Choose' (ID: 25151)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.005403677001595497
    2. '```' → logprob: -5.255403518676758
    3. '        
' → logprob: -9.880403518676758
    4. '(' → logprob: -10.505403518676758
    5. '``' → logprob: -10.755403518676758
    6. '   ' → logprob: -11.130403518676758
    7. '
' → logprob: -11.380403518676758
    8. '`' → logprob: -12.005403518676758
    9. ')' → logprob: -12.005403518676758
    10. 'return' → logprob: -12.130403518676758

Token 3400: ' b' (ID: 287)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.031216692179441452
    2. '(' → logprob: -4.781216621398926
    3. 'a' → logprob: -4.906216621398926
    4. 'b' → logprob: -5.281216621398926
    5. '[' → logprob: -5.406216621398926
    6. '[(' → logprob: -6.656216621398926
    7. '[
' → logprob: -6.781216621398926
    8. '```' → logprob: -6.906216621398926
    9. ' (' → logprob: -7.406216621398926
    10. '(a' → logprob: -8.156216621398926

Token 3401: '_j' (ID: 12021)
  Prédit: '_j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_j' → logprob: -0.17633764445781708
    2. '=' → logprob: -1.9263375997543335
    3. '0' → logprob: -4.801337718963623
    4. ' =' → logprob: -5.176337718963623
    5. '```' → logprob: -6.551337718963623
    6. '`' → logprob: -8.551337242126465
    7. 'j' → logprob: -9.301337242126465
    8. '
' → logprob: -9.801337242126465
    9. '_' → logprob: -9.926337242126465
    10. ')' → logprob: -10.051337242126465

Token 3402: '=' (ID: 28)
  Prédit: '='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0398002564907074
    2. ' =' → logprob: -3.4148001670837402
    3. '0' → logprob: -5.28980016708374
    4. ',' → logprob: -7.16480016708374
    5. '```' → logprob: -9.164800643920898
    6. '
' → logprob: -9.914800643920898
    7. 'a' → logprob: -10.414800643920898
    8. '=
' → logprob: -11.039800643920898
    9. '=b' → logprob: -11.039800643920898
    10. '=a' → logprob: -11.039800643920898

Token 3403: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -3.292907877039397e-06
    2. ' ' → logprob: -12.87500286102295
    3. '```' → logprob: -15.12500286102295
    4. '=' → logprob: -15.37500286102295
    5. '   ' → logprob: -16.875003814697266
    6. ',' → logprob: -17.000003814697266
    7. '`' → logprob: -17.375003814697266
    8. '[' → logprob: -18.000003814697266
    9. '<|end|>' → logprob: -18.125003814697266
    10. '
' → logprob: -18.375003814697266

Token 3404: ' for' (ID: 395)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.05016636103391647
    2. '
' → logprob: -3.175166368484497
    3. ',' → logprob: -6.425166130065918
    4. '```' → logprob: -6.550166130065918
    5. '           ' → logprob: -7.050166130065918
    6. ' for' → logprob: -7.425166130065918
    7. 'return' → logprob: -7.425166130065918
    8. ':
' → logprob: -7.675166130065918
    9. '        
' → logprob: -7.925166130065918
    10. '   ' → logprob: -8.300166130065918

Token 3405: ' minimal' (ID: 19957)
  Prédit: 'each'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'each' → logprob: -0.4868825078010559
    2. 'all' → logprob: -1.3618824481964111
    3. 'a' → logprob: -2.611882448196411
    4. 'bit' → logprob: -3.861882448196411
    5. ' each' → logprob: -4.11188268661499
    6. ' all' → logprob: -5.23688268661499
    7. '_' → logprob: -5.73688268661499
    8. 'the' → logprob: -5.86188268661499
    9. '_j' → logprob: -6.11188268661499
    10. ' bit' → logprob: -6.61188268661499

Token 3406: ' complexity' (ID: 37588)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.3844358026981354
    2. 'j' → logprob: -2.8844358921051025
    3. 'bit' → logprob: -3.0094358921051025
    4. 'bits' → logprob: -3.5094358921051025
    5. '_j' → logprob: -3.6344358921051025
    6. 'def' → logprob: -4.009435653686523
    7. ' a' → logprob: -4.134435653686523
    8. '```' → logprob: -4.134435653686523
    9. 'chunk' → logprob: -4.259435653686523
    10. '`' → logprob: -4.384435653686523

Token 3407: '.
' (ID: 558)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.003748179180547595
    2. '
' → logprob: -6.503748416900635
    3. ':
' → logprob: -6.878748416900635
    4. '   ' → logprob: -7.878748416900635
    5. '(self' → logprob: -8.378747940063477
    6. '```' → logprob: -8.878747940063477
    7. ':' → logprob: -9.253747940063477
    8. '(' → logprob: -9.503747940063477
    9. ' (' → logprob: -9.878747940063477
    10. 'return' → logprob: -10.503747940063477

Token 3408: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.001978118671104312
    2. '```' → logprob: -6.251977920532227
    3. '
' → logprob: -11.501977920532227
    4. '``' → logprob: -11.626977920532227
    5. ':' → logprob: -12.501977920532227
    6. ')' → logprob: -12.626977920532227
    7. ':
' → logprob: -12.626977920532227
    8. '):
' → logprob: -12.751977920532227
    9. '`' → logprob: -12.751977920532227
    10. '   ' → logprob: -12.751977920532227

Token 3409: ' """
' (ID: 7037)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0010919966734945774
    2. '```' → logprob: -7.126091957092285
    3. '):
' → logprob: -8.626091957092285
    4. ')' → logprob: -10.251091957092285
    5. ':
' → logprob: -10.876091957092285
    6. '
' → logprob: -11.251091957092285
    7. '   ' → logprob: -11.251091957092285
    8. '``' → logprob: -12.126091957092285
    9. '\n' → logprob: -12.251091957092285
    10. ':' → logprob: -12.501091957092285

Token 3410: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.000530871853698045
    2. '```' → logprob: -7.62553071975708
    3. 'return' → logprob: -11.375531196594238
    4. ':' → logprob: -12.375531196594238
    5. 'tokens' → logprob: -12.500531196594238
    6. '   ' → logprob: -12.750531196594238
    7. '        
' → logprob: -12.750531196594238
    8. '``' → logprob: -12.875531196594238
    9. ',' → logprob: -13.250531196594238
    10. '           ' → logprob: -13.375531196594238

Token 3411: ' chunks' (ID: 53440)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.5038356184959412
    2. '       ' → logprob: -1.003835678100586
    3. 'bits' → logprob: -3.878835678100586
    4. 'res' → logprob: -6.128835678100586
    5. 'chunks' (adapté à ' chunks') → logprob: -6.128835678100586
    6. 'results' → logprob: -6.378835678100586
    7. 'output' → logprob: -6.378835678100586
    8. '```' → logprob: -7.378835678100586
    9. 'outputs' → logprob: -10.003835678100586
    10. 'de' → logprob: -10.253835678100586

Token 3412: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.2020179033279419
    2. ' =' → logprob: -1.702017903327942
    3. '=[]' → logprob: -7.452017784118652
    4. '=[]
' → logprob: -11.577017784118652
    5. '       ' → logprob: -12.202017784118652
    6. '.append' → logprob: -13.077017784118652
    7. '   ' → logprob: -13.327017784118652
    8. ':' → logprob: -13.452017784118652
    9. '[]' → logprob: -13.702017784118652
    10. '=[' → logprob: -14.452017784118652

Token 3413: ' []
' (ID: 8911)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.005241937469691038
    2. '[]
' → logprob: -5.255241870880127
    3. ' []' → logprob: -12.005242347717285
    4. '[]

' → logprob: -13.755242347717285
    5. '[' → logprob: -14.255242347717285
    6. '[]"' → logprob: -16.13024139404297
    7. '[
' → logprob: -16.75524139404297
    8. '[]}' → logprob: -16.88024139404297
    9. ' []
' → logprob: -18.13024139404297
    10. '[])' → logprob: -18.25524139404297

Token 3414: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -6.289473822107539e-05
    2. 'i' → logprob: -10.875062942504883
    3. 'for' → logprob: -11.000062942504883
    4. '```' → logprob: -11.000062942504883
    5. 'pos' → logprob: -12.625062942504883
    6. 'bit' → logprob: -13.625062942504883
    7. ' for' → logprob: -13.750062942504883
    8. 'num' → logprob: -14.125062942504883
    9. 'mask' → logprob: -14.250062942504883
    10. 'n' → logprob: -14.250062942504883

Token 3415: ' bit' (ID: 3546)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pos' → logprob: -0.817048192024231
    2. 'bit' (adapté à ' bit') → logprob: -1.442048192024231
    3. 'for' → logprob: -1.567048192024231
    4. 'i' → logprob: -2.6920480728149414
    5. '       ' → logprob: -3.3170480728149414
    6. 'position' → logprob: -5.567048072814941
    7. 'k' → logprob: -5.817048072814941
    8. 'mask' → logprob: -6.942048072814941
    9. 'shift' → logprob: -7.817048072814941
    10. '```' → logprob: -8.567048072814941

Token 3416: '_pos' (ID: 14692)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.7040120363235474
    2. '=' → logprob: -1.3290120363235474
    3. '_pos' → logprob: -1.5790120363235474
    4. '_position' → logprob: -4.704011917114258
    5. 'pos' → logprob: -4.829011917114258
    6. '_' → logprob: -5.079011917114258
    7. '_index' → logprob: -5.204011917114258
    8. '_idx' → logprob: -5.829011917114258
    9. '_positions' → logprob: -7.329011917114258
    10. 's' → logprob: -7.454011917114258

Token 3417: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.07902561873197556
    2. ' =' → logprob: -2.5790255069732666
    3. 'for' → logprob: -9.704025268554688
    4. ' in' → logprob: -10.954025268554688
    5. '       ' → logprob: -11.329025268554688
    6. ',' → logprob: -11.329025268554688
    7. '0' → logprob: -11.829025268554688
    8. '+=' → logprob: -11.954025268554688
    9. '        ' → logprob: -12.204025268554688
    10. ' for' → logprob: -12.579025268554688

Token 3418: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -4.320199877838604e-07
    2. ' ' → logprob: -14.75
    3. '       ' → logprob: -17.625
    4. '   ' → logprob: -20.25
    5. '        ' → logprob: -20.375
    6. '(' → logprob: -20.75
    7. '000' → logprob: -20.75
    8. '           ' → logprob: -21.125
    9. '=' → logprob: -21.125
    10. '1' → logprob: -21.5

Token 3419: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -4.320199877838604e-07
    2. ' ' → logprob: -14.875
    3. '1' → logprob: -18.875
    4. '000' → logprob: -19.5
    5. '       ' → logprob: -19.875
    6. '=' → logprob: -20.25
    7. '   ' → logprob: -20.625
    8. '00' → logprob: -20.75
    9. '[' → logprob: -21.875
    10. 'total' → logprob: -22.0

Token 3420: '
' (ID: 198)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.37237221002578735
    2. '       ' → logprob: -1.4973721504211426
    3. '
' → logprob: -2.7473721504211426
    4. ' while' → logprob: -4.247372150421143
    5. ':' → logprob: -6.122372150421143
    6. '```' → logprob: -6.747372150421143
    7. ':
' → logprob: -6.872372150421143
    8. '        
' → logprob: -6.997372150421143
    9. '	while' → logprob: -7.122372150421143
    10. '   ' → logprob: -7.622372150421143

Token 3421: '       ' (ID: 309)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.5779691338539124
    2. '       ' → logprob: -0.9529691338539124
    3. ' while' → logprob: -3.2029690742492676
    4. '```' → logprob: -5.577969074249268
    5. '   ' → logprob: -5.827969074249268
    6. '	while' → logprob: -6.077969074249268
    7. '	' → logprob: -6.702969074249268
    8. '
' → logprob: -6.827969074249268
    9. ',' → logprob: -8.327969551086426
    10. '           ' → logprob: -8.452969551086426

Token 3422: ' while' (ID: 2049)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' (adapté à ' while') → logprob: -0.0009168167016468942
    2. '       ' → logprob: -7.250916957855225
    3. ' while' → logprob: -8.500916481018066
    4. '   ' → logprob: -13.750916481018066
    5. '```' → logprob: -14.000916481018066
    6. '	while' → logprob: -14.625916481018066
    7. 'total' → logprob: -14.875916481018066
    8. 'for' → logprob: -15.125916481018066
    9. '
' → logprob: -15.375916481018066
    10. 'While' → logprob: -15.750916481018066

Token 3423: ' total' (ID: 3609)
  Prédit: 'total'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'total' → logprob: -0.02821251004934311
    2. ' total' → logprob: -3.653212547302246
    3. '(total' → logprob: -6.278212547302246
    4. '(' → logprob: -11.653212547302246
    5. '       ' → logprob: -11.653212547302246
    6. ' (' → logprob: -11.653212547302246
    7. '   ' → logprob: -12.028212547302246
    8. '           ' → logprob: -14.778212547302246
    9. ' ' → logprob: -15.153212547302246
    10. '    ' → logprob: -15.653212547302246

Token 3424: '_mass' (ID: 98668)
  Prédit: '_mass'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_mass' → logprob: -0.01927676424384117
    2. '&' → logprob: -4.8942766189575195
    3. ' &' → logprob: -5.0192766189575195
    4. 'mass' → logprob: -5.8942766189575195
    5. '>' → logprob: -7.8942766189575195
    6. '_' → logprob: -8.39427661895752
    7. ' mass' → logprob: -8.51927661895752
    8. '_total' → logprob: -8.51927661895752
    9. '   ' → logprob: -9.14427661895752
    10. 'total' → logprob: -9.39427661895752

Token 3425: ' >' (ID: 1424)
  Prédit: '&'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '&' → logprob: -0.013289051130414009
    2. ' &' → logprob: -4.388288974761963
    3. '&
' → logprob: -7.388288974761963
    4. '&gt' → logprob: -9.513289451599121
    5. '
' → logprob: -10.888289451599121
    6. '>' → logprob: -11.013289451599121
    7. '&amp' → logprob: -11.388289451599121
    8. ' &
' → logprob: -11.513289451599121
    9. '   ' → logprob: -11.888289451599121
    10. '[' → logprob: -12.138289451599121

Token 3426: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00030293059535324574
    2. ' ' → logprob: -8.125303268432617
    3. '=' → logprob: -12.750303268432617
    4. '       ' → logprob: -13.500303268432617
    5. '1' → logprob: -14.000303268432617
    6. '>' → logprob: -14.625303268432617
    7. '           ' → logprob: -14.875303268432617
    8. '   ' → logprob: -15.125303268432617
    9. '
' → logprob: -16.000303268432617
    10. '        ' → logprob: -16.750303268432617

Token 3427: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -7.107425062713446e-06
    2. ' ' → logprob: -11.875006675720215
    3. '=' → logprob: -17.00000762939453
    4. '
' → logprob: -17.12500762939453
    5. '1' → logprob: -17.25000762939453
    6. '>' → logprob: -17.87500762939453
    7. '   ' → logprob: -18.25000762939453
    8. '       ' → logprob: -18.75000762939453
    9. '           ' → logprob: -19.00000762939453
    10. ':
' → logprob: -19.25000762939453

Token 3428: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.1374174952507019
    2. ':' → logprob: -2.3874175548553467
    3. '           ' → logprob: -3.3874175548553467
    4. '       ' → logprob: -6.137417316436768
    5. '{' → logprob: -9.387417793273926
    6. ' if' → logprob: -9.512417793273926
    7. ',' → logprob: -9.637417793273926
    8. 'if' → logprob: -9.887417793273926
    9. '{
' → logprob: -9.887417793273926
    10. ' :
' → logprob: -10.262417793273926

Token 3429: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0037779819685965776
    2. '       ' → logprob: -5.878777980804443
    3. '	       ' → logprob: -7.503777980804443
    4. ' if' → logprob: -9.128778457641602
    5. '```' → logprob: -9.253778457641602
    6. 'if' → logprob: -9.378778457641602
    7. '   ' → logprob: -10.003778457641602
    8. '	   ' → logprob: -10.253778457641602
    9. '		' → logprob: -11.878778457641602
    10. '    	   ' → logprob: -12.003778457641602

Token 3430: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.005331113003194332
    2. '           ' → logprob: -5.505331039428711
    3. '       ' → logprob: -7.380331039428711
    4. ' if' → logprob: -7.380331039428711
    5. 'If' → logprob: -13.380331039428711
    6. '```' → logprob: -13.380331039428711
    7. '   ' → logprob: -14.005331039428711
    8. '{
' → logprob: -14.880331039428711
    9. '	if' → logprob: -15.130331039428711
    10. '               ' → logprob: -15.630331039428711

Token 3431: ' total' (ID: 3609)
  Prédit: 'total'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'total' → logprob: -0.040989235043525696
    2. '(total' → logprob: -3.7909891605377197
    3. ' total' → logprob: -4.040989398956299
    4. ' (' → logprob: -12.16598892211914
    5. '   ' → logprob: -13.54098892211914
    6. '           ' → logprob: -15.04098892211914
    7. '       ' → logprob: -16.04098892211914
    8. '(' → logprob: -16.04098892211914
    9. '	total' → logprob: -18.29098892211914
    10. '               ' → logprob: -18.29098892211914

Token 3432: '_mass' (ID: 98668)
  Prédit: '_mass'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_mass' → logprob: -0.00011546355381142348
    2. '&' → logprob: -9.375115394592285
    3. 'mass' → logprob: -10.500115394592285
    4. 'Mass' → logprob: -13.000115394592285
    5. ' &' → logprob: -15.250115394592285
    6. '```' → logprob: -15.625115394592285
    7. '_m' → logprob: -16.0001163482666
    8. '&_' → logprob: -16.1251163482666
    9. '_' → logprob: -16.3751163482666
    10. '&
' → logprob: -16.8751163482666

Token 3433: ' &' (ID: 827)
  Prédit: '&'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '&' → logprob: -0.023251881822943687
    2. ' &' → logprob: -3.77325177192688
    3. '&
' → logprob: -12.1482515335083
    4. '&amp' → logprob: -14.7732515335083
    5. '&nbsp' → logprob: -15.1482515335083
    6. ' &
' → logprob: -16.148252487182617
    7. '＆' → logprob: -16.398252487182617
    8. '   ' → logprob: -16.523252487182617
    9. ' ' → logprob: -16.523252487182617
    10. '&B' → logprob: -17.023252487182617

Token 3434: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0004027865652460605
    2. ' ' → logprob: -8.250402450561523
    3. '(' → logprob: -9.250402450561523
    4. ' (' → logprob: -10.000402450561523
    5. '           ' → logprob: -18.000402450561523
    6. '   ' → logprob: -18.125402450561523
    7. '0' → logprob: -19.000402450561523
    8. '               ' → logprob: -19.250402450561523
    9. '                   ' → logprob: -19.750402450561523
    10. '((' → logprob: -20.500402450561523

Token 3435: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0024762547109276056
    2. '(' → logprob: -6.002476215362549
    3. ' (' → logprob: -14.502476692199707
    4. ' ' → logprob: -15.877476692199707
    5. '((' → logprob: -18.75247573852539
    6. '   ' → logprob: -19.25247573852539
    7. '{' → logprob: -19.62747573852539
    8. '0' → logprob: -21.50247573852539
    9. '(i' → logprob: -21.50247573852539
    10. '_' → logprob: -21.62747573852539

Token 3436: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.5805109143257141
    2. ':' → logprob: -0.8305109143257141
    3. '               ' → logprob: -5.705511093139648
    4. '):
' → logprob: -7.330511093139648
    5. '           ' → logprob: -9.080511093139648
    6. '==' → logprob: -9.580511093139648
    7. '```' → logprob: -9.705511093139648
    8. ' ==' → logprob: -9.955511093139648
    9. '):' → logprob: -10.205511093139648
    10. '=' → logprob: -10.205511093139648

Token 3437: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.12057682871818542
    2. '           ' → logprob: -2.620576858520508
    3. 'chunks' → logprob: -3.245576858520508
    4. '(ch' → logprob: -7.495576858520508
    5. 'ch' → logprob: -7.870576858520508
    6. ' chunks' → logprob: -8.120576858520508
    7. '                   ' → logprob: -8.620576858520508
    8. 'tokens' → logprob: -8.995576858520508
    9. '[' → logprob: -9.495576858520508
    10. '```' → logprob: -9.620576858520508

Token 3438: ' chunks' (ID: 53440)
  Prédit: 'chunks'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'chunks' (adapté à ' chunks') → logprob: -0.002742935437709093
    2. '               ' → logprob: -6.127742767333984
    3. ' chunks' → logprob: -8.502742767333984
    4. 'ch' → logprob: -8.877742767333984
    5. '(ch' → logprob: -9.627742767333984
    6. '   ' → logprob: -10.002742767333984
    7. '           ' → logprob: -10.002742767333984
    8. '                   ' → logprob: -10.127742767333984
    9. '	ch' → logprob: -11.752742767333984
    10. 'chips' → logprob: -12.127742767333984

Token 3439: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.00043567578541114926
    2. '.' → logprob: -7.750435829162598
    3. 'append' → logprob: -12.875435829162598
    4. '.extend' → logprob: -13.750435829162598
    5. '           ' → logprob: -14.500435829162598
    6. ' .' → logprob: -15.000435829162598
    7. '.Append' → logprob: -16.00043487548828
    8. '.app' → logprob: -16.00043487548828
    9. '       ' → logprob: -16.37543487548828
    10. 'Append' → logprob: -16.62543487548828

Token 3440: '((' (ID: 2054)
  Prédit: '(bit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(bit' → logprob: -0.00538067240267992
    2. '(' → logprob: -5.255380630493164
    3. '((' → logprob: -9.505380630493164
    4. ' (' → logprob: -9.755380630493164
    5. '(Bit' → logprob: -11.255380630493164
    6. '   ' → logprob: -14.505380630493164
    7. '(bitmap' → logprob: -15.255380630493164
    8. '(tuple' → logprob: -15.380380630493164
    9. '(token' → logprob: -16.255380630493164
    10. '(bin' → logprob: -16.505380630493164

Token 3441: 'bit' (ID: 6516)
  Prédit: 'bit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bit' → logprob: -2.339278580620885e-06
    2. ' bit' → logprob: -13.000001907348633
    3. '(bit' → logprob: -20.000001907348633
    4. '_bit' → logprob: -23.250001907348633
    5. '.bit' → logprob: -23.875001907348633
    6. '   ' → logprob: -24.000001907348633
    7. '               ' → logprob: -24.000001907348633
    8. '           ' → logprob: -24.125001907348633
    9. '-bit' → logprob: -24.250001907348633
    10. 'bitr' → logprob: -24.500001907348633

Token 3442: '_pos' (ID: 14692)
  Prédit: '_pos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_pos' → logprob: -0.0003944496565964073
    2. 'pos' → logprob: -8.250394821166992
    3. 'Pos' → logprob: -9.125394821166992
    4. '_' → logprob: -11.625394821166992
    5. '0' → logprob: -12.500394821166992
    6. '           ' → logprob: -12.500394821166992
    7. ')' → logprob: -12.750394821166992
    8. '```' → logprob: -13.375394821166992
    9. '_)' → logprob: -14.375394821166992
    10. '_POS' → logprob: -14.625394821166992

Token 3443: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -9.317247167928144e-05
    2. ' ,' → logprob: -9.875093460083008
    3. ',
' → logprob: -11.000093460083008
    4. ',None' → logprob: -11.500093460083008
    5. '<|end|>' → logprob: -12.250093460083008
    6. ')' → logprob: -13.250093460083008
    7. '0' → logprob: -13.625093460083008
    8. '           ' → logprob: -13.750093460083008
    9. ','' → logprob: -14.000093460083008
    10. '               ' → logprob: -14.125093460083008

Token 3444: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: 0.0
    2. ' ' → logprob: -17.125
    3. '۰' → logprob: -22.375
    4. '   ' → logprob: -23.0
    5. '00' → logprob: -23.5
    6. ')' → logprob: -23.5
    7. '```' → logprob: -23.625
    8. '000' → logprob: -24.25
    9. '０' → logprob: -25.0
    10. ' ' → logprob: -25.25

Token 3445: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: 0.0
    2. ' ' → logprob: -17.625
    3. '   ' → logprob: -21.5
    4. '۰' → logprob: -23.0
    5. ')' → logprob: -23.25
    6. '```' → logprob: -23.75
    7. '00' → logprob: -24.0
    8. '０' → logprob: -24.125
    9. '
' → logprob: -24.875
    10. '000' → logprob: -25.375

Token 3446: '))
' (ID: 2210)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.1631786972284317
    2. '))
' → logprob: -1.9131786823272705
    3. '           ' → logprob: -5.91317892074585
    4. '               ' → logprob: -9.038178443908691
    5. ')' → logprob: -9.163178443908691
    6. ')
' → logprob: -11.538178443908691
    7. '))
' → logprob: -12.038178443908691
    8. '       ' → logprob: -13.913178443908691
    9. '));' → logprob: -13.913178443908691
    10. '))}
' → logprob: -14.288178443908691

Token 3447: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -9.150362166110426e-05
    2. '       ' → logprob: -10.250091552734375
    3. '               ' → logprob: -11.125091552734375
    4. 'total' → logprob: -11.500091552734375
    5. '            
' → logprob: -11.750091552734375
    6. '		' → logprob: -12.125091552734375
    7. '```' → logprob: -12.625091552734375
    8. '
' → logprob: -12.750091552734375
    9. '          ' → logprob: -13.000091552734375
    10. '   ' → logprob: -13.625091552734375

Token 3448: ' total' (ID: 3609)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.6946005821228027
    2. 'total' (adapté à ' total') → logprob: -0.9446005821228027
    3. 'bit' → logprob: -2.1946005821228027
    4. ' total' → logprob: -8.069601058959961
    5. ' bit' → logprob: -9.444601058959961
    6. '```' → logprob: -9.819601058959961
    7. '
' → logprob: -10.819601058959961
    8. '       ' → logprob: -11.944601058959961
    9. '``' → logprob: -12.194601058959961
    10. 'bits' → logprob: -12.319601058959961

Token 3449: '_mass' (ID: 98668)
  Prédit: '_mass'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_mass' → logprob: -4.620622712536715e-05
    2. 'mass' → logprob: -10.000045776367188
    3. 'Mass' → logprob: -14.125045776367188
    4. ' mass' → logprob: -18.375045776367188
    5. '>>' → logprob: -19.000045776367188
    6. ' Mass' → logprob: -20.250045776367188
    7. '>>>' → logprob: -20.500045776367188
    8. '=' → logprob: -20.750045776367188
    9. '_m' → logprob: -20.750045776367188
    10. '_mask' → logprob: -20.750045776367188

Token 3450: ' >>=' (ID: 81952)
  Prédit: '>>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>>' → logprob: -0.003130663186311722
    2. ' >>=' → logprob: -5.8781304359436035
    3. '=' → logprob: -8.128130912780762
    4. '>>>' → logprob: -11.128130912780762
    5. '```' → logprob: -12.378130912780762
    6. '//=' → logprob: -12.628130912780762
    7. '≫' → logprob: -13.503130912780762
    8. '>>&' → logprob: -13.753130912780762
    9. '   ' → logprob: -14.003130912780762
    10. '<<' → logprob: -14.003130912780762

Token 3451: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: 0.0
    2. ' ' → logprob: -16.875
    3. '```' → logprob: -20.75
    4. '   ' → logprob: -21.125
    5. '
' → logprob: -22.25
    6. '１' → logprob: -22.375
    7. '`' → logprob: -23.875
    8. '``' → logprob: -24.0
    9. '=' → logprob: -24.5
    10. '۱' → logprob: -24.5

Token 3452: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -16.25
    3. '```' → logprob: -19.25
    4. '   ' → logprob: -19.875
    5. '
' → logprob: -22.0
    6. '１' → logprob: -22.25
    7. '0' → logprob: -22.5
    8. '`' → logprob: -22.5
    9. '``' → logprob: -23.125
    10. '       ' → logprob: -23.5

Token 3453: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0037613706663250923
    2. '```' → logprob: -6.128761291503906
    3. '
' → logprob: -7.253761291503906
    4. 'bit' → logprob: -8.003761291503906
    5. '``' → logprob: -8.003761291503906
    6. '       ' → logprob: -9.503761291503906
    7. '\n' → logprob: -10.503761291503906
    8. '   ' → logprob: -10.628761291503906
    9. '               ' → logprob: -10.878761291503906
    10. '\' → logprob: -11.753761291503906

Token 3454: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.15386465191841125
    2. '```' → logprob: -2.153864622116089
    3. '``' → logprob: -4.028864860534668
    4. '       ' → logprob: -5.153864860534668
    5. '
' → logprob: -6.278864860534668
    6. '   ' → logprob: -7.403864860534668
    7. '`' → logprob: -9.028864860534668
    8. '\n' → logprob: -9.278864860534668
    9. 'bit' → logprob: -10.028864860534668
    10. '\' → logprob: -10.153864860534668

Token 3455: ' bit' (ID: 3546)
  Prédit: 'bit'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bit' (adapté à ' bit') → logprob: -0.20175020396709442
    2. '           ' → logprob: -1.7017501592636108
    3. ' bit' → logprob: -8.576749801635742
    4. '```' → logprob: -9.576749801635742
    5. '       ' → logprob: -10.201749801635742
    6. '   ' → logprob: -10.326749801635742
    7. '               ' → logprob: -12.951749801635742
    8. '``' → logprob: -12.951749801635742
    9. '++' → logprob: -13.326749801635742
    10. '		' → logprob: -14.201749801635742

Token 3456: '_pos' (ID: 14692)
  Prédit: '_pos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_pos' → logprob: -0.0004061242798343301
    2. '+=' → logprob: -8.000406265258789
    3. 'pos' → logprob: -10.250406265258789
    4. '+' → logprob: -10.625406265258789
    5. ' +=' → logprob: -12.000406265258789
    6. '_' → logprob: -13.125406265258789
    7. '=' → logprob: -14.125406265258789
    8. 'Pos' → logprob: -14.250406265258789
    9. 'bit' → logprob: -15.250406265258789
    10. '```' → logprob: -15.375406265258789

Token 3457: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -4.537180211627856e-05
    2. '=' → logprob: -10.375045776367188
    3. ' +=' → logprob: -12.125045776367188
    4. '1' → logprob: -12.125045776367188
    5. '+' → logprob: -12.750045776367188
    6. '```' → logprob: -15.375045776367188
    7. ']+=' → logprob: -16.375045776367188
    8. '   ' → logprob: -18.500045776367188
    9. '[' → logprob: -19.375045776367188
    10. '+="' → logprob: -19.375045776367188

Token 3458: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: 0.0
    2. ' ' → logprob: -17.625
    3. '   ' → logprob: -21.25
    4. '```' → logprob: -21.5
    5. '１' → logprob: -22.75
    6. '           ' → logprob: -23.25
    7. '       ' → logprob: -24.375
    8. '0' → logprob: -24.875
    9. '۱' → logprob: -25.0
    10. '
' → logprob: -25.125

Token 3459: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: 0.0
    2. ' ' → logprob: -18.5
    3. '   ' → logprob: -22.625
    4. '１' → logprob: -23.75
    5. '```' → logprob: -23.75
    6. '
' → logprob: -23.875
    7. '۱' → logprob: -25.5
    8. '  ' → logprob: -26.75
    9. '0' → logprob: -26.875
    10. '       ' → logprob: -27.0

Token 3460: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.010171088390052319
    2. '
' → logprob: -5.385170936584473
    3. 'return' → logprob: -5.635170936584473
    4. '```' → logprob: -7.135170936584473
    5. '	' → logprob: -7.635170936584473
    6. '<|end|>' → logprob: -8.260170936584473
    7. '	return' → logprob: -9.010170936584473
    8. '        
' → logprob: -9.510170936584473
    9. ' return' → logprob: -9.885170936584473
    10. '[' → logprob: -10.510170936584473

Token 3461: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00099648698233068
    2. 'return' → logprob: -7.0009965896606445
    3. '
' → logprob: -9.875996589660645
    4. '```' → logprob: -10.875996589660645
    5. '	' → logprob: -11.875996589660645
    6. ' return' → logprob: -12.625996589660645
    7. '	return' → logprob: -13.750996589660645
    8. '        
' → logprob: -14.125996589660645
    9. '   ' → logprob: -14.125996589660645
    10. '           ' → logprob: -14.750996589660645

Token 3462: ' return' (ID: 622)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.006766886916011572
    2. 'return' (adapté à ' return') → logprob: -5.0067667961120605
    3. '
' → logprob: -10.881767272949219
    4. '```' → logprob: -11.381767272949219
    5. ' return' → logprob: -11.506767272949219
    6. '   ' → logprob: -11.506767272949219
    7. '	return' → logprob: -14.631767272949219
    8. '           ' → logprob: -15.256767272949219
    9. '	' → logprob: -15.631767272949219
    10. '        
' → logprob: -16.25676727294922

Token 3463: ' sorted' (ID: 20099)
  Prédit: 'chunks'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'chunks' → logprob: -1.0325924449716695e-05
    2. ' chunks' → logprob: -11.50001049041748
    3. 'chips' → logprob: -17.000009536743164
    4. '[ch' → logprob: -17.125009536743164
    5. '_chunks' → logprob: -17.250009536743164
    6. '   ' → logprob: -18.000009536743164
    7. 'ch' → logprob: -18.125009536743164
    8. '[' → logprob: -18.750009536743164
    9. 'chunk' → logprob: -19.125009536743164
    10. 'tokens' → logprob: -19.375009536743164

Token 3464: '(ch' (ID: 15574)
  Prédit: '(ch'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(ch' → logprob: -0.0008429800509475172
    2. 'chunks' → logprob: -7.125843048095703
    3. '(chunk' → logprob: -10.625843048095703
    4. '(' → logprob: -12.250843048095703
    5. '((' → logprob: -12.375843048095703
    6. '(lambda' → logprob: -14.000843048095703
    7. '(key' → logprob: -14.250843048095703
    8. '_chunks' → logprob: -14.250843048095703
    9. 'ch' → logprob: -14.250843048095703
    10. '(
' → logprob: -14.625843048095703

Token 3465: 'unks' (ID: 39678)
  Prédit: 'unks'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'unks' → logprob: -0.48719707131385803
    2. '(ch' → logprob: -0.9871970415115356
    3. 'chunks' → logprob: -4.362196922302246
    4. '[ch' → logprob: -8.987196922302246
    5. '(' → logprob: -9.487196922302246
    6. 'uch' → logprob: -10.737196922302246
    7. '(un' → logprob: -10.987196922302246
    8. 'un' → logprob: -11.487196922302246
    9. 'unch' → logprob: -12.362196922302246
    10. 'unk' → logprob: -12.487196922302246

Token 3466: ',key' (ID: 119403)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.1354486495256424
    2. ',' → logprob: -2.760448694229126
    3. '       ' → logprob: -3.135448694229126
    4. '   ' → logprob: -5.760448455810547
    5. '(ch' → logprob: -5.760448455810547
    6. '(' → logprob: -6.010448455810547
    7. '           ' → logprob: -6.010448455810547
    8. '([]' → logprob: -6.885448455810547
    9. '(chunk' → logprob: -7.635448455810547
    10. ')return' → logprob: -7.635448455810547

Token 3467: '=lambda' (ID: 64865)
  Prédit: '=lambda'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=lambda' → logprob: -8.184812031686306e-05
    2. '=' → logprob: -10.000082015991211
    3. 'lambda' → logprob: -10.250082015991211
    4. '(lambda' → logprob: -14.375082015991211
    5. '```' → logprob: -15.125082015991211
    6. '=
' → logprob: -16.62508201599121
    7. '=None' → logprob: -16.87508201599121
    8. '=(' → logprob: -17.37508201599121
    9. '=str' → logprob: -17.37508201599121
    10. '=True' → logprob: -17.87508201599121

Token 3468: ' x' (ID: 1215)
  Prédit: 'lambda'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'lambda' → logprob: -0.00039504567394033074
    2. 'x' → logprob: -8.125394821166992
    3. '(lambda' → logprob: -9.875394821166992
    4. '=lambda' → logprob: -10.625394821166992
    5. ' lambda' → logprob: -11.125394821166992
    6. '   ' → logprob: -12.250394821166992
    7. 'a' → logprob: -14.125394821166992
    8. 'lam' → logprob: -14.500394821166992
    9. '_lambda' → logprob: -14.500394821166992
    10. '0' → logprob: -14.625394821166992

Token 3469: ':' (ID: 25)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.900763750076294
    2. 'lambda' → logprob: -0.900763750076294
    3. ':x' → logprob: -2.400763750076294
    4. ':' → logprob: -2.525763750076294
    5. '=lambda' → logprob: -4.900763511657715
    6. '(lambda' → logprob: -5.525763511657715
    7. '0' → logprob: -6.150763511657715
    8. '[' → logprob: -6.525763511657715
    9. '(x' → logprob: -7.525763511657715
    10. 'a' → logprob: -7.775763511657715

Token 3470: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.0031817557755857706
    2. 'lambda' → logprob: -5.7531819343566895
    3. ' x' → logprob: -13.378181457519531
    4. '0' → logprob: -13.753181457519531
    5. '(lambda' → logprob: -13.753181457519531
    6. ' lambda' → logprob: -15.378181457519531
    7. '=lambda' → logprob: -17.00318145751953
    8. '(x' → logprob: -17.25318145751953
    9. '_lambda' → logprob: -17.37818145751953
    10. '_' → logprob: -18.25318145751953

Token 3471: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.018410377204418182
    2. '0' → logprob: -4.0184102058410645
    3. ':' → logprob: -8.393410682678223
    4. '1' → logprob: -11.018410682678223
    5. 'x' → logprob: -11.893410682678223
    6. 'a' → logprob: -12.268410682678223
    7. ')[' → logprob: -13.393410682678223
    8. '(' → logprob: -14.018410682678223
    9. '.' → logprob: -14.393410682678223
    10. '```' → logprob: -14.518410682678223

Token 3472: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -6.027225754223764e-05
    2. '[' → logprob: -9.750060081481934
    3. '1' → logprob: -13.500060081481934
    4. '   ' → logprob: -15.500060081481934
    5. ' ' → logprob: -16.00006103515625
    6. 'a' → logprob: -16.75006103515625
    7. '
' → logprob: -16.87506103515625
    8. '```' → logprob: -17.50006103515625
    9. '(' → logprob: -17.75006103515625
    10. ':' → logprob: -18.00006103515625

Token 3473: '])

' (ID: 21045)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00143083231523633
    2. '[' → logprob: -7.251430988311768
    3. '))' → logprob: -7.501430988311768
    4. ')}' → logprob: -10.25143051147461
    5. ')]' → logprob: -10.37643051147461
    6. ')[' → logprob: -10.50143051147461
    7. '])' → logprob: -10.75143051147461
    8. ')])' → logprob: -11.50143051147461
    9. ')return' → logprob: -12.00143051147461
    10. ')`' → logprob: -12.12643051147461

Token 3474: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.018347766250371933
    2. 'def' → logprob: -4.14334774017334
    3. '```' → logprob: -6.14334774017334
    4. '<|end|>' → logprob: -8.89334774017334
    5. 'class' → logprob: -12.26834774017334
    6. '<|end|>' → logprob: -12.51834774017334
    7. '#' → logprob: -12.51834774017334
    8. '       ' → logprob: -13.01834774017334
    9. '	def' → logprob: -13.26834774017334
    10. '``' → logprob: -13.39334774017334

Token 3475: ' def' (ID: 1056)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0022047359962016344
    2. 'def' (adapté à ' def') → logprob: -6.752204895019531
    3. '<|end|>' → logprob: -7.502204895019531
    4. '```' → logprob: -7.752204895019531
    5. '<|end|>' → logprob: -10.877204895019531
    6. '
' → logprob: -11.252204895019531
    7. ')' → logprob: -12.127204895019531
    8. '       ' → logprob: -12.502204895019531
    9. '    
' → logprob: -12.627204895019531
    10. 'class' → logprob: -13.502204895019531

Token 3476: ' solve' (ID: 17722)
  Prédit: 'solve'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'solve' → logprob: -0.002842437708750367
    2. 'reg' → logprob: -6.752842426300049
    3. 'get' → logprob: -7.377842426300049
    4. 'run' → logprob: -8.002842903137207
    5. 'generate' → logprob: -8.502842903137207
    6. 'compute' → logprob: -8.752842903137207
    7. ' solve' → logprob: -8.877842903137207
    8. 'min' → logprob: -9.502842903137207
    9. 'minimal' → logprob: -9.502842903137207
    10. 'main' → logprob: -11.002842903137207

Token 3477: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.0026352303102612495
    2. '(
' → logprob: -6.8776350021362305
    3. '(' → logprob: -7.0026350021362305
    4. '   ' → logprob: -7.6276350021362305
    5. '       ' → logprob: -8.87763500213623
    6. '():
' → logprob: -10.37763500213623
    7. 'self' → logprob: -11.37763500213623
    8. '```' → logprob: -11.87763500213623
    9. 'def' → logprob: -13.25263500213623
    10. '():' → logprob: -13.37763500213623

Token 3478: ')' (ID: 8)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.07404251396656036
    2. '       ' → logprob: -3.699042558670044
    3. '():
' → logprob: -3.824042558670044
    4. '   ' → logprob: -4.449042320251465
    5. '(
' → logprob: -5.824042320251465
    6. ':' → logprob: -5.949042320251465
    7. '(' → logprob: -6.199042320251465
    8. '():' → logprob: -6.574042320251465
    9. '):
' → logprob: -6.699042320251465
    10. ':
' → logprob: -7.199042320251465

Token 3479: ' ->' (ID: 2747)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.8816155791282654
    2. ':
' → logprob: -1.5066156387329102
    3. '       ' → logprob: -1.6316156387329102
    4. '():
' → logprob: -2.75661563873291
    5. '(self' → logprob: -3.00661563873291
    6. '():' → logprob: -3.38161563873291
    7. '   ' → logprob: -5.63161563873291
    8. '{' → logprob: -5.75661563873291
    9. '[' → logprob: -5.88161563873291
    10. '(
' → logprob: -6.13161563873291

Token 3480: ' List' (ID: 2655)
  Prédit: 'List'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'List' → logprob: -0.0015711607411503792
    2. 'list' → logprob: -7.251571178436279
    3. ' List' → logprob: -7.751571178436279
    4. '[List' → logprob: -8.251570701599121
    5. '   ' → logprob: -9.376570701599121
    6. 'self' → logprob: -10.001570701599121
    7. '[
' → logprob: -11.501570701599121
    8. '_list' → logprob: -12.001570701599121
    9. '[]' → logprob: -12.126570701599121
    10. '
' → logprob: -12.501570701599121

Token 3481: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.20199784636497498
    2. '[List' → logprob: -1.7019978761672974
    3. '[(' → logprob: -7.451997756958008
    4. '[int' → logprob: -13.201997756958008
    5. '[
' → logprob: -13.326997756958008
    6. '[((' → logprob: -15.701997756958008
    7. '   ' → logprob: -15.701997756958008
    8. '[self' → logprob: -16.451997756958008
    9. ':
' → logprob: -16.576997756958008
    10. 'List' → logprob: -16.701997756958008

Token 3482: 'Tuple' (ID: 40048)
  Prédit: 'Tuple'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Tuple' → logprob: -2.2842308680992573e-05
    2. 'tuple' → logprob: -10.750022888183594
    3. ' Tuple' → logprob: -13.500022888183594
    4. '[' → logprob: -17.000022888183594
    5. '   ' → logprob: -18.625022888183594
    6. 'int' → logprob: -19.125022888183594
    7. 'Tu' → logprob: -19.250022888183594
    8. '.Tuple' → logprob: -19.625022888183594
    9. '<Tuple' → logprob: -19.750022888183594
    10. '_tuple' → logprob: -19.875022888183594

Token 3483: '[int' (ID: 40124)
  Prédit: '[int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[int' → logprob: -0.0068420604802668095
    2. '[List' → logprob: -5.006842136383057
    3. '[' → logprob: -9.006841659545898
    4. 'int' → logprob: -13.381841659545898
    5. '[
' → logprob: -13.881841659545898
    6. '[Int' → logprob: -14.131841659545898
    7. '[(' → logprob: -14.506841659545898
    8. 'List' → logprob: -15.131841659545898
    9. '   ' → logprob: -16.5068416595459
    10. '<int' → logprob: -17.0068416595459

Token 3484: ',int' (ID: 20909)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.528717577457428
    2. ',int' → logprob: -0.903717577457428
    3. '[int' → logprob: -5.403717517852783
    4. ',
' → logprob: -8.278717994689941
    5. ',List' → logprob: -8.528717994689941
    6. '[' → logprob: -8.903717994689941
    7. '   ' → logprob: -9.153717994689941
    8. ',[' → logprob: -9.403717994689941
    9. ',bool' → logprob: -9.653717994689941
    10. ',Integer' → logprob: -9.903717994689941

Token 3485: ']]:
' (ID: 183340)
  Prédit: ']:
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']:
' → logprob: -0.033175885677337646
    2. ']' → logprob: -3.9081759452819824
    3. '       ' → logprob: -5.158175945281982
    4. '']:
' → logprob: -6.533175945281982
    5. '():
' → logprob: -7.033175945281982
    6. '()' → logprob: -7.158175945281982
    7. ']]:
' → logprob: -7.158175945281982
    8. '   ' → logprob: -7.283175945281982
    9. '()]' → logprob: -7.408175945281982
    10. '"]:
' → logprob: -7.658175945281982

Token 3486: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2136627435684204
    2. '```' → logprob: -1.8386627435684204
    3. '   ' → logprob: -3.463662624359131
    4. '``' → logprob: -7.088662624359131
    5. '        
' → logprob: -8.088663101196289
    6. '    
' → logprob: -8.838663101196289
    7. ':' → logprob: -9.213663101196289
    8. '[' → logprob: -9.213663101196289
    9. '`' → logprob: -9.713663101196289
    10. '<|end|>' → logprob: -9.838663101196289

Token 3487: ' total' (ID: 3609)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.003080267459154129
    2. 'total' (adapté à ' total') → logprob: -6.128080368041992
    3. 'return' → logprob: -7.128080368041992
    4. '```' → logprob: -9.753080368041992
    5. '(total' → logprob: -11.378080368041992
    6. ' total' → logprob: -11.503080368041992
    7. 'next' → logprob: -12.253080368041992
    8. '   ' → logprob: -13.253080368041992
    9. '``' → logprob: -13.253080368041992
    10. 'result' → logprob: -14.378080368041992

Token 3488: '_mass' (ID: 98668)
  Prédit: '_mass'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_mass' → logprob: -4.668304245569743e-05
    2. '_' → logprob: -10.250046730041504
    3. 'mass' → logprob: -12.000046730041504
    4. 'Mass' → logprob: -13.500046730041504
    5. '```' → logprob: -14.125046730041504
    6. ')_' → logprob: -14.875046730041504
    7. '=' → logprob: -14.875046730041504
    8. '=_' → logprob: -15.500046730041504
    9. '}_' → logprob: -15.500046730041504
    10. '(_' → logprob: -15.625046730041504

Token 3489: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -1.710073471069336
    2. '<|end|>' → logprob: -1.835073471069336
    3. ' +=' → logprob: -1.960073471069336
    4. ' <<=' → logprob: -1.960073471069336
    5. '<|end|>' → logprob: -2.085073471069336
    6. '=' → logprob: -2.335073471069336
    7. '       ' → logprob: -3.085073471069336
    8. ' |=' → logprob: -3.710073471069336
    9. '   ' → logprob: -4.085073471069336
    10. '+=' → logprob: -4.460073471069336

Token 3490: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.00010068230039905757
    2. ' self' → logprob: -9.250101089477539
    3. '(self' → logprob: -12.500101089477539
    4. 'sum' → logprob: -14.375101089477539
    5. '       ' → logprob: -15.500101089477539
    6. '0' → logprob: -16.87510108947754
    7. '[self' → logprob: -17.12510108947754
    8. '=self' → logprob: -17.75010108947754
    9. '	self' → logprob: -18.50010108947754
    10. '   ' → logprob: -19.00010108947754

Token 3491: '.total' (ID: 23374)
  Prédit: '.total'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.total' → logprob: -0.001000655465759337
    2. 'total' → logprob: -7.001000881195068
    3. '.ex' → logprob: -10.00100040435791
    4. '.' → logprob: -10.75100040435791
    5. '._' → logprob: -12.00100040435791
    6. '_total' → logprob: -12.25100040435791
    7. '.predict' → logprob: -13.25100040435791
    8. '.mass' → logprob: -13.50100040435791
    9. '_.' → logprob: -13.62600040435791
    10. ' .' → logprob: -13.75100040435791

Token 3492: '_mass' (ID: 98668)
  Prédit: '_mass'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_mass' → logprob: -0.0001645644661039114
    2. 'mass' → logprob: -8.750164985656738
    3. '_' → logprob: -12.250164985656738
    4. 'Mass' → logprob: -14.500164985656738
    5. '_sum' → logprob: -15.250164985656738
    6. '_bits' → logprob: -16.250164031982422
    7. '```' → logprob: -16.500164031982422
    8. '_m' → logprob: -16.500164031982422
    9. ' mass' → logprob: -17.125164031982422
    10. ' _' → logprob: -17.250164031982422

Token 3493: '_bits' (ID: 48415)
  Prédit: '_bits'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_bits' → logprob: -0.004729634150862694
    2. 'bits' → logprob: -6.254729747772217
    3. 'Bits' → logprob: -7.254729747772217
    4. '_mass' → logprob: -7.629729747772217
    5. '       ' → logprob: -8.004729270935059
    6. '```' → logprob: -8.504729270935059
    7. '+=' → logprob: -8.629729270935059
    8. 'mass' → logprob: -8.754729270935059
    9. '   ' → logprob: -9.004729270935059
    10. '=' → logprob: -9.254729270935059

Token 3494: 'um' (ID: 394)
  Prédit: 'sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sum' → logprob: -0.01193744782358408
    2. '_sum' → logprob: -4.511937618255615
    3. 'um' → logprob: -7.636937618255615
    4. '   ' → logprob: -9.136937141418457
    5. 'set' → logprob: -9.261937141418457
    6. '       ' → logprob: -9.511937141418457
    7. ')' → logprob: -10.761937141418457
    8. 'total' → logprob: -10.761937141418457
    9. '```' → logprob: -10.886937141418457
    10. '**' → logprob: -11.386937141418457

Token 3495: '()
' (ID: 1234)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.561325192451477
    2. '()' → logprob: -1.186325192451477
    3. '<|end|>' → logprob: -3.3113250732421875
    4. '<|end|>' → logprob: -3.4363250732421875
    5. '()
' → logprob: -3.9363250732421875
    6. '```' → logprob: -4.4363250732421875
    7. '();' → logprob: -5.6863250732421875
    8. '(' → logprob: -5.8113250732421875
    9. '[' → logprob: -5.8113250732421875
    10. '()+' → logprob: -6.3113250732421875

Token 3496: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0005909211467951536
    2. '```' → logprob: -7.500590801239014
    3. '   ' → logprob: -11.250591278076172
    4. 'return' → logprob: -11.750591278076172
    5. '``' → logprob: -12.000591278076172
    6. '
' → logprob: -12.250591278076172
    7. 'total' → logprob: -13.500591278076172
    8. '           ' → logprob: -13.500591278076172
    9. ' return' → logprob: -14.375591278076172
    10. '`' → logprob: -14.750591278076172

Token 3497: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.16030973196029663
    2. '       ' → logprob: -1.9103097915649414
    3. ' return' → logprob: -10.160309791564941
    4. 'chunks' → logprob: -10.285309791564941
    5. '```' → logprob: -11.660309791564941
    6. 'result' → logprob: -12.910309791564941
    7. '   ' → logprob: -13.910309791564941
    8. '	return' → logprob: -15.410309791564941
    9. 'tokens' → logprob: -15.410309791564941
    10. '	' → logprob: -16.160308837890625

Token 3498: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0002646735229063779
    2. ' self' → logprob: -8.250265121459961
    3. '       ' → logprob: -12.875265121459961
    4. '[self' → logprob: -14.500265121459961
    5. '(self' → logprob: -15.625265121459961
    6. '	self' → logprob: -17.37526512145996
    7. '   ' → logprob: -17.62526512145996
    8. '=self' → logprob: -20.25026512145996
    9. '           ' → logprob: -20.62526512145996
    10. ' ' → logprob: -21.25026512145996

Token 3499: '.de' (ID: 3906)
  Prédit: '.de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.de' → logprob: -0.029980724677443504
    2. '.solve' → logprob: -3.5299806594848633
    3. 'de' → logprob: -9.404980659484863
    4. ').' → logprob: -10.529980659484863
    5. 'solve' → logprob: -10.654980659484863
    6. '```' → logprob: -10.904980659484863
    7. ' .' → logprob: -11.029980659484863
    8. '.' → logprob: -11.154980659484863
    9. '.decode' → logprob: -11.279980659484863
    10. '`.' → logprob: -11.279980659484863

Token 3500: 'compose' (ID: 65322)
  Prédit: 'compose'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'compose' → logprob: -1.9981420336989686e-05
    2. 'com' → logprob: -10.875020027160645
    3. '.compose' → logprob: -14.625020027160645
    4. 'comp' → logprob: -15.500020027160645
    5. '-compose' → logprob: -15.875020027160645
    6. '_comp' → logprob: -16.375019073486328
    7. '_com' → logprob: -17.875019073486328
    8. 'composer' → logprob: -18.750019073486328
    9. 'compound' → logprob: -18.750019073486328
    10. 'code' → logprob: -19.125019073486328

Token 3501: '_mass' (ID: 98668)
  Prédit: '_mass'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_mass' → logprob: -8.101369894575328e-05
    2. 'mass' → logprob: -9.500081062316895
    3. '_total' → logprob: -12.250081062316895
    4. 'total' → logprob: -14.625081062316895
    5. 's' → logprob: -15.375081062316895
    6. '(self' → logprob: -15.750081062316895
    7. 'self' → logprob: -16.125080108642578
    8. 'Mass' → logprob: -16.500080108642578
    9. '(_' → logprob: -17.000080108642578
    10. ' mass' → logprob: -17.125080108642578

Token 3502: '(total' (ID: 39744)
  Prédit: '_mass'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_mass' → logprob: -0.008027704432606697
    2. 'mass' → logprob: -4.88302755355835
    3. '()' → logprob: -8.508028030395508
    4. '_total' → logprob: -10.258028030395508
    5. '(self' → logprob: -10.258028030395508
    6. 'Mass' → logprob: -10.508028030395508
    7. '(' → logprob: -10.883028030395508
    8. '```' → logprob: -11.008028030395508
    9. '(total' → logprob: -11.258028030395508
    10. '       ' → logprob: -11.383028030395508

Token 3503: '_mass' (ID: 98668)
  Prédit: '_mass'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_mass' → logprob: -9.782141569303349e-05
    2. 'mass' → logprob: -9.25009822845459
    3. ')' → logprob: -14.75009822845459
    4. ' mass' → logprob: -14.87509822845459
    5. 'Mass' → logprob: -14.87509822845459
    6. 's' → logprob: -14.87509822845459
    7. ')_' → logprob: -16.000097274780273
    8. 't' → logprob: -17.125097274780273
    9. '_m' → logprob: -17.500097274780273
    10. 'ss' → logprob: -17.625097274780273

Token 3504: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.001450948417186737
    2. '())' → logprob: -7.001451015472412
    3. '       ' → logprob: -8.126450538635254
    4. '()' → logprob: -8.501450538635254
    5. '   ' → logprob: -10.376450538635254
    6. ' )' → logprob: -13.001450538635254
    7. ' ())' → logprob: -13.876450538635254
    8. ')
' → logprob: -14.001450538635254
    9. '))' → logprob: -14.126450538635254
    10. ')return' → logprob: -14.626450538635254

Token 3505: 'def' (ID: 1314)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 3506: ' main' (ID: 2758)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.6352503895759583
    2. ' __' → logprob: -1.7602503299713135
    3. ' main' → logprob: -2.1352503299713135
    4. '```' → logprob: -2.5102503299713135
    5. 'main' → logprob: -2.8852503299713135
    6. 'Input' → logprob: -3.8852503299713135
    7. '_input' → logprob: -4.760250568389893
    8. ' Input' → logprob: -5.510250568389893
    9. ' input' → logprob: -5.760250568389893
    10. ' ' → logprob: -6.635250568389893

Token 3507: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.01604410633444786
    2. '():
' → logprob: -4.1410441398620605
    3. '()' → logprob: -12.141043663024902
    4. '():
' → logprob: -13.516043663024902
    5. ' ():' → logprob: -14.266043663024902
    6. '():

' → logprob: -14.391043663024902
    7. '()->' → logprob: -14.641043663024902
    8. '().' → logprob: -14.641043663024902
    9. '();' → logprob: -15.641043663024902
    10. 'def' → logprob: -15.641043663024902

Token 3508: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.005531604401767254
    2. '```' → logprob: -5.8805317878723145
    3. 'input' → logprob: -6.2555317878723145
    4. 'def' → logprob: -7.3805317878723145
    5. 'import' → logprob: -9.380531311035156
    6. '
' → logprob: -10.755531311035156
    7. '``' → logprob: -10.755531311035156
    8. '    
' → logprob: -11.630531311035156
    9. '   ' → logprob: -11.880531311035156
    10. 'processor' → logprob: -12.130531311035156

Token 3509: ' input' (ID: 3422)
  Prédit: 'processor'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'processor' → logprob: -0.4160352051258087
    2. '   ' → logprob: -1.1660351753234863
    3. 'ip' → logprob: -3.9160351753234863
    4. 'input' (adapté à ' input') → logprob: -4.791035175323486
    5. 'def' → logprob: -8.916035652160645
    6. 'inp' → logprob: -9.291035652160645
    7. 'proc' → logprob: -9.416035652160645
    8. ' processor' → logprob: -9.916035652160645
    9. 'ips' → logprob: -10.041035652160645
    10. 'import' → logprob: -10.041035652160645

Token 3510: '_processor' (ID: 129611)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.35952329635620117
    2. '_processor' → logprob: -1.2345232963562012
    3. 'Processor' → logprob: -5.359523296356201
    4. 'processor' → logprob: -6.109523296356201
    5. '()
' → logprob: -6.234523296356201
    6. '().' → logprob: -7.234523296356201
    7. '_processors' → logprob: -7.984523296356201
    8. '(' → logprob: -8.10952377319336
    9. '_' → logprob: -8.98452377319336
    10. '_data' → logprob: -9.73452377319336

Token 3511: ' =' (ID: 314)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.34557080268859863
    2. '=' → logprob: -1.9705708026885986
    3. ' =' → logprob: -2.5955708026885986
    4. '().' → logprob: -2.9705708026885986
    5. '()' → logprob: -3.9705708026885986
    6. '.readline' → logprob: -5.8455705642700195
    7. '   ' → logprob: -6.5955705642700195
    8. '.read' → logprob: -6.7205705642700195
    9. ')' → logprob: -7.3455705642700195
    10. '=input' → logprob: -7.4705705642700195

Token 3512: ' Input' (ID: 10090)
  Prédit: 'Input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Input' → logprob: 0.0
    2. ' Input' → logprob: -17.25
    3. '	Input' → logprob: -22.75
    4. '_input' → logprob: -23.25
    5. 'input' → logprob: -23.625
    6. '_Input' → logprob: -24.125
    7. '\Input' → logprob: -24.375
    8. '   ' → logprob: -24.75
    9. '<Input' → logprob: -25.125
    10. '.Input' → logprob: -26.75

Token 3513: 'Processor' (ID: 22334)
  Prédit: 'Processor'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Processor' → logprob: 0.0
    2. '_processor' → logprob: -17.125
    3. 'processor' → logprob: -19.625
    4. 'Process' → logprob: -19.75
    5. ' Processor' → logprob: -21.125
    6. 'Processors' → logprob: -21.875
    7. 'Processed' → logprob: -22.25
    8. 'Parser' → logprob: -22.625
    9. 'Proces' → logprob: -23.875
    10. 'Handler' → logprob: -24.125

Token 3514: '()
' (ID: 1234)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3303530216217041
    2. '()
' → logprob: -1.455353021621704
    3. '()' → logprob: -3.330353021621704
    4. 'input' → logprob: -5.205352783203125
    5. '```' → logprob: -5.955352783203125
    6. '
' → logprob: -6.455352783203125
    7. '(input' → logprob: -7.580352783203125
    8. 'def' → logprob: -7.580352783203125
    9. '().' → logprob: -7.705352783203125
    10. '();' → logprob: -7.955352783203125

Token 3515: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.25195661187171936
    2. 'input' → logprob: -1.501956582069397
    3. '```' → logprob: -11.126956939697266
    4. 'def' → logprob: -12.001956939697266
    5. '
' → logprob: -12.501956939697266
    6. ' input' → logprob: -13.376956939697266
    7. '	input' → logprob: -14.126956939697266
    8. '    
' → logprob: -15.126956939697266
    9. 'import' → logprob: -15.876956939697266
    10. '`' → logprob: -16.126956939697266

Token 3516: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' (adapté à ' input') → logprob: -5.860340752406046e-05
    2. '   ' → logprob: -9.7500581741333
    3. ' input' → logprob: -15.6250581741333
    4. '
' → logprob: -17.000059127807617
    5. '```' → logprob: -17.125059127807617
    6. 'Input' → logprob: -18.250059127807617
    7. 'import' → logprob: -19.375059127807617
    8. '`' → logprob: -20.000059127807617
    9. 'def' → logprob: -20.125059127807617
    10. 'for' → logprob: -20.375059127807617

Token 3517: '_processor' (ID: 129611)
  Prédit: '_processor'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_processor' → logprob: -5.9795445849886164e-05
    2. '()' → logprob: -10.750060081481934
    3. 'processor' → logprob: -11.125060081481934
    4. '_processors' → logprob: -11.750060081481934
    5. '().' → logprob: -12.125060081481934
    6. 'Processor' → logprob: -12.875060081481934
    7. '   ' → logprob: -13.125060081481934
    8. '()
' → logprob: -13.125060081481934
    9. '_parser' → logprob: -14.375060081481934
    10. '_processing' → logprob: -14.375060081481934

Token 3518: '.read' (ID: 7211)
  Prédit: '.read'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.read' → logprob: -0.0007486367831006646
    2. 'read' → logprob: -7.250748634338379
    3. '.readline' → logprob: -10.500748634338379
    4. '.' → logprob: -11.625748634338379
    5. '.readlines' → logprob: -13.500748634338379
    6. '```' → logprob: -14.625748634338379
    7. '.process' → logprob: -15.375748634338379
    8. '	read' → logprob: -17.000749588012695
    9. '=' → logprob: -17.750749588012695
    10. ' .' → logprob: -18.250749588012695

Token 3519: '_input' (ID: 12507)
  Prédit: '_input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_input' → logprob: -0.3955145478248596
    2. '()' → logprob: -1.2705144882202148
    3. '()
' → logprob: -3.645514488220215
    4. '_line' → logprob: -4.020514488220215
    5. 'line' → logprob: -7.020514488220215
    6. 'input' → logprob: -8.145514488220215
    7. '_' → logprob: -8.895514488220215
    8. '
' → logprob: -9.270514488220215
    9. '```' → logprob: -9.270514488220215
    10. ')' → logprob: -9.395514488220215

Token 3520: '()

' (ID: 5874)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.017825741320848465
    2. '
' → logprob: -4.142825603485107
    3. '```' → logprob: -7.642825603485107
    4. '    
' → logprob: -7.767825603485107
    5. 'all' → logprob: -8.017826080322266
    6. 'solver' → logprob: -8.392826080322266
    7. 'vehicle' → logprob: -8.517826080322266
    8. 'for' → logprob: -10.642826080322266
    9. 'vehicles' → logprob: -10.767826080322266
    10. 'solution' → logprob: -11.517826080322266

Token 3521: '   ' (ID: 271)
  Prédit: 'solver'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'solver' → logprob: -0.06243402138352394
    2. '   ' → logprob: -2.812433958053589
    3. ' solver' → logprob: -7.687434196472168
    4. '```' → logprob: -12.562434196472168
    5. 'solution' → logprob: -13.312434196472168
    6. ' ' → logprob: -14.187434196472168
    7. 'sol' → logprob: -14.312434196472168
    8. '_solver' → logprob: -14.687434196472168
    9. '``' → logprob: -15.062434196472168
    10. '    
' → logprob: -16.06243324279785

Token 3522: ' solver' (ID: 63271)
  Prédit: 'solver'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'solver' (adapté à ' solver') → logprob: -4.7159857786027715e-05
    2. '   ' → logprob: -10.000046730041504
    3. ' solver' → logprob: -13.750046730041504
    4. 'solution' → logprob: -14.375046730041504
    5. '```' → logprob: -17.12504768371582
    6. 'resolver' → logprob: -18.25004768371582
    7. 'sol' → logprob: -18.50004768371582
    8. '_solver' → logprob: -18.50004768371582
    9. '``' → logprob: -19.12504768371582
    10. 'solve' → logprob: -19.12504768371582

Token 3523: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.02105504274368286
    2. ' =' → logprob: -3.896054983139038
    3. '   ' → logprob: -8.271055221557617
    4. '=s' → logprob: -9.146055221557617
    5. 'solver' → logprob: -9.896055221557617
    6. '_solver' → logprob: -10.021055221557617
    7. '(s' → logprob: -10.396055221557617
    8. 's' → logprob: -12.021055221557617
    9. '=input' → logprob: -12.396055221557617
    10. '```' → logprob: -12.521055221557617

Token 3524: ' Alloy' (ID: 115477)
  Prédit: 'All'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'All' → logprob: -4.723352049040841e-06
    2. ' Alloy' → logprob: -12.500004768371582
    3. '   ' → logprob: -14.250004768371582
    4. ' All' → logprob: -15.750004768371582
    5. '@All' → logprob: -17.000003814697266
    6. '(All' → logprob: -17.375003814697266
    7. 'Alliance' → logprob: -17.500003814697266
    8. 'Alle' → logprob: -17.875003814697266
    9. '_All' → logprob: -18.375003814697266
    10. '```' → logprob: -19.250003814697266

Token 3525: 'Re' (ID: 720)
  Prédit: 'Re'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Re' → logprob: -2.339278580620885e-06
    2. '_re' → logprob: -13.500001907348633
    3. '_Re' → logprob: -14.250001907348633
    4. ' Recycling' → logprob: -16.375001907348633
    5. '
' → logprob: -16.875001907348633
    6. ' recycling' → logprob: -19.500001907348633
    7. 'Recycler' → logprob: -19.500001907348633
    8. '_' → logprob: -19.875001907348633
    9. '_RE' → logprob: -20.125001907348633
    10. '\' → logprob: -20.375001907348633

Token 3526: 'cycling' (ID: 72499)
  Prédit: 'Re'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Re' → logprob: -0.06253491342067719
    2. 'cycling' → logprob: -2.812534809112549
    3. 'Cycl' → logprob: -8.187535285949707
    4. 're' → logprob: -8.937535285949707
    5. 'ycl' → logprob: -9.187535285949707
    6. ' Recycling' → logprob: -11.062535285949707
    7. 'ec' → logprob: -11.187535285949707
    8. 'cy' → logprob: -12.312535285949707
    9. 'c' → logprob: -12.562535285949707
    10. ' recycling' → logprob: -12.562535285949707

Token 3527: 'Solver' (ID: 70484)
  Prédit: 'Solver'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Solver' → logprob: -9.372294698550832e-06
    2. 'solver' → logprob: -11.625009536743164
    3. '_solver' → logprob: -14.750009536743164
    4. ' Solver' → logprob: -18.125009536743164
    5. 'olver' → logprob: -18.750009536743164
    6. ' solver' → logprob: -18.750009536743164
    7. '
' → logprob: -18.875009536743164
    8. 'Resolver' → logprob: -20.500009536743164
    9. '```' → logprob: -21.000009536743164
    10. '   ' → logprob: -21.375009536743164

Token 3528: '(input' (ID: 10054)
  Prédit: '(input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.10056279599666595
    2. 'input' → logprob: -2.350562810897827
    3. '   ' → logprob: -7.975562572479248
    4. ' input' → logprob: -12.100563049316406
    5. '[input' → logprob: -12.350563049316406
    6. '=input' → logprob: -13.600563049316406
    7. '```' → logprob: -14.850563049316406
    8. ',input' → logprob: -14.975563049316406
    9. '<input' → logprob: -15.225563049316406
    10. '	input' → logprob: -16.850563049316406

Token 3529: '_processor' (ID: 129611)
  Prédit: '_processor'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_processor' → logprob: -0.001777042169123888
    2. 'processor' → logprob: -6.626777172088623
    3. '_pairs' → logprob: -8.126776695251465
    4. '(input' → logprob: -9.376776695251465
    5. '=input' → logprob: -10.751776695251465
    6. '   ' → logprob: -10.876776695251465
    7. '=' → logprob: -12.126776695251465
    8. 'Processor' → logprob: -12.126776695251465
    9. 'pairs' → logprob: -12.376776695251465
    10. '.processor' → logprob: -13.126776695251465

Token 3530: '.ex' (ID: 3482)
  Prédit: '.ex'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.ex' → logprob: -3.881560041918419e-05
    2. 'ex' → logprob: -10.250039100646973
    3. '.' → logprob: -13.125039100646973
    4. ').' → logprob: -14.250039100646973
    5. ')' → logprob: -15.500039100646973
    6. 'Exponent' → logprob: -16.375038146972656
    7. '.exp' → logprob: -16.625038146972656
    8. ' .' → logprob: -16.625038146972656
    9. '   ' → logprob: -16.875038146972656
    10. '```' → logprob: -17.125038146972656

Token 3531: 'ponents' (ID: 4331)
  Prédit: 'ponent'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ponent' → logprob: -0.20141470432281494
    2. 'ponents' → logprob: -1.701414704322815
    3. 'ponente' → logprob: -14.576415061950684
    4. 'pon' → logprob: -15.326415061950684
    5. 'ex' → logprob: -15.451415061950684
    6. '```' → logprob: -15.576415061950684
    7. 'p' → logprob: -15.701415061950684
    8. 'ponenten' → logprob: -16.326414108276367
    9. '{
' → logprob: -17.451414108276367
    10. 'on' → logprob: -17.576414108276367

Token 3532: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.10851074010133743
    2. '   ' → logprob: -2.608510732650757
    3. ')
' → logprob: -3.608510732650757
    4. '())' → logprob: -6.983510971069336
    5. '()' → logprob: -7.608510971069336
    6. '())
' → logprob: -7.983510971069336
    7. 'solver' → logprob: -8.733510971069336
    8. '  ' → logprob: -10.483510971069336
    9. '```' → logprob: -10.858510971069336
    10. '()
' → logprob: -10.858510971069336

Token 3533: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1438654363155365
    2. 'result' → logprob: -2.1438653469085693
    3. 'output' → logprob: -5.268865585327148
    4. 'results' → logprob: -5.393865585327148
    5. 'chunks' → logprob: -5.518865585327148
    6. '```' → logprob: -6.018865585327148
    7. 'solution' → logprob: -7.768865585327148
    8. ' result' → logprob: -9.018865585327148
    9. 'for' → logprob: -10.643865585327148
    10. '``' → logprob: -11.018865585327148

Token 3534: ' answer' (ID: 6052)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.016136184334754944
    2. 'results' → logprob: -4.766136169433594
    3. 'output' → logprob: -5.016136169433594
    4. 'chunks' → logprob: -7.266136169433594
    5. 'solution' → logprob: -10.016136169433594
    6. 'res' → logprob: -10.266136169433594
    7. '   ' → logprob: -10.641136169433594
    8. 'answer' (adapté à ' answer') → logprob: -10.641136169433594
    9. 'outputs' → logprob: -11.016136169433594
    10. 'for' → logprob: -11.391136169433594

Token 3535: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.10041467100381851
    2. '=' → logprob: -2.350414752960205
    3. 's' → logprob: -8.975414276123047
    4. '_tokens' → logprob: -11.225414276123047
    5. '```' → logprob: -11.350414276123047
    6. '.' → logprob: -11.475414276123047
    7. '_' → logprob: -11.600414276123047
    8. '   ' → logprob: -11.975414276123047
    9. 'tokens' → logprob: -12.225414276123047
    10. '=[]' → logprob: -12.600414276123047

Token 3536: ' solver' (ID: 63271)
  Prédit: 'solver'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'solver' → logprob: -2.15310683415737e-05
    2. ' solver' → logprob: -10.750021934509277
    3. 'sol' → logprob: -21.50002098083496
    4. '```' → logprob: -21.87502098083496
    5. 'solve' → logprob: -22.00002098083496
    6. '   ' → logprob: -22.37502098083496
    7. 'solution' → logprob: -23.00002098083496
    8. 'scheduler' → logprob: -23.37502098083496
    9. 'resolver' → logprob: -23.50002098083496
    10. 'answer' → logprob: -23.87502098083496

Token 3537: '.solve' (ID: 151960)
  Prédit: '.solve'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.solve' → logprob: -1.1756367712223437e-05
    2. 'solve' → logprob: -11.875011444091797
    3. '.' → logprob: -13.000011444091797
    4. ' .' → logprob: -14.625011444091797
    5. '.answer' → logprob: -14.750011444091797
    6. '.s' → logprob: -15.000011444091797
    7. ' =' → logprob: -15.000011444091797
    8. '=' → logprob: -15.250011444091797
    9. '.sol' → logprob: -15.625011444091797
    10. '```' → logprob: -16.000011444091797

Token 3538: '()
' (ID: 1234)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.10265854001045227
    2. '()
' → logprob: -2.97765851020813
    3. '
' → logprob: -3.47765851020813
    4. '()' → logprob: -4.852658748626709
    5. 'for' → logprob: -5.602658748626709
    6. '    
' → logprob: -6.727658748626709
    7. '```' → logprob: -7.227658748626709
    8. '[]
' → logprob: -7.352658748626709
    9. '<|end|>' → logprob: -7.852658748626709
    10. ' for' → logprob: -8.47765827178955

Token 3539: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2534618377685547
    2. 'for' → logprob: -1.5034618377685547
    3. '```' → logprob: -6.503461837768555
    4. ' for' → logprob: -10.503461837768555
    5. '
' → logprob: -12.878461837768555
    6. '``' → logprob: -13.003461837768555
    7. '    
' → logprob: -14.753461837768555
    8. '	for' → logprob: -14.878461837768555
    9. '`' → logprob: -15.378461837768555
    10. 'print' → logprob: -16.878461837768555

Token 3540: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.00020795092859771103
    2. '   ' → logprob: -8.500207901000977
    3. '```' → logprob: -12.750207901000977
    4. ' for' → logprob: -13.500207901000977
    5. 'print' → logprob: -16.000207901000977
    6. '``' → logprob: -18.250207901000977
    7. '	for' → logprob: -19.500207901000977
    8. '`' → logprob: -21.750207901000977
    9. '
' → logprob: -22.625207901000977
    10. '    
' → logprob: -23.125207901000977

Token 3541: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -4.127333340875339e-06
    2. '(a' → logprob: -13.000003814697266
    3. ' a' → logprob: -13.250003814697266
    4. '   ' → logprob: -17.250003814697266
    5. 'bit' → logprob: -17.625003814697266
    6. 'chunk' → logprob: -17.750003814697266
    7. '	a' → logprob: -18.750003814697266
    8. 'line' → logprob: -19.500003814697266
    9. '_a' → logprob: -20.250003814697266
    10. ''a' → logprob: -21.000003814697266

Token 3542: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.022253453731536865
    2. '_,' → logprob: -4.397253513336182
    3. ',b' → logprob: -5.647253513336182
    4. '_j' → logprob: -5.772253513336182
    5. ',j' → logprob: -6.647253513336182
    6. ' ,' → logprob: -6.772253513336182
    7. ',_' → logprob: -8.022253036499023
    8. ',a' → logprob: -9.022253036499023
    9. ' _,' → logprob: -10.272253036499023
    10. '_' → logprob: -10.272253036499023

Token 3543: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.01416350994259119
    2. ' b' → logprob: -4.264163494110107
    3. '0' → logprob: -18.639163970947266
    4. ' ' → logprob: -20.514163970947266
    5. '```' → logprob: -23.139163970947266
    6. ',' → logprob: -23.639163970947266
    7. ',b' → logprob: -24.139163970947266
    8. '_b' → logprob: -24.264163970947266
    9. '   ' → logprob: -24.264163970947266
    10. '    ' → logprob: -25.139163970947266

Token 3544: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.21508441865444183
    2. 'in' → logprob: -1.965084433555603
    3. ',' → logprob: -3.4650843143463135
    4. 'print' → logprob: -5.090084552764893
    5. '<|end|>' → logprob: -5.465084552764893
    6. '   ' → logprob: -5.715084552764893
    7. ':' → logprob: -5.965084552764893
    8. '       ' → logprob: -6.090084552764893
    9. '.' → logprob: -6.590084552764893
    10. '```' → logprob: -7.215084552764893

Token 3545: ' answer' (ID: 6052)
  Prédit: 'answer'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'answer' → logprob: -9.491498531133402e-06
    2. ' answer' → logprob: -11.750009536743164
    3. 'print' → logprob: -13.500009536743164
    4. '(answer' → logprob: -16.625009536743164
    5. '
' → logprob: -19.625009536743164
    6. 'ans' → logprob: -20.500009536743164
    7. '	answer' → logprob: -20.500009536743164
    8. 'Answer' → logprob: -20.750009536743164
    9. '   ' → logprob: -21.000009536743164
    10. ' ' → logprob: -22.750009536743164

Token 3546: ':
' (ID: 734)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4058527946472168
    2. ':' → logprob: -1.7808527946472168
    3. '   ' → logprob: -2.280852794647217
    4. ':
' → logprob: -2.905852794647217
    5. 'print' → logprob: -5.530852794647217
    6. '():
' → logprob: -6.780852794647217
    7. '```' → logprob: -6.780852794647217
    8. ',' → logprob: -7.655852794647217
    9. '.print' → logprob: -8.155853271484375
    10. ' print' → logprob: -8.780853271484375

Token 3547: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -7.584239938296378e-06
    2. 'print' → logprob: -11.875007629394531
    3. '```' → logprob: -14.750007629394531
    4. '   ' → logprob: -15.875007629394531
    5. ' print' → logprob: -17.25000762939453
    6. '           ' → logprob: -18.87500762939453
    7. '	print' → logprob: -19.00000762939453
    8. '`' → logprob: -19.87500762939453
    9. '``' → logprob: -20.12500762939453
    10. '#' → logprob: -20.37500762939453

Token 3548: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: 0.0
    2. ' print' → logprob: -18.0
    3. '       ' → logprob: -18.25
    4. '   ' → logprob: -21.5
    5. '```' → logprob: -21.5
    6. '	print' → logprob: -24.375
    7. 'printf' → logprob: -25.375
    8. '``' → logprob: -25.875
    9. '           ' → logprob: -28.0
    10. 'println' → logprob: -28.125

Token 3549: '(a' (ID: 6271)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.002481842413544655
    2. 'f' → logprob: -6.002481937408447
    3. '(a' → logprob: -12.252481460571289
    4. '(f' → logprob: -13.502481460571289
    5. ' a' → logprob: -18.37748146057129
    6. '{' → logprob: -18.75248146057129
    7. ' f' → logprob: -19.37748146057129
    8. '   ' → logprob: -19.37748146057129
    9. '{}' → logprob: -20.00248146057129
    10. '```' → logprob: -21.37748146057129

Token 3550: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0022631403990089893
    2. ',b' → logprob: -6.502263069152832
    3. ' ,' → logprob: -7.252263069152832
    4. ' b' → logprob: -10.127263069152832
    5. ',end' → logprob: -11.502263069152832
    6. 'b' → logprob: -14.127263069152832
    7. '```' → logprob: -15.377263069152832
    8. '   ' → logprob: -15.877263069152832
    9. ')' → logprob: -16.00226402282715
    10. '"' → logprob: -16.12726402282715

Token 3551: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.002051885472610593
    2. ' b' → logprob: -6.252051830291748
    3. '0' → logprob: -9.002052307128906
    4. ' ' → logprob: -16.252052307128906
    5. ')b' → logprob: -19.752052307128906
    6. ')' → logprob: -21.002052307128906
    7. '```' → logprob: -22.002052307128906
    8. ' 
' → logprob: -23.002052307128906
    9. 'end' → logprob: -23.377052307128906
    10. '	b' → logprob: -23.627052307128906

Token 3552: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -3.7697225252486533e-06
    2. ')
' → logprob: -12.625003814697266
    3. '<|end|>' → logprob: -15.625003814697266
    4. '")' → logprob: -16.375003814697266
    5. '')' → logprob: -17.250003814697266
    6. '),' → logprob: -17.375003814697266
    7. ')}' → logprob: -17.375003814697266
    8. '       ' → logprob: -17.625003814697266
    9. '   ' → logprob: -17.875003814697266
    10. ')`' → logprob: -18.125003814697266

Token 3553: 'if' (ID: 366)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 3554: ' __' (ID: 2516)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -1.4736459888808895e-05
    2. ' __' → logprob: -11.750014305114746
    3. 'name' → logprob: -12.125014305114746
    4. '```' → logprob: -13.500014305114746
    5. '___' → logprob: -17.500015258789062
    6. '_name' → logprob: -17.750015258789062
    7. '.__' → logprob: -18.375015258789062
    8. 'True' → logprob: -19.125015258789062
    9. '**' → logprob: -19.250015258789062
    10. '`' → logprob: -19.625015258789062

Token 3555: 'name' (ID: 897)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.3296412527561188
    2. '==' → logprob: -1.3296412229537964
    3. '=="' → logprob: -4.829641342163086
    4. ' ==' → logprob: -5.079641342163086
    5. '=='' → logprob: -6.954641342163086
    6. '```' → logprob: -7.204641342163086
    7. '==
' → logprob: -9.079641342163086
    8. 'if' → logprob: -9.454641342163086
    9. '__.__' → logprob: -10.829641342163086
    10. 'name' → logprob: -10.954641342163086

Token 3556: '__' (ID: 771)
  Prédit: '__'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.0033413327764719725
    2. '==' → logprob: -6.003341197967529
    3. '=="' → logprob: -7.128341197967529
    4. ' ==' → logprob: -10.753341674804688
    5. '=='' → logprob: -11.378341674804688
    6. '__.__' → logprob: -11.628341674804688
    7. '____' → logprob: -12.503341674804688
    8. '___' → logprob: -12.878341674804688
    9. '"' → logprob: -13.003341674804688
    10. '__":
' → logprob: -13.003341674804688

Token 3557: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.3708168566226959
    2. '=="' → logprob: -1.2458168268203735
    3. ' ==' → logprob: -4.120816707611084
    4. '=='' → logprob: -5.620816707611084
    5. '__' → logprob: -6.120816707611084
    6. '```' → logprob: -10.120817184448242
    7. '==
' → logprob: -11.370817184448242
    8. '==="' → logprob: -11.870817184448242
    9. '()=="' → logprob: -13.245817184448242
    10. 'main' → logprob: -13.245817184448242

Token 3558: ' '__' (ID: 28278)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.06215948984026909
    2. ''' → logprob: -2.812159538269043
    3. '__' → logprob: -8.562159538269043
    4. ' "__' → logprob: -15.812159538269043
    5. '"name' → logprob: -16.187158584594727
    6. '"user' → logprob: -16.437158584594727
    7. '"class' → logprob: -17.062158584594727
    8. '"default' → logprob: -17.187158584594727
    9. ''name' → logprob: -17.812158584594727
    10. ' '__' → logprob: -17.812158584594727

Token 3559: 'main' (ID: 7731)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.001935065840370953
    2. 'main' → logprob: -6.251935005187988
    3. ''' → logprob: -12.626935005187988
    4. '"' → logprob: -13.376935005187988
    5. 'name' → logprob: -13.501935005187988
    6. '```' → logprob: -16.876935958862305
    7. '___' → logprob: -17.376935958862305
    8. ' __' → logprob: -17.751935958862305
    9. '__
' → logprob: -17.876935958862305
    10. '____' → logprob: -18.001935958862305

Token 3560: '__':
' (ID: 39314)
  Prédit: '__':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__':
' → logprob: -0.03854126110672951
    2. '__' → logprob: -4.163541316986084
    3. '__":
' → logprob: -4.288541316986084
    4. ':' → logprob: -5.413541316986084
    5. '():
' → logprob: -6.913541316986084
    6. '==' → logprob: -7.288541316986084
    7. '('__' → logprob: -7.413541316986084
    8. '```' → logprob: -7.663541316986084
    9. ':
' → logprob: -7.913541316986084
    10. '':
' → logprob: -9.163540840148926

Token 3561: '   ' (ID: 271)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -1.8908587662735954e-05
    2. ' main' → logprob: -12.250019073486328
    3. '	main' → logprob: -12.250019073486328
    4. '   ' → logprob: -12.625019073486328
    5. '```' → logprob: -12.625019073486328
    6. '(main' → logprob: -13.125019073486328
    7. '_main' → logprob: -14.875019073486328
    8. '__' → logprob: -15.625019073486328
    9. '.main' → logprob: -17.125019073486328
    10. '``' → logprob: -17.500019073486328

Token 3562: ' main' (ID: 2758)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' (adapté à ' main') → logprob: 0.0
    2. ' main' → logprob: -18.25
    3. '	main' → logprob: -21.625
    4. '_main' → logprob: -24.375
    5. '(main' → logprob: -24.875
    6. 'import' → logprob: -25.125
    7. '   ' → logprob: -25.25
    8. '.main' → logprob: -25.875
    9. '```' → logprob: -26.875
    10. '__' → logprob: -27.5

Token 3563: '()' (ID: 416)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 3561
Tokens correctement prédits (1ère position, stricte): 897
Tokens correctement prédits (1ère position, avec adaptation): 982
Tokens correctement prédits (top 10): 2029
Précision stricte (1ère position): 25.19%
Précision adaptée (1ère position): 27.58%
Précision (top 10): 56.98%
================================================================================
