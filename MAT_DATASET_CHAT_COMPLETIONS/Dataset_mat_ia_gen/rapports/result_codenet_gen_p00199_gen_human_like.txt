================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 17:19:28
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
def main():
    import sys

    def seat_A(chairs):
        for i in range(len(chairs)):
            if chairs[i] == '#':
                return i
        return -1  # Should not happen

    def seat_B(chairs):
        n = len(chairs)
        # Find seats not adjacent to A from right to left
        candidates = []
        for i in reversed(range(n)):
            if chairs[i] == '#':
                left_A = (i > 0 and chairs[i - 1] == 'A')
                right_A = (i < n - 1 and chairs[i + 1] == 'A')
                if not (left_A or right_A):
                    candidates.append(i)
        if candidates:
            return candidates[0]
        else:
            # No place except next to A, so pick leftmost empty seat from left
            for i in range(n):
                if chairs[i] == '#':
                    return i
        return -1  # Should not happen

    def seat_C(chairs):
        n = len(chairs)
        occupied_positions = [i for i, c in enumerate(chairs) if c != '#']
        if not occupied_positions:
            # No one seated yet, seat in middle
            if n % 2 == 1:
                return (n + 1) // 2 - 1
            else:
                return n // 2
        # For each seated person from left to right
        for pos in occupied_positions:
            # Try right neighbor
            r = pos + 1
            if r < n and chairs[r] == '#':
                return r
            # Try left neighbor
            l = pos - 1
            if l >= 0 and chairs[l] == '#':
                return l
        # If none found, seat in middle (same rule as above)
        # But problem states tries next people's neighbors accordingly, so should always sit next to someone if possible
        # just in case, fallback:
        if n % 2 == 1:
            return (n + 1) // 2 - 1
        else:
            return n // 2

    def seat_D(chairs):
        n = len(chairs)
        occupied_positions = [i for i, c in enumerate(chairs) if c != '#']
        if not occupied_positions:
            return 0  # seat left end if no one seated
        max_dist = -1
        candidates = []
        for i in range(n):
            if chairs[i] != '#':
                continue
            # Distance to nearest occupied
            dist = min(abs(i - pos) for pos in occupied_positions)
            if dist > max_dist:
                max_dist = dist
                candidates = [i]
            elif dist == max_dist:
                candidates.append(i)
        # If max_dist == 0, have to sit adjacent to someone, choose leftmost among them
        return candidates[0]

    input = sys.stdin.readline
    while True:
        line = input()
        if not line:
            break
        line=line.strip()
        if not line:
            continue
        n_m = line.split()
        if len(n_m) != 2:
            continue
        n, m = map(int, n_m)
        if n == 0 and m == 0:
            break
        passengers = []
        for _ in range(m):
            passengers.append(input().strip())
        chairs = ['#'] * n
        for p in passengers:
            if p == 'A':
                pos = seat_A(chairs)
                chairs[pos] = 'A'
            elif p == 'B':
                pos = seat_B(chairs)
                chairs[pos] = 'B'
            elif p == 'C':
                pos = seat_C(chairs)
                chairs[pos] = 'C'
            else:  # D
                pos = seat_D(chairs)
                chairs[pos] = 'D'
        print(''.join(chairs))


if __name__ == "__main__":
    main()
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'def' (ID: 1314)
  → Token d'amorce (pas de prédiction)

Token 1: ' main' (ID: 2758)
  → Token d'amorce (pas de prédiction)

Token 2: '():
' (ID: 8595)
  → Token d'amorce (pas de prédiction)

Token 3: '   ' (ID: 271)
  Prédit: '\'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '\' → logprob: -0.27238088846206665
    2. '\n' → logprob: -1.6473808288574219
    3. '   ' → logprob: -3.897380828857422
    4. '    
' → logprob: -4.897380828857422
    5. '    ' → logprob: -5.647380828857422
    6. ''' → logprob: -5.897380828857422
    7. '```' → logprob: -6.147380828857422
    8. '(' → logprob: -6.397380828857422
    9. ' 
' → logprob: -6.397380828857422
    10. '\r' → logprob: -6.897380828857422

Token 4: ' import' (ID: 1588)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.20469899475574493
    2. 'pass' → logprob: -2.3296990394592285
    3. '   ' → logprob: -2.8296990394592285
    4. 'return' → logprob: -4.0796990394592285
    5. 'p' → logprob: -5.3296990394592285
    6. '#' → logprob: -6.3296990394592285
    7. 'r' → logprob: -6.4546990394592285
    8. 'a' → logprob: -7.3296990394592285
    9. '```' → logprob: -7.3296990394592285
    10. 'n' → logprob: -8.07969856262207

Token 5: ' sys' (ID: 12228)
  Prédit: ' os'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' os' → logprob: -0.08982692658901215
    2. ' sys' → logprob: -2.589826822280884
    3. ' math' → logprob: -5.089827060699463
    4. ' ' → logprob: -5.714827060699463
    5. ' numpy' → logprob: -7.339827060699463
    6. ' random' → logprob: -7.714827060699463
    7. ' json' → logprob: -8.964826583862305
    8. ' tensorflow' → logprob: -10.464826583862305
    9. ' space' → logprob: -10.714826583862305
    10. ' pandas' → logprob: -10.839826583862305

Token 6: '

' (ID: 279)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.2184634655714035
    2. '\n' → logprob: -3.34346342086792
    3. 'newline' → logprob: -3.46846342086792
    4. '\' → logprob: -3.71846342086792
    5. '<|end|>' → logprob: -3.84346342086792
    6. '.readline' → logprob: -4.21846342086792
    7. 'import' → logprob: -4.34346342086792
    8. '```' → logprob: -4.59346342086792
    9. '   ' → logprob: -4.71846342086792
    10. '[' → logprob: -5.46846342086792

Token 7: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.13168928027153015
    2. '.' → logprob: -2.7566893100738525
    3. '```' → logprob: -4.131689071655273
    4. 'print' → logprob: -5.006689071655273
    5. '[' → logprob: -5.131689071655273
    6. '.readline' → logprob: -5.381689071655273
    7. '.stdout' → logprob: -5.506689071655273
    8. '.argv' → logprob: -5.631689071655273
    9. 'import' → logprob: -5.756689071655273
    10. '    ' → logprob: -6.506689071655273

Token 8: ' def' (ID: 1056)
  Prédit: 'argv'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'argv' → logprob: -0.7582454085350037
    2. 'args' → logprob: -1.0082454681396484
    3. 'for' → logprob: -2.0082454681396484
    4. 'print' → logprob: -4.258245468139648
    5. 'if' → logprob: -4.633245468139648
    6. 'input' → logprob: -6.258245468139648
    7. '   ' → logprob: -6.258245468139648
    8. 'argc' → logprob: -6.508245468139648
    9. 'sys' → logprob: -7.758245468139648
    10. 'arg' → logprob: -7.883245468139648

Token 9: ' seat' (ID: 15512)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.6274421811103821
    2. ' argv' → logprob: -1.3774421215057373
    3. ' exit' → logprob: -1.8774421215057373
    4. ' parse' → logprob: -4.877442359924316
    5. ' check' → logprob: -5.002442359924316
    6. ' test' → logprob: -5.002442359924316
    7. ' hello' → logprob: -5.252442359924316
    8. ' ' → logprob: -5.502442359924316
    9. ' print' → logprob: -5.502442359924316
    10. ' process' → logprob: -5.627442359924316

Token 10: '_A' (ID: 6829)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.004210651386529207
    2. '_map' → logprob: -6.754210472106934
    3. '(' → logprob: -7.254210472106934
    4. 's' → logprob: -7.504210472106934
    5. '_s' → logprob: -7.629210472106934
    6. '_id' → logprob: -8.629210472106934
    7. '_number' → logprob: -8.879210472106934
    8. ' _' → logprob: -8.879210472106934
    9. '_type' → logprob: -9.504210472106934
    10. '_name' → logprob: -9.879210472106934

Token 11: '(ch' (ID: 15574)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.08581705391407013
    2. 'v' → logprob: -4.460816860198975
    3. 's' → logprob: -4.585816860198975
    4. '[' → logprob: -4.710816860198975
    5. '_:' → logprob: -4.960816860198975
    6. '(' → logprob: -5.085816860198975
    7. ':' → logprob: -5.085816860198975
    8. '():' → logprob: -5.210816860198975
    9. 'R' → logprob: -5.710816860198975
    10. 'r' → logprob: -5.835816860198975

Token 12: 'airs' (ID: 6498)
  Prédit: 'ar'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ar' → logprob: -0.6223337650299072
    2. 'r' → logprob: -1.1223337650299072
    3. 'a' → logprob: -2.3723337650299072
    4. 'o' → logprob: -3.7473337650299072
    5. '):' → logprob: -5.247333526611328
    6. ')' → logprob: -5.372333526611328
    7. 'e' → logprob: -5.622333526611328
    8. ':' → logprob: -6.247333526611328
    9. '_' → logprob: -6.872333526611328
    10. '=' → logprob: -7.247333526611328

Token 13: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.032205481082201004
    2. ')' → logprob: -4.032205581665039
    3. '[' → logprob: -4.532205581665039
    4. ':' → logprob: -6.157205581665039
    5. ',' → logprob: -7.407205581665039
    6. '_' → logprob: -8.907205581665039
    7. 's' → logprob: -9.782205581665039
    8. ' ):' → logprob: -9.907205581665039
    9. '):
' → logprob: -10.157205581665039
    10. '[]):' → logprob: -10.407205581665039

Token 14: '       ' (ID: 309)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.347562700510025
    2. '):' → logprob: -1.8475626707077026
    3. '   ' → logprob: -2.722562789916992
    4. ':' → logprob: -3.472562789916992
    5. ')' → logprob: -4.347562789916992
    6. '       ' → logprob: -5.472562789916992
    7. '    ' → logprob: -5.722562789916992
    8. '[]' → logprob: -5.847562789916992
    9. '```' → logprob: -6.222562789916992
    10. '[:]' → logprob: -6.722562789916992

Token 15: ' for' (ID: 395)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.9547314643859863
    2. '       ' → logprob: -1.4547314643859863
    3. ' return' → logprob: -2.9547314643859863
    4. ' if' → logprob: -2.9547314643859863
    5. '_' → logprob: -3.0797314643859863
    6. ':' → logprob: -3.0797314643859863
    7. 'return' → logprob: -3.0797314643859863
    8. '    ' → logprob: -3.3297314643859863
    9. ' :' → logprob: -3.8297314643859863
    10. '   ' → logprob: -4.454731464385986

Token 16: ' i' (ID: 575)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.3143724799156189
    2. ' i' → logprob: -1.6893725395202637
    3. ' c' → logprob: -3.5643725395202637
    4. ' _' → logprob: -3.8143725395202637
    5. ' chair' → logprob: -4.064372539520264
    6. '  ' → logprob: -4.439372539520264
    7. '_' → logprob: -5.689372539520264
    8. 'i' → logprob: -7.564372539520264
    9. ' in' → logprob: -7.939372539520264
    10. ' seat' → logprob: -8.189372062683105

Token 17: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.5848116874694824
    2. 'n' → logprob: -0.8348116874694824
    3. 'in' → logprob: -5.459811687469482
    4. ',' → logprob: -6.584811687469482
    5. ' n' → logprob: -6.709811687469482
    6. ' ' → logprob: -6.709811687469482
    7. '  ' → logprob: -8.08481216430664
    8. ',n' → logprob: -8.95981216430664
    9. ' ,' → logprob: -10.08481216430664
    10. '_' → logprob: -10.08481216430664

Token 18: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.02046843059360981
    2. ' chairs' → logprob: -4.020468235015869
    3. 'range' → logprob: -6.270468235015869
    4. ' ' → logprob: -8.395468711853027
    5. 'chairs' → logprob: -8.770468711853027
    6. ' Chairs' → logprob: -10.770468711853027
    7. ' chair' → logprob: -12.020468711853027
    8. ' xrange' → logprob: -13.020468711853027
    9. '	range' → logprob: -13.020468711853027
    10. ' len' → logprob: -13.270468711853027

Token 19: '(len' (ID: 14990)
  Prédit: '(len'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(len' → logprob: -0.38725319504737854
    2. '(' → logprob: -1.1372531652450562
    3. ' (' → logprob: -8.262252807617188
    4. 'len' → logprob: -9.887252807617188
    5. ' len' → logprob: -10.137252807617188
    6. '(length' → logprob: -11.512252807617188
    7. ' ' → logprob: -12.012252807617188
    8. '(n' → logprob: -12.387252807617188
    9. '   ' → logprob: -12.637252807617188
    10. '(i' → logprob: -13.512252807617188

Token 20: '(ch' (ID: 15574)
  Prédit: '(ch'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(ch' → logprob: -0.0012055885745212436
    2. '(' → logprob: -6.8762054443359375
    3. 'chairs' → logprob: -9.126205444335938
    4. ' chairs' → logprob: -10.376205444335938
    5. '(se' → logprob: -11.501205444335938
    6. '(s' → logprob: -12.001205444335938
    7. ')' → logprob: -12.251205444335938
    8. ' (' → logprob: -12.251205444335938
    9. '(chars' → logprob: -14.251205444335938
    10. '(c' → logprob: -14.376205444335938

Token 21: 'airs' (ID: 6498)
  Prédit: 'airs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'airs' → logprob: -0.005906280595809221
    2. '_' → logprob: -5.630906105041504
    3. 'irs' → logprob: -6.880906105041504
    4. '))' → logprob: -8.380906105041504
    5. 'air' → logprob: -9.005906105041504
    6. '   ' → logprob: -9.130906105041504
    7. ')' → logprob: -9.255906105041504
    8. '```' → logprob: -9.380906105041504
    9. 'A' → logprob: -9.505906105041504
    10. 'a' → logprob: -9.755906105041504

Token 22: ')):
' (ID: 22530)
  Prédit: ')):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')):' → logprob: -0.5549297332763672
    2. '):' → logprob: -0.9299297332763672
    3. ')' → logprob: -4.429929733276367
    4. '))' → logprob: -4.554929733276367
    5. ')):
' → logprob: -5.429929733276367
    6. '[' → logprob: -5.929929733276367
    7. '):
' → logprob: -8.304929733276367
    8. ' ):' → logprob: -8.304929733276367
    9. '[i' → logprob: -8.304929733276367
    10. '   ' → logprob: -8.804929733276367

Token 23: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7305297255516052
    2. '           ' → logprob: -1.48052978515625
    3. ':' → logprob: -1.98052978515625
    4. '):' → logprob: -3.35552978515625
    5. ' :' → logprob: -3.48052978515625
    6. '        ' → logprob: -3.73052978515625
    7. '[' → logprob: -4.35552978515625
    8. ' if' → logprob: -4.48052978515625
    9. ' ' → logprob: -5.10552978515625
    10. ')' → logprob: -5.48052978515625

Token 24: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.09921025484800339
    2. '       ' → logprob: -3.099210262298584
    3. 'if' (adapté à ' if') → logprob: -3.599210262298584
    4. ' ' → logprob: -4.724210262298584
    5. '           ' → logprob: -5.724210262298584
    6. '               ' → logprob: -5.974210262298584
    7. '        ' → logprob: -6.224210262298584
    8. ')' → logprob: -7.349210262298584
    9. '[' → logprob: -7.349210262298584
    10. '   ' → logprob: -7.474210262298584

Token 25: ' chairs' (ID: 34049)
  Prédit: ' chairs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' chairs' → logprob: -0.005331947468221188
    2. 'chairs' → logprob: -5.630331993103027
    3. ' not' → logprob: -7.005331993103027
    4. ' ' → logprob: -7.130331993103027
    5. ' chair' → logprob: -11.380331993103027
    6. ' Chairs' → logprob: -12.130331993103027
    7. ' i' → logprob: -13.130331993103027
    8. 'chair' → logprob: -13.630331993103027
    9. ' ch' → logprob: -14.255331993103027
    10. ' ' → logprob: -14.880331993103027

Token 26: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.004112119786441326
    2. '[' → logprob: -5.504112243652344
    3. ' [' → logprob: -10.504112243652344
    4. '[I' → logprob: -12.879112243652344
    5. '[in' → logprob: -14.879112243652344
    6. '[j' → logprob: -15.004112243652344
    7. '[idx' → logprob: -15.129112243652344
    8. ' ' → logprob: -15.379112243652344
    9. '[id' → logprob: -15.379112243652344
    10. '[e' → logprob: -15.504112243652344

Token 27: ']' (ID: 60)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.7858414053916931
    2. ' ==' → logprob: -1.285841464996338
    3. '==' → logprob: -2.285841464996338
    4. ']' → logprob: -2.660841464996338
    5. '[' → logprob: -3.035841464996338
    6. ' )' → logprob: -4.035841464996338
    7. '[i' → logprob: -4.535841464996338
    8. ']==' → logprob: -5.160841464996338
    9. ' ]' → logprob: -5.785841464996338
    10. ' ' → logprob: -5.910841464996338

Token 28: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.272603839635849
    2. '==' → logprob: -1.5226038694381714
    3. '[' → logprob: -4.897603988647461
    4. ' is' → logprob: -4.897603988647461
    5. '=='' → logprob: -5.897603988647461
    6. ' =='' → logprob: -7.272603988647461
    7. ' ' → logprob: -7.397603988647461
    8. '=' → logprob: -8.022603988647461
    9. '[]' → logprob: -8.397603988647461
    10. ' in' → logprob: -8.522603988647461

Token 29: ' '#' (ID: 11284)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''' → logprob: -0.15771399438381195
    2. ' '' → logprob: -2.0327138900756836
    3. ' ' → logprob: -4.782713890075684
    4. '0' → logprob: -5.532713890075684
    5. '"' → logprob: -6.407713890075684
    6. ' '_'' → logprob: -8.657713890075684
    7. ' "' → logprob: -8.907713890075684
    8. 'None' → logprob: -9.157713890075684
    9. 'False' → logprob: -9.407713890075684
    10. '_' → logprob: -9.782713890075684

Token 30: '':
' (ID: 7669)
  Prédit: '':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '':' → logprob: -1.4142329692840576
    2. ':' → logprob: -1.5392329692840576
    3. ' '' → logprob: -1.5392329692840576
    4. ' ':' → logprob: -2.2892329692840576
    5. '):' → logprob: -2.2892329692840576
    6. ')' → logprob: -3.5392329692840576
    7. ''' → logprob: -3.6642329692840576
    8. ''):' → logprob: -3.6642329692840576
    9. ' and' → logprob: -4.289233207702637
    10. ' or' → logprob: -4.664233207702637

Token 31: '               ' (ID: 506)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.8925981521606445
    2. ' ' → logprob: -1.1425981521606445
    3. ' '' → logprob: -1.7675981521606445
    4. '       ' → logprob: -4.2675981521606445
    5. ')' → logprob: -4.2675981521606445
    6. '<|end|>' → logprob: -4.2675981521606445
    7. ' and' → logprob: -4.6425981521606445
    8. '               ' → logprob: -4.8925981521606445
    9. ' )' → logprob: -5.3925981521606445
    10. ':' → logprob: -5.3925981521606445

Token 32: ' return' (ID: 622)
  Prédit: ' continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' continue' → logprob: -0.8334603309631348
    2. ' return' → logprob: -1.2084603309631348
    3. '           ' → logprob: -2.0834603309631348
    4. '               ' → logprob: -2.5834603309631348
    5. 'return' (adapté à ' return') → logprob: -3.9584603309631348
    6. ' ' → logprob: -4.833460330963135
    7. ' ' → logprob: -4.833460330963135
    8. '       ' → logprob: -4.833460330963135
    9. 'continue' → logprob: -4.958460330963135
    10. '                ' → logprob: -5.458460330963135

Token 33: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.24626943469047546
    2. 'i' → logprob: -1.7462694644927979
    3. ' ' → logprob: -3.246269464492798
    4. ' None' → logprob: -5.871269226074219
    5. ' (' → logprob: -7.746269226074219
    6. '(i' → logprob: -7.746269226074219
    7. 'None' → logprob: -8.246269226074219
    8. ' 
' → logprob: -8.371269226074219
    9. '0' → logprob: -9.121269226074219
    10. ' "' → logprob: -9.746269226074219

Token 34: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 35: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 36: ' return' (ID: 622)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.12173797190189362
    2. '       ' → logprob: -3.4967379570007324
    3. '   ' → logprob: -3.8717379570007324
    4. '<|end|>' → logprob: -4.496737957000732
    5. ' 
' → logprob: -4.621737957000732
    6. '-' → logprob: -5.746737957000732
    7. '    ' → logprob: -5.746737957000732
    8. '\n' → logprob: -5.871737957000732
    9. '  ' → logprob: -5.996737957000732
    10. '=' → logprob: -6.246737957000732

Token 37: ' -' (ID: 533)
  Prédit: ' None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' None' → logprob: -0.0882558599114418
    2. ' -' → logprob: -3.2132558822631836
    3. 'None' → logprob: -3.3382558822631836
    4. ' len' → logprob: -5.338255882263184
    5. '-' → logprob: -5.963255882263184
    6. '0' → logprob: -7.463255882263184
    7. ' ' → logprob: -7.838255882263184
    8. 'len' → logprob: -8.213255882263184
    9. '32' → logprob: -10.463255882263184
    10. ' n' → logprob: -11.213255882263184

Token 38: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.598092684522271e-05
    2. ' ' → logprob: -9.875056266784668
    3. '2' → logprob: -13.562556266784668
    4. ' -' → logprob: -14.375056266784668
    5. '`' → logprob: -14.562556266784668
    6. '```' → logprob: -14.687556266784668
    7. '   ' → logprob: -15.500056266784668
    8. '+' → logprob: -15.812556266784668
    9. '       ' → logprob: -16.00005531311035
    10. '...' → logprob: -16.12505531311035

Token 39: ' ' (ID: 220)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 40: ' #' (ID: 1069)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 41: ' Should' (ID: 18057)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 42: ' not' (ID: 625)
  Prédit: ' not'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -1.3305604457855225
    2. ' continue' → logprob: -1.3305604457855225
    3. ' return' → logprob: -1.8305604457855225
    4. ' be' → logprob: -2.0805604457855225
    5. '<|end|>' → logprob: -2.4555604457855225
    6. 'n't' → logprob: -3.7055604457855225
    7. 'not' → logprob: -4.080560684204102
    8. 'continue' → logprob: -4.080560684204102
    9. ' find' → logprob: -5.080560684204102
    10. 'return' → logprob: -5.455560684204102

Token 43: ' happen' (ID: 5659)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.6564211845397949
    2. ' be' → logprob: -2.031421184539795
    3. ' return' → logprob: -2.531421184539795
    4. ' happen' → logprob: -3.031421184539795
    5. '```' → logprob: -3.031421184539795
    6. '<|end|>' → logprob: -3.406421184539795
    7. ' find' → logprob: -3.531421184539795
    8. ' continue' → logprob: -3.781421184539795
    9. ' occur' → logprob: -3.781421184539795
    10. '  ' → logprob: -4.281421184539795

Token 44: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 45: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.7534993886947632
    2. '<|end|>' → logprob: -0.7534993886947632
    3. '

' → logprob: -3.3784995079040527
    4. '   ' → logprob: -4.378499507904053
    5. '<|end|>' → logprob: -5.628499507904053
    6. '\n' → logprob: -6.503499507904053
    7. '```' → logprob: -6.628499507904053
    8. '    
' → logprob: -7.003499507904053
    9. ' ' → logprob: -7.378499507904053
    10. '


' → logprob: -7.753499507904053

Token 46: ' def' (ID: 1056)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.4585103690624237
    2. '<|end|>' → logprob: -1.708510398864746
    3. '   ' → logprob: -2.333510398864746
    4. '    
' → logprob: -3.333510398864746
    5. 'def' (adapté à ' def') → logprob: -3.583510398864746
    6. '

' → logprob: -5.333510398864746
    7. '<|end|>' → logprob: -5.458510398864746
    8. 'n' → logprob: -5.708510398864746
    9. ' 
' → logprob: -5.958510398864746
    10. '  
' → logprob: -6.083510398864746

Token 47: ' seat' (ID: 15512)
  Prédit: ' seat'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' seat' → logprob: -0.016574788838624954
    2. 'seat' → logprob: -4.266574859619141
    3. ' ' → logprob: -8.01657485961914
    4. ' main' → logprob: -8.26657485961914
    5. ' max' → logprob: -8.51657485961914
    6. ' find' → logprob: -8.70407485961914
    7. ' seats' → logprob: -8.95407485961914
    8. ' solve' → logprob: -9.07907485961914
    9. ' chair' → logprob: -9.14157485961914
    10. ' best' → logprob: -9.51657485961914

Token 48: '_B' (ID: 3201)
  Prédit: '_B'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_B' → logprob: -0.09075857698917389
    2. '_' → logprob: -2.4657585620880127
    3. '_A' → logprob: -6.715758800506592
    4. ' _' → logprob: -8.465758323669434
    5. '_C' → logprob: -8.965758323669434
    6. '_D' → logprob: -9.965758323669434
    7. 'B' → logprob: -10.090758323669434
    8. '__' → logprob: -10.590758323669434
    9. '_b' → logprob: -11.090758323669434
    10. '_S' → logprob: -11.465758323669434

Token 49: '(ch' (ID: 15574)
  Prédit: '(ch'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(ch' → logprob: -0.026991989463567734
    2. '(' → logprob: -4.026991844177246
    3. ' (' → logprob: -4.901991844177246
    4. '_' → logprob: -7.276991844177246
    5. '_(' → logprob: -8.026991844177246
    6. '():' → logprob: -9.026991844177246
    7. '_ch' → logprob: -10.276991844177246
    8. '(se' → logprob: -10.401991844177246
    9. ' ' → logprob: -10.526991844177246
    10. '   ' → logprob: -10.901991844177246

Token 50: 'airs' (ID: 6498)
  Prédit: 'airs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'airs' → logprob: -0.0005259881727397442
    2. '):' → logprob: -8.625526428222656
    3. '```' → logprob: -9.625526428222656
    4. 'a' → logprob: -9.875526428222656
    5. 'air' → logprob: -10.000526428222656
    6. '   ' → logprob: -10.500526428222656
    7. '):
' → logprob: -10.625526428222656
    8. ')' → logprob: -10.750526428222656
    9. 'A' → logprob: -11.375526428222656
    10. '_air' → logprob: -11.375526428222656

Token 51: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0022395893465727568
    2. '):
' → logprob: -6.12723970413208
    3. ')' → logprob: -10.752239227294922
    4. '   ' → logprob: -11.127239227294922
    5. '):
' → logprob: -12.502239227294922
    6. '       ' → logprob: -12.627239227294922
    7. ' ):' → logprob: -13.252239227294922
    8. '[]):' → logprob: -13.252239227294922
    9. '[' → logprob: -13.502239227294922
    10. ',' → logprob: -13.627239227294922

Token 52: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.045685410499572754
    2. ' for' → logprob: -3.670685291290283
    3. '   ' → logprob: -4.045685291290283
    4. 'for' → logprob: -7.045685291290283
    5. ' ' → logprob: -9.170685768127441
    6. '           ' → logprob: -9.295685768127441
    7. ' return' → logprob: -9.545685768127441
    8. '    ' → logprob: -9.733185768127441
    9. '      ' → logprob: -10.045685768127441
    10. ':' → logprob: -10.108185768127441

Token 53: ' n' (ID: 297)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.2820872664451599
    2. 'for' → logprob: -2.2820873260498047
    3. ' max' → logprob: -3.6570873260498047
    4. ' last' → logprob: -3.7820873260498047
    5. ' n' → logprob: -4.157087326049805
    6. ' return' → logprob: -4.782087326049805
    7. 'max' → logprob: -4.907087326049805
    8. ' first' → logprob: -4.907087326049805
    9. '   ' → logprob: -5.032087326049805
    10. ' min' → logprob: -5.032087326049805

Token 54: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.019938740879297256
    2. '=' → logprob: -4.019938945770264
    3. '   ' → logprob: -7.394938945770264
    4. '=len' → logprob: -7.394938945770264
    5. ' ' → logprob: -8.894938468933105
    6. 'ext' → logprob: -9.019938468933105
    7. '  ' → logprob: -9.769938468933105
    8. 'o' → logprob: -9.894938468933105
    9. 'um' → logprob: -10.269938468933105
    10. 'e' → logprob: -10.394938468933105

Token 55: ' len' (ID: 4631)
  Prédit: ' len'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' len' → logprob: -0.3872930407524109
    2. 'len' → logprob: -1.1372931003570557
    3. '   ' → logprob: -8.012292861938477
    4. '(len' → logprob: -10.262292861938477
    5. ' ' → logprob: -11.262292861938477
    6. '0' → logprob: -11.637292861938477
    7. '[len' → logprob: -12.137292861938477
    8. '=len' → logprob: -12.387292861938477
    9. '1' → logprob: -12.637292861938477
    10. ' n' → logprob: -12.762292861938477

Token 56: '(ch' (ID: 15574)
  Prédit: '(ch'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(ch' → logprob: -0.00011999329581158236
    2. '(' → logprob: -9.250120162963867
    3. '(se' → logprob: -11.750120162963867
    4. ' (' → logprob: -12.000120162963867
    5. '(s' → logprob: -12.625120162963867
    6. 'chairs' → logprob: -13.125120162963867
    7. '(c' → logprob: -13.625120162963867
    8. ' chairs' → logprob: -14.375120162963867
    9. '(chr' → logprob: -15.250120162963867
    10. ')' → logprob: -15.625120162963867

Token 57: 'airs' (ID: 6498)
  Prédit: 'airs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'airs' → logprob: -0.00030066570616327226
    2. 'chairs' → logprob: -8.375300407409668
    3. ')' → logprob: -10.625300407409668
    4. 'air' → logprob: -11.250300407409668
    5. '```' → logprob: -12.000300407409668
    6. 'a' → logprob: -12.625300407409668
    7. '[' → logprob: -12.750300407409668
    8. '_' → logprob: -13.000300407409668
    9. ')
' → logprob: -13.125300407409668
    10. 'irs' → logprob: -13.125300407409668

Token 58: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0277326051145792
    2. ')
' → logprob: -3.6527326107025146
    3. '   ' → logprob: -7.4027323722839355
    4. ' )' → logprob: -8.152732849121094
    5. '       ' → logprob: -9.027732849121094
    6. ')
' → logprob: -9.652732849121094
    7. '):
' → logprob: -10.027732849121094
    8. ')-' → logprob: -10.152732849121094
    9. 'def' → logprob: -10.402732849121094
    10. '-' → logprob: -10.652732849121094

Token 59: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.30378806591033936
    2. '       ' → logprob: -1.8037880659103394
    3. ' for' → logprob: -2.678788185119629
    4. 'for' → logprob: -4.428788185119629
    5. '
' → logprob: -5.803788185119629
    6. ' mid' → logprob: -6.178788185119629
    7. '    
' → logprob: -6.803788185119629
    8. '```' → logprob: -6.803788185119629
    9. 'mid' → logprob: -6.803788185119629
    10. ' left' → logprob: -6.928788185119629

Token 60: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.2456071376800537
    2. ' max' → logprob: -1.2456071376800537
    3. 'max' → logprob: -1.7456071376800537
    4. ' distances' → logprob: -3.4956071376800537
    5. ' best' → logprob: -3.6206071376800537
    6. ' i' → logprob: -3.8706071376800537
    7. ' seats' → logprob: -4.120607376098633
    8. ' last' → logprob: -4.370607376098633
    9. ' for' → logprob: -4.370607376098633
    10. 'dist' → logprob: -4.495607376098633

Token 61: ' Find' (ID: 9764)
  Prédit: ' max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' max' → logprob: -0.8233817219734192
    2. ' best' → logprob: -2.1983816623687744
    3. 'max' → logprob: -2.1983816623687744
    4. ' distances' → logprob: -2.8233816623687744
    5. ' left' → logprob: -3.0733816623687744
    6. ' prev' → logprob: -3.5733816623687744
    7. ' dp' → logprob: -3.9483816623687744
    8. ' res' → logprob: -4.1983819007873535
    9. 'dist' → logprob: -4.1983819007873535
    10. ' seats' → logprob: -4.1983819007873535

Token 62: ' seats' (ID: 24992)
  Prédit: ' the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' the' → logprob: -0.462434858083725
    2. ' last' → logprob: -1.7124348878860474
    3. ' first' → logprob: -2.837434768676758
    4. ' max' → logprob: -3.337434768676758
    5. ' i' → logprob: -3.837434768676758
    6. ' ' → logprob: -4.337434768676758
    7. 'the' → logprob: -4.837434768676758
    8. ' best' → logprob: -5.087434768676758
    9. 'i' → logprob: -5.337434768676758
    10. 'max' → logprob: -5.462434768676758

Token 63: ' not' (ID: 625)
  Prédit: ' that'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' that' → logprob: -1.2416645288467407
    2. ' with' → logprob: -1.4916645288467407
    3. '       ' → logprob: -1.9916645288467407
    4. '_' → logprob: -2.366664409637451
    5. 'with' → logprob: -2.991664409637451
    6. ' for' → logprob: -3.241664409637451
    7. '   ' → logprob: -3.491664409637451
    8. 'for' → logprob: -3.866664409637451
    9. 'that' → logprob: -3.991664409637451
    10. ' between' → logprob: -4.116664409637451

Token 64: ' adjacent' (ID: 39069)
  Prédit: 'occupied'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'occupied' → logprob: -0.2720029652118683
    2. 'taken' → logprob: -2.272002935409546
    3. ' occupied' → logprob: -2.772002935409546
    4. ' taken' → logprob: -3.397002935409546
    5. ''#' → logprob: -4.522003173828125
    6. ' '#'' → logprob: -4.897003173828125
    7. ' '#' → logprob: -5.647003173828125
    8. ''' → logprob: -5.897003173828125
    9. 'blocked' → logprob: -6.147003173828125
    10. ' '' → logprob: -6.147003173828125

Token 65: ' to' (ID: 316)
  Prédit: ' to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' to' → logprob: -0.055048488080501556
    2. 'to' → logprob: -2.9300484657287598
    3. ' ' → logprob: -10.180048942565918
    4. ''' → logprob: -10.555048942565918
    5. '_' → logprob: -10.680048942565918
    6. '```' → logprob: -11.430048942565918
    7. '<|end|>' → logprob: -11.680048942565918
    8. ')' → logprob: -11.805048942565918
    9. '`' → logprob: -11.930048942565918
    10. '=' → logprob: -12.055048942565918

Token 66: ' A' (ID: 355)
  Prédit: ''#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''#' → logprob: -0.18911604583263397
    2. ''' → logprob: -2.4391160011291504
    3. ' '#'' → logprob: -2.8141160011291504
    4. ' '#' → logprob: -5.06411600112915
    5. '#' → logprob: -5.43911600112915
    6. 'occupied' → logprob: -5.56411600112915
    7. '`' → logprob: -6.31411600112915
    8. '"#' → logprob: -6.43911600112915
    9. ' '' → logprob: -6.68911600112915
    10. ''s' → logprob: -6.93911600112915

Token 67: ' from' (ID: 591)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 68: ' right' (ID: 1849)
  Prédit: ' the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' the' → logprob: -1.1223403215408325
    2. 'the' → logprob: -2.372340202331543
    3. 'left' → logprob: -2.622340202331543
    4. ' left' → logprob: -2.872340202331543
    5. ' ' → logprob: -3.122340202331543
    6. ''' → logprob: -3.247340202331543
    7. '0' → logprob: -3.372340202331543
    8. ' both' → logprob: -3.372340202331543
    9. 'def' → logprob: -3.497340202331543
    10. 'B' → logprob: -3.747340202331543

Token 69: ' to' (ID: 316)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -1.399467945098877
    2. '<|end|>' → logprob: -1.774467945098877
    3. ' to' → logprob: -2.024467945098877
    4. '   ' → logprob: -2.149467945098877
    5. ' ' → logprob: -2.899467945098877
    6. ',' → logprob: -2.899467945098877
    7. ' for' → logprob: -3.274467945098877
    8. 'def' → logprob: -3.274467945098877
    9. '<|end|>' → logprob: -3.899467945098877
    10. '-' → logprob: -3.899467945098877

Token 70: ' left' (ID: 3561)
  Prédit: ' left'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' left' → logprob: -0.3028835952281952
    2. 'left' → logprob: -1.4278836250305176
    3. ' the' → logprob: -3.9278836250305176
    4. ' ' → logprob: -7.427883625030518
    5. 'the' → logprob: -7.677883625030518
    6. '_left' → logprob: -8.80288314819336
    7. '<|end|>' → logprob: -9.05288314819336
    8. '0' → logprob: -9.92788314819336
    9. ' range' → logprob: -9.92788314819336
    10. 'range' → logprob: -10.17788314819336

Token 71: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.31761080026626587
    2. '<|end|>' → logprob: -1.942610740661621
    3. '
' → logprob: -2.567610740661621
    4. '   ' → logprob: -4.442610740661621
    5. '<|end|>' → logprob: -4.442610740661621
    6. ' for' → logprob: -4.817610740661621
    7. '        
' → logprob: -5.192610740661621
    8. ',' → logprob: -6.067610740661621
    9. '    
' → logprob: -6.067610740661621
    10. '```' → logprob: -6.442610740661621

Token 72: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.14735794067382812
    2. '   ' → logprob: -2.772357940673828
    3. ' for' → logprob: -3.772357940673828
    4. '<|end|>' → logprob: -4.647357940673828
    5. '```' → logprob: -4.647357940673828
    6. '
' → logprob: -5.022357940673828
    7. '        
' → logprob: -5.522357940673828
    8. ':' → logprob: -5.522357940673828
    9. ' ' → logprob: -5.522357940673828
    10. ',' → logprob: -5.772357940673828

Token 73: ' candidates' (ID: 18116)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.27609366178512573
    2. '<|end|>' → logprob: -3.0260937213897705
    3. '
' → logprob: -3.1510937213897705
    4. ' 
' → logprob: -3.5260937213897705
    5. ' ' → logprob: -3.6510937213897705
    6. 'n' → logprob: -4.151093482971191
    7. 'for' → logprob: -4.276093482971191
    8. '```' → logprob: -4.651093482971191
    9. '       ' → logprob: -4.901093482971191
    10. '   ' → logprob: -4.901093482971191

Token 74: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0005558936391025782
    2. '=' → logprob: -7.500555992126465
    3. '=[]' → logprob: -13.875555992126465
    4. ' ' → logprob: -14.250555992126465
    5. ',' → logprob: -14.375555992126465
    6. ' ' → logprob: -15.875555992126465
    7. ':' → logprob: -15.875555992126465
    8. '```' → logprob: -16.00055503845215
    9. ' ,' → logprob: -16.12555503845215
    10. '<|end|>' → logprob: -16.75055503845215

Token 75: ' []
' (ID: 8911)
  Prédit: ' []'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' []' → logprob: -0.24727848172187805
    2. ' [' → logprob: -1.6222784519195557
    3. '[]' → logprob: -3.8722784519195557
    4. '[' → logprob: -7.747278690338135
    5. '[i' → logprob: -8.872278213500977
    6. ' []
' → logprob: -8.997278213500977
    7. ' ' → logprob: -10.622278213500977
    8. '[n' → logprob: -10.872278213500977
    9. ' []

' → logprob: -11.122278213500977
    10. ' [
' → logprob: -11.622278213500977

Token 76: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6176959276199341
    2. '   ' → logprob: -1.242695927619934
    3. ' for' → logprob: -2.3676958084106445
    4. '	for' → logprob: -3.7426958084106445
    5. '<|end|>' → logprob: -3.8676958084106445
    6. '	   ' → logprob: -4.9926958084106445
    7. '
' → logprob: -5.2426958084106445
    8. '    ' → logprob: -5.2426958084106445
    9. ' ' → logprob: -5.9926958084106445
    10. ':' → logprob: -6.3676958084106445

Token 77: ' for' (ID: 395)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6869739890098572
    2. ' for' → logprob: -0.8119739890098572
    3. 'for' (adapté à ' for') → logprob: -3.061974048614502
    4. '   ' → logprob: -5.311974048614502
    5. '           ' → logprob: -7.811974048614502
    6. ' ' → logprob: -9.061973571777344
    7. '        
' → logprob: -9.186973571777344
    8. '```' → logprob: -9.686973571777344
    9. 'range' → logprob: -9.811973571777344
    10. '    ' → logprob: -9.936973571777344

Token 78: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.25209012627601624
    2. 'i' → logprob: -1.5020900964736938
    3. '   ' → logprob: -10.377090454101562
    4. '```' → logprob: -10.877090454101562
    5. ' in' → logprob: -11.002090454101562
    6. ' j' → logprob: -11.252090454101562
    7. '<|end|>' → logprob: -11.252090454101562
    8. 'j' → logprob: -11.377090454101562
    9. ' ' → logprob: -11.502090454101562
    10. '	i' → logprob: -11.752090454101562

Token 79: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0055898213759064674
    2. 'in' → logprob: -5.255589962005615
    3. ' ' → logprob: -8.130589485168457
    4. 'n' → logprob: -10.255589485168457
    5. 'range' → logprob: -11.505589485168457
    6. ' range' → logprob: -12.255589485168457
    7. ')' → logprob: -12.505589485168457
    8. '```' → logprob: -13.630589485168457
    9. '<|end|>' → logprob: -13.755589485168457
    10. ',' → logprob: -13.755589485168457

Token 80: ' reversed' (ID: 57184)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.348786324262619
    2. ' range' → logprob: -1.2237863540649414
    3. ' reversed' → logprob: -8.598786354064941
    4. 're' → logprob: -9.098786354064941
    5. '   ' → logprob: -11.473786354064941
    6. ' ' → logprob: -11.598786354064941
    7. 'reverse' → logprob: -11.848786354064941
    8. '  ' → logprob: -12.598786354064941
    9. ')' → logprob: -12.973786354064941
    10. '```' → logprob: -13.098786354064941

Token 81: '(range' (ID: 50017)
  Prédit: '(range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(range' → logprob: -6.372916686814278e-05
    2. 'range' → logprob: -10.2500638961792
    3. '(' → logprob: -10.5000638961792
    4. ' range' → logprob: -14.2500638961792
    5. '(r' → logprob: -17.375062942504883
    6. ' (' → logprob: -17.625062942504883
    7. '(ch' → logprob: -18.375062942504883
    8. '	range' → logprob: -18.375062942504883
    9. '(
' → logprob: -18.875062942504883
    10. '(s' → logprob: -19.250062942504883

Token 82: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.0036197893787175417
    2. '(len' → logprob: -5.87861967086792
    3. '(' → logprob: -7.12861967086792
    4. 'n' → logprob: -12.128620147705078
    5. ')n' → logprob: -13.128620147705078
    6. ')' → logprob: -13.753620147705078
    7. 'len' → logprob: -13.878620147705078
    8. '   ' → logprob: -14.003620147705078
    9. ' (' → logprob: -14.128620147705078
    10. '(
' → logprob: -14.253620147705078

Token 83: ')):
' (ID: 22530)
  Prédit: ')):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')):' → logprob: -0.22256527841091156
    2. ')):
' → logprob: -1.8475652933120728
    3. '))' → logprob: -3.472565174102783
    4. ')):
' → logprob: -5.722565174102783
    5. '()))' → logprob: -5.847565174102783
    6. ' ))' → logprob: -6.847565174102783
    7. '       ' → logprob: -6.847565174102783
    8. '-' → logprob: -7.347565174102783
    9. ' -' → logprob: -7.472565174102783
    10. '()' → logprob: -7.972565174102783

Token 84: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.3110749125480652
    2. ':' → logprob: -1.68607497215271
    3. '       ' → logprob: -3.06107497215271
    4. '<|end|>' → logprob: -4.186074733734131
    5. '):' → logprob: -4.561074733734131
    6. '<|end|>' → logprob: -5.686074733734131
    7. '):
' → logprob: -6.061074733734131
    8. ':
' → logprob: -6.936074733734131
    9. ' :' → logprob: -7.561074733734131
    10. '```' → logprob: -7.936074733734131

Token 85: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.2753041982650757
    2. '       ' → logprob: -2.1503043174743652
    3. 'if' (adapté à ' if') → logprob: -3.0253043174743652
    4. '               ' → logprob: -3.4003043174743652
    5. '           ' → logprob: -4.525304317474365
    6. ' ' → logprob: -4.650304317474365
    7. ':' → logprob: -5.025304317474365
    8. '<|end|>' → logprob: -5.275304317474365
    9. '```' → logprob: -6.150304317474365
    10. '        ' → logprob: -6.275304317474365

Token 86: ' chairs' (ID: 34049)
  Prédit: ' chairs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' chairs' → logprob: -0.01107187382876873
    2. 'chairs' → logprob: -4.511071681976318
    3. ' Chairs' → logprob: -12.136072158813477
    4. ' ' → logprob: -12.511072158813477
    5. '   ' → logprob: -13.011072158813477
    6. 'ch' → logprob: -13.261072158813477
    7. ' i' → logprob: -13.511072158813477
    8. ' chair' → logprob: -13.636072158813477
    9. 'chair' → logprob: -13.636072158813477
    10. 'i' → logprob: -13.636072158813477

Token 87: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -8.709308167453855e-05
    2. '[' → logprob: -10.000086784362793
    3. '[
' → logprob: -12.000086784362793
    4. ' [' → logprob: -12.000086784362793
    5. '[I' → logprob: -12.000086784362793
    6. '```' → logprob: -13.000086784362793
    7. '[j' → logprob: -13.250086784362793
    8. 'i' → logprob: -13.375086784362793
    9. '

' → logprob: -13.500086784362793
    10. ' ' → logprob: -13.687586784362793

Token 88: ']' (ID: 60)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.12187295407056808
    2. '==' → logprob: -2.746872901916504
    3. ' !=' → logprob: -3.746872901916504
    4. ')' → logprob: -3.871872901916504
    5. ']' → logprob: -6.121872901916504
    6. '!=' → logprob: -6.746872901916504
    7. '=='' → logprob: -7.371872901916504
    8. ']==' → logprob: -7.621872901916504
    9. ' )' → logprob: -7.746872901916504
    10. ' ' → logprob: -7.996872901916504

Token 89: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.11327905207872391
    2. '==' → logprob: -2.738279104232788
    3. ' !=' → logprob: -3.238279104232788
    4. '!=' → logprob: -6.363278865814209
    5. '=='' → logprob: -7.613278865814209
    6. ' ' → logprob: -8.613279342651367
    7. ' =='' → logprob: -8.613279342651367
    8. ')' → logprob: -8.863279342651367
    9. ''' → logprob: -9.238279342651367
    10. ' '' → logprob: -9.363279342651367

Token 90: ' '#' (ID: 11284)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''' → logprob: -0.1352408230304718
    2. ''.' → logprob: -2.2602407932281494
    3. ' '' → logprob: -4.0102410316467285
    4. ' '.'' → logprob: -6.1352410316467285
    5. ''-' → logprob: -8.13524055480957
    6. ' '.' → logprob: -8.26024055480957
    7. '"' → logprob: -8.26024055480957
    8. ' '_'' → logprob: -8.88524055480957
    9. ''o' → logprob: -8.88524055480957
    10. ''#' → logprob: -9.13524055480957

Token 91: '':
' (ID: 7669)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.05096966028213501
    2. '):' → logprob: -3.4259696006774902
    3. 'and' → logprob: -5.05096960067749
    4. ':' → logprob: -5.30096960067749
    5. ')' → logprob: -5.80096960067749
    6. '):
' → logprob: -6.92596960067749
    7. ''):' → logprob: -7.92596960067749
    8. ''' → logprob: -8.425970077514648
    9. ' or' → logprob: -8.425970077514648
    10. '           ' → logprob: -8.800970077514648

Token 92: '               ' (ID: 506)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.021478671580553055
    2. '               ' → logprob: -4.396478652954102
    3. 'and' → logprob: -5.271478652954102
    4. '           ' → logprob: -6.896478652954102
    5. ' or' → logprob: -7.646478652954102
    6. '<|end|>' → logprob: -7.646478652954102
    7. ''' → logprob: -7.771478652954102
    8. ':' → logprob: -7.896478652954102
    9. '       ' → logprob: -8.021478652954102
    10. ' '' → logprob: -8.896478652954102

Token 93: ' left' (ID: 3561)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.9104681015014648
    2. '               ' → logprob: -0.9104681015014648
    3. ' if' → logprob: -2.785468101501465
    4. '           ' → logprob: -2.910468101501465
    5. ' candidates' → logprob: -3.160468101501465
    6. ' continue' → logprob: -4.910468101501465
    7. ' return' → logprob: -5.160468101501465
    8. ' #' → logprob: -5.285468101501465
    9. '       ' → logprob: -5.410468101501465
    10. '                   ' → logprob: -6.410468101501465

Token 94: '_A' (ID: 6829)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.6442530155181885
    2. ' !=' → logprob: -2.2692530155181885
    3. ' i' → logprob: -2.7692530155181885
    4. '[i' → logprob: -2.8942530155181885
    5. ' >' → logprob: -3.0192530155181885
    6. '>' → logprob: -3.2692530155181885
    7. '(i' → logprob: -3.3942530155181885
    8. '==' → logprob: -3.3942530155181885
    9. 'i' → logprob: -3.5192530155181885
    10. ' not' → logprob: -4.394252777099609

Token 95: ' =' (ID: 314)
  Prédit: 'dj'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dj' → logprob: -0.168060764670372
    2. 'd' → logprob: -3.168060779571533
    3. ' =' → logprob: -3.918060779571533
    4. ' ==' → logprob: -4.668060779571533
    5. '_dist' → logprob: -5.168060779571533
    6. 'dx' → logprob: -5.168060779571533
    7. 'nd' → logprob: -5.293060779571533
    8. '_pos' → logprob: -5.293060779571533
    9. '_index' → logprob: -5.418060779571533
    10. 'ss' → logprob: -5.418060779571533

Token 96: ' (' (ID: 350)
  Prédit: ' False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' False' → logprob: -1.0429627895355225
    2. 'False' → logprob: -1.5429627895355225
    3. ' i' → logprob: -2.0429627895355225
    4. ' (' → logprob: -2.2929627895355225
    5. ' any' → logprob: -2.5429627895355225
    6. 'i' → logprob: -3.2929627895355225
    7. '(i' → logprob: -3.4179627895355225
    8. ' True' → logprob: -4.167963027954102
    9. ' chairs' → logprob: -4.667963027954102
    10. 'any' → logprob: -5.167963027954102

Token 97: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.47494661808013916
    2. ' i' → logprob: -1.0999466180801392
    3. 'chairs' → logprob: -4.59994649887085
    4. ' (' → logprob: -5.34994649887085
    5. ' chairs' → logprob: -5.34994649887085
    6. '(i' → logprob: -5.84994649887085
    7. ' ' → logprob: -5.97494649887085
    8. ')' → logprob: -6.34994649887085
    9. ''' → logprob: -6.53744649887085
    10. ''i' → logprob: -6.53744649887085

Token 98: ' >' (ID: 1424)
  Prédit: ' >'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -1.1282585859298706
    2. ' ==' → logprob: -1.3782585859298706
    3. '+' → logprob: -1.7532585859298706
    4. '>' → logprob: -3.00325870513916
    5. ' +' → logprob: -3.00325870513916
    6. ' <' → logprob: -3.12825870513916
    7. '-' → logprob: -3.37825870513916
    8. '==' → logprob: -3.50325870513916
    9. ' -' → logprob: -3.75325870513916
    10. ' ' → logprob: -4.37825870513916

Token 99: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.31339120864868164
    2. ' ' → logprob: -1.3133912086486816
    3. '1' → logprob: -10.250890731811523
    4. ' seat' → logprob: -11.000890731811523
    5. '  ' → logprob: -11.313390731811523
    6. '   ' → logprob: -11.563390731811523
    7. 'seat' → logprob: -11.938390731811523
    8. '=' → logprob: -11.938390731811523
    9. '    ' → logprob: -12.563390731811523
    10. 'def' → logprob: -12.625890731811523

Token 100: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.005959614180028439
    2. ' ' → logprob: -5.130959510803223
    3. '1' → logprob: -11.630959510803223
    4. 'seat' → logprob: -11.755959510803223
    5. '   ' → logprob: -12.318459510803223
    6. ' seat' → logprob: -12.693459510803223
    7. '  ' → logprob: -14.068459510803223
    8. 'def' → logprob: -14.193459510803223
    9. '    ' → logprob: -14.318459510803223
    10. 'se' → logprob: -14.630959510803223

Token 101: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.1146925687789917
    2. 'and' → logprob: -2.2396926879882812
    3. ')' → logprob: -6.364692687988281
    4. '   ' → logprob: -9.364692687988281
    5. ' ' → logprob: -11.364692687988281
    6. '    ' → logprob: -11.489692687988281
    7. '           ' → logprob: -11.864692687988281
    8. '          ' → logprob: -11.864692687988281
    9. ' )' → logprob: -12.614692687988281
    10. '       ' → logprob: -12.739692687988281

Token 102: ' chairs' (ID: 34049)
  Prédit: 'chairs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'chairs' → logprob: -0.5782933235168457
    2. ' chairs' → logprob: -0.8282933235168457
    3. 'ch' → logprob: -7.328293323516846
    4. 'chair' → logprob: -7.703293323516846
    5. '   ' → logprob: -8.078292846679688
    6. '       ' → logprob: -8.453292846679688
    7. ' seats' → logprob: -8.578292846679688
    8. ' ' → logprob: -8.953292846679688
    9. 'se' → logprob: -9.953292846679688
    10. ')' → logprob: -10.203292846679688

Token 103: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.00010080150241265073
    2. '[' → logprob: -9.875101089477539
    3. '   ' → logprob: -10.875101089477539
    4. 'i' → logprob: -11.625101089477539
    5. ' [' → logprob: -12.375101089477539
    6. '       ' → logprob: -13.000101089477539
    7. '           ' → logprob: -13.250101089477539
    8. '==' → logprob: -13.500101089477539
    9. '[left' → logprob: -13.500101089477539
    10. '  ' → logprob: -13.625101089477539

Token 104: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.41151267290115356
    2. '[i' → logprob: -1.1615126132965088
    3. ' -' → logprob: -4.036512851715088
    4. 'i' → logprob: -5.661512851715088
    5. ' [' → logprob: -7.036512851715088
    6. '[' → logprob: -7.411512851715088
    7. '   ' → logprob: -7.786512851715088
    8. ']' → logprob: -7.786512851715088
    9. '][' → logprob: -8.16151237487793
    10. '```' → logprob: -9.03651237487793

Token 105: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0007476831669919193
    2. ' ' → logprob: -7.2507476806640625
    3. '   ' → logprob: -10.750747680664062
    4. ']' → logprob: -12.500747680664062
    5. ''' → logprob: -12.625747680664062
    6. '2' → logprob: -13.625747680664062
    7. '```' → logprob: -13.750747680664062
    8. ''s' → logprob: -13.813247680664062
    9. '  ' → logprob: -14.125747680664062
    10. '       ' → logprob: -14.375747680664062

Token 106: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.000249061529757455
    2. '2' → logprob: -9.250248908996582
    3. ''' → logprob: -9.500248908996582
    4. ' ' → logprob: -10.250248908996582
    5. ''#' → logprob: -11.375248908996582
    6. '3' → logprob: -11.500248908996582
    7. '4' → logprob: -12.000248908996582
    8. '   ' → logprob: -13.125248908996582
    9. ''A' → logprob: -13.500248908996582
    10. '5' → logprob: -13.500248908996582

Token 107: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.011147446930408478
    2. ']==' → logprob: -4.761147499084473
    3. ' ]' → logprob: -6.136147499084473
    4. ']=='' → logprob: -9.011147499084473
    5. '==' → logprob: -9.511147499084473
    6. '   ' → logprob: -10.636147499084473
    7. ' ==' → logprob: -10.761147499084473
    8. '']' → logprob: -11.136147499084473
    9. ' '' → logprob: -11.136147499084473
    10. ''' → logprob: -11.261147499084473

Token 108: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.2537817358970642
    2. '==' → logprob: -1.628781795501709
    3. ']' → logprob: -4.253781795501709
    4. ' !=' → logprob: -5.003781795501709
    5. '=='' → logprob: -6.628781795501709
    6. ')' → logprob: -6.753781795501709
    7. ']==' → logprob: -7.003781795501709
    8. '!=' → logprob: -7.253781795501709
    9. ''' → logprob: -7.378781795501709
    10. ' '' → logprob: -7.753781795501709

Token 109: ' '' (ID: 461)
  Prédit: ''A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''A' → logprob: -0.021727515384554863
    2. ''' → logprob: -4.521727561950684
    3. ' '' → logprob: -5.396727561950684
    4. ''#' → logprob: -5.646727561950684
    5. ''*' → logprob: -7.521727561950684
    6. ''S' → logprob: -7.771727561950684
    7. ''.' → logprob: -8.396727561950684
    8. ''a' → logprob: -8.396727561950684
    9. ''C' → logprob: -8.646727561950684
    10. ' '#' → logprob: -8.896727561950684

Token 110: 'A' (ID: 32)
  Prédit: 'A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.006247999612241983
    2. '#' → logprob: -5.6312479972839355
    3. ''A' → logprob: -6.6312479972839355
    4. ''' → logprob: -7.3812479972839355
    5. 'a' → logprob: -8.381248474121094
    6. 'B' → logprob: -9.256248474121094
    7. ''#' → logprob: -9.256248474121094
    8. ' A' → logprob: -9.756248474121094
    9. '@' → logprob: -10.693748474121094
    10. '*' → logprob: -10.881248474121094

Token 111: '')
' (ID: 2515)
  Prédit: '')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '')' → logprob: -0.036144182085990906
    2. '')
' → logprob: -3.536144256591797
    3. ')' → logprob: -5.536144256591797
    4. ''' → logprob: -6.161144256591797
    5. ' ')' → logprob: -9.411144256591797
    6. '')
' → logprob: -9.536144256591797
    7. '#' → logprob: -9.786144256591797
    8. ')
' → logprob: -10.411144256591797
    9. ' ')
' → logprob: -10.911144256591797
    10. ')')
' → logprob: -11.036144256591797

Token 112: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.06740294396877289
    2. ' or' → logprob: -3.3174028396606445
    3. ' and' → logprob: -3.6924028396606445
    4. '           ' → logprob: -5.8174028396606445
    5. ')' → logprob: -8.442402839660645
    6. '                   ' → logprob: -8.817402839660645
    7. '              ' → logprob: -8.817402839660645
    8. '
' → logprob: -9.192402839660645
    9. 'and' → logprob: -9.192402839660645
    10. '<|end|>' → logprob: -9.692402839660645

Token 113: ' right' (ID: 1849)
  Prédit: ' right'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' right' → logprob: -0.04885101318359375
    2. 'right' (adapté à ' right') → logprob: -3.1738510131835938
    3. ' and' → logprob: -5.298851013183594
    4. '               ' → logprob: -8.173851013183594
    5. 'and' → logprob: -8.548851013183594
    6. '           ' → logprob: -8.673851013183594
    7. ' if' → logprob: -9.298851013183594
    8. ' or' → logprob: -10.173851013183594
    9. ' ' → logprob: -11.173851013183594
    10. '
' → logprob: -11.423851013183594

Token 114: '_A' (ID: 6829)
  Prédit: '_A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_A' → logprob: -0.13892941176891327
    2. ' =' → logprob: -2.7639293670654297
    3. '=' → logprob: -3.2639293670654297
    4. '_' → logprob: -3.6389293670654297
    5. '=_' → logprob: -7.13892936706543
    6. ' _' → logprob: -7.38892936706543
    7. '_B' → logprob: -8.51392936706543
    8. '   ' → logprob: -9.26392936706543
    9. '_=' → logprob: -9.51392936706543
    10. ' ' → logprob: -9.88892936706543

Token 115: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0067266179248690605
    2. '=' → logprob: -5.0067267417907715
    3. '   ' → logprob: -12.006726264953613
    4. ' ' → logprob: -13.006726264953613
    5. '           ' → logprob: -13.631726264953613
    6. '       ' → logprob: -14.381726264953613
    7. '    ' → logprob: -15.131726264953613
    8. ' =(' → logprob: -15.381726264953613
    9. '  ' → logprob: -16.00672721862793
    10. '     ' → logprob: -16.25672721862793

Token 116: ' (' (ID: 350)
  Prédit: ' ('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.04406537488102913
    2. '(i' → logprob: -3.169065475463867
    3. '(' → logprob: -7.044065475463867
    4. '(False' → logprob: -9.169065475463867
    5. ' False' → logprob: -9.919065475463867
    6. ' ' → logprob: -11.169065475463867
    7. 'False' → logprob: -11.169065475463867
    8. '(True' → logprob: -12.044065475463867
    9. '   ' → logprob: -13.419065475463867
    10. '  ' → logprob: -14.169065475463867

Token 117: 'i' (ID: 72)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.5638108849525452
    2. 'i' → logprob: -1.3138108253479004
    3. ' (' → logprob: -1.9388108253479004
    4. '(i' → logprob: -4.0638108253479
    5. ' ' → logprob: -7.9388108253479
    6. '   ' → logprob: -8.063811302185059
    7. ')' → logprob: -9.313811302185059
    8. '  ' → logprob: -9.438811302185059
    9. '    ' → logprob: -9.688811302185059
    10. '(' → logprob: -9.813811302185059

Token 118: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.2541961669921875
    2. '<' → logprob: -1.5041961669921875
    3. '<n' → logprob: -7.0041961669921875
    4. '+' → logprob: -7.1291961669921875
    5. '>' → logprob: -8.879196166992188
    6. ' +' → logprob: -9.379196166992188
    7. ' >' → logprob: -9.379196166992188
    8. ' ' → logprob: -9.379196166992188
    9. '<len' → logprob: -9.879196166992188
    10. '==' → logprob: -10.879196166992188

Token 119: ' n' (ID: 297)
  Prédit: ' n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.08898887038230896
    2. 'n' → logprob: -2.463988780975342
    3. '   ' → logprob: -10.4639892578125
    4. ' ' → logprob: -11.8389892578125
    5. '	n' → logprob: -12.7139892578125
    6. '    ' → logprob: -13.0889892578125
    7. '  ' → logprob: -13.3389892578125
    8. '
' → logprob: -13.9639892578125
    9. ')n' → logprob: -14.2139892578125
    10. '(n' → logprob: -14.3389892578125

Token 120: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.3868820369243622
    2. ' -' → logprob: -1.1368820667266846
    3. '1' → logprob: -11.886881828308105
    4. ' ' → logprob: -13.261881828308105
    5. 'and' → logprob: -13.511881828308105
    6. ' and' → logprob: -14.511881828308105
    7. '```' → logprob: -15.761881828308105
    8. ')' → logprob: -16.011882781982422
    9. '   ' → logprob: -16.511882781982422
    10. '
' → logprob: -16.886882781982422

Token 121: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.009759039618074894
    2. ' ' → logprob: -4.634758949279785
    3. '   ' → logprob: -13.509758949279785
    4. '```' → logprob: -14.259758949279785
    5. '  ' → logprob: -15.259758949279785
    6. '<|end|>' → logprob: -15.447258949279785
    7. '2' → logprob: -16.4472599029541
    8. '
' → logprob: -16.5097599029541
    9. '    ' → logprob: -16.6347599029541
    10. '0' → logprob: -16.6972599029541

Token 122: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0013433275744318962
    2. ' ' → logprob: -6.626343250274658
    3. '   ' → logprob: -11.626343727111816
    4. '```' → logprob: -13.376343727111816
    5. '
' → logprob: -13.751343727111816
    6. '0' → logprob: -14.251343727111816
    7. '2' → logprob: -14.376343727111816
    8. '  ' → logprob: -14.376343727111816
    9. '     ' → logprob: -14.501343727111816
    10. '       ' → logprob: -14.751343727111816

Token 123: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.01417373027652502
    2. 'and' → logprob: -4.26417350769043
    3. ' ' → logprob: -12.01417350769043
    4. ')' → logprob: -12.76417350769043
    5. '    ' → logprob: -14.88917350769043
    6. '        ' → logprob: -15.38917350769043
    7. '   ' → logprob: -16.26417350769043
    8. ' )' → logprob: -16.38917350769043
    9. '	and' → logprob: -16.51417350769043
    10. '```' → logprob: -16.88917350769043

Token 124: ' chairs' (ID: 34049)
  Prédit: ' chairs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' chairs' → logprob: -0.3141062557697296
    2. 'chairs' → logprob: -1.3141062259674072
    3. 'ch' → logprob: -7.939106464385986
    4. ' ' → logprob: -8.439105987548828
    5. '   ' → logprob: -9.439105987548828
    6. 'chair' → logprob: -9.689105987548828
    7. '(ch' → logprob: -10.939105987548828
    8. '  ' → logprob: -10.939105987548828
    9. '       ' → logprob: -11.501605987548828
    10. ' seats' → logprob: -11.876605987548828

Token 125: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -5.514650183613412e-05
    2. '[' → logprob: -10.625055313110352
    3. '```' → logprob: -11.875055313110352
    4. '==' → logprob: -12.250055313110352
    5. ' [' → logprob: -12.625055313110352
    6. '   ' → logprob: -13.000055313110352
    7. ')' → logprob: -13.125055313110352
    8. ' ==' → logprob: -13.500055313110352
    9. ' ' → logprob: -14.000055313110352
    10. '`' → logprob: -14.125055313110352

Token 126: ' +' (ID: 659)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.4973273277282715
    2. '+' → logprob: -1.1223273277282715
    3. ' +' → logprob: -2.8723273277282715
    4. ']' → logprob: -4.8723273277282715
    5. ' [' → logprob: -7.2473273277282715
    6. '[' → logprob: -7.9973273277282715
    7. '][' → logprob: -8.62232780456543
    8. '+i' → logprob: -8.62232780456543
    9. '   ' → logprob: -8.74732780456543
    10. ' ==' → logprob: -8.99732780456543

Token 127: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.008920984342694283
    2. ' ' → logprob: -5.133921146392822
    3. ''' → logprob: -6.508921146392822
    4. ']' → logprob: -7.383921146392822
    5. '0' → logprob: -7.883921146392822
    6. ''i' → logprob: -8.758920669555664
    7. ''#' → logprob: -9.133920669555664
    8. ''s' → logprob: -9.758920669555664
    9. ' '' → logprob: -10.258920669555664
    10. ''A' → logprob: -10.383920669555664

Token 128: '1' (ID: 16)
  Prédit: ''A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''A' → logprob: -0.20905683934688568
    2. ''' → logprob: -1.8340568542480469
    3. ''#' → logprob: -3.709056854248047
    4. ''i' → logprob: -6.709056854248047
    5. 'A' → logprob: -6.834056854248047
    6. ' '' → logprob: -6.834056854248047
    7. ''a' → logprob: -8.084056854248047
    8. ''s' → logprob: -8.709056854248047
    9. ''I' → logprob: -9.334056854248047
    10. ''S' → logprob: -9.834056854248047

Token 129: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.06544190645217896
    2. ']==' → logprob: -3.190441846847534
    3. '==' → logprob: -4.440442085266113
    4. ' ==' → logprob: -4.690442085266113
    5. ' ]' → logprob: -7.565442085266113
    6. ']=='' → logprob: -7.690442085266113
    7. '']' → logprob: -9.190442085266113
    8. '=='' → logprob: -10.690442085266113
    9. ' ' → logprob: -10.940442085266113
    10. ''' → logprob: -11.190442085266113

Token 130: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.25438106060028076
    2. '==' → logprob: -1.5043810606002808
    3. '=='' → logprob: -6.62938117980957
    4. ')' → logprob: -7.87938117980957
    5. ' ' → logprob: -8.37938117980957
    6. ' =='' → logprob: -8.87938117980957
    7. ']==' → logprob: -9.00438117980957
    8. ']' → logprob: -9.37938117980957
    9. ''' → logprob: -9.37938117980957
    10. ')==' → logprob: -10.50438117980957

Token 131: ' '' (ID: 461)
  Prédit: ''A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''A' → logprob: -0.06767170876264572
    2. ' '' → logprob: -2.817671775817871
    3. ''' → logprob: -5.192671775817871
    4. 'A' → logprob: -9.817671775817871
    5. ' ' → logprob: -10.567671775817871
    6. ''S' → logprob: -12.067671775817871
    7. '  ' → logprob: -12.192671775817871
    8. ''C' → logprob: -12.192671775817871
    9. ''a' → logprob: -12.317671775817871
    10. '"A' → logprob: -12.692671775817871

Token 132: 'A' (ID: 32)
  Prédit: 'A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.001081756199710071
    2. ''' → logprob: -7.626081943511963
    3. ''A' → logprob: -7.626081943511963
    4. 'B' → logprob: -10.126081466674805
    5. '#' → logprob: -10.751081466674805
    6. ' A' → logprob: -11.001081466674805
    7. 'a' → logprob: -12.001081466674805
    8. '')' → logprob: -12.126081466674805
    9. ''s' → logprob: -13.001081466674805
    10. ')' → logprob: -13.376081466674805

Token 133: '')
' (ID: 2515)
  Prédit: '')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '')
' → logprob: -0.7592673897743225
    2. ')
' → logprob: -1.2592673301696777
    3. ')' → logprob: -1.8842673301696777
    4. '')' → logprob: -2.3842673301696777
    5. ')')
' → logprob: -6.259267330169678
    6. '               ' → logprob: -6.759267330169678
    7. ')'
' → logprob: -8.134267807006836
    8. '           ' → logprob: -8.759267807006836
    9. '       ' → logprob: -9.259267807006836
    10. ' )
' → logprob: -9.384267807006836

Token 134: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.029336735606193542
    2. '<|end|>' → logprob: -4.154336929321289
    3. '           ' → logprob: -4.404336929321289
    4. '<|end|>' → logprob: -7.404336929321289
    5. ' if' → logprob: -9.529336929321289
    6. '       ' → logprob: -9.654336929321289
    7. ',' → logprob: -9.779336929321289
    8. '                
' → logprob: -9.904336929321289
    9. ' ' → logprob: -10.654336929321289
    10. ')' → logprob: -10.654336929321289

Token 135: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.10112322121858597
    2. '               ' → logprob: -2.976123332977295
    3. 'if' (adapté à ' if') → logprob: -3.101123332977295
    4. '           ' → logprob: -9.476122856140137
    5. ' continue' → logprob: -9.476122856140137
    6. 'continue' → logprob: -11.851122856140137
    7. '
' → logprob: -11.976122856140137
    8. ' ' → logprob: -12.101122856140137
    9. '       ' → logprob: -12.476122856140137
    10. '                
' → logprob: -12.851122856140137

Token 136: ' not' (ID: 625)
  Prédit: ' not'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.5761666893959045
    2. 'not' → logprob: -0.8261666893959045
    3. '(not' → logprob: -8.951167106628418
    4. '   ' → logprob: -10.576167106628418
    5. '           ' → logprob: -10.701167106628418
    6. '               ' → logprob: -10.951167106628418
    7. '	not' → logprob: -11.326167106628418
    8. ' (' → logprob: -11.951167106628418
    9. '                   ' → logprob: -12.951167106628418
    10. '       ' → logprob: -13.326167106628418

Token 137: ' (' (ID: 350)
  Prédit: '(left'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(left' → logprob: -0.44432657957077026
    2. ' (' → logprob: -1.069326639175415
    3. ' left' → logprob: -4.444326400756836
    4. 'left' → logprob: -5.944326400756836
    5. '(' → logprob: -6.819326400756836
    6. '[left' → logprob: -11.069326400756836
    7. ' ' → logprob: -11.944326400756836
    8. ' ' → logprob: -12.069326400756836
    9. '(right' → logprob: -12.444326400756836
    10. '(le' → logprob: -13.319326400756836

Token 138: 'left' (ID: 4530)
  Prédit: 'left'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'left' → logprob: -0.009768364951014519
    2. ' left' → logprob: -4.634768486022949
    3. '   ' → logprob: -11.75976848602295
    4. '(left' → logprob: -13.75976848602295
    5. ' ' → logprob: -13.88476848602295
    6. '	left' → logprob: -14.25976848602295
    7. ' lef' → logprob: -15.00976848602295
    8. 'right' → logprob: -15.00976848602295
    9. 'lef' → logprob: -15.00976848602295
    10. '           ' → logprob: -15.13476848602295

Token 139: '_A' (ID: 6829)
  Prédit: '_A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_A' → logprob: -8.268254896393046e-05
    2. ' _' → logprob: -10.250082969665527
    3. ' or' → logprob: -10.500082969665527
    4. '_' → logprob: -11.375082969665527
    5. ' and' → logprob: -12.250082969665527
    6. 'A' → logprob: -14.000082969665527
    7. '```' → logprob: -14.750082969665527
    8. '   ' → logprob: -14.875082969665527
    9. '               ' → logprob: -15.000082969665527
    10. '                   ' → logprob: -15.000082969665527

Token 140: ' or' (ID: 503)
  Prédit: ' or'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' or' → logprob: -0.002385045401751995
    2. 'or' → logprob: -6.127385139465332
    3. ' and' → logprob: -8.752385139465332
    4. ')' → logprob: -10.752385139465332
    5. ' ' → logprob: -11.252385139465332
    6. 'and' → logprob: -13.127385139465332
    7. '               ' → logprob: -13.127385139465332
    8. ' )' → logprob: -14.127385139465332
    9. '           ' → logprob: -14.252385139465332
    10. '                ' → logprob: -14.377385139465332

Token 141: ' right' (ID: 1849)
  Prédit: 'right'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'right' → logprob: -0.251935750246048
    2. ' right' → logprob: -1.5019357204437256
    3. '               ' → logprob: -12.251935958862305
    4. ' ' → logprob: -14.251935958862305
    5. '           ' → logprob: -15.126935958862305
    6. '	right' → logprob: -15.126935958862305
    7. '                   ' → logprob: -15.751935958862305
    8. '(right' → logprob: -15.876935958862305
    9. '[right' → logprob: -16.001935958862305
    10. '   ' → logprob: -16.501935958862305

Token 142: '_A' (ID: 6829)
  Prédit: '_A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_A' → logprob: -0.0002892258344218135
    2. 'A' → logprob: -8.375288963317871
    3. '```' → logprob: -11.250288963317871
    4. '   ' → logprob: -11.375288963317871
    5. '_' → logprob: -11.500288963317871
    6. ')' → logprob: -11.750288963317871
    7. ' _' → logprob: -13.000288963317871
    8. '               ' → logprob: -13.250288963317871
    9. ')_' → logprob: -13.500288963317871
    10. '_B' → logprob: -13.500288963317871

Token 143: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.05534245818853378
    2. '):' → logprob: -2.930342435836792
    3. ')' → logprob: -9.055342674255371
    4. '               ' → logprob: -9.430342674255371
    5. '                   ' → logprob: -9.680342674255371
    6. '):

' → logprob: -9.805342674255371
    7. '):
' → logprob: -10.180342674255371
    8. ' ):
' → logprob: -10.180342674255371
    9. '           ' → logprob: -10.305342674255371
    10. ':
' → logprob: -11.305342674255371

Token 144: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.016918616369366646
    2. '               ' → logprob: -4.516918659210205
    3. ' candidates' → logprob: -5.891918659210205
    4. '           ' → logprob: -6.141918659210205
    5. ',' → logprob: -8.516918182373047
    6. '<|end|>' → logprob: -9.016918182373047
    7. ')' → logprob: -9.141918182373047
    8. '```' → logprob: -9.516918182373047
    9. '<|end|>' → logprob: -9.641918182373047
    10. '                       ' → logprob: -9.641918182373047

Token 145: ' candidates' (ID: 18116)
  Prédit: ' candidates'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' candidates' → logprob: -0.014379506930708885
    2. 'c' → logprob: -4.889379501342773
    3. '               ' → logprob: -5.764379501342773
    4. '                   ' → logprob: -5.889379501342773
    5. '       ' → logprob: -8.389379501342773
    6. '                       ' → logprob: -8.514379501342773
    7. 'return' → logprob: -9.514379501342773
    8. '```' → logprob: -9.639379501342773
    9. 'andidates' → logprob: -9.764379501342773
    10. '           ' → logprob: -10.264379501342773

Token 146: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.07900909334421158
    2. '.' → logprob: -2.5790090560913086
    3. ' .' → logprob: -9.329009056091309
    4. '<|end|>' → logprob: -12.204009056091309
    5. '.setdefault' → logprob: -12.204009056091309
    6. '.push' → logprob: -12.329009056091309
    7. '.add' → logprob: -12.454009056091309
    8. '.app' → logprob: -12.454009056091309
    9. '.Append' → logprob: -13.704009056091309
    10. ').' → logprob: -13.829009056091309

Token 147: '(i' (ID: 3649)
  Prédit: '(i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -7.465036105713807e-06
    2. '(' → logprob: -11.875007629394531
    3. ' (' → logprob: -15.500007629394531
    4. '(
' → logprob: -16.37500762939453
    5. '((' → logprob: -17.50000762939453
    6. 'i' → logprob: -17.62500762939453
    7. '(ii' → logprob: -18.50000762939453
    8. '   ' → logprob: -19.00000762939453
    9. '(I' → logprob: -19.12500762939453
    10. ' i' → logprob: -19.75000762939453

Token 148: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.008468837477266788
    2. ')
' → logprob: -5.0084686279296875
    3. '       ' → logprob: -6.3834686279296875
    4. '   ' → logprob: -10.633468627929688
    5. ' )' → logprob: -11.133468627929688
    6. ')

' → logprob: -11.633468627929688
    7. '               ' → logprob: -12.383468627929688
    8. '           ' → logprob: -12.508468627929688
    9. ')return' → logprob: -13.633468627929688
    10. '
' → logprob: -14.383468627929688

Token 149: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.01507793553173542
    2. '
' → logprob: -4.515078067779541
    3. '        
' → logprob: -6.890078067779541
    4. '   ' → logprob: -7.140078067779541
    5. '    
' → logprob: -7.765078067779541
    6. '<|end|>' → logprob: -7.890078067779541
    7. '           ' → logprob: -8.765077590942383
    8. '  
' → logprob: -8.765077590942383
    9. ')' → logprob: -8.765077590942383
    10. ' if' → logprob: -9.140077590942383

Token 150: ' if' (ID: 538)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2528409957885742
    2. '   ' → logprob: -2.252840995788574
    3. ' if' → logprob: -2.252840995788574
    4. '<|end|>' → logprob: -4.877840995788574
    5. ' 
' → logprob: -6.877840995788574
    6. ' ' → logprob: -7.127840995788574
    7. ' return' → logprob: -7.252840995788574
    8. '        
' → logprob: -7.377840995788574
    9. 'if' (adapté à ' if') → logprob: -7.627840995788574
    10. '
' → logprob: -7.752840995788574

Token 151: ' candidates' (ID: 18116)
  Prédit: ' candidates'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' candidates' → logprob: -0.045713871717453
    2. ' not' → logprob: -3.1707139015197754
    3. 'c' → logprob: -6.420713901519775
    4. ' len' → logprob: -7.170713901519775
    5. 'not' → logprob: -8.295713424682617
    6. 'len' → logprob: -10.420713424682617
    7. ' ' → logprob: -11.045713424682617
    8. ' c' → logprob: -11.420713424682617
    9. '   ' → logprob: -12.795713424682617
    10. ' candidats' → logprob: -13.545713424682617

Token 152: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.004055602476000786
    2. ':
' → logprob: -6.379055500030518
    3. '):' → logprob: -6.879055500030518
    4. '<|end|>' → logprob: -7.504055500030518
    5. '==' → logprob: -7.879055500030518
    6. ' ==' → logprob: -9.254055976867676
    7. '<|end|>' → logprob: -9.379055976867676
    8. ')' → logprob: -9.754055976867676
    9. ' :' → logprob: -10.379055976867676
    10. '):
' → logprob: -10.754055976867676

Token 153: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.04887916147708893
    2. ' return' → logprob: -3.1738791465759277
    3. '       ' → logprob: -5.673879146575928
    4. 'return' → logprob: -6.048879146575928
    5. '	       ' → logprob: -11.173879623413086
    6. '   ' → logprob: -11.423879623413086
    7. '               ' → logprob: -11.423879623413086
    8. '```' → logprob: -11.798879623413086
    9. '
' → logprob: -12.548879623413086
    10. ' for' → logprob: -13.048879623413086

Token 154: ' return' (ID: 622)
  Prédit: ' return'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.3379135727882385
    2. 'return' (adapté à ' return') → logprob: -1.3379135131835938
    3. '           ' → logprob: -3.8379135131835938
    4. '       ' → logprob: -6.587913513183594
    5. ' for' → logprob: -8.212913513183594
    6. '               ' → logprob: -8.212913513183594
    7. 'chairs' → logprob: -8.587913513183594
    8. ' chairs' → logprob: -8.712913513183594
    9. '   ' → logprob: -9.462913513183594
    10. 'for' → logprob: -9.462913513183594

Token 155: ' candidates' (ID: 18116)
  Prédit: ' candidates'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' candidates' → logprob: -0.001709924777969718
    2. 'c' → logprob: -6.376709938049316
    3. ' max' → logprob: -12.751709938049316
    4. ' c' → logprob: -13.251709938049316
    5. 'max' → logprob: -14.001709938049316
    6. ' candidats' → logprob: -14.001709938049316
    7. 'cand' → logprob: -14.876709938049316
    8. ' candidatos' → logprob: -15.626709938049316
    9. '   ' → logprob: -16.001708984375
    10. ' cand' → logprob: -16.126708984375

Token 156: '[' (ID: 58)
  Prédit: '[-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[-' → logprob: -0.48206982016563416
    2. '[' → logprob: -0.9820698499679565
    3. '0' → logprob: -4.857069969177246
    4. '-' → logprob: -9.232069969177246
    5. '```' → logprob: -10.732069969177246
    6. ' ' → logprob: -10.982069969177246
    7. ' [' → logprob: -11.482069969177246
    8. ' [-' → logprob: -11.607069969177246
    9. '   ' → logprob: -12.232069969177246
    10. '[
' → logprob: -12.232069969177246

Token 157: '0' (ID: 15)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.4288857579231262
    2. '0' → logprob: -1.0538856983184814
    3. ' -' → logprob: -9.178885459899902
    4. ' ' → logprob: -10.178885459899902
    5. '[-' → logprob: -11.428885459899902
    6. '
' → logprob: -12.303885459899902
    7. '   ' → logprob: -12.616385459899902
    8. '-l' → logprob: -12.866385459899902
    9. 'len' → logprob: -12.928885459899902
    10. '[' → logprob: -13.178885459899902

Token 158: ']
' (ID: 1592)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 159: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0003981376066803932
    2. 'else' → logprob: -8.500397682189941
    3. 'return' → logprob: -9.125397682189941
    4. ' else' → logprob: -10.375397682189941
    5. '
' → logprob: -10.875397682189941
    6. '   ' → logprob: -11.125397682189941
    7. '        
' → logprob: -11.750397682189941
    8. ' return' → logprob: -12.000397682189941
    9. '<|end|>' → logprob: -13.000397682189941
    10. '           ' → logprob: -14.125397682189941

Token 160: ' else' (ID: 1203)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.023784251883625984
    2. 'else' (adapté à ' else') → logprob: -4.398784160614014
    3. 'return' → logprob: -5.023784160614014
    4. ' else' → logprob: -5.898784160614014
    5. '   ' → logprob: -6.773784160614014
    6. ' return' → logprob: -7.648784160614014
    7. '
' → logprob: -8.523784637451172
    8. '        
' → logprob: -10.648784637451172
    9. '           ' → logprob: -11.523784637451172
    10. '#' → logprob: -12.148784637451172

Token 161: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.8615345358848572
    2. '           ' → logprob: -0.8615345358848572
    3. ':
' → logprob: -1.986534595489502
    4. ' return' → logprob: -5.236534595489502
    5. '       ' → logprob: -5.361534595489502
    6. '   ' → logprob: -5.611534595489502
    7. ':return' → logprob: -6.486534595489502
    8. 'return' → logprob: -6.861534595489502
    9. '<|end|>' → logprob: -8.236534118652344
    10. ',' → logprob: -8.236534118652344

Token 162: '           ' (ID: 352)
  Prédit: ' return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.9342919588088989
    2. '           ' → logprob: -1.184291958808899
    3. '       ' → logprob: -1.434291958808899
    4. 'return' → logprob: -2.8092918395996094
    5. '   ' → logprob: -7.059291839599609
    6. '#' → logprob: -7.684291839599609
    7. ' for' → logprob: -8.05929183959961
    8. ' -' → logprob: -8.68429183959961
    9. ' #' → logprob: -8.80929183959961
    10. '
' → logprob: -9.18429183959961

Token 163: ' #' (ID: 1069)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.2211102992296219
    2. ' return' → logprob: -1.7211103439331055
    3. '-' → logprob: -4.5961103439331055
    4. '       ' → logprob: -5.9711103439331055
    5. 'for' → logprob: -6.2211103439331055
    6. ' -' → logprob: -6.5961103439331055
    7. '#' (adapté à ' #') → logprob: -6.8461103439331055
    8. ' for' → logprob: -7.5961103439331055
    9. '   ' → logprob: -8.221110343933105
    10. 'seat' → logprob: -8.346110343933105

Token 164: ' No' (ID: 3004)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.4063546061515808
    2. '#' → logprob: -1.5313546657562256
    3. ' return' → logprob: -2.6563546657562256
    4. 'for' → logprob: -3.6563546657562256
    5. ' #' → logprob: -4.6563544273376465
    6. ' for' → logprob: -5.4063544273376465
    7. 'seat' → logprob: -6.1563544273376465
    8. 'max' → logprob: -7.1563544273376465
    9. 'left' → logprob: -7.2813544273376465
    10. 'pos' → logprob: -7.2813544273376465

Token 165: ' place' (ID: 2475)
  Prédit: ' seats'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' seats' → logprob: -1.0927997827529907
    2. ' seat' → logprob: -1.8427997827529907
    3. ' available' → logprob: -2.092799663543701
    4. 'seat' → logprob: -2.717799663543701
    5. 'space' → logprob: -3.342799663543701
    6. '#' → logprob: -3.342799663543701
    7. ' free' → logprob: -3.592799663543701
    8. 'available' → logprob: -3.592799663543701
    9. 'se' → logprob: -3.717799663543701
    10. ' #' → logprob: -4.092799663543701

Token 166: ' except' (ID: 6384)
  Prédit: ' to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' to' → logprob: -0.5124655961990356
    2. ' left' → logprob: -1.7624655961990356
    3. 'to' → logprob: -2.387465476989746
    4. ' for' → logprob: -2.762465476989746
    5. 'left' → logprob: -3.262465476989746
    6. '           ' → logprob: -4.387465476989746
    7. 'for' → logprob: -4.387465476989746
    8. 'else' → logprob: -6.387465476989746
    9. '       ' → logprob: -6.387465476989746
    10. ' found' → logprob: -6.637465476989746

Token 167: ' next' (ID: 2613)
  Prédit: 'adj'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'adj' → logprob: -0.6433913111686707
    2. ' adjacent' → logprob: -2.3933913707733154
    3. ' next' → logprob: -2.8933913707733154
    4. ' for' → logprob: -3.0183913707733154
    5. ' where' → logprob: -3.2683913707733154
    6. 'A' → logprob: -3.2683913707733154
    7. 'for' → logprob: -3.5183913707733154
    8. 'where' → logprob: -3.5183913707733154
    9. ' seats' → logprob: -3.6433913707733154
    10. 'next' → logprob: -3.7683913707733154

Token 168: ' to' (ID: 316)
  Prédit: 'to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'to' → logprob: -0.2256854772567749
    2. ' to' → logprob: -1.600685477256775
    3. '_to' → logprob: -8.600685119628906
    4. 'door' → logprob: -10.350685119628906
    5. '-to' → logprob: -11.600685119628906
    6. '   ' → logprob: -12.100685119628906
    7. 'To' → logprob: -12.225685119628906
    8. '

' → logprob: -12.225685119628906
    9. ' door' → logprob: -12.350685119628906
    10. 'A' → logprob: -12.475685119628906

Token 169: ' A' (ID: 355)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.4405987858772278
    2. ''A' → logprob: -1.065598726272583
    3. ' '' → logprob: -5.440598964691162
    4. ' A' → logprob: -5.565598964691162
    5. ''' → logprob: -5.940598964691162
    6. ''a' → logprob: -8.190598487854004
    7. 'a' → logprob: -9.315598487854004
    8. '```' → logprob: -9.565598487854004
    9. '"A' → logprob: -9.565598487854004
    10. '

' → logprob: -9.690598487854004

Token 170: ',' (ID: 11)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7225189208984375
    2. '           ' → logprob: -0.9725189208984375
    3. ',' → logprob: -2.9725189208984375
    4. ' return' → logprob: -2.9725189208984375
    5. 'return' → logprob: -4.5975189208984375
    6. ':' → logprob: -5.5975189208984375
    7. '
' → logprob: -5.9725189208984375
    8. ':
' → logprob: -5.9725189208984375
    9. ' for' → logprob: -6.0975189208984375
    10. '               ' → logprob: -6.0975189208984375

Token 171: ' so' (ID: 813)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.09093765914440155
    2. ' return' → logprob: -2.715937614440918
    3. 'for' → logprob: -4.465937614440918
    4. '#' → logprob: -5.590937614440918
    5. '       ' → logprob: -5.715937614440918
    6. ' for' → logprob: -6.215937614440918
    7. '           ' → logprob: -9.340937614440918
    8. ' #' → logprob: -9.465937614440918
    9. 'max' → logprob: -9.840937614440918
    10. '   ' → logprob: -10.590937614440918

Token 172: ' pick' (ID: 5230)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.061771031469106674
    2. ' return' → logprob: -2.9367709159851074
    3. 'for' → logprob: -5.686770915985107
    4. '       ' → logprob: -6.811770915985107
    5. '#' → logprob: -6.936770915985107
    6. ' for' → logprob: -7.061770915985107
    7. '           ' → logprob: -7.811770915985107
    8. '   ' → logprob: -9.436771392822266
    9. ' ' → logprob: -10.936771392822266
    10. ' #' → logprob: -11.186771392822266

Token 173: ' left' (ID: 3561)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -1.2638248205184937
    2. 'the' → logprob: -1.2638248205184937
    3. 'chairs' → logprob: -1.6388248205184937
    4. ' the' → logprob: -2.013824939727783
    5. ' chairs' → logprob: -3.763824939727783
    6. ' i' → logprob: -3.888824939727783
    7. 'se' → logprob: -4.763824939727783
    8. ' next' → logprob: -4.888824939727783
    9. '[i' → logprob: -5.138824939727783
    10. 'next' → logprob: -5.263824939727783

Token 174: 'most' (ID: 5309)
  Prédit: 'most'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'most' → logprob: -0.029320869594812393
    2. '_m' → logprob: -4.90432071685791
    3. ' =' → logprob: -5.65432071685791
    4. '=' → logprob: -5.77932071685791
    5. '[' → logprob: -6.52932071685791
    6. 'A' → logprob: -6.65432071685791
    7. '(' → logprob: -6.65432071685791
    8. 'end' → logprob: -6.65432071685791
    9. 'side' → logprob: -7.15432071685791
    10. 'of' → logprob: -7.52932071685791

Token 175: ' empty' (ID: 8213)
  Prédit: ' return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.6129506230354309
    2. 'return' → logprob: -1.2379505634307861
    3. 'chairs' → logprob: -2.487950563430786
    4. ' chairs' → logprob: -3.737950563430786
    5. ' for' → logprob: -4.112950801849365
    6. 'for' → logprob: -4.737950801849365
    7. ' [' → logprob: -5.487950801849365
    8. 'chair' → logprob: -5.487950801849365
    9. '0' → logprob: -5.737950801849365
    10. ' i' → logprob: -5.987950801849365

Token 176: ' seat' (ID: 15512)
  Prédit: 'chair'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'chair' → logprob: -0.534675121307373
    2. ' chair' → logprob: -1.784675121307373
    3. ' seat' → logprob: -2.409675121307373
    4. '('#' → logprob: -3.409675121307373
    5. '#' → logprob: -3.784675121307373
    6. '(' → logprob: -3.784675121307373
    7. 'seat' → logprob: -4.409675121307373
    8. '(i' → logprob: -4.659675121307373
    9. 'chairs' → logprob: -4.909675121307373
    10. 'index' → logprob: -5.409675121307373

Token 177: ' from' (ID: 591)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.07115275412797928
    2. ' return' → logprob: -3.321152687072754
    3. 'return' → logprob: -4.321152687072754
    4. ' for' → logprob: -4.696152687072754
    5. ':' → logprob: -6.196152687072754
    6. '           ' → logprob: -6.196152687072754
    7. '0' → logprob: -6.821152687072754
    8. '(' → logprob: -6.946152687072754
    9. ' ' → logprob: -7.446152687072754
    10. '   ' → logprob: -7.571152687072754

Token 178: ' left' (ID: 3561)
  Prédit: 'left'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'left' → logprob: -0.41909894347190857
    2. 'right' → logprob: -1.919098973274231
    3. 'the' → logprob: -2.2940988540649414
    4. ' left' → logprob: -3.4190988540649414
    5. ' the' → logprob: -3.9190988540649414
    6. 'range' → logprob: -3.9190988540649414
    7. '0' → logprob: -4.669098854064941
    8. ' right' → logprob: -4.919098854064941
    9. ' range' → logprob: -5.794098854064941
    10. ' ' → logprob: -7.044098854064941

Token 179: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.08651787042617798
    2. ' for' → logprob: -3.086517810821533
    3. 'for' → logprob: -3.711517810821533
    4. '           ' → logprob: -4.586517810821533
    5. '   ' → logprob: -7.711517810821533
    6. ',' → logprob: -8.211518287658691
    7. ' (' → logprob: -8.211518287658691
    8. ':' → logprob: -8.336518287658691
    9. '#' → logprob: -8.586518287658691
    10. 'return' → logprob: -8.836518287658691

Token 180: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3116832375526428
    2. ' for' → logprob: -1.561683177947998
    3. 'for' → logprob: -3.061683177947998
    4. '           ' → logprob: -4.686683177947998
    5. ' return' → logprob: -7.311683177947998
    6. 'return' → logprob: -7.436683177947998
    7. '   ' → logprob: -7.561683177947998
    8. '               ' → logprob: -9.811683654785156
    9. '```' → logprob: -10.186683654785156
    10. '        
' → logprob: -10.686683654785156

Token 181: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.008307586424052715
    2. 'return' → logprob: -5.133307456970215
    3. ' for' → logprob: -6.258307456970215
    4. '       ' → logprob: -8.133307456970215
    5. '           ' → logprob: -8.883307456970215
    6. ' return' → logprob: -11.258307456970215
    7. '   ' → logprob: -11.633307456970215
    8. ' ' → logprob: -13.383307456970215
    9. '```' → logprob: -13.758307456970215
    10. '               ' → logprob: -13.883307456970215

Token 182: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.5783199667930603
    2. 'i' → logprob: -0.8283199667930603
    3. 'j' → logprob: -6.578320026397705
    4. ' j' → logprob: -6.953320026397705
    5. ' ' → logprob: -11.328319549560547
    6. 'idx' → logprob: -12.078319549560547
    7. ' idx' → logprob: -12.828319549560547
    8. '	i' → logprob: -13.203319549560547
    9. '```' → logprob: -13.328319549560547
    10. '  ' → logprob: -13.328319549560547

Token 183: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.007611243985593319
    2. 'in' → logprob: -4.882611274719238
    3. ' ' → logprob: -12.757611274719238
    4. '(' → logprob: -14.132611274719238
    5. ',' → logprob: -14.757611274719238
    6. ')' → logprob: -15.257611274719238
    7. ' (' → logprob: -15.632611274719238
    8. 'range' → logprob: -16.382610321044922
    9. '(range' → logprob: -16.507610321044922
    10. '    ' → logprob: -16.632610321044922

Token 184: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.25195151567459106
    2. 'range' → logprob: -1.5019514560699463
    3. '(range' → logprob: -11.626951217651367
    4. ' ' → logprob: -11.876951217651367
    5. '	range' → logprob: -13.126951217651367
    6. '   ' → logprob: -13.751951217651367
    7. '  ' → logprob: -14.126951217651367
    8. '    ' → logprob: -14.376951217651367
    9. ')' → logprob: -14.876951217651367
    10. '
' → logprob: -14.876951217651367

Token 185: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.044679220765829086
    2. '(len' → logprob: -3.5446791648864746
    3. 'len' → logprob: -4.544679164886475
    4. 'n' → logprob: -5.544679164886475
    5. '(' → logprob: -8.294679641723633
    6. ' len' → logprob: -11.169679641723633
    7. '   ' → logprob: -11.794679641723633
    8. ' n' → logprob: -11.794679641723633
    9. '       ' → logprob: -13.169679641723633
    10. ' (' → logprob: -13.294679641723633

Token 186: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.38715365529060364
    2. '):' → logprob: -1.1371536254882812
    3. '):
' → logprob: -8.512153625488281
    4. '   ' → logprob: -10.637153625488281
    5. '():
' → logprob: -11.137153625488281
    6. '       ' → logprob: -11.262153625488281
    7. '()):
' → logprob: -11.887153625488281
    8. '           ' → logprob: -12.387153625488281
    9. ' ):' → logprob: -12.637153625488281
    10. ' ):
' → logprob: -12.762153625488281

Token 187: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.5932460427284241
    2. '           ' → logprob: -0.8432460427284241
    3. ' if' → logprob: -4.343245983123779
    4. 'if' → logprob: -5.718245983123779
    5. '<|end|>' → logprob: -7.718245983123779
    6. '       ' → logprob: -8.218246459960938
    7. '	       ' → logprob: -9.593246459960938
    8. '```' → logprob: -10.593246459960938
    9. '	           ' → logprob: -11.343246459960938
    10. '<|end|>' → logprob: -11.468246459960938

Token 188: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.05946218967437744
    2. ' if' → logprob: -3.184462070465088
    3. '           ' → logprob: -4.309462070465088
    4. '               ' → logprob: -5.934462070465088
    5. '                   ' → logprob: -8.434462547302246
    6. '       ' → logprob: -11.559462547302246
    7. '   ' → logprob: -11.684462547302246
    8. '```' → logprob: -13.309462547302246
    9. '	if' → logprob: -13.559462547302246
    10. ' ' → logprob: -14.309462547302246

Token 189: ' chairs' (ID: 34049)
  Prédit: ' chairs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' chairs' → logprob: -0.22546237707138062
    2. 'chairs' → logprob: -1.6004624366760254
    3. 'ch' → logprob: -10.600461959838867
    4. 'chair' → logprob: -11.975461959838867
    5. '   ' → logprob: -12.350461959838867
    6. ' ' → logprob: -12.475461959838867
    7. '(ch' → logprob: -13.725461959838867
    8. ' seats' → logprob: -13.912961959838867
    9. '       ' → logprob: -13.912961959838867
    10. '```' → logprob: -14.100461959838867

Token 190: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -8.061054359131958e-06
    2. '[' → logprob: -12.625007629394531
    3. ' [' → logprob: -13.500007629394531
    4. '```' → logprob: -13.500007629394531
    5. 'i' → logprob: -14.500007629394531
    6. '[
' → logprob: -15.375007629394531
    7. '   ' → logprob: -15.500007629394531
    8. '[n' → logprob: -15.500007629394531
    9. '[j' → logprob: -15.875007629394531
    10. '
' → logprob: -16.37500762939453

Token 191: ']' (ID: 60)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.12383002787828445
    2. ']' → logprob: -2.6238300800323486
    3. '==' → logprob: -3.2488300800323486
    4. ']==' → logprob: -5.3738298416137695
    5. '=='' → logprob: -8.74882984161377
    6. ' ]' → logprob: -9.12382984161377
    7. ')' → logprob: -9.74882984161377
    8. ']=='' → logprob: -9.87382984161377
    9. ' =='' → logprob: -10.87382984161377
    10. ' ' → logprob: -11.24882984161377

Token 192: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.16102884709835052
    2. '==' → logprob: -1.9110288619995117
    3. '=='' → logprob: -7.411028861999512
    4. ' =='' → logprob: -9.536028861999512
    5. '=' → logprob: -10.036028861999512
    6. ''' → logprob: -11.161028861999512
    7. '==
' → logprob: -11.286028861999512
    8. ']==' → logprob: -11.286028861999512
    9. ' ' → logprob: -11.786028861999512
    10. '[' → logprob: -12.411028861999512

Token 193: ' '#' (ID: 11284)
  Prédit: ''#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''#' → logprob: -0.5244011878967285
    2. ''' → logprob: -0.8994011878967285
    3. ' '#'' → logprob: -7.0244011878967285
    4. ' '' → logprob: -9.14940071105957
    5. ''.' → logprob: -9.52440071105957
    6. ' '#' → logprob: -9.52440071105957
    7. '#' → logprob: -10.02440071105957
    8. '"#' → logprob: -10.77440071105957
    9. '"' → logprob: -11.02440071105957
    10. ''A' → logprob: -11.89940071105957

Token 194: '':
' (ID: 7669)
  Prédit: ':
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.2325725257396698
    2. ':' → logprob: -2.357572555541992
    3. '):
' → logprob: -2.482572555541992
    4. '):' → logprob: -4.857572555541992
    5. ':return' → logprob: -4.982572555541992
    6. '':
' → logprob: -5.107572555541992
    7. 'return' → logprob: -6.107572555541992
    8. '':' → logprob: -6.482572555541992
    9. '():
' → logprob: -6.607572555541992
    10. '                   ' → logprob: -6.857572555541992

Token 195: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.42287102341651917
    2. 'return' → logprob: -1.2978709936141968
    3. ' return' → logprob: -2.6728711128234863
    4. '               ' → logprob: -6.172871112823486
    5. '           ' → logprob: -7.797871112823486
    6. '                       ' → logprob: -9.922870635986328
    7. ':return' → logprob: -10.297870635986328
    8. '```' → logprob: -10.797870635986328
    9. '   ' → logprob: -11.297870635986328
    10. '	return' → logprob: -11.547870635986328

Token 196: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.001358209759928286
    2. ' return' → logprob: -7.0013580322265625
    3. '                   ' → logprob: -7.7513580322265625
    4. '               ' → logprob: -11.251358032226562
    5. '   ' → logprob: -13.626358032226562
    6. '                       ' → logprob: -14.001358032226562
    7. '           ' → logprob: -14.251358032226562
    8. '       ' → logprob: -14.876358032226562
    9. '	return' → logprob: -15.626358032226562
    10. ':return' → logprob: -16.876358032226562

Token 197: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.00033546582562848926
    2. ' i' → logprob: -8.000335693359375
    3. '   ' → logprob: -17.125335693359375
    4. ' ' → logprob: -18.750335693359375
    5. '<|end|>' → logprob: -18.875335693359375
    6. '[i' → logprob: -19.625335693359375
    7. '	i' → logprob: -19.625335693359375
    8. '
' → logprob: -20.000335693359375
    9. '0' → logprob: -20.125335693359375
    10. '       ' → logprob: -20.500335693359375

Token 198: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.10460939258337021
    2. '<|end|>' → logprob: -2.604609489440918
    3. '
' → logprob: -3.979609489440918
    4. '   ' → logprob: -5.854609489440918
    5. '<|end|>' → logprob: -6.229609489440918
    6. 'def' → logprob: -7.229609489440918
    7. '        
' → logprob: -7.854609489440918
    8. '           ' → logprob: -8.979609489440918
    9. '    
' → logprob: -9.229609489440918
    10. 'return' → logprob: -9.479609489440918

Token 199: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 200: ' return' (ID: 622)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 201: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.07209919393062592
    2. ' -' → logprob: -2.697099208831787
    3. 'None' → logprob: -6.322099208831787
    4. ' None' → logprob: -7.947099208831787
    5. '-none' → logprob: -12.697098731994629
    6. ' ' → logprob: -12.822098731994629
    7. '<|end|>' → logprob: -13.447098731994629
    8. '-i' → logprob: -14.197098731994629
    9. '_None' → logprob: -14.572098731994629
    10. '#' → logprob: -14.572098731994629

Token 202: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.4121114822482923e-06
    2. ' ' → logprob: -13.125003814697266
    3. '<|end|>' → logprob: -13.875003814697266
    4. '0' → logprob: -16.125003814697266
    5. '<|end|>' → logprob: -16.562503814697266
    6. '```' → logprob: -16.937503814697266
    7. '#' → logprob: -16.937503814697266
    8. '   ' → logprob: -17.500003814697266
    9. '`' → logprob: -17.687503814697266
    10. '2' → logprob: -17.812503814697266

Token 203: ' ' (ID: 220)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 204: ' #' (ID: 1069)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 205: ' Should' (ID: 18057)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -1.0166610479354858
    2. 'def' → logprob: -1.0166610479354858
    3. '   ' → logprob: -1.8916610479354858
    4. 'Should' → logprob: -2.7666611671447754
    5. ' def' → logprob: -4.266661167144775
    6. ' ' → logprob: -4.391661167144775
    7. '
' → logprob: -4.641661167144775
    8. ' Should' → logprob: -5.391661167144775
    9. 'None' → logprob: -5.391661167144775
    10. ' #' → logprob: -5.516661167144775

Token 206: ' not' (ID: 625)
  Prédit: ' not'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.08928654342889786
    2. 'not' → logprob: -2.4642865657806396
    3. '_not' → logprob: -8.589286804199219
    4. ' happen' → logprob: -9.714286804199219
    5. '<|end|>' → logprob: -10.214286804199219
    6. '	not' → logprob: -10.839286804199219
    7. ' ' → logprob: -11.464286804199219
    8. 'n't' → logprob: -12.089286804199219
    9. ' return' → logprob: -12.214286804199219
    10. '<|end|>' → logprob: -12.339286804199219

Token 207: ' happen' (ID: 5659)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'h' → logprob: -0.001518907374702394
    2. ' happen' → logprob: -6.501518726348877
    3. '<|end|>' → logprob: -11.751519203186035
    4. 'haps' → logprob: -13.626519203186035
    5. '_h' → logprob: -13.876519203186035
    6. 'have' → logprob: -14.001519203186035
    7. '	h' → logprob: -14.126519203186035
    8. 'occur' → logprob: -14.251519203186035
    9. 'hap' → logprob: -14.376519203186035
    10. ' h' → logprob: -14.501519203186035

Token 208: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 209: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.7882058024406433
    2. '<|end|>' → logprob: -1.288205862045288
    3. '   ' → logprob: -1.913205862045288
    4. 'def' → logprob: -2.663205862045288
    5. '    
' → logprob: -3.913205862045288
    6. '<|end|>' → logprob: -4.538205623626709
    7. 'newline' → logprob: -5.038205623626709
    8. '

' → logprob: -5.288205623626709
    9. '```' → logprob: -5.788205623626709
    10. '  
' → logprob: -6.663205623626709

Token 210: ' def' (ID: 1056)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.18926304578781128
    2. '<|end|>' → logprob: -2.314263105392456
    3. 'def' (adapté à ' def') → logprob: -3.064263105392456
    4. '
' → logprob: -4.064262866973877
    5. '    
' → logprob: -5.064262866973877
    6. '<|end|>' → logprob: -6.439262866973877
    7. '#' → logprob: -8.439263343811035
    8. 'for' → logprob: -8.439263343811035
    9. 'import' → logprob: -8.689263343811035
    10. ' for' → logprob: -8.939263343811035

Token 211: ' seat' (ID: 15512)
  Prédit: ' seat'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' seat' → logprob: -0.022600827738642693
    2. 'seat' → logprob: -4.5226006507873535
    3. ' best' → logprob: -5.8976006507873535
    4. ' seats' → logprob: -7.1476006507873535
    5. ' seating' → logprob: -7.3976006507873535
    6. ' empty' → logprob: -7.5226006507873535
    7. ' solve' → logprob: -7.5226006507873535
    8. ' find' → logprob: -7.5226006507873535
    9. 'C' → logprob: -7.6476006507873535
    10. ' C' → logprob: -7.7726006507873535

Token 212: '_C' (ID: 1720)
  Prédit: '_C'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_C' → logprob: -0.0007849719258956611
    2. 'C' → logprob: -8.500784873962402
    3. '_A' → logprob: -8.625784873962402
    4. '_' → logprob: -8.625784873962402
    5. '_B' → logprob: -8.625784873962402
    6. '_D' → logprob: -11.375784873962402
    7. 'def' → logprob: -11.625784873962402
    8. '_E' → logprob: -11.875784873962402
    9. '```' → logprob: -12.750784873962402
    10. '(C' → logprob: -13.875784873962402

Token 213: '(ch' (ID: 15574)
  Prédit: '(ch'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(ch' → logprob: -0.000374546303646639
    2. ' (' → logprob: -8.125374794006348
    3. '(' → logprob: -9.750374794006348
    4. '   ' → logprob: -12.375374794006348
    5. '(se' → logprob: -12.750374794006348
    6. '_(' → logprob: -13.250374794006348
    7. '(c' → logprob: -13.500374794006348
    8. '():' → logprob: -13.500374794006348
    9. '(s' → logprob: -14.125374794006348
    10. '_' → logprob: -14.250374794006348

Token 214: 'airs' (ID: 6498)
  Prédit: 'airs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'airs' → logprob: -9.698698704596609e-05
    2. 'air' → logprob: -9.375097274780273
    3. '   ' → logprob: -12.125097274780273
    4. 'chairs' → logprob: -13.250097274780273
    5. 'a' → logprob: -13.500097274780273
    6. '       ' → logprob: -14.375097274780273
    7. 'ars' → logprob: -14.750097274780273
    8. '```' → logprob: -14.875097274780273
    9. 'aires' → logprob: -15.125097274780273
    10. '_air' → logprob: -15.125097274780273

Token 215: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.25194448232650757
    2. '):
' → logprob: -1.5019445419311523
    3. '   ' → logprob: -11.751944541931152
    4. ' ):' → logprob: -13.001944541931152
    5. ')' → logprob: -13.251944541931152
    6. '):
' → logprob: -13.626944541931152
    7. '):

' → logprob: -13.626944541931152
    8. ' ):
' → logprob: -15.001944541931152
    9. '       ' → logprob: -15.376944541931152
    10. ':' → logprob: -15.751944541931152

Token 216: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00506392540410161
    2. '   ' → logprob: -5.505064010620117
    3. '
' → logprob: -7.630064010620117
    4. 'n' → logprob: -7.755064010620117
    5. ' n' → logprob: -10.130064010620117
    6. '(n' → logprob: -11.880064010620117
    7. '```' → logprob: -12.005064010620117
    8. 'def' → logprob: -12.130064010620117
    9. '        
' → logprob: -13.130064010620117
    10. '(' → logprob: -13.255064010620117

Token 217: ' n' (ID: 297)
  Prédit: ' n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.26439613103866577
    2. 'n' (adapté à ' n') → logprob: -1.5143961906433105
    3. '       ' → logprob: -5.0143961906433105
    4. '   ' → logprob: -6.6393961906433105
    5. 'import' → logprob: -7.1393961906433105
    6. ' max' → logprob: -7.1393961906433105
    7. ' import' → logprob: -7.2643961906433105
    8. ' empty' → logprob: -7.5143961906433105
    9. 'max' → logprob: -8.139395713806152
    10. 'empty' → logprob: -9.014395713806152

Token 218: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6938514113426208
    2. ' =' → logprob: -0.6938514113426208
    3. '   ' → logprob: -7.318851470947266
    4. 'def' → logprob: -11.318851470947266
    5. '=len' → logprob: -11.568851470947266
    6. '       ' → logprob: -11.693851470947266
    7. '=int' → logprob: -12.818851470947266
    8. '=
' → logprob: -13.068851470947266
    9. '    ' → logprob: -13.068851470947266
    10. ' =
' → logprob: -13.818851470947266

Token 219: ' len' (ID: 4631)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.12696212530136108
    2. ' len' → logprob: -2.126962184906006
    3. '   ' → logprob: -10.626961708068848
    4. '(len' → logprob: -12.126961708068848
    5. ' ' → logprob: -13.251961708068848
    6. '=len' → logprob: -14.501961708068848
    7. '       ' → logprob: -14.751961708068848
    8. '[len' → logprob: -14.751961708068848
    9. '  ' → logprob: -15.626961708068848
    10. 'length' → logprob: -15.751961708068848

Token 220: '(ch' (ID: 15574)
  Prédit: '(ch'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(ch' → logprob: -3.4121114822482923e-06
    2. 'chairs' → logprob: -13.750003814697266
    3. '(' → logprob: -14.375003814697266
    4. '(se' → logprob: -14.500003814697266
    5. '[ch' → logprob: -15.375003814697266
    6. ' (' → logprob: -15.750003814697266
    7. 'ch' → logprob: -16.000003814697266
    8. '(
' → logprob: -16.250003814697266
    9. '```' → logprob: -16.250003814697266
    10. '(c' → logprob: -16.625003814697266

Token 221: 'airs' (ID: 6498)
  Prédit: 'airs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'airs' → logprob: -0.20510981976985931
    2. '(ch' → logprob: -2.0801098346710205
    3. 'chairs' → logprob: -2.8301098346710205
    4. 'air' → logprob: -7.330109596252441
    5. '(c' → logprob: -8.955109596252441
    6. 'ch' → logprob: -8.955109596252441
    7. ' chairs' → logprob: -9.080109596252441
    8. '   ' → logprob: -9.205109596252441
    9. '(' → logprob: -9.330109596252441
    10. ')' → logprob: -9.330109596252441

Token 222: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.143453449010849
    2. ')' → logprob: -2.018453359603882
    3. '       ' → logprob: -7.643453598022461
    4. '   ' → logprob: -8.518453598022461
    5. '):
' → logprob: -9.643453598022461
    6. ')
' → logprob: -11.268453598022461
    7. 'def' → logprob: -12.018453598022461
    8. ' )
' → logprob: -12.143453598022461
    9. ')

' → logprob: -13.143453598022461
    10. '):' → logprob: -13.143453598022461

Token 223: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.012958917766809464
    2. '   ' → logprob: -4.637959003448486
    3. 'max' → logprob: -6.012959003448486
    4. ' max' → logprob: -7.762959003448486
    5. '
' → logprob: -9.387958526611328
    6. 'dist' → logprob: -10.012958526611328
    7. 'def' → logprob: -10.262958526611328
    8. '```' → logprob: -10.512958526611328
    9. ' distances' → logprob: -10.512958526611328
    10. '        
' → logprob: -10.637958526611328

Token 224: ' occupied' (ID: 46186)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.8615165948867798
    2. 'c' → logprob: -1.3615165948867798
    3. ' max' → logprob: -2.1115164756774902
    4. 'dist' → logprob: -3.1115164756774902
    5. '       ' → logprob: -3.2365164756774902
    6. 'best' → logprob: -4.36151647567749
    7. 'empty' → logprob: -4.48651647567749
    8. 'for' → logprob: -4.73651647567749
    9. ' empty' → logprob: -4.73651647567749
    10. ' seats' → logprob: -4.73651647567749

Token 225: '_positions' (ID: 93193)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.07272002100944519
    2. '=' → logprob: -2.6977200508117676
    3. '_positions' → logprob: -6.197720050811768
    4. '_se' → logprob: -7.947720050811768
    5. '_indices' → logprob: -9.19771957397461
    6. '=set' → logprob: -9.94771957397461
    7. '_' → logprob: -10.32271957397461
    8. '=[]' → logprob: -10.44771957397461
    9. 'se' → logprob: -10.57271957397461
    10. '   ' → logprob: -10.57271957397461

Token 226: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5231753587722778
    2. ' =' → logprob: -0.8981753587722778
    3. '=[]' → logprob: -10.273175239562988
    4. '   ' → logprob: -12.148175239562988
    5. ',' → logprob: -13.023175239562988
    6. '=[' → logprob: -13.273175239562988
    7. ' ' → logprob: -13.273175239562988
    8. '=[]
' → logprob: -13.523175239562988
    9. '[' → logprob: -14.273175239562988
    10. '[]' → logprob: -14.398175239562988

Token 227: ' [' (ID: 723)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.36148956418037415
    2. ' [' → logprob: -1.2364895343780518
    3. '[' → logprob: -4.611489772796631
    4. '[]' → logprob: -7.236489772796631
    5. '[int' → logprob: -7.611489772796631
    6. ' []' → logprob: -8.111489295959473
    7. '[j' → logprob: -8.361489295959473
    8. '[index' → logprob: -8.611489295959473
    9. '[idx' → logprob: -8.736489295959473
    10. '[c' → logprob: -9.236489295959473

Token 228: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.00023977462842594832
    2. 'idx' → logprob: -9.000239372253418
    3. '(i' → logprob: -9.250239372253418
    4. ' i' → logprob: -11.625239372253418
    5. 'index' → logprob: -12.250239372253418
    6. 'j' → logprob: -12.875239372253418
    7. '[i' → logprob: -14.000239372253418
    8. ''i' → logprob: -14.375239372253418
    9. 'pos' → logprob: -14.500239372253418
    10. '   ' → logprob: -14.875239372253418

Token 229: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.5759750008583069
    2. ' for' → logprob: -0.8259750008583069
    3. '       ' → logprob: -11.20097541809082
    4. '   ' → logprob: -11.95097541809082
    5. '
' → logprob: -12.57597541809082
    6. '(ch' → logprob: -12.57597541809082
    7. '           ' → logprob: -12.95097541809082
    8. 'ch' → logprob: -13.57597541809082
    9. ' ' → logprob: -13.70097541809082
    10. '[ch' → logprob: -14.70097541809082

Token 230: ' i' (ID: 575)
  Prédit: ' range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.5320776700973511
    2. ',' → logprob: -1.782077670097351
    3. 'range' → logprob: -1.907077670097351
    4. 'i' → logprob: -2.7820777893066406
    5. ' i' → logprob: -3.4070777893066406
    6. ' in' → logprob: -7.282077789306641
    7. ',i' → logprob: -10.65707778930664
    8. ' ' → logprob: -10.90707778930664
    9. 'in' → logprob: -11.03207778930664
    10. '(i' → logprob: -12.28207778930664

Token 231: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0027806314174085855
    2. ' in' → logprob: -6.502780437469482
    3. 'range' → logprob: -7.377780437469482
    4. 'in' → logprob: -7.752780437469482
    5. ',ch' → logprob: -8.75278091430664
    6. ' range' → logprob: -10.25278091430664
    7. ' ,' → logprob: -10.87778091430664
    8. ',in' → logprob: -13.00278091430664
    9. ',char' → logprob: -13.25278091430664
    10. ',c' → logprob: -13.62778091430664

Token 232: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.3298031985759735
    2. ' c' → logprob: -1.579803228378296
    3. ' ch' → logprob: -3.204803228378296
    4. 'ch' → logprob: -3.454803228378296
    5. 'x' → logprob: -6.579802989959717
    6. ' x' → logprob: -7.204802989959717
    7. ' seat' → logprob: -8.079803466796875
    8. 'seat' → logprob: -9.329803466796875
    9. 'chair' → logprob: -9.329803466796875
    10. ' chair' → logprob: -10.079803466796875

Token 233: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.029762184247374535
    2. 'in' → logprob: -3.5297622680664062
    3. 'enumer' → logprob: -11.779762268066406
    4. ')' → logprob: -14.154762268066406
    5. ' ' → logprob: -14.779762268066406
    6. ',' → logprob: -14.904762268066406
    7. '```' → logprob: -15.154762268066406
    8. 'c' → logprob: -15.279762268066406
    9. '
' → logprob: -15.279762268066406
    10. 'inthe' → logprob: -15.404762268066406

Token 234: ' enumerate' (ID: 29671)
  Prédit: 'enumer'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'enumer' → logprob: -0.10020741820335388
    2. ' enumerate' → logprob: -2.3502073287963867
    3. 'c' → logprob: -15.350207328796387
    4. '```' → logprob: -15.975207328796387
    5. 'enum' → logprob: -16.225208282470703
    6. '
' → logprob: -16.350208282470703
    7. '(' → logprob: -16.600208282470703
    8. '(en' → logprob: -16.975208282470703
    9. '{' → logprob: -17.600208282470703
    10. 'in' → logprob: -17.725208282470703

Token 235: '(ch' (ID: 15574)
  Prédit: '(ch'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(ch' → logprob: -5.32392441527918e-05
    2. 'chairs' → logprob: -10.000053405761719
    3. '(se' → logprob: -13.250053405761719
    4. '(' → logprob: -13.375053405761719
    5. ' (' → logprob: -13.375053405761719
    6. ' chairs' → logprob: -13.625053405761719
    7. 'ch' → logprob: -14.875053405761719
    8. '(c' → logprob: -15.500053405761719
    9. '(s' → logprob: -15.500053405761719
    10. 'chair' → logprob: -16.00005340576172

Token 236: 'airs' (ID: 6498)
  Prédit: 'airs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'airs' → logprob: -0.004385729320347309
    2. 'chairs' → logprob: -5.504385948181152
    3. ' chairs' → logprob: -9.004385948181152
    4. 'air' → logprob: -9.254385948181152
    5. '   ' → logprob: -10.504385948181152
    6. '```' → logprob: -11.754385948181152
    7. '       ' → logprob: -12.129385948181152
    8. ')' → logprob: -12.504385948181152
    9. 'irs' → logprob: -12.879385948181152
    10. 'ars' → logprob: -13.004385948181152

Token 237: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.12179770320653915
    2. ' if' → logprob: -2.871797800064087
    3. 'if' → logprob: -2.871797800064087
    4. ' )' → logprob: -7.871797561645508
    5. 'c' → logprob: -8.121797561645508
    6. '()' → logprob: -8.246797561645508
    7. '   ' → logprob: -8.246797561645508
    8. '       ' → logprob: -9.371797561645508
    9. '           ' → logprob: -9.746797561645508
    10. '        ' → logprob: -10.496797561645508

Token 238: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.20141898095607758
    2. 'if' → logprob: -1.7014189958572388
    3. '   ' → logprob: -13.20141887664795
    4. ' ' → logprob: -13.82641887664795
    5. ')' → logprob: -14.32641887664795
    6. '           ' → logprob: -14.32641887664795
    7. '       ' → logprob: -14.45141887664795
    8. '        ' → logprob: -15.07641887664795
    9. '    ' → logprob: -15.45141887664795
    10. '          ' → logprob: -15.95141887664795

Token 239: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.2519630193710327
    2. ' c' → logprob: -1.5019630193710327
    3. ' ' → logprob: -11.501962661743164
    4. '   ' → logprob: -12.376962661743164
    5. '  ' → logprob: -13.001962661743164
    6. '
' → logprob: -13.189462661743164
    7. '    ' → logprob: -13.376962661743164
    8. ' not' → logprob: -13.689462661743164
    9. 'not' → logprob: -13.751962661743164
    10. '(c' → logprob: -13.751962661743164

Token 240: ' !=' (ID: 1666)
  Prédit: '!='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '!=' → logprob: -0.9229499697685242
    2. ' in' → logprob: -1.672950029373169
    3. '==' → logprob: -1.672950029373169
    4. ' !=' → logprob: -2.047950029373169
    5. 'in' → logprob: -2.797950029373169
    6. ' ==' → logprob: -3.797950029373169
    7. '=='' → logprob: -4.92294979095459
    8. '!='' → logprob: -4.92294979095459
    9. ']' → logprob: -9.92294979095459
    10. ' ' → logprob: -10.23544979095459

Token 241: ' '#' (ID: 11284)
  Prédit: ''#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''#' → logprob: -0.0026867061387747526
    2. ''' → logprob: -6.002686500549316
    3. ' '#' → logprob: -8.627686500549316
    4. '"#' → logprob: -11.377686500549316
    5. ' '#'' → logprob: -11.502686500549316
    6. ''A' → logprob: -12.377686500549316
    7. '#' → logprob: -13.627686500549316
    8. '('#' → logprob: -14.127686500549316
    9. ' '' → logprob: -14.127686500549316
    10. ''.' → logprob: -14.627686500549316

Token 242: '']
' (ID: 9756)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0032187069300562143
    2. ' ]' → logprob: -6.378218650817871
    3. ']
' → logprob: -6.753218650817871
    4. ' and' → logprob: -9.003218650817871
    5. ')]' → logprob: -9.003218650817871
    6. ']

' → logprob: -9.503218650817871
    7. 'and' → logprob: -11.753218650817871
    8. ' ]
' → logprob: -11.878218650817871
    9. '']' → logprob: -12.628218650817871
    10. ')' → logprob: -12.753218650817871

Token 243: '       ' (ID: 309)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.12676659226417542
    2. '       ' → logprob: -2.2517666816711426
    3. '<|end|>' → logprob: -5.126766681671143
    4. '        
' → logprob: -5.376766681671143
    5. '

' → logprob: -6.251766681671143
    6. '  
' → logprob: -7.876766681671143
    7. '<|end|>' → logprob: -8.501766204833984
    8. '    
' → logprob: -8.751766204833984
    9. '
' → logprob: -9.126766204833984
    10. '   ' → logprob: -9.376766204833984

Token 244: ' if' (ID: 538)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4008179008960724
    2. ' if' → logprob: -2.15081787109375
    3. ' max' → logprob: -2.27581787109375
    4. 'max' → logprob: -3.27581787109375
    5. '
' → logprob: -3.90081787109375
    6. ' best' → logprob: -4.52581787109375
    7. 'if' (adapté à ' if') → logprob: -4.77581787109375
    8. ' distances' → logprob: -4.77581787109375
    9. '        
' → logprob: -5.77581787109375
    10. '   ' → logprob: -5.90081787109375

Token 245: ' not' (ID: 625)
  Prédit: ' not'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.5274267196655273
    2. 'not' → logprob: -1.0274267196655273
    3. 'len' → logprob: -3.1524267196655273
    4. ' len' → logprob: -4.777426719665527
    5. 'n' → logprob: -8.027426719665527
    6. 'occupied' → logprob: -8.402426719665527
    7. '   ' → logprob: -10.277426719665527
    8. '!' → logprob: -10.402426719665527
    9. ' ' → logprob: -10.589926719665527
    10. ' occupied' → logprob: -10.777426719665527

Token 246: ' occupied' (ID: 46186)
  Prédit: 'occupied'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'occupied' → logprob: -0.03033662959933281
    2. ' occupied' → logprob: -3.530336618423462
    3. 'chairs' → logprob: -8.030336380004883
    4. ' chairs' → logprob: -8.530336380004883
    5. 'occup' → logprob: -10.905336380004883
    6. ' seats' → logprob: -11.280336380004883
    7. 'occ' → logprob: -12.155336380004883
    8. 'empty' → logprob: -12.655336380004883
    9. '#' → logprob: -12.842836380004883
    10. 'ch' → logprob: -13.155336380004883

Token 247: '_positions' (ID: 93193)
  Prédit: '_positions'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_positions' → logprob: -0.00020711649267468601
    2. '_' → logprob: -8.75020694732666
    3. 'positions' → logprob: -10.62520694732666
    4. 's' → logprob: -12.12520694732666
    5. 'occupied' → logprob: -12.62520694732666
    6. '[' → logprob: -12.62520694732666
    7. '```' → logprob: -13.50020694732666
    8. ')' → logprob: -13.75020694732666
    9. 'import' → logprob: -13.87520694732666
    10. ' positions' → logprob: -13.87520694732666

Token 248: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.2525485157966614
    2. ':
' → logprob: -1.5025484561920166
    3. ':return' → logprob: -7.502548694610596
    4. ' or' → logprob: -10.502548217773438
    5. '       ' → logprob: -11.502548217773438
    6. '):
' → logprob: -11.877548217773438
    7. '   ' → logprob: -11.877548217773438
    8. '):' → logprob: -12.002548217773438
    9. ' :' → logprob: -13.252548217773438
    10. '():
' → logprob: -13.502548217773438

Token 249: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.14796780049800873
    2. '           ' → logprob: -2.14796781539917
    3. '
' → logprob: -4.77296781539917
    4. ' return' → logprob: -5.02296781539917
    5. ':
' → logprob: -6.02296781539917
    6. 'return' → logprob: -6.52296781539917
    7. '        
' → logprob: -7.39796781539917
    8. ' for' → logprob: -8.147967338562012
    9. ':' → logprob: -8.272967338562012
    10. '   ' → logprob: -8.397967338562012

Token 250: ' #' (ID: 1069)
  Prédit: ' return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.10456311702728271
    2. 'return' → logprob: -2.3545632362365723
    3. '       ' → logprob: -5.479563236236572
    4. '           ' → logprob: -10.104562759399414
    5. '   ' → logprob: -10.104562759399414
    6. '0' → logprob: -10.354562759399414
    7. ' for' → logprob: -10.854562759399414
    8. ' ' → logprob: -11.229562759399414
    9. ' #' → logprob: -11.729562759399414
    10. ' if' → logprob: -11.979562759399414

Token 251: ' No' (ID: 3004)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.5823476314544678
    2. ' return' → logprob: -0.8323476314544678
    3. ' for' → logprob: -6.082347869873047
    4. '#' → logprob: -6.457347869873047
    5. 'for' → logprob: -6.707347869873047
    6. '       ' → logprob: -7.832347869873047
    7. ' #' → logprob: -8.082347869873047
    8. '   ' → logprob: -8.457347869873047
    9. ' first' → logprob: -9.457347869873047
    10. ' if' → logprob: -9.582347869873047

Token 252: ' one' (ID: 1001)
  Prédit: ' chairs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' chairs' → logprob: -0.7989024519920349
    2. ' seats' → logprob: -2.1739025115966797
    3. ' empty' → logprob: -2.2989025115966797
    4. 'chairs' → logprob: -2.2989025115966797
    5. 'empty' → logprob: -3.0489025115966797
    6. ' '#'' → logprob: -3.1739025115966797
    7. ' return' → logprob: -3.2989025115966797
    8. '#' → logprob: -3.5489025115966797
    9. 'A' → logprob: -4.42390251159668
    10. 'def' → logprob: -4.67390251159668

Token 253: ' seated' (ID: 77168)
  Prédit: ' has'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' has' → logprob: -0.7245068550109863
    2. ' is' → logprob: -1.4745068550109863
    3. 'has' → logprob: -2.8495068550109863
    4. ' seated' → logprob: -2.8495068550109863
    5. 'se' → logprob: -3.4745068550109863
    6. ' to' → logprob: -3.4745068550109863
    7. '#' → logprob: -3.7245068550109863
    8. 'to' → logprob: -3.9745068550109863
    9. 'is' → logprob: -3.9745068550109863
    10. 's' → logprob: -4.849506855010986

Token 254: ' yet' (ID: 5073)
  Prédit: ' yet'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' yet' → logprob: -0.019749294966459274
    2. ',' → logprob: -4.144749164581299
    3. '       ' → logprob: -5.894749164581299
    4. '           ' → logprob: -7.519749164581299
    5. 'yet' → logprob: -8.644749641418457
    6. 'Yet' → logprob: -10.144749641418457
    7. ' ,' → logprob: -10.269749641418457
    8. '
' → logprob: -10.269749641418457
    9. '   ' → logprob: -10.519749641418457
    10. ':
' → logprob: -10.894749641418457

Token 255: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.8779553771018982
    2. '       ' → logprob: -1.002955436706543
    3. '           ' → logprob: -2.127955436706543
    4. ':
' → logprob: -3.127955436706543
    5. '
' → logprob: -4.252955436706543
    6. ' return' → logprob: -4.377955436706543
    7. ':' → logprob: -4.627955436706543
    8. 'return' → logprob: -5.002955436706543
    9. '               ' → logprob: -5.752955436706543
    10. '   ' → logprob: -6.127955436706543

Token 256: ' seat' (ID: 15512)
  Prédit: ' return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.20272314548492432
    2. 'return' → logprob: -1.7027231454849243
    3. '       ' → logprob: -6.952723026275635
    4. '           ' → logprob: -8.702723503112793
    5. '   ' → logprob: -10.077723503112793
    6. ' if' → logprob: -10.452723503112793
    7. ' ' → logprob: -10.577723503112793
    8. ' for' → logprob: -10.827723503112793
    9. ' ' → logprob: -10.827723503112793
    10. '#' → logprob: -11.077723503112793

Token 257: ' in' (ID: 306)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.3428877890110016
    2. ' ' → logprob: -1.5928877592086792
    3. ' at' → logprob: -2.5928878784179688
    4. ' C' → logprob: -4.842887878417969
    5. 'C' → logprob: -5.967887878417969
    6. 'at' → logprob: -7.717887878417969
    7. '[' → logprob: -8.342887878417969
    8. ' A' → logprob: -8.717887878417969
    9. '=' → logprob: -8.967887878417969
    10. 'A' → logprob: -9.092887878417969

Token 258: ' middle' (ID: 10006)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.34563231468200684
    2. ' n' → logprob: -1.5956323146820068
    3. '0' → logprob: -2.470632314682007
    4. ' the' → logprob: -5.845632553100586
    5. 'the' → logprob: -6.720632553100586
    6. ' ' → logprob: -7.970632553100586
    7. '   ' → logprob: -9.095632553100586
    8. '(n' → logprob: -9.220632553100586
    9. ' middle' → logprob: -9.970632553100586
    10. 'middle' → logprob: -9.970632553100586

Token 259: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3452564477920532
    2. '
' → logprob: -2.5952563285827637
    3. '           ' → logprob: -2.8452563285827637
    4. 'return' → logprob: -2.9702563285827637
    5. ' return' → logprob: -3.0952563285827637
    6. '(n' → logprob: -3.7202563285827637
    7. ' (' → logprob: -4.595256328582764
    8. '(' → logprob: -4.595256328582764
    9. ' n' → logprob: -5.720256328582764
    10. 'n' → logprob: -5.970256328582764

Token 260: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.18110698461532593
    2. '           ' → logprob: -2.3061070442199707
    3. ' return' → logprob: -3.0561070442199707
    4. 'return' → logprob: -4.806107044219971
    5. ' (' → logprob: -5.931107044219971
    6. '(n' → logprob: -6.431107044219971
    7. '(' → logprob: -6.556107044219971
    8. '        
' → logprob: -6.556107044219971
    9. '
' → logprob: -6.806107044219971
    10. ' n' → logprob: -7.306107044219971

Token 261: ' if' (ID: 538)
  Prédit: ' return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.1786613166332245
    2. 'return' → logprob: -1.9286613464355469
    3. ' mid' → logprob: -4.178661346435547
    4. 'mid' → logprob: -7.178661346435547
    5. ' n' → logprob: -7.303661346435547
    6. ' middle' → logprob: -7.678661346435547
    7. ' midpoint' → logprob: -7.928661346435547
    8. '       ' → logprob: -7.928661346435547
    9. 'n' → logprob: -9.303661346435547
    10. '   ' → logprob: -9.428661346435547

Token 262: ' n' (ID: 297)
  Prédit: ' n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.3871482312679291
    2. 'n' → logprob: -1.1371482610702515
    3. 'chairs' → logprob: -9.137147903442383
    4. ' ' → logprob: -9.887147903442383
    5. '(n' → logprob: -10.512147903442383
    6. '
' → logprob: -11.637147903442383
    7. ' chairs' → logprob: -11.637147903442383
    8. 'len' → logprob: -11.637147903442383
    9. ' (' → logprob: -11.824647903442383
    10. '	n' → logprob: -11.949647903442383

Token 263: ' %' (ID: 1851)
  Prédit: ' %'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' %' → logprob: -0.029917791485786438
    2. '%' → logprob: -3.5299177169799805
    3. ' ' → logprob: -8.90491771697998
    4. ' //' → logprob: -11.40491771697998
    5. ' %
' → logprob: -12.15491771697998
    6. ' ' → logprob: -12.40491771697998
    7. '   ' → logprob: -12.52991771697998
    8. ' ==' → logprob: -12.52991771697998
    9. '
' → logprob: -14.02991771697998
    10. '```' → logprob: -14.15491771697998

Token 264: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0052377874962985516
    2. ' ' → logprob: -5.255237579345703
    3. '```' → logprob: -13.755237579345703
    4. '==' → logprob: -14.005237579345703
    5. '   ' → logprob: -14.380237579345703
    6. '  ' → logprob: -15.130237579345703
    7. '=' → logprob: -15.755237579345703
    8. '0' → logprob: -15.942737579345703
    9. '
' → logprob: -16.067737579345703
    10. '20' → logprob: -16.442737579345703

Token 265: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -5.240481914370321e-05
    2. ' ' → logprob: -9.875052452087402
    3. '```' → logprob: -15.000052452087402
    4. '   ' → logprob: -15.250052452087402
    5. '==' → logprob: -16.000051498413086
    6. '  ' → logprob: -17.062551498413086
    7. '3' → logprob: -17.125051498413086
    8. '0' → logprob: -17.125051498413086
    9. '
' → logprob: -17.312551498413086
    10. '4' → logprob: -17.875051498413086

Token 266: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.3869296610355377
    2. '==' → logprob: -1.1369296312332153
    3. ')==' → logprob: -10.511929512023926
    4. '0' → logprob: -11.886929512023926
    5. '()==' → logprob: -12.386929512023926
    6. ')' → logprob: -12.511929512023926
    7. '==
' → logprob: -12.511929512023926
    8. ':' → logprob: -12.761929512023926
    9. '1' → logprob: -12.886929512023926
    10. ' ' → logprob: -13.136929512023926

Token 267: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.011789960786700249
    2. ' ' → logprob: -4.761789798736572
    3. '1' → logprob: -6.386789798736572
    4. '2' → logprob: -6.511789798736572
    5. '=' → logprob: -15.13679027557373
    6. '```' → logprob: -15.38679027557373
    7. '
' → logprob: -15.88679027557373
    8. '   ' → logprob: -16.011789321899414
    9. '==' → logprob: -16.136789321899414
    10. ' ' → logprob: -17.574289321899414

Token 268: '1' (ID: 16)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.1820337325334549
    2. '0' → logprob: -1.8070337772369385
    3. '1' → logprob: -6.182033538818359
    4. ' ' → logprob: -8.43203353881836
    5. '```' → logprob: -13.80703353881836
    6. '3' → logprob: -14.74453353881836
    7. '==' → logprob: -15.61953353881836
    8. '   ' → logprob: -15.93203353881836
    9. '5' → logprob: -15.99453353881836
    10. '4' → logprob: -16.30703353881836

Token 269: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.10137496888637543
    2. ':' → logprob: -2.351374864578247
    3. ' :
' → logprob: -7.851375102996826
    4. '):
' → logprob: -8.101374626159668
    5. '       ' → logprob: -8.476374626159668
    6. '           ' → logprob: -9.476374626159668
    7. '():
' → logprob: -9.851374626159668
    8. ':

' → logprob: -10.476374626159668
    9. '               ' → logprob: -10.726374626159668
    10. ':return' → logprob: -10.976374626159668

Token 270: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.010376387275755405
    2. ' return' → logprob: -5.010376453399658
    3. '           ' → logprob: -5.760376453399658
    4. '       ' → logprob: -8.5103759765625
    5. 'return' → logprob: -9.0103759765625
    6. ' ' → logprob: -9.8853759765625
    7. '
' → logprob: -10.2603759765625
    8. '   ' → logprob: -10.8853759765625
    9. '                   ' → logprob: -11.1353759765625
    10. ' 
' → logprob: -11.7603759765625

Token 271: ' return' (ID: 622)
  Prédit: ' return'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.08068960905075073
    2. 'return' (adapté à ' return') → logprob: -2.5806896686553955
    3. '           ' → logprob: -6.955689430236816
    4. '       ' → logprob: -7.455689430236816
    5. '               ' → logprob: -9.580689430236816
    6. '
' → logprob: -9.705689430236816
    7. '   ' → logprob: -9.830689430236816
    8. ' ' → logprob: -11.330689430236816
    9. '                   ' → logprob: -11.330689430236816
    10. '	return' → logprob: -11.455689430236816

Token 272: ' (' (ID: 350)
  Prédit: ' n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.38688942790031433
    2. 'n' → logprob: -1.1368894577026367
    3. '(n' → logprob: -11.511889457702637
    4. ' (' → logprob: -12.261889457702637
    5. '   ' → logprob: -13.386889457702637
    6. '	n' → logprob: -14.011889457702637
    7. '
' → logprob: -14.011889457702637
    8. ' ' → logprob: -15.636889457702637
    9. ' ' → logprob: -16.26188850402832
    10. '[n' → logprob: -16.38688850402832

Token 273: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.0009138475870713592
    2. ' n' → logprob: -7.000913619995117
    3. '   ' → logprob: -13.625913619995117
    4. '(n' → logprob: -14.125913619995117
    5. ')n' → logprob: -15.250913619995117
    6. ' (' → logprob: -16.000913619995117
    7. '
' → logprob: -16.875913619995117
    8. '	n' → logprob: -17.250913619995117
    9. ' ' → logprob: -17.500913619995117
    10. ')' → logprob: -17.750913619995117

Token 274: ' +' (ID: 659)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.8536147475242615
    2. '-' → logprob: -0.8536147475242615
    3. ' //' → logprob: -2.7286148071289062
    4. ' -' → logprob: -2.9786148071289062
    5. '//' → logprob: -4.228614807128906
    6. ' )' → logprob: -4.978614807128906
    7. '   ' → logprob: -5.228614807128906
    8. ')//' → logprob: -5.853614807128906
    9. ' ' → logprob: -6.103614807128906
    10. '	' → logprob: -10.353614807128906

Token 275: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.001938750152476132
    2. ' ' → logprob: -6.251938819885254
    3. '   ' → logprob: -11.751938819885254
    4. '-' → logprob: -13.876938819885254
    5. '0' → logprob: -14.751938819885254
    6. '
' → logprob: -15.126938819885254
    7. '  ' → logprob: -15.501938819885254
    8. '       ' → logprob: -16.001937866210938
    9. '     ' → logprob: -16.126937866210938
    10. '```' → logprob: -16.501937866210938

Token 276: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00012106612848583609
    2. '-' → logprob: -9.250121116638184
    3. ' ' → logprob: -10.750121116638184
    4. '   ' → logprob: -13.500121116638184
    5. '0' → logprob: -13.750121116638184
    6. ' -' → logprob: -14.750121116638184
    7. '
' → logprob: -15.000121116638184
    8. '       ' → logprob: -16.750120162963867
    9. '```' → logprob: -16.750120162963867
    10. '  ' → logprob: -16.750120162963867

Token 277: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.04880208149552345
    2. ')//' → logprob: -3.048802137374878
    3. ' )' → logprob: -9.048802375793457
    4. '//' → logprob: -9.298802375793457
    5. ' //' → logprob: -12.923802375793457
    6. '   ' → logprob: -13.423802375793457
    7. ' ' → logprob: -15.048802375793457
    8. '0' → logprob: -15.423802375793457
    9. '-' → logprob: -15.548802375793457
    10. '）' → logprob: -15.673802375793457

Token 278: ' //' (ID: 602)
  Prédit: '//'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '//' → logprob: -0.1626947522163391
    2. ' //' → logprob: -1.9126946926116943
    3. ')' → logprob: -6.537694931030273
    4. ' ' → logprob: -7.912694931030273
    5. '   ' → logprob: -8.162694931030273
    6. ')//' → logprob: -8.912694931030273
    7. '```' → logprob: -9.662694931030273
    8. '
' → logprob: -9.662694931030273
    9. '       ' → logprob: -10.412694931030273
    10. '#' → logprob: -11.037694931030273

Token 279: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0006267757853493094
    2. ' ' → logprob: -7.375626564025879
    3. '   ' → logprob: -15.625626564025879
    4. '
' → logprob: -18.125627517700195
    5. '```' → logprob: -18.625627517700195
    6. '  ' → logprob: -20.125627517700195
    7. '２' → logprob: -20.250627517700195
    8. '           ' → logprob: -20.500627517700195
    9. '

' → logprob: -20.500627517700195
    10. ' ' → logprob: -20.625627517700195

Token 280: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -1.1637164789135568e-05
    2. ' ' → logprob: -11.375011444091797
    3. '   ' → logprob: -16.500011444091797
    4. '
' → logprob: -17.125011444091797
    5. '

' → logprob: -17.750011444091797
    6. '```' → logprob: -18.062511444091797
    7. '۲' → logprob: -18.062511444091797
    8. '２' → logprob: -18.562511444091797
    9. '22' → logprob: -18.937511444091797
    10. '٢' → logprob: -19.187511444091797

Token 281: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.14276258647441864
    2. '-' → logprob: -2.0177626609802246
    3. ' ' → logprob: -9.892762184143066
    4. '<|end|>' → logprob: -10.892762184143066
    5. ')' → logprob: -11.767762184143066
    6. '1' → logprob: -12.017762184143066
    7. '0' → logprob: -13.142762184143066
    8. '<|end|>' → logprob: -14.517762184143066
    9. '()-' → logprob: -14.767762184143066
    10. ')-' → logprob: -15.142762184143066

Token 282: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.9743012671824545e-05
    2. ' ' → logprob: -10.875020027160645
    3. '0' → logprob: -14.375020027160645
    4. '<|end|>' → logprob: -16.375019073486328
    5. '2' → logprob: -18.125019073486328
    6. '   ' → logprob: -18.875019073486328
    7. '

' → logprob: -18.875019073486328
    8. '
' → logprob: -19.437519073486328
    9. '```' → logprob: -19.437519073486328
    10. '۱' → logprob: -20.062519073486328

Token 283: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -7.896309739408025e-07
    2. ' ' → logprob: -14.125000953674316
    3. '0' → logprob: -18.25
    4. '

' → logprob: -19.625
    5. '
' → logprob: -20.0
    6. '2' → logprob: -20.25
    7. '<|end|>' → logprob: -20.25
    8. '۱' → logprob: -20.75
    9. '```' → logprob: -20.75
    10. '   ' → logprob: -20.9375

Token 284: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.037689223885536194
    2. ' else' → logprob: -4.162689208984375
    3. 'else' → logprob: -4.412689208984375
    4. '       ' → logprob: -5.412689208984375
    5. '
' → logprob: -5.787689208984375
    6. '<|end|>' → logprob: -7.162689208984375
    7. '	       ' → logprob: -8.412689208984375
    8. '		' → logprob: -8.412689208984375
    9. '<|end|>' → logprob: -9.287689208984375
    10. '               ' → logprob: -9.662689208984375

Token 285: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.6062793135643005
    2. '       ' → logprob: -0.8562793135643005
    3. 'else' → logprob: -4.356279373168945
    4. ' else' → logprob: -4.481279373168945
    5. '
' → logprob: -5.731279373168945
    6. '<|end|>' → logprob: -7.356279373168945
    7. '   ' → logprob: -7.981279373168945
    8. '	' → logprob: -8.356279373168945
    9. '	       ' → logprob: -8.606279373168945
    10. '		' → logprob: -8.856279373168945

Token 286: ' else' (ID: 1203)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' (adapté à ' else') → logprob: -0.3491015136241913
    2. ' else' → logprob: -1.3491015434265137
    3. '       ' → logprob: -3.3491015434265137
    4. 'return' → logprob: -9.974101066589355
    5. '	else' → logprob: -11.099101066589355
    6. '           ' → logprob: -11.474101066589355
    7. ' return' → logprob: -12.224101066589355
    8. '   ' → logprob: -12.224101066589355
    9. '
' → logprob: -13.349101066589355
    10. ' ' → logprob: -13.724101066589355

Token 287: ':
' (ID: 734)
  Prédit: ' return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.6807226538658142
    2. '               ' → logprob: -1.055722713470459
    3. 'return' → logprob: -2.055722713470459
    4. ' (' → logprob: -4.680722713470459
    5. '       ' → logprob: -6.055722713470459
    6. ' n' → logprob: -6.430722713470459
    7. '(n' → logprob: -6.555722713470459
    8. '           ' → logprob: -6.680722713470459
    9. 'n' → logprob: -8.1807222366333
    10. ' ' → logprob: -8.4307222366333

Token 288: '               ' (ID: 506)
  Prédit: ' n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.05260724574327469
    2. 'n' → logprob: -3.177607297897339
    3. ' return' → logprob: -4.92760705947876
    4. 'return' → logprob: -6.55260705947876
    5. ' (' → logprob: -7.80260705947876
    6. '           ' → logprob: -8.802607536315918
    7. '(n' → logprob: -8.927607536315918
    8. '       ' → logprob: -9.927607536315918
    9. '   ' → logprob: -10.177607536315918
    10. '               ' → logprob: -10.302607536315918

Token 289: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.20274583995342255
    2. ' return' → logprob: -1.952745795249939
    3. 'n' → logprob: -3.3277459144592285
    4. ' n' → logprob: -5.2027459144592285
    5. '(n' → logprob: -8.82774543762207
    6. '               ' → logprob: -9.45274543762207
    7. '   ' → logprob: -11.70274543762207
    8. ' (' → logprob: -12.07774543762207
    9. '           ' → logprob: -12.57774543762207
    10. '                   ' → logprob: -12.70274543762207

Token 290: ' n' (ID: 297)
  Prédit: ' n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.49281564354896545
    2. 'n' → logprob: -0.9928156137466431
    3. '(n' → logprob: -4.2428154945373535
    4. ' (' → logprob: -5.4928154945373535
    5. '   ' → logprob: -10.367815971374512
    6. ' ' → logprob: -10.742815971374512
    7. '(' → logprob: -11.367815971374512
    8. ' ' → logprob: -11.742815971374512
    9. '	n' → logprob: -12.492815971374512
    10. '_n' → logprob: -14.492815971374512

Token 291: ' //' (ID: 602)
  Prédit: '//'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '//' → logprob: -0.25529003143310547
    2. ' //' → logprob: -1.5052900314331055
    3. '   ' → logprob: -6.5052900314331055
    4. ' ' → logprob: -6.7552900314331055
    5. '(' → logprob: -7.7552900314331055
    6. '#' → logprob: -9.630290031433105
    7. ' ' → logprob: -10.380290031433105
    8. '/' → logprob: -10.630290031433105
    9. '()' → logprob: -10.880290031433105
    10. '```' → logprob: -11.005290031433105

Token 292: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0003473825636319816
    2. ' ' → logprob: -8.000347137451172
    3. '   ' → logprob: -12.000347137451172
    4. '           ' → logprob: -12.750347137451172
    5. '       ' → logprob: -13.375347137451172
    6. '  ' → logprob: -15.812847137451172
    7. '۲' → logprob: -16.000347137451172
    8. '210' → logprob: -16.312847137451172
    9. '     ' → logprob: -16.312847137451172
    10. '               ' → logprob: -16.500347137451172

Token 293: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -3.292907877039397e-06
    2. ' ' → logprob: -13.00000286102295
    3. '22' → logprob: -15.62500286102295
    4. '۲' → logprob: -15.87500286102295
    5. '210' → logprob: -15.87500286102295
    6. '212' → logprob: -16.625003814697266
    7. '216' → logprob: -16.750003814697266
    8. '20' → logprob: -16.875003814697266
    9. '21' → logprob: -16.937503814697266
    10. '220' → logprob: -17.062503814697266

Token 294: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 295: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.39308926463127136
    2. '
' → logprob: -1.1430892944335938
    3. '        
' → logprob: -5.768089294433594
    4. '<|end|>' → logprob: -6.143089294433594
    5. '  
' → logprob: -8.768089294433594
    6. '   ' → logprob: -9.393089294433594
    7. '    
' → logprob: -9.393089294433594
    8. '
' → logprob: -9.643089294433594
    9. '

' → logprob: -9.768089294433594
    10. '\n' → logprob: -9.893089294433594

Token 296: ' #' (ID: 1069)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.34573879837989807
    2. ' max' → logprob: -2.2207388877868652
    3. '       ' → logprob: -2.3457388877868652
    4. '
' → logprob: -3.2207388877868652
    5. '#' (adapté à ' #') → logprob: -4.095738887786865
    6. 'dist' → logprob: -4.470738887786865
    7. 'best' → logprob: -5.095738887786865
    8. ' distances' → logprob: -5.845738887786865
    9. ' best' → logprob: -5.970738887786865
    10. '        
' → logprob: -6.595738887786865

Token 297: ' For' (ID: 2214)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.42318323254585266
    2. ' max' → logprob: -1.2981832027435303
    3. 'dist' → logprob: -3.7981832027435303
    4. ' best' → logprob: -4.298183441162109
    5. '#' → logprob: -4.548183441162109
    6. 'best' → logprob: -4.798183441162109
    7. ' distances' → logprob: -5.423183441162109
    8. ' #' → logprob: -6.048183441162109
    9. 'def' → logprob: -6.048183441162109
    10. 'c' → logprob: -6.298183441162109

Token 298: ' each' (ID: 2454)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.4658549726009369
    2. ' i' → logprob: -1.0908550024032593
    3. ' each' → logprob: -4.590855121612549
    4. 'pos' → logprob: -5.215855121612549
    5. 'each' → logprob: -5.590855121612549
    6. 'max' → logprob: -5.590855121612549
    7. ' pos' → logprob: -5.590855121612549
    8. ' max' → logprob: -5.840855121612549
    9. ' seat' → logprob: -6.340855121612549
    10. ' best' → logprob: -7.465855121612549

Token 299: ' seated' (ID: 77168)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.7473219633102417
    2. ' i' → logprob: -1.4973219633102417
    3. ' position' → logprob: -2.3723220825195312
    4. ' seat' → logprob: -2.6223220825195312
    5. 'position' → logprob: -3.2473220825195312
    6. 'seat' → logprob: -3.2473220825195312
    7. ' empty' → logprob: -3.9973220825195312
    8. 'empty' → logprob: -4.747322082519531
    9. ' index' → logprob: -4.997322082519531
    10. 'index' → logprob: -5.122322082519531

Token 300: ' person' (ID: 1647)
  Prédit: 'position'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'position' → logprob: -0.448393851518631
    2. 'seat' → logprob: -1.9483938217163086
    3. ' position' → logprob: -2.1983938217163086
    4. ' seat' → logprob: -3.0733938217163086
    5. 'pos' → logprob: -4.198393821716309
    6. 'index' → logprob: -4.323393821716309
    7. 'chair' → logprob: -4.823393821716309
    8. 'i' → logprob: -5.198393821716309
    9. 'person' → logprob: -5.323393821716309
    10. ' index' → logprob: -5.573393821716309

Token 301: ' from' (ID: 591)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.06788235902786255
    2. '       ' → logprob: -3.3178822994232178
    3. '           ' → logprob: -4.192882537841797
    4. ' ,' → logprob: -4.567882537841797
    5. ' for' → logprob: -7.317882537841797
    6. '   ' → logprob: -7.567882537841797
    7. ',
' → logprob: -8.067882537841797
    8. 'def' → logprob: -8.067882537841797
    9. '
' → logprob: -8.192882537841797
    10. ':' → logprob: -8.317882537841797

Token 302: ' left' (ID: 3561)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.5059294700622559
    2. 'occupied' → logprob: -1.7559294700622559
    3. '1' → logprob: -2.755929470062256
    4. 'range' → logprob: -3.255929470062256
    5. ' ' → logprob: -3.380929470062256
    6. 'left' → logprob: -4.130929470062256
    7. 'enumer' → logprob: -4.130929470062256
    8. 'the' → logprob: -4.130929470062256
    9. 'i' → logprob: -4.755929470062256
    10. '2' → logprob: -5.505929470062256

Token 303: ' to' (ID: 316)
  Prédit: ' to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' to' → logprob: -0.8149949908256531
    2. 'to' → logprob: -1.0649950504302979
    3. '       ' → logprob: -2.064995050430298
    4. ',' → logprob: -3.064995050430298
    5. '   ' → logprob: -3.689995050430298
    6. 'for' → logprob: -5.564994812011719
    7. ' for' → logprob: -6.314994812011719
    8. ':' → logprob: -6.814994812011719
    9. '+' → logprob: -6.939994812011719
    10. ' ' → logprob: -7.314994812011719

Token 304: ' right' (ID: 1849)
  Prédit: 'right'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'right' → logprob: -0.07321027666330338
    2. 'left' → logprob: -2.6982102394104004
    3. ' right' → logprob: -6.1982102394104
    4. 'enumer' → logprob: -7.3232102394104
    5. 'range' → logprob: -8.448210716247559
    6. 'occupied' → logprob: -8.823210716247559
    7. ' left' → logprob: -9.448210716247559
    8. '1' → logprob: -10.073210716247559
    9. ' ' → logprob: -10.698210716247559
    10. 'the' → logprob: -10.823210716247559

Token 305: '
' (ID: 198)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.3778863251209259
    2. '       ' → logprob: -1.5028862953186035
    3. ':' → logprob: -3.3778862953186035
    4. '
' → logprob: -3.7528862953186035
    5. ':
' → logprob: -4.8778862953186035
    6. ' ,' → logprob: -5.0028862953186035
    7. ',
' → logprob: -5.0028862953186035
    8. '        
' → logprob: -6.1278862953186035
    9. '<|end|>' → logprob: -6.1278862953186035
    10. '   ' → logprob: -6.3778862953186035

Token 306: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.021205486729741096
    2. ',' → logprob: -4.396205425262451
    3. '
' → logprob: -5.521205425262451
    4. '        
' → logprob: -6.521205425262451
    5. '   ' → logprob: -6.646205425262451
    6. '           ' → logprob: -7.896205425262451
    7. ':' → logprob: -8.14620590209961
    8. ',
' → logprob: -8.27120590209961
    9. ':
' → logprob: -8.77120590209961
    10. '    
' → logprob: -9.02120590209961

Token 307: ' for' (ID: 395)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2553974986076355
    2. ' max' → logprob: -2.3803975582122803
    3. 'max' → logprob: -3.1303975582122803
    4. ' distances' → logprob: -3.3803975582122803
    5. '
' → logprob: -4.255397319793701
    6. '   ' → logprob: -4.380397319793701
    7. ' best' → logprob: -5.380397319793701
    8. ' for' → logprob: -5.380397319793701
    9. ' gaps' → logprob: -6.130397319793701
    10. '        
' → logprob: -6.130397319793701

Token 308: ' pos' (ID: 1253)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.20771685242652893
    2. 'i' → logprob: -2.457716941833496
    3. ' idx' → logprob: -2.582716941833496
    4. ' j' → logprob: -4.957716941833496
    5. ' pos' → logprob: -5.082716941833496
    6. 'idx' → logprob: -5.207716941833496
    7. 'pos' → logprob: -5.832716941833496
    8. 'j' → logprob: -6.332716941833496
    9. ' occupied' → logprob: -7.582716941833496
    10. ' index' → logprob: -7.707716941833496

Token 309: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.019665375351905823
    2. 'in' → logprob: -4.519665241241455
    3. ',' → logprob: -5.019665241241455
    4. '_index' → logprob: -7.144665241241455
    5. '_idx' → logprob: -7.519665241241455
    6. '1' → logprob: -8.769665718078613
    7. 'i' → logprob: -9.269665718078613
    8. 'index' → logprob: -9.394665718078613
    9. 'idx' → logprob: -9.519665718078613
    10. '_in' → logprob: -9.769665718078613

Token 310: ' occupied' (ID: 46186)
  Prédit: 'occupied'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'occupied' → logprob: -0.25088274478912354
    2. 'range' → logprob: -1.6258827447891235
    3. ' range' → logprob: -4.000882625579834
    4. ' occupied' → logprob: -5.250882625579834
    5. 'enumer' → logprob: -7.250882625579834
    6. 'sorted' → logprob: -8.375883102416992
    7. 'occup' → logprob: -8.625883102416992
    8. ' ' → logprob: -9.250883102416992
    9. '   ' → logprob: -9.375883102416992
    10. 're' → logprob: -9.813383102416992

Token 311: '_positions' (ID: 93193)
  Prédit: '_positions'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_positions' → logprob: -9.043078898685053e-05
    2. 'positions' → logprob: -9.375090599060059
    3. 's' → logprob: -13.750090599060059
    4. 'Positions' → logprob: -13.875090599060059
    5. ' positions' → logprob: -14.250090599060059
    6. ')' → logprob: -14.250090599060059
    7. '_' → logprob: -14.250090599060059
    8. '(' → logprob: -15.625090599060059
    9. '[' → logprob: -15.750090599060059
    10. '\' → logprob: -16.000089645385742

Token 312: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.49058669805526733
    2. ':' → logprob: -1.490586757659912
    3. '[:-' → logprob: -2.490586757659912
    4. '[' → logprob: -2.615586757659912
    5. '   ' → logprob: -5.865586757659912
    6. '       ' → logprob: -6.115586757659912
    7. '[::-' → logprob: -8.115586280822754
    8. '):
' → logprob: -8.240586280822754
    9. ',' → logprob: -8.365586280822754
    10. '+' → logprob: -8.365586280822754

Token 313: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.07023317366838455
    2. '       ' → logprob: -2.945233106613159
    3. ':' → logprob: -5.570233345031738
    4. ',' → logprob: -6.070233345031738
    5. '
' → logprob: -6.570233345031738
    6. ':
' → logprob: -6.695233345031738
    7. '   ' → logprob: -6.945233345031738
    8. '	       ' → logprob: -6.945233345031738
    9. '            
' → logprob: -7.195233345031738
    10. '<|end|>' → logprob: -7.570233345031738

Token 314: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4910966157913208
    2. '           ' → logprob: -1.8660966157913208
    3. ' for' → logprob: -2.6160964965820312
    4. ' if' → logprob: -2.7410964965820312
    5. '
' → logprob: -3.1160964965820312
    6. '        
' → logprob: -4.991096496582031
    7. '        ' → logprob: -5.241096496582031
    8. ' n' → logprob: -5.366096496582031
    9. '               ' → logprob: -5.741096496582031
    10. '   ' → logprob: -5.741096496582031

Token 315: ' Try' (ID: 14720)
  Prédit: ' left'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' left' → logprob: -0.8438495993614197
    2. ' if' → logprob: -1.3438496589660645
    3. ' for' → logprob: -2.4688496589660645
    4. 'left' → logprob: -2.5938496589660645
    5. 'if' → logprob: -3.2188496589660645
    6. ' prev' → logprob: -3.7188496589660645
    7. 'for' → logprob: -3.7188496589660645
    8. '       ' → logprob: -4.8438496589660645
    9. '           ' → logprob: -4.9688496589660645
    10. 'prev' → logprob: -5.0938496589660645

Token 316: ' right' (ID: 1849)
  Prédit: ' left'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' left' → logprob: -0.3664650022983551
    2. ' for' → logprob: -1.6164649724960327
    3. 'left' → logprob: -3.3664650917053223
    4. ' to' → logprob: -4.241465091705322
    5. ' seats' → logprob: -4.366465091705322
    6. ' right' → logprob: -4.741465091705322
    7. 'for' → logprob: -4.866465091705322
    8. ' seat' → logprob: -5.366465091705322
    9. '   ' → logprob: -5.616465091705322
    10. ' i' → logprob: -5.991465091705322

Token 317: ' neighbor' (ID: 13034)
  Prédit: ' +'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.16151593625545502
    2. '+' → logprob: -2.036515951156616
    3. ' +=' → logprob: -4.911515712738037
    4. '           ' → logprob: -5.036515712738037
    5. ' =' → logprob: -6.661515712738037
    6. '       ' → logprob: -7.036515712738037
    7. '               ' → logprob: -7.411515712738037
    8. '   ' → logprob: -7.661515712738037
    9. '=' → logprob: -8.161516189575195
    10. ' i' → logprob: -8.786516189575195

Token 318: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.08991637825965881
    2. ' if' → logprob: -2.714916467666626
    3. ' (' → logprob: -4.964916229248047
    4. ',' → logprob: -5.964916229248047
    5. ' for' → logprob: -6.089916229248047
    6. '<|end|>' → logprob: -6.464916229248047
    7. ':' → logprob: -6.714916229248047
    8. '<|end|>' → logprob: -7.089916229248047
    9. ' =' → logprob: -7.214916229248047
    10. ' and' → logprob: -7.839916229248047

Token 319: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.019492708146572113
    2. ' if' → logprob: -4.1444926261901855
    3. ' for' → logprob: -7.1444926261901855
    4. ' =' → logprob: -7.5194926261901855
    5. ':' → logprob: -7.6444926261901855
    6. ',' → logprob: -7.6444926261901855
    7. ' (' → logprob: -8.769493103027344
    8. ' and' → logprob: -8.769493103027344
    9. '               ' → logprob: -9.019493103027344
    10. ' in' → logprob: -9.394493103027344

Token 320: ' r' (ID: 428)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.5323231816291809
    2. ' if' → logprob: -0.9073231816291809
    3. ' i' → logprob: -5.782323360443115
    4. ' next' → logprob: -6.407323360443115
    5. 'if' → logprob: -6.782323360443115
    6. '            
' → logprob: -7.782323360443115
    7. ' for' → logprob: -7.907323360443115
    8. ' ' → logprob: -7.907323360443115
    9. ' x' → logprob: -7.907323360443115
    10. ' 
' → logprob: -8.532322883605957

Token 321: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2453078329563141
    2. 'ight' → logprob: -1.6203078031539917
    3. '_pos' → logprob: -4.620307922363281
    4. '=' → logprob: -4.870307922363281
    5. 'pos' → logprob: -6.870307922363281
    6. '+' → logprob: -7.870307922363281
    7. ' ' → logprob: -8.620307922363281
    8. 'ght' → logprob: -8.995307922363281
    9. '   ' → logprob: -9.370307922363281
    10. '           ' → logprob: -9.870307922363281

Token 322: ' pos' (ID: 1253)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pos' → logprob: -0.10020774602890015
    2. ' pos' → logprob: -2.350207805633545
    3. '	pos' → logprob: -14.850207328796387
    4. '   ' → logprob: -15.100207328796387
    5. '(pos' → logprob: -15.725207328796387
    6. ' ' → logprob: -16.350208282470703
    7. '           ' → logprob: -16.850208282470703
    8. 'p' → logprob: -17.100208282470703
    9. '       ' → logprob: -17.725208282470703
    10. ' ' → logprob: -18.100208282470703

Token 323: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.31326204538345337
    2. '+' → logprob: -1.3132619857788086
    3. '+i' → logprob: -16.188262939453125
    4. ' +
' → logprob: -16.938262939453125
    5. '()+' → logprob: -17.438262939453125
    6. '+
' → logprob: -17.688262939453125
    7. ' ' → logprob: -17.813262939453125
    8. ' plus' → logprob: -18.063262939453125
    9. '<|end|>' → logprob: -18.063262939453125
    10. '＋' → logprob: -18.188262939453125

Token 324: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00013381359167397022
    2. ' ' → logprob: -9.000133514404297
    3. '2' → logprob: -11.500133514404297
    4. '
' → logprob: -16.250133514404297
    5. '   ' → logprob: -16.375133514404297
    6. '```' → logprob: -18.250133514404297
    7. '  ' → logprob: -18.875133514404297
    8. '[' → logprob: -19.312633514404297
    9. '0' → logprob: -19.750133514404297
    10. ' ' → logprob: -20.562633514404297

Token 325: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00014334988372866064
    2. ' ' → logprob: -8.875143051147461
    3. '2' → logprob: -12.875143051147461
    4. '   ' → logprob: -14.375143051147461
    5. '```' → logprob: -15.500143051147461
    6. '  ' → logprob: -16.75014305114746
    7. '[' → logprob: -17.56264305114746
    8. '
' → logprob: -18.12514305114746
    9. '`' → logprob: -18.37514305114746
    10. '0' → logprob: -18.62514305114746

Token 326: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.2552967667579651
    2. '
' → logprob: -1.5052967071533203
    3. '<|end|>' → logprob: -6.00529670715332
    4. '<|end|>' → logprob: -8.25529670715332
    5. '       ' → logprob: -8.88029670715332
    6. ' if' → logprob: -9.50529670715332
    7. '               ' → logprob: -9.88029670715332
    8. '	       ' → logprob: -9.88029670715332
    9. '            
' → logprob: -10.13029670715332
    10. ' 
' → logprob: -10.38029670715332

Token 327: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.000241801084484905
    2. '<|end|>' → logprob: -9.875242233276367
    3. '	       ' → logprob: -10.000242233276367
    4. '       ' → logprob: -10.375242233276367
    5. '<|end|>' → logprob: -11.125242233276367
    6. '		' → logprob: -11.125242233276367
    7. ' if' → logprob: -11.250242233276367
    8. '
' → logprob: -11.250242233276367
    9. ' while' → logprob: -11.750242233276367
    10. 'while' → logprob: -11.875242233276367

Token 328: ' if' (ID: 538)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.627566397190094
    2. ' if' → logprob: -1.1275663375854492
    3. 'if' (adapté à ' if') → logprob: -2.502566337585449
    4. ' while' → logprob: -3.377566337585449
    5. 'while' → logprob: -3.752566337585449
    6. '       ' → logprob: -6.627566337585449
    7. '
' → logprob: -7.377566337585449
    8. '	       ' → logprob: -7.627566337585449
    9. '		' → logprob: -9.62756633758545
    10. '	while' → logprob: -9.87756633758545

Token 329: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.16041482985019684
    2. ' r' → logprob: -1.9104148149490356
    3. 'chairs' → logprob: -9.535414695739746
    4. ' ' → logprob: -10.535414695739746
    5. 'n' → logprob: -10.785414695739746
    6. '0' → logprob: -10.785414695739746
    7. '	r' → logprob: -11.660414695739746
    8. ' chairs' → logprob: -11.722914695739746
    9. '   ' → logprob: -12.097914695739746
    10. ' n' → logprob: -12.597914695739746

Token 330: ' <' (ID: 464)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<' → logprob: -0.7112280130386353
    2. ' <' → logprob: -0.8362280130386353
    3. '<n' → logprob: -2.5862278938293457
    4. '<len' → logprob: -8.336228370666504
    5. '<num' → logprob: -11.211228370666504
    6. 'n' → logprob: -11.336228370666504
    7. '<N' → logprob: -11.336228370666504
    8. '<=' → logprob: -11.836228370666504
    9. '<size' → logprob: -12.461228370666504
    10. ' n' → logprob: -12.836228370666504

Token 331: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.0026579394470900297
    2. 'len' → logprob: -6.002657890319824
    3. ' n' → logprob: -8.627657890319824
    4. ' len' → logprob: -12.877657890319824
    5. '   ' → logprob: -15.002657890319824
    6. '	n' → logprob: -16.12765884399414
    7. 'length' → logprob: -17.37765884399414
    8. '(n' → logprob: -17.62765884399414
    9. '```' → logprob: -17.62765884399414
    10. ' ' → logprob: -17.75265884399414

Token 332: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.10030049085617065
    2. 'and' → logprob: -2.3503005504608154
    3. '           ' → logprob: -9.350300788879395
    4. '               ' → logprob: -12.975300788879395
    5. '	and' → logprob: -13.475300788879395
    6. '       ' → logprob: -13.725300788879395
    7. ' ' → logprob: -14.100300788879395
    8. '   ' → logprob: -14.975300788879395
    9. ':
' → logprob: -15.600300788879395
    10. '          ' → logprob: -15.725300788879395

Token 333: ' chairs' (ID: 34049)
  Prédit: ' chairs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' chairs' → logprob: -0.5233943462371826
    2. 'chairs' → logprob: -0.8983943462371826
    3. 'ch' → logprob: -8.523394584655762
    4. ' ' → logprob: -10.773394584655762
    5. 'chair' → logprob: -11.148394584655762
    6. '   ' → logprob: -12.273394584655762
    7. 'chars' → logprob: -12.835894584655762
    8. ' ' → logprob: -13.085894584655762
    9. '#' → logprob: -13.210894584655762
    10. '(ch' → logprob: -13.335894584655762

Token 334: '[r' (ID: 33265)
  Prédit: '[r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[r' → logprob: -2.0219828002154827e-05
    2. '[' → logprob: -11.375020027160645
    3. 'r' → logprob: -12.125020027160645
    4. ' [' → logprob: -13.750020027160645
    5. '[
' → logprob: -14.500020027160645
    6. '==' → logprob: -14.625020027160645
    7. '```' → logprob: -14.625020027160645
    8. ' ==' → logprob: -15.750020027160645
    9. ')' → logprob: -16.00002098083496
    10. ']' → logprob: -16.00002098083496

Token 335: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.17950227856636047
    2. ' ==' → logprob: -2.179502248764038
    3. ']==' → logprob: -3.679502248764038
    4. '==' → logprob: -3.804502248764038
    5. ' ]' → logprob: -5.804502487182617
    6. ']=='' → logprob: -7.929502487182617
    7. '[' → logprob: -9.304502487182617
    8. '=='' → logprob: -9.429502487182617
    9. '']' → logprob: -10.179502487182617
    10. ' =='' → logprob: -11.054502487182617

Token 336: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.07937120646238327
    2. '==' → logprob: -2.579371213912964
    3. '=='' → logprob: -7.829370975494385
    4. ' =='' → logprob: -9.829371452331543
    5. '[' → logprob: -11.954371452331543
    6. '==
' → logprob: -12.079371452331543
    7. ''' → logprob: -12.204371452331543
    8. '=' → logprob: -12.954371452331543
    9. ']==' → logprob: -12.954371452331543
    10. ' ' → logprob: -13.454371452331543

Token 337: ' '#' (ID: 11284)
  Prédit: ''#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''#' → logprob: -0.07918652892112732
    2. ''' → logprob: -2.57918643951416
    3. ' '#'' → logprob: -8.20418643951416
    4. '"#' → logprob: -11.45418643951416
    5. '"' → logprob: -12.20418643951416
    6. ' '#' → logprob: -12.32918643951416
    7. ' '' → logprob: -13.57918643951416
    8. ''\' → logprob: -14.95418643951416
    9. '('#' → logprob: -15.07918643951416
    10. '='#' → logprob: -15.70418643951416

Token 338: '':
' (ID: 7669)
  Prédit: '':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '':
' → logprob: -1.2694816589355469
    2. ':' → logprob: -1.3944816589355469
    3. ':
' → logprob: -1.5194816589355469
    4. '':' → logprob: -1.6444816589355469
    5. '               ' → logprob: -3.644481658935547
    6. '):
' → logprob: -3.769481658935547
    7. '):' → logprob: -5.269481658935547
    8. '           ' → logprob: -7.019481658935547
    9. ''' → logprob: -7.019481658935547
    10. '                   ' → logprob: -7.144481658935547

Token 339: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0011089015752077103
    2. ' and' → logprob: -8.00110912322998
    3. ' return' → logprob: -8.62610912322998
    4. ':
' → logprob: -8.87610912322998
    5. '                
' → logprob: -8.87610912322998
    6. '
' → logprob: -9.25110912322998
    7. '           ' → logprob: -9.50110912322998
    8. 'return' → logprob: -10.25110912322998
    9. ',' → logprob: -10.87610912322998
    10. ':' → logprob: -11.37610912322998

Token 340: ' return' (ID: 622)
  Prédit: ' return'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.42395758628845215
    2. '               ' → logprob: -1.4239575862884521
    3. 'return' (adapté à ' return') → logprob: -2.798957586288452
    4. '                   ' → logprob: -3.423957586288452
    5. '           ' → logprob: -5.298957824707031
    6. ' if' → logprob: -6.298957824707031
    7. 'distance' → logprob: -6.673957824707031
    8. ' distance' → logprob: -7.173957824707031
    9. ' distances' → logprob: -7.548957824707031
    10. '   ' → logprob: -7.798957824707031

Token 341: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.28115540742874146
    2. ' r' → logprob: -1.4061553478240967
    3. ' ' → logprob: -12.906155586242676
    4. ' ' → logprob: -14.031155586242676
    5. ' 
' → logprob: -14.781155586242676
    6. '(r' → logprob: -15.281155586242676
    7. '_r' → logprob: -15.281155586242676
    8. '	r' → logprob: -15.968655586242676
    9. ' (' → logprob: -16.46865463256836
    10. '"' → logprob: -16.59365463256836

Token 342: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 343: '           ' (ID: 352)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 344: ' #' (ID: 1069)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.22571268677711487
    2. '           ' → logprob: -1.9757126569747925
    3. '       ' → logprob: -3.600712776184082
    4. '<|end|>' → logprob: -3.600712776184082
    5. ' ' → logprob: -6.475712776184082
    6. '\n' → logprob: -6.975712776184082
    7. '#' (adapté à ' #') → logprob: -7.100712776184082
    8. '   ' → logprob: -7.350712776184082
    9. '<|end|>' → logprob: -7.600712776184082
    10. '		' → logprob: -7.600712776184082

Token 345: ' Try' (ID: 14720)
  Prédit: ' l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' l' → logprob: -0.45803606510162354
    2. 'l' → logprob: -1.0830360651016235
    3. ' left' → logprob: -3.958035945892334
    4. 'left' → logprob: -4.833035945892334
    5. ' #' → logprob: -7.833035945892334
    6. ' continue' → logprob: -8.083036422729492
    7. '#' → logprob: -8.208036422729492
    8. ' ' → logprob: -8.833036422729492
    9. '   ' → logprob: -8.833036422729492
    10. 'def' → logprob: -9.333036422729492

Token 346: ' left' (ID: 3561)
  Prédit: ' left'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' left' → logprob: -0.8739087581634521
    2. ' pos' → logprob: -0.9989087581634521
    3. 'left' → logprob: -2.123908758163452
    4. 'pos' → logprob: -2.373908758163452
    5. '_left' → logprob: -7.748908996582031
    6. ' (' → logprob: -8.123908996582031
    7. '(pos' → logprob: -8.248908996582031
    8. ' l' → logprob: -8.998908996582031
    9. ' ' → logprob: -9.623908996582031
    10. '   ' → logprob: -9.748908996582031

Token 347: ' neighbor' (ID: 13034)
  Prédit: ' neighbor'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' neighbor' → logprob: -0.07982686161994934
    2. 'neighbor' → logprob: -3.079826831817627
    3. '_neighbor' → logprob: -3.704826831817627
    4. ' =' → logprob: -5.329826831817627
    5. '=' → logprob: -7.329826831817627
    6. '_' → logprob: -8.454827308654785
    7. ' r' → logprob: -9.454827308654785
    8. ' (' → logprob: -9.579827308654785
    9. ':' → logprob: -9.954827308654785
    10. ' ' → logprob: -10.329827308654785

Token 348: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.04866980016231537
    2. ' =' → logprob: -4.673669815063477
    3. 'r' → logprob: -4.798669815063477
    4. '
' → logprob: -4.798669815063477
    5. '<|end|>' → logprob: -5.548669815063477
    6. ' if' → logprob: -5.673669815063477
    7. '		' → logprob: -6.298669815063477
    8. ' r' → logprob: -6.298669815063477
    9. ' (' → logprob: -6.423669815063477
    10. '   ' → logprob: -6.548669815063477

Token 349: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.031221546232700348
    2. ' if' → logprob: -4.531221389770508
    3. ' -' → logprob: -5.031221389770508
    4. ' =' → logprob: -6.031221389770508
    5. 'r' → logprob: -6.531221389770508
    6. '-' → logprob: -6.531221389770508
    7. '=' → logprob: -6.781221389770508
    8. '		' → logprob: -7.031221389770508
    9. ' (' → logprob: -7.156221389770508
    10. '
' → logprob: -7.281221389770508

Token 350: ' l' (ID: 305)
  Prédit: ' r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' r' → logprob: -0.35881519317626953
    2. ' l' → logprob: -1.6088151931762695
    3. 'r' → logprob: -2.6088151931762695
    4. ' (' → logprob: -4.7338151931762695
    5. '           ' → logprob: -5.1088151931762695
    6. 'l' (adapté à ' l') → logprob: -5.3588151931762695
    7. ' pos' → logprob: -6.1088151931762695
    8. 'pos' → logprob: -6.3588151931762695
    9. ' if' → logprob: -6.7338151931762695
    10. ' left' → logprob: -7.6088151931762695

Token 351: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6931471824645996
    2. ' =' → logprob: -0.6931471824645996
    3. '=
' → logprob: -17.443147659301758
    4. ' ' → logprob: -17.443147659301758
    5. ' ' → logprob: -18.568147659301758
    6. ' =
' → logprob: -18.818147659301758
    7. '   ' → logprob: -18.943147659301758
    8. '＝' → logprob: -19.068147659301758
    9. '=int' → logprob: -19.443147659301758
    10. 'r' → logprob: -19.818147659301758

Token 352: ' pos' (ID: 1253)
  Prédit: ' pos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' pos' → logprob: -0.25193047523498535
    2. 'pos' → logprob: -1.5019304752349854
    3. '	pos' → logprob: -15.001930236816406
    4. ' ' → logprob: -15.501930236816406
    5. 'p' → logprob: -15.626930236816406
    6. ' ' → logprob: -15.751930236816406
    7. '(pos' → logprob: -15.751930236816406
    8. '   ' → logprob: -16.251930236816406
    9. '    ' → logprob: -16.501930236816406
    10. 'r' → logprob: -17.501930236816406

Token 353: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.25194019079208374
    2. '-' → logprob: -1.5019402503967285
    3. ' ' → logprob: -11.62693977355957
    4. '=' → logprob: -14.50193977355957
    5. '−' → logprob: -15.00193977355957
    6. ' ' → logprob: -15.37693977355957
    7. '```' → logprob: -15.50193977355957
    8. '   ' → logprob: -15.50193977355957
    9. ' =' → logprob: -15.87693977355957
    10. '1' → logprob: -15.87693977355957

Token 354: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00023071514442563057
    2. ' ' → logprob: -8.37523078918457
    3. '```' → logprob: -17.06273078918457
    4. '   ' → logprob: -17.31273078918457
    5. '2' → logprob: -18.43773078918457
    6. '۱' → logprob: -18.75023078918457
    7. '１' → logprob: -19.18773078918457
    8. '0' → logprob: -19.31273078918457
    9. '
' → logprob: -19.31273078918457
    10. '(' → logprob: -19.81273078918457

Token 355: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.981667537620524e-06
    2. ' ' → logprob: -13.250001907348633
    3. '```' → logprob: -16.812501907348633
    4. '2' → logprob: -17.625001907348633
    5. '0' → logprob: -17.812501907348633
    6. '
' → logprob: -18.000001907348633
    7. '۱' → logprob: -18.250001907348633
    8. '   ' → logprob: -18.437501907348633
    9. '-' → logprob: -19.375001907348633
    10. '１' → logprob: -19.562501907348633

Token 356: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.25223082304000854
    2. '<|end|>' → logprob: -1.6272308826446533
    3. ' if' → logprob: -5.002230644226074
    4. '
' → logprob: -5.127230644226074
    5. '       ' → logprob: -6.252230644226074
    6. '               ' → logprob: -6.502230644226074
    7. '   ' → logprob: -6.627230644226074
    8. '	       ' → logprob: -6.627230644226074
    9. ' >=' → logprob: -6.877230644226074
    10. '		' → logprob: -6.877230644226074

Token 357: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00104150187689811
    2. ' if' → logprob: -8.126041412353516
    3. '	       ' → logprob: -8.251041412353516
    4. '		' → logprob: -8.876041412353516
    5. ' and' → logprob: -9.751041412353516
    6. '          ' → logprob: -10.126041412353516
    7. '<|end|>' → logprob: -10.126041412353516
    8. '               ' → logprob: -10.501041412353516
    9. 'if' → logprob: -11.126041412353516
    10. '```' → logprob: -11.126041412353516

Token 358: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.45033568143844604
    2. ' if' → logprob: -1.0753357410430908
    3. '           ' → logprob: -3.950335741043091
    4. '
' → logprob: -6.950335502624512
    5. '            
' → logprob: -7.950335502624512
    6. '<|end|>' → logprob: -8.575335502624512
    7. '               ' → logprob: -9.450335502624512
    8. '>=' → logprob: -9.575335502624512
    9. '            ' → logprob: -9.700335502624512
    10. '       ' → logprob: -10.075335502624512

Token 359: ' l' (ID: 305)
  Prédit: ' l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' l' → logprob: -0.5231471657752991
    2. 'l' → logprob: -0.8981471657752991
    3. '0' → logprob: -12.148147583007812
    4. ' ' → logprob: -12.273147583007812
    5. '   ' → logprob: -12.898147583007812
    6. '	l' → logprob: -13.273147583007812
    7. 'chairs' → logprob: -13.398147583007812
    8. '(l' → logprob: -13.773147583007812
    9. '    ' → logprob: -14.210647583007812
    10. ' ' → logprob: -14.210647583007812

Token 360: ' >=' (ID: 5064)
  Prédit: ' >='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >=' → logprob: -0.162831112742424
    2. '>=' → logprob: -1.9128310680389404
    3. '>' → logprob: -6.1628313064575195
    4. ' >' → logprob: -7.6628313064575195
    5. ' ' → logprob: -10.78783130645752
    6. ')' → logprob: -13.66283130645752
    7. ' ' → logprob: -13.91283130645752
    8. ']>=' → logprob: -13.91283130645752
    9. ')>=' → logprob: -13.91283130645752
    10. '≥' → logprob: -14.28783130645752

Token 361: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.054883409291505814
    2. ' ' → logprob: -2.9298834800720215
    3. '   ' → logprob: -14.054883003234863
    4. '1' → logprob: -16.05488395690918
    5. '  ' → logprob: -16.17988395690918
    6. ' ' → logprob: -16.86738395690918
    7. '    ' → logprob: -16.92988395690918
    8. 'n' → logprob: -17.11738395690918
    9. 'def' → logprob: -17.92988395690918
    10. '     ' → logprob: -18.05488395690918

Token 362: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -3.547789674485102e-05
    2. ' ' → logprob: -10.250035285949707
    3. '   ' → logprob: -17.750036239624023
    4. '1' → logprob: -19.375036239624023
    5. '۰' → logprob: -19.937536239624023
    6. '
' → logprob: -20.125036239624023
    7. '00' → logprob: -20.312536239624023
    8. ' ' → logprob: -20.750036239624023
    9. '```' → logprob: -20.875036239624023
    10. 'n' → logprob: -20.875036239624023

Token 363: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.07889056205749512
    2. 'and' → logprob: -2.578890562057495
    3. '	and' → logprob: -15.078890800476074
    4. '           ' → logprob: -15.328890800476074
    5. ' ' → logprob: -16.328889846801758
    6. '   ' → logprob: -16.703889846801758
    7. ' ' → logprob: -16.953889846801758
    8. '       ' → logprob: -17.953889846801758
    9. ' и' → logprob: -18.203889846801758
    10. '<|end|>' → logprob: -18.578889846801758

Token 364: ' chairs' (ID: 34049)
  Prédit: 'chairs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'chairs' → logprob: -0.11288907378911972
    2. ' chairs' → logprob: -2.237889051437378
    3. 'ch' → logprob: -9.737889289855957
    4. 'chair' → logprob: -12.237889289855957
    5. ' ' → logprob: -13.737889289855957
    6. '   ' → logprob: -14.862889289855957
    7. 'chap' → logprob: -15.362889289855957
    8. 'chars' → logprob: -15.362889289855957
    9. ' ' → logprob: -15.612889289855957
    10. '(ch' → logprob: -15.737889289855957

Token 365: '[l' (ID: 38286)
  Prédit: '[l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[l' → logprob: -2.7610454708337784e-05
    2. 'l' → logprob: -10.750027656555176
    3. '[' → logprob: -12.500027656555176
    4. ' [' → logprob: -13.500027656555176
    5. '[
' → logprob: -15.125027656555176
    6. '   ' → logprob: -15.375027656555176
    7. ']' → logprob: -16.00002670288086
    8. '	l' → logprob: -16.00002670288086
    9. '```' → logprob: -16.50002670288086
    10. '][' → logprob: -17.62502670288086

Token 366: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.10179412364959717
    2. ' ==' → logprob: -2.7267942428588867
    3. ']==' → logprob: -3.7267942428588867
    4. '==' → logprob: -5.226794242858887
    5. ' ]' → logprob: -6.351794242858887
    6. ']=='' → logprob: -8.851794242858887
    7. '=='' → logprob: -12.351794242858887
    8. ' ' → logprob: -12.351794242858887
    9. '']' → logprob: -12.601794242858887
    10. '<|end|>' → logprob: -12.601794242858887

Token 367: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.02633826434612274
    2. '==' → logprob: -3.6513383388519287
    3. '=='' → logprob: -10.401338577270508
    4. ' =='' → logprob: -12.651338577270508
    5. ']==' → logprob: -12.901338577270508
    6. ']' → logprob: -14.276338577270508
    7. ' ' → logprob: -14.401338577270508
    8. '[' → logprob: -15.651338577270508
    9. ')' → logprob: -16.526338577270508
    10. ' ' → logprob: -16.776338577270508

Token 368: ' '#' (ID: 11284)
  Prédit: ''#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''#' → logprob: -6.0629870858974755e-05
    2. ' '#'' → logprob: -10.50006103515625
    3. ''' → logprob: -10.62506103515625
    4. '"#' → logprob: -12.87506103515625
    5. ' '#' → logprob: -13.00006103515625
    6. '#' → logprob: -13.25006103515625
    7. '('#' → logprob: -13.87506103515625
    8. '   ' → logprob: -16.00006103515625
    9. ''>' → logprob: -16.12506103515625
    10. ':'#' → logprob: -16.12506103515625

Token 369: '':
' (ID: 7669)
  Prédit: ':
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.6087824106216431
    2. '               ' → logprob: -1.358782410621643
    3. ':' → logprob: -1.733782410621643
    4. '):
' → logprob: -4.2337822914123535
    5. '):' → logprob: -5.4837822914123535
    6. ':return' → logprob: -6.2337822914123535
    7. ' return' → logprob: -7.6087822914123535
    8. '():
' → logprob: -7.9837822914123535
    9. 'return' → logprob: -8.233782768249512
    10. '           ' → logprob: -9.108782768249512

Token 370: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.01436681766062975
    2. ' return' → logprob: -4.639366626739502
    3. 'return' → logprob: -5.389366626739502
    4. '           ' → logprob: -11.01436710357666
    5. '                   ' → logprob: -11.51436710357666
    6. '	return' → logprob: -13.01436710357666
    7. '       ' → logprob: -13.88936710357666
    8. ':return' → logprob: -13.88936710357666
    9. '              ' → logprob: -14.01436710357666
    10. '	           ' → logprob: -14.01436710357666

Token 371: ' return' (ID: 622)
  Prédit: ' return'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.5817461609840393
    2. 'return' (adapté à ' return') → logprob: -0.8317461609840393
    3. '               ' → logprob: -5.2067461013793945
    4. '                   ' → logprob: -8.206746101379395
    5. ' l' → logprob: -10.831746101379395
    6. '                ' → logprob: -12.331746101379395
    7. '           ' → logprob: -12.456746101379395
    8. '	return' → logprob: -12.581746101379395
    9. 'l' → logprob: -13.081746101379395
    10. ' ' → logprob: -14.081746101379395

Token 372: ' l' (ID: 305)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.20141363143920898
    2. ' l' → logprob: -1.701413631439209
    3. '	l' → logprob: -16.201414108276367
    4. '(l' → logprob: -16.326414108276367
    5. ' ' → logprob: -16.576414108276367
    6. ' ' → logprob: -16.951414108276367
    7. '(' → logprob: -17.076414108276367
    8. '_l' → logprob: -17.951414108276367
    9. '$l' → logprob: -18.076414108276367
    10. ' л' → logprob: -18.326414108276367

Token 373: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 374: '       ' (ID: 309)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.7918160557746887
    2. '<|end|>' → logprob: -1.041815996170044
    3. '       ' → logprob: -1.791815996170044
    4. '   ' → logprob: -3.791815996170044
    5. '<|end|>' → logprob: -5.791816234588623
    6. '	return' → logprob: -7.416816234588623
    7. '    
' → logprob: -8.291815757751465
    8. '        
' → logprob: -8.666815757751465
    9. 'return' → logprob: -8.666815757751465
    10. '
' → logprob: -9.041815757751465

Token 375: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6356746554374695
    2. '   ' → logprob: -1.0106747150421143
    3. 'return' → logprob: -2.7606747150421143
    4. '
' → logprob: -3.3856747150421143
    5. ' return' → logprob: -5.510674476623535
    6. '	return' → logprob: -6.010674476623535
    7. '<|end|>' → logprob: -6.385674476623535
    8. '    
' → logprob: -8.135674476623535
    9. '#' (adapté à ' #') → logprob: -8.260674476623535
    10. '        
' → logprob: -8.635674476623535

Token 376: ' If' (ID: 1843)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.7781566381454468
    2. 'for' → logprob: -0.9031566381454468
    3. 'return' → logprob: -2.0281567573547363
    4. ' for' → logprob: -6.278156757354736
    5. '       ' → logprob: -7.028156757354736
    6. ' return' → logprob: -7.778156757354736
    7. '   ' → logprob: -8.153156280517578
    8. ' #' → logprob: -8.653156280517578
    9. 'first' → logprob: -10.028156280517578
    10. 'max' → logprob: -10.528156280517578

Token 377: ' none' (ID: 12698)
  Prédit: ' all'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' all' → logprob: -0.37108585238456726
    2. ' True' → logprob: -1.9960858821868896
    3. ' chairs' → logprob: -2.3710858821868896
    4. 'True' → logprob: -3.6210858821868896
    5. 'all' → logprob: -4.1210856437683105
    6. ' no' → logprob: -4.2460856437683105
    7. ' not' → logprob: -4.3710856437683105
    8. 'chairs' → logprob: -5.8710856437683105
    9. 'None' → logprob: -6.3710856437683105
    10. ' None' → logprob: -6.7460856437683105

Token 378: ' found' (ID: 2491)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.8751548528671265
    2. ' of' → logprob: -2.125154972076416
    3. ' found' → logprob: -2.125154972076416
    4. ' are' → logprob: -3.250154972076416
    5. '       ' → logprob: -3.625154972076416
    6. ' return' → logprob: -3.875154972076416
    7. '
' → logprob: -3.875154972076416
    8. '   ' → logprob: -3.875154972076416
    9. ' for' → logprob: -4.250154972076416
    10. ' is' → logprob: -4.250154972076416

Token 379: ',' (ID: 11)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.027147818356752396
    2. ' for' → logprob: -5.0271477699279785
    3. ' return' → logprob: -5.1521477699279785
    4. ',' → logprob: -5.5271477699279785
    5. '   ' → logprob: -5.6521477699279785
    6. '
' → logprob: -6.0271477699279785
    7. 'return' → logprob: -6.1521477699279785
    8. '        
' → logprob: -7.0271477699279785
    9. '    
' → logprob: -7.6521477699279785
    10. ':
' → logprob: -8.152148246765137

Token 380: ' seat' (ID: 15512)
  Prédit: ' return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.5317827463150024
    2. 'return' → logprob: -1.7817827463150024
    3. ' for' → logprob: -1.9067827463150024
    4. '       ' → logprob: -2.906782627105713
    5. '#' → logprob: -4.156782627105713
    6. 'for' → logprob: -4.281782627105713
    7. ' #' → logprob: -4.531782627105713
    8. '   ' → logprob: -8.031783103942871
    9. '
' → logprob: -8.906783103942871
    10. '        
' → logprob: -9.656783103942871

Token 381: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -1.1257681846618652
    2. '-' → logprob: -1.6257681846618652
    3. ' at' → logprob: -1.7507681846618652
    4. 'in' → logprob: -2.2507681846618652
    5. ' -' → logprob: -3.6257681846618652
    6. 'i' → logprob: -3.7507681846618652
    7. ' n' → logprob: -3.7507681846618652
    8. ' ' → logprob: -3.8757681846618652
    9. 'n' → logprob: -4.375768184661865
    10. '0' → logprob: -4.375768184661865

Token 382: ' middle' (ID: 10006)
  Prédit: 'chairs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'chairs' → logprob: -1.051830530166626
    2. 'the' → logprob: -1.926830530166626
    3. ' chairs' → logprob: -1.926830530166626
    4. 'first' → logprob: -2.426830530166626
    5. 'next' → logprob: -2.926830530166626
    6. '-' → logprob: -3.176830530166626
    7. '#' → logprob: -3.301830530166626
    8. ' next' → logprob: -3.426830530166626
    9. ' the' → logprob: -4.176830291748047
    10. 'a' → logprob: -4.426830291748047

Token 383: ' (' (ID: 350)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.04669364541769028
    2. '
' → logprob: -4.046693801879883
    3. '(n' → logprob: -4.171693801879883
    4. ' (' → logprob: -5.546693801879883
    5. '   ' → logprob: -5.671693801879883
    6. 'return' → logprob: -6.171693801879883
    7. 'n' → logprob: -7.421693801879883
    8. '(' → logprob: -7.921693801879883
    9. ' return' → logprob: -7.921693801879883
    10. '<|end|>' → logprob: -7.921693801879883

Token 384: 'same' (ID: 48581)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.1357395648956299
    2. ' n' → logprob: -1.5107395648956299
    3. '(n' → logprob: -2.01073956489563
    4. 'n' → logprob: -2.51073956489563
    5. ' (' → logprob: -2.63573956489563
    6. ')
' → logprob: -2.76073956489563
    7. ' if' → logprob: -3.63573956489563
    8. 'return' → logprob: -4.010739326477051
    9. ' )' → logprob: -4.135739326477051
    10. ' return' → logprob: -4.385739326477051

Token 385: ' rule' (ID: 10652)
  Prédit: ' as'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' as' → logprob: -0.31612923741340637
    2. 'as' → logprob: -1.566129207611084
    3. ' line' → logprob: -3.816129207611084
    4. 'line' → logprob: -4.066129207611084
    5. ')' → logprob: -4.941129207611084
    6. ' logic' → logprob: -5.566129207611084
    7. '
' → logprob: -6.191129207611084
    8. '   ' → logprob: -6.566129207611084
    9. '```' → logprob: -6.816129207611084
    10. ')
' → logprob: -6.816129207611084

Token 386: ' as' (ID: 472)
  Prédit: ' as'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' as' → logprob: -0.1527189463376999
    2. ')' → logprob: -2.152719020843506
    3. 'as' → logprob: -3.777719020843506
    4. ')
' → logprob: -6.527719020843506
    5. '       ' → logprob: -8.652718544006348
    6. '):
' → logprob: -8.777718544006348
    7. ' if' → logprob: -8.777718544006348
    8. '   ' → logprob: -9.027718544006348
    9. '           ' → logprob: -9.277718544006348
    10. ' )' → logprob: -9.402718544006348

Token 387: ' above' (ID: 5151)
  Prédit: 'seat'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'seat' → logprob: -0.7006216645240784
    2. 'above' → logprob: -0.8256216645240784
    3. ' above' → logprob: -3.4506216049194336
    4. ' seat' → logprob: -4.325621604919434
    5. 'previous' → logprob: -5.075621604919434
    6. 'main' → logprob: -5.200621604919434
    7. 'before' → logprob: -5.700621604919434
    8. 'C' → logprob: -6.325621604919434
    9. 'else' → logprob: -6.825621604919434
    10. 'def' → logprob: -7.200621604919434

Token 388: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.8385788202285767
    2. '       ' → logprob: -0.9635788202285767
    3. ')
' → logprob: -1.7135788202285767
    4. '   ' → logprob: -5.213578701019287
    5. '):
' → logprob: -8.838579177856445
    6. '           ' → logprob: -9.713579177856445
    7. '```' → logprob: -9.713579177856445
    8. '(n' → logprob: -10.213579177856445
    9. '
' → logprob: -10.338579177856445
    10. '):' → logprob: -10.463579177856445

Token 389: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.003501715138554573
    2. '
' → logprob: -5.753501892089844
    3. '        
' → logprob: -9.003501892089844
    4. '   ' → logprob: -9.253501892089844
    5. '           ' → logprob: -10.003501892089844
    6. '  
' → logprob: -11.253501892089844
    7. ' return' → logprob: -11.253501892089844
    8. '    
' → logprob: -11.753501892089844
    9. '```' → logprob: -12.378501892089844
    10. ' 
' → logprob: -12.503501892089844

Token 390: ' #' (ID: 1069)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.5618924498558044
    2. 'if' → logprob: -0.9368924498558044
    3. '       ' → logprob: -3.436892509460449
    4. 'return' → logprob: -5.811892509460449
    5. ' return' → logprob: -6.686892509460449
    6. 'n' → logprob: -7.061892509460449
    7. ' n' → logprob: -7.561892509460449
    8. '   ' → logprob: -9.93689250946045
    9. 'mid' → logprob: -9.93689250946045
    10. '```' → logprob: -10.31189250946045

Token 391: ' But' (ID: 3072)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.9137648940086365
    2. ' if' → logprob: -1.1637649536132812
    3. 'if' → logprob: -1.2887649536132812
    4. 'return' → logprob: -5.038764953613281
    5. ' return' → logprob: -6.163764953613281
    6. '   ' → logprob: -6.538764953613281
    7. 'n' → logprob: -7.788764953613281
    8. ' n' → logprob: -8.788764953613281
    9. ' ' → logprob: -9.038764953613281
    10. '           ' → logprob: -9.288764953613281

Token 392: ' problem' (ID: 4792)
  Prédit: ' return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.6084306836128235
    2. ' n' → logprob: -1.6084306240081787
    3. 'return' → logprob: -2.4834306240081787
    4. 'n' → logprob: -3.2334306240081787
    5. ' if' → logprob: -3.2334306240081787
    6. '   ' → logprob: -3.3584306240081787
    7. ' chairs' → logprob: -3.8584306240081787
    8. '       ' → logprob: -5.358430862426758
    9. ' seats' → logprob: -5.608430862426758
    10. ' not' → logprob: -5.733430862426758

Token 393: ' states' (ID: 9407)
  Prédit: ' is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' is' → logprob: -1.5731092691421509
    2. ' continues' → logprob: -1.5731092691421509
    3. ' code' → logprob: -2.3231091499328613
    4. ':' → logprob: -2.3231091499328613
    5. '   ' → logprob: -2.9481091499328613
    6. ' not' → logprob: -3.1981091499328613
    7. ' here' → logprob: -3.3231091499328613
    8. ' ends' → logprob: -3.8231091499328613
    9. 'n' → logprob: -4.073109149932861
    10. '       ' → logprob: -4.198109149932861

Token 394: ' tries' (ID: 30519)
  Prédit: ' return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.5505731701850891
    2. ' that' → logprob: -1.8005731105804443
    3. 'return' → logprob: -2.9255731105804443
    4. ' no' → logprob: -2.9255731105804443
    5. ' the' → logprob: -3.5505731105804443
    6. ' to' → logprob: -3.9255731105804443
    7. ' we' → logprob: -4.175573348999023
    8. ' this' → logprob: -4.300573348999023
    9. ' seats' → logprob: -4.675573348999023
    10. ' n' → logprob: -5.050573348999023

Token 395: ' next' (ID: 2613)
  Prédit: ' to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' to' → logprob: -0.30916520953178406
    2. 'to' → logprob: -2.4341652393341064
    3. '       ' → logprob: -3.4341652393341064
    4. ' again' → logprob: -3.5591652393341064
    5. '   ' → logprob: -3.8091652393341064
    6. ' in' → logprob: -4.684165000915527
    7. ' next' → logprob: -4.809165000915527
    8. 'return' → logprob: -5.059165000915527
    9. ' seats' → logprob: -5.059165000915527
    10. 'again' → logprob: -5.059165000915527

Token 396: ' people's' (ID: 64126)
  Prédit: ' to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' to' → logprob: -1.0746921300888062
    2. ' available' → logprob: -1.9496921300888062
    3. ' line' → logprob: -1.9496921300888062
    4. '   ' → logprob: -2.6996922492980957
    5. 'to' → logprob: -2.9496922492980957
    6. 'line' → logprob: -3.1996922492980957
    7. 'def' → logprob: -3.4496922492980957
    8. 'available' → logprob: -3.5746922492980957
    9. ' step' → logprob: -4.074692249298096
    10. '#' → logprob: -4.699692249298096

Token 397: ' neighbors' (ID: 31655)
  Prédit: ' positions'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' positions' → logprob: -0.6516391038894653
    2. '<|end|>' → logprob: -2.026638984680176
    3. ' seats' → logprob: -2.401638984680176
    4. ' neighbors' → logprob: -2.776638984680176
    5. 'positions' → logprob: -4.026638984680176
    6. ' return' → logprob: -4.026638984680176
    7. ' seat' → logprob: -4.151638984680176
    8. 'neighbor' → logprob: -4.151638984680176
    9. 'neighbors' → logprob: -4.526638984680176
    10. '   ' → logprob: -4.526638984680176

Token 398: ' accordingly' (ID: 44041)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.023951636627316475
    2. '
' → logprob: -4.023951530456543
    3. '   ' → logprob: -5.398951530456543
    4. '<|end|>' → logprob: -8.273951530456543
    5. 'return' → logprob: -8.773951530456543
    6. '(n' → logprob: -8.773951530456543
    7. ' return' → logprob: -8.898951530456543
    8. '	' → logprob: -9.148951530456543
    9. 'n' → logprob: -9.273951530456543
    10. '        
' → logprob: -9.648951530456543

Token 399: ',' (ID: 11)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.667478621006012
    2. '<|end|>' → logprob: -0.917478621006012
    3. '
' → logprob: -2.542478561401367
    4. '<|end|>' → logprob: -5.417478561401367
    5. '   ' → logprob: -6.292478561401367
    6. '        
' → logprob: -7.167478561401367
    7. '	return' → logprob: -8.417478561401367
    8. ' return' → logprob: -8.417478561401367
    9. ' ' → logprob: -8.542478561401367
    10. 'def' → logprob: -8.792478561401367

Token 400: ' so' (ID: 813)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.748933732509613
    2. 'return' → logprob: -1.1239337921142578
    3. ' so' → logprob: -2.123933792114258
    4. ' return' → logprob: -3.248933792114258
    5. '#' → logprob: -3.748933792114258
    6. '
' → logprob: -4.498933792114258
    7. '       ' → logprob: -5.373933792114258
    8. 'so' → logprob: -6.248933792114258
    9. '```' → logprob: -6.873933792114258
    10. '    
' → logprob: -7.248933792114258

Token 401: ' should' (ID: 1757)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.15159547328948975
    2. ' return' → logprob: -2.0265955924987793
    3. '   ' → logprob: -5.651595592498779
    4. 'pass' → logprob: -5.651595592498779
    5. ' pass' → logprob: -6.901595592498779
    6. '       ' → logprob: -7.276595592498779
    7. '#' → logprob: -9.776595115661621
    8. '```' → logprob: -10.276595115661621
    9. '
' → logprob: -10.401595115661621
    10. '           ' → logprob: -11.276595115661621

Token 402: ' always' (ID: 3324)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.9088380932807922
    2. 'not' → logprob: -1.5338380336761475
    3. ' not' → logprob: -1.6588380336761475
    4. ' return' → logprob: -1.9088380336761475
    5. ' never' → logprob: -3.9088380336761475
    6. '   ' → logprob: -4.908838272094727
    7. 'n't' → logprob: -5.408838272094727
    8. 'never' → logprob: -5.408838272094727
    9. ' be' → logprob: -6.283838272094727
    10. '       ' → logprob: -6.783838272094727

Token 403: ' sit' (ID: 2353)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.0361006073653698
    2. ' return' → logprob: -4.411100387573242
    3. 'not' → logprob: -4.411100387573242
    4. 'find' → logprob: -4.661100387573242
    5. 'be' → logprob: -7.536100387573242
    6. ' not' → logprob: -7.786100387573242
    7. 'have' → logprob: -8.411100387573242
    8. 'end' → logprob: -9.036100387573242
    9. 'never' → logprob: -9.161100387573242
    10. ' find' → logprob: -9.286100387573242

Token 404: ' next' (ID: 2613)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.8781437277793884
    2. ' in' → logprob: -1.3781437873840332
    3. 'n' → logprob: -2.378143787384033
    4. 'in' → logprob: -2.878143787384033
    5. '-' → logprob: -2.878143787384033
    6. '(' → logprob: -3.503143787384033
    7. '   ' → logprob: -3.753143787384033
    8. ' ' → logprob: -4.378143787384033
    9. '```' → logprob: -4.628143787384033
    10. ' -' → logprob: -4.753143787384033

Token 405: ' to' (ID: 316)
  Prédit: ' to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' to' → logprob: -0.06266066431999207
    2. 'to' → logprob: -3.3126606941223145
    3. '   ' → logprob: -4.6876606941223145
    4. '<|end|>' → logprob: -4.8126606941223145
    5. ')' → logprob: -6.4376606941223145
    6. ' in' → logprob: -6.9376606941223145
    7. '```' → logprob: -6.9376606941223145
    8. 'def' → logprob: -7.5626606941223145
    9. '       ' → logprob: -7.8126606941223145
    10. '#' → logprob: -7.9376606941223145

Token 406: ' someone' (ID: 5693)
  Prédit: 'someone'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'someone' → logprob: -0.005209328606724739
    2. ' someone' → logprob: -6.005209445953369
    3. 'some' → logprob: -6.630209445953369
    4. 'occupied' → logprob: -7.505209445953369
    5. 'an' → logprob: -8.130208969116211
    6. 'existing' → logprob: -8.130208969116211
    7. 'Someone' → logprob: -10.005208969116211
    8. 'a' → logprob: -10.005208969116211
    9. 'A' → logprob: -10.130208969116211
    10. ' an' → logprob: -10.880208969116211

Token 407: ' if' (ID: 538)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 408: ' possible' (ID: 4149)
  Prédit: 'possible'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'possible' → logprob: -0.04314294457435608
    2. 'any' → logprob: -3.9181430339813232
    3. 'there' → logprob: -4.793142795562744
    4. ' possible' → logprob: -5.043142795562744
    5. 'available' → logprob: -6.418142795562744
    6. 'they' → logprob: -6.668142795562744
    7. 'present' → logprob: -6.793142795562744
    8. 'someone' → logprob: -7.043142795562744
    9. 'not' → logprob: -7.293142795562744
    10. 'chairs' → logprob: -7.543142795562744

Token 409: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.36207759380340576
    2. '
' → logprob: -1.3620775938034058
    3. '<|end|>' → logprob: -3.3620777130126953
    4. '   ' → logprob: -4.612077713012695
    5. '<|end|>' → logprob: -7.237077713012695
    6. ',' → logprob: -7.612077713012695
    7. '	return' → logprob: -7.862077713012695
    8. 'return' → logprob: -8.112077713012695
    9. ' return' → logprob: -8.237077713012695
    10. '        
' → logprob: -8.737077713012695

Token 410: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.13626816868782043
    2. '       ' → logprob: -2.511268138885498
    3. '<|end|>' → logprob: -3.261268138885498
    4. '
' → logprob: -5.011268138885498
    5. '<|end|>' → logprob: -7.886268138885498
    6. '	return' → logprob: -8.011268615722656
    7. '    
' → logprob: -9.136268615722656
    8. ')' → logprob: -9.386268615722656
    9. ' return' → logprob: -9.636268615722656
    10. 'return' → logprob: -10.011268615722656

Token 411: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4817926585674286
    2. '   ' → logprob: -1.106792688369751
    3. 'return' → logprob: -3.481792688369751
    4. ' return' → logprob: -3.981792688369751
    5. '	return' → logprob: -6.981792449951172
    6. '
' → logprob: -6.981792449951172
    7. '           ' → logprob: -8.856792449951172
    8. ' ' → logprob: -9.356792449951172
    9. '	' → logprob: -9.856792449951172
    10. '    
' → logprob: -10.231792449951172

Token 412: ' just' (ID: 1327)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5188294053077698
    2. 'return' → logprob: -1.393829345703125
    3. ' return' → logprob: -2.393829345703125
    4. '   ' → logprob: -2.768829345703125
    5. '	return' → logprob: -6.143829345703125
    6. '
' → logprob: -8.018829345703125
    7. ' ' → logprob: -10.143829345703125
    8. '           ' → logprob: -10.268829345703125
    9. '<|end|>' → logprob: -11.143829345703125
    10. '	' → logprob: -11.268829345703125

Token 413: ' in' (ID: 306)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.007635139394551516
    2. ' return' → logprob: -5.007635116577148
    3. '   ' → logprob: -7.007635116577148
    4. 'pass' → logprob: -11.257635116577148
    5. '```' → logprob: -15.132635116577148
    6. '           ' → logprob: -15.257635116577148
    7. ' ' → logprob: -15.507635116577148
    8. 'raise' → logprob: -15.757635116577148
    9. '  ' → logprob: -15.882635116577148
    10. '       ' → logprob: -16.00763511657715

Token 414: ' case' (ID: 1890)
  Prédit: 'case'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'case' → logprob: -0.1910625845193863
    2. 'return' → logprob: -1.816062569618225
    3. 'main' → logprob: -5.6910624504089355
    4. 'the' → logprob: -5.6910624504089355
    5. 'this' → logprob: -7.1910624504089355
    6. '   ' → logprob: -7.3160624504089355
    7. 'pass' → logprob: -7.4410624504089355
    8. ' case' → logprob: -7.4410624504089355
    9. 'code' → logprob: -7.5660624504089355
    10. ' return' → logprob: -7.9410624504089355

Token 415: ',' (ID: 11)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.06238238513469696
    2. '
' → logprob: -3.812382459640503
    3. '   ' → logprob: -4.062382221221924
    4. ' return' → logprob: -4.937382221221924
    5. 'return' → logprob: -5.187382221221924
    6. '        
' → logprob: -5.562382221221924
    7. '    
' → logprob: -7.187382221221924
    8. ' n' → logprob: -7.312382221221924
    9. ' 
' → logprob: -7.312382221221924
    10. ' if' → logprob: -7.437382221221924

Token 416: ' fallback' (ID: 66264)
  Prédit: ' return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.4503285884857178
    2. 'return' → logprob: -1.2003285884857178
    3. '       ' → logprob: -3.7003285884857178
    4. ' for' → logprob: -3.7003285884857178
    5. 'for' → logprob: -4.825328826904297
    6. ' if' → logprob: -6.700328826904297
    7. '   ' → logprob: -7.450328826904297
    8. 'if' → logprob: -7.575328826904297
    9. '#' → logprob: -7.825328826904297
    10. ' n' → logprob: -8.075328826904297

Token 417: ':
' (ID: 734)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.011134834960103035
    2. '
' → logprob: -4.761134624481201
    3. '   ' → logprob: -7.136134624481201
    4. 'n' → logprob: -7.886134624481201
    5. '        
' → logprob: -7.886134624481201
    6. 'return' → logprob: -8.26113510131836
    7. ' return' → logprob: -8.51113510131836
    8. ' if' → logprob: -9.26113510131836
    9. ' n' → logprob: -9.51113510131836
    10. '```' → logprob: -9.88613510131836

Token 418: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0023253406397998333
    2. '   ' → logprob: -6.877325534820557
    3. '
' → logprob: -7.127325534820557
    4. ' return' → logprob: -8.002325057983398
    5. 'return' → logprob: -9.877325057983398
    6. '           ' → logprob: -10.377325057983398
    7. ' n' → logprob: -10.627325057983398
    8. 'n' → logprob: -11.002325057983398
    9. '```' → logprob: -12.252325057983398
    10. '	' → logprob: -12.377325057983398

Token 419: ' if' (ID: 538)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.6455526947975159
    2. ' return' → logprob: -1.395552635192871
    3. '       ' → logprob: -2.270552635192871
    4. 'if' (adapté à ' if') → logprob: -3.520552635192871
    5. 'for' → logprob: -3.895552635192871
    6. ' if' → logprob: -4.020552635192871
    7. ' for' → logprob: -4.020552635192871
    8. ' n' → logprob: -4.145552635192871
    9. 'n' → logprob: -4.395552635192871
    10. '   ' → logprob: -5.145552635192871

Token 420: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.37110066413879395
    2. ' n' → logprob: -1.371100664138794
    3. 'False' → logprob: -3.746100664138794
    4. ' False' → logprob: -4.621100425720215
    5. 'len' → logprob: -5.121100425720215
    6. 'chairs' → logprob: -5.496100425720215
    7. ' chairs' → logprob: -5.746100425720215
    8. ' len' → logprob: -5.746100425720215
    9. 'True' → logprob: -6.121100425720215
    10. ' True' → logprob: -6.371100425720215

Token 421: ' %' (ID: 1851)
  Prédit: ' %'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' %' → logprob: -0.043209508061409
    2. '%' → logprob: -3.1682095527648926
    3. ' ' → logprob: -9.418209075927734
    4. '>' → logprob: -10.043209075927734
    5. ' >' → logprob: -10.043209075927734
    6. '   ' → logprob: -10.543209075927734
    7. ' ==' → logprob: -12.043209075927734
    8. ' >=' → logprob: -13.418209075927734
    9. '==' → logprob: -13.543209075927734
    10. ' <=' → logprob: -13.918209075927734

Token 422: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.054885104298591614
    2. ' ' → logprob: -2.929885149002075
    3. '   ' → logprob: -14.179884910583496
    4. '  ' → logprob: -14.429884910583496
    5. '```' → logprob: -14.429884910583496
    6. '6' → logprob: -15.054884910583496
    7. '=' → logprob: -16.679885864257812
    8. '     ' → logprob: -16.679885864257812
    9. ' ' → logprob: -16.742385864257812
    10. '1' → logprob: -16.742385864257812

Token 423: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0002060436672763899
    2. ' ' → logprob: -8.500205993652344
    3. '```' → logprob: -13.500205993652344
    4. '   ' → logprob: -14.500205993652344
    5. '==' → logprob: -16.125205993652344
    6. '6' → logprob: -16.125205993652344
    7. '  ' → logprob: -16.312705993652344
    8. '>' → logprob: -17.062705993652344
    9. '=' → logprob: -17.375205993652344
    10. '``' → logprob: -17.437705993652344

Token 424: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.5761081576347351
    2. ' ==' → logprob: -0.8261081576347351
    3. ' !=' → logprob: -8.9511079788208
    4. '!=' → logprob: -10.4511079788208
    5. ' ' → logprob: -12.8261079788208
    6. '2' → logprob: -12.9511079788208
    7. '```' → logprob: -13.5761079788208
    8. ':' → logprob: -14.0761079788208
    9. '=' → logprob: -14.2011079788208
    10. '   ' → logprob: -14.3261079788208

Token 425: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.057271476835012436
    2. '0' → logprob: -2.9322714805603027
    3. ' ' → logprob: -6.057271480560303
    4. '2' → logprob: -10.057271003723145
    5. '   ' → logprob: -14.432271003723145
    6. '=' → logprob: -14.494771003723145
    7. '```' → logprob: -14.557271003723145
    8. '==' → logprob: -16.24477195739746
    9. '00' → logprob: -16.30727195739746
    10. '
' → logprob: -16.61977195739746

Token 426: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.2751932740211487
    2. '2' → logprob: -1.650193214416504
    3. '0' → logprob: -3.025193214416504
    4. ' ' → logprob: -11.900193214416504
    5. '5' → logprob: -13.400193214416504
    6. '4' → logprob: -13.525193214416504
    7. '```' → logprob: -13.775193214416504
    8. '6' → logprob: -14.462693214416504
    9. '   ' → logprob: -14.837693214416504
    10. '
' → logprob: -14.962693214416504

Token 427: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.4680645167827606
    2. ':
' → logprob: -1.093064546585083
    3. '           ' → logprob: -3.343064546585083
    4. '               ' → logprob: -5.968064308166504
    5. '       ' → logprob: -7.968064308166504
    6. '==' → logprob: -9.468064308166504
    7. ':return' → logprob: -9.468064308166504
    8. ',' → logprob: -10.343064308166504
    9. ' ==' → logprob: -10.468064308166504
    10. ' and' → logprob: -10.593064308166504

Token 428: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.02836490422487259
    2. '               ' → logprob: -3.653364896774292
    3. '       ' → logprob: -6.403365135192871
    4. ' return' → logprob: -8.278365135192871
    5. 'return' → logprob: -9.153365135192871
    6. '   ' → logprob: -10.778365135192871
    7. '	       ' → logprob: -11.653365135192871
    8. ' ' → logprob: -12.403365135192871
    9. '        ' → logprob: -12.528365135192871
    10. '                   ' → logprob: -12.903365135192871

Token 429: ' return' (ID: 622)
  Prédit: ' return'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.31918492913246155
    2. 'return' (adapté à ' return') → logprob: -1.3191848993301392
    3. '           ' → logprob: -5.19418478012085
    4. '       ' → logprob: -8.319185256958008
    5. '               ' → logprob: -9.694185256958008
    6. '   ' → logprob: -10.569185256958008
    7. ' (' → logprob: -10.819185256958008
    8. ' ' → logprob: -13.694185256958008
    9. '	return' → logprob: -13.694185256958008
    10. ' ' → logprob: -13.819185256958008

Token 430: ' (' (ID: 350)
  Prédit: ' ('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.07889066636562347
    2. '(n' → logprob: -2.578890562057495
    3. '(' → logprob: -14.078890800476074
    4. 'n' → logprob: -16.328889846801758
    5. ' ' → logprob: -17.078889846801758
    6. '(N' → logprob: -17.078889846801758
    7. ' n' → logprob: -18.578889846801758
    8. '((' → logprob: -18.953889846801758
    9. ' ' → logprob: -19.203889846801758
    10. '   ' → logprob: -19.578889846801758

Token 431: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -2.176947600673884e-05
    2. '(n' → logprob: -10.750021934509277
    3. ' n' → logprob: -15.375021934509277
    4. '_n' → logprob: -19.50002098083496
    5. ' (' → logprob: -19.75002098083496
    6. '   ' → logprob: -20.25002098083496
    7. '	n' → logprob: -21.00002098083496
    8. ')n' → logprob: -21.75002098083496
    9. '[n' → logprob: -21.87502098083496
    10. '<n' → logprob: -22.00002098083496

Token 432: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.1803121715784073
    2. '+' → logprob: -1.805312156677246
    3. ' ' → logprob: -7.555312156677246
    4. ' //' → logprob: -10.680312156677246
    5. ')' → logprob: -12.305312156677246
    6. '//' → logprob: -12.680312156677246
    7. '-' → logprob: -12.805312156677246
    8. ' plus' → logprob: -12.805312156677246
    9. ' ' → logprob: -13.055312156677246
    10. ' -' → logprob: -13.180312156677246

Token 433: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.003178782993927598
    2. ' ' → logprob: -5.753178596496582
    3. '   ' → logprob: -14.003178596496582
    4. '2' → logprob: -15.253178596496582
    5. '0' → logprob: -17.5031795501709
    6. '  ' → logprob: -17.6281795501709
    7. '     ' → logprob: -18.1281795501709
    8. '3' → logprob: -18.3781795501709
    9. '
' → logprob: -18.5031795501709
    10. '```' → logprob: -18.8781795501709

Token 434: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -9.73446003627032e-05
    2. ' ' → logprob: -9.250097274780273
    3. '2' → logprob: -14.250097274780273
    4. '   ' → logprob: -14.750097274780273
    5. '3' → logprob: -15.375097274780273
    6. '0' → logprob: -16.875097274780273
    7. '  ' → logprob: -18.250097274780273
    8. '     ' → logprob: -18.750097274780273
    9. '
' → logprob: -18.875097274780273
    10. '-' → logprob: -19.375097274780273

Token 435: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0016823208425194025
    2. ')//' → logprob: -6.501682281494141
    3. ' )' → logprob: -9.12668228149414
    4. '//' → logprob: -9.75168228149414
    5. ' //' → logprob: -11.50168228149414
    6. '   ' → logprob: -13.37668228149414
    7. '()' → logprob: -14.37668228149414
    8. ' ' → logprob: -15.50168228149414
    9. '）' → logprob: -15.75168228149414
    10. '```' → logprob: -16.00168228149414

Token 436: ' //' (ID: 602)
  Prédit: ' //'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' //' → logprob: -0.3495861887931824
    2. '//' → logprob: -1.2245862483978271
    3. ')' → logprob: -6.974586009979248
    4. '   ' → logprob: -9.599586486816406
    5. ' ' → logprob: -10.099586486816406
    6. '```' → logprob: -10.349586486816406
    7. ')//' → logprob: -10.724586486816406
    8. '           ' → logprob: -10.849586486816406
    9. '       ' → logprob: -11.724586486816406
    10. '               ' → logprob: -12.474586486816406

Token 437: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0024837462697178125
    2. ' ' → logprob: -6.00248384475708
    3. '   ' → logprob: -12.127483367919922
    4. '  ' → logprob: -14.502483367919922
    5. '```' → logprob: -15.127483367919922
    6. '           ' → logprob: -15.252483367919922
    7. '       ' → logprob: -15.439983367919922
    8. '-' → logprob: -15.502483367919922
    9. '    ' → logprob: -15.502483367919922
    10. '     ' → logprob: -15.627483367919922

Token 438: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -2.176947600673884e-05
    2. ' ' → logprob: -10.750021934509277
    3. '   ' → logprob: -16.75002098083496
    4. '  ' → logprob: -17.50002098083496
    5. '1' → logprob: -17.56252098083496
    6. '0' → logprob: -18.00002098083496
    7. '3' → logprob: -18.00002098083496
    8. '=' → logprob: -18.18752098083496
    9. '２' → logprob: -18.18752098083496
    10. '`' → logprob: -18.25002098083496

Token 439: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.02637949399650097
    2. '-' → logprob: -3.6513795852661133
    3. ' ' → logprob: -10.026379585266113
    4. '           ' → logprob: -11.651379585266113
    5. '   ' → logprob: -11.901379585266113
    6. ')' → logprob: -12.151379585266113
    7. ' ' → logprob: -12.151379585266113
    8. '```' → logprob: -12.151379585266113
    9. '       ' → logprob: -14.151379585266113
    10. '  ' → logprob: -14.276379585266113

Token 440: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.246537173457909e-06
    2. ' ' → logprob: -12.375003814697266
    3. '2' → logprob: -17.500003814697266
    4. '```' → logprob: -18.000003814697266
    5. '   ' → logprob: -18.500003814697266
    6. '0' → logprob: -19.250003814697266
    7. '۱' → logprob: -19.562503814697266
    8. '
' → logprob: -19.937503814697266
    9. '１' → logprob: -20.500003814697266
    10. '<|end|>' → logprob: -20.937503814697266

Token 441: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.128163257315464e-07
    2. ' ' → logprob: -15.5
    3. '2' → logprob: -19.125
    4. '   ' → logprob: -19.25
    5. '```' → logprob: -19.5
    6. '۱' → logprob: -20.125
    7. '0' → logprob: -21.0625
    8. '１' → logprob: -21.375
    9. '
' → logprob: -21.6875
    10. '১' → logprob: -22.25

Token 442: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.04207621514797211
    2. ' else' → logprob: -4.167076110839844
    3. '<|end|>' → logprob: -4.417076110839844
    4. '
' → logprob: -4.917076110839844
    5. 'else' → logprob: -5.917076110839844
    6. '	' → logprob: -6.417076110839844
    7. '   ' → logprob: -6.667076110839844
    8. '	else' → logprob: -8.042076110839844
    9. '```' → logprob: -9.417076110839844
    10. '<|end|>' → logprob: -9.542076110839844

Token 443: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.10798675566911697
    2. 'else' → logprob: -2.6079866886138916
    3. ' else' → logprob: -3.7329866886138916
    4. '   ' → logprob: -5.482986927032471
    5. '	else' → logprob: -8.732986450195312
    6. '
' → logprob: -8.857986450195312
    7. '```' → logprob: -8.857986450195312
    8. ' ' → logprob: -10.732986450195312
    9. '	' → logprob: -10.857986450195312
    10. '<|end|>' → logprob: -10.857986450195312

Token 444: ' else' (ID: 1203)
  Prédit: ' else'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' else' → logprob: -0.6937336921691895
    2. 'else' (adapté à ' else') → logprob: -0.6937336921691895
    3. '       ' → logprob: -7.9437336921691895
    4. '   ' → logprob: -8.693733215332031
    5. '```' → logprob: -10.068733215332031
    6. '	else' → logprob: -11.193733215332031
    7. '
' → logprob: -13.193733215332031
    8. '    
' → logprob: -13.568733215332031
    9. ' 
' → logprob: -13.693733215332031
    10. 'return' → logprob: -14.443733215332031

Token 445: ':
' (ID: 734)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.037672802805900574
    2. ' return' → logprob: -3.412672758102417
    3. 'return' → logprob: -6.037672996520996
    4. ' n' → logprob: -7.537672996520996
    5. '   ' → logprob: -7.662672996520996
    6. '       ' → logprob: -8.162672996520996
    7. 'n' → logprob: -9.037672996520996
    8. ':' → logprob: -9.037672996520996
    9. '0' → logprob: -10.912672996520996
    10. '          ' → logprob: -11.162672996520996

Token 446: '           ' (ID: 352)
  Prédit: ' n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.5148206949234009
    2. '       ' → logprob: -2.0148205757141113
    3. 'n' → logprob: -2.5148205757141113
    4. '           ' → logprob: -2.5148205757141113
    5. ' return' → logprob: -2.5148205757141113
    6. '   ' → logprob: -3.8898205757141113
    7. 'return' → logprob: -5.889820575714111
    8. ' ' → logprob: -6.264820575714111
    9. '    ' → logprob: -7.514820575714111
    10. '        ' → logprob: -8.88982105255127

Token 447: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.0015165306394919753
    2. ' return' → logprob: -6.501516342163086
    3. '           ' → logprob: -11.251516342163086
    4. '       ' → logprob: -13.751516342163086
    5. '   ' → logprob: -15.876516342163086
    6. '	return' → logprob: -18.001516342163086
    7. 'n' → logprob: -18.751516342163086
    8. '{return' → logprob: -19.126516342163086
    9. '```' → logprob: -19.251516342163086
    10. '
' → logprob: -19.251516342163086

Token 448: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.6931471824645996
    2. ' n' → logprob: -0.6931471824645996
    3. '(n' → logprob: -18.568147659301758
    4. '	n' → logprob: -18.818147659301758
    5. ' ' → logprob: -19.068147659301758
    6. ' ' → logprob: -19.318147659301758
    7. '   ' → logprob: -19.818147659301758
    8. ' (' → logprob: -20.443147659301758
    9. '_n' → logprob: -22.193147659301758
    10. '0' → logprob: -23.193147659301758

Token 449: ' //' (ID: 602)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 450: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0003357006062287837
    2. ' ' → logprob: -8.000335693359375
    3. '1' → logprob: -15.875335693359375
    4. '   ' → logprob: -16.125335693359375
    5. '  ' → logprob: -17.500335693359375
    6. '0' → logprob: -17.750335693359375
    7. '۲' → logprob: -18.312835693359375
    8. '6' → logprob: -18.750335693359375
    9. '```' → logprob: -19.000335693359375
    10. '    ' → logprob: -19.562835693359375

Token 451: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -15.625
    3. '1' → logprob: -20.75
    4. '２' → logprob: -21.25
    5. '   ' → logprob: -21.625
    6. '۲' → logprob: -21.625
    7. '  ' → logprob: -22.75
    8. '```' → logprob: -24.0
    9. '0' → logprob: -24.5
    10. '
' → logprob: -24.875

Token 452: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 453: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.04131173714995384
    2. 'n' → logprob: -3.916311740875244
    3. 'if' → logprob: -4.916311740875244
    4. 'chairs' → logprob: -5.666311740875244
    5. '```' → logprob: -6.041311740875244
    6. 'rows' → logprob: -6.166311740875244
    7. 'input' → logprob: -6.541311740875244
    8. '#' → logprob: -7.291311740875244
    9. 'num' → logprob: -8.416311264038086
    10. 'lines' → logprob: -8.541311264038086

Token 454: ' def' (ID: 1056)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.006159266456961632
    2. 'if' → logprob: -6.50615930557251
    3. '    
' → logprob: -6.63115930557251
    4. 'def' (adapté à ' def') → logprob: -6.75615930557251
    5. 'n' → logprob: -7.75615930557251
    6. 'chairs' → logprob: -7.75615930557251
    7. 'import' → logprob: -8.256158828735352
    8. 'rows' → logprob: -8.881158828735352
    9. '#' → logprob: -9.131158828735352
    10. '
' → logprob: -9.131158828735352

Token 455: ' seat' (ID: 15512)
  Prédit: 'seat'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'seat' → logprob: -0.4439863860607147
    2. ' seat' → logprob: -1.068986415863037
    3. 'main' → logprob: -5.318986415863037
    4. ' main' → logprob: -5.568986415863037
    5. 'solve' → logprob: -6.693986415863037
    6. 'B' → logprob: -7.443986415863037
    7. 'D' → logprob: -7.568986415863037
    8. ' solve' → logprob: -8.443985939025879
    9. ' B' → logprob: -8.568985939025879
    10. ' D' → logprob: -8.568985939025879

Token 456: '_D' (ID: 2958)
  Prédit: '_D'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_D' → logprob: -0.0034619139041751623
    2. '_B' → logprob: -5.878461837768555
    3. 'D' → logprob: -7.503461837768555
    4. '_' → logprob: -9.878461837768555
    5. '_A' → logprob: -10.878461837768555
    6. '_C' → logprob: -11.128461837768555
    7. '_E' → logprob: -11.628461837768555
    8. 'def' → logprob: -13.003461837768555
    9. 'B' → logprob: -13.628461837768555
    10. '```' → logprob: -13.628461837768555

Token 457: '(ch' (ID: 15574)
  Prédit: '(ch'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(ch' → logprob: -7.703443770878948e-06
    2. ' (' → logprob: -12.125007629394531
    3. '(se' → logprob: -13.875007629394531
    4. '(' → logprob: -14.250007629394531
    5. '():' → logprob: -16.00000762939453
    6. '(c' → logprob: -16.50000762939453
    7. '(s' → logprob: -16.75000762939453
    8. '   ' → logprob: -16.75000762939453
    9. '[ch' → logprob: -17.37500762939453
    10. 'ch' → logprob: -17.62500762939453

Token 458: 'airs' (ID: 6498)
  Prédit: 'airs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'airs' → logprob: -1.747814349073451e-05
    2. 'air' → logprob: -12.500017166137695
    3. '_' → logprob: -12.625017166137695
    4. '   ' → logprob: -13.375017166137695
    5. 'chairs' → logprob: -13.375017166137695
    6. 'a' → logprob: -13.750017166137695
    7. 'A' → logprob: -14.000017166137695
    8. 'aires' → logprob: -14.250017166137695
    9. '```' → logprob: -14.250017166137695
    10. '(' → logprob: -14.625017166137695

Token 459: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.07892382889986038
    2. '):
' → logprob: -2.5789239406585693
    3. ')' → logprob: -10.453924179077148
    4. '):

' → logprob: -13.203924179077148
    5. '):
' → logprob: -13.703924179077148
    6. '   ' → logprob: -13.703924179077148
    7. ' ):' → logprob: -14.078924179077148
    8. ':' → logprob: -15.078924179077148
    9. ' ):
' → logprob: -17.07892417907715
    10. ' ' → logprob: -17.20392417907715

Token 460: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.30112138390541077
    2. ' n' → logprob: -1.6761213541030884
    3. 'n' → logprob: -2.801121473312378
    4. '       ' → logprob: -4.426121234893799
    5. '    ' → logprob: -9.676121711730957
    6. 'def' → logprob: -10.176121711730957
    7. ' ' → logprob: -10.426121711730957
    8. '	n' → logprob: -10.551121711730957
    9. ' def' → logprob: -10.801121711730957
    10. '(n' → logprob: -11.676121711730957

Token 461: ' n' (ID: 297)
  Prédit: ' n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.5771068334579468
    2. 'n' (adapté à ' n') → logprob: -0.8271068334579468
    3. '       ' → logprob: -7.077106952667236
    4. '   ' → logprob: -8.327106475830078
    5. 'def' → logprob: -10.202106475830078
    6. 'import' → logprob: -11.577106475830078
    7. '```' → logprob: -12.327106475830078
    8. ' def' → logprob: -12.702106475830078
    9. '	n' → logprob: -12.827106475830078
    10. '#' → logprob: -12.827106475830078

Token 462: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.1269812285900116
    2. '=' → logprob: -2.126981258392334
    3. '   ' → logprob: -10.126980781555176
    4. '       ' → logprob: -12.001980781555176
    5. ' =
' → logprob: -13.376980781555176
    6. '    ' → logprob: -13.626980781555176
    7. '=int' → logprob: -14.001980781555176
    8. 'def' → logprob: -14.126980781555176
    9. ' ' → logprob: -14.251980781555176
    10. '        ' → logprob: -14.501980781555176

Token 463: ' len' (ID: 4631)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.06197933852672577
    2. ' len' → logprob: -2.811979293823242
    3. '   ' → logprob: -11.811979293823242
    4. '4' → logprob: -14.061979293823242
    5. '(len' → logprob: -14.061979293823242
    6. 'n' → logprob: -14.561979293823242
    7. ' ' → logprob: -14.936979293823242
    8. '       ' → logprob: -15.061979293823242
    9. '[len' → logprob: -15.186979293823242
    10. '5' → logprob: -15.561979293823242

Token 464: '(ch' (ID: 15574)
  Prédit: '(ch'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(ch' → logprob: -3.128163257315464e-07
    2. '[ch' → logprob: -16.375
    3. '(se' → logprob: -16.5
    4. 'chairs' → logprob: -17.125
    5. '(' → logprob: -17.625
    6. '(
' → logprob: -18.25
    7. '(c' → logprob: -18.25
    8. '/ch' → logprob: -19.125
    9. '```' → logprob: -19.25
    10. '(code' → logprob: -19.625

Token 465: 'airs' (ID: 6498)
  Prédit: 'airs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'airs' → logprob: -0.5249240398406982
    2. '(ch' → logprob: -1.0249240398406982
    3. 'chairs' → logprob: -3.0249240398406982
    4. '(c' → logprob: -7.899924278259277
    5. '(' → logprob: -8.399924278259277
    6. 'ch' → logprob: -8.524924278259277
    7. '[ch' → logprob: -9.899924278259277
    8. 'air' → logprob: -10.024924278259277
    9. '[' → logprob: -11.399924278259277
    10. ' chairs' → logprob: -11.399924278259277

Token 466: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.3871845006942749
    2. ')' → logprob: -1.137184500694275
    3. '       ' → logprob: -8.512184143066406
    4. '   ' → logprob: -9.887184143066406
    5. '):
' → logprob: -10.012184143066406
    6. ')
' → logprob: -11.887184143066406
    7. '):' → logprob: -12.762184143066406
    8. ' )
' → logprob: -13.512184143066406
    9. ' )' → logprob: -14.012184143066406
    10. ')

' → logprob: -14.387184143066406

Token 467: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4103485941886902
    2. '   ' → logprob: -1.410348653793335
    3. ' max' → logprob: -3.160348653793335
    4. 'max' → logprob: -3.910348653793335
    5. '
' → logprob: -5.035348415374756
    6. ' best' → logprob: -5.910348415374756
    7. ' for' → logprob: -6.035348415374756
    8. ' min' → logprob: -6.160348415374756
    9. ' distances' → logprob: -6.160348415374756
    10. ' empty' → logprob: -6.410348415374756

Token 468: ' occupied' (ID: 46186)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.47335389256477356
    2. 'c' → logprob: -1.8483538627624512
    3. 'dist' → logprob: -3.223353862762451
    4. 'best' → logprob: -3.223353862762451
    5. 'left' → logprob: -3.848353862762451
    6. 'for' → logprob: -4.098353862762451
    7. ' max' → logprob: -4.223353862762451
    8. 'empty' → logprob: -4.223353862762451
    9. '#' → logprob: -4.473353862762451
    10. 'distance' → logprob: -4.723353862762451

Token 469: '_positions' (ID: 93193)
  Prédit: '_positions'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_positions' → logprob: -0.00029708960209973156
    2. '=' → logprob: -8.750297546386719
    3. ' =' → logprob: -9.625297546386719
    4. 'positions' → logprob: -10.125297546386719
    5. '_indices' → logprob: -11.250297546386719
    6. '_' → logprob: -11.500297546386719
    7. '_pos' → logprob: -12.625297546386719
    8. '=_' → logprob: -13.500297546386719
    9. 's' → logprob: -13.625297546386719
    10. 'Positions' → logprob: -14.125297546386719

Token 470: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.47409000992774963
    2. '=' → logprob: -0.9740899801254272
    3. '   ' → logprob: -11.599089622497559
    4. '       ' → logprob: -13.849089622497559
    5. ' ' → logprob: -14.099089622497559
    6. '=[]' → logprob: -14.599089622497559
    7. '=[' → logprob: -15.099089622497559
    8. ')' → logprob: -15.099089622497559
    9. ',' → logprob: -15.974089622497559
    10. '[' → logprob: -16.099090576171875

Token 471: ' [' (ID: 723)
  Prédit: ' ['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' [' → logprob: -0.20237445831298828
    2. '[i' → logprob: -1.7023744583129883
    3. '[' → logprob: -7.077374458312988
    4. '[c' → logprob: -9.327374458312988
    5. '[a' → logprob: -11.952374458312988
    6. '[int' → logprob: -12.577374458312988
    7. '[j' → logprob: -12.577374458312988
    8. ' ' → logprob: -12.827374458312988
    9. '[k' → logprob: -13.077374458312988
    10. '[s' → logprob: -13.452374458312988

Token 472: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -9.610702363715973e-06
    2. ' i' → logprob: -12.000009536743164
    3. '(i' → logprob: -13.000009536743164
    4. '   ' → logprob: -14.125009536743164
    5. '       ' → logprob: -15.875009536743164
    6. '[i' → logprob: -16.875009536743164
    7. 'c' → logprob: -17.125009536743164
    8. '           ' → logprob: -17.250009536743164
    9. '```' → logprob: -17.375009536743164
    10. ' ' → logprob: -17.625009536743164

Token 473: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.6931533813476562
    2. 'for' → logprob: -0.6931533813476562
    3. '(c' → logprob: -12.193153381347656
    4. 'c' → logprob: -14.443153381347656
    5. '	for' → logprob: -16.193153381347656
    6. '
' → logprob: -16.318153381347656
    7. '(i' → logprob: -16.568153381347656
    8. 'i' → logprob: -16.693153381347656
    9. '       ' → logprob: -16.693153381347656
    10. '   ' → logprob: -16.943153381347656

Token 474: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.16348640620708466
    2. ',' → logprob: -1.913486361503601
    3. ' i' → logprob: -5.913486480712891
    4. ',i' → logprob: -7.788486480712891
    5. 'c' → logprob: -9.16348648071289
    6. '_,' → logprob: -11.16348648071289
    7. ',c' → logprob: -11.66348648071289
    8. ' ,' → logprob: -11.91348648071289
    9. 'enumer' → logprob: -13.16348648071289
    10. ' c' → logprob: -14.41348648071289

Token 475: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0037239459343254566
    2. ',c' → logprob: -5.628724098205566
    3. 'c' → logprob: -9.503724098205566
    4. ' ,' → logprob: -10.378724098205566
    5. 'i' → logprob: -11.878724098205566
    6. ' c' → logprob: -12.878724098205566
    7. ',i' → logprob: -13.128724098205566
    8. 'in' → logprob: -13.628724098205566
    9. '_,' → logprob: -14.003724098205566
    10. 's' → logprob: -14.628724098205566

Token 476: ' c' (ID: 274)
  Prédit: ' c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' c' → logprob: -0.28115421533584595
    2. 'c' → logprob: -1.4061541557312012
    3. '(c' → logprob: -13.90615463256836
    4. ' ' → logprob: -14.15615463256836
    5. ' in' → logprob: -15.21865463256836
    6. ')c' → logprob: -15.40615463256836
    7. ',' → logprob: -15.78115463256836
    8. '   ' → logprob: -15.84365463256836
    9. ' ' → logprob: -15.84365463256836
    10. '```' → logprob: -15.96865463256836

Token 477: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.029907960444688797
    2. 'in' → logprob: -3.5299079418182373
    3. ',' → logprob: -9.029908180236816
    4. 'not' → logprob: -11.029908180236816
    5. 'c' → logprob: -11.529908180236816
    6. 'if' → logprob: -13.279908180236816
    7. ' ' → logprob: -13.404908180236816
    8. ',c' → logprob: -13.529908180236816
    9. '```' → logprob: -13.529908180236816
    10. '   ' → logprob: -13.654908180236816

Token 478: ' enumerate' (ID: 29671)
  Prédit: 'enumer'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'enumer' → logprob: -0.0015023599844425917
    2. ' enumerate' → logprob: -6.501502513885498
    3. 'enum' → logprob: -17.126502990722656
    4. 'chairs' → logprob: -18.376502990722656
    5. 'range' → logprob: -18.626502990722656
    6. 'enqueue' → logprob: -18.876502990722656
    7. '```' → logprob: -19.376502990722656
    8. '.enumer' → logprob: -19.501502990722656
    9. 'en' → logprob: -19.626502990722656
    10. 'encode' → logprob: -19.626502990722656

Token 479: '(ch' (ID: 15574)
  Prédit: '(ch'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(ch' → logprob: -0.0006354739889502525
    2. 'chairs' → logprob: -7.375635623931885
    3. ' (' → logprob: -11.875635147094727
    4. ' chairs' → logprob: -13.750635147094727
    5. 'ch' → logprob: -14.875635147094727
    6. 'chair' → logprob: -16.375635147094727
    7. '[ch' → logprob: -16.500635147094727
    8. '(se' → logprob: -16.500635147094727
    9. '   ' → logprob: -17.250635147094727
    10. '(' → logprob: -17.250635147094727

Token 480: 'airs' (ID: 6498)
  Prédit: 'airs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'airs' → logprob: -0.0017382439691573381
    2. 'chairs' → logprob: -6.37673807144165
    3. 'air' → logprob: -11.376738548278809
    4. ' chairs' → logprob: -11.501738548278809
    5. 's' → logprob: -12.876738548278809
    6. ')' → logprob: -13.126738548278809
    7. '#' → logprob: -13.501738548278809
    8. 'irs' → logprob: -13.626738548278809
    9. 'pairs' → logprob: -13.751738548278809
    10. 'ars' → logprob: -14.376738548278809

Token 481: ')' (ID: 8)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.5802202820777893
    2. ')' → logprob: -1.4552202224731445
    3. 'if' → logprob: -1.5802202224731445
    4. '       ' → logprob: -8.080220222473145
    5. '        ' → logprob: -8.205220222473145
    6. '           ' → logprob: -9.205220222473145
    7. ' )' → logprob: -9.455220222473145
    8. '   ' → logprob: -9.955220222473145
    9. 'c' → logprob: -10.830220222473145
    10. '    ' → logprob: -10.955220222473145

Token 482: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.16030089557170868
    2. 'if' → logprob: -1.910300850868225
    3. '           ' → logprob: -10.660301208496094
    4. '       ' → logprob: -10.785301208496094
    5. '        ' → logprob: -11.035301208496094
    6. '          ' → logprob: -12.160301208496094
    7. '            ' → logprob: -12.660301208496094
    8. '         ' → logprob: -13.035301208496094
    9. ' ' → logprob: -13.660301208496094
    10. '               ' → logprob: -14.035301208496094

Token 483: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.11282326281070709
    2. ' c' → logprob: -2.237823247909546
    3. '   ' → logprob: -15.612823486328125
    4. ' ' → logprob: -15.612823486328125
    5. '	c' → logprob: -15.862823486328125
    6. 'chairs' → logprob: -16.487823486328125
    7. ')c' → logprob: -16.612823486328125
    8. '    ' → logprob: -17.237823486328125
    9. '(c' → logprob: -17.362823486328125
    10. '           ' → logprob: -17.487823486328125

Token 484: ' !=' (ID: 1666)
  Prédit: ' !='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' !=' → logprob: -0.1433875560760498
    2. '!=' → logprob: -2.01838755607605
    3. '!='' → logprob: -7.268387794494629
    4. '==' → logprob: -13.268387794494629
    5. ']!=' → logprob: -13.268387794494629
    6. ')!=' → logprob: -13.518387794494629
    7. ' ' → logprob: -13.643387794494629
    8. ')' → logprob: -13.643387794494629
    9. '```' → logprob: -13.643387794494629
    10. 'c' → logprob: -14.143387794494629

Token 485: ' '#' (ID: 11284)
  Prédit: ''#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''#' → logprob: -6.301394023466855e-05
    2. ' '#' → logprob: -9.875062942504883
    3. '"#' → logprob: -11.875062942504883
    4. ''' → logprob: -12.875062942504883
    5. ' '#'' → logprob: -14.125062942504883
    6. '('#' → logprob: -14.125062942504883
    7. '#' → logprob: -15.375062942504883
    8. ''*' → logprob: -16.500062942504883
    9. ''-' → logprob: -17.625062942504883
    10. ''\' → logprob: -17.875062942504883

Token 486: '']
' (ID: 9756)
  Prédit: ']
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']
' → logprob: -0.04897747188806534
    2. ']' → logprob: -3.2989773750305176
    3. '']
' → logprob: -4.798977375030518
    4. '       ' → logprob: -7.173977375030518
    5. ']

' → logprob: -7.173977375030518
    6. '']' → logprob: -7.798977375030518
    7. ' ]
' → logprob: -8.423977851867676
    8. ']
' → logprob: -8.423977851867676
    9. '   ' → logprob: -9.048977851867676
    10. ' and' → logprob: -10.548977851867676

Token 487: '       ' (ID: 309)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.47777390480041504
    2. '       ' → logprob: -0.977773904800415
    3. '        
' → logprob: -6.227773666381836
    4. '   ' → logprob: -6.602773666381836
    5. '```' → logprob: -9.602773666381836
    6. '    
' → logprob: -9.727773666381836
    7. 'import' → logprob: -10.227773666381836
    8. '  
' → logprob: -10.602773666381836
    9. 'def' → logprob: -10.602773666381836
    10. ' if' → logprob: -10.602773666381836

Token 488: ' if' (ID: 538)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -1.0101659297943115
    2. ' if' → logprob: -2.0101659297943115
    3. '       ' → logprob: -2.3851659297943115
    4. 'c' → logprob: -2.3851659297943115
    5. ' max' → logprob: -2.6351659297943115
    6. 'if' (adapté à ' if') → logprob: -3.1351659297943115
    7. 'dist' → logprob: -3.5101659297943115
    8. '#' → logprob: -3.6351659297943115
    9. ' best' → logprob: -3.8851659297943115
    10. 'best' → logprob: -4.135166168212891

Token 489: ' not' (ID: 625)
  Prédit: 'not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'not' → logprob: -0.14847156405448914
    2. ' not' → logprob: -2.3984715938568115
    3. 'len' → logprob: -3.1484715938568115
    4. 'n' → logprob: -5.773471355438232
    5. ' len' → logprob: -7.898471355438232
    6. '   ' → logprob: -8.27347183227539
    7. 'occupied' → logprob: -8.27347183227539
    8. ' ' → logprob: -10.52347183227539
    9. '(len' → logprob: -10.64847183227539
    10. '(not' → logprob: -10.77347183227539

Token 490: ' occupied' (ID: 46186)
  Prédit: 'occupied'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'occupied' → logprob: -0.03833729028701782
    2. ' occupied' → logprob: -3.288337230682373
    3. 'chairs' → logprob: -9.288337707519531
    4. ' chairs' → logprob: -10.163337707519531
    5. 'n' → logprob: -10.538337707519531
    6. 'occup' → logprob: -10.788337707519531
    7. 'len' → logprob: -10.913337707519531
    8. '(' → logprob: -10.913337707519531
    9. '#' → logprob: -11.288337707519531
    10. ' len' → logprob: -11.913337707519531

Token 491: '_positions' (ID: 93193)
  Prédit: '_positions'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_positions' → logprob: -0.0016341203590855002
    2. 'positions' → logprob: -6.751634120941162
    3. 'occupied' → logprob: -8.626633644104004
    4. 'Positions' → logprob: -8.876633644104004
    5. ' positions' → logprob: -9.376633644104004
    6. '_' → logprob: -11.126633644104004
    7. '   ' → logprob: -11.126633644104004
    8. '       ' → logprob: -11.626633644104004
    9. ' occupied' → logprob: -12.001633644104004
    10. ' ' → logprob: -12.876633644104004

Token 492: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.25209373235702515
    2. ':' → logprob: -1.50209379196167
    3. '       ' → logprob: -9.252093315124512
    4. '           ' → logprob: -10.127093315124512
    5. ':

' → logprob: -12.002093315124512
    6. ':return' → logprob: -12.002093315124512
    7. '():
' → logprob: -12.502093315124512
    8. ':
' → logprob: -12.502093315124512
    9. '[' → logprob: -13.002093315124512
    10. ' :
' → logprob: -13.002093315124512

Token 493: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00204962445423007
    2. '       ' → logprob: -7.127049446105957
    3. ':
' → logprob: -7.502049446105957
    4. ':' → logprob: -7.752049446105957
    5. ' return' → logprob: -9.252049446105957
    6. 'return' → logprob: -9.627049446105957
    7. ' for' → logprob: -10.377049446105957
    8. '```' → logprob: -10.877049446105957
    9. ':return' → logprob: -11.377049446105957
    10. '	       ' → logprob: -12.002049446105957

Token 494: ' return' (ID: 622)
  Prédit: ' return'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.21971452236175537
    2. 'return' (adapté à ' return') → logprob: -1.7197145223617554
    3. '           ' → logprob: -4.594714641571045
    4. '       ' → logprob: -5.844714641571045
    5. ' for' → logprob: -5.969714641571045
    6. '#' → logprob: -6.719714641571045
    7. ' #' → logprob: -7.094714641571045
    8. 'for' → logprob: -8.844714164733887
    9. '               ' → logprob: -9.219714164733887
    10. '0' → logprob: -9.719714164733887

Token 495: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.11034916341304779
    2. ' ' → logprob: -2.735349178314209
    3. ' n' → logprob: -3.860349178314209
    4. 'n' → logprob: -4.360349178314209
    5. ' (' → logprob: -5.735349178314209
    6. '(n' → logprob: -6.110349178314209
    7. '(' → logprob: -8.23534870147705
    8. '1' → logprob: -11.11034870147705
    9. ' -' → logprob: -11.61034870147705
    10. '-' → logprob: -11.86034870147705

Token 496: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.40617066621780396
    2. 'n' → logprob: -1.5311706066131592
    3. '(n' → logprob: -2.156170606613159
    4. ' n' → logprob: -7.656170845031738
    5. ' (' → logprob: -7.781170845031738
    6. '(' → logprob: -7.781170845031738
    7. '-' → logprob: -8.281170845031738
    8. ' ' → logprob: -9.031170845031738
    9. '[n' → logprob: -10.906170845031738
    10. '-n' → logprob: -11.281170845031738

Token 497: ' ' (ID: 220)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.0005958048277534544
    2. '       ' → logprob: -8.375596046447754
    3. '
' → logprob: -9.000596046447754
    4. '    
' → logprob: -9.125596046447754
    5. '        
' → logprob: -10.375596046447754
    6. '  
' → logprob: -10.875596046447754
    7. '\n' → logprob: -11.125596046447754
    8. '   ' → logprob: -11.250596046447754
    9. '	
' → logprob: -11.250596046447754
    10. ' 
' → logprob: -11.250596046447754

Token 498: ' #' (ID: 1069)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.0030797903891652822
    2. '       ' → logprob: -5.878079891204834
    3. '        
' → logprob: -9.378079414367676
    4. '   ' → logprob: -9.878079414367676
    5. '    
' → logprob: -10.003079414367676
    6. '
' → logprob: -10.253079414367676
    7. ' 
' → logprob: -11.378079414367676
    8. '
        
' → logprob: -11.878079414367676
    9. '  
' → logprob: -12.128079414367676
    10. '\n' → logprob: -12.128079414367676

Token 499: ' seat' (ID: 15512)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.4531763195991516
    2. '
' → logprob: -1.3281762599945068
    3. ' 
' → logprob: -3.828176259994507
    4. ' n' → logprob: -4.328176498413086
    5. 'return' → logprob: -4.328176498413086
    6. 'n' → logprob: -4.328176498413086
    7. '1' → logprob: -4.453176498413086
    8. ' ' → logprob: -4.703176498413086
    9. ' return' → logprob: -4.953176498413086
    10. '   ' → logprob: -6.203176498413086

Token 500: ' left' (ID: 3561)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.3159647285938263
    2. ' ' → logprob: -1.315964698791504
    3. 's' → logprob: -7.190964698791504
    4. ' at' → logprob: -7.690964698791504
    5. '<|end|>' → logprob: -7.815964698791504
    6. ' in' → logprob: -8.440964698791504
    7. 'D' → logprob: -8.690964698791504
    8. '[' → logprob: -8.690964698791504
    9. ')' → logprob: -9.440964698791504
    10. '(' → logprob: -9.815964698791504

Token 501: ' end' (ID: 1268)
  Prédit: 'most'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'most' → logprob: -0.5712959170341492
    2. '0' → logprob: -0.9462959170341492
    3. '<|end|>' → logprob: -3.696295976638794
    4. 'end' → logprob: -5.571295738220215
    5. '[' → logprob: -5.571295738220215
    6. '-' → logprob: -5.821295738220215
    7. '=' → logprob: -5.821295738220215
    8. ')' → logprob: -6.071295738220215
    9. 'def' → logprob: -7.071295738220215
    10. 'Most' → logprob: -7.196295738220215

Token 502: ' if' (ID: 538)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.43923890590667725
    2. '       ' → logprob: -1.0642389059066772
    3. '<|end|>' → logprob: -4.814239025115967
    4. '
' → logprob: -7.314239025115967
    5. '        
' → logprob: -7.939239025115967
    6. '   ' → logprob: -7.939239025115967
    7. '  
' → logprob: -8.564238548278809
    8. '	' → logprob: -8.564238548278809
    9. 'n' → logprob: -9.314238548278809
    10. '<|end|>' → logprob: -9.439238548278809

Token 503: ' no' (ID: 860)
  Prédit: 'chairs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'chairs' → logprob: -1.7020641565322876
    2. 'n' → logprob: -1.8270641565322876
    3. ' not' → logprob: -1.8270641565322876
    4. ' no' → logprob: -2.077064037322998
    5. ' chairs' → logprob: -2.327064037322998
    6. 'no' → logprob: -2.702064037322998
    7. 'empty' → logprob: -2.702064037322998
    8. 'not' → logprob: -2.702064037322998
    9. ' empty' → logprob: -3.702064037322998
    10. 'len' → logprob: -4.452064037322998

Token 504: ' one' (ID: 1001)
  Prédit: 'one'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'one' → logprob: -0.06914924085140228
    2. ' one' → logprob: -3.0691492557525635
    3. 'occupied' → logprob: -4.069149017333984
    4. 'occup' → logprob: -6.194149017333984
    5. ' occupied' → logprob: -7.569149017333984
    6. ' occupants' → logprob: -8.694149017333984
    7. 'ones' → logprob: -9.569149017333984
    8. 'people' → logprob: -9.694149017333984
    9. 'body' → logprob: -10.194149017333984
    10. 'se' → logprob: -10.194149017333984

Token 505: ' seated' (ID: 77168)
  Prédit: ' seated'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' seated' → logprob: -0.7666504979133606
    2. 'occupied' → logprob: -1.5166504383087158
    3. ' else' → logprob: -2.516650438308716
    4. 'else' → logprob: -2.641650438308716
    5. '       ' → logprob: -3.016650438308716
    6. 'se' → logprob: -3.266650438308716
    7. ' is' → logprob: -3.266650438308716
    8. '   ' → logprob: -4.516650676727295
    9. 's' → logprob: -4.516650676727295
    10. ' occupied' → logprob: -5.016650676727295

Token 506: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.04083520919084549
    2. '       ' → logprob: -3.29083514213562
    3. '<|end|>' → logprob: -6.415835380554199
    4. '
' → logprob: -8.2908353805542
    5. '   ' → logprob: -8.4158353805542
    6. '        
' → logprob: -8.6658353805542
    7. '

' → logprob: -8.6658353805542
    8. '  
' → logprob: -9.2908353805542
    9. '    
' → logprob: -9.4158353805542
    10. '	' → logprob: -11.0408353805542

Token 507: '       ' (ID: 309)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.2842172384262085
    2. '       ' → logprob: -1.4092172384262085
    3. '        
' → logprob: -6.409217357635498
    4. '   ' → logprob: -7.409217357635498
    5. '    
' → logprob: -8.15921688079834
    6. '
' → logprob: -8.90921688079834
    7. '  
' → logprob: -9.15921688079834
    8. ' for' → logprob: -9.65921688079834
    9. '```' → logprob: -9.90921688079834
    10. 'for' → logprob: -10.40921688079834

Token 508: ' max' (ID: 2999)
  Prédit: ' max'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' max' → logprob: -0.6971946954727173
    2. 'max' (adapté à ' max') → logprob: -1.6971946954727173
    3. '       ' → logprob: -2.3221945762634277
    4. '#' → logprob: -2.6971945762634277
    5. ' distances' → logprob: -3.0721945762634277
    6. ' #' → logprob: -3.8221945762634277
    7. ' best' → logprob: -4.072194576263428
    8. '
' → logprob: -4.072194576263428
    9. 'dist' → logprob: -4.697194576263428
    10. '   ' → logprob: -4.947194576263428

Token 509: '_dist' (ID: 37968)
  Prédit: '_dist'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_dist' → logprob: -0.7277654409408569
    2. '_gap' → logprob: -0.9777654409408569
    3. '_distance' → logprob: -2.1027655601501465
    4. '_' → logprob: -4.4777655601501465
    5. '_space' → logprob: -6.1027655601501465
    6. 'dist' → logprob: -6.2277655601501465
    7. '_diff' → logprob: -6.7277655601501465
    8. '_pos' → logprob: -7.3527655601501465
    9. '_spacing' → logprob: -7.8527655601501465
    10. '_len' → logprob: -8.852765083312988

Token 510: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.525341808795929
    2. '=' → logprob: -1.0253417491912842
    3. ',' → logprob: -3.150341749191284
    4. '_' → logprob: -5.525341987609863
    5. 'ance' → logprob: -6.150341987609863
    6. ' ' → logprob: -8.400341987609863
    7. 'ances' → logprob: -8.400341987609863
    8. 'anced' → logprob: -9.150341987609863
    9. ' ,' → logprob: -9.900341987609863
    10. 's' → logprob: -9.900341987609863

Token 511: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.000678361626341939
    2. '0' → logprob: -8.000678062438965
    3. ' -' → logprob: -8.000678062438965
    4. ' ' → logprob: -11.875678062438965
    5. '1' → logprob: -15.375678062438965
    6. 'n' → logprob: -15.750678062438965
    7. '(' → logprob: -16.37567901611328
    8. '-n' → logprob: -16.62567901611328
    9. '(n' → logprob: -17.12567901611328
    10. ' (' → logprob: -17.12567901611328

Token 512: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.1014312133193016
    2. ' ' → logprob: -2.351431131362915
    3. ' -' → logprob: -6.851431369781494
    4. '-' → logprob: -9.351430892944336
    5. ',' → logprob: -10.976430892944336
    6. '   ' → logprob: -11.476430892944336
    7. '=' → logprob: -11.726430892944336
    8. ' n' → logprob: -11.913930892944336
    9. ' =' → logprob: -12.726430892944336
    10. ' float' → logprob: -12.851430892944336

Token 513: '
' (ID: 198)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.5953867435455322
    2. '       ' → logprob: -1.0953867435455322
    3. '
' → logprob: -2.5953867435455322
    4. ' max' → logprob: -4.845386505126953
    5. '<|end|>' → logprob: -5.095386505126953
    6. 'max' → logprob: -5.470386505126953
    7. ' ,' → logprob: -5.970386505126953
    8. 'prev' → logprob: -5.970386505126953
    9. ' for' → logprob: -6.095386505126953
    10. ' =' → logprob: -6.220386505126953

Token 514: '       ' (ID: 309)
  Prédit: ' max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' max' → logprob: -0.6364949941635132
    2. ' seat' → logprob: -2.2614951133728027
    3. '       ' → logprob: -2.5114951133728027
    4. ' candidate' → logprob: -2.7614951133728027
    5. '
' → logprob: -3.2614951133728027
    6. ' prev' → logprob: -3.3864951133728027
    7. ' last' → logprob: -3.5114951133728027
    8. ' for' → logprob: -3.8864951133728027
    9. ',' → logprob: -4.136495113372803
    10. '   ' → logprob: -4.636495113372803

Token 515: ' candidates' (ID: 18116)
  Prédit: ' seat'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' seat' → logprob: -0.9385242462158203
    2. 'pos' → logprob: -1.6885242462158203
    3. 'seat' → logprob: -1.9385242462158203
    4. 'max' → logprob: -2.1885242462158203
    5. 'best' → logprob: -3.3135242462158203
    6. ' max' → logprob: -3.4385242462158203
    7. ' best' → logprob: -3.5635242462158203
    8. ' pos' → logprob: -3.8135242462158203
    9. 'candidate' → logprob: -3.8135242462158203
    10. ' candidate' → logprob: -4.06352424621582

Token 516: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.02976333536207676
    2. '=' → logprob: -3.5297632217407227
    3. '=[]' → logprob: -11.404763221740723
    4. ',' → logprob: -13.529763221740723
    5. ' ' → logprob: -16.27976417541504
    6. 's' → logprob: -16.27976417541504
    7. '<|end|>' → logprob: -17.15476417541504
    8. '   ' → logprob: -17.27976417541504
    9. '=[]
' → logprob: -17.40476417541504
    10. '[]' → logprob: -17.65476417541504

Token 517: ' []
' (ID: 8911)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.029788212850689888
    2. ' []' → logprob: -3.5297882556915283
    3. '[]
' → logprob: -10.27978801727295
    4. '[' → logprob: -13.15478801727295
    5. ' []
' → logprob: -13.65478801727295
    6. '[]

' → logprob: -15.77978801727295
    7. '[]}' → logprob: -16.904788970947266
    8. '   ' → logprob: -17.154788970947266
    9. ' ' → logprob: -17.279788970947266
    10. ' [' → logprob: -18.529788970947266

Token 518: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.05766775831580162
    2. ' for' → logprob: -2.9326677322387695
    3. 'for' → logprob: -6.5576677322387695
    4. '   ' → logprob: -6.8076677322387695
    5. '	for' → logprob: -8.80766773223877
    6. '
' → logprob: -9.93266773223877
    7. '        
' → logprob: -11.18266773223877
    8. '	' → logprob: -11.30766773223877
    9. '    
' → logprob: -11.43266773223877
    10. '	   ' → logprob: -11.93266773223877

Token 519: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.21342520415782928
    2. 'for' (adapté à ' for') → logprob: -1.7134251594543457
    3. '       ' → logprob: -5.213425159454346
    4. ' last' → logprob: -5.588425159454346
    5. ' prev' → logprob: -6.588425159454346
    6. '   ' → logprob: -7.963425159454346
    7. 'prev' → logprob: -7.963425159454346
    8. 'last' → logprob: -8.338425636291504
    9. ' left' → logprob: -8.963425636291504
    10. ' empty' → logprob: -9.463425636291504

Token 520: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.0007272057700902224
    2. ' i' → logprob: -7.37572717666626
    3. 'pos' → logprob: -9.500727653503418
    4. 'dist' → logprob: -11.375727653503418
    5. 'd' → logprob: -12.250727653503418
    6. 'distance' → logprob: -12.625727653503418
    7. 'idx' → logprob: -13.250727653503418
    8. ' pos' → logprob: -14.125727653503418
    9. 'x' → logprob: -14.125727653503418
    10. '	i' → logprob: -14.250727653503418

Token 521: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.012813220731914043
    2. 'in' → logprob: -4.387813091278076
    3. ',' → logprob: -8.387813568115234
    4. 'n' → logprob: -10.512813568115234
    5. 'range' → logprob: -10.762813568115234
    6. ' ' → logprob: -12.137813568115234
    7. 'd' → logprob: -12.262813568115234
    8. '```' → logprob: -12.887813568115234
    9. '   ' → logprob: -13.012813568115234
    10. 's' → logprob: -13.262813568115234

Token 522: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0009117019944824278
    2. ' range' → logprob: -7.000911712646484
    3. '(range' → logprob: -16.375911712646484
    4. '	range' → logprob: -17.375911712646484
    5. 'r' → logprob: -17.875911712646484
    6. 'ran' → logprob: -18.125911712646484
    7. '```' → logprob: -18.500911712646484
    8. '   ' → logprob: -19.000911712646484
    9. 'rang' → logprob: -19.250911712646484
    10. 'in' → logprob: -19.375911712646484

Token 523: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.0026467638090252876
    2. '(' → logprob: -6.2526469230651855
    3. 'n' → logprob: -7.2526469230651855
    4. '1' → logprob: -11.877646446228027
    5. ' n' → logprob: -14.002646446228027
    6. '(len' → logprob: -14.252646446228027
    7. ' (' → logprob: -14.377646446228027
    8. '(
' → logprob: -14.752646446228027
    9. '	n' → logprob: -16.127647399902344
    10. '   ' → logprob: -16.252647399902344

Token 524: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.38692885637283325
    2. '):' → logprob: -1.1369287967681885
    3. '   ' → logprob: -11.01192855834961
    4. ' ):
' → logprob: -11.76192855834961
    5. ' ):' → logprob: -11.76192855834961
    6. '):
' → logprob: -11.76192855834961
    7. '):

' → logprob: -12.38692855834961
    8. '       ' → logprob: -12.88692855834961
    9. ')' → logprob: -13.13692855834961
    10. 'if' → logprob: -13.51192855834961

Token 525: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.026231329888105392
    2. '           ' → logprob: -3.901231288909912
    3. ' if' → logprob: -5.776231288909912
    4. '   ' → logprob: -6.901231288909912
    5. ':' → logprob: -7.526231288909912
    6. '	   ' → logprob: -8.02623176574707
    7. '	       ' → logprob: -8.52623176574707
    8. ':
' → logprob: -8.77623176574707
    9. ' ' → logprob: -9.52623176574707
    10. 'if' → logprob: -9.77623176574707

Token 526: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.013032574206590652
    2. 'if' (adapté à ' if') → logprob: -4.38803243637085
    3. '       ' → logprob: -7.76303243637085
    4. '           ' → logprob: -10.138032913208008
    5. '	if' → logprob: -10.388032913208008
    6. '   ' → logprob: -11.513032913208008
    7. ' ' → logprob: -12.138032913208008
    8. ' not' → logprob: -12.513032913208008
    9. ' for' → logprob: -13.638032913208008
    10. '	       ' → logprob: -13.763032913208008

Token 527: ' chairs' (ID: 34049)
  Prédit: ' chairs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' chairs' → logprob: -0.25194862484931946
    2. 'chairs' → logprob: -1.501948595046997
    3. 'ch' → logprob: -11.126948356628418
    4. 'chair' → logprob: -13.501948356628418
    5. ' ' → logprob: -13.626948356628418
    6. '   ' → logprob: -14.751948356628418
    7. ' ' → logprob: -15.126948356628418
    8. 'chars' → logprob: -15.126948356628418
    9. 'c' → logprob: -15.251948356628418
    10. 'chains' → logprob: -15.876948356628418

Token 528: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -3.7697225252486533e-06
    2. 'i' → logprob: -13.000003814697266
    3. ' [' → logprob: -14.000003814697266
    4. '[' → logprob: -15.375003814697266
    5. '[
' → logprob: -16.375003814697266
    6. '   ' → logprob: -16.750003814697266
    7. '
' → logprob: -17.000003814697266
    8. '```' → logprob: -17.250003814697266
    9. '(i' → logprob: -17.500003814697266
    10. 's' → logprob: -18.125003814697266

Token 529: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.19044208526611328
    2. ' ==' → logprob: -1.9404420852661133
    3. '==' → logprob: -3.6904420852661133
    4. ']==' → logprob: -5.440442085266113
    5. ' ]' → logprob: -8.315442085266113
    6. '=='' → logprob: -9.440442085266113
    7. ']=='' → logprob: -9.940442085266113
    8. ')' → logprob: -10.565442085266113
    9. '[i' → logprob: -11.315442085266113
    10. '[' → logprob: -11.440442085266113

Token 530: ' !=' (ID: 1666)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.04336293041706085
    2. '==' → logprob: -3.168362855911255
    3. '=='' → logprob: -8.043362617492676
    4. ' =='' → logprob: -11.293362617492676
    5. '==
' → logprob: -11.668362617492676
    6. '=' → logprob: -12.043362617492676
    7. ''' → logprob: -12.793362617492676
    8. ' ==
' → logprob: -13.043362617492676
    9. ' ' → logprob: -13.418362617492676
    10. ')' → logprob: -13.418362617492676

Token 531: ' '#' (ID: 11284)
  Prédit: ''#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''#' → logprob: -0.00024084746837615967
    2. ' '#' → logprob: -9.50024127960205
    3. ' '#'' → logprob: -9.62524127960205
    4. ''' → logprob: -9.75024127960205
    5. '"#' → logprob: -10.25024127960205
    6. '#' → logprob: -12.87524127960205
    7. ''A' → logprob: -13.62524127960205
    8. '('#' → logprob: -14.50024127960205
    9. ''>' → logprob: -14.87524127960205
    10. '='#' → logprob: -15.25024127960205

Token 532: '':
' (ID: 7669)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.5934388637542725
    2. ':
' → logprob: -0.8434388637542725
    3. ' and' → logprob: -4.718439102172852
    4. '):
' → logprob: -5.843439102172852
    5. '):' → logprob: -6.718439102172852
    6. '':' → logprob: -6.843439102172852
    7. '       ' → logprob: -7.093439102172852
    8. '':
' → logprob: -7.218439102172852
    9. '           ' → logprob: -7.718439102172852
    10. ')' → logprob: -7.968439102172852

Token 533: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.005919793155044317
    2. ' continue' → logprob: -6.255919933319092
    3. '           ' → logprob: -6.630919933319092
    4. ':
' → logprob: -7.130919933319092
    5. ':' → logprob: -7.380919933319092
    6. 'continue' → logprob: -8.005919456481934
    7. '
' → logprob: -8.380919456481934
    8. '<|end|>' → logprob: -9.005919456481934
    9. '	           ' → logprob: -9.130919456481934
    10. '	       ' → logprob: -9.755919456481934

Token 534: ' continue' (ID: 4901)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.6297038793563843
    2. ' continue' → logprob: -0.8797038793563843
    3. 'continue' (adapté à ' continue') → logprob: -3.129703998565674
    4. '           ' → logprob: -5.129703998565674
    5. '	continue' → logprob: -6.129703998565674
    6. '	           ' → logprob: -8.504703521728516
    7. '                   ' → logprob: -9.504703521728516
    8. ' continues' → logprob: -10.129703521728516
    9. '_continue' → logprob: -10.129703521728516
    10. '       ' → logprob: -10.754703521728516

Token 535: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.524050235748291
    2. '
' → logprob: -0.899050235748291
    3. '            
' → logprob: -8.024049758911133
    4. '       ' → logprob: -9.274049758911133
    5. ' 
' → logprob: -9.524049758911133
    6. '  
' → logprob: -9.524049758911133
    7. '<|end|>' → logprob: -9.524049758911133
    8. '    
' → logprob: -9.524049758911133
    9. ',' → logprob: -10.399049758911133
    10. '
' → logprob: -10.649049758911133

Token 536: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.03830919787287712
    2. '
' → logprob: -3.413309097290039
    3. '       ' → logprob: -6.663309097290039
    4. '            
' → logprob: -7.038309097290039
    5. '    
' → logprob: -7.538309097290039
    6. '  
' → logprob: -7.788309097290039
    7. ' 
' → logprob: -8.038309097290039
    8. '        
' → logprob: -8.413309097290039
    9. '   ' → logprob: -8.788309097290039
    10. ' for' → logprob: -9.038309097290039

Token 537: ' #' (ID: 1069)
  Prédit: 'left'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'left' → logprob: -1.0235041379928589
    2. 'dist' → logprob: -1.0235041379928589
    3. ' left' → logprob: -1.6485041379928589
    4. ' dist' → logprob: -3.8985042572021484
    5. 'distance' → logprob: -4.023504257202148
    6. '       ' → logprob: -4.148504257202148
    7. 'max' → logprob: -4.898504257202148
    8. ' max' → logprob: -5.648504257202148
    9. ' distances' → logprob: -5.648504257202148
    10. ' distance' → logprob: -5.898504257202148

Token 538: ' Distance' (ID: 53583)
  Prédit: 'left'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'left' → logprob: -0.40107572078704834
    2. 'dist' → logprob: -1.2760757207870483
    3. 'min' → logprob: -3.651075839996338
    4. ' left' → logprob: -4.526075839996338
    5. 'distance' → logprob: -5.401075839996338
    6. 'prev' → logprob: -5.776075839996338
    7. '#' → logprob: -5.776075839996338
    8. ' dist' → logprob: -6.526075839996338
    9. '           ' → logprob: -7.526075839996338
    10. 'max' → logprob: -7.651075839996338

Token 539: ' to' (ID: 316)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.1106373518705368
    2. ' =' → logprob: -2.7356374263763428
    3. 'to' → logprob: -3.7356374263763428
    4. ' to' → logprob: -4.485637187957764
    5. 'left' → logprob: -6.610637187957764
    6. '_to' → logprob: -6.985637187957764
    7. 'min' → logprob: -7.110637187957764
    8. '_left' → logprob: -7.485637187957764
    9. '       ' → logprob: -8.610637664794922
    10. 's' → logprob: -8.610637664794922

Token 540: ' nearest' (ID: 35210)
  Prédit: 'nearest'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nearest' → logprob: -0.27139538526535034
    2. 'closest' → logprob: -2.146395444869995
    3. ' nearest' → logprob: -2.771395444869995
    4. 'occupied' → logprob: -3.521395444869995
    5. 'left' → logprob: -4.271395206451416
    6. 'min' → logprob: -4.896395206451416
    7. ' closest' → logprob: -5.396395206451416
    8. 'the' → logprob: -7.146395206451416
    9. 'A' → logprob: -7.771395206451416
    10. 'next' → logprob: -7.771395206451416

Token 541: ' occupied' (ID: 46186)
  Prédit: 'occupied'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'occupied' → logprob: -0.12848937511444092
    2. ' occupied' → logprob: -2.1284894943237305
    3. ' seat' → logprob: -8.00348949432373
    4. ' person' → logprob: -8.25348949432373
    5. ' occupant' → logprob: -8.37848949432373
    6. 'seat' → logprob: -8.62848949432373
    7. 'person' → logprob: -9.00348949432373
    8. 'A' → logprob: -9.00348949432373
    9. ' seated' → logprob: -9.62848949432373
    10. ' A' → logprob: -9.75348949432373

Token 542: '
' (ID: 198)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3205336034297943
    2. '=' → logprob: -1.8205336332321167
    3. 'pos' → logprob: -2.320533514022827
    4. '_pos' → logprob: -5.070533752441406
    5. 'seat' → logprob: -5.695533752441406
    6. ' seat' → logprob: -7.070533752441406
    7. 'left' → logprob: -7.195533752441406
    8. 'position' → logprob: -7.320533752441406
    9. '_se' → logprob: -7.820533752441406
    10. '_left' → logprob: -8.070533752441406

Token 543: '           ' (ID: 352)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -1.0548527240753174
    2. 'left' → logprob: -1.3048527240753174
    3. '=' → logprob: -1.8048527240753174
    4. ' left' → logprob: -2.6798527240753174
    5. 'dist' → logprob: -3.0548527240753174
    6. '           ' → logprob: -3.4298527240753174
    7. 'min' → logprob: -3.6798527240753174
    8. ' min' → logprob: -4.804852485656738
    9. 'nearest' → logprob: -4.804852485656738
    10. '   ' → logprob: -5.179852485656738

Token 544: ' dist' (ID: 3601)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' (adapté à ' dist') → logprob: -0.7793495655059814
    2. ' min' → logprob: -1.1543495655059814
    3. ' dist' → logprob: -2.6543495655059814
    4. 'min' → logprob: -2.6543495655059814
    5. ' left' → logprob: -3.2793495655059814
    6. 'left' → logprob: -3.6543495655059814
    7. 'd' → logprob: -4.529349327087402
    8. ' d' → logprob: -5.154349327087402
    9. 'nearest' → logprob: -6.404349327087402
    10. 'distance' → logprob: -7.154349327087402

Token 545: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.3152488172054291
    2. ' =' → logprob: -1.3152488470077515
    3. 's' → logprob: -6.690248966217041
    4. '_' → logprob: -7.815248966217041
    5. 'ances' → logprob: -9.565248489379883
    6. '_left' → logprob: -9.815248489379883
    7. '_=' → logprob: -9.815248489379883
    8. ',' → logprob: -10.190248489379883
    9. 'ance' → logprob: -10.565248489379883
    10. '_min' → logprob: -10.940248489379883

Token 546: ' min' (ID: 1349)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.011893035843968391
    2. 'n' → logprob: -4.511893272399902
    3. 'float' → logprob: -7.886893272399902
    4. 'max' → logprob: -8.261893272399902
    5. ' min' → logprob: -8.511893272399902
    6. 'None' → logprob: -13.386893272399902
    7. 'abs' → logprob: -13.511893272399902
    8. '
' → logprob: -13.761893272399902
    9. '(min' → logprob: -13.761893272399902
    10. '	min' → logprob: -13.886893272399902

Token 547: '(abs' (ID: 71957)
  Prédit: '(abs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(abs' → logprob: -0.014396430924534798
    2. '([' → logprob: -4.264396667480469
    3. '(' → logprob: -8.639396667480469
    4. 'abs' → logprob: -10.639396667480469
    5. '((' → logprob: -10.889396667480469
    6. '(
' → logprob: -11.514396667480469
    7. '[' → logprob: -13.514396667480469
    8. '([(' → logprob: -13.889396667480469
    9. '([
' → logprob: -14.764396667480469
    10. '(i' → logprob: -14.764396667480469

Token 548: '(i' (ID: 3649)
  Prédit: '(i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.00027492138906382024
    2. '(pos' → logprob: -8.375274658203125
    3. '(j' → logprob: -11.125274658203125
    4. '(' → logprob: -11.375274658203125
    5. 'i' → logprob: -11.875274658203125
    6. 'pos' → logprob: -12.500274658203125
    7. '(p' → logprob: -13.125274658203125
    8. '(n' → logprob: -13.250274658203125
    9. '(x' → logprob: -13.500274658203125
    10. '(o' → logprob: -13.750274658203125

Token 549: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.07168850302696228
    2. '-' → logprob: -2.946688413619995
    3. '(pos' → logprob: -4.446688652038574
    4. '-pos' → logprob: -5.446688652038574
    5. '(p' → logprob: -9.071688652038574
    6. 'pos' → logprob: -9.696688652038574
    7. '-p' → logprob: -9.821688652038574
    8. '-o' → logprob: -9.821688652038574
    9. '(j' → logprob: -9.946688652038574
    10. '(' → logprob: -9.946688652038574

Token 550: ' pos' (ID: 1253)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pos' → logprob: -0.31421491503715515
    2. 'p' → logprob: -1.3142149448394775
    3. 'x' → logprob: -7.564214706420898
    4. 'oc' → logprob: -8.814214706420898
    5. 'occ' → logprob: -9.064214706420898
    6. 'op' → logprob: -9.314214706420898
    7. ' pos' → logprob: -10.314214706420898
    8. 'o' → logprob: -10.439214706420898
    9. 'occupied' → logprob: -11.814214706420898
    10. 'j' → logprob: -12.189214706420898

Token 551: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -9.591415437171236e-05
    2. '))' → logprob: -9.500096321105957
    3. ' )' → logprob: -11.125096321105957
    4. ')
' → logprob: -13.500096321105957
    5. 'for' → logprob: -13.625096321105957
    6. ' for' → logprob: -14.250096321105957
    7. 's' → logprob: -14.375096321105957
    8. '   ' → logprob: -14.750096321105957
    9. '')' → logprob: -15.500096321105957
    10. '```' → logprob: -15.500096321105957

Token 552: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.7090186476707458
    2. 'for' → logprob: -0.9590186476707458
    3. ')' → logprob: -2.0840187072753906
    4. '   ' → logprob: -9.83401870727539
    5. '	for' → logprob: -9.95901870727539
    6. ' )' → logprob: -10.95901870727539
    7. '           ' → logprob: -11.08401870727539
    8. ' ' → logprob: -11.08401870727539
    9. '       ' → logprob: -12.20901870727539
    10. '```' → logprob: -12.33401870727539

Token 553: ' pos' (ID: 1253)
  Prédit: ' pos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' pos' → logprob: -1.3294527530670166
    2. ' occupied' → logprob: -1.3294527530670166
    3. 'occupied' → logprob: -1.3294527530670166
    4. 'pos' → logprob: -1.5794527530670166
    5. 'occup' → logprob: -11.079452514648438
    6. ' ' → logprob: -11.829452514648438
    7. '	pos' → logprob: -11.829452514648438
    8. 'occ' → logprob: -12.704452514648438
    9. '(pos' → logprob: -12.829452514648438
    10. '[pos' → logprob: -13.704452514648438

Token 554: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.007607220206409693
    2. 'in' → logprob: -4.8826069831848145
    3. ' ' → logprob: -15.007607460021973
    4. 's' → logprob: -15.007607460021973
    5. 'occupied' → logprob: -15.257607460021973
    6. '_in' → logprob: -17.007606506347656
    7. ')' → logprob: -17.132606506347656
    8. '<|end|>' → logprob: -17.382606506347656
    9. ' occupied' → logprob: -17.757606506347656
    10. '	in' → logprob: -18.007606506347656

Token 555: ' occupied' (ID: 46186)
  Prédit: 'occupied'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'occupied' → logprob: -0.06196858361363411
    2. ' occupied' → logprob: -2.8119685649871826
    3. 'occup' → logprob: -14.561968803405762
    4. ' ' → logprob: -15.061968803405762
    5. '   ' → logprob: -16.936967849731445
    6. 'ocup' → logprob: -17.936967849731445
    7. '    ' → logprob: -18.936967849731445
    8. '  ' → logprob: -19.061967849731445
    9. '```' → logprob: -19.311967849731445
    10. 'Occupied' → logprob: -19.311967849731445

Token 556: '_positions' (ID: 93193)
  Prédit: '_positions'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_positions' → logprob: -0.00012701898231171072
    2. 'positions' → logprob: -9.000126838684082
    3. 's' → logprob: -13.375126838684082
    4. ' positions' → logprob: -14.250126838684082
    5. '_' → logprob: -14.875126838684082
    6. 'd' → logprob: -15.125126838684082
    7. 'ed' → logprob: -15.500126838684082
    8. 'Positions' → logprob: -16.1251277923584
    9. ')' → logprob: -16.7501277923584
    10. '.positions' → logprob: -16.8751277923584

Token 557: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0020000117365270853
    2. ')
' → logprob: -6.251999855041504
    3. '           ' → logprob: -9.876999855041504
    4. ' )' → logprob: -11.001999855041504
    5. '       ' → logprob: -13.501999855041504
    6. '   ' → logprob: -14.376999855041504
    7. '               ' → logprob: -15.251999855041504
    8. ')
' → logprob: -15.376999855041504
    9. ' )
' → logprob: -15.501999855041504
    10. '))' → logprob: -15.751999855041504

Token 558: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.015308180823922157
    2. '
' → logprob: -4.765308380126953
    3. '<|end|>' → logprob: -6.265308380126953
    4. '       ' → logprob: -6.515308380126953
    5. ')' → logprob: -7.390308380126953
    6. '            
' → logprob: -7.515308380126953
    7. ' 
' → logprob: -7.765308380126953
    8. '<|end|>' → logprob: -7.890308380126953
    9. '  
' → logprob: -8.015308380126953
    10. '   ' → logprob: -8.390308380126953

Token 559: ' if' (ID: 538)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0004083891399204731
    2. ' if' → logprob: -8.625408172607422
    3. '       ' → logprob: -9.500408172607422
    4. '
' → logprob: -10.000408172607422
    5. '               ' → logprob: -10.625408172607422
    6. 'if' (adapté à ' if') → logprob: -10.875408172607422
    7. ' ' → logprob: -11.125408172607422
    8. '		' → logprob: -11.375408172607422
    9. '   ' → logprob: -11.750408172607422
    10. '          ' → logprob: -12.125408172607422

Token 560: ' dist' (ID: 3601)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.16023093461990356
    2. ' dist' → logprob: -1.9102308750152588
    3. '	dist' → logprob: -12.16023063659668
    4. '(dist' → logprob: -14.41023063659668
    5. '   ' → logprob: -14.91023063659668
    6. '_dist' → logprob: -15.16023063659668
    7. ' ' → logprob: -15.41023063659668
    8. 'Dist' → logprob: -16.66023063659668
    9. 'max' → logprob: -17.41023063659668
    10. 'd' → logprob: -17.53523063659668

Token 561: ' >' (ID: 1424)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.2812761664390564
    2. ' >' → logprob: -1.4062762260437012
    3. ' ' → logprob: -9.156275749206543
    4. ' ' → logprob: -11.406275749206543
    5. '<|end|>' → logprob: -12.781275749206543
    6. '   ' → logprob: -14.031275749206543
    7. ')>' → logprob: -14.406275749206543
    8. '">' → logprob: -14.406275749206543
    9. ')' → logprob: -14.406275749206543
    10. '>

' → logprob: -14.781275749206543

Token 562: ' max' (ID: 2999)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.0009115827269852161
    2. ' max' → logprob: -7.000911712646484
    3. '           ' → logprob: -17.250911712646484
    4. '	max' → logprob: -20.250911712646484
    5. '               ' → logprob: -20.625911712646484
    6. '_max' → logprob: -20.750911712646484
    7. '
' → logprob: -21.750911712646484
    8. '=max' → logprob: -21.750911712646484
    9. '[max' → logprob: -21.875911712646484
    10. '   ' → logprob: -22.125911712646484

Token 563: '_dist' (ID: 37968)
  Prédit: '_dist'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_dist' → logprob: -2.4868770196917467e-05
    2. 'dist' → logprob: -11.125024795532227
    3. '_' → logprob: -12.250024795532227
    4. ' _' → logprob: -12.500024795532227
    5. 'Dist' → logprob: -15.250024795532227
    6. '_DIST' → logprob: -15.375024795532227
    7. '_distance' → logprob: -15.875024795532227
    8. '_diff' → logprob: -16.000024795532227
    9. '_d' → logprob: -16.000024795532227
    10. '	dist' → logprob: -16.125024795532227

Token 564: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.6332525014877319
    2. ':
' → logprob: -0.7582525014877319
    3. '):
' → logprob: -8.508252143859863
    4. '               ' → logprob: -8.633252143859863
    5. '           ' → logprob: -9.008252143859863
    6. '=' → logprob: -9.758252143859863
    7. ' :
' → logprob: -10.508252143859863
    8. '<|end|>' → logprob: -11.133252143859863
    9. '       ' → logprob: -11.258252143859863
    10. ':

' → logprob: -11.508252143859863

Token 565: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.006330686621367931
    2. ' max' → logprob: -5.756330490112305
    3. 'max' → logprob: -6.631330490112305
    4. ':
' → logprob: -7.631330490112305
    5. '           ' → logprob: -8.131330490112305
    6. '):
' → logprob: -8.506330490112305
    7. '=' → logprob: -8.506330490112305
    8. '=max' → logprob: -8.506330490112305
    9. ' candidates' → logprob: -9.256330490112305
    10. ' =' → logprob: -9.756330490112305

Token 566: ' max' (ID: 2999)
  Prédit: ' max'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' max' → logprob: -0.1329198181629181
    2. 'max' (adapté à ' max') → logprob: -2.2579197883605957
    3. '               ' → logprob: -4.132919788360596
    4. ' candidates' → logprob: -6.007919788360596
    5. '                   ' → logprob: -7.132919788360596
    6. '                ' → logprob: -7.632919788360596
    7. '	max' → logprob: -9.882920265197754
    8. '_max' → logprob: -11.882920265197754
    9. 'Candidates' → logprob: -12.007920265197754
    10. '_candidates' → logprob: -12.007920265197754

Token 567: '_dist' (ID: 37968)
  Prédit: '_dist'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_dist' → logprob: -8.602024900028482e-05
    2. 'dist' → logprob: -9.375085830688477
    3. 'Dist' → logprob: -14.625085830688477
    4. '_val' → logprob: -16.000085830688477
    5. '_token' → logprob: -16.375085830688477
    6. '_' → logprob: -16.375085830688477
    7. '	dist' → logprob: -16.375085830688477
    8. '_pos' → logprob: -16.500085830688477
    9. '_tokens' → logprob: -17.625085830688477
    10. '```' → logprob: -17.875085830688477

Token 568: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.3132627606391907
    2. ' =' → logprob: -1.313262701034546
    3. '=
' → logprob: -15.188262939453125
    4. ' =
' → logprob: -15.688262939453125
    5. '               ' → logprob: -16.188262939453125
    6. '=

' → logprob: -16.188262939453125
    7. '                ' → logprob: -16.313262939453125
    8. ')' → logprob: -16.563262939453125
    9. ',' → logprob: -17.063262939453125
    10. '＝' → logprob: -17.188262939453125

Token 569: ' dist' (ID: 3601)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.25192946195602417
    2. ' dist' → logprob: -1.501929521560669
    3. '	dist' → logprob: -15.25192928314209
    4. '(dist' → logprob: -17.251930236816406
    5. '_dist' → logprob: -17.876930236816406
    6. 'Dist' → logprob: -19.251930236816406
    7. '.dist' → logprob: -19.376930236816406
    8. '[' → logprob: -20.626930236816406
    9. '-dist' → logprob: -20.626930236816406
    10. ' ' → logprob: -20.751930236816406

Token 570: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -5.676981345459353e-06
    2. '                   ' → logprob: -13.875005722045898
    3. '           ' → logprob: -14.000005722045898
    4. '                ' → logprob: -14.125005722045898
    5. '		       ' → logprob: -14.250005722045898
    6. '              ' → logprob: -14.250005722045898
    7. '```' → logprob: -14.625005722045898
    8. ' candidates' → logprob: -15.125005722045898
    9. '_candidates' → logprob: -15.500005722045898
    10. '	           ' → logprob: -15.500005722045898

Token 571: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -4.894790981779806e-05
    2. '           ' → logprob: -10.500048637390137
    3. '```' → logprob: -12.000048637390137
    4. '                   ' → logprob: -12.250048637390137
    5. '       ' → logprob: -12.750048637390137
    6. '              ' → logprob: -13.000048637390137
    7. '                ' → logprob: -13.125048637390137
    8. '		       ' → logprob: -14.000048637390137
    9. '             ' → logprob: -14.875048637390137
    10. '
' → logprob: -15.250048637390137

Token 572: ' candidates' (ID: 18116)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.061968810856342316
    2. ' candidates' → logprob: -2.8119688034057617
    3. '               ' → logprob: -14.186968803405762
    4. '_candidates' → logprob: -15.811968803405762
    5. '           ' → logprob: -16.186969757080078
    6. 'cand' → logprob: -16.561969757080078
    7. ' c' → logprob: -16.686969757080078
    8. '[c' → logprob: -16.811969757080078
    9. ' candidats' → logprob: -17.686969757080078
    10. '                   ' → logprob: -17.811969757080078

Token 573: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.005266126710921526
    2. ' =' → logprob: -5.255266189575195
    3. '.clear' → logprob: -10.880266189575195
    4. '=[]' → logprob: -11.505266189575195
    5. '[' → logprob: -13.255266189575195
    6. '=[' → logprob: -14.505266189575195
    7. '[:]' → logprob: -14.755266189575195
    8. '.append' → logprob: -15.255266189575195
    9. '.=' → logprob: -16.005266189575195
    10. '.' → logprob: -16.380266189575195

Token 574: ' [' (ID: 723)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.00152009935118258
    2. ' [' → logprob: -6.501520156860352
    3. '[' → logprob: -11.001520156860352
    4. ' ' → logprob: -15.251520156860352
    5. '[I' → logprob: -15.376520156860352
    6. '[j' → logprob: -16.12652015686035
    7. ' ' → logprob: -16.37652015686035
    8. '   ' → logprob: -16.62652015686035
    9. '[int' → logprob: -16.75152015686035
    10. '[ind' → logprob: -16.87652015686035

Token 575: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -9.088346359931165e-07
    2. ' i' → logprob: -14.000000953674316
    3. '	i' → logprob: -18.875
    4. '   ' → logprob: -19.0
    5. '(i' → logprob: -19.125
    6. '           ' → logprob: -20.25
    7. '{i' → logprob: -20.375
    8. '[i' → logprob: -20.875
    9. '
' → logprob: -21.25
    10. '       ' → logprob: -21.25

Token 576: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.003690216923132539
    2. ']
' → logprob: -5.628690242767334
    3. '           ' → logprob: -10.128689765930176
    4. ' ]' → logprob: -10.503689765930176
    5. '               ' → logprob: -10.878689765930176
    6. '       ' → logprob: -13.753689765930176
    7. ']
' → logprob: -14.128689765930176
    8. ']

' → logprob: -14.253689765930176
    9. '                   ' → logprob: -14.753689765930176
    10. '<|end|>' → logprob: -14.878689765930176

Token 577: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00010604646377032623
    2. 'elif' → logprob: -9.750105857849121
    3. '		' → logprob: -10.750105857849121
    4. ' elif' → logprob: -11.625105857849121
    5. '	       ' → logprob: -12.125105857849121
    6. '```' → logprob: -12.625105857849121
    7. '               ' → logprob: -12.750105857849121
    8. '       ' → logprob: -13.375105857849121
    9. '<|end|>' → logprob: -13.625105857849121
    10. '          ' → logprob: -14.125105857849121

Token 578: ' elif' (ID: 9497)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.18614831566810608
    2. ' elif' → logprob: -2.3111484050750732
    3. 'elif' (adapté à ' elif') → logprob: -2.6861484050750732
    4. '       ' → logprob: -6.686148166656494
    5. '	elif' → logprob: -6.811148166656494
    6. '		' → logprob: -9.186148643493652
    7. '               ' → logprob: -10.311148643493652
    8. '   ' → logprob: -10.436148643493652
    9. '	       ' → logprob: -10.936148643493652
    10. '	' → logprob: -11.811148643493652

Token 579: ' dist' (ID: 3601)
  Prédit: ' dist'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' dist' → logprob: -0.002476016292348504
    2. 'dist' → logprob: -6.002476215362549
    3. '	dist' → logprob: -15.12747573852539
    4. '(dist' → logprob: -16.37747573852539
    5. '_dist' → logprob: -19.12747573852539
    6. ' ' → logprob: -19.50247573852539
    7. ' ' → logprob: -19.75247573852539
    8. 'Dist' → logprob: -19.87747573852539
    9. '.dist' → logprob: -20.25247573852539
    10. ' abs' → logprob: -20.62747573852539

Token 580: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.009777928702533245
    2. '==' → logprob: -4.634778022766113
    3. ' >' → logprob: -10.884778022766113
    4. '>' → logprob: -13.384778022766113
    5. ' ' → logprob: -13.759778022766113
    6. '=' → logprob: -15.509778022766113
    7. ' ' → logprob: -15.759778022766113
    8. ']==' → logprob: -17.009777069091797
    9. '[' → logprob: -17.134777069091797
    10. ' ===' → logprob: -17.384777069091797

Token 581: ' max' (ID: 2999)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.05910583585500717
    2. 'c' → logprob: -3.55910587310791
    3. ' max' → logprob: -3.55910587310791
    4. ' candidates' → logprob: -7.68410587310791
    5. ' c' → logprob: -12.80910587310791
    6. 'cand' → logprob: -14.05910587310791
    7. ' ' → logprob: -15.55910587310791
    8. 'candidate' → logprob: -15.68410587310791
    9. '	max' → logprob: -16.309104919433594
    10. '[max' → logprob: -16.434104919433594

Token 582: '_dist' (ID: 37968)
  Prédit: '_dist'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_dist' → logprob: -0.030878791585564613
    2. '_candidates' → logprob: -4.030879020690918
    3. 'c' → logprob: -4.530879020690918
    4. 'dist' → logprob: -6.655879020690918
    5. ' candidates' → logprob: -8.780879020690918
    6. '_c' → logprob: -8.905879020690918
    7. 'Dist' → logprob: -9.655879020690918
    8. '_' → logprob: -10.030879020690918
    9. '_d' → logprob: -10.780879020690918
    10. '-' → logprob: -10.780879020690918

Token 583: ':
' (ID: 734)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.2067163735628128
    2. ':
' → logprob: -1.7067164182662964
    3. ':' → logprob: -5.331716537475586
    4. '):
' → logprob: -8.581716537475586
    5. ' candidates' → logprob: -10.081716537475586
    6. '.append' → logprob: -10.331716537475586
    7. '                   ' → logprob: -10.956716537475586
    8. ' and' → logprob: -10.956716537475586
    9. '.c' → logprob: -10.956716537475586
    10. '_candidates' → logprob: -10.956716537475586

Token 584: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.4742412865161896
    2. ' candidates' → logprob: -0.9742412567138672
    3. '_candidates' → logprob: -9.224241256713867
    4. 'Candidates' → logprob: -10.474241256713867
    5. ' candidatos' → logprob: -11.849241256713867
    6. '```' → logprob: -11.974241256713867
    7. 'andidates' → logprob: -12.224241256713867
    8. ' candidats' → logprob: -12.849241256713867
    9. '	           ' → logprob: -13.099241256713867
    10. '           ' → logprob: -13.224241256713867

Token 585: ' candidates' (ID: 18116)
  Prédit: ' candidates'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' candidates' → logprob: -9.043078898685053e-05
    2. '               ' → logprob: -9.500090599060059
    3. 'Candidates' → logprob: -12.125090599060059
    4. '_candidates' → logprob: -12.500090599060059
    5. ' candidatos' → logprob: -12.875090599060059
    6. 'c' → logprob: -13.250090599060059
    7. ' candidats' → logprob: -14.000090599060059
    8. 'andidates' → logprob: -14.375090599060059
    9. ' c' → logprob: -15.750090599060059
    10. '                   ' → logprob: -15.875090599060059

Token 586: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.0006314247148111463
    2. '.' → logprob: -7.375631332397461
    3. ' .' → logprob: -12.500631332397461
    4. '.app' → logprob: -14.000631332397461
    5. '.Append' → logprob: -16.62563133239746
    6. '.push' → logprob: -16.87563133239746
    7. 'append' → logprob: -16.87563133239746
    8. '.add' → logprob: -16.87563133239746
    9. '               ' → logprob: -17.00063133239746
    10. '.extend' → logprob: -17.00063133239746

Token 587: '(i' (ID: 3649)
  Prédit: '(i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -4.320199877838604e-07
    2. '(' → logprob: -14.875
    3. ' (' → logprob: -19.625
    4. '(ii' → logprob: -20.875
    5. '(
' → logprob: -21.5
    6. 'i' → logprob: -21.875
    7. '((' → logprob: -22.75
    8. '(I' → logprob: -23.0
    9. '[i' → logprob: -23.625
    10. '(int' → logprob: -23.875

Token 588: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0004900033236481249
    2. '<|end|>' → logprob: -8.625490188598633
    3. ']' → logprob: -9.125490188598633
    4. '       ' → logprob: -9.250490188598633
    5. ')
' → logprob: -9.625490188598633
    6. '               ' → logprob: -11.500490188598633
    7. '           ' → logprob: -11.625490188598633
    8. '<|end|>' → logprob: -12.250490188598633
    9. '   ' → logprob: -12.750490188598633
    10. '])' → logprob: -12.875490188598633

Token 589: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.006325840018689632
    2. '<|end|>' → logprob: -5.631325721740723
    3. '
' → logprob: -7.381325721740723
    4. '   ' → logprob: -7.506325721740723
    5. '<|end|>' → logprob: -8.131325721740723
    6. '  
' → logprob: -8.381325721740723
    7. '               ' → logprob: -8.506325721740723
    8. ' if' → logprob: -9.006325721740723
    9. '[' → logprob: -9.256325721740723
    10. ' return' → logprob: -9.381325721740723

Token 590: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0851764902472496
    2. '
' → logprob: -2.835176467895508
    3. ' return' → logprob: -4.085176467895508
    4. ' if' → logprob: -5.710176467895508
    5. 'return' → logprob: -6.085176467895508
    6. ' candidates' → logprob: -8.210176467895508
    7. '   ' → logprob: -9.085176467895508
    8. 'if' → logprob: -10.460176467895508
    9. ' for' → logprob: -10.960176467895508
    10. '           ' → logprob: -10.960176467895508

Token 591: ' If' (ID: 1843)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.06702131032943726
    2. ' return' → logprob: -3.067021369934082
    3. 'c' → logprob: -4.192021369934082
    4. '       ' → logprob: -6.942021369934082
    5. '   ' → logprob: -7.442021369934082
    6. 'if' → logprob: -7.442021369934082
    7. '#' → logprob: -7.692021369934082
    8. ' candidates' → logprob: -7.692021369934082
    9. ' if' → logprob: -10.067021369934082
    10. 'for' → logprob: -11.442021369934082

Token 592: ' max' (ID: 2999)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.41944950819015503
    2. 'len' → logprob: -1.6694495677947998
    3. ' candidates' → logprob: -3.1694495677948
    4. ' len' → logprob: -3.1694495677948
    5. 'chairs' → logprob: -3.4194495677948
    6. 'max' → logprob: -4.169449329376221
    7. ' chairs' → logprob: -4.544449329376221
    8. ' not' → logprob: -5.544449329376221
    9. ' max' → logprob: -5.919449329376221
    10. 'not' → logprob: -6.294449329376221

Token 593: '_dist' (ID: 37968)
  Prédit: '_dist'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_dist' → logprob: -0.0015972222900018096
    2. 'c' → logprob: -6.8765974044799805
    3. 'dist' → logprob: -8.50159740447998
    4. '_candidates' → logprob: -9.12659740447998
    5. 'Dist' → logprob: -9.25159740447998
    6. '(c' → logprob: -9.25159740447998
    7. '_c' → logprob: -11.00159740447998
    8. '_' → logprob: -11.12659740447998
    9. '_distance' → logprob: -12.37659740447998
    10. 'max' → logprob: -13.00159740447998

Token 594: ' ==' (ID: 951)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -1.2719744443893433
    2. ' ==' → logprob: -1.2719744443893433
    3. '==' → logprob: -1.3969744443893433
    4. ' >' → logprob: -1.7719744443893433
    5. '>=' → logprob: -4.521974563598633
    6. ' >=' → logprob: -4.646974563598633
    7. ' <=' → logprob: -7.896974563598633
    8. ' <' → logprob: -7.896974563598633
    9. '<=' → logprob: -8.021974563598633
    10. '   ' → logprob: -9.396974563598633

Token 595: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.07224149256944656
    2. '-' → logprob: -2.8222415447235107
    3. '1' → logprob: -4.697241306304932
    4. ' ' → logprob: -7.197241306304932
    5. ' -' → logprob: -8.82224178314209
    6. 'float' → logprob: -9.44724178314209
    7. 'max' → logprob: -10.19724178314209
    8. '2' → logprob: -10.44724178314209
    9. 'None' → logprob: -10.82224178314209
    10. 'n' → logprob: -11.69724178314209

Token 596: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.10509005934000015
    2. '-' → logprob: -2.3550901412963867
    3. '1' → logprob: -5.480090141296387
    4. 'float' → logprob: -7.605090141296387
    5. 'max' → logprob: -9.480090141296387
    6. 'n' → logprob: -10.230090141296387
    7. '-n' → logprob: -10.730090141296387
    8. '2' → logprob: -11.105090141296387
    9. ' ' → logprob: -11.355090141296387
    10. ' -' → logprob: -11.480090141296387

Token 597: ',' (ID: 11)
  Prédit: ':
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.14815089106559753
    2. ' and' → logprob: -2.77315092086792
    3. ':' → logprob: -2.89815092086792
    4. '           ' → logprob: -4.89815092086792
    5. '       ' → logprob: -4.89815092086792
    6. '   ' → logprob: -6.02315092086792
    7. 'and' → logprob: -6.89815092086792
    8. ':return' → logprob: -7.27315092086792
    9. ' or' → logprob: -7.64815092086792
    10. ',' → logprob: -8.148150444030762

Token 598: ' have' (ID: 679)
  Prédit: ' return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.3271920680999756
    2. 'return' → logprob: -1.3271920680999756
    3. '#' → logprob: -4.577192306518555
    4. ' #' → logprob: -7.077192306518555
    5. '   ' → logprob: -7.202192306518555
    6. '       ' → logprob: -7.327192306518555
    7. ' if' → logprob: -7.452192306518555
    8. 'c' → logprob: -8.452192306518555
    9. 'if' → logprob: -8.827192306518555
    10. ' candidates' → logprob: -8.952192306518555

Token 599: ' to' (ID: 316)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.8932324051856995
    2. ' candidates' → logprob: -1.3932323455810547
    3. ' to' → logprob: -1.6432323455810547
    4. ' chairs' → logprob: -2.5182323455810547
    5. ' return' → logprob: -3.7682323455810547
    6. ' len' → logprob: -4.393232345581055
    7. 'chairs' → logprob: -4.518232345581055
    8. 'to' → logprob: -5.268232345581055
    9. '#' → logprob: -5.643232345581055
    10. ' seats' → logprob: -5.643232345581055

Token 600: ' sit' (ID: 2353)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.16400688886642456
    2. ' return' → logprob: -2.2890069484710693
    3. 'pick' → logprob: -3.7890069484710693
    4. 'choose' → logprob: -3.9140069484710693
    5. ' pick' → logprob: -5.41400671005249
    6. '#' → logprob: -7.03900671005249
    7. ' choose' → logprob: -7.16400671005249
    8. 'seat' → logprob: -7.66400671005249
    9. 'select' → logprob: -8.289007186889648
    10. ' seat' → logprob: -8.664007186889648

Token 601: ' adjacent' (ID: 39069)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.8529528975486755
    2. ' at' → logprob: -1.3529529571533203
    3. ' next' → logprob: -1.4779529571533203
    4. 'in' → logprob: -3.7279529571533203
    5. ' on' → logprob: -3.7279529571533203
    6. 'next' → logprob: -3.8529529571533203
    7. 'at' → logprob: -5.10295295715332
    8. 'on' → logprob: -6.35295295715332
    9. ' left' → logprob: -6.35295295715332
    10. 'left' → logprob: -6.85295295715332

Token 602: ' to' (ID: 316)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.9046642184257507
    2. ' to' → logprob: -1.7796642780303955
    3. '   ' → logprob: -2.7796642780303955
    4. '=' → logprob: -2.9046642780303955
    5. '_to' → logprob: -3.1546642780303955
    6. '[i' → logprob: -3.5296642780303955
    7. '_candidates' → logprob: -3.9046642780303955
    8. '.
' → logprob: -3.9046642780303955
    9. 'return' → logprob: -4.029664039611816
    10. '```' → logprob: -4.154664039611816

Token 603: ' someone' (ID: 5693)
  Prédit: 'occupied'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'occupied' → logprob: -0.5482212901115417
    2. 'someone' → logprob: -0.9232212901115417
    3. 'A' → logprob: -4.048221111297607
    4. 'existing' → logprob: -6.173221111297607
    5. ' someone' → logprob: -6.173221111297607
    6. 'some' → logprob: -7.173221111297607
    7. ' A' → logprob: -7.298221111297607
    8. ' occupied' → logprob: -7.673221111297607
    9. 'pos' → logprob: -8.173221588134766
    10. 'already' → logprob: -8.798221588134766

Token 604: ',' (ID: 11)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.024348219856619835
    2. '
' → logprob: -4.149348258972168
    3. ' if' → logprob: -5.899348258972168
    4. '        
' → logprob: -5.899348258972168
    5. 'return' → logprob: -7.524348258972168
    6. ' return' → logprob: -7.524348258972168
    7. '  
' → logprob: -8.024348258972168
    8. '   ' → logprob: -8.149348258972168
    9. ',' → logprob: -8.649348258972168
    10. '           ' → logprob: -8.774348258972168

Token 605: ' choose' (ID: 5655)
  Prédit: ' return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.7051562070846558
    2. 'return' → logprob: -0.7051562070846558
    3. '       ' → logprob: -5.705156326293945
    4. '#' → logprob: -5.830156326293945
    5. ' if' → logprob: -5.830156326293945
    6. ' candidates' → logprob: -6.955156326293945
    7. 'if' → logprob: -7.330156326293945
    8. '   ' → logprob: -7.830156326293945
    9. '
' → logprob: -8.580156326293945
    10. ' #' → logprob: -8.830156326293945

Token 606: ' left' (ID: 3561)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.04830127954483032
    2. ' candidates' → logprob: -3.1733012199401855
    3. 'min' → logprob: -5.7983012199401855
    4. ' min' → logprob: -6.5483012199401855
    5. ' the' → logprob: -7.9233012199401855
    6. 'the' → logprob: -8.548301696777344
    7. ' left' → logprob: -9.173301696777344
    8. 'left' → logprob: -9.298301696777344
    9. ' c' → logprob: -9.923301696777344
    10. ' smallest' → logprob: -12.423301696777344

Token 607: 'most' (ID: 5309)
  Prédit: 'most'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'most' → logprob: -0.006293614394962788
    2. 'c' → logprob: -5.131293773651123
    3. '_candidates' → logprob: -8.631293296813965
    4. 'm' → logprob: -9.756293296813965
    5. ' candidates' → logprob: -10.131293296813965
    6. '_m' → logprob: -10.506293296813965
    7. '-most' → logprob: -11.506293296813965
    8. 'Most' → logprob: -11.506293296813965
    9. '```' → logprob: -11.631293296813965
    10. '[' → logprob: -12.131293296813965

Token 608: ' among' (ID: 6200)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3908766508102417
    2. ' if' → logprob: -2.3908767700195312
    3. ' return' → logprob: -2.7658767700195312
    4. 'return' → logprob: -3.0158767700195312
    5. '               ' → logprob: -3.1408767700195312
    6. '           ' → logprob: -3.8908767700195312
    7. 'if' → logprob: -4.265876770019531
    8. ' candidates' → logprob: -4.515876770019531
    9. '
' → logprob: -4.640876770019531
    10. '```' → logprob: -5.265876770019531

Token 609: ' them' (ID: 1373)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.0005573204252868891
    2. ' candidates' → logprob: -7.6255574226379395
    3. 'them' → logprob: -10.500556945800781
    4. 'those' → logprob: -10.500556945800781
    5. 'the' → logprob: -11.375556945800781
    6. '[c' → logprob: -13.500556945800781
    7. ' those' → logprob: -15.500556945800781
    8. 'candidate' → logprob: -15.500556945800781
    9. '_candidates' → logprob: -15.500556945800781
    10. 'these' → logprob: -15.500556945800781

Token 610: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.007237194571644068
    2. '
' → logprob: -6.257236957550049
    3. ' if' → logprob: -6.257236957550049
    4. 'if' → logprob: -6.632236957550049
    5. 'return' → logprob: -6.757236957550049
    6. '   ' → logprob: -7.632236957550049
    7. ' return' → logprob: -8.757237434387207
    8. '           ' → logprob: -9.257237434387207
    9. '        
' → logprob: -9.507237434387207
    10. '```' → logprob: -10.632237434387207

Token 611: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.022620994597673416
    2. 'return' → logprob: -4.522621154785156
    3. ' return' → logprob: -5.147621154785156
    4. '   ' → logprob: -5.647621154785156
    5. ' if' → logprob: -6.397621154785156
    6. 'if' → logprob: -8.022621154785156
    7. '
' → logprob: -9.022621154785156
    8. '           ' → logprob: -10.772621154785156
    9. '```' → logprob: -10.897621154785156
    10. '        
' → logprob: -12.272621154785156

Token 612: ' return' (ID: 622)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3593781888484955
    2. ' return' → logprob: -1.8593782186508179
    3. ' if' → logprob: -2.6093780994415283
    4. 'return' (adapté à ' return') → logprob: -2.8593780994415283
    5. 'if' → logprob: -4.734378337860107
    6. '   ' → logprob: -5.234378337860107
    7. ' candidates' → logprob: -6.984378337860107
    8. '           ' → logprob: -9.48437786102295
    9. '```' → logprob: -10.23437786102295
    10. '
' → logprob: -10.73437786102295

Token 613: ' candidates' (ID: 18116)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.4752827286720276
    2. ' candidates' → logprob: -0.9752827286720276
    3. 'min' → logprob: -7.225282669067383
    4. ' min' → logprob: -7.975282669067383
    5. ' c' → logprob: -8.975282669067383
    6. 'sorted' → logprob: -13.100282669067383
    7. ' candidats' → logprob: -13.850282669067383
    8. '_candidates' → logprob: -14.475282669067383
    9. 'cand' → logprob: -14.725282669067383
    10. 'candidate' → logprob: -14.725282669067383

Token 614: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -5.5577775128767826e-06
    2. ' [' → logprob: -13.000005722045898
    3. '```' → logprob: -13.750005722045898
    4. '0' → logprob: -14.000005722045898
    5. '[-' → logprob: -14.500005722045898
    6. '   ' → logprob: -15.000005722045898
    7. '[min' → logprob: -15.125005722045898
    8. '\[' → logprob: -16.8750057220459
    9. '][' → logprob: -17.1250057220459
    10. ')[' → logprob: -17.2500057220459

Token 615: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -8.65707261255011e-06
    2. '-' → logprob: -12.000008583068848
    3. ' ' → logprob: -13.000008583068848
    4. '   ' → logprob: -17.250009536743164
    5. '```' → logprob: -18.187509536743164
    6. '
' → logprob: -18.250009536743164
    7. ' -' → logprob: -18.375009536743164
    8. '[' → logprob: -18.375009536743164
    9. '1' → logprob: -18.437509536743164
    10. '۰' → logprob: -18.562509536743164

Token 616: ']

' (ID: 3144)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 617: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.019488152116537094
    2. 'if' → logprob: -4.894488334655762
    3. '    
' → logprob: -5.519488334655762
    4. 'def' → logprob: -5.894488334655762
    5. 'n' → logprob: -6.519488334655762
    6. '```' → logprob: -7.144488334655762
    7. 'chairs' → logprob: -7.269488334655762
    8. 'input' → logprob: -7.394488334655762
    9. 'print' → logprob: -8.144488334655762
    10. 'import' → logprob: -8.144488334655762

Token 618: ' input' (ID: 3422)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.04977399855852127
    2. 'chairs' → logprob: -3.299773931503296
    3. 'chair' → logprob: -6.049774169921875
    4. 'def' → logprob: -6.049774169921875
    5. 'line' → logprob: -7.174774169921875
    6. 'if' → logprob: -7.174774169921875
    7. 'ch' → logprob: -7.174774169921875
    8. '    
' → logprob: -7.299774169921875
    9. 'n' → logprob: -7.299774169921875
    10. 'import' → logprob: -7.924774169921875

Token 619: ' =' (ID: 314)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.3786441683769226
    2. '_line' → logprob: -1.2536442279815674
    3. '_data' → logprob: -3.7536442279815674
    4. '_lines' → logprob: -6.378643989562988
    5. '_' → logprob: -6.753643989562988
    6. '_str' → logprob: -6.878643989562988
    7. '().' → logprob: -6.878643989562988
    8. '_text' → logprob: -7.503643989562988
    9. '(' → logprob: -8.378643989562988
    10. '=' → logprob: -9.003643989562988

Token 620: ' sys' (ID: 12228)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.6047828197479248
    2. ' input' → logprob: -1.3547828197479248
    3. ' sys' → logprob: -2.104782819747925
    4. 'sys' → logprob: -2.604782819747925
    5. 'open' → logprob: -11.979783058166504
    6. '__' → logprob: -13.604783058166504
    7. ' open' → logprob: -13.604783058166504
    8. ' ' → logprob: -14.479783058166504
    9. '=input' → logprob: -14.604783058166504
    10. '	input' → logprob: -14.729783058166504

Token 621: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -0.5025555491447449
    2. '.' → logprob: -1.2525556087493896
    3. '.readline' → logprob: -2.2525556087493896
    4. ' .' → logprob: -6.6275553703308105
    5. '.argv' → logprob: -6.8775553703308105
    6. '.stdout' → logprob: -7.3775553703308105
    7. 'stdin' → logprob: -8.627555847167969
    8. '.Read' → logprob: -8.627555847167969
    9. '._' → logprob: -8.877555847167969
    10. '.read' → logprob: -9.002555847167969

Token 622: '.readline' (ID: 74673)
  Prédit: '.readline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -0.001817386015318334
    2. '.' → logprob: -6.626817226409912
    3. '.readlines' → logprob: -8.12681770324707
    4. '.read' → logprob: -8.62681770324707
    5. 'read' → logprob: -12.12681770324707
    6. '.stdin' → logprob: -12.75181770324707
    7. ' .' → logprob: -12.87681770324707
    8. '().' → logprob: -13.87681770324707
    9. '<|end|>' → logprob: -14.37681770324707
    10. '   ' → logprob: -14.50181770324707

Token 623: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.11843278259038925
    2. '()' → logprob: -2.3684327602386475
    3. '()
' → logprob: -5.493432998657227
    4. '().' → logprob: -5.618432998657227
    5. '    
' → logprob: -5.993432998657227
    6. 'chairs' → logprob: -6.118432998657227
    7. '
' → logprob: -6.243432998657227
    8. 'line' → logprob: -6.993432998657227
    9. '(' → logprob: -7.743432998657227
    10. '(line' → logprob: -8.118432998657227

Token 624: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.010289790108799934
    2. '    
' → logprob: -4.885289669036865
    3. 'chairs' → logprob: -6.885289669036865
    4. 'n' → logprob: -7.135289669036865
    5. '
' → logprob: -7.635289669036865
    6. '```' → logprob: -9.385290145874023
    7. 'line' → logprob: -9.885290145874023
    8. ' chairs' → logprob: -10.010290145874023
    9. 'def' → logprob: -10.885290145874023
    10. ' line' → logprob: -11.010290145874023

Token 625: ' while' (ID: 2049)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.11989736557006836
    2. 'chairs' → logprob: -3.1198973655700684
    3. ' line' → logprob: -3.6198973655700684
    4. 'line' → logprob: -4.494897365570068
    5. '    
' → logprob: -4.619897365570068
    6. 'n' → logprob: -5.119897365570068
    7. '
' → logprob: -5.119897365570068
    8. ' chairs' → logprob: -5.369897365570068
    9. '```' → logprob: -6.994897365570068
    10. 'while' (adapté à ' while') → logprob: -7.119897365570068

Token 626: ' True' (ID: 6432)
  Prédit: ' True'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' True' → logprob: -0.00467896880581975
    2. 'True' → logprob: -5.379679203033447
    3. ' ' → logprob: -10.629678726196289
    4. '(True' → logprob: -10.754678726196289
    5. ' not' → logprob: -11.504678726196289
    6. '    ' → logprob: -13.379678726196289
    7. ' (' → logprob: -15.129678726196289
    8. ' len' → logprob: -15.129678726196289
    9. '1' → logprob: -15.379678726196289
    10. ' ' → logprob: -15.629678726196289

Token 627: ':
' (ID: 734)
  Prédit: '():
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():
' → logprob: -0.37756162881851196
    2. '       ' → logprob: -2.252561569213867
    3. '():' → logprob: -2.377561569213867
    4. ':
' → logprob: -2.877561569213867
    5. ':' → logprob: -3.627561569213867
    6. '   ' → logprob: -4.502561569213867
    7. '()' → logprob: -4.752561569213867
    8. ',' → logprob: -5.877561569213867
    9. '().' → logprob: -6.127561569213867
    10. ' (' → logprob: -6.627561569213867

Token 628: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0009832700015977025
    2. ' line' → logprob: -7.125983238220215
    3. '   ' → logprob: -9.750983238220215
    4. 'line' → logprob: -9.875983238220215
    5. '        
' → logprob: -11.125983238220215
    6. '<|end|>' → logprob: -11.500983238220215
    7. '(line' → logprob: -12.125983238220215
    8. '    
' → logprob: -12.375983238220215
    9. '	   ' → logprob: -12.625983238220215
    10. '           ' → logprob: -12.625983238220215

Token 629: ' line' (ID: 2543)
  Prédit: ' line'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' line' → logprob: -0.13023227453231812
    2. 'line' (adapté à ' line') → logprob: -2.130232334136963
    3. '   ' → logprob: -6.630232334136963
    4. 's' → logprob: -7.005232334136963
    5. ' s' → logprob: -7.255232334136963
    6. 'l' → logprob: -8.755231857299805
    7. 'n' → logprob: -9.505231857299805
    8. ' l' → logprob: -9.880231857299805
    9. ' n' → logprob: -11.005231857299805
    10. 'chairs' → logprob: -11.130231857299805

Token 630: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.47409185767173767
    2. '=' → logprob: -0.9740918874740601
    3. '=line' → logprob: -11.349091529846191
    4. '()' → logprob: -13.599091529846191
    5. '(' → logprob: -14.849091529846191
    6. '.' → logprob: -15.599091529846191
    7. 's' → logprob: -15.599091529846191
    8. '   ' → logprob: -15.849091529846191
    9. '.strip' → logprob: -15.849091529846191
    10. '=input' → logprob: -15.974091529846191

Token 631: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.07926175743341446
    2. ' input' → logprob: -2.5792617797851562
    3. 'sys' → logprob: -8.079261779785156
    4. ' sys' → logprob: -9.704261779785156
    5. '   ' → logprob: -14.579261779785156
    6. '(input' → logprob: -14.954261779785156
    7. '=input' → logprob: -16.329261779785156
    8. '<input' → logprob: -16.829261779785156
    9. '_input' → logprob: -17.079261779785156
    10. 'import' → logprob: -17.329261779785156

Token 632: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.3915667235851288
    2. '().' → logprob: -1.1415667533874512
    3. '()
' → logprob: -5.391566753387451
    4. '.strip' → logprob: -10.016566276550293
    5. '()

' → logprob: -11.141566276550293
    6. 'rstrip' → logprob: -11.141566276550293
    7. '.rstrip' → logprob: -11.141566276550293
    8. 'strip' → logprob: -11.641566276550293
    9. 'line' → logprob: -11.766566276550293
    10. '()
' → logprob: -11.891566276550293

Token 633: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.004865242168307304
    2. '<|end|>' → logprob: -6.1298651695251465
    3. '.strip' → logprob: -6.3798651695251465
    4. '.rstrip' → logprob: -8.504865646362305
    5. ' if' → logprob: -8.504865646362305
    6. '        
' → logprob: -9.129865646362305
    7. '=' → logprob: -9.379865646362305
    8. ' =' → logprob: -9.504865646362305
    9. '<|end|>' → logprob: -9.629865646362305
    10. '   ' → logprob: -10.004865646362305

Token 634: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.526385486125946
    2. 'if' (adapté à ' if') → logprob: -1.5263855457305908
    3. '       ' → logprob: -1.6513855457305908
    4. '   ' → logprob: -9.901385307312012
    5. '	if' → logprob: -9.901385307312012
    6. '<|end|>' → logprob: -11.026385307312012
    7. 'If' → logprob: -11.276385307312012
    8. ',' → logprob: -12.526385307312012
    9. 'break' → logprob: -12.651385307312012
    10. ' ' → logprob: -12.776385307312012

Token 635: ' not' (ID: 625)
  Prédit: ' not'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.0311737097799778
    2. 'not' → logprob: -3.5311737060546875
    3. ' line' → logprob: -6.7811737060546875
    4. 'line' → logprob: -8.156173706054688
    5. '#line' → logprob: -15.656173706054688
    6. '(line' → logprob: -17.406173706054688
    7. ' ' → logprob: -17.531173706054688
    8. '	not' → logprob: -17.906173706054688
    9. '(not' → logprob: -18.281173706054688
    10. '[line' → logprob: -18.531173706054688

Token 636: ' line' (ID: 2543)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'line' → logprob: -0.6931478977203369
    2. ' line' → logprob: -0.6931478977203369
    3. '(line' → logprob: -14.443147659301758
    4. '#line' → logprob: -15.943147659301758
    5. '[line' → logprob: -17.443147659301758
    6. '=line' → logprob: -17.443147659301758
    7. '	line' → logprob: -17.693147659301758
    8. ' ' → logprob: -18.943147659301758
    9. 'Line' → logprob: -20.818147659301758
    10. ' ' → logprob: -21.193147659301758

Token 637: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.0177607499063015
    2. '.strip' → logprob: -4.642760753631592
    3. ':' → logprob: -4.892760753631592
    4. '.' → logprob: -8.642760276794434
    5. '.rstrip' → logprob: -8.892760276794434
    6. '.startswith' → logprob: -10.017760276794434
    7. ' or' → logprob: -10.017760276794434
    8. ':return' → logprob: -11.017760276794434
    9. '.readline' → logprob: -11.642760276794434
    10. ' :
' → logprob: -11.642760276794434

Token 638: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.011223952285945415
    2. '       ' → logprob: -4.511223793029785
    3. '   ' → logprob: -9.136223793029785
    4. ':' → logprob: -11.136223793029785
    5. '<|end|>' → logprob: -11.761223793029785
    6. '               ' → logprob: -12.011223793029785
    7. ',' → logprob: -12.011223793029785
    8. '          ' → logprob: -12.261223793029785
    9. '	   ' → logprob: -12.636223793029785
    10. '	       ' → logprob: -13.136223793029785

Token 639: ' break' (ID: 2338)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.05812519043684006
    2. '       ' → logprob: -2.9331252574920654
    3. ' break' → logprob: -6.433125019073486
    4. '   ' → logprob: -6.808125019073486
    5. 'break' (adapté à ' break') → logprob: -8.183125495910645
    6. ' ' → logprob: -9.058125495910645
    7. '               ' → logprob: -9.433125495910645
    8. '	break' → logprob: -10.808125495910645
    9. '		' → logprob: -11.808125495910645
    10. '
' → logprob: -12.808125495910645

Token 640: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.007927537895739079
    2. '
' → logprob: -5.257927417755127
    3. '        
' → logprob: -6.382927417755127
    4. '   ' → logprob: -7.757927417755127
    5. '<|end|>' → logprob: -8.007927894592285
    6. '    
' → logprob: -8.632927894592285
    7. '  
' → logprob: -11.382927894592285
    8. ',' → logprob: -11.507927894592285
    9. '           ' → logprob: -11.632927894592285
    10. '<|end|>' → logprob: -12.007927894592285

Token 641: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.007016333751380444
    2. '   ' → logprob: -5.382016181945801
    3. '        
' → logprob: -6.632016181945801
    4. '<|end|>' → logprob: -7.382016181945801
    5. '    
' → logprob: -8.2570161819458
    6. '
' → logprob: -9.0070161819458
    7. '           ' → logprob: -11.1320161819458
    8. ',' → logprob: -11.2570161819458
    9. '```' → logprob: -11.3820161819458
    10. '<|end|>' → logprob: -11.7570161819458

Token 642: ' line' (ID: 2543)
  Prédit: ' n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.4272179901599884
    2. '       ' → logprob: -1.802217960357666
    3. ' seats' → logprob: -2.302217960357666
    4. ' chairs' → logprob: -3.552217960357666
    5. 'n' → logprob: -4.052217960357666
    6. ' line' → logprob: -4.177217960357666
    7. '   ' → logprob: -4.927217960357666
    8. ' s' → logprob: -5.552217960357666
    9. ' seating' → logprob: -6.177217960357666
    10. 'chairs' → logprob: -6.427217960357666

Token 643: '=line' (ID: 192488)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.26949775218963623
    2. ' =' → logprob: -2.019497871398926
    3. '=line' → logprob: -2.269497871398926
    4. '.strip' → logprob: -9.144497871398926
    5. 'rstrip' → logprob: -11.394497871398926
    6. '_strip' → logprob: -11.644497871398926
    7. '.rstrip' → logprob: -11.644497871398926
    8. '=str' → logprob: -11.644497871398926
    9. 'strip' → logprob: -13.019497871398926
    10. '=input' → logprob: -13.894497871398926

Token 644: '.strip' (ID: 40613)
  Prédit: '.strip'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.strip' → logprob: -0.038048721849918365
    2. '.rstrip' → logprob: -3.28804874420166
    3. 'rstrip' → logprob: -13.03804874420166
    4. '().' → logprob: -13.16304874420166
    5. 'strip' → logprob: -13.28804874420166
    6. '.' → logprob: -14.66304874420166
    7. '.chomp' → logprob: -15.16304874420166
    8. '[:-' → logprob: -15.28804874420166
    9. '_strip' → logprob: -15.41304874420166
    10. '(strip' → logprob: -15.78804874420166

Token 645: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0036197893787175417
    2. '()
' → logprob: -5.62861967086792
    3. '())' → logprob: -12.128620147705078
    4. '()`' → logprob: -12.628620147705078
    5. '()\' → logprob: -12.753620147705078
    6. '()==' → logprob: -13.003620147705078
    7. '()
' → logprob: -13.753620147705078
    8. '()

' → logprob: -14.003620147705078
    9. '().' → logprob: -14.128620147705078
    10. '();' → logprob: -14.503620147705078

Token 646: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.004147849511355162
    2. 'if' → logprob: -5.879148006439209
    3. ' if' → logprob: -6.754148006439209
    4. '   ' → logprob: -8.87914752960205
    5. '<|end|>' → logprob: -11.00414752960205
    6. 's' → logprob: -12.50414752960205
    7. 'chairs' → logprob: -13.00414752960205
    8. '        
' → logprob: -13.25414752960205
    9. 'ch' → logprob: -13.62914752960205
    10. '```' → logprob: -13.62914752960205

Token 647: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.15540306270122528
    2. 'chairs' → logprob: -2.0304031372070312
    3. ' if' → logprob: -5.155403137207031
    4. 'n' → logprob: -5.530403137207031
    5. 'ch' → logprob: -7.280403137207031
    6. 'se' → logprob: -7.780403137207031
    7. '   ' → logprob: -7.780403137207031
    8. 'num' → logprob: -8.155403137207031
    9. 'chars' → logprob: -8.280403137207031
    10. ' chairs' → logprob: -8.405403137207031

Token 648: ' not' (ID: 625)
  Prédit: ' not'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.6749551296234131
    2. ' line' → logprob: -1.049955129623413
    3. 'line' → logprob: -2.049955129623413
    4. 'not' → logprob: -4.424955368041992
    5. ' len' → logprob: -9.924955368041992
    6. 'len' → logprob: -9.924955368041992
    7. ' ' → logprob: -10.549955368041992
    8. '(line' → logprob: -11.549955368041992
    9. '#line' → logprob: -11.799955368041992
    10. '[line' → logprob: -12.924955368041992

Token 649: ' line' (ID: 2543)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'line' → logprob: -0.014163747429847717
    2. ' line' → logprob: -4.264163970947266
    3. '(line' → logprob: -16.139163970947266
    4. 'len' → logprob: -16.514163970947266
    5. '#line' → logprob: -17.889163970947266
    6. '	line' → logprob: -18.389163970947266
    7. 'lines' → logprob: -18.764163970947266
    8. ' ' → logprob: -19.014163970947266
    9. 'Line' → logprob: -19.264163970947266
    10. '
' → logprob: -19.514163970947266

Token 650: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.4537732005119324
    2. ':
' → logprob: -1.0787732601165771
    3. ' or' → logprob: -4.203773021697998
    4. '   ' → logprob: -5.203773021697998
    5. '.startswith' → logprob: -6.328773021697998
    6. '==' → logprob: -7.328773021697998
    7. ':return' → logprob: -7.953773021697998
    8. 'or' → logprob: -8.328773498535156
    9. '<|end|>' → logprob: -8.328773498535156
    10. '():
' → logprob: -8.578773498535156

Token 651: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00026288547087460756
    2. ':
' → logprob: -9.750263214111328
    3. ':' → logprob: -9.875263214111328
    4. '       ' → logprob: -10.000263214111328
    5. ',' → logprob: -10.500263214111328
    6. '	       ' → logprob: -10.625263214111328
    7. '		' → logprob: -11.500263214111328
    8. '<|end|>' → logprob: -11.625263214111328
    9. '               ' → logprob: -11.750263214111328
    10. '   ' → logprob: -12.125263214111328

Token 652: ' continue' (ID: 4901)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.6846733689308167
    2. 'continue' (adapté à ' continue') → logprob: -0.9346733689308167
    3. ' continue' → logprob: -2.434673309326172
    4. 'break' → logprob: -4.809673309326172
    5. ' break' → logprob: -5.559673309326172
    6. '       ' → logprob: -5.809673309326172
    7. '   ' → logprob: -8.434673309326172
    8. '               ' → logprob: -9.059673309326172
    9. '	continue' → logprob: -10.434673309326172
    10. ' ' → logprob: -10.934673309326172

Token 653: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0010104191023856401
    2. '
' → logprob: -7.626010417938232
    3. '        
' → logprob: -8.25101089477539
    4. '<|end|>' → logprob: -8.62601089477539
    5. '   ' → logprob: -10.25101089477539
    6. '```' → logprob: -11.00101089477539
    7. '    
' → logprob: -11.75101089477539
    8. '<|end|>' → logprob: -12.25101089477539
    9. ',' → logprob: -12.62601089477539
    10. '  
' → logprob: -13.00101089477539

Token 654: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0009913649410009384
    2. '   ' → logprob: -7.125991344451904
    3. '```' → logprob: -9.500991821289062
    4. '<|end|>' → logprob: -10.000991821289062
    5. '        
' → logprob: -11.000991821289062
    6. '
' → logprob: -11.250991821289062
    7. 'chairs' → logprob: -12.000991821289062
    8. 'if' → logprob: -12.250991821289062
    9. '<|end|>' → logprob: -12.375991821289062
    10. 'chair' → logprob: -12.500991821289062

Token 655: ' n' (ID: 297)
  Prédit: 'chairs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'chairs' → logprob: -0.6025813817977905
    2. 'n' (adapté à ' n') → logprob: -1.8525813817977905
    3. '       ' → logprob: -2.72758150100708
    4. 'ch' → logprob: -3.10258150100708
    5. 'parts' → logprob: -3.10258150100708
    6. ' chairs' → logprob: -3.60258150100708
    7. ' n' → logprob: -3.85258150100708
    8. 'if' → logprob: -4.10258150100708
    9. 'se' → logprob: -4.22758150100708
    10. 'num' → logprob: -4.60258150100708

Token 656: '_m' (ID: 1285)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.33331483602523804
    2. ' =' → logprob: -1.4583148956298828
    3. ',' → logprob: -3.083314895629883
    4. '=int' → logprob: -5.333314895629883
    5. ' ,' → logprob: -9.458314895629883
    6. ',n' → logprob: -11.083314895629883
    7. ',int' → logprob: -11.083314895629883
    8. ',num' → logprob: -11.208314895629883
    9. '=input' → logprob: -11.333314895629883
    10. ')' → logprob: -11.458314895629883

Token 657: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.05985872074961662
    2. ' =' → logprob: -2.934858798980713
    3. ',' → logprob: -5.309858798980713
    4. ',n' → logprob: -12.184858322143555
    5. '=n' → logprob: -12.809858322143555
    6. 's' → logprob: -12.934858322143555
    7. '=int' → logprob: -12.934858322143555
    8. '=input' → logprob: -13.309858322143555
    9. ' ,' → logprob: -13.559858322143555
    10. '   ' → logprob: -14.059858322143555

Token 658: ' line' (ID: 2543)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'line' → logprob: -0.011786779388785362
    2. ' line' → logprob: -4.761786937713623
    3. 'list' → logprob: -5.761786937713623
    4. ' list' → logprob: -10.761786460876465
    5. '[line' → logprob: -15.011786460876465
    6. '   ' → logprob: -16.51178741455078
    7. '=line' → logprob: -16.63678741455078
    8. '(line' → logprob: -16.88678741455078
    9. '	line' → logprob: -17.26178741455078
    10. '#line' → logprob: -18.51178741455078

Token 659: '.split' (ID: 10347)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0900668352842331
    2. ' =' → logprob: -2.840066909790039
    3. '.split' → logprob: -3.590066909790039
    4. '.' → logprob: -9.465066909790039
    5. 'split' → logprob: -10.840066909790039
    6. '.=' → logprob: -11.715066909790039
    7. '.strip' → logprob: -12.965066909790039
    8. '=n' → logprob: -13.715066909790039
    9. '_split' → logprob: -14.840066909790039
    10. ' .' → logprob: -14.965066909790039

Token 660: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0381464883685112
    2. '('' → logprob: -3.288146495819092
    3. '(' → logprob: -9.538146018981934
    4. '()[' → logprob: -10.663146018981934
    5. '()]' → logprob: -12.788146018981934
    6. '()
' → logprob: -13.163146018981934
    7. '("' → logprob: -13.413146018981934
    8. '(None' → logprob: -13.413146018981934
    9. '())' → logprob: -15.038146018981934
    10. '(',' → logprob: -15.288146018981934

Token 661: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.06184890866279602
    2. 'n' → logprob: -3.0618488788604736
    3. 'if' → logprob: -5.936849117279053
    4. '[' → logprob: -5.936849117279053
    5. '[n' → logprob: -6.311849117279053
    6. ' if' → logprob: -6.436849117279053
    7. ' n' → logprob: -6.686849117279053
    8. '(n' → logprob: -6.811849117279053
    9. ',' → logprob: -7.061849117279053
    10. '<|end|>' → logprob: -8.061848640441895

Token 662: ' if' (ID: 538)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.02945665642619133
    2. '       ' → logprob: -4.029456615447998
    3. ' if' → logprob: -5.154456615447998
    4. ' n' → logprob: -5.654456615447998
    5. 'if' (adapté à ' if') → logprob: -6.279456615447998
    6. '   ' → logprob: -9.779457092285156
    7. '	n' → logprob: -11.029457092285156
    8. '```' → logprob: -12.154457092285156
    9. '           ' → logprob: -12.904457092285156
    10. ' ' → logprob: -13.029457092285156

Token 663: ' len' (ID: 4631)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.005970507860183716
    2. 'n' → logprob: -5.505970478057861
    3. 'not' → logprob: -6.505970478057861
    4. ' len' → logprob: -8.00597095489502
    5. ' not' → logprob: -10.00597095489502
    6. 'int' → logprob: -11.25597095489502
    7. ' n' → logprob: -13.25597095489502
    8. '       ' → logprob: -13.75597095489502
    9. '(len' → logprob: -14.00597095489502
    10. '   ' → logprob: -15.13097095489502

Token 664: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.0003389190824236721
    2. 'n' → logprob: -8.625338554382324
    3. '(' → logprob: -9.250338554382324
    4. '==' → logprob: -10.375338554382324
    5. '<n' → logprob: -11.125338554382324
    6. ' (' → logprob: -12.125338554382324
    7. ' n' → logprob: -12.625338554382324
    8. '()' → logprob: -12.875338554382324
    9. ' ==' → logprob: -12.875338554382324
    10. '(line' → logprob: -14.000338554382324

Token 665: '_m' (ID: 1285)
  Prédit: '_m'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_m' → logprob: -7.93448489275761e-05
    2. ')' → logprob: -10.875079154968262
    3. '<' → logprob: -11.000079154968262
    4. '==' → logprob: -11.125079154968262
    5. '_' → logprob: -11.375079154968262
    6. ')==' → logprob: -12.875079154968262
    7. '[' → logprob: -12.875079154968262
    8. 'm' → logprob: -12.875079154968262
    9. '   ' → logprob: -13.750079154968262
    10. '```' → logprob: -13.750079154968262

Token 666: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.6674299836158752
    2. '==' → logprob: -1.7924299240112305
    3. '!=' → logprob: -1.9174299240112305
    4. '<' → logprob: -2.2924299240112305
    5. ' !=' → logprob: -2.9174299240112305
    6. ' ==' → logprob: -4.7924299240112305
    7. ')!=' → logprob: -5.7924299240112305
    8. ' <' → logprob: -6.0424299240112305
    9. ')<' → logprob: -6.2924299240112305
    10. ')==' → logprob: -6.6674299240112305

Token 667: ' !=' (ID: 1666)
  Prédit: '!='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '!=' → logprob: -0.4384211599826813
    2. '<' → logprob: -1.3134211301803589
    3. '==' → logprob: -2.8134212493896484
    4. ' !=' → logprob: -3.6884212493896484
    5. ' ==' → logprob: -7.563421249389648
    6. ' <' → logprob: -8.563421249389648
    7. '```' → logprob: -9.063421249389648
    8. '<int' → logprob: -10.063421249389648
    9. '<n' → logprob: -10.188421249389648
    10. '[' → logprob: -10.813421249389648

Token 668: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -9.610702363715973e-06
    2. ' ' → logprob: -11.625009536743164
    3. '1' → logprob: -14.875009536743164
    4. '3' → logprob: -16.937509536743164
    5. '```' → logprob: -17.562509536743164
    6. '   ' → logprob: -17.937509536743164
    7. '<' → logprob: -18.125009536743164
    8. '0' → logprob: -18.312509536743164
    9. '۲' → logprob: -18.312509536743164
    10. '２' → logprob: -18.500009536743164

Token 669: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -2.816093228830141e-06
    2. '1' → logprob: -13.37500286102295
    3. ' ' → logprob: -14.37500286102295
    4. '0' → logprob: -14.75000286102295
    5. '```' → logprob: -16.500001907348633
    6. '3' → logprob: -16.750001907348633
    7. '<' → logprob: -18.437501907348633
    8. '[' → logprob: -19.125001907348633
    9. '２' → logprob: -19.125001907348633
    10. '4' → logprob: -19.125001907348633

Token 670: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.5818371176719666
    2. ':' → logprob: -0.8318371176719666
    3. ' or' → logprob: -5.456837177276611
    4. '           ' → logprob: -6.581837177276611
    5. ':return' → logprob: -9.456836700439453
    6. '       ' → logprob: -9.831836700439453
    7. 'continue' → logprob: -10.706836700439453
    8. ' and' → logprob: -10.831836700439453
    9. '   ' → logprob: -11.706836700439453
    10. ',' → logprob: -11.706836700439453

Token 671: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0006432149093598127
    2. 'continue' → logprob: -8.000642776489258
    3. ' continue' → logprob: -8.375642776489258
    4. '       ' → logprob: -9.625642776489258
    5. '   ' → logprob: -12.250642776489258
    6. '               ' → logprob: -13.500642776489258
    7. '		' → logprob: -13.625642776489258
    8. '	       ' → logprob: -13.875642776489258
    9. '```' → logprob: -14.250642776489258
    10. 'break' → logprob: -14.500642776489258

Token 672: ' continue' (ID: 4901)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.10415136814117432
    2. 'continue' (adapté à ' continue') → logprob: -2.3541512489318848
    3. ' continue' → logprob: -5.729151248931885
    4. '       ' → logprob: -7.979151248931885
    5. 'break' → logprob: -8.354151725769043
    6. '   ' → logprob: -9.979151725769043
    7. '               ' → logprob: -10.604151725769043
    8. '```' → logprob: -10.729151725769043
    9. ' break' → logprob: -12.354151725769043
    10. '	continue' → logprob: -12.354151725769043

Token 673: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0036961587611585855
    2. 'n' → logprob: -6.503695964813232
    3. '<|end|>' → logprob: -7.378695964813232
    4. '
' → logprob: -7.878695964813232
    5. '```' → logprob: -8.25369644165039
    6. '        
' → logprob: -8.37869644165039
    7. ',' → logprob: -8.75369644165039
    8. ' n' → logprob: -9.12869644165039
    9. '(n' → logprob: -9.62869644165039
    10. '   ' → logprob: -9.87869644165039

Token 674: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0004291195946279913
    2. '```' → logprob: -8.625429153442383
    3. 'n' → logprob: -8.750429153442383
    4. '	' → logprob: -10.125429153442383
    5. ' n' → logprob: -10.250429153442383
    6. '        
' → logprob: -13.000429153442383
    7. '           ' → logprob: -13.125429153442383
    8. '   ' → logprob: -13.250429153442383
    9. '
' → logprob: -13.500429153442383
    10. '	   ' → logprob: -13.625429153442383

Token 675: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' (adapté à ' n') → logprob: -0.00012106612848583609
    2. ' n' → logprob: -9.125121116638184
    3. '       ' → logprob: -11.500121116638184
    4. '```' → logprob: -14.125121116638184
    5. '   ' → logprob: -14.500121116638184
    6. 'N' → logprob: -14.625121116638184
    7. '	n' → logprob: -16.375120162963867
    8. '        
' → logprob: -16.500120162963867
    9. '           ' → logprob: -17.250120162963867
    10. '``' → logprob: -17.625120162963867

Token 676: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0021061250008642673
    2. '=' → logprob: -7.252106189727783
    3. ',m' → logprob: -7.252106189727783
    4. ',n' → logprob: -7.627106189727783
    5. ' =' → logprob: -10.002105712890625
    6. '_,' → logprob: -10.127105712890625
    7. ',int' → logprob: -10.252105712890625
    8. '=int' → logprob: -10.627105712890625
    9. ',num' → logprob: -10.877105712890625
    10. ' ,' → logprob: -11.127105712890625

Token 677: ' m' (ID: 284)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.0004311460361350328
    2. ' m' → logprob: -7.750431060791016
    3. '=' → logprob: -15.000431060791016
    4. 'k' → logprob: -18.250431060791016
    5. 'int' → logprob: -18.500431060791016
    6. '   ' → logprob: -18.500431060791016
    7. ' =' → logprob: -18.625431060791016
    8. '=m' → logprob: -19.250431060791016
    9. '```' → logprob: -19.375431060791016
    10. '	m' → logprob: -19.375431060791016

Token 678: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.10028237104415894
    2. ' =' → logprob: -2.3502824306488037
    3. '=int' → logprob: -9.975282669067383
    4. ',' → logprob: -10.475282669067383
    5. ')' → logprob: -15.350282669067383
    6. '   ' → logprob: -15.850282669067383
    7. 'int' → logprob: -15.850282669067383
    8. ')=' → logprob: -15.850282669067383
    9. '=
' → logprob: -16.350282669067383
    10. '=

' → logprob: -16.475282669067383

Token 679: ' map' (ID: 4014)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.8959168791770935
    2. 'map' → logprob: -1.1459169387817383
    3. ' map' → logprob: -1.3959169387817383
    4. ' int' → logprob: -3.6459169387817383
    5. 'n' → logprob: -9.895916938781738
    6. ' n' → logprob: -10.145916938781738
    7. '[int' → logprob: -10.145916938781738
    8. 'list' → logprob: -14.145916938781738
    9. '(int' → logprob: -14.520916938781738
    10. '(map' → logprob: -14.895916938781738

Token 680: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.10027728974819183
    2. 'int' → logprob: -2.3502771854400635
    3. '[int' → logprob: -10.350276947021484
    4. 'str' → logprob: -11.225276947021484
    5. '<int' → logprob: -11.600276947021484
    6. '(str' → logprob: -11.975276947021484
    7. '```' → logprob: -12.725276947021484
    8. '(' → logprob: -12.975276947021484
    9. '=int' → logprob: -13.350276947021484
    10. ' int' → logprob: -13.350276947021484

Token 681: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.1782827526330948
    2. ',n' → logprob: -1.9282827377319336
    3. '(n' → logprob: -4.303282737731934
    4. ',line' → logprob: -5.803282737731934
    5. ' ,' → logprob: -7.678282737731934
    6. '(line' → logprob: -7.928282737731934
    7. ',int' → logprob: -9.053282737731934
    8. 'n' → logprob: -9.428282737731934
    9. ',(' → logprob: -9.803282737731934
    10. '(' → logprob: -9.803282737731934

Token 682: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.0062690856866538525
    2. ' n' → logprob: -5.2562689781188965
    3. 'str' → logprob: -7.0062689781188965
    4. 'int' → logprob: -9.006269454956055
    5. ' str' → logprob: -12.131269454956055
    6. ' int' → logprob: -15.256269454956055
    7. '	n' → logprob: -16.506269454956055
    8. ')n' → logprob: -16.506269454956055
    9. 'map' → logprob: -17.506269454956055
    10. ' ' → logprob: -17.631269454956055

Token 683: '_m' (ID: 1285)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.5302397608757019
    2. ')' → logprob: -1.1552398204803467
    3. '(line' → logprob: -3.9052398204803467
    4. '(' → logprob: -4.280239582061768
    5. 'm' → logprob: -4.280239582061768
    6. 'n' → logprob: -4.655239582061768
    7. 'split' → logprob: -4.780239582061768
    8. '.split' → logprob: -5.030239582061768
    9. 'line' → logprob: -5.530239582061768
    10. ')n' → logprob: -5.530239582061768

Token 684: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -8.292095299111679e-05
    2. ')
' → logprob: -9.625082969665527
    3. '())' → logprob: -12.750082969665527
    4. ');' → logprob: -13.125082969665527
    5. ' )' → logprob: -13.250082969665527
    6. ')}' → logprob: -13.500082969665527
    7. '()' → logprob: -13.625082969665527
    8. '[' → logprob: -13.750082969665527
    9. ')`' → logprob: -13.750082969665527
    10. '(' → logprob: -14.000082969665527

Token 685: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00269787828437984
    2. 'chairs' → logprob: -6.127697944641113
    3. '```' → logprob: -8.877697944641113
    4. '<|end|>' → logprob: -9.002697944641113
    5. ' chairs' → logprob: -9.502697944641113
    6. 'chair' → logprob: -10.002697944641113
    7. 'if' → logprob: -10.752697944641113
    8. ' seating' → logprob: -10.877697944641113
    9. ' if' → logprob: -11.002697944641113
    10. '        
' → logprob: -11.127697944641113

Token 686: ' if' (ID: 538)
  Prédit: 'chairs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'chairs' → logprob: -0.5622708797454834
    2. '       ' → logprob: -1.0622708797454834
    3. ' chairs' → logprob: -2.8122708797454834
    4. '```' → logprob: -3.9372708797454834
    5. 'ch' → logprob: -6.1872711181640625
    6. ' if' → logprob: -7.3122711181640625
    7. ' line' → logprob: -8.062271118164062
    8. 'if' (adapté à ' if') → logprob: -8.187271118164062
    9. '``' → logprob: -8.312271118164062
    10. 'chair' → logprob: -8.437271118164062

Token 687: ' n' (ID: 297)
  Prédit: ' n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.41615530848503113
    2. 'n' → logprob: -1.6661553382873535
    3. ' m' → logprob: -2.5411553382873535
    4. 'm' → logprob: -2.9161553382873535
    5. ' not' → logprob: -4.0411553382873535
    6. 'not' → logprob: -7.0411553382873535
    7. '   ' → logprob: -10.541154861450195
    8. ' ' → logprob: -10.791154861450195
    9. '(n' → logprob: -11.791154861450195
    10. '(m' → logprob: -12.603654861450195

Token 688: ' ==' (ID: 951)
  Prédit: ' <'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.723423957824707
    2. ' ==' → logprob: -1.098423957824707
    3. '<' → logprob: -2.348423957824707
    4. '==' → logprob: -2.723423957824707
    5. ' <=' → logprob: -4.223423957824707
    6. '<=' → logprob: -6.098423957824707
    7. ' >' → logprob: -6.348423957824707
    8. '>' → logprob: -6.848423957824707
    9. '   ' → logprob: -8.098423957824707
    10. ' >=' → logprob: -9.848423957824707

Token 689: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0031836593989282846
    2. ' ' → logprob: -5.753183841705322
    3. 'm' → logprob: -13.503183364868164
    4. 'and' → logprob: -14.003183364868164
    5. 's' → logprob: -14.128183364868164
    6. '-' → logprob: -14.253183364868164
    7. '1' → logprob: -14.753183364868164
    8. '```' → logprob: -15.315683364868164
    9. ' -' → logprob: -15.503183364868164
    10. 'n' → logprob: -15.503183364868164

Token 690: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.2127087504486553e-05
    2. ' ' → logprob: -11.000021934509277
    3. 'm' → logprob: -12.625021934509277
    4. 'and' → logprob: -14.000021934509277
    5. '-' → logprob: -14.875021934509277
    6. 's' → logprob: -15.625021934509277
    7. 'n' → logprob: -15.750021934509277
    8. '```' → logprob: -16.125022888183594
    9. '1' → logprob: -16.687522888183594
    10. '
' → logprob: -17.250022888183594

Token 691: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.07889793813228607
    2. 'and' → logprob: -2.5788979530334473
    3. '	and' → logprob: -12.828897476196289
    4. ' or' → logprob: -13.203897476196289
    5. '   ' → logprob: -13.578897476196289
    6. ' ' → logprob: -13.578897476196289
    7. '       ' → logprob: -15.703897476196289
    8. ' и' → logprob: -15.828897476196289
    9. ' ' → logprob: -15.828897476196289
    10. '           ' → logprob: -15.953897476196289

Token 692: ' m' (ID: 284)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.0031777136027812958
    2. ' m' → logprob: -5.753177642822266
    3. '   ' → logprob: -17.628177642822266
    4. '	m' → logprob: -18.503177642822266
    5. '  ' → logprob: -19.753177642822266
    6. '    ' → logprob: -19.878177642822266
    7. '       ' → logprob: -20.128177642822266
    8. ' ' → logprob: -20.503177642822266
    9. '     ' → logprob: -21.128177642822266
    10. '      ' → logprob: -21.503177642822266

Token 693: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.252027302980423
    2. '==' → logprob: -1.5020272731781006
    3. '0' → logprob: -9.62702751159668
    4. '=' → logprob: -11.37702751159668
    5. ' ' → logprob: -11.37702751159668
    6. '[' → logprob: -13.00202751159668
    7. '<|end|>' → logprob: -13.37702751159668
    8. ')==' → logprob: -13.50202751159668
    9. ' =' → logprob: -13.75202751159668
    10. ']==' → logprob: -14.37702751159668

Token 694: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00020354038861114532
    2. ' ' → logprob: -8.500203132629395
    3. '   ' → logprob: -17.37520408630371
    4. '  ' → logprob: -18.25020408630371
    5. '۰' → logprob: -18.75020408630371
    6. '```' → logprob: -19.62520408630371
    7. '=' → logprob: -19.93770408630371
    8. ' ' → logprob: -20.00020408630371
    9. '０' → logprob: -21.12520408630371
    10. '০' → logprob: -21.37520408630371

Token 695: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.165027217415627e-05
    2. ' ' → logprob: -10.750021934509277
    3. '۰' → logprob: -17.43752098083496
    4. '   ' → logprob: -17.56252098083496
    5. '1' → logprob: -17.87502098083496
    6. '```' → logprob: -17.87502098083496
    7. '=' → logprob: -18.43752098083496
    8. '  ' → logprob: -18.81252098083496
    9. '০' → logprob: -19.31252098083496
    10. ' ' → logprob: -19.31252098083496

Token 696: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.5134790539741516
    2. ':' → logprob: -1.1384789943695068
    3. '           ' → logprob: -2.513478994369507
    4. '       ' → logprob: -8.638479232788086
    5. '   ' → logprob: -10.888479232788086
    6. '		' → logprob: -11.138479232788086
    7. '():
' → logprob: -11.138479232788086
    8. '          ' → logprob: -11.388479232788086
    9. '	       ' → logprob: -11.763479232788086
    10. ':return' → logprob: -11.763479232788086

Token 697: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -7.862962229410186e-05
    2. '		' → logprob: -10.625078201293945
    3. ':
' → logprob: -10.875078201293945
    4. ':' → logprob: -11.375078201293945
    5. '	       ' → logprob: -12.125078201293945
    6. '       ' → logprob: -12.250078201293945
    7. '               ' → logprob: -12.625078201293945
    8. '<|end|>' → logprob: -13.000078201293945
    9. '          ' → logprob: -13.625078201293945
    10. ' break' → logprob: -13.750078201293945

Token 698: ' break' (ID: 2338)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.25866761803627014
    2. 'break' (adapté à ' break') → logprob: -1.5086675882339478
    3. ' break' → logprob: -5.008667469024658
    4. 'return' → logprob: -11.008667945861816
    5. '               ' → logprob: -11.383667945861816
    6. '	break' → logprob: -12.383667945861816
    7. '       ' → logprob: -13.383667945861816
    8. '   ' → logprob: -13.508667945861816
    9. '		' → logprob: -14.383667945861816
    10. '_break' → logprob: -15.758667945861816

Token 699: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.007315900642424822
    2. '<|end|>' → logprob: -5.3823161125183105
    3. '        
' → logprob: -6.5073161125183105
    4. '
' → logprob: -7.1323161125183105
    5. '```' → logprob: -8.507315635681152
    6. '<|end|>' → logprob: -10.007315635681152
    7. 'chairs' → logprob: -10.757315635681152
    8. '   ' → logprob: -11.257315635681152
    9. ' seating' → logprob: -11.382315635681152
    10. '  
' → logprob: -11.882315635681152

Token 700: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0007310202927328646
    2. '<|end|>' → logprob: -7.750730991363525
    3. '```' → logprob: -9.250731468200684
    4. '        
' → logprob: -9.250731468200684
    5. ' seating' → logprob: -10.500731468200684
    6. 'chairs' → logprob: -10.500731468200684
    7. '
' → logprob: -10.875731468200684
    8. ' chairs' → logprob: -11.500731468200684
    9. 'chair' → logprob: -12.000731468200684
    10. '<|end|>' → logprob: -12.875731468200684

Token 701: ' passengers' (ID: 37252)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.16208691895008087
    2. 'chairs' → logprob: -2.0370869636535645
    3. ' chairs' → logprob: -4.0370869636535645
    4. '```' → logprob: -6.9120869636535645
    5. ' seats' → logprob: -8.287086486816406
    6. 'ch' → logprob: -9.412086486816406
    7. 'chair' → logprob: -9.537086486816406
    8. 'se' → logprob: -10.037086486816406
    9. '   ' → logprob: -10.162086486816406
    10. ' seating' → logprob: -11.162086486816406

Token 702: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.14280909299850464
    2. '=' → logprob: -2.0178091526031494
    3. '=[]' → logprob: -9.64280891418457
    4. '   ' → logprob: -11.64280891418457
    5. '_positions' → logprob: -11.89280891418457
    6. '_' → logprob: -12.01780891418457
    7. '=[]
' → logprob: -12.39280891418457
    8. ' ' → logprob: -12.51780891418457
    9. '=[' → logprob: -12.89280891418457
    10. '_tokens' → logprob: -13.01780891418457

Token 703: ' []
' (ID: 8911)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.28759869933128357
    2. '['' → logprob: -2.0375986099243164
    3. ' []' → logprob: -2.9125986099243164
    4. 'input' → logprob: -4.162598609924316
    5. 'list' → logprob: -4.537598609924316
    6. '''' → logprob: -4.787598609924316
    7. ' ['' → logprob: -5.037598609924316
    8. ''' → logprob: -5.287598609924316
    9. '[' → logprob: -5.537598609924316
    10. ''#' → logprob: -5.662598609924316

Token 704: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.011211572214961052
    2. '<|end|>' → logprob: -4.886211395263672
    3. ' for' → logprob: -6.386211395263672
    4. '	' → logprob: -6.761211395263672
    5. '<|end|>' → logprob: -8.136211395263672
    6. 'for' → logprob: -8.886211395263672
    7. ',' → logprob: -9.636211395263672
    8. '        
' → logprob: -9.636211395263672
    9. '```' → logprob: -10.011211395263672
    10. '   ' → logprob: -10.886211395263672

Token 705: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.49095842242240906
    2. '       ' → logprob: -1.4909584522247314
    3. ' for' → logprob: -1.8659584522247314
    4. 'chairs' → logprob: -5.490958213806152
    5. '	for' → logprob: -7.115958213806152
    6. '	' → logprob: -7.615958213806152
    7. 'se' → logprob: -7.990958213806152
    8. '   ' → logprob: -7.990958213806152
    9. '```' → logprob: -8.240958213806152
    10. ' chairs' → logprob: -8.490958213806152

Token 706: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.009865636005997658
    2. '_i' → logprob: -4.759865760803223
    3. ' _' → logprob: -7.509865760803223
    4. '_pass' → logprob: -7.634865760803223
    5. '_j' → logprob: -9.134865760803223
    6. '_m' → logprob: -10.509865760803223
    7. '_in' → logprob: -10.759865760803223
    8. '_id' → logprob: -11.134865760803223
    9. 'i' → logprob: -11.884865760803223
    10. '_input' → logprob: -12.384865760803223

Token 707: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.001291904947720468
    2. 'range' → logprob: -7.001291751861572
    3. 'in' → logprob: -8.00129222869873
    4. ' ' → logprob: -10.50129222869873
    5. ' range' → logprob: -11.87629222869873
    6. '  ' → logprob: -12.00129222869873
    7. '   ' → logprob: -13.12629222869873
    8. '    ' → logprob: -14.25129222869873
    9. '0' → logprob: -14.87629222869873
    10. 's' → logprob: -15.12629222869873

Token 708: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.00010926496179308742
    2. ' range' → logprob: -9.125109672546387
    3. '   ' → logprob: -16.00010871887207
    4. 'input' → logprob: -16.62510871887207
    5. '  ' → logprob: -17.00010871887207
    6. ' ' → logprob: -17.75010871887207
    7. '    ' → logprob: -17.87510871887207
    8. 'pass' → logprob: -18.25010871887207
    9. '	range' → logprob: -18.37510871887207
    10. '[' → logprob: -18.75010871887207

Token 709: '(m' (ID: 2145)
  Prédit: '(m'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(m' → logprob: -1.2664456789934775e-06
    2. 'm' → logprob: -13.750000953674316
    3. '(' → logprob: -16.375001907348633
    4. ' (' → logprob: -17.875001907348633
    5. '(M' → logprob: -18.750001907348633
    6. '   ' → logprob: -19.125001907348633
    7. ' m' → logprob: -19.375001907348633
    8. '	m' → logprob: -19.750001907348633
    9. '(n' → logprob: -20.500001907348633
    10. '((' → logprob: -20.625001907348633

Token 710: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.01985412836074829
    2. '):' → logprob: -4.1448540687561035
    3. '       ' → logprob: -6.1448540687561035
    4. ':
' → logprob: -7.0198540687561035
    5. '   ' → logprob: -8.269854545593262
    6. '           ' → logprob: -8.519854545593262
    7. '():
' → logprob: -8.769854545593262
    8. ':' → logprob: -9.394854545593262
    9. '):
' → logprob: -10.644854545593262
    10. ')' → logprob: -11.644854545593262

Token 711: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.09123910963535309
    2. '   ' → logprob: -2.7162392139434814
    3. '	       ' → logprob: -5.091238975524902
    4. '       ' → logprob: -5.216238975524902
    5. '	   ' → logprob: -5.341238975524902
    6. '		   ' → logprob: -6.216238975524902
    7. '    	   ' → logprob: -7.341238975524902
    8. '		' → logprob: -8.341238975524902
    9. ' line' → logprob: -8.466238975524902
    10. '		           ' → logprob: -8.591238975524902

Token 712: ' passengers' (ID: 37252)
  Prédit: 'pass'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pass' → logprob: -0.20297183096408844
    2. 'ch' → logprob: -2.952971935272217
    3. 'p' → logprob: -3.077971935272217
    4. 'line' → logprob: -3.827971935272217
    5. ' passengers' → logprob: -4.702971935272217
    6. '   ' → logprob: -4.952971935272217
    7. 'c' → logprob: -4.952971935272217
    8. 'ptype' → logprob: -5.327971935272217
    9. 'seat' → logprob: -5.327971935272217
    10. '           ' → logprob: -5.577971935272217

Token 713: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.006434337701648474
    2. '=' → logprob: -5.756434440612793
    3. '.' → logprob: -6.631434440612793
    4. '_line' → logprob: -7.631434440612793
    5. ' =' → logprob: -7.756434440612793
    6. ' .' → logprob: -7.756434440612793
    7. '+=' → logprob: -8.631434440612793
    8. 'line' → logprob: -9.756434440612793
    9. ' +=' → logprob: -9.756434440612793
    10. '().' → logprob: -10.006434440612793

Token 714: '(input' (ID: 10054)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.004120904020965099
    2. ' input' → logprob: -5.879120826721191
    3. 'sys' → logprob: -7.004120826721191
    4. '(input' → logprob: -7.879120826721191
    5. ' sys' → logprob: -11.629120826721191
    6. '(sys' → logprob: -12.129120826721191
    7. '	input' → logprob: -12.879120826721191
    8. '_' → logprob: -13.004120826721191
    9. ' ' → logprob: -13.129120826721191
    10. 'str' → logprob: -13.129120826721191

Token 715: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -2.3199920178740285e-05
    2. '()' → logprob: -10.875022888183594
    3. '())' → logprob: -12.500022888183594
    4. ' ().' → logprob: -15.750022888183594
    5. '(' → logprob: -15.875022888183594
    6. ')' → logprob: -16.000022888183594
    7. '()
' → logprob: -16.375022888183594
    8. '()

' → logprob: -19.750022888183594
    9. '.strip' → logprob: -20.000022888183594
    10. '()))' → logprob: -20.375022888183594

Token 716: 'strip' (ID: 23905)
  Prédit: 'strip'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'strip' → logprob: -4.842555426876061e-06
    2. 'rstrip' → logprob: -12.250004768371582
    3. ' strip' → logprob: -18.6250057220459
    4. 'split' → logprob: -19.7500057220459
    5. '.strip' → logprob: -20.7500057220459
    6. '_strip' → logprob: -21.5000057220459
    7. '(strip' → logprob: -22.6250057220459
    8. 'decode' → logprob: -23.7500057220459
    9. 'str' → logprob: -24.3750057220459
    10. 'Strip' → logprob: -24.7500057220459

Token 717: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.0009979173773899674
    2. '()' → logprob: -7.500998020172119
    3. ')' → logprob: -7.750998020172119
    4. '())
' → logprob: -11.250997543334961
    5. ' ())' → logprob: -14.000997543334961
    6. '())

' → logprob: -15.375997543334961
    7. '()))' → logprob: -15.750997543334961
    8. '()
' → logprob: -15.875997543334961
    9. '(' → logprob: -16.25099754333496
    10. '();)' → logprob: -16.87599754333496

Token 718: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0005051348707638681
    2. 'chairs' → logprob: -8.500505447387695
    3. '   ' → logprob: -8.875505447387695
    4. '
' → logprob: -9.750505447387695
    5. '```' → logprob: -10.250505447387695
    6. '<|end|>' → logprob: -10.750505447387695
    7. '        
' → logprob: -10.750505447387695
    8. 'chair' → logprob: -11.750505447387695
    9. '           ' → logprob: -12.625505447387695
    10. '	' → logprob: -13.250505447387695

Token 719: ' chairs' (ID: 34049)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.12994548678398132
    2. 'chairs' (adapté à ' chairs') → logprob: -2.1299455165863037
    3. '   ' → logprob: -6.129945278167725
    4. ' chairs' → logprob: -8.629945755004883
    5. 'ch' → logprob: -8.879945755004883
    6. '```' → logprob: -9.004945755004883
    7. 'chair' → logprob: -9.129945755004883
    8. 'se' → logprob: -9.379945755004883
    9. '        
' → logprob: -10.379945755004883
    10. 'chars' → logprob: -10.629945755004883

Token 720: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.10026846826076508
    2. ' =' → logprob: -2.3502683639526367
    3. '=['' → logprob: -9.850268363952637
    4. '=[' → logprob: -11.975268363952637
    5. '='' → logprob: -13.975268363952637
    6. '   ' → logprob: -14.225268363952637
    7. '=list' → logprob: -15.600268363952637
    8. '```' → logprob: -15.600268363952637
    9. '=
' → logprob: -15.975268363952637
    10. '=line' → logprob: -16.100269317626953

Token 721: ' ['' (ID: 5140)
  Prédit: '[''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '['' → logprob: -0.0033332528546452522
    2. ''#' → logprob: -6.62833309173584
    3. ' ['' → logprob: -7.00333309173584
    4. '"#' → logprob: -7.37833309173584
    5. 'list' → logprob: -8.25333309173584
    6. '["' → logprob: -8.62833309173584
    7. '"' → logprob: -11.25333309173584
    8. ''' → logprob: -11.87833309173584
    9. ' '#'' → logprob: -12.37833309173584
    10. '('#' → logprob: -12.50333309173584

Token 722: '#' (ID: 2)
  Prédit: '#'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.0011712945997714996
    2. ''#' → logprob: -6.751171112060547
    3. '#
' → logprob: -14.501171112060547
    4. '('#' → logprob: -16.251171112060547
    5. '"#' → logprob: -16.251171112060547
    6. ''' → logprob: -16.376171112060547
    7. '']' → logprob: -16.501171112060547
    8. ' '#'' → logprob: -16.876171112060547
    9. '#
' → logprob: -17.126171112060547
    10. '['' → logprob: -17.251171112060547

Token 723: '']' (ID: 1089)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.05832582712173462
    2. ']*' → logprob: -2.93332576751709
    3. ' for' → logprob: -5.93332576751709
    4. '']' → logprob: -7.30832576751709
    5. 'for' → logprob: -9.43332576751709
    6. '*' → logprob: -10.80832576751709
    7. ' ]' → logprob: -12.18332576751709
    8. ' *' → logprob: -12.43332576751709
    9. ''' → logprob: -12.68332576751709
    10. '"]' → logprob: -13.68332576751709

Token 724: ' *' (ID: 425)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.0758276954293251
    2. ' *' → logprob: -2.9508275985717773
    3. '*n' → logprob: -3.9508275985717773
    4. '*(' → logprob: -8.075827598571777
    5. '   ' → logprob: -8.200827598571777
    6. '*[' → logprob: -8.325827598571777
    7. '[' → logprob: -8.450827598571777
    8. '[n' → logprob: -8.700827598571777
    9. '       ' → logprob: -9.325827598571777
    10. '
' → logprob: -10.075827598571777

Token 725: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -2.339278580620885e-06
    2. ' n' → logprob: -13.000001907348633
    3. 'int' → logprob: -18.625001907348633
    4. '(n' → logprob: -18.875001907348633
    5. '   ' → logprob: -20.250001907348633
    6. '%n' → logprob: -21.375001907348633
    7. ')n' → logprob: -21.500001907348633
    8. '	n' → logprob: -21.625001907348633
    9. '100' → logprob: -21.625001907348633
    10. '10' → logprob: -21.750001907348633

Token 726: '
' (ID: 198)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.9615965485572815
    2. '       ' → logprob: -1.2115964889526367
    3. ' for' → logprob: -1.2115964889526367
    4. '   ' → logprob: -4.336596488952637
    5. '	for' → logprob: -4.711596488952637
    6. ' ' → logprob: -10.086596488952637
    7. '	   ' → logprob: -10.461596488952637
    8. '
' → logprob: -10.586596488952637
    9. '\t' → logprob: -10.711596488952637
    10. '  ' → logprob: -11.461596488952637

Token 727: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.029335688799619675
    2. ' for' → logprob: -4.5293354988098145
    3. 'for' → logprob: -4.6543354988098145
    4. '   ' → logprob: -4.7793354988098145
    5. '```' → logprob: -8.904335975646973
    6. '        
' → logprob: -11.154335975646973
    7. '<|end|>' → logprob: -11.279335975646973
    8. '
' → logprob: -11.404335975646973
    9. '           ' → logprob: -11.779335975646973
    10. '	for' → logprob: -12.154335975646973

Token 728: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.022065268829464912
    2. ' for' → logprob: -3.8970651626586914
    3. '       ' → logprob: -6.522065162658691
    4. '   ' → logprob: -10.397065162658691
    5. 'i' → logprob: -12.397065162658691
    6. '```' → logprob: -12.647065162658691
    7. 'idx' → logprob: -12.772065162658691
    8. '	for' → logprob: -13.397065162658691
    9. 'A' → logprob: -13.522065162658691
    10. 'prev' → logprob: -13.647065162658691

Token 729: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.0311032235622406
    2. ' passenger' → logprob: -4.531103134155273
    3. ' p' → logprob: -4.781103134155273
    4. 'pass' → logprob: -4.906103134155273
    5. 'i' → logprob: -5.656103134155273
    6. 'person' → logprob: -8.156103134155273
    7. ' i' → logprob: -9.156103134155273
    8. ' person' → logprob: -9.906103134155273
    9. 'name' → logprob: -10.031103134155273
    10. 'idx' → logprob: -10.281103134155273

Token 730: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.004580007400363684
    2. 'in' → logprob: -5.754580020904541
    3. 'ass' → logprob: -6.879580020904541
    4. '       ' → logprob: -8.629579544067383
    5. '   ' → logprob: -9.004579544067383
    6. 'os' → logprob: -10.879579544067383
    7. ' ' → logprob: -11.504579544067383
    8. '           ' → logprob: -12.004579544067383
    9. '_index' → logprob: -12.254579544067383
    10. 'index' → logprob: -12.379579544067383

Token 731: ' passengers' (ID: 37252)
  Prédit: 'pass'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pass' → logprob: -4.024604277219623e-05
    2. ' passengers' → logprob: -10.125040054321289
    3. 'pas' → logprob: -17.00004005432129
    4. '(pass' → logprob: -17.25004005432129
    5. '   ' → logprob: -18.75004005432129
    6. ' pass' → logprob: -19.00004005432129
    7. 'passes' → logprob: -19.12504005432129
    8. '	pass' → logprob: -19.25004005432129
    9. ' ' → logprob: -19.25004005432129
    10. '
' → logprob: -19.87504005432129

Token 732: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.3528960645198822
    2. ':' → logprob: -1.2278960943222046
    3. '       ' → logprob: -5.727896213531494
    4. '           ' → logprob: -6.977896213531494
    5. '):
' → logprob: -9.727895736694336
    6. ':

' → logprob: -10.852895736694336
    7. '=' → logprob: -10.852895736694336
    8. '<|end|>' → logprob: -10.852895736694336
    9. '[' → logprob: -10.977895736694336
    10. ',' → logprob: -10.977895736694336

Token 733: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0069902921095490456
    2. ' if' → logprob: -6.381990432739258
    3. '        
' → logprob: -6.631990432739258
    4. ':' → logprob: -6.881990432739258
    5. '           ' → logprob: -7.006990432739258
    6. '   ' → logprob: -7.256990432739258
    7. '<|end|>' → logprob: -8.006990432739258
    8. ' 
' → logprob: -8.881990432739258
    9. ':
' → logprob: -9.131990432739258
    10. '    
' → logprob: -9.131990432739258

Token 734: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.09768492728471756
    2. ' if' → logprob: -2.472684860229492
    3. 'pos' → logprob: -5.222684860229492
    4. '           ' → logprob: -6.972684860229492
    5. 'idx' → logprob: -6.972684860229492
    6. 'i' → logprob: -7.347684860229492
    7. '       ' → logprob: -7.722684860229492
    8. ' pos' → logprob: -8.972684860229492
    9. 'seat' → logprob: -9.972684860229492
    10. 't' → logprob: -9.972684860229492

Token 735: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.005245022010058165
    2. ' p' → logprob: -5.255245208740234
    3. 'len' → logprob: -12.630245208740234
    4. '   ' → logprob: -13.255245208740234
    5. 'chairs' → logprob: -13.505245208740234
    6. ' ' → logprob: -13.630245208740234
    7. ''p' → logprob: -14.255245208740234
    8. '  ' → logprob: -14.255245208740234
    9. '           ' → logprob: -15.005245208740234
    10. ' len' → logprob: -15.130245208740234

Token 736: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.0881463885307312
    2. '==' → logprob: -2.588146448135376
    3. '[' → logprob: -4.713146209716797
    4. '=='' → logprob: -8.588146209716797
    5. ' =='' → logprob: -10.588146209716797
    6. '=="' → logprob: -11.838146209716797
    7. '=' → logprob: -11.838146209716797
    8. ' =' → logprob: -12.963146209716797
    9. '[]' → logprob: -13.213146209716797
    10. '	' → logprob: -13.838146209716797

Token 737: ' '' (ID: 461)
  Prédit: ''A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''A' → logprob: -0.0042868610471487045
    2. '"A' → logprob: -5.754286766052246
    3. 'A' → logprob: -7.504286766052246
    4. ' '' → logprob: -7.879286766052246
    5. ''' → logprob: -9.754286766052246
    6. '   ' → logprob: -10.004286766052246
    7. '('' → logprob: -11.254286766052246
    8. ''S' → logprob: -11.879286766052246
    9. '  ' → logprob: -11.879286766052246
    10. ' ' → logprob: -12.004286766052246

Token 738: 'A' (ID: 32)
  Prédit: 'A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.0012240358628332615
    2. ''A' → logprob: -6.751224040985107
    3. '"A' → logprob: -9.87622356414795
    4. ' A' → logprob: -14.62622356414795
    5. ''' → logprob: -14.62622356414795
    6. '```' → logprob: -15.25122356414795
    7. 'B' → logprob: -15.62622356414795
    8. '`' → logprob: -15.75122356414795
    9. '``' → logprob: -15.87622356414795
    10. 'a' → logprob: -16.001224517822266

Token 739: '':
' (ID: 7669)
  Prédit: '':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '':
' → logprob: -0.12214813381433487
    2. '':' → logprob: -2.247148036956787
    3. ''' → logprob: -5.247148036956787
    4. ' '' → logprob: -6.247148036956787
    5. ':' → logprob: -7.247148036956787
    6. ')' → logprob: -7.747148036956787
    7. ':
' → logprob: -8.247148513793945
    8. '):
' → logprob: -8.497148513793945
    9. '       ' → logprob: -8.997148513793945
    10. '':
' → logprob: -9.122148513793945

Token 740: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -1.0510870218276978
    2. ' i' → logprob: -1.0510870218276978
    3. '           ' → logprob: -1.4260870218276978
    4. '       ' → logprob: -3.926086902618408
    5. 'i' → logprob: -4.051086902618408
    6. ' idx' → logprob: -5.176086902618408
    7. '            
' → logprob: -6.301086902618408
    8. ' index' → logprob: -6.551086902618408
    9. ' for' → logprob: -6.801086902618408
    10. ' #' → logprob: -6.801086902618408

Token 741: ' pos' (ID: 1253)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pos' (adapté à ' pos') → logprob: -0.39430028200149536
    2. '               ' → logprob: -2.2693002223968506
    3. 'idx' → logprob: -2.3943002223968506
    4. 'i' → logprob: -2.6443002223968506
    5. ' pos' → logprob: -3.5193002223968506
    6. ' idx' → logprob: -3.8943002223968506
    7. ' i' → logprob: -5.39430046081543
    8. 'index' → logprob: -5.64430046081543
    9. '           ' → logprob: -7.39430046081543
    10. '       ' → logprob: -7.39430046081543

Token 742: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.061969030648469925
    2. ' =' → logprob: -2.811969041824341
    3. '_=' → logprob: -14.936968803405762
    4. '=
' → logprob: -15.811968803405762
    5. '=s' → logprob: -15.936968803405762
    6. '=A' → logprob: -15.936968803405762
    7. '=_' → logprob: -16.061969757080078
    8. '=cut' → logprob: -16.186969757080078
    9. '=int' → logprob: -16.686969757080078
    10. '=

' → logprob: -17.061969757080078

Token 743: ' seat' (ID: 15512)
  Prédit: 'seat'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'seat' → logprob: -0.0009115827269852161
    2. ' seat' → logprob: -7.000911712646484
    3. 'se' → logprob: -16.250911712646484
    4. '0' → logprob: -17.750911712646484
    5. ' ' → logprob: -18.625911712646484
    6. '   ' → logprob: -18.625911712646484
    7. 'seed' → logprob: -19.000911712646484
    8. 'Seat' → logprob: -19.125911712646484
    9. '       ' → logprob: -19.250911712646484
    10. 'sea' → logprob: -19.375911712646484

Token 744: '_A' (ID: 6829)
  Prédit: '_A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_A' → logprob: -6.704273118884885e-07
    2. 'A' → logprob: -15.000000953674316
    3. '_' → logprob: -15.500000953674316
    4. '_B' → logprob: -16.875
    5. '```' → logprob: -18.0
    6. '_D' → logprob: -18.5
    7. '`' → logprob: -19.375
    8. '_E' → logprob: -19.875
    9. ' _' → logprob: -20.375
    10. '\' → logprob: -20.625

Token 745: '(ch' (ID: 15574)
  Prédit: '(ch'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(ch' → logprob: -0.00022558939235750586
    2. 'chairs' → logprob: -8.500226020812988
    3. ' (' → logprob: -11.125226020812988
    4. ' chairs' → logprob: -13.750226020812988
    5. '(
' → logprob: -13.875226020812988
    6. 'ch' → logprob: -13.875226020812988
    7. '   ' → logprob: -14.125226020812988
    8. '(' → logprob: -14.125226020812988
    9. '[ch' → logprob: -14.125226020812988
    10. '(chars' → logprob: -14.625226020812988

Token 746: 'airs' (ID: 6498)
  Prédit: 'airs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'airs' → logprob: -5.200166469876422e-06
    2. 'chairs' → logprob: -13.500004768371582
    3. 'a' → logprob: -13.625004768371582
    4. 'air' → logprob: -14.125004768371582
    5. '[' → logprob: -14.750004768371582
    6. '#' → logprob: -14.875004768371582
    7. 'aires' → logprob: -14.875004768371582
    8. '_' → logprob: -15.625004768371582
    9. 'A' → logprob: -16.1250057220459
    10. '```' → logprob: -16.2500057220459

Token 747: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.04861370474100113
    2. ')
' → logprob: -3.0486137866973877
    3. '           ' → logprob: -11.423613548278809
    4. ')
' → logprob: -12.548613548278809
    5. '               ' → logprob: -12.673613548278809
    6. '<|end|>' → logprob: -13.048613548278809
    7. ' )' → logprob: -13.173613548278809
    8. ')

' → logprob: -13.173613548278809
    9. ']' → logprob: -14.173613548278809
    10. ' )
' → logprob: -14.923613548278809

Token 748: '               ' (ID: 506)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.16813664138317108
    2. '               ' → logprob: -2.0431365966796875
    3. '            
' → logprob: -4.7931365966796875
    4. '       ' → logprob: -5.0431365966796875
    5. '                   ' → logprob: -5.9181365966796875
    6. '                
' → logprob: -6.2931365966796875
    7. '
' → logprob: -6.9181365966796875
    8. '                    
' → logprob: -7.0431365966796875
    9. '   ' → logprob: -7.1681365966796875
    10. '<|end|>' → logprob: -7.4181365966796875

Token 749: ' chairs' (ID: 34049)
  Prédit: 'chairs'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'chairs' (adapté à ' chairs') → logprob: -0.09750491380691528
    2. ' chairs' → logprob: -2.5975048542022705
    3. 'ch' → logprob: -4.09750509262085
    4. '               ' → logprob: -7.34750509262085
    5. '           ' → logprob: -7.72250509262085
    6. ' ch' → logprob: -8.972504615783691
    7. '                   ' → logprob: -9.097504615783691
    8. '   ' → logprob: -9.222504615783691
    9. '       ' → logprob: -9.347504615783691
    10. '[ch' → logprob: -9.472504615783691

Token 750: '[pos' (ID: 48272)
  Prédit: '[pos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[pos' → logprob: -0.012720945291221142
    2. '[' → logprob: -4.637721061706543
    3. '[ch' → logprob: -5.887721061706543
    4. 'pos' → logprob: -10.137721061706543
    5. '[p' → logprob: -10.262721061706543
    6. '[:]' → logprob: -10.262721061706543
    7. '```' → logprob: -11.012721061706543
    8. ' [' → logprob: -11.637721061706543
    9. '[position' → logprob: -11.887721061706543
    10. '[
' → logprob: -12.137721061706543

Token 751: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.03145456314086914
    2. ']=' → logprob: -3.531454563140869
    3. '=' → logprob: -6.531454563140869
    4. ']='' → logprob: -8.406454086303711
    5. ' ]' → logprob: -11.531454086303711
    6. ' =' → logprob: -11.781454086303711
    7. '='' → logprob: -12.531454086303711
    8. '']' → logprob: -15.281454086303711
    9. ')' → logprob: -15.656454086303711
    10. ']==' → logprob: -15.906454086303711

Token 752: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.00018149138486478478
    2. ' =' → logprob: -8.625181198120117
    3. '='' → logprob: -13.250181198120117
    4. '=

' → logprob: -17.125181198120117
    5. ' ='' → logprob: -17.500181198120117
    6. ']=' → logprob: -17.500181198120117
    7. '=
' → logprob: -18.375181198120117
    8. ']' → logprob: -19.500181198120117
    9. ')=' → logprob: -19.875181198120117
    10. '＝' → logprob: -20.250181198120117

Token 753: ' '' (ID: 461)
  Prédit: ''A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''A' → logprob: -0.0004994167247787118
    2. 'A' → logprob: -7.625499248504639
    3. ' '' → logprob: -12.375499725341797
    4. ''' → logprob: -12.500499725341797
    5. '"A' → logprob: -13.500499725341797
    6. '`' → logprob: -14.375499725341797
    7. ''S' → logprob: -14.500499725341797
    8. '’A' → logprob: -14.625499725341797
    9. ''p' → logprob: -15.875499725341797
    10. '   ' → logprob: -16.500499725341797

Token 754: 'A' (ID: 32)
  Prédit: 'A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.00020616286201402545
    2. ''A' → logprob: -8.500205993652344
    3. ' A' → logprob: -13.625205993652344
    4. ''' → logprob: -14.125205993652344
    5. '"A' → logprob: -15.250205993652344
    6. 'А' → logprob: -16.375205993652344
    7. '`' → logprob: -16.625205993652344
    8. '	A' → logprob: -16.812705993652344
    9. '['' → logprob: -17.062705993652344
    10. '
' → logprob: -17.125205993652344

Token 755: ''
' (ID: 2207)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.0005021584220230579
    2. ''
' → logprob: -7.625502109527588
    3. ' '' → logprob: -11.750502586364746
    4. '"' → logprob: -12.875502586364746
    5. ')' → logprob: -14.125502586364746
    6. ''''' → logprob: -14.625502586364746
    7. '```' → logprob: -14.750502586364746
    8. ''s' → logprob: -15.125502586364746
    9. ''#' → logprob: -15.250502586364746
    10. '<|end|>' → logprob: -15.375502586364746

Token 756: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.4197315573692322
    2. '
' → logprob: -1.169731616973877
    3. 'elif' → logprob: -3.794731616973877
    4. ' elif' → logprob: -5.294731616973877
    5. '       ' → logprob: -5.669731616973877
    6. '```' → logprob: -7.794731616973877
    7. '   ' → logprob: -8.044731140136719
    8. '    
' → logprob: -8.669731140136719
    9. '<|end|>' → logprob: -9.544731140136719
    10. '            
' → logprob: -9.669731140136719

Token 757: ' elif' (ID: 9497)
  Prédit: 'elif'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'elif' (adapté à ' elif') → logprob: -0.23113426566123962
    2. ' elif' → logprob: -1.606134295463562
    3. '           ' → logprob: -5.606134414672852
    4. 'else' → logprob: -6.856134414672852
    5. ' else' → logprob: -7.606134414672852
    6. '
' → logprob: -8.481134414672852
    7. '       ' → logprob: -8.981134414672852
    8. 'el' → logprob: -9.356134414672852
    9. '   ' → logprob: -11.231134414672852
    10. ' 
' → logprob: -11.481134414672852

Token 758: ' p' (ID: 275)
  Prédit: ' p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' p' → logprob: -0.001337147317826748
    2. 'p' → logprob: -6.626337051391602
    3. ' ' → logprob: -12.501337051391602
    4. ' ' → logprob: -12.626337051391602
    5. ''' → logprob: -12.876337051391602
    6. ' space' → logprob: -14.501337051391602
    7. '(p' → logprob: -15.376337051391602
    8. 'space' → logprob: -15.751337051391602
    9. '    ' → logprob: -16.2513370513916
    10. 's' → logprob: -16.3763370513916

Token 759: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.008736773394048214
    2. '==' → logprob: -4.758736610412598
    3. ' =' → logprob: -9.258736610412598
    4. '=' → logprob: -11.008736610412598
    5. ' =='' → logprob: -12.258736610412598
    6. ' ' → logprob: -13.133736610412598
    7. '=='' → logprob: -13.883736610412598
    8. '[' → logprob: -14.133736610412598
    9. ' =="' → logprob: -14.508736610412598
    10. ' ' → logprob: -14.633736610412598

Token 760: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.00024500858853571117
    2. ' '' → logprob: -8.375245094299316
    3. '"' → logprob: -11.500245094299316
    4. '('' → logprob: -13.250245094299316
    5. 'B' → logprob: -14.250245094299316
    6. ''s' → logprob: -14.875245094299316
    7. ''S' → logprob: -15.125245094299316
    8. ''D' → logprob: -15.250245094299316
    9. 'space' → logprob: -15.500245094299316
    10. ' B' → logprob: -15.500245094299316

Token 761: 'B' (ID: 33)
  Prédit: 'B'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.0028111785650253296
    2. ''' → logprob: -5.877810955047607
    3. ' B' → logprob: -12.752811431884766
    4. '"B' → logprob: -14.002811431884766
    5. '`' → logprob: -14.252811431884766
    6. 'C' → logprob: -15.127811431884766
    7. '_B' → logprob: -15.877811431884766
    8. 'D' → logprob: -16.002811431884766
    9. '```' → logprob: -16.002811431884766
    10. 'A' → logprob: -16.127811431884766

Token 762: '':
' (ID: 7669)
  Prédit: ':
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.6630702018737793
    2. ':' → logprob: -1.0380702018737793
    3. '':
' → logprob: -2.4130702018737793
    4. '':' → logprob: -3.9130702018737793
    5. '               ' → logprob: -4.413070201873779
    6. ''' → logprob: -5.413070201873779
    7. '']:
' → logprob: -6.163070201873779
    8. '           ' → logprob: -6.913070201873779
    9. '']' → logprob: -7.538070201873779
    10. '```' → logprob: -9.038070678710938

Token 763: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.11451940983533859
    2. ':
' → logprob: -2.3645193576812744
    3. ':' → logprob: -4.4895195960998535
    4. '           ' → logprob: -6.2395195960998535
    5. '```' → logprob: -8.864519119262695
    6. '                ' → logprob: -9.239519119262695
    7. ' :
' → logprob: -9.239519119262695
    8. '              ' → logprob: -9.364519119262695
    9. '                
' → logprob: -9.489519119262695
    10. '       ' → logprob: -9.614519119262695

Token 764: ' pos' (ID: 1253)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pos' (adapté à ' pos') → logprob: -0.006725437473505735
    2. ' pos' → logprob: -5.006725311279297
    3. '               ' → logprob: -11.631725311279297
    4. '	pos' → logprob: -14.131725311279297
    5. '           ' → logprob: -15.256725311279297
    6. '[pos' → logprob: -16.506725311279297
    7. '_pos' → logprob: -16.756725311279297
    8. ',pos' → logprob: -17.006725311279297
    9. '(pos' → logprob: -17.631725311279297
    10. 'position' → logprob: -17.881725311279297

Token 765: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.12692810595035553
    2. '=' → logprob: -2.1269280910491943
    3. ' ' → logprob: -18.501928329467773
    4. '=
' → logprob: -18.876928329467773
    5. ' =
' → logprob: -19.251928329467773
    6. ')' → logprob: -19.626928329467773
    7. '＝' → logprob: -19.751928329467773
    8. '```' → logprob: -19.876928329467773
    9. '_=' → logprob: -20.001928329467773
    10. '	' → logprob: -20.626928329467773

Token 766: ' seat' (ID: 15512)
  Prédit: 'seat'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'seat' → logprob: -0.3868711292743683
    2. ' seat' → logprob: -1.136871099472046
    3. 'se' → logprob: -16.261871337890625
    4. '-seat' → logprob: -19.136871337890625
    5. 'Seat' → logprob: -19.761871337890625
    6. 'seed' → logprob: -20.386871337890625
    7. 'sea' → logprob: -21.636871337890625
    8. ' ' → logprob: -21.761871337890625
    9. '(se' → logprob: -22.136871337890625
    10. 'score' → logprob: -22.261871337890625

Token 767: '_B' (ID: 3201)
  Prédit: '_B'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_B' → logprob: -1.5451681974809617e-05
    2. 'B' → logprob: -11.500015258789062
    3. 'seat' → logprob: -12.500015258789062
    4. '```' → logprob: -14.500015258789062
    5. '(_' → logprob: -15.125015258789062
    6. '_A' → logprob: -15.250015258789062
    7. '_D' → logprob: -15.625015258789062
    8. ' seat' → logprob: -16.375015258789062
    9. '_C' → logprob: -17.125015258789062
    10. '(B' → logprob: -17.125015258789062

Token 768: '(ch' (ID: 15574)
  Prédit: '(ch'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(ch' → logprob: -3.214019307051785e-05
    2. ' (' → logprob: -10.375032424926758
    3. '(' → logprob: -14.750032424926758
    4. 'chairs' → logprob: -15.250032424926758
    5. ' chairs' → logprob: -16.000032424926758
    6. '[ch' → logprob: -16.625032424926758
    7. '(c' → logprob: -17.125032424926758
    8. '```' → logprob: -17.750032424926758
    9. '(
' → logprob: -18.375032424926758
    10. '(chars' → logprob: -18.625032424926758

Token 769: 'airs' (ID: 6498)
  Prédit: 'airs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'airs' → logprob: -0.015830231830477715
    2. '(ch' → logprob: -4.265830039978027
    3. 'air' → logprob: -7.390830039978027
    4. '(' → logprob: -7.765830039978027
    5. '(c' → logprob: -7.890830039978027
    6. 'chairs' → logprob: -9.390830039978027
    7. '(i' → logprob: -10.640830039978027
    8. '(chars' → logprob: -10.890830039978027
    9. 'ir' → logprob: -11.015830039978027
    10. 'aires' → logprob: -11.140830039978027

Token 770: ')
' (ID: 446)
  Prédit: '(ch'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(ch' → logprob: -0.0004540294758044183
    2. ' (' → logprob: -8.25045394897461
    3. ')' → logprob: -9.25045394897461
    4. ',' → logprob: -10.50045394897461
    5. '   ' → logprob: -10.62545394897461
    6. '[ch' → logprob: -10.87545394897461
    7. '       ' → logprob: -11.87545394897461
    8. '           ' → logprob: -12.75045394897461
    9. 'chairs' → logprob: -12.87545394897461
    10. '(
' → logprob: -13.00045394897461

Token 771: '               ' (ID: 506)
  Prédit: '(ch'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(ch' → logprob: -0.9627734422683716
    2. '           ' → logprob: -1.4627734422683716
    3. '[' → logprob: -1.8377734422683716
    4. '               ' → logprob: -2.212773323059082
    5. '(
' → logprob: -3.212773323059082
    6. '(' → logprob: -3.212773323059082
    7. '            
' → logprob: -4.587773323059082
    8. ' (' → logprob: -4.837773323059082
    9. '[
' → logprob: -5.837773323059082
    10. '                
' → logprob: -6.587773323059082

Token 772: ' chairs' (ID: 34049)
  Prédit: ' chairs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' chairs' → logprob: -0.5233665108680725
    2. 'chairs' (adapté à ' chairs') → logprob: -0.8983665108680725
    3. 'ch' → logprob: -8.648366928100586
    4. '               ' → logprob: -11.023366928100586
    5. 'chair' → logprob: -11.523366928100586
    6. '           ' → logprob: -11.898366928100586
    7. '_ch' → logprob: -11.898366928100586
    8. '                   ' → logprob: -12.398366928100586
    9. '(ch' → logprob: -12.523366928100586
    10. ' ch' → logprob: -13.023366928100586

Token 773: '[pos' (ID: 48272)
  Prédit: '[pos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[pos' → logprob: -1.1472419600977446e-06
    2. '[' → logprob: -14.000000953674316
    3. 'pos' → logprob: -15.125000953674316
    4. ' [' → logprob: -17.750001907348633
    5. '[position' → logprob: -17.875001907348633
    6. '```' → logprob: -17.875001907348633
    7. '[p' → logprob: -18.625001907348633
    8. '[
' → logprob: -19.375001907348633
    9. '\[' → logprob: -19.500001907348633
    10. '(pos' → logprob: -20.250001907348633

Token 774: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0005073997308500111
    2. ' ]' → logprob: -8.125507354736328
    3. ']=' → logprob: -8.875507354736328
    4. '=' → logprob: -9.750507354736328
    5. ' =' → logprob: -11.750507354736328
    6. ')' → logprob: -12.750507354736328
    7. '']' → logprob: -13.250507354736328
    8. ']='' → logprob: -15.000507354736328
    9. '[' → logprob: -15.750507354736328
    10. ']
' → logprob: -16.000507354736328

Token 775: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.04305102676153183
    2. ' =' → logprob: -3.16805100440979
    3. ']' → logprob: -10.668050765991211
    4. ')' → logprob: -11.293050765991211
    5. '<|end|>' → logprob: -11.793050765991211
    6. ''' → logprob: -13.043050765991211
    7. '='' → logprob: -13.168050765991211
    8. '=
' → logprob: -13.543050765991211
    9. ' ' → logprob: -14.043050765991211
    10. ']=' → logprob: -14.418050765991211

Token 776: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.0018077453132718801
    2. ' '' → logprob: -6.376807689666748
    3. 'B' → logprob: -9.251808166503906
    4. ' ' → logprob: -13.251808166503906
    5. ''A' → logprob: -13.376808166503906
    6. ''S' → logprob: -13.501808166503906
    7. ' B' → logprob: -13.751808166503906
    8. ''C' → logprob: -13.876808166503906
    9. '`' → logprob: -14.126808166503906
    10. '"B' → logprob: -14.251808166503906

Token 777: 'B' (ID: 33)
  Prédit: 'B'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.12704433500766754
    2. ''' → logprob: -2.127044439315796
    3. ' B' → logprob: -10.002044677734375
    4. '"B' → logprob: -10.127044677734375
    5. ' '' → logprob: -11.002044677734375
    6. ''b' → logprob: -13.127044677734375
    7. '"' → logprob: -13.502044677734375
    8. '')' → logprob: -13.752044677734375
    9. '`' → logprob: -14.002044677734375
    10. ''''' → logprob: -14.252044677734375

Token 778: ''
' (ID: 2207)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.05371275544166565
    2. '<|end|>' → logprob: -3.303712844848633
    3. '
' → logprob: -4.803712844848633
    4. '               ' → logprob: -5.053712844848633
    5. 'elif' → logprob: -8.303712844848633
    6. '<|end|>' → logprob: -8.678712844848633
    7. '       ' → logprob: -8.803712844848633
    8. '   ' → logprob: -9.303712844848633
    9. '                   ' → logprob: -10.053712844848633
    10. '            
' → logprob: -10.178712844848633

Token 779: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0016738721169531345
    2. 'elif' → logprob: -7.126673698425293
    3. ' elif' → logprob: -7.251673698425293
    4. '       ' → logprob: -9.001673698425293
    5. '   ' → logprob: -11.376673698425293
    6. '```' → logprob: -12.126673698425293
    7. '		' → logprob: -12.501673698425293
    8. '               ' → logprob: -12.626673698425293
    9. '<|end|>' → logprob: -12.751673698425293
    10. ' else' → logprob: -12.876673698425293

Token 780: ' elif' (ID: 9497)
  Prédit: ' elif'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' elif' → logprob: -0.6823328137397766
    2. 'elif' (adapté à ' elif') → logprob: -0.9323328137397766
    3. '           ' → logprob: -2.307332754135132
    4. '       ' → logprob: -7.182332992553711
    5. ' else' → logprob: -8.307332992553711
    6. 'else' → logprob: -8.932332992553711
    7. '	elif' → logprob: -8.932332992553711
    8. '   ' → logprob: -9.432332992553711
    9. '               ' → logprob: -11.307332992553711
    10. ' ' → logprob: -11.557332992553711

Token 781: ' p' (ID: 275)
  Prédit: ' p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' p' → logprob: -0.026383431628346443
    2. 'p' → logprob: -3.651383399963379
    3. ''p' → logprob: -10.526383399963379
    4. ''' → logprob: -10.651383399963379
    5. 'pos' → logprob: -10.776383399963379
    6. '           ' → logprob: -12.776383399963379
    7. ' ' → logprob: -13.151383399963379
    8. ' pos' → logprob: -13.276383399963379
    9. '(p' → logprob: -13.401383399963379
    10. ' '' → logprob: -14.276383399963379

Token 782: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.25198784470558167
    2. '==' → logprob: -1.5019878149032593
    3. '=='' → logprob: -10.00198745727539
    4. '=' → logprob: -12.50198745727539
    5. '==
' → logprob: -13.37698745727539
    6. ':' → logprob: -13.75198745727539
    7. ' =='' → logprob: -13.75198745727539
    8. ' ' → logprob: -14.00198745727539
    9. '[' → logprob: -14.00198745727539
    10. '===' → logprob: -14.12698745727539

Token 783: ' '' (ID: 461)
  Prédit: ''C'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''C' → logprob: -0.15061646699905396
    2. ''' → logprob: -2.025616407394409
    3. ' '' → logprob: -4.900616645812988
    4. 'C' → logprob: -7.900616645812988
    5. ''D' → logprob: -10.650616645812988
    6. ''S' → logprob: -10.650616645812988
    7. ' ' → logprob: -11.150616645812988
    8. ' C' → logprob: -11.275616645812988
    9. '"C' → logprob: -12.150616645812988
    10. '`' → logprob: -12.775616645812988

Token 784: 'C' (ID: 34)
  Prédit: 'C'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'C' → logprob: -0.0024920646101236343
    2. ''C' → logprob: -6.0024919509887695
    3. ''' → logprob: -11.62749195098877
    4. ' C' → logprob: -12.75249195098877
    5. 'p' → logprob: -13.00249195098877
    6. 'c' → logprob: -14.50249195098877
    7. '"C' → logprob: -14.75249195098877
    8. ''''' → logprob: -15.62749195098877
    9. 'D' → logprob: -15.75249195098877
    10. '`' → logprob: -16.127492904663086

Token 785: '':
' (ID: 7669)
  Prédit: ':
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.43795689940452576
    2. '):
' → logprob: -1.9379569292068481
    3. ':' → logprob: -2.3129568099975586
    4. '(pos' → logprob: -3.3129568099975586
    5. 'pos' → logprob: -3.8129568099975586
    6. '(ch' → logprob: -4.187956809997559
    7. '               ' → logprob: -5.312956809997559
    8. '):' → logprob: -5.312956809997559
    9. '[pos' → logprob: -5.562956809997559
    10. ')' → logprob: -5.562956809997559

Token 786: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.06436270475387573
    2. 'pos' → logprob: -2.8143627643585205
    3. ' pos' → logprob: -6.314362525939941
    4. '           ' → logprob: -7.814362525939941
    5. '```' → logprob: -9.939362525939941
    6. '	pos' → logprob: -10.439362525939941
    7. '(pos' → logprob: -10.564362525939941
    8. '
' → logprob: -11.189362525939941
    9. '              ' → logprob: -11.689362525939941
    10. ':
' → logprob: -11.939362525939941

Token 787: ' pos' (ID: 1253)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pos' (adapté à ' pos') → logprob: -7.505351095460355e-05
    2. ' pos' → logprob: -9.500075340270996
    3. '           ' → logprob: -15.625075340270996
    4. '	pos' → logprob: -18.50007438659668
    5. '               ' → logprob: -21.12507438659668
    6. '_pos' → logprob: -22.25007438659668
    7. '[pos' → logprob: -22.25007438659668
    8. '(pos' → logprob: -22.37507438659668
    9. 'position' → logprob: -22.50007438659668
    10. '       ' → logprob: -22.50007438659668

Token 788: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.25193214416503906
    2. '=' → logprob: -1.501932144165039
    3. '_' → logprob: -13.376932144165039
    4. '_=' → logprob: -14.751932144165039
    5. ' ' → logprob: -15.001932144165039
    6. '	' → logprob: -15.626932144165039
    7. '(' → logprob: -16.25193214416504
    8. '  ' → logprob: -16.62693214416504
    9. '   ' → logprob: -16.62693214416504
    10. 'space' → logprob: -16.75193214416504

Token 789: ' seat' (ID: 15512)
  Prédit: 'seat'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'seat' → logprob: -0.0019286326132714748
    2. ' seat' → logprob: -6.251928806304932
    3. 'chair' → logprob: -17.251928329467773
    4. 'se' → logprob: -17.876928329467773
    5. 'score' → logprob: -20.001928329467773
    6. 'seed' → logprob: -20.376928329467773
    7. '```' → logprob: -20.501928329467773
    8. 'Seat' → logprob: -20.626928329467773
    9. '-seat' → logprob: -20.626928329467773
    10. '   ' → logprob: -20.751928329467773

Token 790: '_C' (ID: 1720)
  Prédit: '_C'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_C' → logprob: -1.5048530030981055e-06
    2. 'C' → logprob: -13.875001907348633
    3. '_' → logprob: -15.250001907348633
    4. '```' → logprob: -15.625001907348633
    5. '_A' → logprob: -16.875001907348633
    6. '_D' → logprob: -17.375001907348633
    7. '_B' → logprob: -18.125001907348633
    8. '`' → logprob: -20.375001907348633
    9. '_c' → logprob: -20.750001907348633
    10. '	C' → logprob: -21.000001907348633

Token 791: '(ch' (ID: 15574)
  Prédit: '(ch'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(ch' → logprob: -1.4140441635390744e-05
    2. '(' → logprob: -12.000014305114746
    3. ' (' → logprob: -12.000014305114746
    4. '(c' → logprob: -13.625014305114746
    5. '(
' → logprob: -15.625014305114746
    6. '[ch' → logprob: -15.750014305114746
    7. 'chairs' → logprob: -17.00001335144043
    8. 'ch' → logprob: -17.00001335144043
    9. '(co' → logprob: -17.62501335144043
    10. '(chr' → logprob: -17.87501335144043

Token 792: 'airs' (ID: 6498)
  Prédit: 'airs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'airs' → logprob: -0.0807378888130188
    2. '(ch' → logprob: -2.580737829208374
    3. '(c' → logprob: -7.455738067626953
    4. 'chairs' → logprob: -7.455738067626953
    5. 'air' → logprob: -8.580738067626953
    6. '(' → logprob: -8.580738067626953
    7. 'ir' → logprob: -10.080738067626953
    8. ')' → logprob: -10.205738067626953
    9. '(chars' → logprob: -10.330738067626953
    10. '[' → logprob: -10.705738067626953

Token 793: ')
' (ID: 446)
  Prédit: '(ch'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(ch' → logprob: -0.000585918256547302
    2. ')' → logprob: -7.625586032867432
    3. 'chairs' → logprob: -10.125585556030273
    4. '[ch' → logprob: -11.125585556030273
    5. '   ' → logprob: -11.625585556030273
    6. ' (' → logprob: -11.875585556030273
    7. ')
' → logprob: -12.125585556030273
    8. ' chairs' → logprob: -12.375585556030273
    9. '(
' → logprob: -12.500585556030273
    10. '(' → logprob: -12.750585556030273

Token 794: '               ' (ID: 506)
  Prédit: 'chairs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'chairs' → logprob: -0.3339655101299286
    2. '               ' → logprob: -2.083965539932251
    3. 'ch' → logprob: -2.333965539932251
    4. '           ' → logprob: -3.208965539932251
    5. '            
' → logprob: -5.083965301513672
    6. '                
' → logprob: -5.083965301513672
    7. 'chair' → logprob: -6.458965301513672
    8. '(ch' → logprob: -6.958965301513672
    9. ' chairs' → logprob: -6.958965301513672
    10. '       ' → logprob: -7.083965301513672

Token 795: ' chairs' (ID: 34049)
  Prédit: 'chairs'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'chairs' (adapté à ' chairs') → logprob: -0.011073997244238853
    2. ' chairs' → logprob: -4.511074066162109
    3. 'ch' → logprob: -10.76107406616211
    4. 'chair' → logprob: -13.26107406616211
    5. 'chars' → logprob: -13.51107406616211
    6. ''ch' → logprob: -14.51107406616211
    7. '       ' → logprob: -15.88607406616211
    8. 'c' → logprob: -16.26107406616211
    9. '(ch' → logprob: -16.26107406616211
    10. '   ' → logprob: -16.38607406616211

Token 796: '[pos' (ID: 48272)
  Prédit: '[pos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[pos' → logprob: -3.070975071750581e-05
    2. 'pos' → logprob: -10.500030517578125
    3. '[' → logprob: -12.875030517578125
    4. '```' → logprob: -15.500030517578125
    5. '[position' → logprob: -15.750030517578125
    6. '[
' → logprob: -17.250030517578125
    7. '[p' → logprob: -17.500030517578125
    8. ' [' → logprob: -17.750030517578125
    9. '	pos' → logprob: -17.750030517578125
    10. ' pos' → logprob: -18.000030517578125

Token 797: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.002040817867964506
    2. ']=' → logprob: -6.502040863037109
    3. '=' → logprob: -8.12704086303711
    4. ' ]' → logprob: -8.87704086303711
    5. ')' → logprob: -9.50204086303711
    6. ']
' → logprob: -11.37704086303711
    7. ' =' → logprob: -12.00204086303711
    8. '[' → logprob: -12.37704086303711
    9. '']' → logprob: -13.25204086303711
    10. ']==' → logprob: -13.62704086303711

Token 798: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.007751317694783211
    2. ' =' → logprob: -4.88275146484375
    3. ']' → logprob: -9.00775146484375
    4. ']=' → logprob: -11.13275146484375
    5. ')' → logprob: -13.13275146484375
    6. '[' → logprob: -13.25775146484375
    7. '=
' → logprob: -13.38275146484375
    8. '<|end|>' → logprob: -14.13275146484375
    9. '='' → logprob: -14.25775146484375
    10. ' ' → logprob: -15.00775146484375

Token 799: ' '' (ID: 461)
  Prédit: ''C'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''C' → logprob: -0.04803476482629776
    2. 'p' → logprob: -4.04803466796875
    3. 'C' → logprob: -4.29803466796875
    4. ''' → logprob: -4.67303466796875
    5. ' '' → logprob: -5.79803466796875
    6. ''p' → logprob: -6.54803466796875
    7. ' p' → logprob: -6.79803466796875
    8. ' C' → logprob: -7.92303466796875
    9. 'pos' → logprob: -8.79803466796875
    10. 'c' → logprob: -9.29803466796875

Token 800: 'C' (ID: 34)
  Prédit: 'C'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'C' → logprob: -7.584239938296378e-06
    2. ''C' → logprob: -12.125007629394531
    3. ''' → logprob: -14.250007629394531
    4. ' C' → logprob: -14.500007629394531
    5. '#' → logprob: -14.875007629394531
    6. 'c' → logprob: -15.625007629394531
    7. 'p' → logprob: -16.00000762939453
    8. 'B' → logprob: -16.25000762939453
    9. 'A' → logprob: -16.25000762939453
    10. '')' → logprob: -17.00000762939453

Token 801: ''
' (ID: 2207)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.012863948941230774
    2. '               ' → logprob: -4.387864112854004
    3. '       ' → logprob: -9.387864112854004
    4. '
' → logprob: -9.387864112854004
    5. '<|end|>' → logprob: -9.637864112854004
    6. '                   ' → logprob: -10.012864112854004
    7. '		' → logprob: -10.512864112854004
    8. '   ' → logprob: -10.887864112854004
    9. ')' → logprob: -11.762864112854004
    10. '	       ' → logprob: -12.012864112854004

Token 802: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00035798799945041537
    2. '```' → logprob: -8.625357627868652
    3. ' elif' → logprob: -9.500357627868652
    4. '       ' → logprob: -10.125357627868652
    5. 'elif' → logprob: -10.250357627868652
    6. '               ' → logprob: -11.125357627868652
    7. '<|end|>' → logprob: -12.625357627868652
    8. '            
' → logprob: -13.125357627868652
    9. '          ' → logprob: -13.250357627868652
    10. '   ' → logprob: -13.250357627868652

Token 803: ' else' (ID: 1203)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.4456142783164978
    2. 'elif' → logprob: -1.0706143379211426
    3. ' elif' → logprob: -4.570614337921143
    4. 'else' (adapté à ' else') → logprob: -5.445614337921143
    5. '       ' → logprob: -6.570614337921143
    6. ' else' → logprob: -8.320613861083984
    7. '               ' → logprob: -8.570613861083984
    8. '   ' → logprob: -9.195613861083984
    9. '```' → logprob: -9.570613861083984
    10. 'el' → logprob: -10.945613861083984

Token 804: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.24115079641342163
    2. ':
' → logprob: -1.8661508560180664
    3. '               ' → logprob: -2.9911508560180664
    4. '           ' → logprob: -4.991150856018066
    5. '       ' → logprob: -6.866150856018066
    6. ' :' → logprob: -7.491150856018066
    7. ' :
' → logprob: -8.616150856018066
    8. '<|end|>' → logprob: -9.491150856018066
    9. '   ' → logprob: -9.741150856018066
    10. '                   ' → logprob: -9.741150856018066

Token 805: ' ' (ID: 220)
  Prédit: ' pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' pos' → logprob: -0.5165621638298035
    2. 'pos' → logprob: -1.7665622234344482
    3. '               ' → logprob: -2.2665622234344482
    4. '           ' → logprob: -2.6415622234344482
    5. '```' → logprob: -4.016561985015869
    6. '       ' → logprob: -4.766561985015869
    7. '<|end|>' → logprob: -5.141561985015869
    8. ' 
' → logprob: -5.516561985015869
    9. '
' → logprob: -6.141561985015869
    10. '	pos' → logprob: -6.391561985015869

Token 806: ' #' (ID: 1069)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pos' → logprob: -0.00035453110467642546
    2. '               ' → logprob: -8.875354766845703
    3. '           ' → logprob: -9.000354766845703
    4. ' pos' → logprob: -9.625354766845703
    5. '       ' → logprob: -11.875354766845703
    6. '#' → logprob: -12.125354766845703
    7. '	pos' → logprob: -12.750354766845703
    8. 'if' → logprob: -13.250354766845703
    9. '[pos' → logprob: -13.750354766845703
    10. '
' → logprob: -13.750354766845703

Token 807: ' D' (ID: 415)
  Prédit: 'D'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'D' → logprob: -0.5621390342712402
    2. 'pos' → logprob: -1.3121390342712402
    3. '               ' → logprob: -2.6871390342712402
    4. '           ' → logprob: -2.8121390342712402
    5. '       ' → logprob: -4.56213903427124
    6. '   ' → logprob: -4.56213903427124
    7. ' pos' → logprob: -5.81213903427124
    8. ' D' → logprob: -5.81213903427124
    9. '#' → logprob: -6.06213903427124
    10. ' ' → logprob: -7.93713903427124

Token 808: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.5317814946174622
    2. ':' → logprob: -1.4067814350128174
    3. ':
' → logprob: -2.1567814350128174
    4. '           ' → logprob: -3.1567814350128174
    5. '       ' → logprob: -5.1567816734313965
    6. '   ' → logprob: -7.7817816734313965
    7. '              ' → logprob: -7.7817816734313965
    8. '<|end|>' → logprob: -8.031781196594238
    9. '                   ' → logprob: -8.281781196594238
    10. '          ' → logprob: -8.406781196594238

Token 809: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.007999210618436337
    2. 'pos' → logprob: -5.382999420166016
    3. ' pos' → logprob: -6.007999420166016
    4. '           ' → logprob: -7.507999420166016
    5. '```' → logprob: -8.007999420166016
    6. '                   ' → logprob: -11.882999420166016
    7. '
' → logprob: -12.132999420166016
    8. '              ' → logprob: -12.257999420166016
    9. '	pos' → logprob: -13.132999420166016
    10. '       ' → logprob: -13.257999420166016

Token 810: ' pos' (ID: 1253)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pos' (adapté à ' pos') → logprob: -0.004258019383996725
    2. ' pos' → logprob: -5.504258155822754
    3. '           ' → logprob: -8.629258155822754
    4. '               ' → logprob: -14.254258155822754
    5. '	pos' → logprob: -16.254257202148438
    6. 'position' → logprob: -17.879257202148438
    7. '_pos' → logprob: -18.004257202148438
    8. '       ' → logprob: -18.004257202148438
    9. '```' → logprob: -18.379257202148438
    10. ',pos' → logprob: -18.754257202148438

Token 811: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.31326213479042053
    2. '=' → logprob: -1.3132621049880981
    3. ' ' → logprob: -15.938261985778809
    4. ' =
' → logprob: -15.938261985778809
    5. '```' → logprob: -16.688262939453125
    6. '=
' → logprob: -17.438262939453125
    7. ')' → logprob: -17.563262939453125
    8. '<|end|>' → logprob: -18.063262939453125
    9. '_' → logprob: -18.438262939453125
    10. 's' → logprob: -18.438262939453125

Token 812: ' seat' (ID: 15512)
  Prédit: 'seat'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'seat' → logprob: -0.1002068892121315
    2. ' seat' → logprob: -2.3502068519592285
    3. 'se' → logprob: -15.350207328796387
    4. 'seed' → logprob: -18.72520637512207
    5. 'Seat' → logprob: -18.72520637512207
    6. 'sea' → logprob: -19.85020637512207
    7. '-seat' → logprob: -20.22520637512207
    8. ' seated' → logprob: -20.85020637512207
    9. 'seal' → logprob: -20.85020637512207
    10. 'score' → logprob: -20.97520637512207

Token 813: '_D' (ID: 2958)
  Prédit: '_D'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_D' → logprob: -9.253090865968261e-06
    2. 'D' → logprob: -11.750009536743164
    3. '```' → logprob: -13.875009536743164
    4. '_' → logprob: -15.000009536743164
    5. '`' → logprob: -17.625009536743164
    6. '
' → logprob: -19.000009536743164
    7. '_C' → logprob: -19.625009536743164
    8. '_A' → logprob: -20.125009536743164
    9. '_
' → logprob: -20.250009536743164
    10. ' _' → logprob: -20.500009536743164

Token 814: '(ch' (ID: 15574)
  Prédit: '(ch'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(ch' → logprob: -2.570319702499546e-05
    2. ' (' → logprob: -11.250025749206543
    3. 'chairs' → logprob: -11.375025749206543
    4. ' chairs' → logprob: -14.500025749206543
    5. '(c' → logprob: -15.125025749206543
    6. '(' → logprob: -15.250025749206543
    7. '[ch' → logprob: -16.125024795532227
    8. 'ch' → logprob: -16.750024795532227
    9. '(
' → logprob: -18.125024795532227
    10. '   ' → logprob: -18.750024795532227

Token 815: 'airs' (ID: 6498)
  Prédit: 'airs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'airs' → logprob: -0.0005336135509423912
    2. 'chairs' → logprob: -8.500534057617188
    3. 'air' → logprob: -8.625534057617188
    4. '_' → logprob: -10.625534057617188
    5. '```' → logprob: -11.125534057617188
    6. '[' → logprob: -11.375534057617188
    7. 'A' → logprob: -11.625534057617188
    8. '(ch' → logprob: -11.625534057617188
    9. 'a' → logprob: -11.625534057617188
    10. ')' → logprob: -11.875534057617188

Token 816: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.34389644861221313
    2. ')
' → logprob: -1.3438963890075684
    3. '[ch' → logprob: -3.8438963890075684
    4. '(ch' → logprob: -5.093896389007568
    5. ')[' → logprob: -6.593896389007568
    6. 'chairs' → logprob: -7.593896389007568
    7. '[' → logprob: -8.843896865844727
    8. '           ' → logprob: -9.343896865844727
    9. '       ' → logprob: -9.468896865844727
    10. '   ' → logprob: -9.593896865844727

Token 817: '               ' (ID: 506)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.21171696484088898
    2. ' chairs' → logprob: -2.336716890335083
    3. 'chairs' → logprob: -2.836716890335083
    4. '               ' → logprob: -3.586716890335083
    5. '   ' → logprob: -5.711717128753662
    6. '       ' → logprob: -5.836717128753662
    7. '                   ' → logprob: -7.461717128753662
    8. 'ch' → logprob: -8.461716651916504
    9. '```' → logprob: -8.461716651916504
    10. '            
' → logprob: -8.711716651916504

Token 818: ' chairs' (ID: 34049)
  Prédit: 'chairs'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'chairs' (adapté à ' chairs') → logprob: -0.6329744458198547
    2. ' chairs' → logprob: -0.7579744458198547
    3. 'ch' → logprob: -8.007974624633789
    4. 'chair' → logprob: -10.882974624633789
    5. '       ' → logprob: -12.632974624633789
    6. '```' → logprob: -13.132974624633789
    7. ' ch' → logprob: -13.507974624633789
    8. '_ch' → logprob: -13.507974624633789
    9. ' ' → logprob: -13.632974624633789
    10. 'chars' → logprob: -13.757974624633789

Token 819: '[pos' (ID: 48272)
  Prédit: '[pos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[pos' → logprob: -3.054500666621607e-06
    2. '[' → logprob: -13.00000286102295
    3. 'pos' → logprob: -14.50000286102295
    4. ' [' → logprob: -16.500003814697266
    5. '```' → logprob: -17.125003814697266
    6. '[position' → logprob: -17.250003814697266
    7. '[
' → logprob: -18.500003814697266
    8. '[int' → logprob: -18.875003814697266
    9. '_pos' → logprob: -19.000003814697266
    10. ' pos' → logprob: -19.125003814697266

Token 820: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0014284518547356129
    2. ']=' → logprob: -7.001428604125977
    3. '=' → logprob: -7.626428604125977
    4. ' ]' → logprob: -10.876428604125977
    5. ' =' → logprob: -12.251428604125977
    6. ']='' → logprob: -13.001428604125977
    7. ')' → logprob: -13.501428604125977
    8. '[' → logprob: -13.626428604125977
    9. ']==' → logprob: -14.626428604125977
    10. '<|end|>' → logprob: -15.876428604125977

Token 821: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0009118211455643177
    2. ' =' → logprob: -7.000911712646484
    3. '='' → logprob: -15.375911712646484
    4. '=
' → logprob: -16.625911712646484
    5. ' ='' → logprob: -17.875911712646484
    6. '=

' → logprob: -18.500911712646484
    7. ')' → logprob: -20.000911712646484
    8. '＝' → logprob: -20.750911712646484
    9. ' =
' → logprob: -21.000911712646484
    10. '<|end|>' → logprob: -21.375911712646484

Token 822: ' '' (ID: 461)
  Prédit: ''D'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''D' → logprob: -0.48890420794487
    2. ''' → logprob: -0.9889042377471924
    3. ' '' → logprob: -4.238903999328613
    4. 'D' → logprob: -8.488903999328613
    5. ''d' → logprob: -10.238903999328613
    6. ' D' → logprob: -10.488903999328613
    7. ''S' → logprob: -11.488903999328613
    8. ' ' → logprob: -11.988903999328613
    9. '"D' → logprob: -13.238903999328613
    10. ''A' → logprob: -13.988903999328613

Token 823: 'D' (ID: 35)
  Prédit: ''D'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''D' → logprob: -0.012597831897437572
    2. 'D' → logprob: -4.387598037719727
    3. ''' → logprob: -9.637598037719727
    4. ''d' → logprob: -11.512598037719727
    5. '"D' → logprob: -12.137598037719727
    6. ''C' → logprob: -13.137598037719727
    7. ' '' → logprob: -14.012598037719727
    8. ''S' → logprob: -14.137598037719727
    9. ''''' → logprob: -14.262598037719727
    10. ''A' → logprob: -14.512598037719727

Token 824: ''
' (ID: 2207)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 825: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.47138169407844543
    2. '
' → logprob: -1.721381664276123
    3. '       ' → logprob: -1.846381664276123
    4. 'print' → logprob: -3.346381664276123
    5. '```' → logprob: -6.221381664276123
    6. '    
' → logprob: -6.721381664276123
    7. ' print' → logprob: -7.721381664276123
    8. '        
' → logprob: -8.221382141113281
    9. '  
' → logprob: -10.846382141113281
    10. '
' → logprob: -10.971382141113281

Token 826: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.07384424656629562
    2. ' print' → logprob: -2.6988441944122314
    3. '       ' → logprob: -5.5738444328308105
    4. '   ' → logprob: -9.698843955993652
    5. '
' → logprob: -11.198843955993652
    6. ' for' → logprob: -11.573843955993652
    7. '```' → logprob: -11.573843955993652
    8. 'for' → logprob: -12.073843955993652
    9. 'result' → logprob: -13.323843955993652
    10. 'break' → logprob: -14.448843955993652

Token 827: '('' (ID: 706)
  Prédit: '(''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('' → logprob: -0.032159194350242615
    2. '("' → logprob: -3.5321590900421143
    3. '(' → logprob: -6.032159328460693
    4. '()' → logprob: -12.782158851623535
    5. '(""' → logprob: -13.532158851623535
    6. '(len' → logprob: -14.782158851623535
    7. '("")' → logprob: -15.032158851623535
    8. '('',' → logprob: -15.782158851623535
    9. '(*' → logprob: -15.907158851623535
    10. '(('' → logprob: -15.907158851623535

Token 828: ''.' (ID: 6120)
  Prédit: '''.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '''.' → logprob: -0.0021545456256717443
    2. '"' → logprob: -6.377154350280762
    3. '''' → logprob: -8.752154350280762
    4. '('' → logprob: -8.877154350280762
    5. ''' → logprob: -9.377154350280762
    6. ' ''.' → logprob: -9.752154350280762
    7. ''',' → logprob: -12.877154350280762
    8. ''.' → logprob: -12.877154350280762
    9. '''
' → logprob: -12.877154350280762
    10. '['' → logprob: -14.127154350280762

Token 829: 'join' (ID: 10891)
  Prédit: 'join'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'join' → logprob: -3.8889261304575484e-06
    2. ' join' → logprob: -13.125003814697266
    3. 'print' → logprob: -14.125003814697266
    4. '```' → logprob: -14.500003814697266
    5. 'j' → logprob: -14.750003814697266
    6. 'strip' → logprob: -16.375003814697266
    7. 'write' → logprob: -16.500003814697266
    8. 'jo' → logprob: -16.500003814697266
    9. '''.' → logprob: -17.250003814697266
    10. '(join' → logprob: -17.875003814697266

Token 830: '(ch' (ID: 15574)
  Prédit: '(ch'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(ch' → logprob: -1.4021237802808173e-05
    2. ')' → logprob: -12.125014305114746
    3. 'chairs' → logprob: -12.125014305114746
    4. '[ch' → logprob: -13.125014305114746
    5. ')(' → logprob: -14.375014305114746
    6. 'ch' → logprob: -15.250014305114746
    7. '```' → logprob: -16.75001335144043
    8. '(c' → logprob: -16.75001335144043
    9. '/ch' → logprob: -17.00001335144043
    10. ' chairs' → logprob: -17.62501335144043

Token 831: 'airs' (ID: 6498)
  Prédit: 'airs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'airs' → logprob: -5.44312788406387e-05
    2. 'a' → logprob: -10.250054359436035
    3. 'chairs' → logprob: -11.875054359436035
    4. 'air' → logprob: -12.000054359436035
    5. 'ars' → logprob: -13.000054359436035
    6. '[' → logprob: -13.500054359436035
    7. '#' → logprob: -14.250054359436035
    8. 'aires' → logprob: -15.000054359436035
    9. '```' → logprob: -15.000054359436035
    10. '
' → logprob: -15.750054359436035

Token 832: '))


' (ID: 49252)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.023788442835211754
    2. '))' → logprob: -3.7737884521484375
    3. '())' → logprob: -7.5237884521484375
    4. '()' → logprob: -13.773788452148438
    5. '})' → logprob: -14.773788452148438
    6. '()))' → logprob: -14.898788452148438
    7. '])' → logprob: -15.023788452148438
    8. ')))' → logprob: -15.273788452148438
    9. ')`' → logprob: -16.148788452148438
    10. ')")' → logprob: -16.148788452148438

Token 833: 'if' (ID: 366)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 834: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.2519910931587219
    2. '__' → logprob: -1.5019910335540771
    3. '_name' → logprob: -10.876991271972656
    4. 'name' → logprob: -11.001991271972656
    5. ' ' → logprob: -12.001991271972656
    6. '_' → logprob: -12.251991271972656
    7. '___' → logprob: -12.751991271972656
    8. 'Name' → logprob: -13.001991271972656
    9. ' ' → logprob: -13.126991271972656
    10. 'if' → logprob: -13.626991271972656

Token 835: 'name' (ID: 897)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '__' → logprob: -0.051816798746585846
    2. '==' → logprob: -3.426816701889038
    3. ' ==' → logprob: -5.051816940307617
    4. '=="' → logprob: -5.301816940307617
    5. '=='' → logprob: -5.676816940307617
    6. '__.__' → logprob: -6.551816940307617
    7. '.__' → logprob: -7.176816940307617
    8. '```' → logprob: -7.801816940307617
    9. 'if' → logprob: -8.926816940307617
    10. '[' → logprob: -9.926816940307617

Token 836: '__' (ID: 771)
  Prédit: '__'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -1.580929347255733e-05
    2. '__.__' → logprob: -11.625016212463379
    3. '==' → logprob: -12.000016212463379
    4. '__('' → logprob: -15.250016212463379
    5. '=="' → logprob: -16.625015258789062
    6. '__.' → logprob: -16.875015258789062
    7. '___' → logprob: -16.875015258789062
    8. '__
' → logprob: -17.000015258789062
    9. '____' → logprob: -17.125015258789062
    10. '=='' → logprob: -17.375015258789062

Token 837: ' ==' (ID: 951)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.8011142015457153
    2. ' ==' → logprob: -1.0511142015457153
    3. '==' → logprob: -1.8011142015457153
    4. '=='' → logprob: -3.426114082336426
    5. '=="' → logprob: -5.551114082336426
    6. ''' → logprob: -10.551114082336426
    7. '['' → logprob: -11.176114082336426
    8. '__.__' → logprob: -11.426114082336426
    9. '__('' → logprob: -12.051114082336426
    10. '[' → logprob: -12.176114082336426

Token 838: ' "__' (ID: 27367)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.5759913921356201
    2. ''' → logprob: -0.8259913921356201
    3. '__' → logprob: -9.9509916305542
    4. ' "__' → logprob: -12.9509916305542
    5. ' '__' → logprob: -14.2009916305542
    6. '   ' → logprob: -15.0759916305542
    7. ''name' → logprob: -15.7009916305542
    8. ''"' → logprob: -16.075990676879883
    9. '"name' → logprob: -16.200990676879883
    10. ''s' → logprob: -16.325990676879883

Token 839: 'main' (ID: 7731)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.3164355754852295
    2. 'main' → logprob: -1.3164355754852295
    3. '"' → logprob: -6.066435813903809
    4. ''' → logprob: -7.191435813903809
    5. 'name' → logprob: -9.316435813903809
    6. '__":
' → logprob: -13.191435813903809
    7. '___' → logprob: -14.441435813903809
    8. '_main' → logprob: -14.816435813903809
    9. 'built' → logprob: -14.816435813903809
    10. ' main' → logprob: -15.191435813903809

Token 840: '__":
' (ID: 49892)
  Prédit: '__":
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__":
' → logprob: -0.08875785768032074
    2. '__' → logprob: -2.9637577533721924
    3. '__':
' → logprob: -3.5887577533721924
    4. '():
' → logprob: -5.2137579917907715
    5. '__()
' → logprob: -9.963757514953613
    6. '()' → logprob: -10.338757514953613
    7. '__:' → logprob: -10.463757514953613
    8. '__["' → logprob: -11.213757514953613
    9. '==' → logprob: -11.213757514953613
    10. '().__' → logprob: -11.463757514953613

Token 841: '   ' (ID: 271)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.5887730717658997
    2. '   ' → logprob: -0.8387730717658997
    3. ' main' → logprob: -4.838773250579834
    4. '	main' → logprob: -5.338773250579834
    5. '```' → logprob: -11.463772773742676
    6. '_main' → logprob: -11.588772773742676
    7. '(main' → logprob: -12.213772773742676
    8. '    
' → logprob: -13.088772773742676
    9. '
' → logprob: -13.088772773742676
    10. ' ' → logprob: -14.338772773742676

Token 842: ' main' (ID: 2758)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' (adapté à ' main') → logprob: -1.9361264946837764e-07
    2. ' main' → logprob: -15.75
    3. '	main' → logprob: -21.375
    4. '(main' → logprob: -23.875
    5. '_main' → logprob: -25.0
    6. 'import' → logprob: -25.125
    7. '.main' → logprob: -25.25
    8. '   ' → logprob: -25.5
    9. 'Main' → logprob: -27.375
    10. 'mainwindow' → logprob: -27.5

Token 843: '()' (ID: 416)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 841
Tokens correctement prédits (1ère position, stricte): 366
Tokens correctement prédits (1ère position, avec adaptation): 389
Tokens correctement prédits (top 10): 702
Précision stricte (1ère position): 43.52%
Précision adaptée (1ère position): 46.25%
Précision (top 10): 83.47%
================================================================================
