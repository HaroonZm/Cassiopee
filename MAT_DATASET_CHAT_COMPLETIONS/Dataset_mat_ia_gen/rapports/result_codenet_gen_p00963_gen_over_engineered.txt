================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:07:27
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
import math
from abc import ABC, abstractmethod
from typing import Tuple, Dict, List, Optional

# Constants for vertices
class Vertex:
    A = 'A'
    B = 'B'
    C = 'C'
    D = 'D'

# Represents an immutable Edge between two vertices, unordered
class Edge:
    def __init__(self, v1: str, v2: str):
        if v1 == v2:
            raise ValueError("Edge endpoints must be distinct")
        self.vs = tuple(sorted((v1, v2)))

    def __eq__(self, other):
        return isinstance(other, Edge) and self.vs == other.vs

    def __hash__(self):
        return hash(self.vs)

    def __repr__(self):
        return f"{self.vs[0]}{self.vs[1]}"

# Represents a Face of the tetrahedron, identified by its 3 vertices, sorted
class Face:
    def __init__(self, v1: str, v2: str, v3: str):
        vertices = sorted((v1, v2, v3))
        if len(set(vertices)) != 3:
            raise ValueError("Face must have three distinct vertices")
        self.vs = tuple(vertices)

    def __eq__(self, other):
        return isinstance(other, Face) and self.vs == other.vs

    def __hash__(self):
        return hash(self.vs)

    def __repr__(self):
        return f"Face{''.join(self.vs)}"

    def contains_vertex(self, v: str) -> bool:
        return v in self.vs

    def contains_edge(self, e: Edge) -> bool:
        return e.vs[0] in self.vs and e.vs[1] in self.vs

# Abstract class for a Worm's path on faces and edges
class WormPath(ABC):

    @abstractmethod
    def position(self) -> Tuple[Face, Tuple[float, float]]:
        """
        Returns the face where the worm stopped, and the local 2D coordinates of the position.
        Coordinates parametrized on the face, unit edge length basis.
        """
        pass

# Concrete class for the regular tetrahedron geometry and path computations
class TetrahedronGeometry:
    def __init__(self):
        # Define vertices for the regular tetrahedron in 3D space, for vector computations
        self.vertices_3d = {
            Vertex.A: (1, 1, 1),
            Vertex.B: (1, -1, -1),
            Vertex.C: (-1, 1, -1),
            Vertex.D: (-1, -1, 1)
        }
        self.edges = set([
            Edge(Vertex.A, Vertex.B),
            Edge(Vertex.A, Vertex.C),
            Edge(Vertex.A, Vertex.D),
            Edge(Vertex.B, Vertex.C),
            Edge(Vertex.B, Vertex.D),
            Edge(Vertex.C, Vertex.D)
        ])
        # Faces as sets of vertices
        self.faces = [
            Face(Vertex.A, Vertex.B, Vertex.C),
            Face(Vertex.A, Vertex.B, Vertex.D),
            Face(Vertex.A, Vertex.C, Vertex.D),
            Face(Vertex.B, Vertex.C, Vertex.D),
        ]
        # Map from unordered edge to adjacent faces (exactly 2)
        self.edge_to_faces: Dict[Edge, List[Face]] = {}
        for e in self.edges:
            self.edge_to_faces[e] = []
            for f in self.faces:
                if f.contains_edge(e):
                    self.edge_to_faces[e].append(f)
        # Check validity: each edge belongs to exactly two faces
        for e, flist in self.edge_to_faces.items():
            if len(flist) != 2:
                raise ValueError(f"Edge {e} does not belong to exactly two faces")

        # Precompute orthonormal coordinate basis for each face: used for 2D parametrization and angles
        # For each face, store tuple (origin=vertexA in face, vector_u, vector_v) defining 2D coords in plane
        self.face_bases: Dict[Face, Tuple[Tuple[float,float,float], Tuple[float,float,float], Tuple[float,float,float]]] = {}
        for f in self.faces:
            # Pick vertex with smallest alphabetical order as origin for face plane 2D coords
            sorted_vs = sorted(f.vs)
            origin = self.vertices_3d[sorted_vs[0]]
            v1 = self.vertices_3d[sorted_vs[1]]
            v2 = self.vertices_3d[sorted_vs[2]]
            # Basis vectors in face plane (v1-origin) and (v2-origin)
            u_raw = vector_sub(v1, origin)
            v_raw = vector_sub(v2, origin)
            # Normalize u_raw to unit length
            u = normalize(u_raw)
            # Project v_raw to plane orthogonal to u
            v_proj = vector_sub(v_raw, scalar_mult(u, dot(v_raw, u)))
            v = normalize(v_proj)
            self.face_bases[f] = (origin, u, v)

    def get_face_opposite_vertex(self, vertex: str) -> Face:
        # The face opposite to a vertex is the one not containing that vertex
        for f in self.faces:
            if vertex not in f.vs:
                return f
        raise ValueError(f"No face opposite to vertex {vertex}")

    def get_face_from_vertices(self, v1: str, v2: str, v3: str) -> Face:
        return Face(v1, v2, v3)

    def get_opposite_vertex_of_edge_in_face(self, edge: Edge, face: Face) -> str:
        # face has 3 vertices - edge has 2 - the remaining vertex in face is opposite vertex on face to edge
        for v in face.vs:
            if v not in edge.vs:
                return v
        raise ValueError(f"Face {face} does not contain vertices outside edge {edge}")

    def face_frame_to_3d(self, face: Face, u_coord: float, v_coord: float) -> Tuple[float, float, float]:
        # Map 2D coordinates in face to 3D coordinates
        origin, u, v = self.face_bases[face]
        p = vector_add(origin, vector_add(scalar_mult(u,u_coord), scalar_mult(v,v_coord)))
        return p

    def vector_angle_deg(self, v1: Tuple[float,float,float], v2: Tuple[float,float,float]) -> float:
        # Returns angle between vectors in degrees
        a = normalize(v1)
        b = normalize(v2)
        c = dot(a,b)
        c = max(min(c,1.0), -1.0)
        return math.degrees(math.acos(c))

    def vector_rotate_around_axis(self, v: Tuple[float,float,float], axis: Tuple[float,float,float], angle_deg: float) -> Tuple[float,float,float]:
        # Rodrigues' rotation formula to rotate v in 3D around unit vector axis by angle in degrees
        angle = math.radians(angle_deg)
        k = normalize(axis)
        cos_theta = math.cos(angle)
        sin_theta = math.sin(angle)
        v_rot = vector_add(
            scalar_mult(v, cos_theta),
            vector_add(
                scalar_mult(cross(k, v), sin_theta),
                scalar_mult(k, dot(k,v)*(1-cos_theta))
            )
        )
        return v_rot

# Vector utilities
def vector_sub(a, b):
    return tuple(x - y for x,y in zip(a,b))

def vector_add(a, b):
    return tuple(x + y for x,y in zip(a,b))

def dot(a,b):
    return sum(x*y for x,y in zip(a,b))

def cross(a,b):
    return (a[1]*b[2]-a[2]*b[1], a[2]*b[0]-a[0]*b[2], a[0]*b[1]-a[1]*b[0])

def length(v):
    return math.sqrt(dot(v,v))

def normalize(v):
    l = length(v)
    if l == 0:
        raise ValueError("Zero length vector")
    return tuple(x/l for x in v)

def angle_between_vectors_deg(u, v):
    return math.degrees(math.acos(max(min(dot(normalize(u), normalize(v)),1),-1)))

# WormDirection abstracts the initial direction across the first crossed edge on initial face
class WormDirection:
    def __init__(self, tetra: TetrahedronGeometry,
                 first_edge_str: str,
                 angle_deg: int):
        """
        first_edge_str: like 'BC', 'CD', 'DB', unordered edge crossed first
        angle_deg: angle in degrees (1 to 59) between edge AX and worm's initial direction in face AX Y
        """
        # Parse first edge vertices
        e_vertices = tuple(first_edge_str)
        if len(e_vertices) != 2 or set(e_vertices) - {'B','C','D'}:
            raise ValueError(f"Invalid first edge string: {first_edge_str}")
        # The first face is triangle AXY (A + first_edge vertices)
        vX, vY = e_vertices
        self.first_edge = Edge(vX, vY)
        self.angle_deg = angle_deg
        self.tetra = tetra

        # Determine first face = Face(A, X, Y)
        self.first_face = tetra.get_face_from_vertices(Vertex.A, vX, vY)
        # Point A coords
        A3d = tetra.vertices_3d[Vertex.A]
        X3d = tetra.vertices_3d[vX]
        Y3d = tetra.vertices_3d[vY]

        # Compute initial direction vector on first face:
        # Reference direction is edge A X
        # We rotate edge A X around axis perpendicular to face AXY (vertex order A,X,Y) by angle_deg towards edge A Y
        # Find plane normal via cross(A->X, A->Y)
        vecAX = vector_sub(X3d, A3d)
        vecAY = vector_sub(Y3d, A3d)
        normal = normalize(cross(vecAX, vecAY))

        # To find the sign (direction of rotation) toward AY from AX, we check if cross(AX, dir) has positive component on normal. Rotate AX by angle_deg towards AY.
        # Angle between AX and AY < 60° actually (equilateral)
        # Since worm's angle d is the smaller angle between AX and worm direction measured inside face triangle, rotation is from AX towards AY inside plane.

        # Let's compute base angle AX->AY in degrees for sanity (should be 60°)
        base_angle = angle_between_vectors_deg(vecAX, vecAY)
        if not (59.9 < base_angle < 60.1):
            # numerical safety, tetrahedron equilateral edges have 60° angles on faces
            pass

        # Compute rotation direction: positive rotation around normal to bring AX to AY
        # We express worm vector as rotating AX by +d degrees toward AY inside the face plane, so rotation axis is normal
        self.initial_direction = tetra.vector_rotate_around_axis(vecAX, normal, angle_deg)

        # Normalize direction projected in face plane (should be unit vector)
        self.initial_direction = normalize(self.initial_direction)

# Worm crawl simulation on the tetrahedron surface
class WormSimulator(WormPath):
    def __init__(self, tetra: TetrahedronGeometry,
                 first_edge_str: str,
                 angle_deg: int,
                 trail_length: int):
        self.tetra = tetra
        self.first_edge_str = first_edge_str
        self.angle_deg = angle_deg
        self.trail_length = trail_length
        self.direction = WormDirection(tetra, first_edge_str, angle_deg)
        # The worm starts at vertex A on face AxY (A + edge vertices)
        self.current_face = self.direction.first_face
        self.position_on_face = (0.0,0.0) # At vertex A in face coords, we will parametrize position as (dist to A along base vectors)
        # The initial position in 2D coords of the face is origin at vertex A (0,0)
        # The initial direction vector in 3D is self.direction.initial_direction

    def simulate(self) -> Tuple[Face, Tuple[float, float]]:
        """
        Simulate the worm crawling on the tetrahedron surface starting at vertex A on initial face,
        with initial 3D direction vector.

        The worm moves straight ahead on the current face until it hits an edge,
        then crosses to the adjacent face, preserving the angle of crossing relative to the crossed edge.

        The worm stops after travelling trail_length units along the surface (edges have unit length).
        Because the trail length is an integer and the problem introduces tolerances, we can simulate stepwise.

        Returns the final face and 2D position (local face coordinates) of the worm's stop point.
        """
        total_len = self.trail_length
        pos2d = (0.0, 0.0)
        face = self.current_face
        dir3d = self.direction.initial_direction
        traveled = 0.0

        # Utility to get 2D direction vector on face plane from 3D direction vector
        def project_dir_to_face_2d(face: Face, dir3d: Tuple[float,float,float]) -> Tuple[float,float]:
            origin, u, v = self.tetra.face_bases[face]
            # dir3d projected onto plane(u,v) basis: (u·dir3d, v·dir3d)
            return (dot(dir3d,u), dot(dir3d,v))

        # Utility to find intersection distance along direction until edge is hit on current face
        # The face is triangle (A,X,Y) with local 2D coords
        # Current position pos2d, direction vector 2ddir
        # Need to find minimal positive t>0 such that pos2d + t*2ddir intersects triangle edge (except the one facing back to starting vertex)
        # We exclude the vertex A from intersections since worm never stops near vertices except start.
        # The problem states worms are always more than 0.001 distant from edges and vertices at stop.
        # The method is to compute intersection with each edge segment.
        def find_edge_intersection(face: Face, pos2d: Tuple[float,float], dir2d: Tuple[float,float]) -> Tuple[float, Edge]:
            # face vertices in 2D coords: A(0,0), B at u=1,0 or v=1? The base is arbitrary but unit length edges
            # Actually, on face_AXY, the edge lengths are unit.
            # The base is set such that origin = A, u = vector to first other vertex, v = vector to second other vertex orthogonal in plane
            # The vertices in 2D coordinates are:
            origin, u, v = self.tetra.face_bases[face]
            vA = (0.0,0.0)
            # Vertices in face.vs sorted: e.g., (A,B,C)
            sorted_vs = sorted(face.vs)
            # The base origin is sorted_vs[0]
            # We know that face.vs contains A always except for the last face
            # For faces containing A, origin = A, u points toward second vertex, v points toward third vertex orthogonalized
            # We identify B and C:
            # Get the 2 other vertices in face besides origin:
            other_vertices = [vtx for vtx in sorted_vs if vtx != origin]
            B = other_vertices[0]
            C = other_vertices[1]
            # Positions 3d:
            pB3d = self.tetra.vertices_3d[B]
            pC3d = self.tetra.vertices_3d[C]
            # 2D coords of B and C:
            pB_2d = (dot(vector_sub(pB3d, origin), u), dot(vector_sub(pB3d, origin), v))
            pC_2d = (dot(vector_sub(pC3d, origin), u), dot(vector_sub(pC3d, origin), v))

            vertices_2d = [vA, pB_2d, pC_2d]
            edges_2d = [
                (vA, pB_2d, Edge(origin, B)),
                (vA, pC_2d, Edge(origin, C)),
                (pB_2d, pC_2d, Edge(B, C))
            ]

            t_candidates = []
            for (p1, p2, edge) in edges_2d:
                # Skip if edge contains origin and pos2d is at origin => to avoid immediate edge intersection at start
                # But simpler: calculate intersection anyway, limit to t > 1e-9 to avoid zero or negative

                intersect = line_ray_segment_intersection(pos2d, dir2d, p1, p2)
                if intersect is not None:
                    t, s = intersect
                    if t > 1e-9 and 0 <= s <= 1:
                        t_candidates.append( (t, edge) )

            if not t_candidates:
                # No intersections found, should not happen for correct worm path
                raise RuntimeError("No edge intersection found")
            # Return minimal positive t and corresponding edge
            t_min, edge_min = min(t_candidates, key=lambda x: x[0])
            return t_min, edge_min

        # Helper: find intersection of ray pos2d + t*dir2d (t>=0)
        # with segment (p1,p2), return (t,s) with s parameter along segment, or None if no intersection
        def line_ray_segment_intersection(ray_origin, ray_dir, seg_p1, seg_p2) -> Optional[Tuple[float,float]]:
            # Solve for t,s where:
            # ray_origin + t*ray_dir = seg_p1 + s*(seg_p2 - seg_p1), with t>=0, s in [0,1]
            dx = seg_p2[0] - seg_p1[0]
            dy = seg_p2[1] - seg_p1[1]
            A = [[ray_dir[0], -dx],
                 [ray_dir[1], -dy]]
            b = [seg_p1[0]-ray_origin[0],
                 seg_p1[1]-ray_origin[1]]
            det = A[0][0]*A[1][1] - A[0][1]*A[1][0]
            if abs(det) < 1e-14:
                return None
            t = (b[0]*A[1][1]-b[1]*A[0][1])/det
            s = (A[0][0]*b[1] - A[1][0]*b[0])/det
            if t < 0 or s < 0 or s > 1:
                return None
            return (t, s)

        while traveled < total_len:
            # Project current 3D direction into face
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'import' (ID: 561)
  → Token d'amorce (pas de prédiction)

Token 1: ' math' (ID: 13324)
  → Token d'amorce (pas de prédiction)

Token 2: '
' (ID: 198)
  → Token d'amorce (pas de prédiction)

Token 3: 'from' (ID: 2845)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.002719402778893709
    2. '<|end|>' → logprob: -6.627719402313232
    3. '```' → logprob: -7.877719402313232
    4. '\n' → logprob: -8.25271987915039
    5. '\' → logprob: -8.25271987915039
    6. 'import' → logprob: -8.75271987915039
    7. '<|end|>' → logprob: -9.75271987915039
    8. '.e' → logprob: -10.37771987915039
    9. '.pi' → logprob: -10.62771987915039
    10. '
' → logprob: -10.87771987915039

Token 4: ' abc' (ID: 75094)
  Prédit: ' math'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' math' → logprob: -0.7107323408126831
    2. ' os' → logprob: -1.335732340812683
    3. ' collections' → logprob: -2.3357324600219727
    4. ' sys' → logprob: -3.4607324600219727
    5. ' statistics' → logprob: -3.7107324600219727
    6. ' random' → logprob: -4.210732460021973
    7. ' ' → logprob: -4.335732460021973
    8. ' numpy' → logprob: -4.335732460021973
    9. 'cmath' → logprob: -4.460732460021973
    10. 'math' → logprob: -4.585732460021973

Token 5: ' import' (ID: 1588)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.11967052519321442
    2. ' import' → logprob: -2.4946706295013428
    3. 'import' → logprob: -4.119670391082764
    4. ' .' → logprob: -4.369670391082764
    5. '.import' → logprob: -7.119670391082764
    6. ' ' → logprob: -8.119670867919922
    7. '	import' → logprob: -9.744670867919922
    8. '.ext' → logprob: -10.119670867919922
    9. '.abstract' → logprob: -10.494670867919922
    10. '.space' → logprob: -11.119670867919922

Token 6: ' ABC' (ID: 33047)
  Prédit: ' ABC'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ABC' → logprob: -0.016597764566540718
    2. ' A' → logprob: -4.516597747802734
    3. 'ABC' → logprob: -5.266597747802734
    4. ' ' → logprob: -8.641597747802734
    5. 'A' → logprob: -9.641597747802734
    6. ' abstract' → logprob: -9.891597747802734
    7. ' ' → logprob: -10.766597747802734
    8. ' AB' → logprob: -10.891597747802734
    9. 'abstract' → logprob: -11.516597747802734
    10. ' space' → logprob: -11.891597747802734

Token 7: ',' (ID: 11)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.005836603231728077
    2. 'import' → logprob: -5.630836486816406
    3. '.
' → logprob: -7.380836486816406
    4. '<|end|>' → logprob: -8.380836486816406
    5. '```' → logprob: -8.505836486816406
    6. '.import' → logprob: -8.630836486816406
    7. ' import' → logprob: -8.630836486816406
    8. ',' → logprob: -8.630836486816406
    9. '.

' → logprob: -8.755836486816406
    10. ' .' → logprob: -9.505836486816406

Token 8: ' abstract' (ID: 13004)
  Prédit: 'abstract'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'abstract' → logprob: -0.1269284337759018
    2. ' abstract' → logprob: -2.1269283294677734
    3. ' ABC' → logprob: -16.126928329467773
    4. ' ' → logprob: -17.001928329467773
    5. '.abstract' → logprob: -17.001928329467773
    6. 'Abstract' → logprob: -17.751928329467773
    7. 'abc' → logprob: -17.876928329467773
    8. 'ABC' → logprob: -18.251928329467773
    9. ' abstr' → logprob: -18.376928329467773
    10. 'abs' → logprob: -19.001928329467773

Token 9: 'method' (ID: 8697)
  Prédit: 'method'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'method' → logprob: -0.0002398938377154991
    2. 'classmethod' → logprob: -8.500240325927734
    3. 'staticmethod' → logprob: -11.125240325927734
    4. 'meth' → logprob: -11.750240325927734
    5. 'ethod' → logprob: -12.500240325927734
    6. '_method' → logprob: -12.875240325927734
    7. 'class' → logprob: -13.125240325927734
    8. 'm' → logprob: -13.375240325927734
    9. '	method' → logprob: -13.625240325927734
    10. 'methods' → logprob: -14.750240325927734

Token 10: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.23683422803878784
    2. '

' → logprob: -2.1118342876434326
    3. 'class' → logprob: -2.4868342876434326
    4. '```' → logprob: -5.6118340492248535
    5. '
' → logprob: -6.6118340492248535
    6. ' class' → logprob: -7.6118340492248535
    7. '\n' → logprob: -7.7368340492248535
    8. '' → logprob: -8.486834526062012
    9. '


' → logprob: -8.861834526062012
    10. '``' → logprob: -9.236834526062012

Token 11: 'from' (ID: 2845)
  Prédit: 'class'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'class' → logprob: -0.0465967059135437
    2. '
' → logprob: -3.1715967655181885
    3. '```' → logprob: -6.046596527099609
    4. ' class' → logprob: -7.796596527099609
    5. '

' → logprob: -8.04659652709961
    6. '\n' → logprob: -8.29659652709961
    7. '
' → logprob: -9.17159652709961
    8. '``' → logprob: -9.92159652709961
    9. '<class' → logprob: -10.54659652709961
    10. '' → logprob: -11.79659652709961

Token 12: ' typing' (ID: 34152)
  Prédit: ' typing'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' typing' → logprob: -0.12255434691905975
    2. ' collections' → logprob: -2.622554302215576
    3. ' dat' → logprob: -4.122554302215576
    4. 'typing' → logprob: -4.872554302215576
    5. ' random' → logprob: -4.997554302215576
    6. ' enum' → logprob: -5.122554302215576
    7. 'collections' → logprob: -6.747554302215576
    8. ' numbers' → logprob: -7.122554302215576
    9. ' datetime' → logprob: -7.247554302215576
    10. ' ' → logprob: -7.372554302215576

Token 13: ' import' (ID: 1588)
  Prédit: ' import'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' import' → logprob: -0.28248000144958496
    2. 'import' → logprob: -1.407480001449585
    3. '.' → logprob: -7.032480239868164
    4. '<|end|>' → logprob: -8.407480239868164
    5. '	import' → logprob: -9.532480239868164
    6. '.import' → logprob: -10.282480239868164
    7. ' ' → logprob: -10.407480239868164
    8. '```' → logprob: -10.782480239868164
    9. '_import' → logprob: -11.032480239868164
    10. ' as' → logprob: -11.907480239868164

Token 14: ' Tuple' (ID: 50841)
  Prédit: ' Any'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' Any' → logprob: -0.5212579965591431
    2. ' Union' → logprob: -1.646257996559143
    3. ' List' → logprob: -2.2712578773498535
    4. 'Any' → logprob: -2.3962578773498535
    5. ' Callable' → logprob: -4.7712578773498535
    6. 'Union' → logprob: -5.5212578773498535
    7. ' Protocol' → logprob: -5.7712578773498535
    8. 'List' → logprob: -6.2712578773498535
    9. 'Callable' → logprob: -7.6462578773498535
    10. ' Optional' → logprob: -7.7712578773498535

Token 15: ',' (ID: 11)
  Prédit: 'class'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'class' → logprob: -0.1548260897397995
    2. '

' → logprob: -2.2798261642456055
    3. '
' → logprob: -3.4048261642456055
    4. '```' → logprob: -5.2798261642456055
    5. '\n' → logprob: -6.5298261642456055
    6. ' class' → logprob: -7.2798261642456055
    7. '


' → logprob: -8.904826164245605
    8. '<class' → logprob: -9.029826164245605
    9. '``' → logprob: -9.154826164245605
    10. '
' → logprob: -9.529826164245605

Token 16: ' Dict' (ID: 55179)
  Prédit: ' Union'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' Union' → logprob: -1.0775256156921387
    2. ' List' → logprob: -1.5775256156921387
    3. ' Any' → logprob: -2.2025256156921387
    4. 'Union' → logprob: -2.4525256156921387
    5. ' Optional' → logprob: -2.4525256156921387
    6. 'Any' → logprob: -2.7025256156921387
    7. ' Callable' → logprob: -3.3275256156921387
    8. 'List' → logprob: -3.4525256156921387
    9. 'Optional' → logprob: -3.9525256156921387
    10. ' Protocol' → logprob: -4.827525615692139

Token 17: ',' (ID: 11)
  Prédit: '

'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '

' → logprob: -0.5853424072265625
    2. 'class' → logprob: -1.0853424072265625
    3. '
' → logprob: -2.3353424072265625
    4. '\n' → logprob: -5.5853424072265625
    5. '


' → logprob: -6.3353424072265625
    6. '```' → logprob: -6.5853424072265625
    7. ' class' → logprob: -7.0853424072265625
    8. '' → logprob: -8.960342407226562
    9. '<class' → logprob: -9.210342407226562
    10. '
' → logprob: -9.335342407226562

Token 18: ' List' (ID: 2655)
  Prédit: ' List'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' List' → logprob: -0.8498243689537048
    2. ' Any' → logprob: -1.3498244285583496
    3. ' Union' → logprob: -2.2248244285583496
    4. 'Any' → logprob: -2.7248244285583496
    5. ' Optional' → logprob: -2.7248244285583496
    6. ' Callable' → logprob: -3.2248244285583496
    7. 'List' → logprob: -3.9748244285583496
    8. 'Union' → logprob: -5.22482442855835
    9. 'Optional' → logprob: -5.22482442855835
    10. 'Callable' → logprob: -5.84982442855835

Token 19: ',' (ID: 11)
  Prédit: 'class'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'class' → logprob: -0.48726531863212585
    2. '

' → logprob: -1.4872653484344482
    3. '
' → logprob: -1.8622653484344482
    4. '```' → logprob: -6.112265110015869
    5. '\n' → logprob: -6.862265110015869
    6. ' class' → logprob: -7.987265110015869
    7. '


' → logprob: -7.987265110015869
    8. '
' → logprob: -8.737265586853027
    9. '<class' → logprob: -9.237265586853027
    10. '' → logprob: -9.862265586853027

Token 20: ' Optional' (ID: 19351)
  Prédit: ' Union'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Union' → logprob: -1.0969666242599487
    2. ' Any' → logprob: -1.4719666242599487
    3. 'Any' → logprob: -1.4719666242599487
    4. ' Optional' → logprob: -2.4719667434692383
    5. 'Union' → logprob: -2.7219667434692383
    6. 'Optional' → logprob: -3.5969667434692383
    7. ' Callable' → logprob: -3.7219667434692383
    8. 'Callable' → logprob: -5.346966743469238
    9. ' Protocol' → logprob: -8.096966743469238
    10. 'Iterable' → logprob: -9.221966743469238

Token 21: '

' (ID: 279)
  Prédit: 'class'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'class' → logprob: -0.12042010575532913
    2. '
' → logprob: -2.745420217514038
    3. '

' → logprob: -3.245420217514038
    4. '```' → logprob: -4.870419979095459
    5. '\n' → logprob: -6.745419979095459
    6. ' class' → logprob: -7.620419979095459
    7. '
' → logprob: -8.620420455932617
    8. '' → logprob: -8.620420455932617
    9. '


' → logprob: -8.995420455932617
    10. '``' → logprob: -9.120420455932617

Token 22: '#' (ID: 2)
  Prédit: 'class'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'class' → logprob: -0.004067832604050636
    2. 'c' → logprob: -5.754067897796631
    3. '
' → logprob: -7.129067897796631
    4. '```' → logprob: -10.504067420959473
    5. ' class' → logprob: -10.754067420959473
    6. '\n' → logprob: -11.379067420959473
    7. '

' → logprob: -11.754067420959473
    8. '"class' → logprob: -12.754067420959473
    9. '#' → logprob: -13.129067420959473
    10. 'C' → logprob: -13.254067420959473

Token 23: ' Constants' (ID: 31976)
  Prédit: 'class'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'class' → logprob: -0.0014657003339380026
    2. ' class' → logprob: -7.501465797424316
    3. '
' → logprob: -7.751465797424316
    4. 'c' → logprob: -8.001465797424316
    5. ' 
' → logprob: -9.501465797424316
    6. 'cl' → logprob: -10.376465797424316
    7. 'clas' → logprob: -11.501465797424316
    8. '```' → logprob: -11.501465797424316
    9. '

' → logprob: -12.126465797424316
    10. '#' → logprob: -12.251465797424316

Token 24: ' for' (ID: 395)
  Prédit: 'PI'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'PI' → logprob: -0.030534373596310616
    2. 'MAX' → logprob: -4.655534267425537
    3. 'GR' → logprob: -4.780534267425537
    4. 'E' → logprob: -5.280534267425537
    5. '_PI' → logprob: -6.030534267425537
    6. 'S' → logprob: -6.780534267425537
    7. 'EPS' → logprob: -6.780534267425537
    8. ' PI' → logprob: -7.405534267425537
    9. 'T' → logprob: -8.030534744262695
    10. 'DEFAULT' → logprob: -8.405534744262695

Token 25: ' vertices' (ID: 38360)
  Prédit: ' geometry'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' geometry' → logprob: -0.40633514523506165
    2. ' physics' → logprob: -2.5313351154327393
    3. ' vector' → logprob: -2.9063351154327393
    4. 'geometry' → logprob: -3.0313351154327393
    5. ' the' → logprob: -3.4063351154327393
    6. ' mathematical' → logprob: -3.7813351154327393
    7. ' calculations' → logprob: -3.7813351154327393
    8. ' geometric' → logprob: -4.156335353851318
    9. ' unit' → logprob: -4.281335353851318
    10. ' calculating' → logprob: -5.281335353851318

Token 26: '
' (ID: 198)
  Prédit: 'VERT'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'VERT' → logprob: -1.0233795642852783
    2. '_VERT' → logprob: -1.3983795642852783
    3. ' =' → logprob: -1.8983795642852783
    4. '_VERTEX' → logprob: -2.7733795642852783
    5. ':' → logprob: -3.1483795642852783
    6. 'A' → logprob: -3.2733795642852783
    7. '_V' → logprob: -3.8983795642852783
    8. '_vertices' → logprob: -4.148379325866699
    9. '```' → logprob: -4.273379325866699
    10. '_' → logprob: -4.398379325866699

Token 27: 'class' (ID: 1444)
  Prédit: 'VERT'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'VERT' → logprob: -0.29823213815689087
    2. 'V' → logprob: -1.923232078552246
    3. 'A' → logprob: -2.423232078552246
    4. ' A' → logprob: -5.298232078552246
    5. ' V' → logprob: -5.298232078552246
    6. '_VERT' → logprob: -5.548232078552246
    7. 'POINT' → logprob: -5.798232078552246
    8. '_VERTEX' → logprob: -6.673232078552246
    9. 'vertices' → logprob: -7.173232078552246
    10. '```' → logprob: -7.298232078552246

Token 28: ' Vertex' (ID: 49245)
  Prédit: ' Vertex'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Vertex' → logprob: -0.034879542887210846
    2. ' Vert' → logprob: -3.784879446029663
    3. ' Point' → logprob: -5.034879684448242
    4. ' Polygon' → logprob: -6.409879684448242
    5. ' Graph' → logprob: -6.659879684448242
    6. 'Vertex' → logprob: -7.034879684448242
    7. ' Vector' → logprob: -7.409879684448242
    8. ' Shape' → logprob: -8.909879684448242
    9. ' Geometry' → logprob: -8.909879684448242
    10. ' Cube' → logprob: -9.284879684448242

Token 29: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.04078748822212219
    2. '(' → logprob: -3.9157874584198
    3. '(Enum' → logprob: -4.540787696838379
    4. 's' → logprob: -5.040787696838379
    5. 'es' → logprob: -6.665787696838379
    6. ':
' → logprob: -6.790787696838379
    7. '):' → logprob: -8.165787696838379
    8. 'Type' → logprob: -9.040787696838379
    9. '(enum' → logprob: -9.915787696838379
    10. '():' → logprob: -11.290787696838379

Token 30: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.20821596682071686
    2. ':' → logprob: -3.5832159519195557
    3. ' A' → logprob: -3.5832159519195557
    4. 'A' → logprob: -3.5832159519195557
    5. ')' → logprob: -3.9582159519195557
    6. '):' → logprob: -4.583216190338135
    7. ' def' → logprob: -4.583216190338135
    8. '0' → logprob: -4.583216190338135
    9. '    ' → logprob: -4.708216190338135
    10. '(' → logprob: -5.708216190338135

Token 31: ' A' (ID: 355)
  Prédit: ' def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' def' → logprob: -0.7838510870933533
    2. ' A' → logprob: -1.283851146697998
    3. ' TOP' → logprob: -2.283851146697998
    4. 'A' (adapté à ' A') → logprob: -2.908851146697998
    5. '   ' → logprob: -3.533851146697998
    6. 'TOP' → logprob: -3.908851146697998
    7. 'def' → logprob: -4.283851146697998
    8. ' FRONT' → logprob: -4.658851146697998
    9. ' UP' → logprob: -4.908851146697998
    10. ' pass' → logprob: -5.033851146697998

Token 32: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3893692195415497
    2. '=' → logprob: -1.764369249343872
    3. ',' → logprob: -2.264369249343872
    4. ':' → logprob: -3.264369249343872
    5. '   ' → logprob: -6.014369010925293
    6. '.' → logprob: -6.639369010925293
    7. 'A' → logprob: -6.764369010925293
    8. '_' → logprob: -7.264369010925293
    9. '  ' → logprob: -7.514369010925293
    10. 'B' → logprob: -7.514369010925293

Token 33: ' '' (ID: 461)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.2177814245223999
    2. ' ' → logprob: -2.8427815437316895
    3. ''' → logprob: -3.0927815437316895
    4. '(' → logprob: -3.4677815437316895
    5. ' '' → logprob: -3.9677815437316895
    6. ''A' → logprob: -3.9677815437316895
    7. '"' → logprob: -4.3427815437316895
    8. ' "' → logprob: -5.3427815437316895
    9. ' (' → logprob: -6.0927815437316895
    10. '1' → logprob: -6.2177815437316895

Token 34: 'A' (ID: 32)
  Prédit: 'A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -9.233804303221405e-05
    2. 'a' → logprob: -10.375092506408691
    3. ' A' → logprob: -10.625092506408691
    4. ''A' → logprob: -11.500092506408691
    5. '0' → logprob: -11.875092506408691
    6. 'v' → logprob: -12.562592506408691
    7. 'А' → logprob: -12.937592506408691
    8. ''' → logprob: -13.437592506408691
    9. 'vertex' → logprob: -14.000092506408691
    10. 'V' → logprob: -14.000092506408691

Token 35: ''
' (ID: 2207)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.04864652454853058
    2. ''
' → logprob: -3.0486464500427246
    3. ''
' → logprob: -10.548646926879883
    4. 'A' → logprob: -11.048646926879883
    5. ''A' → logprob: -11.173646926879883
    6. ''

' → logprob: -14.048646926879883
    7. '"' → logprob: -14.673646926879883
    8. ' '' → logprob: -14.923646926879883
    9. 'a' → logprob: -15.173646926879883
    10. 'B' → logprob: -15.923646926879883

Token 36: '   ' (ID: 271)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.34087300300598145
    2. '   ' → logprob: -1.3408730030059814
    3. ' B' → logprob: -3.8408730030059814
    4. '    
' → logprob: -5.965872764587402
    5. ',' → logprob: -6.715872764587402
    6. ' ' → logprob: -7.465872764587402
    7. '<|end|>' → logprob: -8.340872764587402
    8. '  ' → logprob: -8.465872764587402
    9. '	B' → logprob: -8.840872764587402
    10. '  
' → logprob: -8.965872764587402

Token 37: ' B' (ID: 418)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' (adapté à ' B') → logprob: -0.14290064573287964
    2. ' B' → logprob: -2.0179007053375244
    3. '   ' → logprob: -8.767900466918945
    4. ''' → logprob: -11.392900466918945
    5. '	B' → logprob: -11.392900466918945
    6. ' ' → logprob: -11.455400466918945
    7. ' ' → logprob: -12.330400466918945
    8. '  ' → logprob: -12.392900466918945
    9. ',' → logprob: -12.705400466918945
    10. '`' → logprob: -13.142900466918945

Token 38: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.00782369077205658
    2. '=' → logprob: -4.882823467254639
    3. '   ' → logprob: -9.007823944091797
    4. ' ' → logprob: -10.007823944091797
    5. ''' → logprob: -10.382823944091797
    6. '  ' → logprob: -11.507823944091797
    7. ' ='' → logprob: -12.507823944091797
    8. ',' → logprob: -13.382823944091797
    9. '='' → logprob: -14.007823944091797
    10. '    ' → logprob: -14.007823944091797

Token 39: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.012565218843519688
    2. ' '' → logprob: -4.3875651359558105
    3. ' ' → logprob: -10.012565612792969
    4. '"' → logprob: -12.387565612792969
    5. ''C' → logprob: -12.637565612792969
    6. ' C' → logprob: -14.137565612792969
    7. ''S' → logprob: -14.762565612792969
    8. '`' → logprob: -15.012565612792969
    9. ')' → logprob: -15.262565612792969
    10. ' ' → logprob: -15.325065612792969

Token 40: 'B' (ID: 33)
  Prédit: 'B'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.030579794198274612
    2. 'C' → logprob: -3.5305798053741455
    3. ''' → logprob: -7.405579566955566
    4. ' B' → logprob: -9.405579566955566
    5. 'A' → logprob: -9.780579566955566
    6. 'D' → logprob: -10.155579566955566
    7. 'T' → logprob: -11.780579566955566
    8. 'V' → logprob: -11.905579566955566
    9. ' C' → logprob: -12.780579566955566
    10. ''''' → logprob: -12.905579566955566

Token 41: ''
' (ID: 2207)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.16174128651618958
    2. ''
' → logprob: -1.9117412567138672
    3. ''''' → logprob: -7.786741256713867
    4. ''C' → logprob: -7.786741256713867
    5. ''''
' → logprob: -8.161741256713867
    6. '''
' → logprob: -8.661741256713867
    7. 'C' → logprob: -8.911741256713867
    8. '''' → logprob: -9.786741256713867
    9. ''
' → logprob: -10.911741256713867
    10. '   ' → logprob: -12.036741256713867

Token 42: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.038910992443561554
    2. 'C' → logprob: -3.4139111042022705
    3. ' C' → logprob: -5.288910865783691
    4. '    
' → logprob: -9.413910865783691
    5. ' ' → logprob: -10.538910865783691
    6. '  ' → logprob: -10.663910865783691
    7. 'class' → logprob: -11.413910865783691
    8. '
' → logprob: -11.413910865783691
    9. '```' → logprob: -11.538910865783691
    10. ''' → logprob: -11.913910865783691

Token 43: ' C' (ID: 363)
  Prédit: 'C'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'C' (adapté à ' C') → logprob: -0.46181830763816833
    2. ' C' → logprob: -1.0868183374404907
    3. '   ' → logprob: -3.461818218231201
    4. ' ' → logprob: -7.336818218231201
    5. ''' → logprob: -8.46181869506836
    6. '  ' → logprob: -9.46181869506836
    7. '    
' → logprob: -9.58681869506836
    8. ' =' → logprob: -10.46181869506836
    9. '    ' → logprob: -10.71181869506836
    10. ''C' → logprob: -10.83681869506836

Token 44: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.210849791765213
    2. '=' → logprob: -1.7108497619628906
    3. '   ' → logprob: -5.335849761962891
    4. ''' → logprob: -5.835849761962891
    5. '  ' → logprob: -6.835849761962891
    6. ' ' → logprob: -8.21084976196289
    7. '<|end|>' → logprob: -9.33584976196289
    8. '='' → logprob: -9.58584976196289
    9. ' ='' → logprob: -10.83584976196289
    10. ')' → logprob: -10.83584976196289

Token 45: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.5232651233673096
    2. ' '' → logprob: -0.8982651233673096
    3. ' ' → logprob: -9.77326488494873
    4. ''D' → logprob: -10.02326488494873
    5. '"' → logprob: -11.02326488494873
    6. ''C' → logprob: -11.77326488494873
    7. '  ' → logprob: -12.89826488494873
    8. ''A' → logprob: -13.21076488494873
    9. ''S' → logprob: -13.46076488494873
    10. ''''' → logprob: -13.64826488494873

Token 46: 'C' (ID: 34)
  Prédit: 'C'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'C' → logprob: -0.1656060516834259
    2. ''' → logprob: -2.0406060218811035
    3. ''C' → logprob: -4.5406060218811035
    4. '''' → logprob: -4.7906060218811035
    5. ''''' → logprob: -6.4156060218811035
    6. '\'' → logprob: -6.7906060218811035
    7. 'B' → logprob: -8.290606498718262
    8. '"' → logprob: -9.040606498718262
    9. 'A' → logprob: -9.040606498718262
    10. '\' → logprob: -9.540606498718262

Token 47: ''
' (ID: 2207)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.0031979158520698547
    2. ''
' → logprob: -5.753198146820068
    3. ''''' → logprob: -11.37819766998291
    4. ''
' → logprob: -13.00319766998291
    5. '"' → logprob: -13.12819766998291
    6. '```' → logprob: -13.75319766998291
    7. ''A' → logprob: -14.00319766998291
    8. ' '' → logprob: -14.37819766998291
    9. ''

' → logprob: -14.75319766998291
    10. ''D' → logprob: -14.75319766998291

Token 48: '   ' (ID: 271)
  Prédit: 'class'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'class' → logprob: -0.7381382584571838
    2. '
' → logprob: -1.238138198852539
    3. '   ' → logprob: -2.113138198852539
    4. '#' → logprob: -3.238138198852539
    5. '<|end|>' → logprob: -3.988138198852539
    6. '    
' → logprob: -4.113138198852539
    7. '```' → logprob: -4.363138198852539
    8. '<|end|>' → logprob: -4.988138198852539
    9. 'D' → logprob: -5.738138198852539
    10. '

' → logprob: -5.738138198852539

Token 49: ' D' (ID: 415)
  Prédit: 'D'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'D' (adapté à ' D') → logprob: -0.23215070366859436
    2. 'class' → logprob: -2.1071507930755615
    3. '#' → logprob: -3.4821507930755615
    4. '   ' → logprob: -3.8571507930755615
    5. '```' → logprob: -4.982150554656982
    6. '
' → logprob: -5.107150554656982
    7. ',' → logprob: -5.482150554656982
    8. '

' → logprob: -5.607150554656982
    9. ' D' → logprob: -5.982150554656982
    10. ':' → logprob: -6.107150554656982

Token 50: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.25239527225494385
    2. '=' → logprob: -1.5023952722549438
    3. ''' → logprob: -8.627395629882812
    4. '   ' → logprob: -8.752395629882812
    5. ' ='' → logprob: -10.502395629882812
    6. ' ' → logprob: -10.627395629882812
    7. '='' → logprob: -10.752395629882812
    8. '  ' → logprob: -11.377395629882812
    9. '<|end|>' → logprob: -11.627395629882812
    10. ')' → logprob: -11.627395629882812

Token 51: ' '' (ID: 461)
  Prédit: ' ''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' '' → logprob: -0.63267582654953
    2. ''' → logprob: -0.75767582654953
    3. ''D' → logprob: -10.132676124572754
    4. '"' → logprob: -11.257676124572754
    5. ''E' → logprob: -11.882676124572754
    6. ' ' → logprob: -12.007676124572754
    7. ''S' → logprob: -13.382676124572754
    8. ''A' → logprob: -13.757676124572754
    9. '`' → logprob: -14.007676124572754
    10. 'space' → logprob: -14.132676124572754

Token 52: 'D' (ID: 35)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.014723729342222214
    2. 'D' → logprob: -4.764723777770996
    3. ''D' → logprob: -5.264723777770996
    4. ' '' → logprob: -7.889723777770996
    5. ''''' → logprob: -8.514723777770996
    6. '''' → logprob: -8.889723777770996
    7. ''}' → logprob: -9.764723777770996
    8. ''A' → logprob: -11.139723777770996
    9. '''''' → logprob: -11.264723777770996
    10. '"' → logprob: -11.639723777770996

Token 53: ''

' (ID: 7497)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.00010437761375214905
    2. ''
' → logprob: -9.875103950500488
    3. ''''' → logprob: -10.000103950500488
    4. '```' → logprob: -12.625103950500488
    5. ' '' → logprob: -13.000103950500488
    6. '"' → logprob: -14.125103950500488
    7. '   ' → logprob: -15.375103950500488
    8. ''

' → logprob: -16.125104904174805
    9. ''
' → logprob: -16.250104904174805
    10. '''' → logprob: -16.375104904174805

Token 54: '#' (ID: 2)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.3323974311351776
    2. 'class' → logprob: -1.5823974609375
    3. '

' → logprob: -2.5823974609375
    4. '
' → logprob: -7.4573974609375
    5. '```' → logprob: -7.7073974609375
    6. '#' → logprob: -7.9573974609375
    7. ' class' → logprob: -9.2073974609375
    8. '


' → logprob: -9.8323974609375
    9. '<|end|>' → logprob: -10.3323974609375
    10. '<|end|>' → logprob: -10.4573974609375

Token 55: ' Represents' (ID: 84592)
  Prédit: 'class'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'class' → logprob: -0.01419076882302761
    2. ' class' → logprob: -4.264190673828125
    3. '
' → logprob: -11.889190673828125
    4. '#' → logprob: -11.889190673828125
    5. 'from' → logprob: -12.514190673828125
    6. 'import' → logprob: -12.639190673828125
    7. 'Class' → logprob: -14.014190673828125
    8. ' 
' → logprob: -14.639190673828125
    9. 's' → logprob: -14.889190673828125
    10. 'abstract' → logprob: -15.014190673828125

Token 56: ' an' (ID: 448)
  Prédit: ' a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.09031245857477188
    2. ' an' → logprob: -2.4653124809265137
    3. ' the' → logprob: -7.090312480926514
    4. 'a' → logprob: -8.090312004089355
    5. 'an' → logprob: -8.715312004089355
    6. 'the' → logprob: -11.840312004089355
    7. ')' → logprob: -11.965312004089355
    8. '<|end|>' → logprob: -12.215312004089355
    9. 'class' → logprob: -12.465312004089355
    10. ',' → logprob: -12.715312004089355

Token 57: ' immutable' (ID: 111711)
  Prédit: ' edge'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' edge' → logprob: -0.11862167716026306
    2. ' abstract' → logprob: -2.243621587753296
    3. ' Abstract' → logprob: -6.743621826171875
    4. 'abstract' → logprob: -6.743621826171875
    5. ' Edge' → logprob: -6.993621826171875
    6. ' angle' → logprob: -7.243621826171875
    7. ' area' → logprob: -7.743621826171875
    8. 'edge' → logprob: -7.868621826171875
    9. ' ' → logprob: -8.868621826171875
    10. ' element' → logprob: -9.118621826171875

Token 58: ' Edge' (ID: 16396)
  Prédit: ' point'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' point' → logprob: -0.9363321661949158
    2. ' Point' → logprob: -1.0613322257995605
    3. ' class' → logprob: -2.1863322257995605
    4. ' triangle' → logprob: -2.5613322257995605
    5. ' Triangle' → logprob: -4.1863322257995605
    6. ' object' → logprob: -4.3113322257995605
    7. 'class' → logprob: -4.3113322257995605
    8. 'Point' → logprob: -4.4363322257995605
    9. 'point' → logprob: -5.6863322257995605
    10. ' data' → logprob: -6.1863322257995605

Token 59: ' between' (ID: 2870)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.4758218824863434
    2. 'class' → logprob: -1.350821852684021
    3. '(' → logprob: -3.1008219718933105
    4. ':
' → logprob: -3.3508219718933105
    5. '
' → logprob: -4.3508219718933105
    6. '(class' → logprob: -5.1008219718933105
    7. '(
' → logprob: -5.1008219718933105
    8. ' class' → logprob: -5.3508219718933105
    9. '.' → logprob: -5.7258219718933105
    10. 's' → logprob: -6.4758219718933105

Token 60: ' two' (ID: 1920)
  Prédit: ' two'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' two' → logprob: -0.6940059661865234
    2. 'two' → logprob: -0.6940059661865234
    3. 'vertices' → logprob: -7.819005966186523
    4. 'Two' → logprob: -8.319005966186523
    5. ' vertices' → logprob: -9.569005966186523
    6. 'Vertex' → logprob: -10.444005966186523
    7. ' Vertex' → logprob: -10.569005966186523
    8. '2' → logprob: -10.694005966186523
    9. '_two' → logprob: -10.819005966186523
    10. 'vertex' → logprob: -11.819005966186523

Token 61: ' vertices' (ID: 38360)
  Prédit: ' vertices'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' vertices' → logprob: -0.06307866424322128
    2. 'vertices' → logprob: -2.8130786418914795
    3. ' Vertex' → logprob: -8.063078880310059
    4. 'Vertices' → logprob: -8.188078880310059
    5. ' points' → logprob: -8.438078880310059
    6. '_vertices' → logprob: -9.563078880310059
    7. ' vertex' → logprob: -9.563078880310059
    8. 'Vertex' → logprob: -9.688078880310059
    9. 'points' → logprob: -10.188078880310059
    10. 'vertex' → logprob: -11.188078880310059

Token 62: ',' (ID: 11)
  Prédit: 'class'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'class' → logprob: -0.027530713006854057
    2. ':' → logprob: -3.7775306701660156
    3. ' class' → logprob: -6.277530670166016
    4. '```' → logprob: -6.777530670166016
    5. '.' → logprob: -7.027530670166016
    6. '
' → logprob: -8.652530670166016
    7. ' :' → logprob: -10.027530670166016
    8. '(class' → logprob: -10.277530670166016
    9. ',' → logprob: -10.402530670166016
    10. ':
' → logprob: -11.027530670166016

Token 63: ' unordered' (ID: 131528)
  Prédit: ' with'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' with' → logprob: -0.6079640984535217
    2. ' connecting' → logprob: -2.107964038848877
    3. ' including' → logprob: -2.732964038848877
    4. 'with' → logprob: -3.232964038848877
    5. ' connected' → logprob: -3.357964038848877
    6. ' defined' → logprob: -3.482964038848877
    7. ' storing' → logprob: -3.482964038848877
    8. ' weight' → logprob: -4.107964038848877
    9. ' endpoints' → logprob: -4.357964038848877
    10. 'class' → logprob: -4.482964038848877

Token 64: '
' (ID: 198)
  Prédit: 'class'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'class' → logprob: -0.14085891842842102
    2. ':' → logprob: -2.5158588886260986
    3. ' class' → logprob: -3.8908588886260986
    4. 'from' → logprob: -4.140859127044678
    5. '@dat' → logprob: -4.765859127044678
    6. ' :' → logprob: -6.265859127044678
    7. '.' → logprob: -6.640859127044678
    8. ' (' → logprob: -7.640859127044678
    9. '```' → logprob: -7.640859127044678
    10. ' from' → logprob: -7.765859127044678

Token 65: 'class' (ID: 1444)
  Prédit: 'class'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'class' → logprob: -0.010877910070121288
    2. 'from' → logprob: -4.885878086090088
    3. ':' → logprob: -6.385878086090088
    4. ' class' → logprob: -7.010878086090088
    5. '```' → logprob: -8.01087760925293
    6. '@dat' → logprob: -8.51087760925293
    7. '(' → logprob: -10.13587760925293
    8. '
' → logprob: -10.51087760925293
    9. '(class' → logprob: -11.01087760925293
    10. '<class' → logprob: -11.13587760925293

Token 66: ' Edge' (ID: 16396)
  Prédit: ' Edge'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Edge' → logprob: -0.0005968777113594115
    2. 'Edge' → logprob: -7.50059700012207
    3. ' Vertex' → logprob: -11.50059700012207
    4. '_edge' → logprob: -11.62559700012207
    5. ' ' → logprob: -12.25059700012207
    6. ' Ed' → logprob: -12.62559700012207
    7. ' fro' → logprob: -12.62559700012207
    8. 'fro' → logprob: -12.62559700012207
    9. ' edge' → logprob: -13.12559700012207
    10. ' Frozen' → logprob: -13.62559700012207

Token 67: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.000540166103746742
    2. '(' → logprob: -7.625540256500244
    3. ' :' → logprob: -10.750539779663086
    4. '(tuple' → logprob: -11.500539779663086
    5. ':
' → logprob: -11.750539779663086
    6. '():' → logprob: -12.125539779663086
    7. '(T' → logprob: -13.250539779663086
    8. '):' → logprob: -13.625539779663086
    9. '(object' → logprob: -13.625539779663086
    10. ' (' → logprob: -14.500539779663086

Token 68: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.00047368707600980997
    2. '(' → logprob: -8.125473976135254
    3. ':
' → logprob: -9.500473976135254
    4. '):' → logprob: -10.125473976135254
    5. '   ' → logprob: -10.625473976135254
    6. '(object' → logprob: -10.625473976135254
    7. ' :' → logprob: -11.875473976135254
    8. 'def' → logprob: -13.500473976135254
    9. ':def' → logprob: -13.750473976135254
    10. '():' → logprob: -13.875473976135254

Token 69: ' def' (ID: 1056)
  Prédit: ' def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' def' → logprob: -0.22752141952514648
    2. 'def' (adapté à ' def') → logprob: -1.7275214195251465
    3. ' __' → logprob: -3.8525214195251465
    4. '   ' → logprob: -5.9775214195251465
    5. ' ' → logprob: -7.1025214195251465
    6. 'from' → logprob: -7.2275214195251465
    7. '__' → logprob: -8.727521896362305
    8. '@dat' → logprob: -9.227521896362305
    9. '(' → logprob: -10.102521896362305
    10. '  ' → logprob: -10.227521896362305

Token 70: ' __' (ID: 2516)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.3880590498447418
    2. 'it' → logprob: -2.013059139251709
    3. ' __' → logprob: -2.763059139251709
    4. 'init' → logprob: -3.138059139251709
    5. '__' → logprob: -3.263059139251709
    6. '_' → logprob: -3.888059139251709
    7. '_init' → logprob: -5.513059139251709
    8. '```' → logprob: -5.763059139251709
    9. 'nit' → logprob: -5.763059139251709
    10. ' `' → logprob: -5.888059139251709

Token 71: 'init' (ID: 3287)
  Prédit: 'init'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: -0.0015035520773380995
    2. 'eq' → logprob: -6.5015034675598145
    3. ' init' → logprob: -14.001503944396973
    4. 'hash' → logprob: -15.751503944396973
    5. '   ' → logprob: -16.751502990722656
    6. ' ' → logprob: -17.001502990722656
    7. '_init' → logprob: -17.126502990722656
    8. 'ini' → logprob: -17.751502990722656
    9. '	init' → logprob: -17.876502990722656
    10. 'new' → logprob: -18.001502990722656

Token 72: '__(' (ID: 8241)
  Prédit: '__('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.005365852266550064
    2. '__' → logprob: -5.25536584854126
    3. '__((' → logprob: -9.255366325378418
    4. '__(
' → logprob: -10.505366325378418
    5. '(self' → logprob: -12.255366325378418
    6. '__('' → logprob: -12.630366325378418
    7. '(' → logprob: -14.755366325378418
    8. '__(*' → logprob: -14.880366325378418
    9. '__("' → logprob: -15.505366325378418
    10. '_(' → logprob: -17.6303653717041

Token 73: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.3132772147655487
    2. ' self' → logprob: -1.313277244567871
    3. '(self' → logprob: -11.313277244567871
    4. '	self' → logprob: -13.188277244567871
    5. 's' → logprob: -14.688277244567871
    6. ' ' → logprob: -14.688277244567871
    7. ',' → logprob: -15.938277244567871
    8. ')' → logprob: -16.563276290893555
    9. '   ' → logprob: -16.563276290893555
    10. ',self' → logprob: -16.688276290893555

Token 74: ',' (ID: 11)
  Prédit: ' ,'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ,' → logprob: -0.25442156195640564
    2. ',' → logprob: -1.504421591758728
    3. 'self' → logprob: -6.879421710968018
    4. ' self' → logprob: -7.004421710968018
    5. ' ' → logprob: -8.00442123413086
    6. ',self' → logprob: -9.50442123413086
    7. '(self' → logprob: -9.62942123413086
    8. '_,' → logprob: -10.62942123413086
    9. ' (' → logprob: -10.87942123413086
    10. '_self' → logprob: -11.12942123413086

Token 75: ' v' (ID: 323)
  Prédit: ' v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' v' → logprob: -0.5285402536392212
    2. ' self' → logprob: -1.7785402536392212
    3. 'v' → logprob: -2.5285401344299316
    4. ' u' → logprob: -2.9035401344299316
    5. ' vertex' → logprob: -2.9035401344299316
    6. 'self' → logprob: -3.2785401344299316
    7. 'vertex' → logprob: -5.028540134429932
    8. 'u' → logprob: -5.403540134429932
    9. ' ' → logprob: -5.903540134429932
    10. ' endpoint' → logprob: -8.77854061126709

Token 76: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.8665913343429565
    2. 'ert' → logprob: -1.2415913343429565
    3. 'er' → logprob: -1.2415913343429565
    4. 'tx' → logprob: -8.116591453552246
    5. ' ' → logprob: -8.241591453552246
    6. 'erts' → logprob: -8.241591453552246
    7. '   ' → logprob: -8.616591453552246
    8. 'al' → logprob: -8.866591453552246
    9. ',' → logprob: -9.616591453552246
    10. 'a' → logprob: -10.116591453552246

Token 77: ':' (ID: 25)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0011291404953226447
    2. ',v' → logprob: -7.501129150390625
    3. ' ,' → logprob: -7.626129150390625
    4. ':' → logprob: -9.376129150390625
    5. ' ' → logprob: -13.501129150390625
    6. '=' → logprob: -14.001129150390625
    7. '‌,' → logprob: -14.876129150390625
    8. '<|end|>' → logprob: -15.751129150390625
    9. '<|end|>' → logprob: -15.876129150390625
    10. 'v' → logprob: -16.126129150390625

Token 78: ' str' (ID: 989)
  Prédit: 'str'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'str' → logprob: -0.3868982195854187
    2. ' str' → logprob: -1.1368982791900635
    3. '[str' → logprob: -11.386898040771484
    4. 'Vertex' → logprob: -12.511898040771484
    5. ')' → logprob: -12.636898040771484
    6. ' ' → logprob: -12.761898040771484
    7. '(str' → logprob: -13.636898040771484
    8. '	str' → logprob: -13.636898040771484
    9. ':str' → logprob: -13.636898040771484
    10. ' Vertex' → logprob: -13.761898040771484

Token 79: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00015622020873706788
    2. ' ,' → logprob: -8.87515640258789
    3. ',v' → logprob: -11.12515640258789
    4. '‌,' → logprob: -14.50015640258789
    5. 'v' → logprob: -14.62515640258789
    6. ',
' → logprob: -15.37515640258789
    7. ':' → logprob: -15.50015640258789
    8. ' v' → logprob: -16.25015640258789
    9. ',

' → logprob: -17.12515640258789
    10. ' ' → logprob: -17.62515640258789

Token 80: ' v' (ID: 323)
  Prédit: ' v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' v' → logprob: -0.2813526391983032
    2. 'v' → logprob: -1.4063526391983032
    3. ' ' → logprob: -8.781352996826172
    4. ' ' → logprob: -10.781352996826172
    5. '	v' → logprob: -11.281352996826172
    6. ')v' → logprob: -12.531352996826172
    7. ')' → logprob: -12.531352996826172
    8. '    ' → logprob: -13.281352996826172
    9. ' )' → logprob: -13.656352996826172
    10. 's' → logprob: -13.906352996826172

Token 81: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -8.2994620242971e-06
    2. ',' → logprob: -12.000008583068848
    3. ' ' → logprob: -13.875008583068848
    4. ')' → logprob: -15.500008583068848
    5. 'e' → logprob: -15.625008583068848
    6. 'a' → logprob: -15.875008583068848
    7. 'er' → logprob: -16.00000762939453
    8. '1' → logprob: -16.25000762939453
    9. ' ,' → logprob: -16.25000762939453
    10. 'al' → logprob: -16.50000762939453

Token 82: ':' (ID: 25)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0528845340013504
    2. ':' → logprob: -3.177884578704834
    3. ' ):' → logprob: -5.552884578704834
    4. ')' → logprob: -5.677884578704834
    5. ',' → logprob: -6.177884578704834
    6. '):
' → logprob: -8.177884101867676
    7. '=' → logprob: -10.052884101867676
    8. ' )' → logprob: -10.177884101867676
    9. ' ' → logprob: -10.302884101867676
    10. ' :' → logprob: -11.052884101867676

Token 83: ' str' (ID: 989)
  Prédit: ' str'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' str' → logprob: -0.03525121510028839
    2. 'str' → logprob: -3.4102511405944824
    3. ' ' → logprob: -6.660251140594482
    4. ' '' → logprob: -9.41025161743164
    5. 's' → logprob: -9.53525161743164
    6. ')' → logprob: -9.53525161743164
    7. 'v' → logprob: -11.03525161743164
    8. ':str' → logprob: -11.03525161743164
    9. ' )' → logprob: -11.41025161743164
    10. ' s' → logprob: -11.66025161743164

Token 84: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.012708356603980064
    2. ')' → logprob: -4.3877081871032715
    3. '):
' → logprob: -9.38770866394043
    4. ' ):' → logprob: -9.76270866394043
    5. ':' → logprob: -10.38770866394043
    6. ',' → logprob: -11.13770866394043
    7. ' ' → logprob: -12.38770866394043
    8. ''):' → logprob: -12.51270866394043
    9. '   ' → logprob: -14.01270866394043
    10. ' )' → logprob: -14.13770866394043

Token 85: '       ' (ID: 309)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.1307869702577591
    2. ')' → logprob: -3.380786895751953
    3. ',' → logprob: -3.380786895751953
    4. ' ):' → logprob: -4.005786895751953
    5. ':' → logprob: -4.130786895751953
    6. '       ' → logprob: -5.005786895751953
    7. ' )' → logprob: -5.630786895751953
    8. ' ' → logprob: -5.755786895751953
    9. '):
' → logprob: -5.880786895751953
    10. ' ,' → logprob: -6.630786895751953

Token 86: ' if' (ID: 538)
  Prédit: ' self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.4746955931186676
    2. ' if' → logprob: -1.3496955633163452
    3. '       ' → logprob: -2.4746956825256348
    4. 'self' → logprob: -3.5996956825256348
    5. 'if' (adapté à ' if') → logprob: -5.599695682525635
    6. ' #' → logprob: -6.599695682525635
    7. ' ' → logprob: -7.599695682525635
    8. ' s' → logprob: -8.099695205688477
    9. '        ' → logprob: -8.224695205688477
    10. ' v' → logprob: -8.349695205688477

Token 87: ' v' (ID: 323)
  Prédit: ' v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' v' → logprob: -0.017707459628582
    2. 'v' → logprob: -4.642707347869873
    3. ' {' → logprob: -5.517707347869873
    4. '{' → logprob: -6.392707347869873
    5. ' ' → logprob: -6.517707347869873
    6. ' (' → logprob: -7.517707347869873
    7. '	v' → logprob: -9.517707824707031
    8. '(v' → logprob: -10.642707824707031
    9. ' sorted' → logprob: -10.642707824707031
    10. '   ' → logprob: -11.017707824707031

Token 88: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.8206473871250637e-05
    2. '2' → logprob: -11.125028610229492
    3. 'alid' → logprob: -13.000028610229492
    4. '_' → logprob: -13.125028610229492
    5. ' ' → logprob: -13.125028610229492
    6. 'al' → logprob: -13.250028610229492
    7. 'ert' → logprob: -13.750028610229492
    8. 'er' → logprob: -14.000028610229492
    9. '```' → logprob: -14.500028610229492
    10. ' v' → logprob: -14.500028610229492

Token 89: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.39656946063041687
    2. ' >' → logprob: -1.1465694904327393
    3. '>' → logprob: -5.77156925201416
    4. ' <' → logprob: -6.14656925201416
    5. '==' → logprob: -6.14656925201416
    6. ' ' → logprob: -6.27156925201416
    7. ' <=' → logprob: -8.27156925201416
    8. ' !=' → logprob: -9.64656925201416
    9. ' not' → logprob: -10.64656925201416
    10. ' >=' → logprob: -12.89656925201416

Token 90: ' v' (ID: 323)
  Prédit: ' v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' v' → logprob: -0.47416242957115173
    2. 'v' → logprob: -0.9741624593734741
    3. ' ' → logprob: -9.474162101745605
    4. '	v' → logprob: -11.849162101745605
    5. ' ' → logprob: -14.724162101745605
    6. '  ' → logprob: -15.474162101745605
    7. '<|end|>' → logprob: -15.724162101745605
    8. ')v' → logprob: -15.974162101745605
    9. '_v' → logprob: -16.099163055419922
    10. '    ' → logprob: -16.099163055419922

Token 91: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.005430239252746105
    2. '1' → logprob: -5.255430221557617
    3. '_' → logprob: -8.630430221557617
    4. ' v' → logprob: -12.255430221557617
    5. ' ' → logprob: -13.005430221557617
    6. ')' → logprob: -13.005430221557617
    7. 'v' → logprob: -13.255430221557617
    8. 'er' → logprob: -13.880430221557617
    9. '₂' → logprob: -14.005430221557617
    10. '```' → logprob: -14.255430221557617

Token 92: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.03622708097100258
    2. ' :' → logprob: -3.411226987838745
    3. ':
' → logprob: -6.536227226257324
    4. ' :
' → logprob: -7.036227226257324
    5. '):' → logprob: -9.536227226257324
    6. ' ' → logprob: -9.786227226257324
    7. ' ):' → logprob: -10.286227226257324
    8. ',' → logprob: -10.661227226257324
    9. ')' → logprob: -11.161227226257324
    10. ' or' → logprob: -11.286227226257324

Token 93: '           ' (ID: 352)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.03704647347331047
    2. ':
' → logprob: -4.037046432495117
    3. '<|end|>' → logprob: -4.787046432495117
    4. ' ' → logprob: -5.912046432495117
    5. '):' → logprob: -6.037046432495117
    6. ')' → logprob: -6.037046432495117
    7. ',' → logprob: -6.662046432495117
    8. ' raise' → logprob: -7.787046432495117
    9. ' :' → logprob: -7.787046432495117
    10. '):
' → logprob: -8.412046432495117

Token 94: ' raise' (ID: 9338)
  Prédit: ' raise'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' raise' → logprob: -0.013333522714674473
    2. 'raise' (adapté à ' raise') → logprob: -4.888333320617676
    3. '
' → logprob: -5.763333320617676
    4. '           ' → logprob: -6.513333320617676
    5. '	raise' → logprob: -7.888333320617676
    6. ':' → logprob: -8.388333320617676
    7. ' 
' → logprob: -8.888333320617676
    8. ' ' → logprob: -9.263333320617676
    9. '        ' → logprob: -9.388333320617676
    10. '_raise' → logprob: -9.888333320617676

Token 95: ' Value' (ID: 9963)
  Prédit: ' Value'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Value' → logprob: -0.00026264708139933646
    2. ' ' → logprob: -8.250262260437012
    3. 'Value' → logprob: -14.500262260437012
    4. '	Value' → logprob: -14.500262260437012
    5. ' ' → logprob: -15.875262260437012
    6. '  ' → logprob: -16.500263214111328
    7. ' Val' → logprob: -16.750263214111328
    8. ' Va' → logprob: -17.000263214111328
    9. '_Value' → logprob: -17.750263214111328
    10. '(Value' → logprob: -17.875263214111328

Token 96: 'Error' (ID: 2255)
  Prédit: 'rror'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rror' → logprob: -0.2015729695558548
    2. 'Error' → logprob: -1.7015730142593384
    3. 'ror' → logprob: -9.576573371887207
    4. 'alue' → logprob: -10.326573371887207
    5. 'ption' → logprob: -10.701573371887207
    6. 'error' → logprob: -11.326573371887207
    7. 'r' → logprob: -12.576573371887207
    8. 'Value' → logprob: -12.701573371887207
    9. 'LError' → logprob: -12.826573371887207
    10. 'SError' → logprob: -12.951573371887207

Token 97: '("' (ID: 568)
  Prédit: '("'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '("' → logprob: -0.38893359899520874
    2. '(' → logprob: -1.1389336585998535
    3. '('' → logprob: -6.2639336585998535
    4. '(
' → logprob: -9.138933181762695
    5. '(f' → logprob: -10.263933181762695
    6. '"' → logprob: -12.763933181762695
    7. '(",' → logprob: -13.138933181762695
    8. '(":' → logprob: -13.138933181762695
    9. '()' → logprob: -13.388933181762695
    10. '(

' → logprob: -13.638933181762695

Token 98: 'Edge' (ID: 16577)
  Prédit: ' Edge'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Edge' → logprob: -1.3685669898986816
    2. ' An' → logprob: -1.6185669898986816
    3. 'An' → logprob: -1.9935669898986816
    4. 'Vertices' → logprob: -1.9935669898986816
    5. ' Vert' → logprob: -2.8685669898986816
    6. 'Edge' → logprob: -3.2435669898986816
    7. 'Edges' → logprob: -3.3685669898986816
    8. ' Cannot' → logprob: -3.4935669898986816
    9. ' Ed' → logprob: -3.6185669898986816
    10. '"' → logprob: -4.243566989898682

Token 99: ' endpoints' (ID: 76454)
  Prédit: ' cannot'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' cannot' → logprob: -1.0150526762008667
    2. ' vertices' → logprob: -1.1400526762008667
    3. ' must' → logprob: -1.8900526762008667
    4. 's' → logprob: -2.7650527954101562
    5. ' endpoints' → logprob: -3.1400527954101562
    6. ' ' → logprob: -3.2650527954101562
    7. ' can' → logprob: -5.265052795410156
    8. ':' → logprob: -5.515052795410156
    9. ' s' → logprob: -5.515052795410156
    10. ' should' → logprob: -6.265052795410156

Token 100: ' must' (ID: 2804)
  Prédit: ' must'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' must' → logprob: -0.012800035066902637
    2. ' cannot' → logprob: -4.387800216674805
    3. ' ' → logprob: -8.387800216674805
    4. ' should' → logprob: -10.637800216674805
    5. 'must' → logprob: -10.637800216674805
    6. ' can't' → logprob: -12.137800216674805
    7. 'cannot' → logprob: -13.012800216674805
    8. ' are' → logprob: -13.262800216674805
    9. ' can' → logprob: -13.387800216674805
    10. ' )' → logprob: -13.637800216674805

Token 101: ' be' (ID: 413)
  Prédit: ' be'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' be' → logprob: -0.0004889304982498288
    2. ' differ' → logprob: -8.125489234924316
    3. ' different' → logprob: -9.625489234924316
    4. ' ' → logprob: -9.750489234924316
    5. ' distinct' → logprob: -11.000489234924316
    6. 'different' → logprob: -11.000489234924316
    7. 'be' → logprob: -11.125489234924316
    8. '<|end|>' → logprob: -11.750489234924316
    9. ' not' → logprob: -12.000489234924316
    10. '	be' → logprob: -13.250489234924316

Token 102: ' distinct' (ID: 16913)
  Prédit: ' different'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' different' → logprob: -0.39770257472991943
    2. ' distinct' → logprob: -1.1477025747299194
    3. 'different' → logprob: -4.647702693939209
    4. 'distinct' → logprob: -6.772702693939209
    5. ' two' → logprob: -10.89770221710205
    6. ' unique' → logprob: -11.39770221710205
    7. ' ' → logprob: -12.52270221710205
    8. 'd' → logprob: -12.52270221710205
    9. ' differ' → logprob: -13.89770221710205
    10. 'ifferent' → logprob: -14.27270221710205

Token 103: '")
' (ID: 1896)
  Prédit: '")'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '")' → logprob: -0.021075116470456123
    2. ' ")' → logprob: -4.646075248718262
    3. '.")' → logprob: -5.271075248718262
    4. '")
' → logprob: -5.771075248718262
    5. ' edges' → logprob: -6.521075248718262
    6. '')' → logprob: -7.771075248718262
    7. ' vertices' → logprob: -7.896075248718262
    8. '.' → logprob: -9.021075248718262
    9. '"' → logprob: -9.396075248718262
    10. ' characters' → logprob: -9.521075248718262

Token 104: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.32935699820518494
    2. '
' → logprob: -1.3293570280075073
    3. '        
' → logprob: -5.329357147216797
    4. '<|end|>' → logprob: -5.329357147216797
    5. ' 
' → logprob: -5.954357147216797
    6. '  
' → logprob: -6.329357147216797
    7. ' ' → logprob: -7.704357147216797
    8. '        ' → logprob: -7.829357147216797
    9. '    
' → logprob: -8.579357147216797
    10. ')' → logprob: -8.829357147216797

Token 105: ' self' (ID: 1051)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7910117506980896
    2. ' self' → logprob: -0.7910117506980896
    3. ' if' → logprob: -2.7910118103027344
    4. 'self' (adapté à ' self') → logprob: -3.6660118103027344
    5. 'if' → logprob: -5.541011810302734
    6. '        ' → logprob: -7.041011810302734
    7. ' ' → logprob: -8.541011810302734
    8. ' edges' → logprob: -8.666011810302734
    9. '
' → logprob: -8.916011810302734
    10. '        
' → logprob: -9.041011810302734

Token 106: '.v' (ID: 5520)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.9165981411933899
    2. '.vertices' → logprob: -1.9165980815887451
    3. ' ' → logprob: -2.166598081588745
    4. 's' → logprob: -2.291598081588745
    5. ' .' → logprob: -2.541598081588745
    6. '_vertices' → logprob: -2.666598081588745
    7. 'vertices' → logprob: -3.666598081588745
    8. '.v' → logprob: -4.041598320007324
    9. '   ' → logprob: -4.791598320007324
    10. ' vertices' → logprob: -5.166598320007324

Token 107: 's' (ID: 82)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0034205703996121883
    2. 'al' → logprob: -5.878420352935791
    3. 's' → logprob: -7.628420352935791
    4. 'er' → logprob: -10.62842082977295
    5. 'ert' → logprob: -10.62842082977295
    6. 'als' → logprob: -10.87842082977295
    7. ' =' → logprob: -11.62842082977295
    8. 'es' → logprob: -11.62842082977295
    9. 'erts' → logprob: -11.87842082977295
    10. 'alid' → logprob: -12.00342082977295

Token 108: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.04197060689330101
    2. '=' → logprob: -3.2919704914093018
    3. 'et' → logprob: -5.666970729827881
    4. 'ets' → logprob: -8.541970252990723
    5. '=set' → logprob: -9.041970252990723
    6. ' ={' → logprob: -10.541970252990723
    7. ' ' → logprob: -10.791970252990723
    8. 'elf' → logprob: -10.791970252990723
    9. '1' → logprob: -11.041970252990723
    10. '   ' → logprob: -11.166970252990723

Token 109: ' tuple' (ID: 31311)
  Prédit: ' {'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' {' → logprob: -0.9474151730537415
    2. ' fro' → logprob: -0.9474151730537415
    3. 'fro' → logprob: -1.5724151134490967
    4. '{' → logprob: -4.197415351867676
    5. ' tuple' → logprob: -6.697415351867676
    6. ' ' → logprob: -7.447415351867676
    7. 'tuple' → logprob: -9.447415351867676
    8. 'set' → logprob: -11.572415351867676
    9. '   ' → logprob: -11.572415351867676
    10. ' set' → logprob: -11.822415351867676

Token 110: '(sorted' (ID: 92488)
  Prédit: '(sorted'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(sorted' → logprob: -0.007739716209471226
    2. 'sorted' → logprob: -4.882739543914795
    3. ' sorted' → logprob: -9.257740020751953
    4. '(' → logprob: -10.507740020751953
    5. ' ' → logprob: -12.257740020751953
    6. '   ' → logprob: -12.382740020751953
    7. '([' → logprob: -14.632740020751953
    8. '{' → logprob: -14.882740020751953
    9. '_sorted' → logprob: -15.382740020751953
    10. '(
' → logprob: -15.507740020751953

Token 111: '((' (ID: 2054)
  Prédit: '(['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '([' → logprob: -0.0008405959815718234
    2. '((' → logprob: -7.125840663909912
    3. '(v' → logprob: -11.000840187072754
    4. '(' → logprob: -11.250840187072754
    5. '[v' → logprob: -12.875840187072754
    6. ' ([' → logprob: -13.250840187072754
    7. '[' → logprob: -14.125840187072754
    8. '({' → logprob: -14.875840187072754
    9. ')' → logprob: -15.500840187072754
    10. ' [' → logprob: -15.625840187072754

Token 112: 'v' (ID: 85)
  Prédit: 'v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -3.5597102396423e-05
    2. ' v' → logprob: -10.250035285949707
    3. '   ' → logprob: -16.125036239624023
    4. '(v' → logprob: -17.375036239624023
    5. ')v' → logprob: -17.500036239624023
    6. ' ' → logprob: -17.750036239624023
    7. '[v' → logprob: -17.875036239624023
    8. '	v' → logprob: -17.875036239624023
    9. '
' → logprob: -18.500036239624023
    10. '_v' → logprob: -18.875036239624023

Token 113: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.6240566083070007e-06
    2. 'v' → logprob: -13.500001907348633
    3. ' v' → logprob: -17.500001907348633
    4. ' ' → logprob: -17.625001907348633
    5. '```' → logprob: -17.625001907348633
    6. ',v' → logprob: -18.000001907348633
    7. '2' → logprob: -18.500001907348633
    8. '(v' → logprob: -19.125001907348633
    9. 'alue' → logprob: -19.125001907348633
    10. '_' → logprob: -19.125001907348633

Token 114: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.25839415192604065
    2. ',v' → logprob: -1.5083941221237183
    3. ' ,' → logprob: -5.258394241333008
    4. 'v' → logprob: -7.133394241333008
    5. ' v' → logprob: -8.258394241333008
    6. '(v' → logprob: -9.383394241333008
    7. ' ' → logprob: -9.633394241333008
    8. ',
' → logprob: -10.883394241333008
    9. '<|end|>' → logprob: -12.633394241333008
    10. '(' → logprob: -12.883394241333008

Token 115: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.2254440188407898
    2. ' v' → logprob: -1.6004440784454346
    3. ' ' → logprob: -10.850443840026855
    4. '   ' → logprob: -11.975443840026855
    5. '    ' → logprob: -13.100443840026855
    6. ' 
' → logprob: -13.850443840026855
    7. '	v' → logprob: -13.975443840026855
    8. '  ' → logprob: -14.100443840026855
    9. '2' → logprob: -15.475443840026855
    10. '       ' → logprob: -15.975443840026855

Token 116: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -3.857719275401905e-05
    2. '1' → logprob: -10.250038146972656
    3. ' ' → logprob: -13.125038146972656
    4. 'v' → logprob: -15.125038146972656
    5. '
' → logprob: -15.500038146972656
    6. 's' → logprob: -15.750038146972656
    7. '   ' → logprob: -15.875038146972656
    8. '_' → logprob: -16.125038146972656
    9. ',' → logprob: -16.625038146972656
    10. '

' → logprob: -17.125038146972656

Token 117: ')))

' (ID: 46526)
  Prédit: ')))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')))' → logprob: -0.0010481736389920115
    2. '))' → logprob: -7.2510480880737305
    3. ')' → logprob: -8.75104808807373
    4. ')))
' → logprob: -9.25104808807373
    5. ' ' → logprob: -9.87604808807373
    6. ')));' → logprob: -11.50104808807373
    7. '')))' → logprob: -11.50104808807373
    8. ')))

' → logprob: -12.62604808807373
    9. '   ' → logprob: -12.87604808807373
    10. ' ))' → logprob: -13.62604808807373

Token 118: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 119: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.05071235075592995
    2. ' def' → logprob: -3.1757123470306396
    3. '   ' → logprob: -5.550712585449219
    4. ' ' → logprob: -5.800712585449219
    5. '@property' → logprob: -8.300712585449219
    6. '<|end|>' → logprob: -8.425712585449219
    7. ')' → logprob: -8.675712585449219
    8. '  ' → logprob: -10.550712585449219
    9. '    
' → logprob: -11.175712585449219
    10. '  
' → logprob: -11.300712585449219

Token 120: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.11970934271812439
    2. ' ' → logprob: -2.2447092533111572
    3. ' ==' → logprob: -5.244709491729736
    4. '__' → logprob: -7.619709491729736
    5. ' def' → logprob: -7.869709491729736
    6. ' eq' → logprob: -8.619709014892578
    7. 'eq' → logprob: -8.869709014892578
    8. '_eq' → logprob: -9.744709014892578
    9. 'repr' → logprob: -9.869709014892578
    10. '  ' → logprob: -9.869709014892578

Token 121: 'eq' (ID: 21725)
  Prédit: 'eq'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'eq' → logprob: -9.686778503237292e-05
    2. 'hash' → logprob: -9.250097274780273
    3. 'init' → logprob: -14.875097274780273
    4. 'repr' → logprob: -15.125097274780273
    5. ' eq' → logprob: -15.875097274780273
    6. 'lt' → logprob: -17.375097274780273
    7. '_eq' → logprob: -18.500097274780273
    8. '   ' → logprob: -18.750097274780273
    9. ' ' → logprob: -19.375097274780273
    10. 'e' → logprob: -19.750097274780273

Token 122: '__(' (ID: 8241)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.04880015552043915
    2. '__(' → logprob: -3.048800230026245
    3. '__((' → logprob: -8.923800468444824
    4. '__(
' → logprob: -10.798800468444824
    5. '__('' → logprob: -10.798800468444824
    6. '__(*' → logprob: -10.923800468444824
    7. '__.__' → logprob: -11.298800468444824
    8. '__("' → logprob: -13.048800468444824
    9. '___' → logprob: -13.298800468444824
    10. '__,' → logprob: -13.798800468444824

Token 123: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.01628807745873928
    2. 'other' → logprob: -4.2662882804870605
    3. ' self' → logprob: -6.2662882804870605
    4. ' other' → logprob: -8.641287803649902
    5. ',' → logprob: -10.516287803649902
    6. ')' → logprob: -11.641287803649902
    7. '(self' → logprob: -12.516287803649902
    8. ' ' → logprob: -12.641287803649902
    9. '<|end|>' → logprob: -13.391287803649902
    10. ',self' → logprob: -13.891287803649902

Token 124: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.05230873078107834
    2. ' ,' → logprob: -3.3023087978363037
    3. '__,' → logprob: -4.427308559417725
    4. '__' → logprob: -7.177308559417725
    5. '__(' → logprob: -7.177308559417725
    6. '<|end|>' → logprob: -8.802309036254883
    7. '(self' → logprob: -9.177309036254883
    8. ')' → logprob: -9.802309036254883
    9. '__,
' → logprob: -9.927309036254883
    10. ',self' → logprob: -9.927309036254883

Token 125: ' other' (ID: 1273)
  Prédit: ' other'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' other' → logprob: -0.20145875215530396
    2. 'other' → logprob: -1.7014586925506592
    3. ' ' → logprob: -10.826458930969238
    4. 'Other' → logprob: -11.326458930969238
    5. '(other' → logprob: -11.951458930969238
    6. ' self' → logprob: -12.826458930969238
    7. '_other' → logprob: -13.451458930969238
    8. '<|end|>' → logprob: -13.451458930969238
    9. 'self' → logprob: -14.201458930969238
    10. ',' → logprob: -16.201457977294922

Token 126: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.4384704828262329
    2. ' ):' → logprob: -1.313470482826233
    3. ' )' → logprob: -2.9384703636169434
    4. ')' → logprob: -3.6884703636169434
    5. ',' → logprob: -5.188470363616943
    6. ' ,' → logprob: -6.688470363616943
    7. '):
' → logprob: -7.188470363616943
    8. ' ):
' → logprob: -8.563470840454102
    9. ' ' → logprob: -9.313470840454102
    10. '<|end|>' → logprob: -9.938470840454102

Token 127: '       ' (ID: 309)
  Prédit: ' isinstance'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' isinstance' → logprob: -0.04824017360806465
    2. '    ' → logprob: -3.7982401847839355
    3. ' self' → logprob: -4.2982401847839355
    4. ' ' → logprob: -5.0482401847839355
    5. '       ' → logprob: -6.9232401847839355
    6. '<|end|>' → logprob: -7.1732401847839355
    7. '        ' → logprob: -7.6732401847839355
    8. '   ' → logprob: -7.7982401847839355
    9. ' other' → logprob: -7.7982401847839355
    10. 'self' → logprob: -7.7982401847839355

Token 128: ' return' (ID: 622)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.18478499352931976
    2. ' isinstance' → logprob: -2.1847848892211914
    3. ' self' → logprob: -2.9347848892211914
    4. 'is' → logprob: -5.809784889221191
    5. 'other' → logprob: -10.559784889221191
    6. '(self' → logprob: -11.184784889221191
    7. 'return' (adapté à ' return') → logprob: -12.059784889221191
    8. ' not' → logprob: -12.184784889221191
    9. 'not' → logprob: -12.309784889221191
    10. '       ' → logprob: -12.309784889221191

Token 129: ' isinstance' (ID: 25889)
  Prédit: ' isinstance'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' isinstance' → logprob: -0.08056501299142838
    2. ' self' → logprob: -2.7055649757385254
    3. 'self' → logprob: -4.580564975738525
    4. 'is' → logprob: -8.080565452575684
    5. '(self' → logprob: -12.330565452575684
    6. ' ' → logprob: -12.830565452575684
    7. '   ' → logprob: -13.080565452575684
    8. ' hasattr' → logprob: -13.205565452575684
    9. ' (' → logprob: -14.080565452575684
    10. ' (
' → logprob: -14.205565452575684

Token 130: '(other' (ID: 32550)
  Prédit: '(other'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(other' → logprob: -4.263011578586884e-05
    2. 'other' → logprob: -10.500042915344238
    3. '(' → logprob: -11.125042915344238
    4. ' other' → logprob: -15.875042915344238
    5. '(self' → logprob: -16.125041961669922
    6. '(object' → logprob: -18.500041961669922
    7. 'Other' → logprob: -18.625041961669922
    8. '(
' → logprob: -19.250041961669922
    9. ' (' → logprob: -19.750041961669922
    10. '_other' → logprob: -20.000041961669922

Token 131: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0010568645084276795
    2. '(other' → logprob: -7.001056671142578
    3. ' ,' → logprob: -9.626056671142578
    4. 'other' → logprob: -10.376056671142578
    5. ',self' → logprob: -11.001056671142578
    6. '(self' → logprob: -11.501056671142578
    7. ',
' → logprob: -12.001056671142578
    8. 'self' → logprob: -12.126056671142578
    9. '

' → logprob: -12.251056671142578
    10. '
' → logprob: -12.626056671142578

Token 132: ' Edge' (ID: 16396)
  Prédit: 'Edge'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Edge' → logprob: -0.5231537818908691
    2. ' Edge' → logprob: -0.8981537818908691
    3. 'self' → logprob: -10.898153305053711
    4. ' self' → logprob: -12.773153305053711
    5. '<Edge' → logprob: -12.898153305053711
    6. ' ' → logprob: -13.148153305053711
    7. '.Edge' → logprob: -13.523153305053711
    8. 'Edges' → logprob: -14.023153305053711
    9. '
' → logprob: -14.523153305053711
    10. 'Self' → logprob: -15.273153305053711

Token 133: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -8.745069499127567e-05
    2. ' )' → logprob: -9.37508773803711
    3. '   ' → logprob: -13.75008773803711
    4. 'and' → logprob: -14.50008773803711
    5. ' and' → logprob: -15.00008773803711
    6. '       ' → logprob: -15.75008773803711
    7. '    ' → logprob: -15.75008773803711
    8. ')
' → logprob: -16.25008773803711
    9. ')&&' → logprob: -16.62508773803711
    10. ' ' → logprob: -16.62508773803711

Token 134: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.04858850687742233
    2. 'and' → logprob: -3.048588514328003
    3. ' ' → logprob: -14.673588752746582
    4. ' ' → logprob: -15.423588752746582
    5. '    ' → logprob: -15.673588752746582
    6. '        ' → logprob: -15.923588752746582
    7. ' a' → logprob: -16.673587799072266
    8. '	and' → logprob: -17.048587799072266
    9. ')' → logprob: -17.173587799072266
    10. ' an' → logprob: -17.173587799072266

Token 135: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.2519335150718689
    2. ' self' → logprob: -1.5019335746765137
    3. '(self' → logprob: -13.501933097839355
    4. ' ' → logprob: -13.626933097839355
    5. '
' → logprob: -14.251933097839355
    6. '	self' → logprob: -14.626933097839355
    7. '   ' → logprob: -15.501933097839355
    8. ' ' → logprob: -15.751933097839355
    9. '_self' → logprob: -16.501934051513672
    10. 'other' → logprob: -16.626934051513672

Token 136: '.v' (ID: 5520)
  Prédit: '.v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.v' → logprob: -1.8074162653647363e-05
    2. ' .' → logprob: -11.375018119812012
    3. '.' → logprob: -12.000018119812012
    4. ').' → logprob: -16.125017166137695
    5. '.s' → logprob: -17.250017166137695
    6. '>.' → logprob: -17.250017166137695
    7. 'vs' → logprob: -17.250017166137695
    8. '.ve' → logprob: -17.250017166137695
    9. '.ws' → logprob: -17.625017166137695
    10. '​.' → logprob: -18.000017166137695

Token 137: 's' (ID: 82)
  Prédit: 's'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -1.0280383548888494e-06
    2. '.s' → logprob: -15.125000953674316
    3. 'es' → logprob: -15.375000953674316
    4. 'vs' → logprob: -15.500000953674316
    5. '.' → logprob: -16.250001907348633
    6. 'ers' → logprob: -17.375001907348633
    7. ''s' → logprob: -17.375001907348633
    8. '```' → logprob: -17.375001907348633
    9. 'S' → logprob: -17.875001907348633
    10. ' s' → logprob: -18.375001907348633

Token 138: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.1269425004720688
    2. '==' → logprob: -2.1269423961639404
    3. '=' → logprob: -11.75194263458252
    4. '[' → logprob: -13.25194263458252
    5. ' ' → logprob: -13.75194263458252
    6. ')==' → logprob: -13.75194263458252
    7. ' =' → logprob: -14.00194263458252
    8. '==
' → logprob: -14.12694263458252
    9. ')' → logprob: -15.25194263458252
    10. '===' → logprob: -16.001941680908203

Token 139: ' other' (ID: 1273)
  Prédit: 'other'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'other' → logprob: -0.03804183006286621
    2. ' other' → logprob: -3.288041830062866
    3. '(other' → logprob: -15.663042068481445
    4. 'Other' → logprob: -16.663042068481445
    5. '.other' → logprob: -16.788042068481445
    6. '_other' → logprob: -18.038042068481445
    7. ' ' → logprob: -19.788042068481445
    8. ' other's' → logprob: -20.288042068481445
    9. 'othe' → logprob: -21.038042068481445
    10. 'self' → logprob: -21.538042068481445

Token 140: '.v' (ID: 5520)
  Prédit: '.v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.v' → logprob: -0.00023333763238042593
    2. '.' → logprob: -8.37523365020752
    3. ' .' → logprob: -14.00023365020752
    4. '.other' → logprob: -14.25023365020752
    5. 'vs' → logprob: -14.75023365020752
    6. '.s' → logprob: -14.75023365020752
    7. ').' → logprob: -16.875232696533203
    8. '[' → logprob: -16.875232696533203
    9. '..' → logprob: -16.875232696533203
    10. '.vi' → logprob: -16.875232696533203

Token 141: 's' (ID: 82)
  Prédit: 's'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -9.031157969729975e-05
    2. 'vs' → logprob: -9.625090599060059
    3. '.s' → logprob: -13.125090599060059
    4. 'v' → logprob: -13.125090599060059
    5. '.v' → logprob: -13.125090599060059
    6. 'ers' → logprob: -13.375090599060059
    7. '
' → logprob: -13.437590599060059
    8. 'es' → logprob: -13.500090599060059
    9. 'sv' → logprob: -13.562590599060059
    10. 'ert' → logprob: -13.875090599060059

Token 142: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 143: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5311069488525391
    2. '<|end|>' → logprob: -1.281106948852539
    3. '
' → logprob: -2.281106948852539
    4. ' ' → logprob: -4.531106948852539
    5. '    
' → logprob: -4.656106948852539
    6. '  ' → logprob: -6.031106948852539
    7. '

' → logprob: -6.156106948852539
    8. '  
' → logprob: -6.406106948852539
    9. ' 
' → logprob: -6.531106948852539
    10. '<|end|>' → logprob: -6.656106948852539

Token 144: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.00015598179015796632
    2. '   ' → logprob: -9.12515640258789
    3. ' def' → logprob: -10.00015640258789
    4. ' ' → logprob: -14.00015640258789
    5. '    
' → logprob: -14.25015640258789
    6. '       ' → logprob: -16.50015640258789
    7. '__' → logprob: -17.25015640258789
    8. '        
' → logprob: -17.37515640258789
    9. '  ' → logprob: -17.62515640258789
    10. 'hash' → logprob: -17.87515640258789

Token 145: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.000843576155602932
    2. '__' → logprob: -7.125843524932861
    3. 'def' → logprob: -10.87584400177002
    4. ' ' → logprob: -12.00084400177002
    5. ' def' → logprob: -12.00084400177002
    6. 'hash' → logprob: -12.75084400177002
    7. '   ' → logprob: -13.00084400177002
    8. '.__' → logprob: -14.00084400177002
    9. ' hash' → logprob: -14.62584400177002
    10. '_hash' → logprob: -15.00084400177002

Token 146: 'hash' (ID: 16909)
  Prédit: 'hash'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'hash' → logprob: -1.306760805164231e-05
    2. 'lt' → logprob: -11.25001335144043
    3. ' hash' → logprob: -17.62501335144043
    4. 'ne' → logprob: -18.75001335144043
    5. 'repr' → logprob: -19.87501335144043
    6. '_hash' → logprob: -20.62501335144043
    7. 'Hash' → logprob: -21.62501335144043
    8. '```' → logprob: -22.12501335144043
    9. '	hash' → logprob: -22.12501335144043
    10. '   ' → logprob: -23.50001335144043

Token 147: '__(' (ID: 8241)
  Prédit: '__('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.018537349998950958
    2. '__(
' → logprob: -4.768537521362305
    3. '__((' → logprob: -5.268537521362305
    4. '__' → logprob: -5.393537521362305
    5. '__('' → logprob: -9.768537521362305
    6. '(self' → logprob: -9.893537521362305
    7. '(' → logprob: -10.143537521362305
    8. '__(*' → logprob: -10.643537521362305
    9. '__("' → logprob: -12.893537521362305
    10. '<|end|>' → logprob: -14.143537521362305

Token 148: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0010168524459004402
    2. ' self' → logprob: -7.001016616821289
    3. ')' → logprob: -9.501016616821289
    4. '(self' → logprob: -10.501016616821289
    5. 'hash' → logprob: -13.501016616821289
    6. '   ' → logprob: -15.001016616821289
    7. ' ' → logprob: -15.001016616821289
    8. 'other' → logprob: -15.876016616821289
    9. 'lambda' → logprob: -16.00101661682129
    10. 's' → logprob: -16.12601661682129

Token 149: '):
' (ID: 1883)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '__' → logprob: -0.2710288166999817
    2. '__(' → logprob: -1.896028757095337
    3. '__:' → logprob: -2.771028757095337
    4. '__)' → logprob: -5.146028995513916
    5. '__((' → logprob: -5.146028995513916
    6. '__('' → logprob: -6.146028995513916
    7. '):' → logprob: -6.271028995513916
    8. '__(*' → logprob: -6.646028995513916
    9. '__(
' → logprob: -6.771028995513916
    10. '__.__' → logprob: -7.021028995513916

Token 150: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.023981552571058273
    2. ' return' → logprob: -3.7739815711975098
    3. '   ' → logprob: -7.89898157119751
    4. 'return' → logprob: -8.523981094360352
    5. ' hash' → logprob: -9.023981094360352
    6. '      ' → logprob: -11.273981094360352
    7. '    ' → logprob: -11.773981094360352
    8. '
' → logprob: -12.148981094360352
    9. '	return' → logprob: -12.648981094360352
    10. '        
' → logprob: -13.148981094360352

Token 151: ' return' (ID: 622)
  Prédit: 'hash'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'hash' → logprob: -0.1310945451259613
    2. ' hash' → logprob: -2.131094455718994
    3. 'return' (adapté à ' return') → logprob: -5.881094455718994
    4. ' return' → logprob: -6.631094455718994
    5. '   ' → logprob: -10.006094932556152
    6. '(hash' → logprob: -14.756094932556152
    7. '
' → logprob: -15.006094932556152
    8. '    ' → logprob: -15.131094932556152
    9. '	hash' → logprob: -15.256094932556152
    10. '/hash' → logprob: -16.006093978881836

Token 152: ' hash' (ID: 10691)
  Prédit: 'hash'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'hash' → logprob: -0.38687583804130554
    2. ' hash' → logprob: -1.136875867843628
    3. '   ' → logprob: -13.261876106262207
    4. ' ' → logprob: -13.761876106262207
    5. '	hash' → logprob: -14.136876106262207
    6. '(hash' → logprob: -14.261876106262207
    7. 'h' → logprob: -15.761876106262207
    8. '.hash' → logprob: -16.38687515258789
    9. '_hash' → logprob: -16.63687515258789
    10. '```' → logprob: -16.63687515258789

Token 153: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -1.5690089639974758e-05
    2. '(' → logprob: -11.125015258789062
    3. '(s' → logprob: -14.875015258789062
    4. '((' → logprob: -15.000015258789062
    5. ' (' → logprob: -15.625015258789062
    6. 'self' → logprob: -16.875015258789062
    7. '(this' → logprob: -18.875015258789062
    8. '(sel' → logprob: -19.000015258789062
    9. '```' → logprob: -19.250015258789062
    10. ' self' → logprob: -19.500015258789062

Token 154: '.v' (ID: 5520)
  Prédit: '.v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.v' → logprob: -2.248469718324486e-05
    2. '.' → logprob: -11.000022888183594
    3. ' .' → logprob: -12.875022888183594
    4. ').' → logprob: -13.125022888183594
    5. '.s' → logprob: -14.375022888183594
    6. '.vi' → logprob: -15.250022888183594
    7. '.ve' → logprob: -16.250022888183594
    8. '
' → logprob: -17.125022888183594
    9. '>.' → logprob: -17.500022888183594
    10. '.V' → logprob: -17.500022888183594

Token 155: 's' (ID: 82)
  Prédit: 's'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.00036799011286348104
    2. 'self' → logprob: -8.500368118286133
    3. '.s' → logprob: -9.125368118286133
    4. '.v' → logprob: -10.250368118286133
    5. '```' → logprob: -11.625368118286133
    6. 'vs' → logprob: -12.625368118286133
    7. 'sv' → logprob: -13.625368118286133
    8. '
' → logprob: -13.625368118286133
    9. '``' → logprob: -13.875368118286133
    10. '(self' → logprob: -14.875368118286133

Token 156: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -4.286852345103398e-05
    2. ' )' → logprob: -10.250042915344238
    3. ')
' → logprob: -12.250042915344238
    4. '<|end|>' → logprob: -13.750042915344238
    5. '}' → logprob: -13.875042915344238
    6. ')return' → logprob: -15.250042915344238
    7. '   ' → logprob: -16.000041961669922
    8. ' ' → logprob: -16.750041961669922
    9. '))' → logprob: -17.375041961669922
    10. ')}' → logprob: -17.500041961669922

Token 157: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.21071189641952515
    2. '
' → logprob: -1.96071195602417
    3. '<|end|>' → logprob: -3.46071195602417
    4. '    
' → logprob: -4.71071195602417
    5. '<|end|>' → logprob: -5.58571195602417
    6. ' ' → logprob: -6.58571195602417
    7. ' 
' → logprob: -6.58571195602417
    8. '  
' → logprob: -7.46071195602417
    9. '  ' → logprob: -7.96071195602417
    10. ')' → logprob: -8.335711479187012

Token 158: ' def' (ID: 1056)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5287960171699524
    2. 'def' (adapté à ' def') → logprob: -1.0287959575653076
    3. ')' → logprob: -3.5287959575653076
    4. ' def' → logprob: -4.778796195983887
    5. ' ' → logprob: -5.028796195983887
    6. '    
' → logprob: -6.153796195983887
    7. ':' → logprob: -6.778796195983887
    8. ',' → logprob: -6.903796195983887
    9. '  ' → logprob: -7.028796195983887
    10. '    ' → logprob: -7.528796195983887

Token 159: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.16544440388679504
    2. ' ' → logprob: -2.0404443740844727
    3. 'repr' → logprob: -5.290444374084473
    4. ' def' → logprob: -5.540444374084473
    5. ' str' → logprob: -5.540444374084473
    6. '__' → logprob: -5.665444374084473
    7. '_repr' → logprob: -5.915444374084473
    8. ' repr' → logprob: -6.915444374084473
    9. ' _' → logprob: -7.790444374084473
    10. ' ' → logprob: -7.915444374084473

Token 160: 'repr' (ID: 67002)
  Prédit: 'repr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'repr' → logprob: -0.06199278309941292
    2. 'str' → logprob: -2.811992883682251
    3. ' str' → logprob: -11.561992645263672
    4. 'pr' → logprob: -12.311992645263672
    5. 'string' → logprob: -13.061992645263672
    6. ' repr' → logprob: -13.061992645263672
    7. '   ' → logprob: -13.936992645263672
    8. ' ' → logprob: -13.936992645263672
    9. '_repr' → logprob: -14.186992645263672
    10. '  ' → logprob: -14.311992645263672

Token 161: '__(' (ID: 8241)
  Prédit: '__('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.02995678223669529
    2. '__('' → logprob: -4.029956817626953
    3. '__' → logprob: -4.529956817626953
    4. '__(
' → logprob: -7.279956817626953
    5. '__("' → logprob: -8.529956817626953
    6. '__((' → logprob: -9.654956817626953
    7. '(' → logprob: -12.904956817626953
    8. '__(*' → logprob: -13.029956817626953
    9. '(self' → logprob: -14.904956817626953
    10. '__(/*!' → logprob: -15.279956817626953

Token 162: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.03240100294351578
    2. 'f' → logprob: -3.7824010848999023
    3. ')' → logprob: -4.782401084899902
    4. '(self' → logprob: -7.782401084899902
    5. ' self' → logprob: -8.782401084899902
    6. '')' → logprob: -9.657401084899902
    7. ''f' → logprob: -10.282401084899902
    8. ''s' → logprob: -10.407401084899902
    9. ' f' → logprob: -11.532401084899902
    10. ''' → logprob: -11.907401084899902

Token 163: '):
' (ID: 1883)
  Prédit: '__(''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '__('' → logprob: -0.5127772092819214
    2. '__)' → logprob: -1.5127772092819214
    3. '__' → logprob: -1.7627772092819214
    4. '__(' → logprob: -4.887777328491211
    5. '__("' → logprob: -6.887777328491211
    6. '__(
' → logprob: -7.887777328491211
    7. '__)
' → logprob: -9.387777328491211
    8. '__((' → logprob: -9.512777328491211
    9. '__(*' → logprob: -9.887777328491211
    10. '__)

' → logprob: -10.512777328491211

Token 164: '       ' (ID: 309)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.016528237611055374
    2. ' f' → logprob: -4.266528129577637
    3. '       ' → logprob: -6.141528129577637
    4. '   ' → logprob: -8.641528129577637
    5. 'return' → logprob: -11.766528129577637
    6. ' ' → logprob: -12.141528129577637
    7. '     ' → logprob: -12.141528129577637
    8. '    ' → logprob: -12.891528129577637
    9. ' return' → logprob: -12.891528129577637
    10. ''f' → logprob: -13.141528129577637

Token 165: ' return' (ID: 622)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.0029382407665252686
    2. ' f' → logprob: -6.002938270568848
    3. '   ' → logprob: -8.002938270568848
    4. 'return' (adapté à ' return') → logprob: -9.127938270568848
    5. '       ' → logprob: -11.377938270568848
    6. ' return' → logprob: -12.752938270568848
    7. ' ' → logprob: -13.127938270568848
    8. '    ' → logprob: -14.252938270568848
    9. '  ' → logprob: -14.627938270568848
    10. '     ' → logprob: -15.002938270568848

Token 166: ' f' (ID: 285)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.34851574897766113
    2. ' f' → logprob: -1.2235157489776611
    3. ' ' → logprob: -10.348515510559082
    4. '	f' → logprob: -11.348515510559082
    5. ' ' → logprob: -11.598515510559082
    6. '"' → logprob: -11.723515510559082
    7. '   ' → logprob: -12.473515510559082
    8. ''f' → logprob: -13.598515510559082
    9. '(f' → logprob: -13.723515510559082
    10. '
' → logprob: -14.098515510559082

Token 167: '"{' (ID: 27510)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.12195093929767609
    2. '"' → logprob: -2.87195086479187
    3. '(f' → logprob: -2.99695086479187
    4. '("' → logprob: -5.746951103210449
    5. ''' → logprob: -6.496951103210449
    6. ' f' → logprob: -6.996951103210449
    7. '(' → logprob: -7.121951103210449
    8. '('' → logprob: -7.621951103210449
    9. ''f' → logprob: -7.621951103210449
    10. '`' → logprob: -9.24695110321045

Token 168: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.05624078959226608
    2. 'Edge' → logprob: -3.5562407970428467
    3. ''' → logprob: -3.6812407970428467
    4. ''E' → logprob: -8.306241035461426
    5. ''{' → logprob: -8.431241035461426
    6. ''s' → logprob: -8.806241035461426
    7. ' self' → logprob: -9.056241035461426
    8. '{' → logprob: -9.931241035461426
    9. 'Vertex' → logprob: -10.431241035461426
    10. '<Edge' → logprob: -11.181241035461426

Token 169: '.v' (ID: 5520)
  Prédit: '.v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.v' → logprob: -0.005896322429180145
    2. '{' → logprob: -6.130896091461182
    3. '.Edge' → logprob: -6.130896091461182
    4. '}.' → logprob: -7.380896091461182
    5. '.V' → logprob: -8.00589656829834
    6. 'Edge' → logprob: -8.50589656829834
    7. ' .' → logprob: -9.88089656829834
    8. '".' → logprob: -10.00589656829834
    9. '.Ed' → logprob: -10.13089656829834
    10. ''.' → logprob: -10.25589656829834

Token 170: 's' (ID: 82)
  Prédit: 's'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.12874072790145874
    2. '{' → logprob: -2.8787407875061035
    3. '{s' → logprob: -3.8787407875061035
    4. 'r' → logprob: -4.3787407875061035
    5. 'er' → logprob: -4.7537407875061035
    6. '}' → logprob: -5.0037407875061035
    7. '{
' → logprob: -5.7537407875061035
    8. '}s' → logprob: -5.7537407875061035
    9. 'ert' → logprob: -6.3787407875061035
    10. '```' → logprob: -7.2537407875061035

Token 171: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.4401024580001831
    2. '}"' → logprob: -1.565102458000183
    3. '}' → logprob: -1.940102458000183
    4. '}")' → logprob: -5.940102577209473
    5. '"}' → logprob: -8.190102577209473
    6. '"' → logprob: -9.815102577209473
    7. '0' → logprob: -9.940102577209473
    8. '}"
' → logprob: -10.190102577209473
    9. ')' → logprob: -10.440102577209473
    10. ')"' → logprob: -10.815102577209473

Token 172: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -3.810037742368877e-05
    2. ' ' → logprob: -10.500038146972656
    3. '[' → logprob: -12.125038146972656
    4. '}' → logprob: -12.750038146972656
    5. ']' → logprob: -13.875038146972656
    6. ''' → logprob: -14.750038146972656
    7. '{' → logprob: -16.000038146972656
    8. '   ' → logprob: -16.125038146972656
    9. '
' → logprob: -16.500038146972656
    10. '-' → logprob: -16.562538146972656

Token 173: ']}' (ID: 28000)
  Prédit: ']}'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']}' → logprob: -0.03244253993034363
    2. '}-{' → logprob: -4.157442569732666
    3. '}' → logprob: -4.657442569732666
    4. '},' → logprob: -6.907442569732666
    5. ']' → logprob: -7.032442569732666
    6. ',' → logprob: -7.282442569732666
    7. '}-' → logprob: -7.407442569732666
    8. '']' → logprob: -7.407442569732666
    9. ']}"' → logprob: -7.782442569732666
    10. ''}' → logprob: -7.782442569732666

Token 174: '{' (ID: 90)
  Prédit: '}-{'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '}-{' → logprob: -0.01911596581339836
    2. '}{' → logprob: -4.019115924835205
    3. '}' → logprob: -7.269115924835205
    4. '}->{' → logprob: -8.894116401672363
    5. '}_{' → logprob: -9.644116401672363
    6. '}<' → logprob: -10.644116401672363
    7. '},{' → logprob: -11.394116401672363
    8. '{' → logprob: -11.394116401672363
    9. '}.{' → logprob: -12.894116401672363
    10. '}:{' → logprob: -13.394116401672363

Token 175: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0008845492266118526
    2. 's' → logprob: -8.125885009765625
    3. ' ' → logprob: -8.625885009765625
    4. '-' → logprob: -8.875885009765625
    5. ' self' → logprob: -9.000885009765625
    6. 'v' → logprob: -10.000885009765625
    7. '-self' → logprob: -10.500885009765625
    8. '(self' → logprob: -11.125885009765625
    9. 'vs' → logprob: -11.125885009765625
    10. '}' → logprob: -11.875885009765625

Token 176: '.v' (ID: 5520)
  Prédit: 'vs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'vs' → logprob: -0.3008881211280823
    2. '.v' → logprob: -1.5508880615234375
    3. 's' → logprob: -3.6758880615234375
    4. '.' → logprob: -4.4258880615234375
    5. '[' → logprob: -4.9258880615234375
    6. '.s' → logprob: -6.9258880615234375
    7. '_vs' → logprob: -7.3008880615234375
    8. 'v' → logprob: -7.6758880615234375
    9. '1' → logprob: -8.175888061523438
    10. ' vs' → logprob: -8.550888061523438

Token 177: 's' (ID: 82)
  Prédit: 's'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.00013882013445254415
    2. '1' → logprob: -9.500139236450195
    3. '2' → logprob: -9.750139236450195
    4. '}s' → logprob: -13.375139236450195
    5. ' s' → logprob: -14.125139236450195
    6. '{s' → logprob: -14.500139236450195
    7. '0' → logprob: -14.750139236450195
    8. '[' → logprob: -15.125139236450195
    9. '}' → logprob: -15.250139236450195
    10. '```' → logprob: -15.375139236450195

Token 178: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.10037661343812943
    2. '1' → logprob: -2.350376605987549
    3. '}' → logprob: -8.975377082824707
    4. ' ' → logprob: -11.350377082824707
    5. '
' → logprob: -11.975377082824707
    6. '[
' → logprob: -12.100377082824707
    7. 's' → logprob: -12.600377082824707
    8. '   ' → logprob: -12.725377082824707
    9. '-' → logprob: -12.975377082824707
    10. '{' → logprob: -13.350377082824707

Token 179: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.4272752852994017e-05
    2. ' ' → logprob: -10.87502384185791
    3. '
' → logprob: -13.12502384185791
    4. '}' → logprob: -13.25002384185791
    5. '   ' → logprob: -14.37502384185791
    6. '[' → logprob: -15.00002384185791
    7. '

' → logprob: -15.25002384185791
    8. ']' → logprob: -16.125024795532227
    9. '0' → logprob: -16.750024795532227
    10. '  ' → logprob: -16.875024795532227

Token 180: ']}' (ID: 28000)
  Prédit: '}"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '}"' → logprob: -5.526570384972729e-05
    2. '}' → logprob: -10.250055313110352
    3. '}"
' → logprob: -11.750055313110352
    4. '}")' → logprob: -12.500055313110352
    5. '"' → logprob: -12.625055313110352
    6. '"}' → logprob: -13.000055313110352
    7. '}'' → logprob: -13.875055313110352
    8. '}"

' → logprob: -14.750055313110352
    9. ''}' → logprob: -14.875055313110352
    10. ' }' → logprob: -15.125055313110352

Token 181: '"

' (ID: 2678)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '"' → logprob: -0.00035965684219263494
    2. '"
' → logprob: -9.125359535217285
    3. ''"' → logprob: -9.125359535217285
    4. '}"' → logprob: -9.250359535217285
    5. '"}' → logprob: -11.500359535217285
    6. '```' → logprob: -11.625359535217285
    7. ')"' → logprob: -12.000359535217285
    8. '"""' → logprob: -12.250359535217285
    9. '"`' → logprob: -12.250359535217285
    10. ' "' → logprob: -12.500359535217285

Token 182: '#' (ID: 2)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.03556498512625694
    2. 'class' → logprob: -3.41056489944458
    3. '

' → logprob: -8.160565376281738
    4. '<|end|>' → logprob: -8.160565376281738
    5. '    
' → logprob: -8.285565376281738
    6. '  
' → logprob: -8.660565376281738
    7. '   ' → logprob: -8.785565376281738
    8. ' 
' → logprob: -8.910565376281738
    9. ':' → logprob: -8.910565376281738
    10. '<|end|>' → logprob: -9.160565376281738

Token 183: ' Represents' (ID: 84592)
  Prédit: 'class'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'class' → logprob: -0.000352266215486452
    2. '#' → logprob: -8.625351905822754
    3. 'from' → logprob: -9.250351905822754
    4. ' class' → logprob: -9.875351905822754
    5. 'abstract' → logprob: -11.375351905822754
    6. 'import' → logprob: -12.375351905822754
    7. 'c' → logprob: -13.500351905822754
    8. 'def' → logprob: -13.625351905822754
    9. '"class' → logprob: -13.750351905822754
    10. 'The' → logprob: -14.500351905822754

Token 184: ' a' (ID: 261)
  Prédit: ' an'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' an' → logprob: -0.43585726618766785
    2. ' a' → logprob: -1.0608572959899902
    3. ' the' → logprob: -5.68585729598999
    4. 'a' → logprob: -5.93585729598999
    5. 'class' → logprob: -7.56085729598999
    6. ' class' → logprob: -8.060856819152832
    7. 'an' → logprob: -9.185856819152832
    8. 'from' → logprob: -10.185856819152832
    9. ' abstract' → logprob: -10.560856819152832
    10. 'the' → logprob: -10.810856819152832

Token 185: ' Face' (ID: 29049)
  Prédit: ' Triangle'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' Triangle' → logprob: -0.08072865009307861
    2. ' triangle' → logprob: -3.080728530883789
    3. 'Triangle' → logprob: -3.830728530883789
    4. ' Point' → logprob: -5.205728530883789
    5. 'triangle' → logprob: -7.205728530883789
    6. ' Tri' → logprob: -7.330728530883789
    7. ' Polygon' → logprob: -7.580728530883789
    8. ' T' → logprob: -7.955728530883789
    9. ' point' → logprob: -8.080728530883789
    10. 'class' → logprob: -8.205728530883789

Token 186: ' of' (ID: 328)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.39035478234291077
    2. ':' → logprob: -1.2653547525405884
    3. ':
' → logprob: -3.890354871749878
    4. 'class' → logprob: -4.265354633331299
    5. '(Abstract' → logprob: -5.390354633331299
    6. '(class' → logprob: -7.265354633331299
    7. ' (' → logprob: -7.640354633331299
    8. ',' → logprob: -8.640355110168457
    9. 'abstract' → logprob: -8.640355110168457
    10. ' class' → logprob: -8.890355110168457

Token 187: ' the' (ID: 290)
  Prédit: ' a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.5266605615615845
    2. 'a' → logprob: -1.1516605615615845
    3. 'the' → logprob: -2.776660442352295
    4. ' the' → logprob: -3.651660442352295
    5. ' four' → logprob: -6.651660442352295
    6. '4' → logprob: -7.276660442352295
    7. ' an' → logprob: -7.401660442352295
    8. 'Triangle' → logprob: -7.776660442352295
    9. 'ABC' → logprob: -8.026660919189453
    10. 'Quadr' → logprob: -8.026660919189453

Token 188: ' tetra' (ID: 176775)
  Prédit: ' tetra'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' tetra' → logprob: -0.5880510807037354
    2. 'tet' → logprob: -0.8380510807037354
    3. 'class' → logprob: -4.963050842285156
    4. 'T' → logprob: -6.088050842285156
    5. 'cube' → logprob: -7.588050842285156
    6. 'triangle' → logprob: -7.588050842285156
    7. 't' → logprob: -7.713050842285156
    8. ' cube' → logprob: -7.963050842285156
    9. ' class' → logprob: -8.088050842285156
    10. ' T' → logprob: -8.713050842285156

Token 189: 'hedron' (ID: 144037)
  Prédit: 'hedron'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'hedron' → logprob: -0.0016649465542286634
    2. 'ra' → logprob: -6.751665115356445
    3. 'd' → logprob: -8.251665115356445
    4. 'rah' → logprob: -9.501665115356445
    5. 'dra' → logprob: -9.501665115356445
    6. 'r' → logprob: -10.876665115356445
    7. 'dr' → logprob: -10.876665115356445
    8. 'hedral' → logprob: -11.751665115356445
    9. 'hed' → logprob: -11.876665115356445
    10. 'ral' → logprob: -12.001665115356445

Token 190: ',' (ID: 11)
  Prédit: 'class'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'class' → logprob: -0.00034356804098933935
    2. ' class' → logprob: -8.125343322753906
    3. '
' → logprob: -10.375343322753906
    4. '(class' → logprob: -11.625343322753906
    5. ':
' → logprob: -12.750343322753906
    6. ':' → logprob: -13.750343322753906
    7. '<class' → logprob: -13.875343322753906
    8. ',class' → logprob: -14.125343322753906
    9. '(
' → logprob: -15.000343322753906
    10. '[class' → logprob: -15.125343322753906

Token 191: ' identified' (ID: 17800)
  Prédit: ' an'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' an' → logprob: -0.7408570051193237
    2. ' which' → logprob: -1.8658570051193237
    3. ' defined' → logprob: -1.9908570051193237
    4. ' with' → logprob: -3.6158571243286133
    5. 'class' → logprob: -3.8658571243286133
    6. ' abstract' → logprob: -4.115857124328613
    7. 'which' → logprob: -4.115857124328613
    8. 'defined' → logprob: -4.365857124328613
    9. ' typically' → logprob: -4.365857124328613
    10. ' storing' → logprob: -4.365857124328613

Token 192: ' by' (ID: 656)
  Prédit: ' by'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' by' → logprob: -0.07069001346826553
    2. 'by' → logprob: -2.6956899166107178
    3. '   ' → logprob: -7.570690155029297
    4. ' ' → logprob: -9.570690155029297
    5. '  ' → logprob: -10.070690155029297
    6. '<|end|>' → logprob: -10.070690155029297
    7. 'class' → logprob: -10.320690155029297
    8. '#' → logprob: -10.945690155029297
    9. '=' → logprob: -11.695690155029297
    10. ',' → logprob: -11.820690155029297

Token 193: ' its' (ID: 1617)
  Prédit: ' three'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' three' → logprob: -0.8856488466262817
    2. ' its' → logprob: -1.1356488466262817
    3. 'three' → logprob: -1.6356488466262817
    4. 'its' → logprob: -3.260648727416992
    5. 'the' → logprob: -3.885648727416992
    6. ' the' → logprob: -4.885648727416992
    7. '3' → logprob: -6.135648727416992
    8. 'vertices' → logprob: -6.885648727416992
    9. ' vertices' → logprob: -7.010648727416992
    10. 'a' → logprob: -8.510648727416992

Token 194: ' ' (ID: 220)
  Prédit: ' three'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' three' → logprob: -0.32892081141471863
    2. ' vertices' → logprob: -1.828920841217041
    3. 'vertices' → logprob: -2.578920841217041
    4. 'three' → logprob: -3.203920841217041
    5. '3' → logprob: -6.328920841217041
    6. ' edges' → logprob: -7.703920841217041
    7. ' ' → logprob: -7.953920841217041
    8. 'vertex' → logprob: -8.703920364379883
    9. 'edges' → logprob: -8.703920364379883
    10. ' vertex' → logprob: -9.203920364379883

Token 195: '3' (ID: 18)
  Prédit: 'vertices'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'vertices' → logprob: -0.2613355815410614
    2. 'three' → logprob: -1.5113356113433838
    3. 'edges' → logprob: -5.761335372924805
    4. '3' → logprob: -6.136335372924805
    5. ' three' → logprob: -6.136335372924805
    6. ' vertices' → logprob: -6.886335372924805
    7. 'vertex' → logprob: -7.386335372924805
    8. 'name' → logprob: -9.136335372924805
    9. 'Vertex' → logprob: -10.761335372924805
    10. 'faces' → logprob: -10.886335372924805

Token 196: ' vertices' (ID: 38360)
  Prédit: ' vertices'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' vertices' → logprob: -0.08197620511054993
    2. 'vertices' → logprob: -2.5819761753082275
    3. ' edges' → logprob: -6.706976413726807
    4. '<|end|>' → logprob: -7.081976413726807
    5. '_vertices' → logprob: -7.581976413726807
    6. 'Vertices' → logprob: -8.081975936889648
    7. 'edges' → logprob: -9.331975936889648
    8. ' vertex' → logprob: -10.456975936889648
    9. 'vertex' → logprob: -10.956975936889648
    10. '.vertices' → logprob: -11.331975936889648

Token 197: ',' (ID: 11)
  Prédit: 'class'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'class' → logprob: -1.7432603272027336e-06
    2. '
' → logprob: -13.500001907348633
    3. ' class' → logprob: -15.000001907348633
    4. '```' → logprob: -19.125001907348633
    5. '<class' → logprob: -19.250001907348633
    6. '"class' → logprob: -19.750001907348633
    7. '#' → logprob: -19.750001907348633
    8. '(class' → logprob: -20.250001907348633
    9. ',class' → logprob: -21.500001907348633
    10. '  
' → logprob: -21.750001907348633

Token 198: ' sorted' (ID: 20099)
  Prédit: 'immutable'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'immutable' → logprob: -1.228459119796753
    2. '   ' → logprob: -2.228459119796753
    3. ' immutable' → logprob: -2.353459119796753
    4. '#' → logprob: -2.353459119796753
    5. 's' → logprob: -2.478459119796753
    6. 'with' → logprob: -3.228459119796753
    7. ' with' → logprob: -3.478459119796753
    8. 'class' → logprob: -3.603459119796753
    9. ' edges' → logprob: -3.603459119796753
    10. ' which' → logprob: -3.603459119796753

Token 199: '
' (ID: 198)
  Prédit: 'class'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'class' → logprob: -0.0015162922209128737
    2. ' class' → logprob: -7.501516342163086
    3. '(class' → logprob: -7.751516342163086
    4. '<|end|>' → logprob: -7.751516342163086
    5. ',' → logprob: -10.876516342163086
    6. 'from' → logprob: -11.251516342163086
    7. '
' → logprob: -11.501516342163086
    8. ' (' → logprob: -11.501516342163086
    9. '(' → logprob: -11.501516342163086
    10. '<|end|>' → logprob: -11.626516342163086

Token 200: 'class' (ID: 1444)
  Prédit: 'class'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'class' → logprob: -0.0001858982432167977
    2. '
' → logprob: -8.8751859664917
    3. ' class' → logprob: -10.0001859664917
    4. '  
' → logprob: -15.6251859664917
    5. '<class' → logprob: -15.8751859664917
    6. '(class' → logprob: -16.500185012817383
    7. ' 
' → logprob: -16.625185012817383
    8. '<|end|>' → logprob: -16.875185012817383
    9. '"class' → logprob: -18.250185012817383
    10. '```' → logprob: -18.875185012817383

Token 201: ' Face' (ID: 29049)
  Prédit: 'Face'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Face' → logprob: -0.04879458621144295
    2. ' Face' → logprob: -3.0487945079803467
    3. 'Triangle' → logprob: -8.798794746398926
    4. 'face' → logprob: -11.173794746398926
    5. 'Facet' → logprob: -11.423794746398926
    6. ' Triangle' → logprob: -11.548794746398926
    7. ' face' → logprob: -11.548794746398926
    8. '_face' → logprob: -12.548794746398926
    9. 'Vertex' → logprob: -13.423794746398926
    10. 'F' → logprob: -13.923794746398926

Token 202: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.013083995319902897
    2. ':
' → logprob: -4.3880839347839355
    3. '(' → logprob: -7.5130839347839355
    4. '(Vertex' → logprob: -11.763084411621094
    5. ':

' → logprob: -11.888084411621094
    6. '(Abstract' → logprob: -12.138084411621094
    7. ' :' → logprob: -13.013084411621094
    8. '):' → logprob: -14.138084411621094
    9. '(F' → logprob: -14.263084411621094
    10. ',' → logprob: -14.263084411621094

Token 203: '   ' (ID: 271)
  Prédit: ':
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.612469494342804
    2. ':' → logprob: -1.2374694347381592
    3. '   ' → logprob: -1.8624694347381592
    4. '(' → logprob: -4.737469673156738
    5. 'def' → logprob: -5.862469673156738
    6. ' def' → logprob: -8.362469673156738
    7. '  ' → logprob: -8.862469673156738
    8. '(Abstract' → logprob: -8.862469673156738
    9. '):
' → logprob: -8.987469673156738
    10. '):' → logprob: -10.237469673156738

Token 204: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.2526654899120331
    2. ' def' → logprob: -1.5026655197143555
    3. '   ' → logprob: -7.2526655197143555
    4. '__' → logprob: -11.002665519714355
    5. ' ' → logprob: -12.002665519714355
    6. '```' → logprob: -13.877665519714355
    7. ' __' → logprob: -14.127665519714355
    8. 'class' → logprob: -14.252665519714355
    9. '	def' → logprob: -14.252665519714355
    10. '  ' → logprob: -14.627665519714355

Token 205: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.07908035069704056
    2. '__' → logprob: -2.57908034324646
    3. 'init' → logprob: -9.079080581665039
    4. '_init' → logprob: -9.829080581665039
    5. '___' → logprob: -11.954080581665039
    6. ' init' → logprob: -12.079080581665039
    7. 'def' → logprob: -12.454080581665039
    8. ' def' → logprob: -12.954080581665039
    9. ' ' → logprob: -14.079080581665039
    10. '```' → logprob: -14.204080581665039

Token 206: 'init' (ID: 3287)
  Prédit: 'init'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: -1.3856492842023727e-06
    2. 'repr' → logprob: -13.750000953674316
    3. '__' → logprob: -15.500000953674316
    4. '_init' → logprob: -17.125001907348633
    5. ' init' → logprob: -17.250001907348633
    6. 'eq' → logprob: -18.000001907348633
    7. 'post' → logprob: -18.000001907348633
    8. 'ini' → logprob: -18.250001907348633
    9. '   ' → logprob: -18.250001907348633
    10. 'def' → logprob: -18.625001907348633

Token 207: '__(' (ID: 8241)
  Prédit: '__('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.12698952853679657
    2. '(self' → logprob: -2.1269896030426025
    3. '__' → logprob: -10.751989364624023
    4. '(' → logprob: -11.376989364624023
    5. '__(
' → logprob: -11.876989364624023
    6. ' (' → logprob: -12.126989364624023
    7. '   ' → logprob: -12.251989364624023
    8. 'self' → logprob: -12.376989364624023
    9. '_(' → logprob: -12.376989364624023
    10. ',' → logprob: -13.626989364624023

Token 208: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.00019173922191839665
    2. ' self' → logprob: -9.375191688537598
    3. ',' → logprob: -9.500191688537598
    4. '(self' → logprob: -10.625191688537598
    5. '   ' → logprob: -12.250191688537598
    6. '
' → logprob: -13.750191688537598
    7. ',self' → logprob: -13.750191688537598
    8. '       ' → logprob: -15.375191688537598
    9. 's' → logprob: -15.875191688537598
    10. ')' → logprob: -16.125192642211914

Token 209: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.17050312459468842
    2. '(self' → logprob: -1.9205031394958496
    3. 'self' → logprob: -4.92050313949585
    4. '__(' → logprob: -6.17050313949585
    5. ',self' → logprob: -7.92050313949585
    6. ' (' → logprob: -8.420502662658691
    7. ' ,' → logprob: -8.920502662658691
    8. '(' → logprob: -10.420502662658691
    9. ' self' → logprob: -10.545502662658691
    10. '   ' → logprob: -10.545502662658691

Token 210: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.15502692759037018
    2. 'vertices' → logprob: -2.530026912689209
    3. 'self' → logprob: -3.030026912689209
    4. 'vs' → logprob: -4.655026912689209
    5. ' v' → logprob: -5.905026912689209
    6. 'verts' → logprob: -6.530026912689209
    7. ' vertices' → logprob: -6.655026912689209
    8. ' self' → logprob: -7.780026912689209
    9. '   ' → logprob: -9.405027389526367
    10. ' vs' → logprob: -10.030027389526367

Token 211: '1' (ID: 16)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.05025411397218704
    2. 'es' → logprob: -4.0502543449401855
    3. ':' → logprob: -4.8002543449401855
    4. 'ert' → logprob: -4.9252543449401855
    5. '   ' → logprob: -5.0502543449401855
    6. 'ices' → logprob: -5.6752543449401855
    7. 'erts' → logprob: -6.3002543449401855
    8. '3' → logprob: -6.5502543449401855
    9. '1' → logprob: -7.5502543449401855
    10. ')' → logprob: -7.8002543449401855

Token 212: ':' (ID: 25)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.07060892879962921
    2. ':' → logprob: -2.6956088542938232
    3. '=' → logprob: -8.320609092712402
    4. ':str' → logprob: -8.445609092712402
    5. ' ,' → logprob: -8.820609092712402
    6. ',v' → logprob: -10.570609092712402
    7. '   ' → logprob: -11.195609092712402
    8. ',
' → logprob: -12.070609092712402
    9. 'v' → logprob: -12.195609092712402
    10. ' :' → logprob: -12.445609092712402

Token 213: ' str' (ID: 989)
  Prédit: 'str'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'str' → logprob: -0.038045283406972885
    2. ' str' → logprob: -3.2880451679229736
    3. '   ' → logprob: -13.413044929504395
    4. '[str' → logprob: -14.038044929504395
    5. ':str' → logprob: -14.663044929504395
    6. '	str' → logprob: -15.163044929504395
    7. ' ' → logprob: -15.538044929504395
    8. '(str' → logprob: -16.16304588317871
    9. ')' → logprob: -16.16304588317871
    10. '
' → logprob: -16.41304588317871

Token 214: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.1279553291387856e-05
    2. ' ,' → logprob: -11.875011444091797
    3. ',v' → logprob: -12.625011444091797
    4. ',
' → logprob: -14.250011444091797
    5. '   ' → logprob: -15.625011444091797
    6. '‌,' → logprob: -16.125011444091797
    7. ' ' → logprob: -17.125011444091797
    8. ',

' → logprob: -18.125011444091797
    9. ',
' → logprob: -18.375011444091797
    10. '  ' → logprob: -18.500011444091797

Token 215: ' v' (ID: 323)
  Prédit: ' v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' v' → logprob: -0.3868858814239502
    2. 'v' → logprob: -1.1368858814239502
    3. '    ' → logprob: -11.386885643005371
    4. '   ' → logprob: -12.886885643005371
    5. ' ' → logprob: -14.636885643005371
    6. '	v' → logprob: -15.136885643005371
    7. ' ' → logprob: -16.636886596679688
    8. ',v' → logprob: -17.136886596679688
    9. '  ' → logprob: -17.261886596679688
    10. ',' → logprob: -17.386886596679688

Token 216: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -1.7954958821064793e-05
    2. ',' → logprob: -11.000018119812012
    3. '3' → logprob: -15.125018119812012
    4. ' ' → logprob: -15.625018119812012
    5. ' ,' → logprob: -15.750018119812012
    6. ',v' → logprob: -15.750018119812012
    7. ',
' → logprob: -16.000017166137695
    8. '1' → logprob: -16.250017166137695
    9. 'v' → logprob: -16.375017166137695
    10. '
' → logprob: -17.125017166137695

Token 217: ':' (ID: 25)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0011730826226994395
    2. ':' → logprob: -7.25117301940918
    3. '=' → logprob: -8.00117301940918
    4. ' ,' → logprob: -9.37617301940918
    5. 'v' → logprob: -11.62617301940918
    6. ',v' → logprob: -11.75117301940918
    7. '',' → logprob: -11.87617301940918
    8. ':str' → logprob: -12.50117301940918
    9. '=None' → logprob: -12.87617301940918
    10. ' v' → logprob: -13.00117301940918

Token 218: ' str' (ID: 989)
  Prédit: 'str'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'str' → logprob: -0.2519914507865906
    2. ' str' → logprob: -1.5019915103912354
    3. 'v' → logprob: -10.001991271972656
    4. ' v' → logprob: -11.126991271972656
    5. ':str' → logprob: -14.251991271972656
    6. '   ' → logprob: -14.376991271972656
    7. ' ' → logprob: -15.376991271972656
    8. '[str' → logprob: -15.376991271972656
    9. '(str' → logprob: -15.751991271972656
    10. '=str' → logprob: -15.876991271972656

Token 219: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -4.23917081207037e-05
    2. ' ,' → logprob: -10.125041961669922
    3. ',v' → logprob: -13.500041961669922
    4. ',
' → logprob: -15.125041961669922
    5. 'v' → logprob: -15.250041961669922
    6. '   ' → logprob: -15.750041961669922
    7. '',' → logprob: -15.750041961669922
    8. ' v' → logprob: -16.750041961669922
    9. '‌,' → logprob: -17.125041961669922
    10. ')' → logprob: -17.625041961669922

Token 220: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.6931846141815186
    2. ' v' → logprob: -0.6931846141815186
    3. '    ' → logprob: -10.818184852600098
    4. '   ' → logprob: -11.318184852600098
    5. ' ' → logprob: -12.818184852600098
    6. '	v' → logprob: -13.818184852600098
    7. '  ' → logprob: -14.943184852600098
    8. ')v' → logprob: -15.443184852600098
    9. '_v' → logprob: -15.818184852600098
    10. ')' → logprob: -15.943184852600098

Token 221: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -6.706686690449715e-05
    2. ',' → logprob: -9.750066757202148
    3. '1' → logprob: -13.375066757202148
    4. ',v' → logprob: -13.625066757202148
    5. '   ' → logprob: -13.750066757202148
    6. ' ' → logprob: -13.750066757202148
    7. ' ,' → logprob: -14.000066757202148
    8. ')' → logprob: -14.500066757202148
    9. '2' → logprob: -14.625066757202148
    10. 'v' → logprob: -14.750066757202148

Token 222: ':' (ID: 25)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.647053062915802
    2. ':' → logprob: -0.772053062915802
    3. '):
' → logprob: -4.397053241729736
    4. ' ):' → logprob: -7.272053241729736
    5. ',' → logprob: -7.522053241729736
    6. ')' → logprob: -7.522053241729736
    7. ' :' → logprob: -9.647052764892578
    8. '   ' → logprob: -9.897052764892578
    9. '=' → logprob: -10.022052764892578
    10. ''):' → logprob: -10.397052764892578

Token 223: ' str' (ID: 989)
  Prédit: 'str'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'str' → logprob: -0.6327142715454102
    2. ' str' → logprob: -0.7577142715454102
    3. ' ' → logprob: -10.25771427154541
    4. ''' → logprob: -10.38271427154541
    5. '   ' → logprob: -10.63271427154541
    6. ')' → logprob: -11.50771427154541
    7. ' '' → logprob: -13.13271427154541
    8. ':str' → logprob: -13.25771427154541
    9. '(str' → logprob: -13.63271427154541
    10. '[str' → logprob: -13.75771427154541

Token 224: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.1605619490146637
    2. '):' → logprob: -1.9105619192123413
    3. '   ' → logprob: -9.285561561584473
    4. ' ):
' → logprob: -9.285561561584473
    5. '):
' → logprob: -9.535561561584473
    6. ' ):' → logprob: -10.660561561584473
    7. ':' → logprob: -10.660561561584473
    8. ')' → logprob: -11.285561561584473
    9. '       ' → logprob: -11.535561561584473
    10. '):

' → logprob: -12.535561561584473

Token 225: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.013002688996493816
    2. 'vertices' → logprob: -5.263002872467041
    3. 'self' → logprob: -5.638002872467041
    4. 'vs' → logprob: -6.138002872467041
    5. ' vertices' → logprob: -7.263002872467041
    6. ' self' → logprob: -7.638002872467041
    7. 'v' → logprob: -8.388002395629883
    8. 'verts' → logprob: -8.388002395629883
    9. '   ' → logprob: -9.638002395629883
    10. ' if' → logprob: -10.013002395629883

Token 226: ' vertices' (ID: 38360)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.5544317960739136
    2. ' self' → logprob: -2.054431915283203
    3. 'vs' → logprob: -2.054431915283203
    4. '       ' → logprob: -2.554431915283203
    5. 'vertices' (adapté à ' vertices') → logprob: -3.429431915283203
    6. 'if' → logprob: -4.054431915283203
    7. ' if' → logprob: -4.304431915283203
    8. ' vertices' → logprob: -4.429431915283203
    9. ' verts' → logprob: -5.054431915283203
    10. ' vs' → logprob: -5.304431915283203

Token 227: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.16024118661880493
    2. ' =' → logprob: -1.9102411270141602
    3. '   ' → logprob: -11.53524112701416
    4. '=set' → logprob: -12.28524112701416
    5. 's' → logprob: -15.03524112701416
    6. ':' → logprob: -15.16024112701416
    7. '_sorted' → logprob: -15.16024112701416
    8. '_set' → logprob: -15.16024112701416
    9. '=self' → logprob: -15.28524112701416
    10. 'sorted' → logprob: -15.28524112701416

Token 228: ' sorted' (ID: 20099)
  Prédit: 'sorted'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sorted' → logprob: -0.008335486985743046
    2. ' sorted' → logprob: -4.883335590362549
    3. 'tuple' → logprob: -7.383335590362549
    4. '{' → logprob: -9.75833511352539
    5. ' tuple' → logprob: -10.63333511352539
    6. 'set' → logprob: -11.50833511352539
    7. '(sorted' → logprob: -11.75833511352539
    8. ' {' → logprob: -12.88333511352539
    9. '   ' → logprob: -12.88333511352539
    10. '[' → logprob: -13.75833511352539

Token 229: '((' (ID: 2054)
  Prédit: '(['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '([' → logprob: -0.01824921742081642
    2. '((' → logprob: -4.018249034881592
    3. '({' → logprob: -9.64324951171875
    4. '(v' → logprob: -10.76824951171875
    5. '[v' → logprob: -11.76824951171875
    6. '(' → logprob: -12.89324951171875
    7. '{' → logprob: -13.76824951171875
    8. '[(' → logprob: -14.01824951171875
    9. '(([' → logprob: -14.26824951171875
    10. '([(' → logprob: -15.01824951171875

Token 230: 'v' (ID: 85)
  Prédit: 'v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -1.0921942703134846e-05
    2. ' v' → logprob: -12.25001049041748
    3. '(v' → logprob: -13.00001049041748
    4. '   ' → logprob: -13.00001049041748
    5. '[v' → logprob: -13.62501049041748
    6. ')v' → logprob: -16.125011444091797
    7. '[' → logprob: -16.250011444091797
    8. '	v' → logprob: -16.750011444091797
    9. '       ' → logprob: -17.125011444091797
    10. '?v' → logprob: -18.000011444091797

Token 231: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.60414821645827e-06
    2. 'ert' → logprob: -13.375004768371582
    3. 'v' → logprob: -13.500004768371582
    4. 's' → logprob: -14.750004768371582
    5. '3' → logprob: -14.750004768371582
    6. ' v' → logprob: -15.625004768371582
    7. 'f' → logprob: -15.875004768371582
    8. 'er' → logprob: -15.875004768371582
    9. 'self' → logprob: -16.125003814697266
    10. 'l' → logprob: -16.750003814697266

Token 232: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0084574855864048
    2. ',v' → logprob: -5.008457660675049
    3. ' ,' → logprob: -6.383457660675049
    4. ',
' → logprob: -10.75845718383789
    5. 'v' → logprob: -10.88345718383789
    6. '(v' → logprob: -12.63345718383789
    7. ' ' → logprob: -12.75845718383789
    8. ' v' → logprob: -13.38345718383789
    9. '(' → logprob: -13.63345718383789
    10. '   ' → logprob: -15.50845718383789

Token 233: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.043196264654397964
    2. ' v' → logprob: -3.168196201324463
    3. '   ' → logprob: -8.793196678161621
    4. ' ' → logprob: -10.418196678161621
    5. '  ' → logprob: -12.043196678161621
    6. '    ' → logprob: -12.418196678161621
    7. '       ' → logprob: -13.168196678161621
    8. '     ' → logprob: -13.918196678161621
    9. '	v' → logprob: -14.043196678161621
    10. '      ' → logprob: -14.855696678161621

Token 234: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0018790162866935134
    2. 'v' → logprob: -6.8768792152404785
    3. ',' → logprob: -7.2518792152404785
    4. ',v' → logprob: -9.37687873840332
    5. '   ' → logprob: -10.87687873840332
    6. ' ' → logprob: -11.25187873840332
    7. '1' → logprob: -11.87687873840332
    8. ' v' → logprob: -12.37687873840332
    9. '
' → logprob: -13.50187873840332
    10. '       ' → logprob: -13.75187873840332

Token 235: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.003925114404410124
    2. ' ,' → logprob: -6.253925323486328
    3. ',v' → logprob: -6.253925323486328
    4. 'v' → logprob: -9.878925323486328
    5. ' v' → logprob: -11.253925323486328
    6. ',
' → logprob: -12.753925323486328
    7. ' ' → logprob: -13.003925323486328
    8. '),' → logprob: -14.628925323486328
    9. '(v' → logprob: -14.628925323486328
    10. '   ' → logprob: -15.128925323486328

Token 236: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.31327441334724426
    2. ' v' → logprob: -1.3132743835449219
    3. ' ' → logprob: -11.688274383544922
    4. '    ' → logprob: -14.188274383544922
    5. '(v' → logprob: -14.188274383544922
    6. '   ' → logprob: -14.438274383544922
    7. '	v' → logprob: -15.188274383544922
    8. '       ' → logprob: -15.438274383544922
    9. '  ' → logprob: -15.438274383544922
    10. ',' → logprob: -15.688274383544922

Token 237: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -5.9153885558771435e-06
    2. ' ' → logprob: -12.750005722045898
    3. 'v' → logprob: -14.125005722045898
    4. '
' → logprob: -14.500005722045898
    5. '   ' → logprob: -15.125005722045898
    6. '))' → logprob: -15.500005722045898
    7. '```' → logprob: -15.500005722045898
    8. ')' → logprob: -15.687505722045898
    9. ',' → logprob: -15.750005722045898
    10. '1' → logprob: -15.937505722045898

Token 238: '))
' (ID: 2210)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.07921252399682999
    2. '))
' → logprob: -2.5792124271392822
    3. '       ' → logprob: -8.454212188720703
    4. ' ))' → logprob: -9.954212188720703
    5. ')' → logprob: -10.954212188720703
    6. '))

' → logprob: -11.079212188720703
    7. ' ))
' → logprob: -11.704212188720703
    8. '   ' → logprob: -11.829212188720703
    9. '));' → logprob: -12.704212188720703
    10. ')))' → logprob: -12.829212188720703

Token 239: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0025583035312592983
    2. '<|end|>' → logprob: -6.12755823135376
    3. ')' → logprob: -9.252558708190918
    4. '
' → logprob: -9.377558708190918
    5. ' if' → logprob: -9.377558708190918
    6. 'self' → logprob: -10.752558708190918
    7. 'if' → logprob: -11.002558708190918
    8. ',' → logprob: -11.127558708190918
    9. '        
' → logprob: -11.377558708190918
    10. '<|end|>' → logprob: -11.502558708190918

Token 240: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.25550979375839233
    2. ' if' → logprob: -1.880509853363037
    3. 'self' → logprob: -3.005509853363037
    4. '       ' → logprob: -3.880509853363037
    5. ' self' → logprob: -6.005509853363037
    6. 'for' → logprob: -8.255509376525879
    7. 'assert' → logprob: -10.130509376525879
    8. ' for' → logprob: -10.755509376525879
    9. '
' → logprob: -11.380509376525879
    10. '   ' → logprob: -12.505509376525879

Token 241: ' len' (ID: 4631)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.019086381420493126
    2. ' len' → logprob: -4.0190863609313965
    3. 'vertices' → logprob: -7.0190863609313965
    4. 'v' → logprob: -10.894086837768555
    5. ' vertices' → logprob: -11.269086837768555
    6. '(len' → logprob: -11.894086837768555
    7. '	len' → logprob: -14.019086837768555
    8. 'length' → logprob: -14.769086837768555
    9. 'any' → logprob: -14.894086837768555
    10. '   ' → logprob: -14.894086837768555

Token 242: '(set' (ID: 25904)
  Prédit: '(set'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(set' → logprob: -0.14350931346416473
    2. '(vertices' → logprob: -2.0185093879699707
    3. '(' → logprob: -8.143508911132812
    4. '({' → logprob: -8.268508911132812
    5. 'set' → logprob: -8.393508911132812
    6. 'vertices' → logprob: -10.518508911132812
    7. '{' → logprob: -11.143508911132812
    8. '(
' → logprob: -12.643508911132812
    9. ' set' → logprob: -13.268508911132812
    10. '(vertex' → logprob: -13.268508911132812

Token 243: '(vertices' (ID: 158708)
  Prédit: '(vertices'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(vertices' → logprob: -0.00029351349803619087
    2. 'vertices' → logprob: -8.625293731689453
    3. '((' → logprob: -9.125293731689453
    4. '(' → logprob: -13.250293731689453
    5. ' vertices' → logprob: -13.375293731689453
    6. '([' → logprob: -13.625293731689453
    7. '(vertex' → logprob: -15.625293731689453
    8. '{' → logprob: -16.125293731689453
    9. ')' → logprob: -16.250293731689453
    10. '(v' → logprob: -16.750293731689453

Token 244: '))' (ID: 915)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.6932389736175537
    2. '))' → logprob: -0.6932389736175537
    3. ')!=' → logprob: -9.693239212036133
    4. '())' → logprob: -11.818239212036133
    5. ' )' → logprob: -12.443239212036133
    6. ' ))' → logprob: -12.568239212036133
    7. '()))' → logprob: -12.818239212036133
    8. ')<' → logprob: -13.068239212036133
    9. '])' → logprob: -13.318239212036133
    10. ')))' → logprob: -13.443239212036133

Token 245: ' !=' (ID: 1666)
  Prédit: ' !='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' !=' → logprob: -0.2847532331943512
    2. '!=' → logprob: -1.6597532033920288
    3. '<' → logprob: -3.4097533226013184
    4. ')' → logprob: -4.409753322601318
    5. ' <' → logprob: -4.534753322601318
    6. ')!=' → logprob: -6.534753322601318
    7. '()!=' → logprob: -9.40975284576416
    8. ' ' → logprob: -10.03475284576416
    9. '<len' → logprob: -11.15975284576416
    10. ' )' → logprob: -11.40975284576416

Token 246: ' ' (ID: 220)
  Prédit: '3'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.0013272607466205955
    2. ' ' → logprob: -6.626327037811279
    3. '   ' → logprob: -14.626327514648438
    4. '  ' → logprob: -15.251327514648438
    5. ' ' → logprob: -15.688827514648438
    6. '
' → logprob: -16.188827514648438
    7. '۳' → logprob: -17.001327514648438
    8. 'len' → logprob: -17.063827514648438
    9. '1' → logprob: -17.188827514648438
    10. '```' → logprob: -17.751327514648438

Token 247: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -2.451116051815916e-05
    2. ' ' → logprob: -10.625024795532227
    3. '۳' → logprob: -16.625024795532227
    4. '
' → logprob: -16.750024795532227
    5. '   ' → logprob: -18.250024795532227
    6. '৩' → logprob: -18.312524795532227
    7. 'len' → logprob: -18.562524795532227
    8. '```' → logprob: -18.562524795532227
    9. '３' → logprob: -18.875024795532227
    10. '  ' → logprob: -18.937524795532227

Token 248: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.12802600860595703
    2. ':
' → logprob: -2.128026008605957
    3. ' or' → logprob: -7.128026008605957
    4. '):' → logprob: -8.878026008605957
    5. '):
' → logprob: -9.628026008605957
    6. '       ' → logprob: -10.503026008605957
    7. '           ' → logprob: -11.128026008605957
    8. ',' → logprob: -11.378026008605957
    9. ')' → logprob: -11.378026008605957
    10. ' :' → logprob: -11.628026008605957

Token 249: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.003261846024543047
    2. ' raise' → logprob: -5.753262042999268
    3. 'raise' → logprob: -9.50326156616211
    4. ',' → logprob: -13.12826156616211
    5. '	raise' → logprob: -13.37826156616211
    6. '          ' → logprob: -13.62826156616211
    7. '   ' → logprob: -13.87826156616211
    8. '       ' → logprob: -13.87826156616211
    9. '            ' → logprob: -14.12826156616211
    10. ' ' → logprob: -15.12826156616211

Token 250: ' raise' (ID: 9338)
  Prédit: ' raise'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' raise' → logprob: -0.33803439140319824
    2. 'raise' (adapté à ' raise') → logprob: -1.3380343914031982
    3. '           ' → logprob: -3.7130343914031982
    4. '	raise' → logprob: -10.213034629821777
    5. '               ' → logprob: -11.713034629821777
    6. '
' → logprob: -11.838034629821777
    7. '_raise' → logprob: -12.963034629821777
    8. '            ' → logprob: -12.963034629821777
    9. '       ' → logprob: -13.338034629821777
    10. 'Raise' → logprob: -13.338034629821777

Token 251: ' Value' (ID: 9963)
  Prédit: 'Value'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Value' → logprob: -0.00671584764495492
    2. ' Value' → logprob: -5.006715774536133
    3. '	Value' → logprob: -16.131715774536133
    4. 'value' → logprob: -16.131715774536133
    5. '_value' → logprob: -16.256715774536133
    6. '(Value' → logprob: -16.881715774536133
    7. ' value' → logprob: -17.131715774536133
    8. '_Value' → logprob: -17.131715774536133
    9. ' ' → logprob: -17.506715774536133
    10. '.Value' → logprob: -17.756715774536133

Token 252: 'Error' (ID: 2255)
  Prédit: 'Error'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Error' → logprob: -1.5048530030981055e-06
    2. 'rror' → logprob: -13.750001907348633
    3. 'Value' → logprob: -14.750001907348633
    4. 'alue' → logprob: -18.750001907348633
    5. 'ror' → logprob: -18.750001907348633
    6. 'error' → logprob: -19.625001907348633
    7. '           ' → logprob: -20.250001907348633
    8. '("' → logprob: -20.375001907348633
    9. '   ' → logprob: -20.625001907348633
    10. 'or' → logprob: -20.625001907348633

Token 253: '("' (ID: 568)
  Prédit: '("'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '("' → logprob: -0.00014203863975126296
    2. '(' → logprob: -8.875142097473145
    3. '(
' → logprob: -13.250142097473145
    4. '(f' → logprob: -15.750142097473145
    5. '"' → logprob: -16.250141143798828
    6. ' ("' → logprob: -17.000141143798828
    7. '('' → logprob: -17.125141143798828
    8. '()' → logprob: -18.625141143798828
    9. '(("' → logprob: -19.000141143798828
    10. '("'' → logprob: -19.250141143798828

Token 254: 'Face' (ID: 23402)
  Prédit: 'Face'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Face' → logprob: -0.09736831486225128
    2. ' Face' → logprob: -2.7223682403564453
    3. 'Vertices' → logprob: -3.9723682403564453
    4. 'Faces' → logprob: -5.347368240356445
    5. 'All' → logprob: -6.347368240356445
    6. ' Faces' → logprob: -7.597368240356445
    7. 'Triangle' → logprob: -8.347368240356445
    8. 'face' → logprob: -8.847368240356445
    9. ' face' → logprob: -8.847368240356445
    10. 'Edge' → logprob: -9.097368240356445

Token 255: ' must' (ID: 2804)
  Prédit: ' vertices'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' vertices' → logprob: -0.19164076447486877
    2. ' endpoints' → logprob: -1.8166407346725464
    3. 'vertices' → logprob: -4.566640853881836
    4. ' must' → logprob: -7.191640853881836
    5. 'end' → logprob: -8.566640853881836
    6. ')' → logprob: -9.691640853881836
    7. '   ' → logprob: -9.816640853881836
    8. ' ' → logprob: -10.066640853881836
    9. '.vertices' → logprob: -10.191640853881836
    10. ' end' → logprob: -10.316640853881836

Token 256: ' have' (ID: 679)
  Prédit: ' have'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' have' → logprob: -0.5250545144081116
    2. 'have' → logprob: -0.9000545144081116
    3. ' consist' → logprob: -6.525054454803467
    4. 'cons' → logprob: -8.900054931640625
    5. ' contain' → logprob: -9.025054931640625
    6. 'contain' → logprob: -9.275054931640625
    7. ' be' → logprob: -10.525054931640625
    8. ' ' → logprob: -10.650054931640625
    9. '_have' → logprob: -10.900054931640625
    10. 'be' → logprob: -11.150054931640625

Token 257: ' three' (ID: 3407)
  Prédit: ' three'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' three' → logprob: -0.07731693238019943
    2. '3' → logprob: -2.952316999435425
    3. 'three' → logprob: -3.952316999435425
    4. ' ' → logprob: -6.077316761016846
    5. ' distinct' → logprob: -7.952316761016846
    6. 'distinct' → logprob: -8.702317237854004
    7. ' exactly' → logprob: -8.952317237854004
    8. 'exact' → logprob: -10.702317237854004
    9. '_three' → logprob: -12.702317237854004
    10. ' all' → logprob: -13.077317237854004

Token 258: ' distinct' (ID: 16913)
  Prédit: ' distinct'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' distinct' → logprob: -0.06344491243362427
    2. ' unique' → logprob: -3.4384448528289795
    3. 'distinct' → logprob: -3.5634448528289795
    4. 'unique' → logprob: -7.063445091247559
    5. ' different' → logprob: -8.938445091247559
    6. 'different' → logprob: -11.188445091247559
    7. ' vertices' → logprob: -11.938445091247559
    8. ' ' → logprob: -12.438445091247559
    9. '_unique' → logprob: -13.563445091247559
    10. ')' → logprob: -14.063445091247559

Token 259: ' vertices' (ID: 38360)
  Prédit: 'vertices'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'vertices' → logprob: -0.6991022229194641
    2. ' vertices' → logprob: -0.6991022229194641
    3. ')' → logprob: -5.324102401733398
    4. ' )' → logprob: -8.449102401733398
    5. ' ' → logprob: -9.074102401733398
    6. '(vertices' → logprob: -9.199102401733398
    7. ',' → logprob: -9.324102401733398
    8. 'v' → logprob: -9.824102401733398
    9. 's' → logprob: -9.949102401733398
    10. '_vertices' → logprob: -10.136602401733398

Token 260: '")
' (ID: 1896)
  Prédit: '")'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '")' → logprob: -0.7393383383750916
    2. '")
' → logprob: -0.7393383383750916
    3. ')")' → logprob: -3.9893383979797363
    4. ')")
' → logprob: -4.114338397979736
    5. ')' → logprob: -4.989338397979736
    6. '       ' → logprob: -5.989338397979736
    7. ')
' → logprob: -7.114338397979736
    8. '")
' → logprob: -9.489337921142578
    9. '}")' → logprob: -10.489337921142578
    10. '}")
' → logprob: -11.489337921142578

Token 261: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0007698441040702164
    2. 'self' → logprob: -7.37576961517334
    3. ' self' → logprob: -9.25076961517334
    4. '
' → logprob: -10.37576961517334
    5. '   ' → logprob: -12.50076961517334
    6. '<|end|>' → logprob: -12.50076961517334
    7. '        
' → logprob: -12.87576961517334
    8. '```' → logprob: -13.62576961517334
    9. '           ' → logprob: -13.75076961517334
    10. ',' → logprob: -13.75076961517334

Token 262: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.05242762342095375
    2. '       ' → logprob: -3.1774275302886963
    3. ' self' → logprob: -4.677427768707275
    4. '   ' → logprob: -9.552427291870117
    5. '
' → logprob: -13.052427291870117
    6. '	self' → logprob: -13.052427291870117
    7. ' ' → logprob: -13.427427291870117
    8. 'class' → logprob: -14.177427291870117
    9. '(self' → logprob: -14.427427291870117
    10. '      ' → logprob: -14.552427291870117

Token 263: '.v' (ID: 5520)
  Prédit: '.v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.v' → logprob: -0.1606796234846115
    2. '.vertices' → logprob: -1.910679578781128
    3. '.' → logprob: -7.910679817199707
    4. ' .' → logprob: -10.035679817199707
    5. 'vertices' → logprob: -11.285679817199707
    6. '_vertices' → logprob: -12.410679817199707
    7. '.ids' → logprob: -12.410679817199707
    8. '.faces' → logprob: -12.410679817199707
    9. '._' → logprob: -12.910679817199707
    10. '.vert' → logprob: -13.035679817199707

Token 264: 's' (ID: 82)
  Prédit: 's'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.0005300374468788505
    2. 'ert' → logprob: -8.625530242919922
    3. 'erts' → logprob: -9.000530242919922
    4. 'er' → logprob: -9.250530242919922
    5. 'ers' → logprob: -9.625530242919922
    6. '1' → logprob: -11.125530242919922
    7. 'vs' → logprob: -11.625530242919922
    8. 'es' → logprob: -12.375530242919922
    9. 'vertices' → logprob: -12.500530242919922
    10. 'ss' → logprob: -12.875530242919922

Token 265: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.3868767023086548
    2. ' =' → logprob: -1.1368767023086548
    3. ')' → logprob: -12.886877059936523
    4. ',' → logprob: -13.636877059936523
    5. 's' → logprob: -14.136877059936523
    6. ')=' → logprob: -15.136877059936523
    7. ' ' → logprob: -15.261877059936523
    8. '<|end|>' → logprob: -16.011877059936523
    9. ' =
' → logprob: -16.386877059936523
    10. '=
' → logprob: -16.886877059936523

Token 266: ' tuple' (ID: 31311)
  Prédit: 'tuple'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tuple' → logprob: -0.00987992063164711
    2. ' tuple' → logprob: -4.634880065917969
    3. 'vertices' → logprob: -9.509880065917969
    4. '(tuple' → logprob: -10.009880065917969
    5. 'tu' → logprob: -13.134880065917969
    6. '(' → logprob: -13.509880065917969
    7. ' vertices' → logprob: -14.759880065917969
    8. '   ' → logprob: -14.884880065917969
    9. '(vertices' → logprob: -15.009880065917969
    10. 'vertex' → logprob: -16.00988006591797

Token 267: '(vertices' (ID: 158708)
  Prédit: '(vertices'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(vertices' → logprob: -0.0005888947052881122
    2. 'vertices' → logprob: -7.500588893890381
    3. '(sorted' → logprob: -10.375589370727539
    4. '(' → logprob: -12.625589370727539
    5. ' vertices' → logprob: -14.000589370727539
    6. 'sorted' → logprob: -15.000589370727539
    7. 'vert' → logprob: -16.12558937072754
    8. '(vertex' → logprob: -16.75058937072754
    9. '(
' → logprob: -17.12558937072754
    10. ' (' → logprob: -18.25058937072754

Token 268: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0001773192489054054
    2. '   ' → logprob: -9.125177383422852
    3. '<|end|>' → logprob: -10.500177383422852
    4. ' )' → logprob: -10.625177383422852
    5. '       ' → logprob: -11.875177383422852
    6. ')
' → logprob: -12.375177383422852
    7. ' ' → logprob: -12.875177383422852
    8. '<|end|>' → logprob: -14.125177383422852
    9. '}' → logprob: -14.500177383422852
    10. ',' → logprob: -14.750177383422852

Token 269: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5536044836044312
    2. '<|end|>' → logprob: -1.0536044836044312
    3. '
' → logprob: -2.6786046028137207
    4. 'def' → logprob: -5.428604602813721
    5. '<|end|>' → logprob: -6.553604602813721
    6. ' def' → logprob: -6.928604602813721
    7. '    
' → logprob: -7.678604602813721
    8. ')' → logprob: -8.178604125976562
    9. ' ' → logprob: -9.303604125976562
    10. '  ' → logprob: -10.428604125976562

Token 270: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.022117046639323235
    2. ' def' → logprob: -4.1471171379089355
    3. '   ' → logprob: -5.1471171379089355
    4. '
' → logprob: -8.397116661071777
    5. '<|end|>' → logprob: -11.397116661071777
    6. ' ' → logprob: -12.147116661071777
    7. '    
' → logprob: -12.897116661071777
    8. '	def' → logprob: -13.897116661071777
    9. '

' → logprob: -14.272116661071777
    10. '<|end|>' → logprob: -14.897116661071777

Token 271: ' __' (ID: 2516)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.47408318519592285
    2. ' __' → logprob: -0.9740831851959229
    3. 'def' → logprob: -12.974082946777344
    4. ' ' → logprob: -13.474082946777344
    5. ' def' → logprob: -14.349082946777344
    6. '_eq' → logprob: -14.349082946777344
    7. '.__' → logprob: -14.599082946777344
    8. ' ' → logprob: -14.724082946777344
    9. '___' → logprob: -16.224082946777344
    10. '==' → logprob: -16.474082946777344

Token 272: 'eq' (ID: 21725)
  Prédit: 'eq'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'eq' → logprob: -0.0015527134528383613
    2. 'repr' → logprob: -6.501552581787109
    3. 'hash' → logprob: -10.25155258178711
    4. 'lt' → logprob: -11.12655258178711
    5. 'init' → logprob: -16.00155258178711
    6. '_eq' → logprob: -16.37655258178711
    7. ' eq' → logprob: -16.75155258178711
    8. 'str' → logprob: -17.12655258178711
    9. 'len' → logprob: -17.87655258178711
    10. 'rep' → logprob: -18.00155258178711

Token 273: '__(' (ID: 8241)
  Prédit: '__('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.0798126608133316
    2. '(self' → logprob: -2.70481276512146
    3. '(' → logprob: -5.204812526702881
    4. '__' → logprob: -5.579812526702881
    5. '__((' → logprob: -8.829813003540039
    6. '__(
' → logprob: -8.829813003540039
    7. ' (' → logprob: -8.954813003540039
    8. '<|end|>' → logprob: -9.454813003540039
    9. 'self' → logprob: -10.954813003540039
    10. '__(*' → logprob: -11.204813003540039

Token 274: 'self' (ID: 1156)
  Prédit: 'other'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'other' → logprob: -0.04092012345790863
    2. 'self' → logprob: -3.2909200191497803
    3. '(other' → logprob: -6.290920257568359
    4. ' other' → logprob: -7.415920257568359
    5. '(self' → logprob: -7.790920257568359
    6. ' self' → logprob: -12.66592025756836
    7. 'Other' → logprob: -13.29092025756836
    8. '_other' → logprob: -14.54092025756836
    9. ',' → logprob: -14.79092025756836
    10. '(' → logprob: -15.41592025756836

Token 275: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.31642967462539673
    2. '(self' → logprob: -1.441429615020752
    3. '__(' → logprob: -4.191429615020752
    4. '(' → logprob: -4.191429615020752
    5. '(other' → logprob: -6.066429615020752
    6. ' ,' → logprob: -7.566429615020752
    7. '__,' → logprob: -7.816429615020752
    8. ',(' → logprob: -7.816429615020752
    9. ',self' → logprob: -7.941429615020752
    10. 'self' → logprob: -8.19143009185791

Token 276: ' other' (ID: 1273)
  Prédit: 'other'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'other' → logprob: -0.4740816056728363
    2. ' other' → logprob: -0.9740816354751587
    3. 'self' → logprob: -12.849081993103027
    4. '(other' → logprob: -13.224081993103027
    5. 'Other' → logprob: -15.974081993103027
    6. ' self' → logprob: -16.47408103942871
    7. ' ' → logprob: -19.59908103942871
    8. '_other' → logprob: -20.09908103942871
    9. '.other' → logprob: -20.59908103942871
    10. ' oth' → logprob: -21.22408103942871

Token 277: '):
' (ID: 1883)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.013096588663756847
    2. 'and' → logprob: -4.763096809387207
    3. ')' → logprob: -6.138096809387207
    4. ':' → logprob: -6.513096809387207
    5. '<|end|>' → logprob: -8.263096809387207
    6. ',' → logprob: -8.388096809387207
    7. '):
' → logprob: -9.013096809387207
    8. ':
' → logprob: -9.763096809387207
    9. '):' → logprob: -9.888096809387207
    10. '       ' → logprob: -10.763096809387207

Token 278: '       ' (ID: 309)
  Prédit: ' isinstance'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' isinstance' → logprob: -0.00043567578541114926
    2. '       ' → logprob: -8.375435829162598
    3. 'is' → logprob: -9.625435829162598
    4. ' return' → logprob: -9.750435829162598
    5. '   ' → logprob: -10.875435829162598
    6. '    ' → logprob: -11.000435829162598
    7. 'return' → logprob: -11.250435829162598
    8. ' other' → logprob: -11.500435829162598
    9. ' self' → logprob: -12.125435829162598
    10. ' is' → logprob: -12.375435829162598

Token 279: ' return' (ID: 622)
  Prédit: ' isinstance'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' isinstance' → logprob: -0.0031786637846380472
    2. 'is' → logprob: -5.753178596496582
    3. ' is' → logprob: -14.003178596496582
    4. '(is' → logprob: -15.753178596496582
    5. 'return' (adapté à ' return') → logprob: -17.8781795501709
    6. 'type' → logprob: -18.0031795501709
    7. '   ' → logprob: -18.3781795501709
    8. '       ' → logprob: -18.5031795501709
    9. ' type' → logprob: -19.0031795501709
    10. '    ' → logprob: -19.0031795501709

Token 280: ' isinstance' (ID: 25889)
  Prédit: ' isinstance'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' isinstance' → logprob: -0.004081009421497583
    2. 'is' → logprob: -5.504080772399902
    3. '(is' → logprob: -13.004080772399902
    4. 'type' → logprob: -16.12908172607422
    5. 'self' → logprob: -16.50408172607422
    6. ' is' → logprob: -17.50408172607422
    7. ' (' → logprob: -17.87908172607422
    8. ' self' → logprob: -18.12908172607422
    9. ' type' → logprob: -18.50408172607422
    10. '   ' → logprob: -19.37908172607422

Token 281: '(other' (ID: 32550)
  Prédit: '(other'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(other' → logprob: -2.165027217415627e-05
    2. 'other' → logprob: -10.750021934509277
    3. ' other' → logprob: -17.00002098083496
    4. '(' → logprob: -17.87502098083496
    5. 'Other' → logprob: -18.00002098083496
    6. '(self' → logprob: -18.62502098083496
    7. ' (' → logprob: -21.62502098083496
    8. 'OTHER' → logprob: -21.87502098083496
    9. '_other' → logprob: -22.12502098083496
    10. '(
' → logprob: -22.37502098083496

Token 282: ',' (ID: 11)
  Prédit: '(other'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(other' → logprob: -0.38736584782600403
    2. ',' → logprob: -1.1373658180236816
    3. 'other' → logprob: -7.762365818023682
    4. '.other' → logprob: -10.88736629486084
    5. ',self' → logprob: -11.26236629486084
    6. '(' → logprob: -11.26236629486084
    7. ',(' → logprob: -12.13736629486084
    8. ' other' → logprob: -12.38736629486084
    9. 'Other' → logprob: -12.51236629486084
    10. '(self' → logprob: -13.01236629486084

Token 283: ' Face' (ID: 29049)
  Prédit: 'other'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'other' → logprob: -0.008820906281471252
    2. 'self' → logprob: -5.3838210105896
    3. ' other' → logprob: -6.0088210105896
    4. 'Face' → logprob: -6.8838210105896
    5. 'Other' → logprob: -7.2588210105896
    6. '(other' → logprob: -12.758820533752441
    7. ' Face' → logprob: -13.258820533752441
    8. ' self' → logprob: -13.258820533752441
    9. '_other' → logprob: -16.383821487426758
    10. 'others' → logprob: -17.258821487426758

Token 284: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -2.045823566731997e-05
    2. ',' → logprob: -11.375020027160645
    3. 'and' → logprob: -11.875020027160645
    4. 'other' → logprob: -13.750020027160645
    5. '(other' → logprob: -14.250020027160645
    6. ' and' → logprob: -15.875020027160645
    7. ' )' → logprob: -16.62502098083496
    8. ')
' → logprob: -17.00002098083496
    9. 'self' → logprob: -17.50002098083496
    10. '   ' → logprob: -18.87502098083496

Token 285: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.07889155298471451
    2. 'and' → logprob: -2.5788915157318115
    3. ')' → logprob: -13.70389175415039
    4. '        ' → logprob: -15.32889175415039
    5. '       ' → logprob: -15.95389175415039
    6. ' ' → logprob: -16.57889175415039
    7. ' ' → logprob: -16.57889175415039
    8. ' )' → logprob: -16.70389175415039
    9. '	and' → logprob: -16.70389175415039
    10. ' и' → logprob: -17.20389175415039

Token 286: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.029751762747764587
    2. ' self' → logprob: -3.529751777648926
    3. '(self' → logprob: -14.904751777648926
    4. '
' → logprob: -15.154751777648926
    5. 'Self' → logprob: -15.904751777648926
    6. '   ' → logprob: -15.904751777648926
    7. 'other' → logprob: -16.27975082397461
    8. ' ' → logprob: -16.77975082397461
    9. '	self' → logprob: -17.02975082397461
    10. '

' → logprob: -17.40475082397461

Token 287: '.v' (ID: 5520)
  Prédit: '.v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.v' → logprob: -6.630610641877865e-06
    2. ' .' → logprob: -12.375006675720215
    3. '.' → logprob: -13.750006675720215
    4. 'vs' → logprob: -13.750006675720215
    5. '
' → logprob: -17.1250057220459
    6. '​.' → logprob: -17.2500057220459
    7. '.vi' → logprob: -17.5000057220459
    8. '```' → logprob: -17.6250057220459
    9. 'self' → logprob: -17.8750057220459
    10. '..' → logprob: -18.3750057220459

Token 288: 's' (ID: 82)
  Prédit: 's'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -1.3544423381972592e-05
    2. 'vs' → logprob: -12.00001335144043
    3. '
' → logprob: -13.37501335144043
    4. '.s' → logprob: -13.75001335144043
    5. '.v' → logprob: -14.00001335144043
    6. 'sv' → logprob: -15.06251335144043
    7. 'f' → logprob: -15.25001335144043
    8. '```' → logprob: -15.25001335144043
    9. '

' → logprob: -15.31251335144043
    10. '_vs' → logprob: -15.50001335144043

Token 289: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.12693209946155548
    2. '==' → logprob: -2.126932144165039
    3. '=' → logprob: -12.751932144165039
    4. '==
' → logprob: -15.126932144165039
    5. ' =' → logprob: -15.376932144165039
    6. ')==' → logprob: -16.00193214416504
    7. ' ==
' → logprob: -16.00193214416504
    8. ' ' → logprob: -16.25193214416504
    9. ')' → logprob: -16.50193214416504
    10. '==(' → logprob: -16.75193214416504

Token 290: ' other' (ID: 1273)
  Prédit: 'other'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'other' → logprob: -0.011048408225178719
    2. ' other' → logprob: -4.511048316955566
    3. '(other' → logprob: -15.136048316955566
    4. 'Other' → logprob: -16.261049270629883
    5. 'self' → logprob: -16.511049270629883
    6. 'othe' → logprob: -17.636049270629883
    7. '.other' → logprob: -18.136049270629883
    8. '_other' → logprob: -18.636049270629883
    9. ' ' → logprob: -18.886049270629883
    10. '   ' → logprob: -19.636049270629883

Token 291: '.v' (ID: 5520)
  Prédit: '.v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.v' → logprob: -8.602024900028482e-05
    2. '.' → logprob: -9.375085830688477
    3. ' .' → logprob: -14.625085830688477
    4. 'vs' → logprob: -15.125085830688477
    5. '.other' → logprob: -16.375085830688477
    6. '.vi' → logprob: -16.500085830688477
    7. '.s' → logprob: -17.000085830688477
    8. '.ve' → logprob: -17.625085830688477
    9. '..' → logprob: -17.750085830688477
    10. '[' → logprob: -18.000085830688477

Token 292: 's' (ID: 82)
  Prédit: 's'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -9.491498531133402e-06
    2. '
' → logprob: -13.375009536743164
    3. '.v' → logprob: -13.500009536743164
    4. 'vs' → logprob: -13.500009536743164
    5. 'с' → logprob: -14.250009536743164
    6. '   ' → logprob: -14.250009536743164
    7. 'v' → logprob: -14.625009536743164
    8. '.s' → logprob: -15.000009536743164
    9. '```' → logprob: -15.375009536743164
    10. 'f' → logprob: -15.375009536743164

Token 293: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 294: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8130166530609131
    2. '<|end|>' → logprob: -1.438016653060913
    3. '
' → logprob: -1.688016653060913
    4. 'def' → logprob: -2.313016653060913
    5. '```' → logprob: -4.188016891479492
    6. '    
' → logprob: -5.063016891479492
    7. ' def' → logprob: -5.313016891479492
    8. ' 
' → logprob: -6.313016891479492
    9. '<|end|>' → logprob: -6.688016891479492
    10. '

' → logprob: -6.688016891479492

Token 295: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -2.8325677703833207e-05
    2. ' def' → logprob: -10.500028610229492
    3. '   ' → logprob: -14.375028610229492
    4. '
' → logprob: -16.500028610229492
    5. '__' → logprob: -19.375028610229492
    6. '	def' → logprob: -20.000028610229492
    7. '```' → logprob: -20.000028610229492
    8. '

' → logprob: -20.375028610229492
    9. '    
' → logprob: -20.875028610229492
    10. '_def' → logprob: -21.000028610229492

Token 296: ' __' (ID: 2516)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.0007746085175313056
    2. ' __' → logprob: -7.250774383544922
    3. 'def' → logprob: -9.750774383544922
    4. 'hash' → logprob: -12.875774383544922
    5. '_hash' → logprob: -13.625774383544922
    6. '```' → logprob: -13.875774383544922
    7. '.__' → logprob: -14.125774383544922
    8. '/__' → logprob: -15.375774383544922
    9. ' def' → logprob: -15.500774383544922
    10. '
' → logprob: -15.750774383544922

Token 297: 'hash' (ID: 16909)
  Prédit: 'hash'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'hash' → logprob: -3.128163257315464e-07
    2. 'repr' → logprob: -15.875
    3. '_hash' → logprob: -16.625
    4. 'eq' → logprob: -17.375
    5. '(hash' → logprob: -18.5
    6. ' hash' → logprob: -18.875
    7. '
' → logprob: -19.25
    8. 'ash' → logprob: -19.5
    9. 'Hash' → logprob: -19.625
    10. '	hash' → logprob: -20.25

Token 298: '__(' (ID: 8241)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.027365667745471
    2. '(other' → logprob: -3.6523656845092773
    3. '(' → logprob: -7.152365684509277
    4. '(hash' → logprob: -9.652365684509277
    5. 'hash' → logprob: -10.152365684509277
    6. '(object' → logprob: -10.152365684509277
    7. 'self' → logprob: -10.527365684509277
    8. ' (' → logprob: -10.527365684509277
    9. 'return' → logprob: -11.027365684509277
    10. '(
' → logprob: -11.152365684509277

Token 299: 'self' (ID: 1156)
  Prédit: 'other'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'other' → logprob: -0.06494323164224625
    2. 'self' → logprob: -2.814943313598633
    3. '(other' → logprob: -6.314943313598633
    4. 'hash' → logprob: -7.064943313598633
    5. '(self' → logprob: -8.439943313598633
    6. ' other' → logprob: -9.439943313598633
    7. ' self' → logprob: -12.314943313598633
    8. 'Other' → logprob: -12.814943313598633
    9. 'return' → logprob: -13.439943313598633
    10. ')' → logprob: -13.564943313598633

Token 300: '):
' (ID: 1883)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.00287584587931633
    2. 'self' → logprob: -6.127875804901123
    3. '):
' → logprob: -7.877875804901123
    4. '():
' → logprob: -9.502876281738281
    5. '{
' → logprob: -9.877876281738281
    6. '(
' → logprob: -9.877876281738281
    7. '(' → logprob: -10.377876281738281
    8. 'return' → logprob: -10.752876281738281
    9. ':
' → logprob: -11.002876281738281
    10. '   ' → logprob: -11.127876281738281

Token 301: '       ' (ID: 309)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.8081743121147156
    2. ' return' → logprob: -1.3081743717193604
    3. '       ' → logprob: -2.0581743717193604
    4. 'hash' → logprob: -2.5581743717193604
    5. ' hash' → logprob: -2.5581743717193604
    6. '   ' → logprob: -6.558174133300781
    7. '	hash' → logprob: -12.308174133300781
    8. ' ' → logprob: -12.683174133300781
    9. '(hash' → logprob: -12.933174133300781
    10. '	return' → logprob: -13.183174133300781

Token 302: ' return' (ID: 622)
  Prédit: 'hash'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'hash' → logprob: -0.0007114782347343862
    2. ' hash' → logprob: -7.250711441040039
    3. 'return' (adapté à ' return') → logprob: -13.375711441040039
    4. 'h' → logprob: -19.37571144104004
    5. 'Hash' → logprob: -19.87571144104004
    6. ' return' → logprob: -20.12571144104004
    7. '   ' → logprob: -20.37571144104004
    8. '       ' → logprob: -20.50071144104004
    9. '	hash' → logprob: -21.00071144104004
    10. '```' → logprob: -21.00071144104004

Token 303: ' hash' (ID: 10691)
  Prédit: 'hash'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'hash' → logprob: -0.0619683600962162
    2. ' hash' → logprob: -2.8119683265686035
    3. '(hash' → logprob: -14.936968803405762
    4. 'self' → logprob: -15.811968803405762
    5. '   ' → logprob: -15.936968803405762
    6. '
' → logprob: -17.061967849731445
    7. '	hash' → logprob: -17.186967849731445
    8. ' ' → logprob: -17.186967849731445
    9. 'h' → logprob: -17.686967849731445
    10. ' self' → logprob: -18.186967849731445

Token 304: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -7.107425062713446e-06
    2. '(' → logprob: -11.875006675720215
    3. 'self' → logprob: -16.12500762939453
    4. ' (' → logprob: -17.50000762939453
    5. '((' → logprob: -18.00000762939453
    6. '(
' → logprob: -19.25000762939453
    7. '(s' → logprob: -19.62500762939453
    8. ' self' → logprob: -19.75000762939453
    9. '(sel' → logprob: -21.00000762939453
    10. '```' → logprob: -21.25000762939453

Token 305: '.v' (ID: 5520)
  Prédit: '.v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.v' → logprob: -0.00028993739397265017
    2. '.s' → logprob: -8.500289916992188
    3. 'self' → logprob: -9.875289916992188
    4. ' .' → logprob: -11.375289916992188
    5. 'vs' → logprob: -11.750289916992188
    6. ').' → logprob: -11.875289916992188
    7. '.vi' → logprob: -12.625289916992188
    8. '.' → logprob: -13.000289916992188
    9. 's' → logprob: -14.375289916992188
    10. '(self' → logprob: -14.500289916992188

Token 306: 's' (ID: 82)
  Prédit: 's'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -7.147740689106286e-05
    2. '
' → logprob: -11.37507152557373
    3. 'с' → logprob: -11.75007152557373
    4. '```' → logprob: -11.81257152557373
    5. '``' → logprob: -12.00007152557373
    6. ')' → logprob: -12.43757152557373
    7. ')s' → logprob: -12.87507152557373
    8. ')
' → logprob: -12.87507152557373
    9. '   ' → logprob: -13.06257152557373
    10. '.s' → logprob: -13.18757152557373

Token 307: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.8789383830153383e-05
    2. ')
' → logprob: -11.625019073486328
    3. '   ' → logprob: -12.000019073486328
    4. ' )' → logprob: -13.750019073486328
    5. '}' → logprob: -14.000019073486328
    6. ')

' → logprob: -14.500019073486328
    7. '<|end|>' → logprob: -15.000019073486328
    8. ')return' → logprob: -15.625019073486328
    9. ')}' → logprob: -15.875019073486328
    10. '()' → logprob: -16.000019073486328

Token 308: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.008739731274545193
    2. 'def' → logprob: -5.133739948272705
    3. '<|end|>' → logprob: -6.508739948272705
    4. '
' → logprob: -7.758739948272705
    5. '```' → logprob: -7.758739948272705
    6. ' def' → logprob: -8.008739471435547
    7. '<|end|>' → logprob: -9.883739471435547
    8. ' ' → logprob: -10.633739471435547
    9. '    
' → logprob: -10.883739471435547
    10. '	def' → logprob: -11.383739471435547

Token 309: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.07907242327928543
    2. '   ' → logprob: -2.5790724754333496
    3. ' def' → logprob: -8.704071998596191
    4. '
' → logprob: -11.579071998596191
    5. '

' → logprob: -13.079071998596191
    6. '    
' → logprob: -13.204071998596191
    7. '	def' → logprob: -13.329071998596191
    8. ' ' → logprob: -14.204071998596191
    9. '  ' → logprob: -14.954071998596191
    10. '```' → logprob: -15.329071998596191

Token 310: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.08899804204702377
    2. '__' → logprob: -2.4639980792999268
    3. ' ' → logprob: -10.963997840881348
    4. '.__' → logprob: -11.338997840881348
    5. 'repr' → logprob: -11.338997840881348
    6. 'def' → logprob: -12.213997840881348
    7. '_repr' → logprob: -12.713997840881348
    8. ' def' → logprob: -12.963997840881348
    9. '(__' → logprob: -14.088997840881348
    10. ' _' → logprob: -14.088997840881348

Token 311: 'repr' (ID: 67002)
  Prédit: 'repr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'repr' → logprob: -1.688212614681106e-05
    2. 'str' → logprob: -11.000017166137695
    3. '_repr' → logprob: -16.875017166137695
    4. 'rep' → logprob: -18.375017166137695
    5. ' repr' → logprob: -18.625017166137695
    6. 'lt' → logprob: -20.375017166137695
    7. 'format' → logprob: -20.750017166137695
    8. '```' → logprob: -20.875017166137695
    9. 'eq' → logprob: -21.750017166137695
    10. 'represent' → logprob: -22.250017166137695

Token 312: '__(' (ID: 8241)
  Prédit: '__('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -5.776898251497187e-05
    2. '__(
' → logprob: -10.3750581741333
    3. '__' → logprob: -11.1250581741333
    4. '(self' → logprob: -11.5000581741333
    5. '__((' → logprob: -13.7500581741333
    6. '__('' → logprob: -14.7500581741333
    7. '__("' → logprob: -16.000057220458984
    8. '__[' → logprob: -16.875057220458984
    9. 'self' → logprob: -17.750057220458984
    10. '(' → logprob: -17.875057220458984

Token 313: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.20148281753063202
    2. 'f' → logprob: -1.7014827728271484
    3. ' self' → logprob: -9.951482772827148
    4. ' f' → logprob: -11.201482772827148
    5. ')' → logprob: -12.201482772827148
    6. 's' → logprob: -14.076482772827148
    7. '(self' → logprob: -14.201482772827148
    8. '{' → logprob: -14.826482772827148
    9. '
' → logprob: -14.826482772827148
    10. '   ' → logprob: -14.951482772827148

Token 314: '):
' (ID: 1883)
  Prédit: '__('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.12575426697731018
    2. '__(
' → logprob: -2.6257543563842773
    3. '__' → logprob: -3.6257543563842773
    4. '(self' → logprob: -4.625754356384277
    5. 'self' → logprob: -5.750754356384277
    6. '__)
' → logprob: -6.625754356384277
    7. '__('' → logprob: -6.875754356384277
    8. '__)' → logprob: -7.125754356384277
    9. '__()
' → logprob: -7.500754356384277
    10. '__":
' → logprob: -7.625754356384277

Token 315: '       ' (ID: 309)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.0193194467574358
    2. ' f' → logprob: -4.644319534301758
    3. '       ' → logprob: -5.144319534301758
    4. '   ' → logprob: -5.769319534301758
    5. '"' → logprob: -8.394319534301758
    6. 'return' → logprob: -9.519319534301758
    7. '     ' → logprob: -9.519319534301758
    8. ' ' → logprob: -9.894319534301758
    9. '           ' → logprob: -10.394319534301758
    10. '  ' → logprob: -10.519319534301758

Token 316: ' return' (ID: 622)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.0010409059468656778
    2. '"' → logprob: -7.751040935516357
    3. ' f' → logprob: -7.751040935516357
    4. 'return' (adapté à ' return') → logprob: -9.7510404586792
    5. '''.' → logprob: -10.0010404586792
    6. ' "".' → logprob: -10.5010404586792
    7. '"<' → logprob: -11.1260404586792
    8. '```' → logprob: -11.5010404586792
    9. '   ' → logprob: -12.0010404586792
    10. ' ' → logprob: -12.5010404586792

Token 317: ' f' (ID: 285)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.0033224381040781736
    2. ' f' → logprob: -5.878322601318359
    3. '"' → logprob: -7.753322601318359
    4. '''.' → logprob: -10.00332260131836
    5. ' "".' → logprob: -11.12832260131836
    6. ' ''.' → logprob: -11.75332260131836
    7. '   ' → logprob: -12.37832260131836
    8. ' ' → logprob: -12.62832260131836
    9. '```' → logprob: -12.75332260131836
    10. ''f' → logprob: -13.25332260131836

Token 318: '"' (ID: 1)
  Prédit: '"{'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"{' → logprob: -0.04596856236457825
    2. 'f' → logprob: -3.170968532562256
    3. '"' → logprob: -6.295968532562256
    4. '{' → logprob: -7.045968532562256
    5. ''{' → logprob: -9.045969009399414
    6. ' f' → logprob: -10.170969009399414
    7. '"<' → logprob: -10.295969009399414
    8. '(f' → logprob: -11.045969009399414
    9. 'Face' → logprob: -11.295969009399414
    10. 'F' → logprob: -11.670969009399414

Token 319: 'Face' (ID: 23402)
  Prédit: '{'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '{' → logprob: -0.01449371688067913
    2. 'f' → logprob: -4.889493942260742
    3. '{'' → logprob: -5.764493942260742
    4. '"{' → logprob: -6.139493942260742
    5. 'Face' → logprob: -7.264493942260742
    6. '{"' → logprob: -7.514493942260742
    7. '"' → logprob: -8.139493942260742
    8. ''{' → logprob: -11.514493942260742
    9. 'F' → logprob: -12.139493942260742
    10. 'face' → logprob: -12.389493942260742

Token 320: '{' (ID: 90)
  Prédit: '{'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '{' → logprob: -0.16026312112808228
    2. '({' → logprob: -1.9102630615234375
    3. '(' → logprob: -10.910263061523438
    4. '(self' → logprob: -12.035263061523438
    5. ' {' → logprob: -12.285263061523438
    6. '({'' → logprob: -12.660263061523438
    7. '('{' → logprob: -12.910263061523438
    8. '(({' → logprob: -13.410263061523438
    9. '{'' → logprob: -13.535263061523438
    10. '('' → logprob: -14.660263061523438

Token 321: '''.' (ID: 153150)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.264640748500824
    2. '(self' → logprob: -1.5146408081054688
    3. '{' → logprob: -4.389640808105469
    4. ' self' → logprob: -8.764640808105469
    5. '(' → logprob: -10.764640808105469
    6. '```' → logprob: -11.014640808105469
    7. '}' → logprob: -11.139640808105469
    8. '({' → logprob: -12.639640808105469
    9. '
' → logprob: -12.764640808105469
    10. '(*' → logprob: -12.889640808105469

Token 322: 'join' (ID: 10891)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.4203161895275116
    2. 'vs' → logprob: -1.920316219329834
    3. 'join' → logprob: -2.545316219329834
    4. 'v' → logprob: -2.795316219329834
    5. '{' → logprob: -3.170316219329834
    6. '(self' → logprob: -4.920316219329834
    7. 'repr' → logprob: -6.295316219329834
    8. '(v' → logprob: -6.420316219329834
    9. '```' → logprob: -6.920316219329834
    10. 'vsp' → logprob: -7.295316219329834

Token 323: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.006760010030120611
    2. 'self' → logprob: -5.006760120391846
    3. '(' → logprob: -10.256759643554688
    4. '```' → logprob: -12.256759643554688
    5. ' self' → logprob: -13.506759643554688
    6. '
' → logprob: -14.506759643554688
    7. '[self' → logprob: -14.506759643554688
    8. '{' → logprob: -14.756759643554688
    9. '(map' → logprob: -14.881759643554688
    10. '   ' → logprob: -15.006759643554688

Token 324: '.v' (ID: 5520)
  Prédit: '.v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.v' → logprob: -5.5861724831629544e-05
    2. '{' → logprob: -10.875056266784668
    3. 'vs' → logprob: -11.250056266784668
    4. ' .' → logprob: -11.500056266784668
    5. '.' → logprob: -12.750056266784668
    6. '[' → logprob: -13.000056266784668
    7. '(' → logprob: -13.625056266784668
    8. 'v' → logprob: -13.875056266784668
    9. '.vi' → logprob: -13.875056266784668
    10. 'self' → logprob: -14.000056266784668

Token 325: 's' (ID: 82)
  Prédit: 's'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.0001720742875477299
    2. '(self' → logprob: -9.875171661376953
    3. '{' → logprob: -10.500171661376953
    4. '{s' → logprob: -11.125171661376953
    5. 'self' → logprob: -11.250171661376953
    6. '   ' → logprob: -11.625171661376953
    7. '0' → logprob: -11.875171661376953
    8. '
' → logprob: -12.125171661376953
    9. '(s' → logprob: -12.125171661376953
    10. '(' → logprob: -12.125171661376953

Token 326: ')}' (ID: 15468)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.6428543329238892
    2. ')}' → logprob: -0.8928543329238892
    3. '())' → logprob: -3.6428542137145996
    4. '}"' → logprob: -4.1428542137146
    5. '()}' → logprob: -4.3928542137146
    6. '}' → logprob: -5.2678542137146
    7. ')"' → logprob: -5.8928542137146
    8. ')' → logprob: -6.8928542137146
    9. '()"' → logprob: -7.7678542137146
    10. ']}"' → logprob: -8.017854690551758

Token 327: '"

' (ID: 2678)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '"' → logprob: -0.3896968960762024
    2. ')"' → logprob: -1.3896968364715576
    3. '}"' → logprob: -2.6396968364715576
    4. '()"' → logprob: -6.389697074890137
    5. '"}' → logprob: -8.389697074890137
    6. '")' → logprob: -9.639697074890137
    7. ')' → logprob: -10.014697074890137
    8. '}' → logprob: -10.264697074890137
    9. ']"' → logprob: -10.514697074890137
    10. '"
' → logprob: -10.639697074890137

Token 328: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.18170475959777832
    2. '<|end|>' → logprob: -2.3067047595977783
    3. 'class' → logprob: -2.9317047595977783
    4. '   ' → logprob: -5.431704521179199
    5. '<|end|>' → logprob: -5.931704521179199
    6. '    
' → logprob: -6.556704521179199
    7. '\n' → logprob: -6.806704521179199
    8. '```' → logprob: -7.306704521179199
    9. '#' → logprob: -7.556704521179199
    10. ' class' → logprob: -7.681704521179199

Token 329: ' def' (ID: 1056)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.07616875320672989
    2. 'class' → logprob: -3.3261687755584717
    3. '   ' → logprob: -3.9511687755584717
    4. '<|end|>' → logprob: -4.326168537139893
    5. '    
' → logprob: -6.326168537139893
    6. '

' → logprob: -7.201168537139893
    7. ' ' → logprob: -7.826168537139893
    8. '#' → logprob: -8.20116901397705
    9. '<|end|>' → logprob: -8.20116901397705
    10. '```' → logprob: -8.32616901397705

Token 330: ' contains' (ID: 8895)
  Prédit: 'area'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'area' → logprob: -0.255941241979599
    2. ' area' → logprob: -2.255941152572632
    3. 'contains' → logprob: -2.505941152572632
    4. 'normal' → logprob: -4.255941390991211
    5. ' contains' → logprob: -4.755941390991211
    6. 'def' → logprob: -5.880941390991211
    7. ' edges' → logprob: -6.130941390991211
    8. 'edges' → logprob: -6.130941390991211
    9. 'vertices' → logprob: -6.255941390991211
    10. 'get' → logprob: -6.255941390991211

Token 331: '_vertex' (ID: 65291)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.07009571045637131
    2. '(' → logprob: -2.6950957775115967
    3. ' (' → logprob: -9.445096015930176
    4. '_edge' → logprob: -10.820096015930176
    5. 'self' → logprob: -10.945096015930176
    6. '(
' → logprob: -10.945096015930176
    7. '_vertex' → logprob: -11.945096015930176
    8. '(edge' → logprob: -12.195096015930176
    9. '(Vertex' → logprob: -12.445096015930176
    10. '(vertex' → logprob: -12.570096015930176

Token 332: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.06240769848227501
    2. '(' → logprob: -2.8124077320098877
    3. ' (' → logprob: -7.812407493591309
    4. '(
' → logprob: -10.687407493591309
    5. 'self' → logprob: -11.687407493591309
    6. ' ' → logprob: -14.562407493591309
    7. '(s' → logprob: -15.062407493591309
    8. '(

' → logprob: -15.187407493591309
    9. ' self' → logprob: -15.312407493591309
    10. ')' → logprob: -15.312407493591309

Token 333: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0027345011476427317
    2. ' ,' → logprob: -6.002734661102295
    3. 'self' → logprob: -8.502734184265137
    4. ',v' → logprob: -10.877734184265137
    5. ',self' → logprob: -11.002734184265137
    6. '(self' → logprob: -11.627734184265137
    7. ')' → logprob: -12.002734184265137
    8. ' self' → logprob: -13.377734184265137
    9. '(' → logprob: -14.127734184265137
    10. ' ' → logprob: -14.377734184265137

Token 334: ' v' (ID: 323)
  Prédit: 'vertex'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'vertex' → logprob: -0.7661049962043762
    2. ' vertex' → logprob: -1.0161049365997314
    3. 'v' → logprob: -2.0161049365997314
    4. ' v' → logprob: -3.5161049365997314
    5. 'self' → logprob: -4.8911051750183105
    6. ' self' → logprob: -5.8911051750183105
    7. '   ' → logprob: -12.391104698181152
    8. 'vert' → logprob: -13.016104698181152
    9. ' ' → logprob: -13.516104698181152
    10. ' vert' → logprob: -13.641104698181152

Token 335: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.66933274269104
    2. '):
' → logprob: -1.41933274269104
    3. '):' → logprob: -1.66933274269104
    4. 'self' → logprob: -3.54433274269104
    5. '(self' → logprob: -4.294332504272461
    6. ')' → logprob: -4.919332504272461
    7. ',' → logprob: -6.044332504272461
    8. '1' → logprob: -6.044332504272461
    9. '(' → logprob: -6.919332504272461
    10. ' ):' → logprob: -8.169332504272461

Token 336: ' str' (ID: 989)
  Prédit: 'str'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'str' → logprob: -0.5760449171066284
    2. ' str' → logprob: -0.8260449171066284
    3. ')' → logprob: -9.451045036315918
    4. ''' → logprob: -11.576045036315918
    5. ':str' → logprob: -12.076045036315918
    6. ' ' → logprob: -12.576045036315918
    7. ''s' → logprob: -12.701045036315918
    8. ' '' → logprob: -13.451045036315918
    9. '[str' → logprob: -13.576045036315918
    10. '   ' → logprob: -13.951045036315918

Token 337: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0021332520991563797
    2. '):' → logprob: -6.627133369445801
    3. '):
' → logprob: -7.252133369445801
    4. ' )' → logprob: -9.3771333694458
    5. ')->' → logprob: -11.6271333694458
    6. '   ' → logprob: -12.7521333694458
    7. '):

' → logprob: -14.8771333694458
    8. ' ):' → logprob: -15.0021333694458
    9. ' ):
' → logprob: -15.1271333694458
    10. '):
' → logprob: -15.3771333694458

Token 338: ' ->' (ID: 2747)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.12100014835596085
    2. ')' → logprob: -2.371000051498413
    3. ' ->' → logprob: -4.621000289916992
    4. '->' → logprob: -5.371000289916992
    5. ':
' → logprob: -6.246000289916992
    6. ')->' → logprob: -6.246000289916992
    7. '):' → logprob: -6.746000289916992
    8. '):
' → logprob: -7.371000289916992
    9. '   ' → logprob: -8.371000289916992
    10. ',' → logprob: -10.371000289916992

Token 339: ' bool' (ID: 3792)
  Prédit: ' bool'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' bool' → logprob: -0.47407835721969604
    2. 'bool' → logprob: -0.974078357219696
    3. '	bool' → logprob: -14.349078178405762
    4. '(bool' → logprob: -14.849078178405762
    5. '<bool' → logprob: -15.474078178405762
    6. ' ' → logprob: -16.099079132080078
    7. 'Bool' → logprob: -17.099079132080078
    8. '_bool' → logprob: -17.349079132080078
    9. 'True' → logprob: -17.724079132080078
    10. 'False' → logprob: -17.849079132080078

Token 340: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.16940441727638245
    2. ':
' → logprob: -2.0444045066833496
    3. '       ' → logprob: -4.79440450668335
    4. '):
' → logprob: -4.91940450668335
    5. '):' → logprob: -5.16940450668335
    6. '   ' → logprob: -6.41940450668335
    7. ')' → logprob: -6.54440450668335
    8. '(self' → logprob: -7.41940450668335
    9. '():
' → logprob: -7.41940450668335
    10. ',' → logprob: -8.169404029846191

Token 341: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.027765994891524315
    2. ' return' → logprob: -4.027766227722168
    3. 'return' → logprob: -4.652766227722168
    4. '   ' → logprob: -11.152766227722168
    5. 'v' → logprob: -11.527766227722168
    6. ' v' → logprob: -12.402766227722168
    7. '	' → logprob: -13.527766227722168
    8. '	return' → logprob: -14.027766227722168
    9. '
' → logprob: -14.277766227722168
    10. ':return' → logprob: -14.277766227722168

Token 342: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.2539393901824951
    2. ' return' → logprob: -1.5039393901824951
    3. 'v' → logprob: -6.253939628601074
    4. ' v' → logprob: -9.503939628601074
    5. '       ' → logprob: -11.753939628601074
    6. '
' → logprob: -13.128939628601074
    7. '	return' → logprob: -15.253939628601074
    8. '   ' → logprob: -15.378939628601074
    9. 'eturn' → logprob: -15.378939628601074
    10. ':return' → logprob: -16.628938674926758

Token 343: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.5759404897689819
    2. ' v' → logprob: -0.8259404897689819
    3. '	v' → logprob: -13.825940132141113
    4. ' ' → logprob: -17.82594108581543
    5. '(v' → logprob: -17.82594108581543
    6. ' ' → logprob: -17.95094108581543
    7. '   ' → logprob: -19.20094108581543
    8. '_v' → logprob: -20.32594108581543
    9. '.v' → logprob: -20.45094108581543
    10. 'self' → logprob: -20.95094108581543

Token 344: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.69315105676651
    2. ' in' → logprob: -0.69315105676651
    3. ' ' → logprob: -13.068151473999023
    4. '	in' → logprob: -13.818151473999023
    5. 'i' → logprob: -15.693151473999023
    6. ')' → logprob: -16.068151473999023
    7. ' ' → logprob: -16.068151473999023
    8. 'In' → logprob: -16.068151473999023
    9. 'n' → logprob: -16.568151473999023
    10. '_in' → logprob: -17.068151473999023

Token 345: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.002475777640938759
    2. ' self' → logprob: -6.002475738525391
    3. '   ' → logprob: -17.12747573852539
    4. '	self' → logprob: -17.25247573852539
    5. '(self' → logprob: -17.25247573852539
    6. ' ' → logprob: -18.12747573852539
    7. '
' → logprob: -19.37747573852539
    8. '```' → logprob: -19.87747573852539
    9. '[self' → logprob: -19.87747573852539
    10. ' ' → logprob: -20.12747573852539

Token 346: '.v' (ID: 5520)
  Prédit: '.v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.v' → logprob: -0.004635422490537167
    2. 'vs' → logprob: -5.379635334014893
    3. ' .' → logprob: -12.50463581085205
    4. '_vs' → logprob: -12.50463581085205
    5. '.' → logprob: -12.75463581085205
    6. ' vs' → logprob: -13.62963581085205
    7. '..' → logprob: -14.37963581085205
    8. 'self' → logprob: -14.75463581085205
    9. '```' → logprob: -14.75463581085205
    10. '{' → logprob: -14.87963581085205

Token 347: 's' (ID: 82)
  Prédit: 's'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -9.162282367469743e-05
    2. '.s' → logprob: -10.125091552734375
    3. '.v' → logprob: -10.875091552734375
    4. '.' → logprob: -11.375091552734375
    5. '```' → logprob: -12.000091552734375
    6. 'vs' → logprob: -12.500091552734375
    7. ')' → logprob: -13.250091552734375
    8. 'с' → logprob: -13.500091552734375
    9. ').' → logprob: -13.500091552734375
    10. 'v' → logprob: -14.125091552734375

Token 348: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 349: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 350: ' def' (ID: 1056)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 351: ' contains' (ID: 8895)
  Prédit: 'contains'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'contains' → logprob: -0.3525685667991638
    2. 'edges' → logprob: -2.2275686264038086
    3. ' edges' → logprob: -2.6025686264038086
    4. ' contains' → logprob: -3.2275686264038086
    5. 'area' → logprob: -3.8525686264038086
    6. 'shares' → logprob: -4.102568626403809
    7. ' shares' → logprob: -4.727568626403809
    8. 'get' → logprob: -5.352568626403809
    9. 'adj' → logprob: -5.477568626403809
    10. 'vertices' → logprob: -5.852568626403809

Token 352: '_edge' (ID: 43226)
  Prédit: '_edge'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_edge' → logprob: -0.5788010954856873
    2. '_vertex' → logprob: -0.8288010954856873
    3. '(' → logprob: -6.578801155090332
    4. 'vertex' → logprob: -7.328801155090332
    5. '(self' → logprob: -8.453801155090332
    6. '('_' → logprob: -8.828801155090332
    7. 'edge' → logprob: -9.578801155090332
    8. '(Vertex' → logprob: -9.703801155090332
    9. '_' → logprob: -9.828801155090332
    10. '_all' → logprob: -9.953801155090332

Token 353: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.00039849523454904556
    2. '(' → logprob: -8.000398635864258
    3. ' (' → logprob: -9.750398635864258
    4. 'self' → logprob: -12.875398635864258
    5. '(
' → logprob: -13.375398635864258
    6. ',' → logprob: -15.750398635864258
    7. ' self' → logprob: -15.750398635864258
    8. 'def' → logprob: -16.625398635864258
    9. ' ' → logprob: -17.000398635864258
    10. '<|end|>' → logprob: -17.125398635864258

Token 354: ',' (ID: 11)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.887738049030304
    2. '(' → logprob: -1.1377379894256592
    3. ',' → logprob: -1.5127379894256592
    4. ' (' → logprob: -3.387737989425659
    5. ')' → logprob: -4.762738227844238
    6. 'self' → logprob: -6.012738227844238
    7. ')(' → logprob: -7.012738227844238
    8. '(edge' → logprob: -7.262738227844238
    9. '(
' → logprob: -8.137738227844238
    10. ' ,' → logprob: -8.387738227844238

Token 355: ' e' (ID: 319)
  Prédit: 'edge'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'edge' → logprob: -0.36674195528030396
    2. ' edge' → logprob: -1.2417418956756592
    3. 'self' → logprob: -4.491742134094238
    4. ' self' → logprob: -5.241742134094238
    5. 'e' → logprob: -6.741742134094238
    6. ' e' → logprob: -7.741742134094238
    7. '   ' → logprob: -11.241742134094238
    8. '       ' → logprob: -12.991742134094238
    9. ' ' → logprob: -12.991742134094238
    10. 'Edge' → logprob: -13.116742134094238

Token 356: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.11111932247877121
    2. 'self' → logprob: -2.736119270324707
    3. '(self' → logprob: -4.111119270324707
    4. ')' → logprob: -4.111119270324707
    5. ' self' → logprob: -5.361119270324707
    6. '):' → logprob: -7.236119270324707
    7. '):
' → logprob: -7.486119270324707
    8. 'edge' → logprob: -8.236119270324707
    9. '(edge' → logprob: -8.236119270324707
    10. ' e' → logprob: -8.611119270324707

Token 357: ' Edge' (ID: 16396)
  Prédit: 'Edge'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Edge' → logprob: -0.16025561094284058
    2. ' Edge' → logprob: -1.9102556705474854
    3. 'edge' → logprob: -11.910255432128906
    4. ')' → logprob: -12.035255432128906
    5. ' edge' → logprob: -12.285255432128906
    6. 'e' → logprob: -12.785255432128906
    7. ' ' → logprob: -12.785255432128906
    8. ' e' → logprob: -13.535255432128906
    9. ' '' → logprob: -13.910255432128906
    10. '<Edge' → logprob: -14.035255432128906

Token 358: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -4.56102097814437e-05
    2. ' )' → logprob: -10.000045776367188
    3. '):
' → logprob: -16.625045776367188
    4. '`)' → logprob: -17.125045776367188
    5. '):' → logprob: -17.875045776367188
    6. '   ' → logprob: -18.250045776367188
    7. '")' → logprob: -18.750045776367188
    8. '')' → logprob: -19.750045776367188
    9. ')->' → logprob: -20.125045776367188
    10. ')
' → logprob: -20.625045776367188

Token 359: ' ->' (ID: 2747)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.15203678607940674
    2. ' ->' → logprob: -2.402036666870117
    3. '->' → logprob: -4.152036666870117
    4. ':' → logprob: -4.277036666870117
    5. '       ' → logprob: -4.527036666870117
    6. '(self' → logprob: -4.902036666870117
    7. '   ' → logprob: -7.152036666870117
    8. ')->' → logprob: -7.152036666870117
    9. 'self' → logprob: -8.027036666870117
    10. ':
' → logprob: -8.402036666870117

Token 360: ' bool' (ID: 3792)
  Prédit: ' ('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.4530435800552368
    2. '(e' → logprob: -1.3280435800552368
    3. 'e' → logprob: -3.0780434608459473
    4. ' e' → logprob: -3.2030434608459473
    5. 'bool' → logprob: -6.203043460845947
    6. 'return' → logprob: -6.328043460845947
    7. ' all' → logprob: -6.328043460845947
    8. ' return' → logprob: -6.703043460845947
    9. 'def' → logprob: -6.703043460845947
    10. ' bool' → logprob: -7.078043460845947

Token 361: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.25275102257728577
    2. ':
' → logprob: -1.8777509927749634
    3. ')' → logprob: -3.377751111984253
    4. '       ' → logprob: -3.627751111984253
    5. '):
' → logprob: -6.127750873565674
    6. '(' → logprob: -6.127750873565674
    7. '   ' → logprob: -6.252750873565674
    8. ' ->' → logprob: -6.877750873565674
    9. '):' → logprob: -7.002750873565674
    10. '(self' → logprob: -8.002751350402832

Token 362: '       ' (ID: 309)
  Prédit: ' return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.1476634293794632
    2. '       ' → logprob: -2.2726633548736572
    3. 'return' → logprob: -3.3976633548736572
    4. ' e' → logprob: -7.272663593292236
    5. '   ' → logprob: -9.522663116455078
    6. 'e' → logprob: -11.772663116455078
    7. '    ' → logprob: -12.647663116455078
    8. ' ' → logprob: -13.147663116455078
    9. ' for' → logprob: -13.522663116455078
    10. '	return' → logprob: -13.647663116455078

Token 363: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.28795576095581055
    2. 'set' → logprob: -2.5379557609558105
    3. 'e' → logprob: -2.7879557609558105
    4. ' return' → logprob: -3.0379557609558105
    5. 'all' → logprob: -3.0379557609558105
    6. ' set' → logprob: -5.2879557609558105
    7. ' all' → logprob: -5.4129557609558105
    8. ' e' → logprob: -6.1629557609558105
    9. '   ' → logprob: -6.1629557609558105
    10. '       ' → logprob: -11.287956237792969

Token 364: ' e' (ID: 319)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.1294516921043396
    2. ' e' → logprob: -2.2544517517089844
    3. ' all' → logprob: -5.254451751708984
    4. ' set' → logprob: -5.379451751708984
    5. 'set' → logprob: -5.754451751708984
    6. 'all' → logprob: -5.754451751708984
    7. ' (' → logprob: -9.254451751708984
    8. '(e' → logprob: -9.379451751708984
    9. '{' → logprob: -9.504451751708984
    10. '   ' → logprob: -10.504451751708984

Token 365: '.v' (ID: 5520)
  Prédit: '.v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.v' → logprob: -0.00164435722399503
    2. ' in' → logprob: -7.001644134521484
    3. 'vs' → logprob: -8.501644134521484
    4. 'v' → logprob: -9.001644134521484
    5. 'in' → logprob: -9.501644134521484
    6. '.' → logprob: -9.626644134521484
    7. '.edges' → logprob: -9.626644134521484
    8. 'In' → logprob: -9.876644134521484
    9. ' .' → logprob: -10.501644134521484
    10. 'Edge' → logprob: -10.626644134521484

Token 366: 's' (ID: 82)
  Prédit: 's'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -7.374227425316349e-05
    2. '```' → logprob: -11.375073432922363
    3. '   ' → logprob: -11.500073432922363
    4. 'in' → logprob: -11.875073432922363
    5. '1' → logprob: -12.250073432922363
    6. 'sv' → logprob: -12.312573432922363
    7. ' in' → logprob: -12.375073432922363
    8. ' s' → logprob: -12.562573432922363
    9. 'v' → logprob: -12.687573432922363
    10. '(' → logprob: -13.187573432922363

Token 367: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0724644884467125
    2. '<=' → logprob: -3.0724644660949707
    3. 'in' → logprob: -4.322464466094971
    4. ' in' → logprob: -5.572464466094971
    5. '<' → logprob: -5.947464466094971
    6. ' <=' → logprob: -5.947464466094971
    7. '==' → logprob: -8.072464942932129
    8. '   ' → logprob: -8.572464942932129
    9. '.' → logprob: -8.697464942932129
    10. ' ' → logprob: -8.947464942932129

Token 368: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.3856492842023727e-06
    2. '1' → logprob: -14.125000953674316
    3. ' ' → logprob: -14.375000953674316
    4. '   ' → logprob: -17.250001907348633
    5. '
' → logprob: -19.000001907348633
    6. '۰' → logprob: -19.250001907348633
    7. '[' → logprob: -19.625001907348633
    8. '(' → logprob: -20.187501907348633
    9. 'in' → logprob: -20.250001907348633
    10. ':' → logprob: -20.250001907348633

Token 369: ']' (ID: 60)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.12696990370750427
    2. 'in' → logprob: -2.126969814300537
    3. ' ' → logprob: -10.751970291137695
    4. ')' → logprob: -11.751970291137695
    5. '   ' → logprob: -12.751970291137695
    6. ',' → logprob: -13.376970291137695
    7. ' and' → logprob: -13.626970291137695
    8. '  ' → logprob: -13.751970291137695
    9. 'and' → logprob: -13.751970291137695
    10. '>=' → logprob: -13.751970291137695

Token 370: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.1602262556552887
    2. ' in' → logprob: -1.9102262258529663
    3. ' ' → logprob: -13.410225868225098
    4. 'and' → logprob: -15.910225868225098
    5. '  ' → logprob: -16.160226821899414
    6. '   ' → logprob: -16.285226821899414
    7. '
' → logprob: -16.285226821899414
    8. 'i' → logprob: -16.660226821899414
    9. 'e' → logprob: -17.410226821899414
    10. 'In' → logprob: -17.410226821899414

Token 371: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.018151231110095978
    2. ' self' → logprob: -4.01815128326416
    3. '[self' → logprob: -14.39315128326416
    4. '(self' → logprob: -14.51815128326416
    5. '	self' → logprob: -16.393150329589844
    6. '
' → logprob: -16.643150329589844
    7. '[' → logprob: -17.268150329589844
    8. ' ' → logprob: -17.393150329589844
    9. '=self' → logprob: -17.643150329589844
    10. '{' → logprob: -17.768150329589844

Token 372: '.v' (ID: 5520)
  Prédit: '.v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.v' → logprob: -0.3768009841442108
    2. 'vs' → logprob: -1.2518010139465332
    3. 'self' → logprob: -4.001801013946533
    4. ' vs' → logprob: -4.751801013946533
    5. ' self' → logprob: -7.251801013946533
    6. 'v' → logprob: -9.251800537109375
    7. '.' → logprob: -9.501800537109375
    8. ' .' → logprob: -9.626800537109375
    9. '_vs' → logprob: -10.751800537109375
    10. '
' → logprob: -11.376800537109375

Token 373: 's' (ID: 82)
  Prédit: 's'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.000428761966759339
    2. 'self' → logprob: -8.500429153442383
    3. '.s' → logprob: -9.750429153442383
    4. '.v' → logprob: -10.250429153442383
    5. '```' → logprob: -11.000429153442383
    6. '1' → logprob: -11.125429153442383
    7. '.' → logprob: -11.250429153442383
    8. '
' → logprob: -11.375429153442383
    9. '   ' → logprob: -11.500429153442383
    10. '(self' → logprob: -11.625429153442383

Token 374: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.0046285344287753105
    2. 'and' → logprob: -5.379628658294678
    3. ' ' → logprob: -11.87962818145752
    4. ' or' → logprob: -14.87962818145752
    5. '    ' → logprob: -15.00462818145752
    6. '   ' → logprob: -15.50462818145752
    7. ' a' → logprob: -15.62962818145752
    8. ' in' → logprob: -15.87962818145752
    9. ' an' → logprob: -16.254629135131836
    10. '        ' → logprob: -17.129629135131836

Token 375: ' e' (ID: 319)
  Prédit: ' e'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' e' → logprob: -0.0010341187007725239
    2. 'e' → logprob: -6.876034259796143
    3. ' ' → logprob: -14.001033782958984
    4. ''' → logprob: -15.001033782958984
    5. ' ' → logprob: -16.001033782958984
    6. '"' → logprob: -16.876033782958984
    7. ' '' → logprob: -17.626033782958984
    8. '`' → logprob: -17.751033782958984
    9. '	e' → logprob: -17.751033782958984
    10. ''e' → logprob: -18.001033782958984

Token 376: '.v' (ID: 5520)
  Prédit: '.v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.v' → logprob: -0.023324325680732727
    2. '.' → logprob: -3.7733242511749268
    3. ' .' → logprob: -9.773324012756348
    4. '.e' → logprob: -11.273324012756348
    5. 'v' → logprob: -12.648324012756348
    6. '[' → logprob: -12.648324012756348
    7. 'vs' → logprob: -14.273324012756348
    8. '.
' → logprob: -14.523324012756348
    9. ' ' → logprob: -15.273324012756348
    10. '._' → logprob: -15.523324012756348

Token 377: 's' (ID: 82)
  Prédit: 's'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -2.0339031834737398e-05
    2. '1' → logprob: -12.000020027160645
    3. '[' → logprob: -12.625020027160645
    4. '2' → logprob: -13.125020027160645
    5. 'vs' → logprob: -13.875020027160645
    6. 'es' → logprob: -14.000020027160645
    7. '```' → logprob: -14.250020027160645
    8. '.s' → logprob: -14.375020027160645
    9. '.' → logprob: -14.625020027160645
    10. 'с' → logprob: -14.625020027160645

Token 378: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.00011903966515092179
    2. '1' → logprob: -9.12511920928955
    3. ' [' → logprob: -11.87511920928955
    4. '[
' → logprob: -13.37511920928955
    5. '   ' → logprob: -15.00011920928955
    6. '.' → logprob: -15.37511920928955
    7. ' ' → logprob: -15.50011920928955
    8. '
' → logprob: -15.87511920928955
    9. '```' → logprob: -15.93761920928955
    10. '       ' → logprob: -16.437618255615234

Token 379: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.7697225252486533e-06
    2. ' ' → logprob: -13.375003814697266
    3. '[' → logprob: -13.625003814697266
    4. '
' → logprob: -15.125003814697266
    5. '0' → logprob: -15.375003814697266
    6. '   ' → logprob: -15.500003814697266
    7. '

' → logprob: -16.562503814697266
    8. '```' → logprob: -16.625003814697266
    9. '2' → logprob: -17.812503814697266
    10. '3' → logprob: -17.875003814697266

Token 380: ']' (ID: 60)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0004164913552813232
    2. 'in' → logprob: -7.875416278839111
    3. ']' → logprob: -11.25041675567627
    4. ')' → logprob: -11.50041675567627
    5. '<|end|>' → logprob: -11.62541675567627
    6. ' ' → logprob: -13.12541675567627
    7. ' ]' → logprob: -13.87541675567627
    8. ' )' → logprob: -15.00041675567627
    9. '<|end|>' → logprob: -15.37541675567627
    10. '```' → logprob: -16.000415802001953

Token 381: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.000627610192168504
    2. 'in' → logprob: -7.375627517700195
    3. ' ' → logprob: -13.875627517700195
    4. '[' → logprob: -16.500627517700195
    5. ')' → logprob: -17.250627517700195
    6. ' ' → logprob: -17.625627517700195
    7. '1' → logprob: -18.125627517700195
    8. 'e' → logprob: -18.625627517700195
    9. '   ' → logprob: -18.625627517700195
    10. '```' → logprob: -18.750627517700195

Token 382: ' self' (ID: 1051)
  Prédit: ' self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.4740803837776184
    2. 'self' → logprob: -0.9740803837776184
    3. '(self' → logprob: -13.224080085754395
    4. '	self' → logprob: -14.224080085754395
    5. '[self' → logprob: -14.974080085754395
    6. '
' → logprob: -15.974080085754395
    7. '=self' → logprob: -16.22408103942871
    8. '```' → logprob: -17.09908103942871
    9. ' ' → logprob: -17.47408103942871
    10. 'Self' → logprob: -17.53658103942871

Token 383: '.v' (ID: 5520)
  Prédit: '.v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.v' → logprob: -0.004085524007678032
    2. 'vs' → logprob: -5.504085540771484
    3. ' .' → logprob: -12.379085540771484
    4. '.' → logprob: -13.754085540771484
    5. 'v' → logprob: -14.754085540771484
    6. '```' → logprob: -14.879085540771484
    7. ' vs' → logprob: -15.254085540771484
    8. '_vs' → logprob: -15.379085540771484
    9. 'self' → logprob: -15.629085540771484
    10. 'VS' → logprob: -16.004085540771484

Token 384: 's' (ID: 82)
  Prédit: 's'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.00036502102739177644
    2. '.v' → logprob: -9.250365257263184
    3. '.s' → logprob: -10.000365257263184
    4. 'с' → logprob: -10.062865257263184
    5. '
' → logprob: -10.187865257263184
    6. 'self' → logprob: -10.625365257263184
    7. '.' → logprob: -10.937865257263184
    8. '```' → logprob: -11.375365257263184
    9. '   ' → logprob: -11.937865257263184
    10. '``' → logprob: -12.187865257263184

Token 385: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.18904706835746765
    2. '<|end|>' → logprob: -1.81404709815979
    3. '   ' → logprob: -5.064046859741211
    4. '

' → logprob: -6.314046859741211
    5. '    
' → logprob: -7.814046859741211
    6. '<|end|>' → logprob: -8.314046859741211
    7. '\n' → logprob: -9.564046859741211
    8. ')' → logprob: -9.689046859741211
    9. '```' → logprob: -9.689046859741211
    10. 'class' → logprob: -9.814046859741211

Token 386: '#' (ID: 2)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.025313399732112885
    2. 'class' → logprob: -4.150313377380371
    3. '   ' → logprob: -4.900313377380371
    4. '<|end|>' → logprob: -6.900313377380371
    5. '```' → logprob: -7.900313377380371
    6. ' class' → logprob: -8.400313377380371
    7. '

' → logprob: -9.650313377380371
    8. '    
' → logprob: -10.525313377380371
    9. '<|end|>' → logprob: -10.900313377380371
    10. ' ' → logprob: -11.525313377380371

Token 387: ' Abstract' (ID: 17413)
  Prédit: 'class'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'class' → logprob: -6.682846287731081e-05
    2. 'from' → logprob: -9.875066757202148
    3. '#' → logprob: -11.625066757202148
    4. 'import' → logprob: -12.500066757202148
    5. ' class' → logprob: -13.000066757202148
    6. 'abstract' → logprob: -15.750066757202148
    7. '
' → logprob: -16.00006675720215
    8. '"class' → logprob: -17.00006675720215
    9. '```' → logprob: -17.00006675720215
    10. '<class' → logprob: -17.75006675720215

Token 388: ' class' (ID: 744)
  Prédit: 'class'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'class' → logprob: -0.11335738748311996
    2. ' class' → logprob: -2.2383573055267334
    3. '
' → logprob: -7.8633575439453125
    4. '<class' → logprob: -9.113357543945312
    5. ' 
' → logprob: -11.238357543945312
    6. 'classmethod' → logprob: -11.488357543945312
    7. 'Class' → logprob: -11.613357543945312
    8. '"class' → logprob: -13.613357543945312
    9. '<|end|>' → logprob: -13.988357543945312
    10. ' ' → logprob: -14.238357543945312

Token 389: ' for' (ID: 395)
  Prédit: 'class'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'class' → logprob: -0.0025907543022185564
    2. ' class' → logprob: -6.002590656280518
    3. '
' → logprob: -9.127591133117676
    4. '<class' → logprob: -12.252591133117676
    5. '<|end|>' → logprob: -14.752591133117676
    6. ' 
' → logprob: -14.877591133117676
    7. '"class' → logprob: -15.127591133117676
    8. 'c' → logprob: -15.752591133117676
    9. '

' → logprob: -16.87759017944336
    10. 'clas' → logprob: -17.00259017944336

Token 390: ' a' (ID: 261)
  Prédit: 'T'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'T' → logprob: -0.7207366228103638
    2. 'class' → logprob: -1.7207366228103638
    3. ' T' → logprob: -2.220736503601074
    4. 'Edge' → logprob: -2.345736503601074
    5. ' Edge' → logprob: -2.720736503601074
    6. ' class' → logprob: -3.970736503601074
    7. 'Length' → logprob: -4.845736503601074
    8. 'Side' → logprob: -4.970736503601074
    9. 'Solid' → logprob: -5.595736503601074
    10. 'Surface' → logprob: -5.970736503601074

Token 391: ' Worm' (ID: 119021)
  Prédit: 'T'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'T' → logprob: -0.3627886176109314
    2. ' T' → logprob: -2.737788677215576
    3. 'class' → logprob: -2.737788677215576
    4. 'Edge' → logprob: -3.362788677215576
    5. ' class' → logprob: -3.487788677215576
    6. 'Poly' → logprob: -3.987788677215576
    7. 'Solid' → logprob: -4.362788677215576
    8. 'Length' → logprob: -4.612788677215576
    9. 'n' → logprob: -4.737788677215576
    10. 'Surface' → logprob: -4.987788677215576

Token 392: ''s' (ID: 885)
  Prédit: 'class'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'class' → logprob: -0.0002802855451591313
    2. ' class' → logprob: -8.500280380249023
    3. '
' → logprob: -9.500280380249023
    4. 'W' → logprob: -14.750280380249023
    5. '-class' → logprob: -15.250280380249023
    6. '```' → logprob: -15.500280380249023
    7. 'classmethod' → logprob: -15.625280380249023
    8. '<class' → logprob: -15.875280380249023
    9. 'aclass' → logprob: -15.875280380249023
    10. 'clas' → logprob: -15.875280380249023

Token 393: ' path' (ID: 3104)
  Prédit: 'Path'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Path' → logprob: -0.9031853079795837
    2. 'Body' → logprob: -1.9031853675842285
    3. ' Path' → logprob: -2.4031853675842285
    4. 'body' → logprob: -2.6531853675842285
    5. ' path' → logprob: -2.6531853675842285
    6. 'W' → logprob: -3.1531853675842285
    7. 'path' → logprob: -3.2781853675842285
    8. 'Shape' → logprob: -3.6531853675842285
    9. 'Movement' → logprob: -3.9031853675842285
    10. 'length' → logprob: -4.4031853675842285

Token 394: ' on' (ID: 402)
  Prédit: 'class'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'class' → logprob: -0.00027825910365208983
    2. '
' → logprob: -8.62527847290039
    3. ' class' → logprob: -9.25027847290039
    4. '<class' → logprob: -13.62527847290039
    5. '<|end|>' → logprob: -14.50027847290039
    6. '"class' → logprob: -15.62527847290039
    7. ' 
' → logprob: -16.00027847290039
    8. '(class' → logprob: -16.00027847290039
    9. '[class' → logprob: -16.75027847290039
    10. ',class' → logprob: -17.12527847290039

Token 395: ' faces' (ID: 22060)
  Prédit: ' the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' the' → logprob: -0.4624379575252533
    2. 'the' → logprob: -1.2124379873275757
    3. ' a' → logprob: -2.837437868118286
    4. 'a' → logprob: -4.837438106536865
    5. 'ABC' → logprob: -5.712438106536865
    6. ' ABC' → logprob: -6.837438106536865
    7. '<|end|>' → logprob: -7.712438106536865
    8. ' an' → logprob: -7.962438106536865
    9. ' tetra' → logprob: -8.337437629699707
    10. '```' → logprob: -8.962437629699707

Token 396: ' and' (ID: 326)
  Prédit: 'class'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'class' → logprob: -0.0008918096427805722
    2. '
' → logprob: -7.25089168548584
    3. ' class' → logprob: -8.62589168548584
    4. '<class' → logprob: -13.50089168548584
    5. '"class' → logprob: -15.50089168548584
    6. '<|end|>' → logprob: -15.50089168548584
    7. '[class' → logprob: -16.000892639160156
    8. '(class' → logprob: -16.375892639160156
    9. '\n' → logprob: -16.750892639160156
    10. '

' → logprob: -17.000892639160156

Token 397: ' edges' (ID: 22569)
  Prédit: ' edges'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' edges' → logprob: -0.6932647824287415
    2. 'edges' → logprob: -0.6932647824287415
    3. '_edges' → logprob: -9.943264961242676
    4. 'vertices' → logprob: -10.693264961242676
    5. '#' → logprob: -10.943264961242676
    6. ' vertices' → logprob: -11.693264961242676
    7. 'faces' → logprob: -12.318264961242676
    8. 'Edges' → logprob: -12.943264961242676
    9. '(edges' → logprob: -12.943264961242676
    10. 'e' → logprob: -12.943264961242676

Token 398: '
' (ID: 198)
  Prédit: 'class'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'class' → logprob: -0.00020616286201402545
    2. '
' → logprob: -8.500205993652344
    3. ' class' → logprob: -12.875205993652344
    4. '<class' → logprob: -16.375205993652344
    5. '"class' → logprob: -17.375205993652344
    6. 'clas' → logprob: -18.750205993652344
    7. ' 
' → logprob: -18.875205993652344
    8. '```' → logprob: -19.000205993652344
    9. '-class' → logprob: -19.750205993652344
    10. ''class' → logprob: -19.750205993652344

Token 399: 'class' (ID: 1444)
  Prédit: 'class'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'class' → logprob: -2.3319124011322856e-05
    2. '
' → logprob: -11.250022888183594
    3. ' class' → logprob: -11.500022888183594
    4. '<class' → logprob: -16.875022888183594
    5. '"class' → logprob: -18.125022888183594
    6. ' 
' → logprob: -18.125022888183594
    7. 'clas' → logprob: -18.375022888183594
    8. 'c' → logprob: -20.000022888183594
    9. 'abstract' → logprob: -20.000022888183594
    10. 'cla' → logprob: -20.375022888183594

Token 400: ' Worm' (ID: 119021)
  Prédit: ' Worm'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Worm' → logprob: -0.22468531131744385
    2. 'W' → logprob: -2.3496851921081543
    3. ' Path' → logprob: -2.9746851921081543
    4. ' ABC' → logprob: -3.8496851921081543
    5. ' W' → logprob: -4.099685192108154
    6. 'Path' → logprob: -4.599685192108154
    7. 'ABC' → logprob: -5.224685192108154
    8. 'Abstract' → logprob: -7.724685192108154
    9. ' Abstract' → logprob: -7.974685192108154
    10. ' ' → logprob: -9.474685668945312

Token 401: 'Path' (ID: 2619)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.011180450208485126
    2. ':' → logprob: -4.511180400848389
    3. 'Path' → logprob: -10.011180877685547
    4. ':
' → logprob: -10.261180877685547
    5. '(Abstract' → logprob: -10.636180877685547
    6. 'Paths' → logprob: -12.386180877685547
    7. 'path' → logprob: -12.636180877685547
    8. '(path' → logprob: -12.886180877685547
    9. '(Path' → logprob: -13.011180877685547
    10. '_path' → logprob: -13.011180877685547

Token 402: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0006305903079919517
    2. ':' → logprob: -7.3756303787231445
    3. ' (' → logprob: -13.000630378723145
    4. ':
' → logprob: -13.500630378723145
    5. '(Abstract' → logprob: -14.750630378723145
    6. '(
' → logprob: -17.37563133239746
    7. ' :' → logprob: -18.12563133239746
    8. '():' → logprob: -18.37563133239746
    9. '(object' → logprob: -18.62563133239746
    10. '```' → logprob: -18.87563133239746

Token 403: 'ABC' (ID: 44197)
  Prédit: 'ABC'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ABC' → logprob: -0.0005082341376692057
    2. ' ABC' → logprob: -7.6255083084106445
    3. '):' → logprob: -11.500508308410645
    4. '):
' → logprob: -12.250508308410645
    5. 'AB' → logprob: -13.250508308410645
    6. ')' → logprob: -13.625508308410645
    7. 'abc' → logprob: -14.125508308410645
    8. '(' → logprob: -14.125508308410645
    9. ',' → logprob: -14.500508308410645
    10. ' ' → logprob: -16.375507354736328

Token 404: '):

' (ID: 15626)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0181843563914299
    2. '):
' → logprob: -4.018184185028076
    3. ':' → logprob: -11.143184661865234
    4. ')' → logprob: -11.393184661865234
    5. '):
' → logprob: -12.768184661865234
    6. '):

' → logprob: -12.768184661865234
    7. ' ):' → logprob: -13.143184661865234
    8. ',' → logprob: -14.518184661865234
    9. '   ' → logprob: -16.018184661865234
    10. ':
' → logprob: -16.643184661865234

Token 405: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0006856293766759336
    2. ' @' → logprob: -8.125685691833496
    3. '    
' → logprob: -8.375685691833496
    4. '
' → logprob: -10.250685691833496
    5. ' indentation' → logprob: -10.375685691833496
    6. '@' → logprob: -10.625685691833496
    7. ' ind' → logprob: -10.875685691833496
    8. ' def' → logprob: -11.250685691833496
    9. '   ' → logprob: -11.500685691833496
    10. ' indent' → logprob: -12.250685691833496

Token 406: ' @' (ID: 759)
  Prédit: '@'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '@' (adapté à ' @') → logprob: -0.8704758286476135
    2. ' @' → logprob: -1.2454757690429688
    3. '   ' → logprob: -1.2454757690429688
    4. '@property' → logprob: -5.745475769042969
    5. 'def' → logprob: -6.745475769042969
    6. '@param' → logprob: -7.620475769042969
    7. ' def' → logprob: -7.620475769042969
    8. '    
' → logprob: -9.495475769042969
    9. '@index' → logprob: -10.120475769042969
    10. '@class' → logprob: -10.495475769042969

Token 407: 'abstract' (ID: 31332)
  Prédit: 'abstract'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'abstract' → logprob: -0.0011943945428356528
    2. 'property' → logprob: -6.751194477081299
    3. 'staticmethod' → logprob: -11.00119400024414
    4. 'abc' → logprob: -12.37619400024414
    5. 'classmethod' → logprob: -13.12619400024414
    6. ' abstract' → logprob: -14.00119400024414
    7. 'abs' → logprob: -15.50119400024414
    8. 'ab' → logprob: -16.25119400024414
    9. 'init' → logprob: -17.00119400024414
    10. '__' → logprob: -18.25119400024414

Token 408: 'method' (ID: 8697)
  Prédit: 'method'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'method' → logprob: -0.05936536192893982
    2. '_method' → logprob: -3.0593652725219727
    3. 'def' → logprob: -4.809365272521973
    4. '_token' → logprob: -7.059365272521973
    5. ' def' → logprob: -7.309365272521973
    6. '(' → logprob: -8.309365272521973
    7. 'classmethod' → logprob: -8.434365272521973
    8. ' method' → logprob: -8.809365272521973
    9. '
' → logprob: -9.059365272521973
    10. '   ' → logprob: -9.934365272521973

Token 409: '
' (ID: 198)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.05739462375640869
    2. '
' → logprob: -3.557394504547119
    3. ' def' → logprob: -3.807394504547119
    4. '   ' → logprob: -6.432394504547119
    5. '(' → logprob: -6.557394504547119
    6. '    
' → logprob: -6.682394504547119
    7. 'method' → logprob: -8.557394981384277
    8. ' ' → logprob: -8.682394981384277
    9. '	def' → logprob: -8.932394981384277
    10. '(
' → logprob: -9.432394981384277

Token 410: '   ' (ID: 271)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.6660680770874023
    2. 'method' → logprob: -1.1660680770874023
    3. '
' → logprob: -1.7910680770874023
    4. '_method' → logprob: -5.916068077087402
    5. ' def' → logprob: -6.166068077087402
    6. '    
' → logprob: -6.416068077087402
    7. '   ' → logprob: -7.541068077087402
    8. '_token' → logprob: -8.041068077087402
    9. '  
' → logprob: -8.541068077087402
    10. ' method' → logprob: -9.791068077087402

Token 411: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.06296147406101227
    2. 'property' → logprob: -2.8129615783691406
    3. 'staticmethod' → logprob: -7.812961578369141
    4. '
' → logprob: -8.56296157836914
    5. 'classmethod' → logprob: -8.56296157836914
    6. 'method' → logprob: -9.06296157836914
    7. ' def' → logprob: -10.06296157836914
    8. 'bool' → logprob: -10.56296157836914
    9. 'len' → logprob: -12.43796157836914
    10. '   ' → logprob: -12.93796157836914

Token 412: ' position' (ID: 4010)
  Prédit: ' length'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' length' → logprob: -1.3183398246765137
    2. ' start' → logprob: -1.4433398246765137
    3. ' get' → logprob: -2.4433398246765137
    4. 'start' → logprob: -2.6933398246765137
    5. ' move' → logprob: -2.9433398246765137
    6. ' step' → logprob: -2.9433398246765137
    7. ' next' → logprob: -3.0683398246765137
    8. 'length' → logprob: -3.4433398246765137
    9. ' path' → logprob: -3.5683398246765137
    10. ' steps' → logprob: -3.9433398246765137

Token 413: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.0006419036653824151
    2. '(' → logprob: -8.000641822814941
    3. '_at' → logprob: -9.125641822814941
    4. ' (' → logprob: -9.250641822814941
    5. 'self' → logprob: -10.250641822814941
    6. '()' → logprob: -10.875641822814941
    7. '(
' → logprob: -11.125641822814941
    8. '(s' → logprob: -11.750641822814941
    9. 's' → logprob: -12.250641822814941
    10. '()(' → logprob: -12.875641822814941

Token 414: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.07489506900310516
    2. ',' → logprob: -3.449895143508911
    3. '):' → logprob: -3.699895143508911
    4. 'self' → logprob: -4.449894905090332
    5. '(self' → logprob: -6.199894905090332
    6. ':' → logprob: -6.949894905090332
    7. '):
' → logprob: -7.574894905090332
    8. ' )' → logprob: -8.449894905090332
    9. ' self' → logprob: -9.324894905090332
    10. ')->' → logprob: -9.324894905090332

Token 415: ' ->' (ID: 2747)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.00019603055261541158
    2. ' ->' → logprob: -9.50019645690918
    3. 'self' → logprob: -9.62519645690918
    4. '->' → logprob: -10.50019645690918
    5. '():' → logprob: -12.00019645690918
    6. '()' → logprob: -12.12519645690918
    7. ' (' → logprob: -12.37519645690918
    8. ':' → logprob: -12.50019645690918
    9. '(' → logprob: -12.75019645690918
    10. ' self' → logprob: -14.12519645690918

Token 416: ' Tuple' (ID: 50841)
  Prédit: 'Tuple'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Tuple' → logprob: -0.07463302463293076
    2. ' Tuple' → logprob: -2.6996331214904785
    3. 'float' → logprob: -5.4496331214904785
    4. ' float' → logprob: -8.57463264465332
    5. 'Optional' → logprob: -9.57463264465332
    6. 'str' → logprob: -9.94963264465332
    7. 'None' → logprob: -10.44963264465332
    8. 'tuple' → logprob: -10.69963264465332
    9. 'int' → logprob: -11.94963264465332
    10. ' Optional' → logprob: -12.32463264465332

Token 417: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0031974392477422953
    2. '[int' → logprob: -5.75319766998291
    3. 'float' → logprob: -11.62819766998291
    4. '[str' → logprob: -11.75319766998291
    5. '   ' → logprob: -14.37819766998291
    6. '(float' → logprob: -14.75319766998291
    7. ',float' → logprob: -15.00319766998291
    8. ']' → logprob: -15.37819766998291
    9. ' [' → logprob: -15.50319766998291
    10. '<float' → logprob: -15.50319766998291

Token 418: 'Face' (ID: 23402)
  Prédit: 'float'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'float' → logprob: -0.013329640030860901
    2. 'str' → logprob: -5.01332950592041
    3. 'Face' → logprob: -5.13832950592041
    4. 'int' → logprob: -7.76332950592041
    5. ' float' → logprob: -8.51332950592041
    6. 'face' → logprob: -11.13832950592041
    7. '[' → logprob: -11.38832950592041
    8. 'Float' → logprob: -11.51332950592041
    9. 'Optional' → logprob: -11.63832950592041
    10. '3' → logprob: -12.01332950592041

Token 419: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -6.909333023941144e-05
    2. '[' → logprob: -10.000068664550781
    3. ' ,' → logprob: -11.625068664550781
    4. ',List' → logprob: -12.375068664550781
    5. '   ' → logprob: -13.000068664550781
    6. '[],' → logprob: -13.750068664550781
    7. ',float' → logprob: -13.750068664550781
    8. '[str' → logprob: -13.875068664550781
    9. '[int' → logprob: -14.125068664550781
    10. ',
' → logprob: -14.375068664550781

Token 420: ' Tuple' (ID: 50841)
  Prédit: 'Edge'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Edge' → logprob: -0.4998106360435486
    2. 'float' → logprob: -1.3748106956481934
    3. 'Optional' → logprob: -2.7498106956481934
    4. 'str' → logprob: -3.4998106956481934
    5. 'List' → logprob: -3.6248106956481934
    6. 'Face' → logprob: -4.249810695648193
    7. 'Tuple' → logprob: -6.124810695648193
    8. 'Vertex' → logprob: -7.249810695648193
    9. ' Edge' → logprob: -7.499810695648193
    10. ' float' → logprob: -7.499810695648193

Token 421: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.03128797933459282
    2. '[str' → logprob: -4.031288146972656
    3. '[int' → logprob: -4.406288146972656
    4. 'float' → logprob: -7.531288146972656
    5. ',float' → logprob: -8.656288146972656
    6. ']' → logprob: -10.156288146972656
    7. '2' → logprob: -10.781288146972656
    8. ',' → logprob: -11.031288146972656
    9. 'Edge' → logprob: -11.156288146972656
    10. '(float' → logprob: -11.281288146972656

Token 422: 'float' (ID: 7829)
  Prédit: 'float'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'float' → logprob: -0.1549159437417984
    2. 'Edge' → logprob: -2.5299160480499268
    3. 'str' → logprob: -2.7799160480499268
    4. 'Vertex' → logprob: -7.279915809631348
    5. 'int' → logprob: -7.779915809631348
    6. ' float' → logprob: -8.404915809631348
    7. '2' → logprob: -9.029915809631348
    8. '[str' → logprob: -9.904915809631348
    9. '[' → logprob: -10.404915809631348
    10. ' Edge' → logprob: -10.654915809631348

Token 423: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -4.5491004129871726e-05
    2. ',float' → logprob: -10.125045776367188
    3. ' ,' → logprob: -12.375045776367188
    4. ',
' → logprob: -14.000045776367188
    5. ',double' → logprob: -16.625045776367188
    6. ',int' → logprob: -16.750045776367188
    7. '<|end|>' → logprob: -17.125045776367188
    8. '‌,' → logprob: -17.625045776367188
    9. ',

' → logprob: -18.000045776367188
    10. 'float' → logprob: -18.000045776367188

Token 424: ' float' (ID: 4428)
  Prédit: 'float'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'float' → logprob: -0.004866668954491615
    2. ' float' → logprob: -5.379866600036621
    3. '...' → logprob: -8.379866600036621
    4. ',float' → logprob: -12.004866600036621
    5. '<float' → logprob: -13.004866600036621
    6. '	float' → logprob: -13.504866600036621
    7. '])' → logprob: -13.504866600036621
    8. ' ...' → logprob: -13.629866600036621
    9. '=float' → logprob: -13.879866600036621
    10. '...]' → logprob: -14.254866600036621

Token 425: ']]:
' (ID: 183340)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.7981019020080566
    2. ']' → logprob: -1.0481019020080566
    3. ')' → logprob: -2.5481019020080566
    4. ',' → logprob: -2.6731019020080566
    5. ']:' → logprob: -4.048101902008057
    6. ']>' → logprob: -4.423101902008057
    7. ']]' → logprob: -4.798101902008057
    8. ']):' → logprob: -5.423101902008057
    9. '):' → logprob: -5.548101902008057
    10. '],' → logprob: -5.798101902008057

Token 426: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 427: ' """
' (ID: 7037)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.013652472756803036
    2. ' pass' → logprob: -4.388652324676514
    3. '<|end|>' → logprob: -7.388652324676514
    4. 'pass' → logprob: -8.138652801513672
    5. ' ' → logprob: -9.638652801513672
    6. '   ' → logprob: -10.013652801513672
    7. '...' → logprob: -10.263652801513672
    8. '      ' → logprob: -10.513652801513672
    9. '
' → logprob: -11.388652801513672
    10. '    ' → logprob: -11.513652801513672

Token 428: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.005742136854678392
    2. ' pass' → logprob: -5.255742073059082
    3. '<|end|>' → logprob: -8.130742073059082
    4. '   ' → logprob: -10.005742073059082
    5. 'pass' → logprob: -10.255742073059082
    6. ')' → logprob: -10.255742073059082
    7. '    ' → logprob: -10.755742073059082
    8. ' ' → logprob: -10.755742073059082
    9. '      ' → logprob: -10.880742073059082
    10. '...' → logprob: -11.255742073059082

Token 429: ' Returns' (ID: 9609)
  Prédit: '"""'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"""' → logprob: -0.6020774245262146
    2. 'Returns' (adapté à ' Returns') → logprob: -1.4770774841308594
    3. '       ' → logprob: -2.2270774841308594
    4. 'Return' → logprob: -2.8520774841308594
    5. ' Returns' → logprob: -4.227077484130859
    6. '   ' → logprob: -4.477077484130859
    7. ' """' → logprob: -4.727077484130859
    8. ')' → logprob: -5.602077484130859
    9. ' Return' → logprob: -5.727077484130859
    10. '""' → logprob: -5.852077484130859

Token 430: ' the' (ID: 290)
  Prédit: ' the'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' the' → logprob: -0.0055789100006222725
    2. ' current' → logprob: -5.755578994750977
    3. 'the' → logprob: -6.505578994750977
    4. ' a' → logprob: -7.255578994750977
    5. '<|end|>' → logprob: -9.130578994750977
    6. ' (' → logprob: -10.130578994750977
    7. ' an' → logprob: -10.880578994750977
    8. 'current' → logprob: -11.130578994750977
    9. 'The' → logprob: -12.505578994750977
    10. ')' → logprob: -12.755578994750977

Token 431: ' face' (ID: 4950)
  Prédit: ' current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' current' → logprob: -0.28731098771095276
    2. 'current' → logprob: -1.4123109579086304
    3. 'position' → logprob: -6.03731107711792
    4. ' position' → logprob: -6.53731107711792
    5. ' next' → logprob: -6.53731107711792
    6. 'next' → logprob: -7.78731107711792
    7. '当前位置' → logprob: -9.037310600280762
    8. '(current' → logprob: -9.287310600280762
    9. ' face' → logprob: -9.787310600280762
    10. 'face' → logprob: -10.537310600280762

Token 432: ' where' (ID: 1919)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.46071234345436096
    2. ' and' → logprob: -2.085712432861328
    3. ' on' → logprob: -2.210712432861328
    4. '<|end|>' → logprob: -2.210712432861328
    5. ' ,' → logprob: -4.585712432861328
    6. 'and' → logprob: -5.210712432861328
    7. ' the' → logprob: -5.835712432861328
    8. ' that' → logprob: -6.335712432861328
    9. ' where' → logprob: -6.335712432861328
    10. ')' → logprob: -6.960712432861328

Token 433: ' the' (ID: 290)
  Prédit: ' the'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' the' → logprob: -0.3868860900402069
    2. 'the' → logprob: -1.1368861198425293
    3. '   ' → logprob: -12.261885643005371
    4. 'def' → logprob: -12.261885643005371
    5. 'The' → logprob: -13.761885643005371
    6. ' ' → logprob: -14.011885643005371
    7. '	the' → logprob: -14.261885643005371
    8. 't' → logprob: -14.636885643005371
    9. '...' → logprob: -14.761885643005371
    10. '       ' → logprob: -15.511885643005371

Token 434: ' worm' (ID: 40598)
  Prédit: 'worm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'worm' → logprob: -0.18727831542491913
    2. ' worm' → logprob: -1.9372782707214355
    3. 'path' → logprob: -3.9372782707214355
    4. ' path' → logprob: -5.1872782707214355
    5. 'position' → logprob: -7.9372782707214355
    6. 'w' → logprob: -8.062278747558594
    7. 'W' → logprob: -8.062278747558594
    8. ' current' → logprob: -8.687278747558594
    9. 'current' → logprob: -9.062278747558594
    10. ' position' → logprob: -9.312278747558594

Token 435: ' stopped' (ID: 18145)
  Prédit: ' is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.1053403988480568
    2. ' currently' → logprob: -2.4803404808044434
    3. 'currently' → logprob: -4.230340480804443
    4. 'is' → logprob: -6.980340480804443
    5. '<|end|>' → logprob: -7.480340480804443
    6. 'Currently' → logprob: -9.355340003967285
    7. ' resides' → logprob: -10.355340003967285
    8. '<|end|>' → logprob: -10.980340003967285
    9. ' current' → logprob: -11.230340003967285
    10. ' starts' → logprob: -11.605340003967285

Token 436: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.7160984873771667
    2. ' and' → logprob: -0.7160984873771667
    3. '.' → logprob: -4.341098308563232
    4. 'and' → logprob: -5.216098308563232
    5. ' at' → logprob: -6.591098308563232
    6. '   ' → logprob: -7.216098308563232
    7. ' after' → logprob: -7.841098308563232
    8. '       ' → logprob: -7.966098308563232
    9. ' ,' → logprob: -7.966098308563232
    10. ' on' → logprob: -8.34109878540039

Token 437: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.010237160138785839
    2. 'and' → logprob: -4.885237216949463
    3. ' the' → logprob: -7.260237216949463
    4. ',' → logprob: -7.510237216949463
    5. ' a' → logprob: -7.885237216949463
    6. '<|end|>' → logprob: -8.010236740112305
    7. ' ' → logprob: -8.510236740112305
    8. ' with' → logprob: -8.510236740112305
    9. ' along' → logprob: -9.260236740112305
    10. ' as' → logprob: -10.010236740112305

Token 438: ' the' (ID: 290)
  Prédit: ' the'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' the' → logprob: -0.022882021963596344
    2. 'the' → logprob: -4.022881984710693
    3. ' its' → logprob: -5.522881984710693
    4. ' a' → logprob: -7.272881984710693
    5. ' coordinates' → logprob: -11.772882461547852
    6. ' an' → logprob: -11.897882461547852
    7. ' position' → logprob: -11.897882461547852
    8. 'a' → logprob: -12.147882461547852
    9. 'its' → logprob: -13.522882461547852
    10. '<|end|>' → logprob: -14.147882461547852

Token 439: ' local' (ID: 2698)
  Prédit: ' position'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' position' → logprob: -0.9520848989486694
    2. ' local' → logprob: -1.4520848989486694
    3. 'position' → logprob: -2.452085018157959
    4. ' coordinates' → logprob: -2.577085018157959
    5. 'local' → logprob: -3.077085018157959
    6. 'b' → logprob: -3.202085018157959
    7. 'coordinates' → logprob: -3.577085018157959
    8. ' point' → logprob: -4.077085018157959
    9. 'relative' → logprob: -4.077085018157959
    10. ' relative' → logprob: -4.327085018157959

Token 440: ' ' (ID: 220)
  Prédit: ' coordinates'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' coordinates' → logprob: -0.9082375764846802
    2. 'coordinates' → logprob: -1.0332375764846802
    3. ' position' → logprob: -1.7832375764846802
    4. 'position' → logprob: -2.6582374572753906
    5. ' (' → logprob: -7.283237457275391
    6. ' coordinate' → logprob: -7.283237457275391
    7. 'coordinate' → logprob: -7.658237457275391
    8. 'coords' → logprob: -7.908237457275391
    9. '_coordinates' → logprob: -8.78323745727539
    10. ' UV' → logprob: -9.28323745727539

Token 441: '2' (ID: 17)
  Prédit: 'coordinates'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'coordinates' → logprob: -0.4167194962501526
    2. 'position' → logprob: -1.7917194366455078
    3. ' coordinates' → logprob: -2.166719436645508
    4. ' position' → logprob: -3.041719436645508
    5. 'coordinate' → logprob: -5.541719436645508
    6. 'coords' → logprob: -6.041719436645508
    7. ' (' → logprob: -6.416719436645508
    8. '(' → logprob: -6.666719436645508
    9. ' coordinate' → logprob: -7.166719436645508
    10. 'point' → logprob: -7.916719436645508

Token 442: 'D' (ID: 35)
  Prédit: 'D'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'D' → logprob: -0.4861011207103729
    2. 'd' → logprob: -0.9861011505126953
    3. 'float' → logprob: -5.486101150512695
    4. '-t' → logprob: -5.986101150512695
    5. '-d' → logprob: -6.861101150512695
    6. 'f' → logprob: -7.111101150512695
    7. ' float' → logprob: -7.361101150512695
    8. '-f' → logprob: -7.486101150512695
    9. '0' → logprob: -7.611101150512695
    10. ' ' → logprob: -8.111101150512695

Token 443: ' coordinates' (ID: 27933)
  Prédit: ' coordinates'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' coordinates' → logprob: -0.08810294419527054
    2. ' position' → logprob: -2.8381030559539795
    3. 'coordinates' → logprob: -4.0881028175354
    4. ' coordinate' → logprob: -4.8381028175354
    5. 'position' → logprob: -8.338103294372559
    6. ' point' → logprob: -8.713103294372559
    7. 'coordinate' → logprob: -8.713103294372559
    8. ' coords' → logprob: -8.963103294372559
    9. '<|end|>' → logprob: -9.213103294372559
    10. '_coordinates' → logprob: -9.338103294372559

Token 444: ' of' (ID: 328)
  Prédit: ' on'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' on' → logprob: -0.9422457814216614
    2. ' of' → logprob: -1.0672457218170166
    3. ' (' → logprob: -1.4422457218170166
    4. ' within' → logprob: -4.817245960235596
    5. '<|end|>' → logprob: -5.067245960235596
    6. '   ' → logprob: -5.692245960235596
    7. ' in' → logprob: -5.692245960235596
    8. ' inside' → logprob: -6.067245960235596
    9. ',' → logprob: -6.442245960235596
    10. ')' → logprob: -6.692245960235596

Token 445: ' the' (ID: 290)
  Prédit: ' the'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' the' → logprob: -0.31428343057632446
    2. 'the' → logprob: -1.4392833709716797
    3. ' its' → logprob: -3.4392833709716797
    4. ' that' → logprob: -8.43928337097168
    5. 'its' → logprob: -8.81428337097168
    6. 'that' → logprob: -10.31428337097168
    7. ')' → logprob: -10.43928337097168
    8. 'position' → logprob: -10.81428337097168
    9. '<|end|>' → logprob: -11.06428337097168
    10. ' position' → logprob: -11.31428337097168

Token 446: ' position' (ID: 4010)
  Prédit: 'position'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'position' → logprob: -0.9150711297988892
    2. 'worm' → logprob: -1.4150711297988892
    3. ' next' → logprob: -2.4150710105895996
    4. ' worm' → logprob: -2.5400710105895996
    5. ' position' → logprob: -2.6650710105895996
    6. 'point' → logprob: -3.1650710105895996
    7. 'next' → logprob: -3.4150710105895996
    8. ' point' → logprob: -3.5400710105895996
    9. 'w' → logprob: -5.2900710105896
    10. 'stop' → logprob: -5.5400710105896

Token 447: '.
' (ID: 558)
  Prédit: ' on'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' on' → logprob: -0.08395377546548843
    2. ' within' → logprob: -3.208953857421875
    3. ' (' → logprob: -3.833953857421875
    4. ',' → logprob: -5.333953857421875
    5. ' in' → logprob: -6.083953857421875
    6. ' of' → logprob: -6.208953857421875
    7. ' inside' → logprob: -6.333953857421875
    8. '   ' → logprob: -6.458953857421875
    9. '.' → logprob: -6.458953857421875
    10. 'on' → logprob: -6.708953857421875

Token 448: '       ' (ID: 309)
  Prédit: '"""'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"""' → logprob: -0.440976619720459
    2. ')' → logprob: -1.940976619720459
    3. '   ' → logprob: -1.940976619720459
    4. '"""
' → logprob: -3.315976619720459
    5. ' """' → logprob: -4.440976619720459
    6. '       ' → logprob: -4.815976619720459
    7. '""' → logprob: -5.690976619720459
    8. ' """
' → logprob: -5.690976619720459
    9. '    ' → logprob: -6.065976619720459
    10. '```' → logprob: -6.190976619720459

Token 449: ' Coordinates' (ID: 128904)
  Prédit: '"""'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '"""' → logprob: -0.3877447247505188
    2. '   ' → logprob: -1.512744665145874
    3. ')' → logprob: -3.012744665145874
    4. ' """' → logprob: -4.012744903564453
    5. '       ' → logprob: -4.262744903564453
    6. '"""
' → logprob: -4.762744903564453
    7. ' """
' → logprob: -5.637744903564453
    8. '```' → logprob: -6.137744903564453
    9. '\n' → logprob: -6.387744903564453
    10. '""' → logprob: -6.762744903564453

Token 450: ' parametr' (ID: 175428)
  Prédit: ' are'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' are' → logprob: -0.046480074524879456
    2. ' should' → logprob: -3.671480178833008
    3. ' must' → logprob: -4.421480178833008
    4. '<|end|>' → logprob: -6.171480178833008
    5. ' within' → logprob: -6.671480178833008
    6. ' in' → logprob: -6.671480178833008
    7. ' on' → logprob: -7.171480178833008
    8. ' (' → logprob: -7.546480178833008
    9. ' range' → logprob: -7.921480178833008
    10. ')' → logprob: -8.046480178833008

Token 451: 'ized' (ID: 2110)
  Prédit: 'ized'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ized' → logprob: -0.2955065369606018
    2. 'ize' → logprob: -1.545506477355957
    3. 'er' → logprob: -3.420506477355957
    4. 'etrize' → logprob: -5.795506477355957
    5. 'eter' → logprob: -6.295506477355957
    6. 'izing' → logprob: -6.545506477355957
    7. ' ' → logprob: -6.670506477355957
    8. 'etr' → logprob: -7.420506477355957
    9. '   ' → logprob: -8.170506477355957
    10. '```' → logprob: -8.545506477355957

Token 452: ' on' (ID: 402)
  Prédit: ' on'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' on' → logprob: -1.0044167041778564
    2. ' by' → logprob: -1.3794167041778564
    3. ' within' → logprob: -2.2544167041778564
    4. ' inside' → logprob: -2.8794167041778564
    5. ' in' → logprob: -3.0044167041778564
    6. ' as' → logprob: -3.1294167041778564
    7. ' (' → logprob: -3.1294167041778564
    8. '<|end|>' → logprob: -3.5044167041778564
    9. '(' → logprob: -4.254416465759277
    10. 'on' → logprob: -4.754416465759277

Token 453: ' the' (ID: 290)
  Prédit: ' the'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' the' → logprob: -0.03825802728533745
    2. 'the' → logprob: -3.4132580757141113
    3. ' (' → logprob: -6.663258075714111
    4. ' a' → logprob: -6.788258075714111
    5. ' [' → logprob: -7.038258075714111
    6. ' that' → logprob: -7.663258075714111
    7. '[' → logprob: -7.663258075714111
    8. '(' → logprob: -8.538257598876953
    9. ' this' → logprob: -10.288257598876953
    10. ' edges' → logprob: -10.288257598876953

Token 454: ' face' (ID: 4950)
  Prédit: ' face'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' face' → logprob: -0.1690230518579483
    2. 'face' → logprob: -2.169023036956787
    3. ' triangle' → logprob: -3.669023036956787
    4. 'Face' → logprob: -5.669023036956787
    5. 'triangle' → logprob: -5.919023036956787
    6. ' unit' → logprob: -6.794023036956787
    7. '_face' → logprob: -7.044023036956787
    8. ' standard' → logprob: -7.044023036956787
    9. ' current' → logprob: -7.169023036956787
    10. ' Face' → logprob: -7.169023036956787

Token 455: ',' (ID: 11)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.3250907361507416
    2. '   ' → logprob: -1.825090765953064
    3. ',' → logprob: -3.7000906467437744
    4. '.' → logprob: -4.2000908851623535
    5. ' in' → logprob: -4.5750908851623535
    6. ' (' → logprob: -4.8250908851623535
    7. ' )' → logprob: -4.8250908851623535
    8. ' space' → logprob: -4.9500908851623535
    9. ':' → logprob: -5.2000908851623535
    10. ' coordinates' → logprob: -5.2000908851623535

Token 456: ' unit' (ID: 7670)
  Prédit: ' where'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' where' → logprob: -0.5164560079574585
    2. ' with' → logprob: -1.2664560079574585
    3. ' in' → logprob: -3.891456127166748
    4. '   ' → logprob: -4.016456127166748
    5. ' not' → logprob: -4.016456127166748
    6. ' ranging' → logprob: -4.141456127166748
    7. ' normalized' → logprob: -4.891456127166748
    8. ' e' → logprob: -4.891456127166748
    9. ' starting' → logprob: -5.516456127166748
    10. ' going' → logprob: -5.766456127166748

Token 457: ' edge' (ID: 11165)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.8060195446014404
    2. '<|end|>' → logprob: -1.6810195446014404
    3. '_triangle' → logprob: -2.5560195446014404
    4. '_' → logprob: -2.6810195446014404
    5. '_coordinates' → logprob: -3.5560195446014404
    6. 'space' → logprob: -3.8060195446014404
    7. '_square' → logprob: -3.9310195446014404
    8. '_vector' → logprob: -4.1810197830200195
    9. '_s' → logprob: -4.1810197830200195
    10. '_space' → logprob: -4.1810197830200195

Token 458: ' length' (ID: 5517)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.645468533039093
    2. 's' → logprob: -1.2704684734344482
    3. '_' → logprob: -1.8954684734344482
    4. '_length' → logprob: -4.645468711853027
    5. ' )' → logprob: -4.770468711853027
    6. '_coordinates' → logprob: -5.520468711853027
    7. '_s' → logprob: -5.895468711853027
    8. ',' → logprob: -6.270468711853027
    9. '<|end|>' → logprob: -6.270468711853027
    10. '-length' → logprob: -6.520468711853027

Token 459: ' basis' (ID: 9571)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 460: '.
' (ID: 558)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.748995304107666
    2. '   ' → logprob: -0.873995304107666
    3. '<|end|>' → logprob: -2.373995304107666
    4. '
' → logprob: -5.373995304107666
    5. '       ' → logprob: -5.373995304107666
    6. '.' → logprob: -6.248995304107666
    7. '```' → logprob: -6.248995304107666
    8. '):' → logprob: -7.123995304107666
    9. '<|end|>' → logprob: -7.248995304107666
    10. ':' → logprob: -7.873995304107666

Token 461: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1425124555826187
    2. '"""' → logprob: -2.267512559890747
    3. '    ' → logprob: -4.392512321472168
    4. '       ' → logprob: -4.642512321472168
    5. ' """' → logprob: -5.642512321472168
    6. ')' → logprob: -7.142512321472168
    7. '```' → logprob: -7.142512321472168
    8. '"' → logprob: -7.142512321472168
    9. '<|end|>' → logprob: -7.892512321472168
    10. '"""
' → logprob: -8.267512321472168

Token 462: ' """
' (ID: 7037)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.47583314776420593
    2. '"""' → logprob: -1.3508331775665283
    3. '       ' → logprob: -2.4758331775665283
    4. ' """' → logprob: -4.225832939147949
    5. '    ' → logprob: -4.975832939147949
    6. '"""
' (adapté à ' """
') → logprob: -5.725832939147949
    7. ')' → logprob: -5.725832939147949
    8. '<|end|>' → logprob: -5.975832939147949
    9. '```' → logprob: -6.225832939147949
    10. ' """
' → logprob: -6.600832939147949

Token 463: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5326247215270996
    2. '<|end|>' → logprob: -1.1576247215270996
    3. ' 
' → logprob: -3.1576247215270996
    4. '    
' → logprob: -3.6576247215270996
    5. '    ' → logprob: -4.2826247215271
    6. '
' → logprob: -5.5326247215271
    7. '\n' → logprob: -5.6576247215271
    8. '<|end|>' → logprob: -6.1576247215271
    9. '       ' → logprob: -6.9076247215271
    10. ' pass' → logprob: -6.9076247215271

Token 464: ' pass' (ID: 1853)
  Prédit: 'pass'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pass' (adapté à ' pass') → logprob: -0.0005456457729451358
    2. '       ' → logprob: -8.250545501708984
    3. ' pass' → logprob: -8.250545501708984
    4. '   ' → logprob: -11.000545501708984
    5. 'raise' → logprob: -12.000545501708984
    6. '...' → logprob: -15.000545501708984
    7. '	pass' → logprob: -16.500545501708984
    8. 'pas' → logprob: -17.125545501708984
    9. '```' → logprob: -17.250545501708984
    10. 'return' → logprob: -17.750545501708984

Token 465: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 466: '#' (ID: 2)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 467: ' Concrete' (ID: 47600)
  Prédit: 'class'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'class' → logprob: -0.00014644917973782867
    2. '#' → logprob: -9.500146865844727
    3. 'import' → logprob: -10.250146865844727
    4. ' class' → logprob: -10.625146865844727
    5. 'from' → logprob: -11.625146865844727
    6. '
' → logprob: -13.250146865844727
    7. '<|end|>' → logprob: -14.750146865844727
    8. '```' → logprob: -15.750146865844727
    9. ' ' → logprob: -16.000146865844727
    10. ' #' → logprob: -16.250146865844727

Token 468: ' class' (ID: 744)
  Prédit: 'class'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'class' → logprob: -0.11284381151199341
    2. ' class' → logprob: -2.2378437519073486
    3. '<|end|>' → logprob: -11.36284351348877
    4. '
' → logprob: -11.98784351348877
    5. ' ' → logprob: -13.61284351348877
    6. ' subclass' → logprob: -14.36284351348877
    7. '<class' → logprob: -14.73784351348877
    8. '"class' → logprob: -15.73784351348877
    9. 'clas' → logprob: -15.86284351348877
    10. '	class' → logprob: -15.98784351348877

Token 469: ' for' (ID: 395)
  Prédit: 'class'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'class' → logprob: -0.00016206118743866682
    2. ' class' → logprob: -8.750162124633789
    3. '
' → logprob: -12.625162124633789
    4. '<class' → logprob: -16.62516212463379
    5. 'clas' → logprob: -17.25016212463379
    6. '<|end|>' → logprob: -17.25016212463379
    7. 'from' → logprob: -18.12516212463379
    8. '"class' → logprob: -18.12516212463379
    9. '```' → logprob: -18.50016212463379
    10. '(class' → logprob: -18.87516212463379

Token 470: ' the' (ID: 290)
  Prédit: ' Worm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' Worm' → logprob: -0.8510737419128418
    2. 'W' → logprob: -1.2260737419128418
    3. ' Point' → logprob: -3.101073741912842
    4. 'Point' → logprob: -3.351073741912842
    5. ' Vertex' → logprob: -3.476073741912842
    6. ' a' → logprob: -3.851073741912842
    7. ' Edge' → logprob: -3.976073741912842
    8. ' W' → logprob: -4.226073741912842
    9. 'Vertex' → logprob: -4.226073741912842
    10. 'Edge' → logprob: -4.351073741912842

Token 471: ' regular' (ID: 6953)
  Prédit: 'W'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'W' → logprob: -0.49264293909072876
    2. 'Straight' → logprob: -2.367642879486084
    3. 'Linear' → logprob: -3.117642879486084
    4. 'Edge' → logprob: -3.367642879486084
    5. 'Simple' → logprob: -3.367642879486084
    6. 'T' → logprob: -3.492642879486084
    7. 'worm' → logprob: -3.867642879486084
    8. 'Point' → logprob: -4.117642879486084
    9. 'Discrete' → logprob: -4.242642879486084
    10. 'Vertex' → logprob: -4.367642879486084

Token 472: ' tetra' (ID: 176775)
  Prédit: 'T'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'T' → logprob: -0.4180132746696472
    2. ' tetra' → logprob: -1.293013334274292
    3. 'class' → logprob: -3.543013334274292
    4. 'W' → logprob: -4.168013095855713
    5. 'tet' → logprob: -4.543013095855713
    6. 'Triangle' → logprob: -5.668013095855713
    7. ' T' → logprob: -6.293013095855713
    8. ' class' → logprob: -6.543013095855713
    9. ' ' → logprob: -6.668013095855713
    10. 't' → logprob: -6.668013095855713

Token 473: 'hedron' (ID: 144037)
  Prédit: 'hedron'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'hedron' → logprob: -0.00020973898062948138
    2. 'hedral' → logprob: -9.12520980834961
    3. 'hed' → logprob: -9.25020980834961
    4. 'h' → logprob: -14.25020980834961
    5. 'he' → logprob: -14.25020980834961
    6. 'her' → logprob: -14.75020980834961
    7. 'class' → logprob: -14.87520980834961
    8. '#' → logprob: -15.00020980834961
    9. '```' → logprob: -15.12520980834961
    10. 'head' → logprob: -15.25020980834961

Token 474: ' geometry' (ID: 33209)
  Prédit: 'class'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'class' → logprob: -0.001271781511604786
    2. ' class' → logprob: -6.751271724700928
    3. '
' → logprob: -9.501272201538086
    4. '<|end|>' → logprob: -10.626272201538086
    5. '<class' → logprob: -14.001272201538086
    6. '"class' → logprob: -15.126272201538086
    7. ',class' → logprob: -15.126272201538086
    8. '(class' → logprob: -15.501272201538086
    9. ' 
' → logprob: -15.626272201538086
    10. 'import' → logprob: -15.626272201538086

Token 475: ' and' (ID: 326)
  Prédit: 'class'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'class' → logprob: -0.00047654795343987644
    2. '
' → logprob: -8.125476837158203
    3. ' class' → logprob: -8.625476837158203
    4. ' 
' → logprob: -14.625476837158203
    5. '<|end|>' → logprob: -15.625476837158203
    6. '<class' → logprob: -15.750476837158203
    7. 'import' → logprob: -15.875476837158203
    8. '"class' → logprob: -17.250476837158203
    9. ',class' → logprob: -17.875476837158203
    10. '  
' → logprob: -17.875476837158203

Token 476: ' path' (ID: 3104)
  Prédit: ' its'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' its' → logprob: -0.14235137403011322
    2. 'its' → logprob: -2.8923513889312744
    3. 'worm' → logprob: -3.8923513889312744
    4. 'path' → logprob: -4.142351150512695
    5. ' worm' → logprob: -5.142351150512695
    6. 'the' → logprob: -5.267351150512695
    7. 'paths' → logprob: -5.517351150512695
    8. 'edges' → logprob: -5.642351150512695
    9. 'W' → logprob: -5.767351150512695
    10. ' the' → logprob: -6.017351150512695

Token 477: ' computations' (ID: 192859)
  Prédit: 'class'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'class' → logprob: -0.00021521867893170565
    2. ' class' → logprob: -8.500215530395508
    3. '
' → logprob: -11.875215530395508
    4. 'import' → logprob: -12.875215530395508
    5. '<|end|>' → logprob: -13.750215530395508
    6. '<class' → logprob: -14.750215530395508
    7. '"class' → logprob: -15.375215530395508
    8. 'from' → logprob: -15.875215530395508
    9. '	class' → logprob: -16.875215530395508
    10. '(class' → logprob: -17.000215530395508

Token 478: '
' (ID: 198)
  Prédit: 'class'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'class' → logprob: -0.0002969703928101808
    2. '
' → logprob: -8.250296592712402
    3. ' class' → logprob: -10.250296592712402
    4. ' 
' → logprob: -15.125296592712402
    5. '<class' → logprob: -16.75029754638672
    6. '  
' → logprob: -17.62529754638672
    7. '<|end|>' → logprob: -17.62529754638672
    8. 'import' → logprob: -18.12529754638672
    9. '"class' → logprob: -18.25029754638672
    10. '
' → logprob: -18.75029754638672

Token 479: 'class' (ID: 1444)
  Prédit: 'class'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'class' → logprob: -3.4121114822482923e-06
    2. ' class' → logprob: -12.625003814697266
    3. '
' → logprob: -17.125003814697266
    4. 'import' → logprob: -17.625003814697266
    5. '"class' → logprob: -19.250003814697266
    6. '<class' → logprob: -19.375003814697266
    7. '<|end|>' → logprob: -20.000003814697266
    8. '#' → logprob: -20.750003814697266
    9. 'from' → logprob: -20.750003814697266
    10. ' 
' → logprob: -21.250003814697266

Token 480: ' T' (ID: 353)
  Prédit: 'Regular'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Regular' → logprob: -0.4568882882595062
    2. 'T' → logprob: -1.2068883180618286
    3. ' Regular' → logprob: -3.081888198852539
    4. ' T' → logprob: -3.831888198852539
    5. 'Reg' → logprob: -10.581888198852539
    6. 'Tet' → logprob: -10.581888198852539
    7. ' regular' → logprob: -12.081888198852539
    8. ' tetra' → logprob: -12.706888198852539
    9. '_regular' → logprob: -12.956888198852539
    10. 'Simple' → logprob: -13.081888198852539

Token 481: 'etra' (ID: 72836)
  Prédit: 'etra'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'etra' → logprob: -0.0035910410806536674
    2. 'et' → logprob: -5.878591060638428
    3. 'Regular' → logprob: -8.00359058380127
    4. 'e' → logprob: -8.87859058380127
    5. 'riangle' → logprob: -9.50359058380127
    6. 'eth' → logprob: -10.50359058380127
    7. 'eta' → logprob: -10.81609058380127
    8. 'etr' → logprob: -11.12859058380127
    9. 'regular' → logprob: -11.25359058380127
    10. '_' → logprob: -11.75359058380127

Token 482: 'hedron' (ID: 144037)
  Prédit: 'hedron'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'hedron' → logprob: -0.00012844942102674395
    2. 'hed' → logprob: -9.000128746032715
    3. 'hedral' → logprob: -12.500128746032715
    4. 'a' → logprob: -14.750128746032715
    5. ' hed' → logprob: -14.750128746032715
    6. '```' → logprob: -16.2501277923584
    7. '   ' → logprob: -16.6251277923584
    8. 'he' → logprob: -17.1251277923584
    9. 'head' → logprob: -17.5001277923584
    10. 'ed' → logprob: -17.5001277923584

Token 483: 'Geometry' (ID: 30417)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.029211468994617462
    2. ':
' → logprob: -3.9042115211486816
    3. 'Geometry' → logprob: -4.904211521148682
    4. 'W' → logprob: -7.904211521148682
    5. '(W' → logprob: -8.029211044311523
    6. '(' → logprob: -8.279211044311523
    7. 'Path' → logprob: -8.529211044311523
    8. ':

' → logprob: -11.029211044311523
    9. ' :' → logprob: -11.029211044311523
    10. '():' → logprob: -11.404211044311523

Token 484: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.001617453875951469
    2. ':
' → logprob: -6.501617431640625
    3. '(W' → logprob: -10.001617431640625
    4. ' :' → logprob: -10.126617431640625
    5. ':

' → logprob: -11.126617431640625
    6. '(' → logprob: -11.376617431640625
    7. '):' → logprob: -13.876617431640625
    8. '():' → logprob: -14.001617431640625
    9. '   ' → logprob: -14.876617431640625
    10. '(Abstract' → logprob: -15.251617431640625

Token 485: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.6691128611564636
    2. '   ' → logprob: -0.7941128611564636
    3. ':
' → logprob: -3.4191129207611084
    4. '    
' → logprob: -6.419112682342529
    5. 'def' → logprob: -8.044113159179688
    6. ' def' → logprob: -8.169113159179688
    7. ' :' → logprob: -9.044113159179688
    8. ',' → logprob: -9.419113159179688
    9. '<|end|>' → logprob: -9.419113159179688
    10. ' :
' → logprob: -9.544113159179688

Token 486: ' def' (ID: 1056)
  Prédit: ' def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' def' → logprob: -0.23051106929779053
    2. 'def' (adapté à ' def') → logprob: -3.23051118850708
    3. '#' → logprob: -3.48051118850708
    4. ' V' → logprob: -3.48051118850708
    5. ' EDGE' → logprob: -3.48051118850708
    6. ' ED' → logprob: -3.60551118850708
    7. ' edges' → logprob: -4.35551118850708
    8. ' #' → logprob: -4.60551118850708
    9. ' vertices' → logprob: -4.98051118850708
    10. '   ' → logprob: -5.35551118850708

Token 487: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.021375522017478943
    2. '__' → logprob: -3.8963754177093506
    3. 'def' → logprob: -8.14637565612793
    4. ' def' → logprob: -8.52137565612793
    5. '_init' → logprob: -8.52137565612793
    6. ' _' → logprob: -9.77137565612793
    7. '_' → logprob: -9.77137565612793
    8. 'init' → logprob: -10.89637565612793
    9. ' ' → logprob: -12.77137565612793
    10. ' ___' → logprob: -13.64637565612793

Token 488: 'init' (ID: 3287)
  Prédit: 'init'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: 0.0
    2. 'in' → logprob: -17.625
    3. ' init' → logprob: -18.0
    4. 'inite' → logprob: -18.75
    5. 'ini' → logprob: -19.5
    6. '   ' → logprob: -19.5
    7. 'int' → logprob: -20.25
    8. 'nit' → logprob: -20.5
    9. 'innit' → logprob: -20.625
    10. '	init' → logprob: -21.125

Token 489: '__(' (ID: 8241)
  Prédit: '__('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.01836215890944004
    2. '(self' → logprob: -4.143362045288086
    3. '__(
' → logprob: -6.643362045288086
    4. '__' → logprob: -7.393362045288086
    5. '(' → logprob: -8.143362045288086
    6. ' (' → logprob: -9.768362045288086
    7. '_(' → logprob: -10.643362045288086
    8. 'self' → logprob: -11.143362045288086
    9. '_' → logprob: -11.893362045288086
    10. '   ' → logprob: -13.143362045288086

Token 490: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.02923046052455902
    2. ')' → logprob: -3.7792303562164307
    3. '):
' → logprob: -5.40423059463501
    4. '
' → logprob: -6.90423059463501
    5. ' self' → logprob: -8.654230117797852
    6. ')
' → logprob: -9.279230117797852
    7. '):

' → logprob: -9.529230117797852
    8. '):' → logprob: -10.279230117797852
    9. '(self' → logprob: -11.279230117797852
    10. ')(' → logprob: -11.404230117797852

Token 491: '):
' (ID: 1883)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.5062613487243652
    2. ',' → logprob: -1.5062613487243652
    3. '):
' → logprob: -2.5062613487243652
    4. '):' → logprob: -3.0062613487243652
    5. '(self' → logprob: -3.6312613487243652
    6. '__(' → logprob: -4.381261348724365
    7. '__' → logprob: -6.256261348724365
    8. ' self' → logprob: -6.881261348724365
    9. '__,' → logprob: -7.131261348724365
    10. '   ' → logprob: -8.006261825561523

Token 492: '       ' (ID: 309)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0240726787596941
    2. '   ' → logprob: -4.149072647094727
    3. ' self' → logprob: -5.149072647094727
    4. '       ' → logprob: -7.524072647094727
    5. ')' → logprob: -7.649072647094727
    6. ' ' → logprob: -8.024072647094727
    7. '):
' → logprob: -8.899072647094727
    8. '{
' → logprob: -9.024072647094727
    9. '0' → logprob: -9.149072647094727
    10. '{' → logprob: -9.274072647094727

Token 493: ' #' (ID: 1069)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.16735361516475677
    2. '#' (adapté à ' #') → logprob: -2.167353630065918
    3. ' self' → logprob: -3.542353630065918
    4. '       ' → logprob: -5.042353630065918
    5. ' #' → logprob: -5.792353630065918
    6. 'import' → logprob: -6.792353630065918
    7. '   ' → logprob: -10.792353630065918
    8. '
' → logprob: -12.792353630065918
    9. '	self' → logprob: -12.917353630065918
    10. ' import' → logprob: -13.042353630065918

Token 494: ' Define' (ID: 38966)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.14733736217021942
    2. '#' → logprob: -2.0223374366760254
    3. ' self' → logprob: -5.522337436676025
    4. ' #' → logprob: -8.397336959838867
    5. 'import' → logprob: -8.772336959838867
    6. 'edges' → logprob: -9.147336959838867
    7. 'vertices' → logprob: -9.897336959838867
    8. 'from' → logprob: -10.647336959838867
    9. '   ' → logprob: -10.897336959838867
    10. '       ' → logprob: -11.647336959838867

Token 495: ' vertices' (ID: 38360)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.1859009861946106
    2. ' self' → logprob: -1.8109009265899658
    3. '#' → logprob: -5.185901165008545
    4. ' vertices' → logprob: -8.310900688171387
    5. ' edges' → logprob: -9.185900688171387
    6. ' #' → logprob: -9.310900688171387
    7. 'vertices' → logprob: -9.935900688171387
    8. 'edges' → logprob: -10.935900688171387
    9. ' the' → logprob: -11.310900688171387
    10. 'the' → logprob: -12.185900688171387

Token 496: ' for' (ID: 395)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.02650580182671547
    2. ':' → logprob: -4.401505947113037
    3. '       ' → logprob: -5.276505947113037
    4. '=' → logprob: -5.526505947113037
    5. ' self' → logprob: -6.651505947113037
    6. '   ' → logprob: -6.776505947113037
    7. 'self' → logprob: -6.901505947113037
    8. '    ' → logprob: -8.276505470275879
    9. ' :' → logprob: -8.276505470275879
    10. '        
' → logprob: -8.276505470275879

Token 497: ' the' (ID: 290)
  Prédit: ' the'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' the' → logprob: -0.3995759189128876
    2. 'the' → logprob: -1.89957594871521
    3. ' self' → logprob: -2.14957594871521
    4. 'self' → logprob: -3.64957594871521
    5. ' Vertex' → logprob: -4.024575710296631
    6. 'Vertex' → logprob: -5.274575710296631
    7. ' math' → logprob: -6.024575710296631
    8. ' this' → logprob: -6.149575710296631
    9. '   ' → logprob: -6.649575710296631
    10. ' a' → logprob: -6.774575710296631

Token 498: ' regular' (ID: 6953)
  Prédit: ' regular'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' regular' → logprob: -1.1927670240402222
    2. 'tet' → logprob: -1.1927670240402222
    3. ' tetra' → logprob: -1.5677670240402222
    4. 'regular' → logprob: -2.4427671432495117
    5. ' unit' → logprob: -2.9427671432495117
    6. 'unit' → logprob: -4.067767143249512
    7. 'T' → logprob: -5.317767143249512
    8. ' four' → logprob: -5.317767143249512
    9. ' vertices' → logprob: -5.567767143249512
    10. ' coordinates' → logprob: -6.442767143249512

Token 499: ' tetra' (ID: 176775)
  Prédit: ' tetra'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' tetra' → logprob: -0.0036656332667917013
    2. 'tet' → logprob: -5.628665447235107
    3. ' ' → logprob: -11.003665924072266
    4. ' tet' → logprob: -11.128665924072266
    5. '   ' → logprob: -11.378665924072266
    6. ' T' → logprob: -12.378665924072266
    7. ' tetr' → logprob: -12.503665924072266
    8. '  ' → logprob: -13.253665924072266
    9. 't' → logprob: -13.378665924072266
    10. ' ' → logprob: -13.503665924072266

Token 500: 'hedron' (ID: 144037)
  Prédit: 'hedron'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'hedron' → logprob: -1.4736459888808895e-05
    2. 'hed' → logprob: -11.750014305114746
    3. 'ed' → logprob: -12.000014305114746
    4. '   ' → logprob: -15.625014305114746
    5. 'hedral' → logprob: -15.625014305114746
    6. ' hed' → logprob: -15.875014305114746
    7. 'he' → logprob: -16.375015258789062
    8. 'h' → logprob: -16.375015258789062
    9. 'her' → logprob: -17.625015258789062
    10. '#' → logprob: -17.750015258789062

Token 501: ' in' (ID: 306)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.9445419907569885
    2. '
' → logprob: -1.5695419311523438
    3. ' =' → logprob: -2.3195419311523438
    4. '        
' → logprob: -2.4445419311523438
    5. ' self' → logprob: -2.8195419311523438
    6. 'self' → logprob: -2.8195419311523438
    7. ':' → logprob: -3.5695419311523438
    8. '(self' → logprob: -4.194541931152344
    9. '<|end|>' → logprob: -4.319541931152344
    10. ',' → logprob: -4.694541931152344

Token 502: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.01565374806523323
    2. '3' → logprob: -4.765653610229492
    3. ' three' → logprob: -5.765653610229492
    4. ' math' → logprob: -6.140653610229492
    5. 'math' → logprob: -6.640653610229492
    6. ' R' → logprob: -8.640653610229492
    7. ' (' → logprob: -9.640653610229492
    8. ' self' → logprob: -10.265653610229492
    9. 'self' → logprob: -10.515653610229492
    10. 'R' → logprob: -10.765653610229492

Token 503: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.03159676119685173
    2. 'math' → logprob: -3.5315966606140137
    3. 'R' → logprob: -6.906596660614014
    4. ' ' → logprob: -7.781596660614014
    5. 'self' → logprob: -8.156597137451172
    6. 'three' → logprob: -10.031597137451172
    7. '(' → logprob: -11.156597137451172
    8. '[
' → logprob: -11.281597137451172
    9. '{
' → logprob: -11.281597137451172
    10. '4' → logprob: -12.156597137451172

Token 504: 'D' (ID: 35)
  Prédit: 'D'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'D' → logprob: -0.006809514947235584
    2. 'd' → logprob: -5.006809711456299
    3. '-space' → logprob: -9.38180923461914
    4. '-dimensional' → logprob: -12.38180923461914
    5. ' D' → logprob: -13.25680923461914
    6. 'space' → logprob: -13.38180923461914
    7. '-d' → logprob: -14.75680923461914
    8. ' ' → logprob: -14.88180923461914
    9. '-' → logprob: -15.13180923461914
    10. '```' → logprob: -15.25680923461914

Token 505: ' space' (ID: 4918)
  Prédit: ' space'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' space' → logprob: -0.266745924949646
    2. ' self' → logprob: -2.2667460441589355
    3. ' coordinates' → logprob: -3.0167460441589355
    4. 'self' → logprob: -3.3917460441589355
    5. 'space' → logprob: -3.6417460441589355
    6. ':' → logprob: -5.1417460441589355
    7. 'coordinates' → logprob: -5.6417460441589355
    8. '_space' → logprob: -6.1417460441589355
    9. ',' → logprob: -6.2667460441589355
    10. ' ' → logprob: -6.3917460441589355

Token 506: ',' (ID: 11)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.8706876635551453
    2. ':' → logprob: -1.37068772315979
    3. 'self' → logprob: -1.87068772315979
    4. ' self' → logprob: -3.12068772315979
    5. '
' → logprob: -3.24568772315979
    6. '        
' → logprob: -3.62068772315979
    7. '(self' → logprob: -4.370687484741211
    8. ',' → logprob: -4.495687484741211
    9. ':
' → logprob: -4.495687484741211
    10. '   ' → logprob: -4.745687484741211

Token 507: ' for' (ID: 395)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.5865178108215332
    2. ' self' → logprob: -0.8365178108215332
    3. '       ' → logprob: -4.836517810821533
    4. 'import' → logprob: -7.586517810821533
    5. '        ' → logprob: -7.836517810821533
    6. '        
' → logprob: -8.336517333984375
    7. '{
' → logprob: -8.711517333984375
    8. ')' → logprob: -8.836517333984375
    9. ' ' → logprob: -9.586517333984375
    10. ' with' → logprob: -9.586517333984375

Token 508: ' vector' (ID: 9727)
  Prédit: 'con'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'con' → logprob: -1.2103385925292969
    2. 'self' → logprob: -1.7103385925292969
    3. 'unit' → logprob: -1.8353385925292969
    4. 'reference' → logprob: -3.085338592529297
    5. 'math' → logprob: -3.085338592529297
    6. ' convenience' → logprob: -3.460338592529297
    7. 'equ' → logprob: -3.585338592529297
    8. 'example' → logprob: -3.835338592529297
    9. ' math' → logprob: -3.835338592529297
    10. ' now' → logprob: -3.835338592529297

Token 509: ' computations' (ID: 192859)
  Prédit: ' math'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' math' → logprob: -0.5634374022483826
    2. ' calculations' → logprob: -1.6884374618530273
    3. ' operations' → logprob: -2.0634374618530273
    4. ' positions' → logprob: -2.5634374618530273
    5. 's' → logprob: -4.063437461853027
    6. ' representation' → logprob: -5.313437461853027
    7. 'positions' → logprob: -5.563437461853027
    8. ' calculation' → logprob: -6.188437461853027
    9. 'math' → logprob: -6.438437461853027
    10. ' arithmetic' → logprob: -6.563437461853027

Token 510: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.8566232919692993
    2. 'self' → logprob: -1.4816232919692993
    3. ':' → logprob: -1.6066232919692993
    4. '
' → logprob: -2.9816231727600098
    5. ' self' → logprob: -2.9816231727600098
    6. ':
' → logprob: -4.35662317276001
    7. '        
' → logprob: -4.48162317276001
    8. '(self' → logprob: -5.10662317276001
    9. ',' → logprob: -5.48162317276001
    10. '   ' → logprob: -5.60662317276001

Token 511: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.005780308041721582
    2. 'self' → logprob: -6.255780220031738
    3. ' self' → logprob: -6.505780220031738
    4. '
' → logprob: -6.630780220031738
    5. '        
' → logprob: -7.255780220031738
    6. '{' → logprob: -10.005780220031738
    7. '(self' → logprob: -10.005780220031738
    8. 'A' → logprob: -10.130780220031738
    9. '[' → logprob: -10.755780220031738
    10. '        ' → logprob: -10.880780220031738

Token 512: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.185068279504776
    2. ' self' → logprob: -1.9350682497024536
    3. 'import' → logprob: -3.810068368911743
    4. '       ' → logprob: -6.310068130493164
    5. '{
' → logprob: -8.185068130493164
    6. ' import' → logprob: -8.685068130493164
    7. 'from' → logprob: -10.310068130493164
    8. '   ' → logprob: -10.435068130493164
    9. '
' → logprob: -11.185068130493164
    10. '{' → logprob: -11.560068130493164

Token 513: '.vertices' (ID: 47509)
  Prédit: '.vertices'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.vertices' → logprob: -0.034241098910570145
    2. '.A' → logprob: -3.534241199493408
    3. '.V' → logprob: -6.034241199493408
    4. '.' → logprob: -7.159241199493408
    5. '.v' → logprob: -7.909241199493408
    6. '._' → logprob: -8.28424072265625
    7. ' .' → logprob: -8.53424072265625
    8. 'vertices' → logprob: -8.90924072265625
    9. '.positions' → logprob: -9.28424072265625
    10. '.points' → logprob: -9.78424072265625

Token 514: '_' (ID: 62)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.043046459555625916
    2. '=' → logprob: -3.168046474456787
    3. ':' → logprob: -10.043045997619629
    4. ' ' → logprob: -13.418045997619629
    5. '   ' → logprob: -14.543045997619629
    6. ')' → logprob: -15.168045997619629
    7. '={
' → logprob: -15.168045997619629
    8. ' =
' → logprob: -15.668045997619629
    9. ' ={' → logprob: -15.793045997619629
    10. '={'' → logprob: -15.918045997619629

Token 515: '3' (ID: 18)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.03679417073726654
    2. '=' → logprob: -3.4117941856384277
    3. '3' → logprob: -5.911794185638428
    4. ':' → logprob: -7.911794185638428
    5. ' ' → logprob: -10.16179370880127
    6. '_' → logprob: -10.91179370880127
    7. '_coords' → logprob: -12.91179370880127
    8. 's' → logprob: -13.16179370880127
    9. '_positions' → logprob: -13.78679370880127
    10. 'positions' → logprob: -14.03679370880127

Token 516: 'd' (ID: 67)
  Prédit: 'd'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.004346806090325117
    2. ' =' → logprob: -5.62934684753418
    3. 'D' → logprob: -7.25434684753418
    4. '=' → logprob: -10.25434684753418
    5. '3' → logprob: -12.87934684753418
    6. 'f' → logprob: -14.62934684753418
    7. '   ' → logprob: -15.00434684753418
    8. ':' → logprob: -16.12934684753418
    9. 'de' → logprob: -16.37934684753418
    10. 'dim' → logprob: -16.50434684753418

Token 517: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.029781503602862358
    2. '=' → logprob: -3.5297815799713135
    3. ':' → logprob: -10.404781341552734
    4. ' ' → logprob: -14.779781341552734
    5. '   ' → logprob: -15.279781341552734
    6. ' :' → logprob: -16.779781341552734
    7. '  ' → logprob: -18.029781341552734
    8. '={'' → logprob: -18.279781341552734
    9. ' ={' → logprob: -18.279781341552734
    10. ')' → logprob: -18.529781341552734

Token 518: ' {
' (ID: 405)
  Prédit: '{
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '{
' → logprob: -0.02338966354727745
    2. '{' → logprob: -3.7733895778656006
    3. ' {
' → logprob: -8.89838981628418
    4. ' {' → logprob: -12.14838981628418
    5. '{
' → logprob: -13.64838981628418
    6. '{

' → logprob: -14.39838981628418
    7. '{'' → logprob: -14.89838981628418
    8. '   ' → logprob: -17.27338981628418
    9. ' ' → logprob: -17.64838981628418
    10. '{\' → logprob: -17.89838981628418

Token 519: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.04283794388175011
    2. ' Vertex' → logprob: -3.5428378582000732
    3. 'Vertex' → logprob: -4.917838096618652
    4. '   ' → logprob: -6.042838096618652
    5. ''' → logprob: -6.417838096618652
    6. '       ' → logprob: -6.917838096618652
    7. ' '' → logprob: -7.542838096618652
    8. '(Vertex' → logprob: -9.542838096618652
    9. ' ' → logprob: -10.667838096618652
    10. '<Vertex' → logprob: -11.542838096618652

Token 520: ' Vertex' (ID: 49245)
  Prédit: 'Vertex'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Vertex' (adapté à ' Vertex') → logprob: -0.002271700883284211
    2. ' Vertex' → logprob: -6.50227165222168
    3. '           ' → logprob: -7.50227165222168
    4. ''' → logprob: -8.75227165222168
    5. '   ' → logprob: -10.25227165222168
    6. '(Vertex' → logprob: -11.12727165222168
    7. '       ' → logprob: -13.00227165222168
    8. ' '' → logprob: -13.75227165222168
    9. ''A' → logprob: -13.75227165222168
    10. '<Vertex' → logprob: -14.00227165222168

Token 521: '.A' (ID: 1336)
  Prédit: '.A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.A' → logprob: -0.016644665971398354
    2. 'A' → logprob: -4.266644477844238
    3. '.' → logprob: -6.391644477844238
    4. '   ' → logprob: -7.766644477844238
    5. ' .' → logprob: -8.891644477844238
    6. ''.' → logprob: -9.016644477844238
    7. ' ' → logprob: -11.016644477844238
    8. ''A' → logprob: -11.016644477844238
    9. '       ' → logprob: -11.266644477844238
    10. '	A' → logprob: -11.641644477844238

Token 522: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0013302408624440432
    2. ' :' → logprob: -6.626330375671387
    3. '   ' → logprob: -13.376330375671387
    4. ':(' → logprob: -13.751330375671387
    5. ' :(' → logprob: -14.126330375671387
    6. '    ' → logprob: -14.626330375671387
    7. ' =' → logprob: -16.25132942199707
    8. '=' → logprob: -16.50132942199707
    9. '       ' → logprob: -16.75132942199707
    10. ',' → logprob: -17.12632942199707

Token 523: ' (' (ID: 350)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.3870805501937866
    2. ' (' → logprob: -1.1370805501937866
    3. ' ' → logprob: -9.012080192565918
    4. '   ' → logprob: -10.637080192565918
    5. '(math' → logprob: -11.137080192565918
    6. '[' → logprob: -11.262080192565918
    7. ' [' → logprob: -11.387080192565918
    8. 'math' → logprob: -11.637080192565918
    9. ' math' → logprob: -11.762080192565918
    10. '  ' → logprob: -12.637080192565918

Token 524: '1' (ID: 16)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0023371162824332714
    2. '1' → logprob: -6.7523369789123535
    3. ' ' → logprob: -6.8773369789123535
    4. 'math' → logprob: -9.502337455749512
    5. '(' → logprob: -10.252337455749512
    6. ' math' → logprob: -10.752337455749512
    7. ' (' → logprob: -13.002337455749512
    8. '   ' → logprob: -13.877337455749512
    9. '(math' → logprob: -15.252337455749512
    10. 'Math' → logprob: -15.752337455749512

Token 525: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.03464362397789955
    2. '.' → logprob: -3.4096436500549316
    3. ' ,' → logprob: -7.034643650054932
    4. '.,' → logprob: -10.409643173217773
    5. ' ' → logprob: -10.909643173217773
    6. ' /' → logprob: -11.034643173217773
    7. '0' → logprob: -11.159643173217773
    8. '   ' → logprob: -11.784643173217773
    9. '  ' → logprob: -12.159643173217773
    10. '/math' → logprob: -12.159643173217773

Token 526: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.35071155428886414
    2. ' ' → logprob: -1.2257115840911865
    3. '0' → logprob: -6.100711345672607
    4. ' math' → logprob: -11.475711822509766
    5. ' -' → logprob: -12.350711822509766
    6. '-' → logprob: -12.600711822509766
    7. 'math' → logprob: -13.413211822509766
    8. '   ' → logprob: -14.225711822509766
    9. '  ' → logprob: -14.475711822509766
    10. '```' → logprob: -14.975711822509766

Token 527: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0022172266617417336
    2. '0' → logprob: -6.1272172927856445
    3. ' ' → logprob: -10.377217292785645
    4. '   ' → logprob: -15.252217292785645
    5. '-' → logprob: -15.377217292785645
    6. 'math' → logprob: -15.627217292785645
    7. '(' → logprob: -16.689716339111328
    8. ' math' → logprob: -16.814716339111328
    9. 'sqrt' → logprob: -16.877216339111328
    10. '  ' → logprob: -16.877216339111328

Token 528: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00039170795935206115
    2. '1' → logprob: -8.250391960144043
    3. ' ,' → logprob: -9.000391960144043
    4. ')' → logprob: -12.500391960144043
    5. '),' → logprob: -13.750391960144043
    6. ' ' → logprob: -14.250391960144043
    7. '2' → logprob: -14.375391960144043
    8. ',
' → logprob: -14.625391960144043
    9. '0' → logprob: -16.125391006469727
    10. 'import' → logprob: -16.250391006469727

Token 529: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.000158842682139948
    2. ' ' → logprob: -8.75015926361084
    3. '-' → logprob: -15.37515926361084
    4. '   ' → logprob: -16.125158309936523
    5. '  ' → logprob: -18.125158309936523
    6. '```' → logprob: -18.125158309936523
    7. ' -' → logprob: -18.500158309936523
    8. '0' → logprob: -19.062658309936523
    9. '(' → logprob: -19.187658309936523
    10. ')' → logprob: -20.000158309936523

Token 530: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.1008713702030946e-06
    2. '-' → logprob: -13.375001907348633
    3. ' ' → logprob: -14.500001907348633
    4. '   ' → logprob: -19.000001907348633
    5. '```' → logprob: -19.375001907348633
    6. '(' → logprob: -20.500001907348633
    7. ' -' → logprob: -20.500001907348633
    8. '0' → logprob: -20.812501907348633
    9. '  ' → logprob: -20.937501907348633
    10. '

' → logprob: -20.937501907348633

Token 531: '),
' (ID: 2313)
  Prédit: '),
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),
' → logprob: -0.08123809844255447
    2. '),' → logprob: -2.581238031387329
    3. ')' → logprob: -6.081238269805908
    4. '),

' → logprob: -10.33123779296875
    5. '),
' → logprob: -10.95623779296875
    6. ' ),
' → logprob: -12.58123779296875
    7. '   ' → logprob: -13.08123779296875
    8. '       ' → logprob: -13.20623779296875
    9. ')
' → logprob: -13.95623779296875
    10. '           ' → logprob: -14.20623779296875

Token 532: '           ' (ID: 352)
  Prédit: ' Vertex'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Vertex' → logprob: -0.5688841938972473
    2. '           ' → logprob: -1.3188841342926025
    3. '            ' → logprob: -2.3188841342926025
    4. 'Vertex' → logprob: -2.6938841342926025
    5. '          ' → logprob: -8.193883895874023
    6. '(Vertex' → logprob: -10.318883895874023
    7. '               ' → logprob: -10.943883895874023
    8. ' ' → logprob: -10.943883895874023
    9. '    ' → logprob: -11.068883895874023
    10. '        ' → logprob: -11.693883895874023

Token 533: ' Vertex' (ID: 49245)
  Prédit: 'Vertex'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Vertex' (adapté à ' Vertex') → logprob: -0.057290833443403244
    2. ' Vertex' → logprob: -2.93229079246521
    3. '           ' → logprob: -6.057291030883789
    4. '            ' → logprob: -10.432291030883789
    5. '          ' → logprob: -11.432291030883789
    6. '   ' → logprob: -11.932291030883789
    7. '(Vertex' → logprob: -12.682291030883789
    8. ' ' → logprob: -12.682291030883789
    9. '  ' → logprob: -13.057291030883789
    10. '    ' → logprob: -13.182291030883789

Token 534: '.B' (ID: 2611)
  Prédit: '.B'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.B' → logprob: -0.0017814489547163248
    2. '.' → logprob: -6.501781463623047
    3. 'B' → logprob: -8.251781463623047
    4. '   ' → logprob: -12.501781463623047
    5. ' B' → logprob: -12.501781463623047
    6. ' .' → logprob: -12.501781463623047
    7. '.A' → logprob: -12.751781463623047
    8. '.C' → logprob: -13.751781463623047
    9. '	B' → logprob: -14.126781463623047
    10. '.D' → logprob: -14.376781463623047

Token 535: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0006637069745920599
    2. ' :' → logprob: -7.375663757324219
    3. ')' → logprob: -12.000663757324219
    4. '):' → logprob: -12.125663757324219
    5. '(' → logprob: -12.250663757324219
    6. '   ' → logprob: -12.250663757324219
    7. ':(' → logprob: -12.250663757324219
    8. '           ' → logprob: -12.875663757324219
    9. ' :(' → logprob: -12.875663757324219
    10. '=' → logprob: -13.125663757324219

Token 536: ' (' (ID: 350)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.16225913166999817
    2. '(-' → logprob: -1.9122591018676758
    3. ' (' → logprob: -6.412259101867676
    4. ' (-' → logprob: -8.537259101867676
    5. '1' → logprob: -9.412259101867676
    6. '-' → logprob: -9.412259101867676
    7. ' ' → logprob: -10.662259101867676
    8. '(
' → logprob: -12.037259101867676
    9. ' -' → logprob: -13.912259101867676
    10. '   ' → logprob: -14.162259101867676

Token 537: '1' (ID: 16)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.18016494810581207
    2. '1' → logprob: -1.8051649332046509
    3. ' -' → logprob: -8.05516529083252
    4. ' ' → logprob: -9.43016529083252
    5. '(-' → logprob: -11.80516529083252
    6. '−' → logprob: -12.18016529083252
    7. '(' → logprob: -13.05516529083252
    8. '```' → logprob: -13.61766529083252
    9. ')' → logprob: -13.68016529083252
    10. '   ' → logprob: -14.11766529083252

Token 538: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0008236800786107779
    2. ' ,' → logprob: -7.500823497772217
    3. ',-' → logprob: -8.250823974609375
    4. ',
' → logprob: -12.000823974609375
    5. '-' → logprob: -13.875823974609375
    6. '   ' → logprob: -14.125823974609375
    7. ' ,-' → logprob: -14.250823974609375
    8. '  ' → logprob: -15.000823974609375
    9. ' -' → logprob: -15.375823974609375
    10. '1' → logprob: -15.750823974609375

Token 539: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.0010931886499747634
    2. ' -' → logprob: -7.25109338760376
    3. '1' → logprob: -7.87609338760376
    4. ' ' → logprob: -13.251092910766602
    5. '−' → logprob: -13.876092910766602
    6. '(' → logprob: -15.626092910766602
    7. '–' → logprob: -16.2510929107666
    8. '-​' → logprob: -16.4385929107666
    9. '(-' → logprob: -16.5010929107666
    10. '‑' → logprob: -16.5635929107666

Token 540: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.5597102396423e-05
    2. ' ' → logprob: -10.250035285949707
    3. '<|end|>' → logprob: -16.875036239624023
    4. '<|end|>' → logprob: -18.125036239624023
    5. '  ' → logprob: -18.312536239624023
    6. '   ' → logprob: -18.562536239624023
    7. '
' → logprob: -18.750036239624023
    8. '-' → logprob: -18.812536239624023
    9. '```' → logprob: -18.812536239624023
    10. '１' → logprob: -19.187536239624023

Token 541: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0009238460334017873
    2. ' ,' → logprob: -7.0009236335754395
    3. ',
' → logprob: -11.750924110412598
    4. '1' → logprob: -12.625924110412598
    5. '),' → logprob: -14.875924110412598
    6. ')' → logprob: -15.125924110412598
    7. '<|end|>' → logprob: -15.125924110412598
    8. ' ,
' → logprob: -16.12592315673828
    9. '```' → logprob: -16.75092315673828
    10. ' ' → logprob: -16.87592315673828

Token 542: ' -' (ID: 533)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.003245800966396928
    2. ' ' → logprob: -5.878245830535889
    3. '-' → logprob: -7.753245830535889
    4. ' -' → logprob: -11.37824535369873
    5. '```' → logprob: -16.378246307373047
    6. ' ' → logprob: -17.253246307373047
    7. '  ' → logprob: -17.565746307373047
    8. ')' → logprob: -17.878246307373047
    9. '<|end|>' → logprob: -17.940746307373047
    10. '
' → logprob: -18.253246307373047

Token 543: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.45848218582978e-06
    2. ' ' → logprob: -13.12500286102295
    3. '<|end|>' → logprob: -15.37500286102295
    4. '<|end|>' → logprob: -16.500001907348633
    5. ')' → logprob: -17.312501907348633
    6. '-' → logprob: -17.750001907348633
    7. '...' → logprob: -18.375001907348633
    8. '```' → logprob: -18.375001907348633
    9. '(' → logprob: -18.500001907348633
    10. '۱' → logprob: -18.812501907348633

Token 544: '),
' (ID: 2313)
  Prédit: '),'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),' → logprob: -0.5831517577171326
    2. '),
' → logprob: -0.8331517577171326
    3. ')' → logprob: -4.958151817321777
    4. '),

' → logprob: -9.583151817321777
    5. '),
' → logprob: -9.958151817321777
    6. '           ' → logprob: -10.833151817321777
    7. '       ' → logprob: -11.958151817321777
    8. '   ' → logprob: -11.958151817321777
    9. ' ),
' → logprob: -12.333151817321777
    10. ' ),' → logprob: -12.833151817321777

Token 545: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0012224898673593998
    2. ' Vertex' → logprob: -7.126222610473633
    3. 'Vertex' → logprob: -8.001222610473633
    4. '            ' → logprob: -10.251222610473633
    5. '   ' → logprob: -10.626222610473633
    6. '          ' → logprob: -11.126222610473633
    7. ' ' → logprob: -13.251222610473633
    8. '       ' → logprob: -13.376222610473633
    9. ' ' → logprob: -14.001222610473633
    10. '         ' → logprob: -14.126222610473633

Token 546: ' Vertex' (ID: 49245)
  Prédit: 'Vertex'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Vertex' (adapté à ' Vertex') → logprob: -0.061149198561906815
    2. ' Vertex' → logprob: -2.9361491203308105
    3. '           ' → logprob: -5.1861491203308105
    4. '            ' → logprob: -8.936149597167969
    5. '               ' → logprob: -8.936149597167969
    6. '             ' → logprob: -9.436149597167969
    7. '          ' → logprob: -9.561149597167969
    8. '   ' → logprob: -9.561149597167969
    9. ' ' → logprob: -10.186149597167969
    10. '              ' → logprob: -10.561149597167969

Token 547: '.C' (ID: 2010)
  Prédit: '.C'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.C' → logprob: -0.0019295861711725593
    2. 'C' → logprob: -7.001929759979248
    3. ':' → logprob: -7.251929759979248
    4. '.' → logprob: -8.50192928314209
    5. '.B' → logprob: -9.75192928314209
    6. '.A' → logprob: -11.00192928314209
    7. ' C' → logprob: -11.75192928314209
    8. ' .' → logprob: -12.50192928314209
    9. '   ' → logprob: -12.87692928314209
    10. '           ' → logprob: -13.00192928314209

Token 548: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.00035918003413826227
    2. '=' → logprob: -8.625359535217285
    3. ' :' → logprob: -9.375359535217285
    4. '           ' → logprob: -10.375359535217285
    5. '(' → logprob: -10.625359535217285
    6. ' =' → logprob: -11.375359535217285
    7. ' (' → logprob: -11.875359535217285
    8. '=(' → logprob: -11.875359535217285
    9. ':(' → logprob: -12.250359535217285
    10. ' :(' → logprob: -13.125359535217285

Token 549: ' (-' (ID: 21382)
  Prédit: '(-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(-' → logprob: -0.00042328593553975224
    2. ' (-' → logprob: -8.250423431396484
    3. '(' → logprob: -8.750423431396484
    4. '-' → logprob: -12.875423431396484
    5. '(
' → logprob: -14.375423431396484
    6. '   ' → logprob: -16.000423431396484
    7. '((-' → logprob: -16.375423431396484
    8. ' (' → logprob: -17.125423431396484
    9. '[-' → logprob: -17.500423431396484
    10. '
' → logprob: -17.625423431396484

Token 550: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.7697225252486533e-06
    2. ' ' → logprob: -12.500003814697266
    3. '
' → logprob: -17.250003814697266
    4. '   ' → logprob: -17.500003814697266
    5. '-' → logprob: -18.875003814697266
    6. '

' → logprob: -19.062503814697266
    7. '  ' → logprob: -19.125003814697266
    8. '１' → logprob: -19.125003814697266
    9. '(' → logprob: -19.187503814697266
    10. '```' → logprob: -19.500003814697266

Token 551: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0015104549238458276
    2. ' ,' → logprob: -6.5015106201171875
    3. '1' → logprob: -12.126510620117188
    4. ',
' → logprob: -13.126510620117188
    5. '<|end|>' → logprob: -14.501510620117188
    6. '           ' → logprob: -16.251510620117188
    7. ' ' → logprob: -16.376510620117188
    8. ' ,
' → logprob: -16.876510620117188
    9. ')' → logprob: -17.501510620117188
    10. '```' → logprob: -18.251510620117188

Token 552: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.003743429435417056
    2. ' ' → logprob: -5.628743648529053
    3. '-' → logprob: -8.878743171691895
    4. ' -' → logprob: -12.503743171691895
    5. '```' → logprob: -15.878743171691895
    6. '+' → logprob: -16.87874412536621
    7. ',' → logprob: -17.44124412536621
    8. '<|end|>' → logprob: -17.50374412536621
    9. ')' → logprob: -18.12874412536621
    10. '
' → logprob: -18.19124412536621

Token 553: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.988221684878226e-06
    2. ' ' → logprob: -12.250006675720215
    3. '-' → logprob: -13.125006675720215
    4. ',' → logprob: -16.75000762939453
    5. ' -' → logprob: -17.00000762939453
    6. '
' → logprob: -17.87500762939453
    7. '```' → logprob: -19.50000762939453
    8. '(' → logprob: -19.75000762939453
    9. '+' → logprob: -20.12500762939453
    10. '

' → logprob: -20.62500762939453

Token 554: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00019007037917617708
    2. ' ,' → logprob: -8.625189781188965
    3. ',-' → logprob: -12.250189781188965
    4. ',
' → logprob: -12.375189781188965
    5. '<|end|>' → logprob: -14.125189781188965
    6. ')' → logprob: -15.375189781188965
    7. '-' → logprob: -16.25019073486328
    8. ' ' → logprob: -16.50019073486328
    9. '),' → logprob: -16.50019073486328
    10. ',

' → logprob: -16.75019073486328

Token 555: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.0005536287208087742
    2. ' -' → logprob: -7.500553607940674
    3. '1' → logprob: -14.375554084777832
    4. ' ' → logprob: -18.125553131103516
    5. ',-' → logprob: -18.500553131103516
    6. ',' → logprob: -18.500553131103516
    7. '-
' → logprob: -18.875553131103516
    8. '```' → logprob: -19.250553131103516
    9. '−' → logprob: -19.500553131103516
    10. '
' → logprob: -19.500553131103516

Token 556: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.704273118884885e-07
    2. '-' → logprob: -14.375000953674316
    3. ' ' → logprob: -16.875
    4. '```' → logprob: -19.5
    5. ' -' → logprob: -19.75
    6. '(' → logprob: -20.125
    7. '۱' → logprob: -21.0
    8. '<|end|>' → logprob: -21.0625
    9. '<|end|>' → logprob: -21.125
    10. ',' → logprob: -21.875

Token 557: '),
' (ID: 2313)
  Prédit: '),
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),
' → logprob: -0.016861530020833015
    2. '),' → logprob: -4.141861438751221
    3. '           ' → logprob: -7.266861438751221
    4. ')' → logprob: -10.141861915588379
    5. '       ' → logprob: -10.266861915588379
    6. ' ),
' → logprob: -11.016861915588379
    7. '),
' → logprob: -11.391861915588379
    8. '),

' → logprob: -11.516861915588379
    9. '   ' → logprob: -11.641861915588379
    10. '          ' → logprob: -12.891861915588379

Token 558: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00011391390580683947
    2. '          ' → logprob: -9.750113487243652
    3. ' Vertex' → logprob: -10.625113487243652
    4. '   ' → logprob: -11.000113487243652
    5. 'Vertex' → logprob: -11.750113487243652
    6. '            ' → logprob: -12.750113487243652
    7. ' ' → logprob: -13.375113487243652
    8. '         ' → logprob: -14.000113487243652
    9. '  ' → logprob: -14.875113487243652
    10. '(-' → logprob: -15.500113487243652

Token 559: ' Vertex' (ID: 49245)
  Prédit: ' Vertex'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Vertex' → logprob: -0.7738897800445557
    2. 'Vertex' (adapté à ' Vertex') → logprob: -1.0238897800445557
    3. '           ' → logprob: -2.1488897800445557
    4. ' (-' → logprob: -3.0238897800445557
    5. '(-' → logprob: -4.648889541625977
    6. '            ' → logprob: -7.023889541625977
    7. '   ' → logprob: -7.148889541625977
    8. ' ' → logprob: -7.523889541625977
    9. '(Vertex' → logprob: -7.648889541625977
    10. '          ' → logprob: -7.773889541625977

Token 560: '.D' (ID: 1696)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.025374535471200943
    2. 'C' → logprob: -4.025374412536621
    3. '.C' → logprob: -5.025374412536621
    4. '   ' → logprob: -8.650374412536621
    5. ' ' → logprob: -9.150374412536621
    6. ' C' → logprob: -10.150374412536621
    7. ' :' → logprob: -10.150374412536621
    8. '.' → logprob: -10.275374412536621
    9. 'D' → logprob: -10.525374412536621
    10. '  ' → logprob: -10.525374412536621

Token 561: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0001884015218820423
    2. ' :' → logprob: -9.625188827514648
    3. '=' → logprob: -9.750188827514648
    4. '):' → logprob: -10.125188827514648
    5. ' =' → logprob: -12.000188827514648
    6. ')' → logprob: -12.000188827514648
    7. '=(-' → logprob: -12.375188827514648
    8. ':(' → logprob: -12.875188827514648
    9. '           ' → logprob: -14.000188827514648
    10. '   ' → logprob: -14.125188827514648

Token 562: ' (-' (ID: 21382)
  Prédit: '(-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(-' → logprob: -0.018656115978956223
    2. ' (-' → logprob: -4.018656253814697
    3. '-' → logprob: -8.143655776977539
    4. '(' → logprob: -8.643655776977539
    5. ' -' → logprob: -11.018655776977539
    6. '           ' → logprob: -11.768655776977539
    7. '(
' → logprob: -12.143655776977539
    8. '   ' → logprob: -12.893655776977539
    9. ' (' → logprob: -13.018655776977539
    10. '       ' → logprob: -14.143655776977539

Token 563: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.320199877838604e-07
    2. ' ' → logprob: -16.25
    3. '-' → logprob: -16.375
    4. '(' → logprob: -16.875
    5. '```' → logprob: -16.875
    6. '   ' → logprob: -17.5625
    7. '
' → logprob: -17.5625
    8. '

' → logprob: -18.0
    9. ' -' → logprob: -18.5625
    10. '0' → logprob: -18.75

Token 564: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0002821928064804524
    2. ' ,' → logprob: -8.250282287597656
    3. '1' → logprob: -11.250282287597656
    4. ',
' → logprob: -12.125282287597656
    5. ',-' → logprob: -13.375282287597656
    6. '   ' → logprob: -14.875282287597656
    7. '           ' → logprob: -15.625282287597656
    8. '<|end|>' → logprob: -16.000282287597656
    9. '```' → logprob: -16.625282287597656
    10. '-' → logprob: -17.125282287597656

Token 565: ' -' (ID: 533)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0001652796781854704
    2. '-' → logprob: -9.125164985656738
    3. ' ' → logprob: -9.875164985656738
    4. ' -' → logprob: -12.250164985656738
    5. '   ' → logprob: -17.125165939331055
    6. '
' → logprob: -17.500165939331055
    7. '```' → logprob: -18.125165939331055
    8. '[' → logprob: -18.812665939331055
    9. ',' → logprob: -19.000165939331055
    10. '  ' → logprob: -19.062665939331055

Token 566: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.8624639324116288e-06
    2. ' ' → logprob: -13.250001907348633
    3. ',' → logprob: -18.000001907348633
    4. '   ' → logprob: -19.000001907348633
    5. '```' → logprob: -19.375001907348633
    6. '-' → logprob: -20.000001907348633
    7. '<|end|>' → logprob: -20.125001907348633
    8. '           ' → logprob: -20.437501907348633
    9. '[' → logprob: -20.562501907348633
    10. '...' → logprob: -20.812501907348633

Token 567: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00021748353901784867
    2. ' ,' → logprob: -8.50021743774414
    3. '1' → logprob: -11.37521743774414
    4. ',
' → logprob: -13.75021743774414
    5. '           ' → logprob: -14.37521743774414
    6. ',-' → logprob: -15.50021743774414
    7. '```' → logprob: -15.75021743774414
    8. '-' → logprob: -16.00021743774414
    9. ' ' → logprob: -16.62521743774414
    10. '<|end|>' → logprob: -16.75021743774414

Token 568: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.011047814972698689
    2. ' ' → logprob: -4.511047840118408
    3. '   ' → logprob: -17.26104736328125
    4. ')' → logprob: -18.01104736328125
    5. '  ' → logprob: -18.63604736328125
    6. '+' → logprob: -19.26104736328125
    7. '```' → logprob: -19.26104736328125
    8. '           ' → logprob: -19.51104736328125
    9. '-' → logprob: -19.51104736328125
    10. ' ' → logprob: -19.76104736328125

Token 569: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.157039049663581e-05
    2. ' ' → logprob: -9.875051498413086
    3. ')' → logprob: -18.625051498413086
    4. '
' → logprob: -19.375051498413086
    5. '   ' → logprob: -19.875051498413086
    6. '+' → logprob: -20.125051498413086
    7. '-' → logprob: -20.125051498413086
    8. '```' → logprob: -20.375051498413086
    9. ',' → logprob: -21.625051498413086
    10. '{
' → logprob: -21.875051498413086

Token 570: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.03025822527706623
    2. '),' → logprob: -4.5302581787109375
    3. '),
' → logprob: -4.6552581787109375
    4. ')
' → logprob: -4.7802581787109375
    5. '       ' → logprob: -7.5302581787109375
    6. ')}' → logprob: -7.9052581787109375
    7. '   ' → logprob: -8.905258178710938
    8. ' )' → logprob: -10.030258178710938
    9. '           ' → logprob: -11.280258178710938
    10. ')}
' → logprob: -12.155258178710938

Token 571: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.16643787920475006
    2. '}' → logprob: -1.9164378643035889
    3. '   ' → logprob: -5.166438102722168
    4. ' }' → logprob: -8.541438102722168
    5. ')' → logprob: -8.916438102722168
    6. ',' → logprob: -9.416438102722168
    7. ',
' → logprob: -9.666438102722168
    8. '}
' → logprob: -11.541438102722168
    9. '	' → logprob: -13.166438102722168
    10. '<|end|>' → logprob: -13.416438102722168

Token 572: ' }
' (ID: 606)
  Prédit: '}'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '}' → logprob: -0.3047883212566376
    2. '   ' → logprob: -1.42978835105896
    3. '       ' → logprob: -3.80478835105896
    4. ' }' → logprob: -6.929788112640381
    5. ')' → logprob: -10.054788589477539
    6. '}
' (adapté à ' }
') → logprob: -10.429788589477539
    7. ',' → logprob: -10.929788589477539
    8. '	' → logprob: -11.179788589477539
    9. ' ' → logprob: -12.929788589477539
    10. '<|end|>' → logprob: -12.929788589477539

Token 573: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5971607565879822
    2. '
' → logprob: -0.9721607565879822
    3. '   ' → logprob: -2.847160816192627
    4. '<|end|>' → logprob: -4.597160816192627
    5. 'def' → logprob: -7.097160816192627
    6. ')' → logprob: -7.472160816192627
    7. 'self' → logprob: -7.722160816192627
    8. '    
' → logprob: -7.847160816192627
    9. '        
' → logprob: -8.222160339355469
    10. ' ' → logprob: -8.972160339355469

Token 574: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.6602518558502197
    2. '#' → logprob: -0.7852518558502197
    3. '       ' → logprob: -3.9102518558502197
    4. ' self' → logprob: -5.410251617431641
    5. ')' → logprob: -7.035251617431641
    6. ' #' → logprob: -7.160251617431641
    7. '   ' → logprob: -7.785251617431641
    8. 'import' → logprob: -8.16025161743164
    9. 'def' → logprob: -9.03525161743164
    10. '
' → logprob: -9.28525161743164

Token 575: '.edges' (ID: 102481)
  Prédit: '.edges'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.edges' → logprob: -0.04206182807683945
    2. '.faces' → logprob: -3.5420618057250977
    3. '.vertices' → logprob: -5.042061805725098
    4. '.' → logprob: -5.917061805725098
    5. '._' → logprob: -7.042061805725098
    6. '.edge' → logprob: -7.167061805725098
    7. ' .' → logprob: -7.667061805725098
    8. 'edges' → logprob: -7.792061805725098
    9. '_edges' → logprob: -9.292061805725098
    10. '.face' → logprob: -9.292061805725098

Token 576: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.026557346805930138
    2. '=' → logprob: -3.651557445526123
    3. ':' → logprob: -8.276556968688965
    4. 's' → logprob: -14.026556968688965
    5. ' ' → logprob: -14.151556968688965
    6. ')' → logprob: -15.526556968688965
    7. ',' → logprob: -15.526556968688965
    8. ']' → logprob: -15.651556968688965
    9. ' :' → logprob: -15.651556968688965
    10. '[' → logprob: -17.21405792236328

Token 577: ' set' (ID: 920)
  Prédit: '{
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '{
' → logprob: -0.04636514186859131
    2. '{' → logprob: -3.296365261077881
    3. ' {
' → logprob: -5.171365261077881
    4. '[
' → logprob: -6.296365261077881
    5. '[' → logprob: -7.921365261077881
    6. ' {' → logprob: -8.296364784240723
    7. 'set' → logprob: -9.046364784240723
    8. '{
' → logprob: -10.796364784240723
    9. ' [
' → logprob: -11.671364784240723
    10. '{

' → logprob: -12.671364784240723

Token 578: '([
' (ID: 18206)
  Prédit: '([
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '([
' → logprob: -0.3256600499153137
    2. '([' → logprob: -1.325659990310669
    3. '({
' → logprob: -5.075660228729248
    4. '({' → logprob: -5.325660228729248
    5. '(' → logprob: -6.950660228729248
    6. '()' → logprob: -9.20065975189209
    7. '{' → logprob: -9.32565975189209
    8. '{
' → logprob: -10.07565975189209
    9. '[' → logprob: -12.07565975189209
    10. '(
' → logprob: -12.45065975189209

Token 579: '           ' (ID: 352)
  Prédit: 'Edge'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Edge' → logprob: -0.07528123259544373
    2. '           ' → logprob: -2.9502811431884766
    3. ' Edge' → logprob: -3.9502811431884766
    4. '       ' → logprob: -7.075281143188477
    5. '   ' → logprob: -9.450281143188477
    6. ' ' → logprob: -12.325281143188477
    7. '<Edge' → logprob: -12.325281143188477
    8. 'Edges' → logprob: -13.075281143188477
    9. '.Edge' → logprob: -13.575281143188477
    10. '         ' → logprob: -13.700281143188477

Token 580: ' Edge' (ID: 16396)
  Prédit: 'Edge'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Edge' (adapté à ' Edge') → logprob: -5.796184723294573e-06
    2. ' Edge' → logprob: -12.125005722045898
    3. '   ' → logprob: -15.250005722045898
    4. '       ' → logprob: -16.5000057220459
    5. '           ' → logprob: -18.1250057220459
    6. 'Edges' → logprob: -18.3750057220459
    7. '<Edge' → logprob: -20.0000057220459
    8. '.Edge' → logprob: -20.8750057220459
    9. ' ' → logprob: -21.1250057220459
    10. '  ' → logprob: -21.3750057220459

Token 581: '(Vertex' (ID: 175535)
  Prédit: '(Vertex'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(Vertex' → logprob: -1.0280383548888494e-06
    2. 'Vertex' → logprob: -14.875000953674316
    3. '(' → logprob: -15.500000953674316
    4. ' (' → logprob: -15.750000953674316
    5. '<Vertex' → logprob: -16.000001907348633
    6. ' Vertex' → logprob: -16.875001907348633
    7. '('' → logprob: -17.250001907348633
    8. '
' → logprob: -17.375001907348633
    9. '(
' → logprob: -18.125001907348633
    10. '.Vertex' → logprob: -18.500001907348633

Token 582: '.A' (ID: 1336)
  Prédit: '.A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.A' → logprob: -0.4755150377750397
    2. 'A' → logprob: -0.9755150079727173
    3. '.' → logprob: -7.475514888763428
    4. ''.' → logprob: -7.725514888763428
    5. ''A' → logprob: -8.475515365600586
    6. ').' → logprob: -9.725515365600586
    7. '   ' → logprob: -10.475515365600586
    8. ' A' → logprob: -11.100515365600586
    9. '"A' → logprob: -11.225515365600586
    10. ')' → logprob: -11.600515365600586

Token 583: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0009542173356749117
    2. ' ,' → logprob: -7.0009541511535645
    3. '.Vertex' → logprob: -11.875954627990723
    4. 'A' → logprob: -12.000954627990723
    5. ',
' → logprob: -12.125954627990723
    6. '   ' → logprob: -12.250954627990723
    7. '),' → logprob: -12.625954627990723
    8. '.A' → logprob: -12.750954627990723
    9. ',A' → logprob: -12.750954627990723
    10. '(Vertex' → logprob: -12.750954627990723

Token 584: ' Vertex' (ID: 49245)
  Prédit: 'Vertex'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Vertex' → logprob: -0.0015262868255376816
    2. ' Vertex' → logprob: -6.501526355743408
    3. 'B' → logprob: -10.75152587890625
    4. '(Vertex' → logprob: -13.50152587890625
    5. '   ' → logprob: -14.37652587890625
    6. ' ' → logprob: -15.00152587890625
    7. '<Vertex' → logprob: -16.62652587890625
    8. '
' → logprob: -16.87652587890625
    9. '  ' → logprob: -17.25152587890625
    10. '.Vertex' → logprob: -17.50152587890625

Token 585: '.B' (ID: 2611)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.0007573349867016077
    2. '.B' → logprob: -7.250757217407227
    3. ' B' → logprob: -10.125757217407227
    4. ')' → logprob: -13.250757217407227
    5. ').' → logprob: -13.250757217407227
    6. '.' → logprob: -13.500757217407227
    7. 'C' → logprob: -14.375757217407227
    8. '	B' → logprob: -14.875757217407227
    9. '   ' → logprob: -15.250757217407227
    10. 'Vertex' → logprob: -15.625757217407227

Token 586: '),
' (ID: 2313)
  Prédit: '),'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),' → logprob: -0.3489038646221161
    2. '),
' → logprob: -1.2239038944244385
    3. ')' → logprob: -8.97390365600586
    4. '),
' → logprob: -9.09890365600586
    5. '),

' → logprob: -9.09890365600586
    6. '   ' → logprob: -10.59890365600586
    7. ',' → logprob: -10.84890365600586
    8. ' ),
' → logprob: -10.84890365600586
    9. '       ' → logprob: -11.09890365600586
    10. ' ),' → logprob: -11.22390365600586

Token 587: '           ' (ID: 352)
  Prédit: ' Edge'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Edge' → logprob: -0.036473311483860016
    2. 'Edge' → logprob: -3.911473274230957
    3. '           ' → logprob: -4.161473274230957
    4. '            ' → logprob: -8.536473274230957
    5. ' ' → logprob: -12.786473274230957
    6. '    ' → logprob: -12.786473274230957
    7. '        ' → logprob: -13.036473274230957
    8. '   ' → logprob: -13.036473274230957
    9. '               ' → logprob: -13.036473274230957
    10. '          ' → logprob: -13.036473274230957

Token 588: ' Edge' (ID: 16396)
  Prédit: ' Edge'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Edge' → logprob: -0.14273695647716522
    2. 'Edge' (adapté à ' Edge') → logprob: -2.0177369117736816
    3. '           ' → logprob: -9.76773738861084
    4. '            ' → logprob: -13.01773738861084
    5. '<Edge' → logprob: -14.14273738861084
    6. '   ' → logprob: -15.14273738861084
    7. '.Edge' → logprob: -15.14273738861084
    8. ' ' → logprob: -15.39273738861084
    9. ' ' → logprob: -15.64273738861084
    10. '    ' → logprob: -16.017736434936523

Token 589: '(Vertex' (ID: 175535)
  Prédit: '(Vertex'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(Vertex' → logprob: -0.0038518591318279505
    2. '(' → logprob: -5.628851890563965
    3. ' (' → logprob: -8.878851890563965
    4. '(
' → logprob: -10.003851890563965
    5. ' Vertex' → logprob: -10.253851890563965
    6. 'Vertex' → logprob: -10.878851890563965
    7. '<Vertex' → logprob: -12.878851890563965
    8. 'Edge' → logprob: -13.128851890563965
    9. '(Vector' → logprob: -13.253851890563965
    10. ' ' → logprob: -14.003851890563965

Token 590: '.A' (ID: 1336)
  Prédit: '.A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.A' → logprob: -0.1590198427438736
    2. '.C' → logprob: -2.534019947052002
    3. 'A' → logprob: -2.784019947052002
    4. 'C' → logprob: -5.159019947052002
    5. '.' → logprob: -9.284019470214844
    6. 'Vertex' → logprob: -11.159019470214844
    7. '.Vertex' → logprob: -12.159019470214844
    8. ').' → logprob: -12.534019470214844
    9. ',' → logprob: -12.534019470214844
    10. ' .' → logprob: -12.784019470214844

Token 591: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00010068230039905757
    2. ' ,' → logprob: -9.750101089477539
    3. ',
' → logprob: -10.250101089477539
    4. '),' → logprob: -13.125101089477539
    5. ',
' → logprob: -13.875101089477539
    6. 'C' → logprob: -14.125101089477539
    7. ')' → logprob: -14.500101089477539
    8. ',C' → logprob: -14.625101089477539
    9. ',

' → logprob: -14.875101089477539
    10. '(Vertex' → logprob: -15.000101089477539

Token 592: ' Vertex' (ID: 49245)
  Prédit: 'Vertex'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Vertex' → logprob: -0.3133460581302643
    2. ' Vertex' → logprob: -1.313346028327942
    3. '(Vertex' → logprob: -10.188345909118652
    4. 'C' → logprob: -11.063345909118652
    5. '.Vertex' → logprob: -11.438345909118652
    6. ' C' → logprob: -11.813345909118652
    7. '<Vertex' → logprob: -12.438345909118652
    8. ' ' → logprob: -12.688345909118652
    9. '_vertex' → logprob: -13.063345909118652
    10. ' ' → logprob: -13.688345909118652

Token 593: '.C' (ID: 2010)
  Prédit: 'C'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'C' → logprob: -0.0003775264194700867
    2. ' C' → logprob: -8.250377655029297
    3. ',' → logprob: -9.250377655029297
    4. '.C' → logprob: -11.500377655029297
    5. ' ' → logprob: -12.625377655029297
    6. ',C' → logprob: -13.250377655029297
    7. '  ' → logprob: -13.625377655029297
    8. ')' → logprob: -14.125377655029297
    9. ',
' → logprob: -14.250377655029297
    10. '   ' → logprob: -14.625377655029297

Token 594: '),
' (ID: 2313)
  Prédit: '),
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),
' → logprob: -0.13475994765758514
    2. '),' → logprob: -2.1347599029541016
    3. '           ' → logprob: -4.884759902954102
    4. '       ' → logprob: -9.634759902954102
    5. ')' → logprob: -9.759759902954102
    6. '          ' → logprob: -10.134759902954102
    7. '),
' → logprob: -10.759759902954102
    8. ' ),
' → logprob: -11.134759902954102
    9. '),

' → logprob: -11.259759902954102
    10. '   ' → logprob: -11.384759902954102

Token 595: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.001009707571938634
    2. 'Edge' → logprob: -7.001009941101074
    3. ' Edge' → logprob: -9.251009941101074
    4. '   ' → logprob: -13.751009941101074
    5. '          ' → logprob: -14.376009941101074
    6. '            ' → logprob: -15.501009941101074
    7. '       ' → logprob: -15.876009941101074
    8. 'Vertex' → logprob: -16.251008987426758
    9. '               ' → logprob: -16.876008987426758
    10. '         ' → logprob: -17.501008987426758

Token 596: ' Edge' (ID: 16396)
  Prédit: ' Edge'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Edge' → logprob: -0.47442781925201416
    2. 'Edge' (adapté à ' Edge') → logprob: -0.9744278192520142
    3. '           ' → logprob: -7.974427700042725
    4. '   ' → logprob: -12.474428176879883
    5. ' ' → logprob: -14.599428176879883
    6. '            ' → logprob: -14.849428176879883
    7. '<Edge' → logprob: -14.974428176879883
    8. '.Edge' → logprob: -14.974428176879883
    9. '       ' → logprob: -15.224428176879883
    10. '_edge' → logprob: -15.849428176879883

Token 597: '(Vertex' (ID: 175535)
  Prédit: '(Vertex'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(Vertex' → logprob: -0.005129388999193907
    2. '(' → logprob: -5.755129337310791
    3. ' (' → logprob: -6.380129337310791
    4. ' Vertex' → logprob: -9.38012981414795
    5. 'Vertex' → logprob: -9.63012981414795
    6. '(
' → logprob: -10.63012981414795
    7. 'Edge' → logprob: -10.88012981414795
    8. '(View' → logprob: -11.50512981414795
    9. '.Vertex' → logprob: -11.63012981414795
    10. '<Vertex' → logprob: -11.63012981414795

Token 598: '.A' (ID: 1336)
  Prédit: '.D'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.D' → logprob: -0.12403517216444016
    2. '.A' → logprob: -2.374035120010376
    3. '.B' → logprob: -4.499035358428955
    4. '.Vertex' → logprob: -4.874035358428955
    5. ',' → logprob: -5.999035358428955
    6. 'A' → logprob: -6.749035358428955
    7. 'D' → logprob: -7.874035358428955
    8. 'Vertex' → logprob: -8.874034881591797
    9. '.V' → logprob: -8.874034881591797
    10. '   ' → logprob: -9.374034881591797

Token 599: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -9.460291767027229e-05
    2. ' ,' → logprob: -9.625094413757324
    3. ',
' → logprob: -10.625094413757324
    4. '',' → logprob: -14.250094413757324
    5. ',
' → logprob: -14.625094413757324
    6. '),' → logprob: -14.750094413757324
    7. '(Vertex' → logprob: -14.750094413757324
    8. '.Vertex' → logprob: -14.875094413757324
    9. ',

' → logprob: -15.250094413757324
    10. ')' → logprob: -15.250094413757324

Token 600: ' Vertex' (ID: 49245)
  Prédit: 'Vertex'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Vertex' → logprob: -0.023271802812814713
    2. ' Vertex' → logprob: -3.7732717990875244
    3. 'D' → logprob: -10.773271560668945
    4. '(Vertex' → logprob: -12.398271560668945
    5. '<Vertex' → logprob: -14.023271560668945
    6. '.Vertex' → logprob: -15.398271560668945
    7. '_vertex' → logprob: -16.648271560668945
    8. '
' → logprob: -16.773271560668945
    9. ' D' → logprob: -17.398271560668945
    10. ' ' → logprob: -17.398271560668945

Token 601: '.D' (ID: 1696)
  Prédit: 'D'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'D' → logprob: -0.00193149340339005
    2. ' D' → logprob: -6.251931667327881
    3. '.D' → logprob: -13.876931190490723
    4. ' ' → logprob: -14.001931190490723
    5. '_D' → logprob: -14.626931190490723
    6. 'Vertex' → logprob: -14.751931190490723
    7. ',D' → logprob: -16.12693214416504
    8. '	D' → logprob: -16.62693214416504
    9. '  ' → logprob: -16.87693214416504
    10. ',' → logprob: -17.12693214416504

Token 602: '),
' (ID: 2313)
  Prédit: '),'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),' → logprob: -0.050040166825056076
    2. '),
' → logprob: -3.0500402450561523
    3. '           ' → logprob: -7.300040245056152
    4. '       ' → logprob: -7.925040245056152
    5. ')' → logprob: -8.050040245056152
    6. '   ' → logprob: -10.300040245056152
    7. ',' → logprob: -10.925040245056152
    8. ']),' → logprob: -11.175040245056152
    9. '),

' → logprob: -11.550040245056152
    10. '),
' → logprob: -12.300040245056152

Token 603: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.010354088619351387
    2. 'Edge' → logprob: -4.760354042053223
    3. ' Edge' → logprob: -6.385354042053223
    4. '       ' → logprob: -10.510354042053223
    5. '   ' → logprob: -11.135354042053223
    6. '               ' → logprob: -12.510354042053223
    7. '          ' → logprob: -12.885354042053223
    8. ' ' → logprob: -13.760354042053223
    9. '         ' → logprob: -14.260354042053223
    10. '            ' → logprob: -14.385354042053223

Token 604: ' Edge' (ID: 16396)
  Prédit: 'Edge'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Edge' (adapté à ' Edge') → logprob: -0.20157092809677124
    2. ' Edge' → logprob: -1.701570987701416
    3. '           ' → logprob: -9.076570510864258
    4. '   ' → logprob: -10.201570510864258
    5. '       ' → logprob: -12.701570510864258
    6. ' ' → logprob: -13.826570510864258
    7. '<Edge' → logprob: -14.826570510864258
    8. '.Edge' → logprob: -14.951570510864258
    9. '    ' → logprob: -15.451570510864258
    10. '               ' → logprob: -15.701570510864258

Token 605: '(Vertex' (ID: 175535)
  Prédit: '(Vertex'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(Vertex' → logprob: -0.0005212200339883566
    2. '(' → logprob: -7.625521183013916
    3. ' (' → logprob: -10.625521659851074
    4. '(View' → logprob: -12.125521659851074
    5. '<Vertex' → logprob: -14.250521659851074
    6. '(Vector' → logprob: -14.875521659851074
    7. '(Node' → logprob: -15.375521659851074
    8. ')' → logprob: -15.375521659851074
    9. '(
' → logprob: -15.500521659851074
    10. '(Video' → logprob: -15.750521659851074

Token 606: '.B' (ID: 2611)
  Prédit: '.B'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.B' → logprob: -0.0005323022487573326
    2. 'B' → logprob: -7.625532150268555
    3. '.' → logprob: -10.375532150268555
    4. ' .' → logprob: -12.625532150268555
    5. '.Vertex' → logprob: -12.875532150268555
    6. ',' → logprob: -13.250532150268555
    7. ' B' → logprob: -13.250532150268555
    8. '.C' → logprob: -13.500532150268555
    9. '	B' → logprob: -14.875532150268555
    10. '.V' → logprob: -15.000532150268555

Token 607: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00010163593105971813
    2. ' ,' → logprob: -9.375102043151855
    3. ',
' → logprob: -11.125102043151855
    4. '‌,' → logprob: -14.750102043151855
    5. '(Vertex' → logprob: -15.000102043151855
    6. '',' → logprob: -15.125102043151855
    7. ',
' → logprob: -15.375102043151855
    8. '<|end|>' → logprob: -15.875102043151855
    9. '`,' → logprob: -16.00010108947754
    10. '),' → logprob: -16.37510108947754

Token 608: ' Vertex' (ID: 49245)
  Prédit: 'Vertex'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Vertex' → logprob: -0.3870500922203064
    2. ' Vertex' → logprob: -1.1370501518249512
    3. '(Vertex' → logprob: -8.762049674987793
    4. '<Vertex' → logprob: -11.512049674987793
    5. ' ' → logprob: -11.762049674987793
    6. '.Vertex' → logprob: -12.762049674987793
    7. '_vertex' → logprob: -14.012049674987793
    8. ' vertex' → logprob: -15.387049674987793
    9. '  ' → logprob: -15.512049674987793
    10. ' ' → logprob: -15.512049674987793

Token 609: '.C' (ID: 2010)
  Prédit: 'C'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'C' → logprob: -0.0014862968819215894
    2. ' C' → logprob: -6.751486301422119
    3. ',' → logprob: -8.126485824584961
    4. ',C' → logprob: -11.751485824584961
    5. ' ' → logprob: -12.001485824584961
    6. '.C' → logprob: -13.251485824584961
    7. ' ,' → logprob: -13.626485824584961
    8. '_C' → logprob: -14.126485824584961
    9. ''C' → logprob: -14.376485824584961
    10. '	C' → logprob: -14.501485824584961

Token 610: '),
' (ID: 2313)
  Prédit: '),'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),' → logprob: -0.390264630317688
    2. '),
' → logprob: -1.140264630317688
    3. '           ' → logprob: -5.890264511108398
    4. '       ' → logprob: -7.640264511108398
    5. ')' → logprob: -9.640264511108398
    6. '),

' → logprob: -10.515264511108398
    7. '),
' → logprob: -10.765264511108398
    8. '   ' → logprob: -11.140264511108398
    9. '          ' → logprob: -12.515264511108398
    10. '         ' → logprob: -13.390264511108398

Token 611: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -7.660315895918757e-05
    2. 'Edge' → logprob: -9.625076293945312
    3. ' Edge' → logprob: -11.750076293945312
    4. '   ' → logprob: -14.000076293945312
    5. '          ' → logprob: -14.375076293945312
    6. '            ' → logprob: -14.375076293945312
    7. ' ' → logprob: -15.625076293945312
    8. '       ' → logprob: -16.125076293945312
    9. ' ' → logprob: -16.375076293945312
    10. '               ' → logprob: -16.375076293945312

Token 612: ' Edge' (ID: 16396)
  Prédit: ' Edge'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Edge' → logprob: -0.47734543681144714
    2. 'Edge' (adapté à ' Edge') → logprob: -0.9773454666137695
    3. '           ' → logprob: -5.7273454666137695
    4. '   ' → logprob: -12.97734546661377
    5. '       ' → logprob: -13.97734546661377
    6. '<Edge' → logprob: -13.97734546661377
    7. '            ' → logprob: -14.22734546661377
    8. ' ' → logprob: -14.35234546661377
    9. '.Edge' → logprob: -14.72734546661377
    10. '          ' → logprob: -15.35234546661377

Token 613: '(Vertex' (ID: 175535)
  Prédit: '(Vertex'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(Vertex' → logprob: -0.0026364149525761604
    2. '(' → logprob: -6.127636432647705
    3. ' (' → logprob: -8.127635955810547
    4. ' Vertex' → logprob: -9.877635955810547
    5. 'Edge' → logprob: -10.002635955810547
    6. 'Vertex' → logprob: -10.127635955810547
    7. '<Vertex' → logprob: -12.377635955810547
    8. '(
' → logprob: -12.627635955810547
    9. ' Edge' → logprob: -12.877635955810547
    10. '.Vertex' → logprob: -13.377635955810547

Token 614: '.B' (ID: 2611)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.16694684326648712
    2. ' B' → logprob: -2.9169468879699707
    3. '.Vertex' → logprob: -2.9169468879699707
    4. '.B' → logprob: -4.291946887969971
    5. 'Vertex' → logprob: -4.291946887969971
    6. '(Vertex' → logprob: -4.666946887969971
    7. ' Vertex' → logprob: -4.916946887969971
    8. '.Edge' → logprob: -7.791946887969971
    9. ' ' → logprob: -8.166946411132812
    10. '<Vertex' → logprob: -8.291946411132812

Token 615: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00013381359167397022
    2. ' ,' → logprob: -9.000133514404297
    3. ',
' → logprob: -11.625133514404297
    4. '(Vertex' → logprob: -15.000133514404297
    5. '<|end|>' → logprob: -15.375133514404297
    6. '',' → logprob: -15.875133514404297
    7. '`,' → logprob: -16.250133514404297
    8. 'import' → logprob: -16.375133514404297
    9. '‌,' → logprob: -16.500133514404297
    10. ',
' → logprob: -16.750133514404297

Token 616: ' Vertex' (ID: 49245)
  Prédit: 'Vertex'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Vertex' → logprob: -0.47425806522369385
    2. ' Vertex' → logprob: -0.9742580652236938
    3. '(Vertex' → logprob: -8.724258422851562
    4. 'D' → logprob: -11.724258422851562
    5. '.Vertex' → logprob: -12.349258422851562
    6. 'Edge' → logprob: -12.974258422851562
    7. '<Vertex' → logprob: -13.099258422851562
    8. ' ' → logprob: -14.099258422851562
    9. ' D' → logprob: -14.974258422851562
    10. ' vertex' → logprob: -15.349258422851562

Token 617: '.D' (ID: 1696)
  Prédit: 'D'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'D' → logprob: -0.0001431114797014743
    2. ' D' → logprob: -8.875143051147461
    3. '_D' → logprob: -14.000143051147461
    4. '	D' → logprob: -14.750143051147461
    5. ' ' → logprob: -15.125143051147461
    6. '.D' → logprob: -15.250143051147461
    7. ''D' → logprob: -15.375143051147461
    8. '<D' → logprob: -15.375143051147461
    9. ',D' → logprob: -15.500143051147461
    10. '
' → logprob: -15.875143051147461

Token 618: '),
' (ID: 2313)
  Prédit: '),'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),' → logprob: -0.6357719898223877
    2. '),
' → logprob: -0.7607719898223877
    3. ')' → logprob: -6.135771751403809
    4. '           ' → logprob: -7.135771751403809
    5. '),

' → logprob: -9.260771751403809
    6. '       ' → logprob: -10.135771751403809
    7. '),
' → logprob: -10.635771751403809
    8. '   ' → logprob: -11.010771751403809
    9. ' ),
' → logprob: -12.010771751403809
    10. ')
' → logprob: -12.385771751403809

Token 619: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00023846338444855064
    2. 'Edge' → logprob: -8.500238418579102
    3. ' Edge' → logprob: -10.625238418579102
    4. '   ' → logprob: -12.500238418579102
    5. '          ' → logprob: -12.750238418579102
    6. '            ' → logprob: -13.375238418579102
    7. '       ' → logprob: -13.875238418579102
    8. '               ' → logprob: -14.500238418579102
    9. '         ' → logprob: -14.750238418579102
    10. ' ' → logprob: -15.500238418579102

Token 620: ' Edge' (ID: 16396)
  Prédit: 'Edge'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Edge' (adapté à ' Edge') → logprob: -0.2519945800304413
    2. ' Edge' → logprob: -1.5019946098327637
    3. '           ' → logprob: -9.751994132995605
    4. '   ' → logprob: -13.251994132995605
    5. 'Face' → logprob: -13.501994132995605
    6. '       ' → logprob: -13.876994132995605
    7. '<Edge' → logprob: -14.001994132995605
    8. '.Edge' → logprob: -14.626994132995605
    9. ' ' → logprob: -14.751994132995605
    10. 'Vertex' → logprob: -15.626994132995605

Token 621: '(Vertex' (ID: 175535)
  Prédit: '(Vertex'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(Vertex' → logprob: -0.001756456564180553
    2. '(' → logprob: -6.62675666809082
    3. ' Vertex' → logprob: -8.50175666809082
    4. 'Vertex' → logprob: -9.37675666809082
    5. ' (' → logprob: -9.50175666809082
    6. 'Edge' → logprob: -10.62675666809082
    7. '<Vertex' → logprob: -11.12675666809082
    8. '(
' → logprob: -11.62675666809082
    9. ' Edge' → logprob: -12.12675666809082
    10. '.Vertex' → logprob: -12.25175666809082

Token 622: '.C' (ID: 2010)
  Prédit: 'C'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'C' → logprob: -0.23120920360088348
    2. '.C' → logprob: -1.6062091588974
    3. ' C' → logprob: -5.4812092781066895
    4. '(C' → logprob: -6.6062092781066895
    5. '_C' → logprob: -9.481208801269531
    6. '(' → logprob: -9.856208801269531
    7. '	C' → logprob: -10.731208801269531
    8. ')' → logprob: -10.856208801269531
    9. ' ' → logprob: -11.356208801269531
    10. '<C' → logprob: -11.356208801269531

Token 623: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00019614976190496236
    2. ' ,' → logprob: -8.75019645690918
    3. ',
' → logprob: -11.37519645690918
    4. '(Vertex' → logprob: -11.62519645690918
    5. 'C' → logprob: -12.50019645690918
    6. '.Vertex' → logprob: -12.75019645690918
    7. '<|end|>' → logprob: -13.12519645690918
    8. ',C' → logprob: -13.25019645690918
    9. 'Vertex' → logprob: -13.37519645690918
    10. ' Vertex' → logprob: -13.50019645690918

Token 624: ' Vertex' (ID: 49245)
  Prédit: 'Vertex'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Vertex' → logprob: -0.048800598829984665
    2. ' Vertex' → logprob: -3.0488007068634033
    3. '(Vertex' → logprob: -8.548800468444824
    4. 'D' → logprob: -11.173800468444824
    5. '<Vertex' → logprob: -12.548800468444824
    6. '.Vertex' → logprob: -13.673800468444824
    7. ' ' → logprob: -14.923800468444824
    8. '_vertex' → logprob: -15.923800468444824
    9. ' vertex' → logprob: -16.17380142211914
    10. '
' → logprob: -16.54880142211914

Token 625: '.D' (ID: 1696)
  Prédit: 'D'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'D' → logprob: -0.008613395504653454
    2. ' D' → logprob: -5.008613586425781
    3. '.D' → logprob: -6.383613586425781
    4. ',' → logprob: -9.508613586425781
    5. ',D' → logprob: -10.258613586425781
    6. ' ' → logprob: -10.508613586425781
    7. ')' → logprob: -10.883613586425781
    8. '	D' → logprob: -11.258613586425781
    9. '_D' → logprob: -11.258613586425781
    10. 'C' → logprob: -11.883613586425781

Token 626: ')
' (ID: 446)
  Prédit: '])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '])' → logprob: -0.684895932674408
    2. ')' → logprob: -1.0598959922790527
    3. ')])' → logprob: -1.9348959922790527
    4. '       ' → logprob: -6.434895992279053
    5. ')
' → logprob: -6.684895992279053
    6. '))' → logprob: -7.434895992279053
    7. ')]' → logprob: -7.809895992279053
    8. '   ' → logprob: -8.309895515441895
    9. '])
' → logprob: -8.559895515441895
    10. '})' → logprob: -8.934895515441895

Token 627: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.31568846106529236
    2. '])' → logprob: -1.3156884908676147
    3. '   ' → logprob: -6.565688610076904
    4. ')' → logprob: -7.065688610076904
    5. ' ])' → logprob: -8.940688133239746
    6. '])
' → logprob: -11.815688133239746
    7. ')])' → logprob: -11.940688133239746
    8. '           ' → logprob: -12.815688133239746
    9. ',' → logprob: -12.940688133239746
    10. '      ' → logprob: -13.065688133239746

Token 628: ' ])
' (ID: 51770)
  Prédit: '])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '])' → logprob: -0.02216123603284359
    2. ')' → logprob: -4.52216100692749
    3. '       ' → logprob: -4.64716100692749
    4. '   ' → logprob: -6.89716100692749
    5. '])
' (adapté à ' ])
') → logprob: -8.147161483764648
    6. ' ])' → logprob: -9.397161483764648
    7. ')
' → logprob: -10.022161483764648
    8. '})' → logprob: -11.647161483764648
    9. ')])' → logprob: -11.772161483764648
    10. '))' → logprob: -11.772161483764648

Token 629: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 630: ' #' (ID: 1069)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.027147818356752396
    2. '       ' → logprob: -3.7771477699279785
    3. '#' (adapté à ' #') → logprob: -6.1521477699279785
    4. ' self' → logprob: -6.6521477699279785
    5. '   ' → logprob: -7.9021477699279785
    6. '
' → logprob: -10.152148246765137
    7. 'def' → logprob: -11.027148246765137
    8. '```' → logprob: -11.277148246765137
    9. ')' → logprob: -12.152148246765137
    10. 'faces' → logprob: -12.277148246765137

Token 631: ' Faces' (ID: 85914)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.7858786582946777
    2. '#' → logprob: -0.9108786582946777
    3. 'faces' → logprob: -2.0358786582946777
    4. 'face' → logprob: -4.660878658294678
    5. ' #' → logprob: -7.785878658294678
    6. 'def' → logprob: -7.910878658294678
    7. ' self' → logprob: -8.285879135131836
    8. 'edges' → logprob: -8.660879135131836
    9. '       ' → logprob: -8.910879135131836
    10. ' faces' → logprob: -9.160879135131836

Token 632: ' as' (ID: 472)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.038828201591968536
    2. '=' → logprob: -3.288828134536743
    3. 'self' → logprob: -7.788828372955322
    4. '       ' → logprob: -8.788827896118164
    5. ':' → logprob: -9.163827896118164
    6. '   ' → logprob: -10.163827896118164
    7. '=self' → logprob: -10.288827896118164
    8. ' self' → logprob: -11.163827896118164
    9. '=[
' → logprob: -11.663827896118164
    10. 's' → logprob: -12.413827896118164

Token 633: ' sets' (ID: 11982)
  Prédit: 'set'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'set' → logprob: -0.21432913839817047
    2. '[
' → logprob: -1.7143291234970093
    3. '[' → logprob: -4.964329242706299
    4. '{' → logprob: -5.589329242706299
    5. '{
' → logprob: -6.339329242706299
    6. ' set' → logprob: -8.71432876586914
    7. 'list' → logprob: -8.83932876586914
    8. ' [
' → logprob: -11.21432876586914
    9. 'fro' → logprob: -11.71432876586914
    10. 'sets' → logprob: -12.21432876586914

Token 634: ' of' (ID: 328)
  Prédit: '[
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[
' → logprob: -0.4856890141963959
    2. '([
' → logprob: -1.6106890439987183
    3. '       ' → logprob: -2.3606889247894287
    4. '{' → logprob: -3.9856889247894287
    5. ' =' → logprob: -3.9856889247894287
    6. '[' → logprob: -4.235689163208008
    7. ' of' → logprob: -4.860689163208008
    8. 'self' → logprob: -4.985689163208008
    9. '=[
' → logprob: -4.985689163208008
    10. 'of' → logprob: -5.610689163208008

Token 635: ' vertices' (ID: 38360)
  Prédit: 'fro'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'fro' → logprob: -0.6432886719703674
    2. '{' → logprob: -1.3932886123657227
    3. 'vertices' → logprob: -3.0182886123657227
    4. 'Face' → logprob: -3.5182886123657227
    5. '[' → logprob: -3.5182886123657227
    6. 'faces' → logprob: -3.7682886123657227
    7. 'Edges' → logprob: -4.143288612365723
    8. 'edges' → logprob: -4.268288612365723
    9. 'Edge' → logprob: -4.393288612365723
    10. 'Vertex' → logprob: -4.643288612365723

Token 636: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.072730652987957
    2. 'self' → logprob: -2.822730541229248
    3. ' self' → logprob: -5.197730541229248
    4. ' =' → logprob: -6.197730541229248
    5. '[
' → logprob: -6.697730541229248
    6. '(self' → logprob: -7.697730541229248
    7. ',' → logprob: -8.322731018066406
    8. '
' → logprob: -8.572731018066406
    9. '[self' → logprob: -9.072731018066406
    10. ':
' → logprob: -9.072731018066406

Token 637: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.001917810644954443
    2. 'self' → logprob: -6.626917839050293
    3. '[
' → logprob: -8.376917839050293
    4. ' self' → logprob: -9.376917839050293
    5. ',' → logprob: -9.876917839050293
    6. '(self' → logprob: -10.126917839050293
    7. ' =' → logprob: -10.126917839050293
    8. '<|end|>' → logprob: -10.751917839050293
    9. '{' → logprob: -11.001917839050293
    10. '   ' → logprob: -11.001917839050293

Token 638: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.04789842292666435
    2. '       ' → logprob: -3.172898530960083
    3. ' self' → logprob: -5.422898292541504
    4. '{
' → logprob: -8.547898292541504
    5. '{' → logprob: -9.047898292541504
    6. '   ' → logprob: -10.047898292541504
    7. '[
' → logprob: -10.422898292541504
    8. '[self' → logprob: -10.672898292541504
    9. '
' → logprob: -11.172898292541504
    10. '	self' → logprob: -11.297898292541504

Token 639: '.faces' (ID: 78268)
  Prédit: '.faces'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.faces' → logprob: -0.004050613846629858
    2. 'faces' → logprob: -5.8790507316589355
    3. '_faces' → logprob: -7.7540507316589355
    4. ' .' → logprob: -8.504050254821777
    5. 'Faces' → logprob: -9.129050254821777
    6. '   ' → logprob: -9.254050254821777
    7. '.vertices' → logprob: -9.504050254821777
    8. '.' → logprob: -10.129050254821777
    9. '.edges' → logprob: -10.129050254821777
    10. ' faces' → logprob: -10.129050254821777

Token 640: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.1602766215801239
    2. '=' → logprob: -1.9102766513824463
    3. ':' → logprob: -10.535276412963867
    4. '   ' → logprob: -11.035276412963867
    5. '=set' → logprob: -12.785276412963867
    6. ' =
' → logprob: -13.535276412963867
    7. '=[
' → logprob: -13.535276412963867
    8. ' ' → logprob: -13.660276412963867
    9. '=
' → logprob: -14.410276412963867
    10. 's' → logprob: -14.410276412963867

Token 641: ' [
' (ID: 4240)
  Prédit: '{
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '{
' → logprob: -0.7506406903266907
    2. 'set' → logprob: -0.7506406903266907
    3. '{' → logprob: -3.000640630722046
    4. '[
' → logprob: -5.375640869140625
    5. ' set' → logprob: -7.250640869140625
    6. ' {
' → logprob: -7.875640869140625
    7. '[' → logprob: -8.625640869140625
    8. '   ' → logprob: -9.500640869140625
    9. ' {' → logprob: -9.875640869140625
    10. '{
' → logprob: -10.000640869140625

Token 642: '           ' (ID: 352)
  Prédit: 'Face'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Face' → logprob: -0.061986736953258514
    2. '       ' → logprob: -3.0619866847991943
    3. ' Face' → logprob: -4.436986923217773
    4. '           ' → logprob: -6.561986923217773
    5. '   ' → logprob: -10.186986923217773
    6. '[' → logprob: -11.811986923217773
    7. '               ' → logprob: -12.686986923217773
    8. ' ' → logprob: -13.061986923217773
    9. 'Facet' → logprob: -13.311986923217773
    10. '.Face' → logprob: -13.436986923217773

Token 643: ' Face' (ID: 29049)
  Prédit: 'Face'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Face' (adapté à ' Face') → logprob: -0.00010616567305987701
    2. ' Face' → logprob: -9.250105857849121
    3. '   ' → logprob: -11.625105857849121
    4. '       ' → logprob: -14.500105857849121
    5. '           ' → logprob: -15.625105857849121
    6. 'face' → logprob: -16.625106811523438
    7. ' ' → logprob: -16.625106811523438
    8. 'Edge' → logprob: -17.000106811523438
    9. 'Faces' → logprob: -17.125106811523438
    10. 'Facet' → logprob: -17.250106811523438

Token 644: '(Vertex' (ID: 175535)
  Prédit: '(Vertex'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(Vertex' → logprob: -1.9146995327901095e-05
    2. '(' → logprob: -12.250019073486328
    3. 'Vertex' → logprob: -12.500019073486328
    4. ' Vertex' → logprob: -12.750019073486328
    5. '('' → logprob: -12.875019073486328
    6. ' (' → logprob: -13.000019073486328
    7. '<Vertex' → logprob: -13.750019073486328
    8. '(
' → logprob: -14.500019073486328
    9. '   ' → logprob: -14.625019073486328
    10. '.Vertex' → logprob: -15.125019073486328

Token 645: '.A' (ID: 1336)
  Prédit: '.A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.A' → logprob: -0.008688559755682945
    2. 'A' → logprob: -4.758688449859619
    3. '   ' → logprob: -10.008688926696777
    4. '.' → logprob: -11.383688926696777
    5. ' A' → logprob: -12.383688926696777
    6. '	A' → logprob: -12.758688926696777
    7. '.B' → logprob: -12.883688926696777
    8. ' .' → logprob: -13.258688926696777
    9. '       ' → logprob: -14.383688926696777
    10. '  ' → logprob: -14.508688926696777

Token 646: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0013694037916138768
    2. ' ,' → logprob: -6.626369476318359
    3. ',
' → logprob: -10.25136947631836
    4. '(Vertex' → logprob: -13.37636947631836
    5. '),' → logprob: -13.50136947631836
    6. '<|end|>' → logprob: -14.37636947631836
    7. ' ' → logprob: -14.50136947631836
    8. '‌,' → logprob: -14.50136947631836
    9. 'A' → logprob: -14.62636947631836
    10. ')' → logprob: -14.87636947631836

Token 647: ' Vertex' (ID: 49245)
  Prédit: 'Vertex'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Vertex' → logprob: -0.007812097202986479
    2. ' Vertex' → logprob: -4.882812023162842
    3. 'B' → logprob: -8.6328125
    4. '(Vertex' → logprob: -11.1328125
    5. ' ' → logprob: -12.1328125
    6. '   ' → logprob: -13.3828125
    7. '<Vertex' → logprob: -13.3828125
    8. '  ' → logprob: -14.0078125
    9. '.Vertex' → logprob: -14.0078125
    10. '
' → logprob: -14.1328125

Token 648: '.B' (ID: 2611)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.004624510649591684
    2. ',' → logprob: -5.504624366760254
    3. 'Vertex' → logprob: -7.879624366760254
    4. ' B' → logprob: -9.254624366760254
    5. ',B' → logprob: -10.754624366760254
    6. '(Vertex' → logprob: -11.129624366760254
    7. ' Vertex' → logprob: -11.254624366760254
    8. ',
' → logprob: -11.754624366760254
    9. ' ,' → logprob: -12.504624366760254
    10. 'C' → logprob: -12.754624366760254

Token 649: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0004071971052326262
    2. ' ,' → logprob: -7.8754072189331055
    3. ',
' → logprob: -10.625407218933105
    4. '),' → logprob: -14.750407218933105
    5. 'Vertex' → logprob: -15.000407218933105
    6. '           ' → logprob: -15.125407218933105
    7. '(Vertex' → logprob: -15.375407218933105
    8. '‌,' → logprob: -15.500407218933105
    9. ',

' → logprob: -15.625407218933105
    10. ')' → logprob: -15.625407218933105

Token 650: ' Vertex' (ID: 49245)
  Prédit: 'Vertex'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Vertex' → logprob: -0.0018275037873536348
    2. ' Vertex' → logprob: -6.376827716827393
    3. 'C' → logprob: -9.126827239990234
    4. '(Vertex' → logprob: -12.001827239990234
    5. '<Vertex' → logprob: -13.126827239990234
    6. '   ' → logprob: -13.251827239990234
    7. ' ' → logprob: -13.626827239990234
    8. 'c' → logprob: -13.876827239990234
    9. '
' → logprob: -14.001827239990234
    10. '  ' → logprob: -14.126827239990234

Token 651: '.C' (ID: 2010)
  Prédit: 'C'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'C' → logprob: -6.64708495605737e-05
    2. ' C' → logprob: -9.875066757202148
    3. ')' → logprob: -11.875066757202148
    4. ',' → logprob: -13.000066757202148
    5. 'Vertex' → logprob: -14.000066757202148
    6. 'D' → logprob: -14.125066757202148
    7. ' ' → logprob: -14.625066757202148
    8. '   ' → logprob: -14.750066757202148
    9. ''C' → logprob: -14.750066757202148
    10. '...' → logprob: -14.875066757202148

Token 652: '),
' (ID: 2313)
  Prédit: '),
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),
' → logprob: -0.023681337013840675
    2. '),' → logprob: -3.773681402206421
    3. '       ' → logprob: -8.648681640625
    4. '           ' → logprob: -9.148681640625
    5. '),
' → logprob: -9.398681640625
    6. '   ' → logprob: -10.523681640625
    7. ')' → logprob: -10.773681640625
    8. ' ),
' → logprob: -11.523681640625
    9. '),

' → logprob: -11.773681640625
    10. ',),
' → logprob: -13.773681640625

Token 653: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.06338528543710709
    2. 'Face' → logprob: -3.313385248184204
    3. ' Face' → logprob: -3.688385248184204
    4. '       ' → logprob: -11.938385009765625
    5. '   ' → logprob: -13.063385009765625
    6. '          ' → logprob: -13.063385009765625
    7. '            ' → logprob: -14.188385009765625
    8. '               ' → logprob: -14.813385009765625
    9. '         ' → logprob: -15.313385009765625
    10. '        ' → logprob: -15.563385009765625

Token 654: ' Face' (ID: 29049)
  Prédit: ' Face'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Face' → logprob: -0.43079301714897156
    2. 'Face' (adapté à ' Face') → logprob: -1.055793046951294
    3. '           ' → logprob: -6.180792808532715
    4. '   ' → logprob: -12.055792808532715
    5. ' ' → logprob: -12.805792808532715
    6. '            ' → logprob: -12.930792808532715
    7. '          ' → logprob: -13.055792808532715
    8. ' face' → logprob: -13.305792808532715
    9. '    ' → logprob: -13.680792808532715
    10. '       ' → logprob: -13.930792808532715

Token 655: '(Vertex' (ID: 175535)
  Prédit: '(Vertex'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(Vertex' → logprob: -0.001460831263102591
    2. ' (' → logprob: -7.001461029052734
    3. 'Vertex' → logprob: -8.501461029052734
    4. 'Face' → logprob: -9.126461029052734
    5. ' Vertex' → logprob: -9.251461029052734
    6. '(' → logprob: -9.501461029052734
    7. '(
' → logprob: -11.251461029052734
    8. '   ' → logprob: -11.626461029052734
    9. ' Face' → logprob: -11.876461029052734
    10. '<Vertex' → logprob: -12.001461029052734

Token 656: '.A' (ID: 1336)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.0180966779589653
    2. ' A' → logprob: -4.518096446990967
    3. '.A' → logprob: -5.268096446990967
    4. 'Vertex' → logprob: -7.393096446990967
    5. 'D' → logprob: -7.643096446990967
    6. '(Vertex' → logprob: -8.143096923828125
    7. '.Vertex' → logprob: -8.643096923828125
    8. ' Vertex' → logprob: -8.893096923828125
    9. '   ' → logprob: -9.518096923828125
    10. ' ' → logprob: -10.768096923828125

Token 657: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.000505730917211622
    2. ' ,' → logprob: -7.6255059242248535
    3. ',
' → logprob: -11.500505447387695
    4. ',B' → logprob: -13.625505447387695
    5. '`,' → logprob: -14.250505447387695
    6. ')' → logprob: -14.375505447387695
    7. '   ' → logprob: -14.500505447387695
    8. '<|end|>' → logprob: -14.500505447387695
    9. 'import' → logprob: -14.938005447387695
    10. '‌,' → logprob: -14.938005447387695

Token 658: ' Vertex' (ID: 49245)
  Prédit: 'Vertex'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Vertex' → logprob: -0.20149841904640198
    2. ' Vertex' → logprob: -1.7014983892440796
    3. '(Vertex' → logprob: -10.201498031616211
    4. ' ' → logprob: -11.201498031616211
    5. 'B' → logprob: -11.326498031616211
    6. ' vertex' → logprob: -11.951498031616211
    7. '<Vertex' → logprob: -12.326498031616211
    8. ' B' → logprob: -12.826498031616211
    9. '.Vertex' → logprob: -12.826498031616211
    10. '_vertex' → logprob: -13.076498031616211

Token 659: '.B' (ID: 2611)
  Prédit: 'D'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'D' → logprob: -0.2576632797718048
    2. ',' → logprob: -1.6326632499694824
    3. 'B' → logprob: -3.5076632499694824
    4. ',D' → logprob: -7.257663249969482
    5. ' ,' → logprob: -7.632663249969482
    6. ' D' → logprob: -8.38266372680664
    7. ',
' → logprob: -8.75766372680664
    8. ' ' → logprob: -9.50766372680664
    9. '   ' → logprob: -10.75766372680664
    10. '[' → logprob: -11.25766372680664

Token 660: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -6.24179228907451e-05
    2. ' ,' → logprob: -10.000061988830566
    3. ',
' → logprob: -11.125061988830566
    4. '),' → logprob: -14.375061988830566
    5. '`,' → logprob: -14.875061988830566
    6. '',' → logprob: -15.000061988830566
    7. '(Vertex' → logprob: -15.750061988830566
    8. ')' → logprob: -15.875061988830566
    9. ',
' → logprob: -15.875061988830566
    10. '<|end|>' → logprob: -16.000062942504883

Token 661: ' Vertex' (ID: 49245)
  Prédit: 'Vertex'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Vertex' → logprob: -0.3869088590145111
    2. ' Vertex' → logprob: -1.1369088888168335
    3. '(Vertex' → logprob: -10.386908531188965
    4. '<Vertex' → logprob: -13.011908531188965
    5. ' ' → logprob: -13.511908531188965
    6. '.Vertex' → logprob: -13.886908531188965
    7. '   ' → logprob: -14.011908531188965
    8. '           ' → logprob: -14.761908531188965
    9. '_vertex' → logprob: -14.886908531188965
    10. ' vertex' → logprob: -15.011908531188965

Token 662: '.D' (ID: 1696)
  Prédit: 'D'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'D' → logprob: -0.00011868205183418468
    2. ' D' → logprob: -9.250118255615234
    3. ',' → logprob: -11.375118255615234
    4. ',D' → logprob: -12.375118255615234
    5. '   ' → logprob: -13.125118255615234
    6. ''D' → logprob: -13.750118255615234
    7. '
' → logprob: -14.000118255615234
    8. ',
' → logprob: -14.125118255615234
    9. '  ' → logprob: -14.500118255615234
    10. ' ' → logprob: -14.625118255615234

Token 663: '),
' (ID: 2313)
  Prédit: '),
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),
' → logprob: -0.3143541216850281
    2. '),' → logprob: -1.3143541812896729
    3. ')' → logprob: -7.064353942871094
    4. '),
' → logprob: -9.314353942871094
    5. '           ' → logprob: -9.439353942871094
    6. '),

' → logprob: -10.439353942871094
    7. '       ' → logprob: -11.189353942871094
    8. '   ' → logprob: -11.689353942871094
    9. ')
' → logprob: -12.189353942871094
    10. ' ),
' → logprob: -12.314353942871094

Token 664: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.004613472614437342
    2. 'Face' → logprob: -5.504613399505615
    3. ' Face' → logprob: -7.629613399505615
    4. '       ' → logprob: -10.129613876342773
    5. '   ' → logprob: -11.754613876342773
    6. '          ' → logprob: -14.004613876342773
    7. '               ' → logprob: -15.504613876342773
    8. '            ' → logprob: -16.129613876342773
    9. '         ' → logprob: -16.504613876342773
    10. '		' → logprob: -16.879613876342773

Token 665: ' Face' (ID: 29049)
  Prédit: ' Face'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Face' → logprob: -0.3928169012069702
    2. 'Face' (adapté à ' Face') → logprob: -1.1428169012069702
    3. '           ' → logprob: -5.14281702041626
    4. '   ' → logprob: -9.767816543579102
    5. '       ' → logprob: -11.392816543579102
    6. ' ' → logprob: -12.267816543579102
    7. '    ' → logprob: -12.892816543579102
    8. '          ' → logprob: -13.392816543579102
    9. '            ' → logprob: -13.392816543579102
    10. ' face' → logprob: -13.892816543579102

Token 666: '(Vertex' (ID: 175535)
  Prédit: '(Vertex'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(Vertex' → logprob: -0.00040290577453561127
    2. ' (' → logprob: -8.250402450561523
    3. 'Vertex' → logprob: -9.375402450561523
    4. ' Vertex' → logprob: -10.750402450561523
    5. '(' → logprob: -10.875402450561523
    6. '<Vertex' → logprob: -12.375402450561523
    7. 'Face' → logprob: -12.750402450561523
    8. '.Vertex' → logprob: -13.125402450561523
    9. '(
' → logprob: -13.125402450561523
    10. '   ' → logprob: -13.875402450561523

Token 667: '.A' (ID: 1336)
  Prédit: '.A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.A' → logprob: -0.010473129339516163
    2. 'A' → logprob: -5.010473251342773
    3. '   ' → logprob: -6.385473251342773
    4. '.C' → logprob: -7.010473251342773
    5. '(Vertex' → logprob: -8.260473251342773
    6. '.D' → logprob: -8.510473251342773
    7. '.Vertex' → logprob: -9.010473251342773
    8. ' ' → logprob: -9.135473251342773
    9. ' .' → logprob: -9.385473251342773
    10. '(' → logprob: -9.760473251342773

Token 668: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00011391390580683947
    2. ' ,' → logprob: -9.125113487243652
    3. ',
' → logprob: -13.375113487243652
    4. '`,' → logprob: -14.375113487243652
    5. '(Vertex' → logprob: -14.500113487243652
    6. 'C' → logprob: -14.750113487243652
    7. ',C' → logprob: -14.750113487243652
    8. '   ' → logprob: -15.500113487243652
    9. ')' → logprob: -15.625113487243652
    10. '<|end|>' → logprob: -15.750113487243652

Token 669: ' Vertex' (ID: 49245)
  Prédit: 'Vertex'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Vertex' → logprob: -0.2016722708940506
    2. ' Vertex' → logprob: -1.7016723155975342
    3. 'C' → logprob: -8.951672554016113
    4. '(Vertex' → logprob: -9.951672554016113
    5. ' ' → logprob: -10.326672554016113
    6. ' C' → logprob: -10.576672554016113
    7. '.Vertex' → logprob: -12.076672554016113
    8. ' vertex' → logprob: -12.076672554016113
    9. '<Vertex' → logprob: -12.076672554016113
    10. '_vertex' → logprob: -13.201672554016113

Token 670: '.C' (ID: 2010)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.5776797533035278
    2. 'C' → logprob: -0.8276797533035278
    3. ',C' → logprob: -6.577679634094238
    4. ',
' → logprob: -8.827679634094238
    5. ' ,' → logprob: -9.202679634094238
    6. ' C' → logprob: -9.577679634094238
    7. '',' → logprob: -11.952679634094238
    8. '   ' → logprob: -12.702679634094238
    9. '.C' → logprob: -12.952679634094238
    10. '_C' → logprob: -12.952679634094238

Token 671: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -3.7146746763028204e-05
    2. ' ,' → logprob: -10.75003719329834
    3. ',
' → logprob: -11.12503719329834
    4. 'Vertex' → logprob: -16.000036239624023
    5. ',
' → logprob: -16.250036239624023
    6. ',

' → logprob: -16.250036239624023
    7. '   ' → logprob: -16.375036239624023
    8. '(Vertex' → logprob: -16.375036239624023
    9. '),' → logprob: -16.500036239624023
    10. ' ' → logprob: -16.500036239624023

Token 672: ' Vertex' (ID: 49245)
  Prédit: 'Vertex'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Vertex' → logprob: -0.01107093133032322
    2. ' Vertex' → logprob: -4.511070728302002
    3. '(Vertex' → logprob: -10.88607120513916
    4. '   ' → logprob: -13.63607120513916
    5. '.Vertex' → logprob: -14.26107120513916
    6. '<Vertex' → logprob: -14.38607120513916
    7. ' ' → logprob: -14.51107120513916
    8. '           ' → logprob: -14.76107120513916
    9. ' vertex' → logprob: -15.01107120513916
    10. 'vertex' → logprob: -15.38607120513916

Token 673: '.D' (ID: 1696)
  Prédit: 'D'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'D' → logprob: -0.48507973551750183
    2. ',' → logprob: -0.9850797653198242
    3. ',D' → logprob: -4.610079765319824
    4. '   ' → logprob: -7.360079765319824
    5. ' D' → logprob: -8.610079765319824
    6. ' ,' → logprob: -9.610079765319824
    7. ',
' → logprob: -10.360079765319824
    8. ' ' → logprob: -10.610079765319824
    9. '  ' → logprob: -10.985079765319824
    10. '.D' → logprob: -11.610079765319824

Token 674: '),
' (ID: 2313)
  Prédit: '),
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),
' → logprob: -0.06301677227020264
    2. '),' → logprob: -2.813016891479492
    3. '           ' → logprob: -7.813016891479492
    4. '       ' → logprob: -8.188016891479492
    5. ')' → logprob: -8.313016891479492
    6. '   ' → logprob: -10.563016891479492
    7. '),
' → logprob: -10.813016891479492
    8. ' ),
' → logprob: -10.813016891479492
    9. ')
' → logprob: -11.188016891479492
    10. ')]' → logprob: -11.313016891479492

Token 675: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0002574057725723833
    2. 'Face' → logprob: -8.50025749206543
    3. ' Face' → logprob: -10.62525749206543
    4. '   ' → logprob: -10.87525749206543
    5. '       ' → logprob: -11.62525749206543
    6. '          ' → logprob: -13.62525749206543
    7. '         ' → logprob: -16.00025749206543
    8. '               ' → logprob: -16.25025749206543
    9. '            ' → logprob: -16.50025749206543
    10. '		' → logprob: -16.87525749206543

Token 676: ' Face' (ID: 29049)
  Prédit: ' Face'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Face' → logprob: -0.12694595754146576
    2. 'Face' (adapté à ' Face') → logprob: -2.126945972442627
    3. '           ' → logprob: -11.251945495605469
    4. '   ' → logprob: -12.626945495605469
    5. ' face' → logprob: -14.876945495605469
    6. '       ' → logprob: -15.001945495605469
    7. ' ' → logprob: -15.501945495605469
    8. '    ' → logprob: -16.12694549560547
    9. '_face' → logprob: -16.12694549560547
    10. 'face' → logprob: -16.37694549560547

Token 677: '(Vertex' (ID: 175535)
  Prédit: '(Vertex'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(Vertex' → logprob: -0.02903304062783718
    2. 'Face' → logprob: -3.7790329456329346
    3. '(F' → logprob: -5.904033184051514
    4. ' (' → logprob: -6.654033184051514
    5. ' Face' → logprob: -6.904033184051514
    6. 'Vertex' → logprob: -7.654033184051514
    7. '(' → logprob: -8.779032707214355
    8. ' Vertex' → logprob: -9.904032707214355
    9. '(
' → logprob: -10.279032707214355
    10. '(V' → logprob: -12.404032707214355

Token 678: '.B' (ID: 2611)
  Prédit: '.B'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.B' → logprob: -0.0024338087532669306
    2. '.' → logprob: -7.002433776855469
    3. 'B' → logprob: -7.127433776855469
    4. ' .' → logprob: -8.002433776855469
    5. '.D' → logprob: -9.502433776855469
    6. ').' → logprob: -9.627433776855469
    7. '   ' → logprob: -9.877433776855469
    8. '.Vertex' → logprob: -10.252433776855469
    9. ' B' → logprob: -10.627433776855469
    10. ''.' → logprob: -11.002433776855469

Token 679: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0013836899306625128
    2. ' ,' → logprob: -6.6263837814331055
    3. 'C' → logprob: -10.626383781433105
    4. ',C' → logprob: -10.876383781433105
    5. ',
' → logprob: -11.376383781433105
    6. '<|end|>' → logprob: -14.251383781433105
    7. ' C' → logprob: -14.376383781433105
    8. ')' → logprob: -15.126383781433105
    9. '),' → logprob: -15.501383781433105
    10. '‌,' → logprob: -15.626383781433105

Token 680: ' Vertex' (ID: 49245)
  Prédit: 'Vertex'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Vertex' → logprob: -0.20146119594573975
    2. ' Vertex' → logprob: -1.7014611959457397
    3. '(Vertex' → logprob: -10.326460838317871
    4. 'C' → logprob: -11.951460838317871
    5. '.Vertex' → logprob: -12.951460838317871
    6. ' ' → logprob: -12.951460838317871
    7. ' vertex' → logprob: -13.701460838317871
    8. ' C' → logprob: -14.326460838317871
    9. '<Vertex' → logprob: -14.326460838317871
    10. '
' → logprob: -14.576460838317871

Token 681: '.C' (ID: 2010)
  Prédit: 'C'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'C' → logprob: -0.0015481874579563737
    2. ' C' → logprob: -7.0015482902526855
    3. ',' → logprob: -7.3765482902526855
    4. ')' → logprob: -12.501547813415527
    5. '<|end|>' → logprob: -13.001547813415527
    6. ',C' → logprob: -13.501547813415527
    7. ' ,' → logprob: -13.751547813415527
    8. ' ' → logprob: -13.876547813415527
    9. ',
' → logprob: -14.501547813415527
    10. '),' → logprob: -15.626547813415527

Token 682: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0003598952607717365
    2. ' ,' → logprob: -8.625359535217285
    3. ',
' → logprob: -8.875359535217285
    4. 'Vertex' → logprob: -10.625359535217285
    5. ' Vertex' → logprob: -11.875359535217285
    6. ' ' → logprob: -13.250359535217285
    7. '(Vertex' → logprob: -13.250359535217285
    8. ')' → logprob: -13.625359535217285
    9. '),' → logprob: -14.125359535217285
    10. '   ' → logprob: -14.625359535217285

Token 683: ' Vertex' (ID: 49245)
  Prédit: 'Vertex'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Vertex' → logprob: -0.10023600608110428
    2. ' Vertex' → logprob: -2.350235939025879
    3. 'D' → logprob: -11.100235939025879
    4. '(Vertex' → logprob: -11.225235939025879
    5. '<Vertex' → logprob: -14.850235939025879
    6. '.Vertex' → logprob: -15.225235939025879
    7. ' ' → logprob: -15.850235939025879
    8. ' vertex' → logprob: -16.475236892700195
    9. '
' → logprob: -16.600236892700195
    10. ' D' → logprob: -16.975236892700195

Token 684: '.D' (ID: 1696)
  Prédit: 'D'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'D' → logprob: -0.0005056116497144103
    2. ' D' → logprob: -7.625505447387695
    3. '	D' → logprob: -12.125505447387695
    4. ',D' → logprob: -12.375505447387695
    5. ' ' → logprob: -13.625505447387695
    6. ',' → logprob: -13.625505447387695
    7. '   ' → logprob: -13.875505447387695
    8. '.D' → logprob: -13.875505447387695
    9. ')' → logprob: -14.000505447387695
    10. '<D' → logprob: -14.250505447387695

Token 685: '),
' (ID: 2313)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.09138654172420502
    2. ')]' → logprob: -2.591386556625366
    3. ')
' → logprob: -5.216386318206787
    4. '       ' → logprob: -5.716386318206787
    5. ')])' → logprob: -5.716386318206787
    6. '])' → logprob: -8.716386795043945
    7. ']' → logprob: -9.341386795043945
    8. '   ' → logprob: -9.716386795043945
    9. ')]
' → logprob: -10.341386795043945
    10. '),' → logprob: -11.091386795043945

Token 686: '       ' (ID: 309)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.5807287693023682
    2. '       ' → logprob: -0.8307287693023682
    3. '   ' → logprob: -5.455728530883789
    4. ')' → logprob: -8.205728530883789
    5. '])' → logprob: -9.080728530883789
    6. ']
' → logprob: -9.830728530883789
    7. ' ]' → logprob: -10.330728530883789
    8. ']}' → logprob: -11.330728530883789
    9. ']

' → logprob: -11.955728530883789
    10. '}' → logprob: -12.705728530883789

Token 687: ' ]
' (ID: 10213)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.06452678143978119
    2. '   ' → logprob: -3.4395267963409424
    3. ')' → logprob: -3.9395267963409424
    4. '])' → logprob: -5.314526557922363
    5. '       ' → logprob: -5.314526557922363
    6. ' ]' → logprob: -6.939526557922363
    7. ']
' (adapté à ' ]
') → logprob: -10.064526557922363
    8. '<|end|>' → logprob: -10.564526557922363
    9. ')]' → logprob: -11.064526557922363
    10. ' ])' → logprob: -11.564526557922363

Token 688: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 689: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.47449448704719543
    2. '   ' → logprob: -2.224494457244873
    3. '<|end|>' → logprob: -2.224494457244873
    4. 'self' → logprob: -2.474494457244873
    5. 'def' → logprob: -3.224494457244873
    6. '
' → logprob: -3.974494457244873
    7. ' self' → logprob: -5.224494457244873
    8. '#' (adapté à ' #') → logprob: -5.474494457244873
    9. ' ' → logprob: -5.849494457244873
    10. '```' → logprob: -6.224494457244873

Token 690: ' Map' (ID: 7343)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.2583382725715637
    2. 'self' → logprob: -1.508338212966919
    3. 'def' → logprob: -5.383338451385498
    4. 'pass' → logprob: -7.133338451385498
    5. ' #' → logprob: -8.13333797454834
    6. 'for' → logprob: -8.75833797454834
    7. 'face' → logprob: -9.25833797454834
    8. '   ' → logprob: -9.38333797454834
    9. ' self' → logprob: -9.50833797454834
    10. 'import' → logprob: -9.75833797454834

Token 691: ' from' (ID: 591)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.6662520170211792
    2. 'self' → logprob: -1.2912520170211792
    3. ' self' → logprob: -2.7912521362304688
    4. ' edges' → logprob: -3.0412521362304688
    5. '       ' → logprob: -3.9162521362304688
    6. 'edges' → logprob: -3.9162521362304688
    7. 'face' → logprob: -4.041252136230469
    8. ' from' → logprob: -4.416252136230469
    9. 'edge' → logprob: -4.916252136230469
    10. '_edge' → logprob: -5.166252136230469

Token 692: ' unordered' (ID: 131528)
  Prédit: 'Edge'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Edge' → logprob: -0.7583009600639343
    2. 'Face' → logprob: -1.383301019668579
    3. 'face' → logprob: -1.883301019668579
    4. 'edges' → logprob: -3.258301019668579
    5. 'each' → logprob: -3.383301019668579
    6. 'faces' → logprob: -3.758301019668579
    7. 'edge' → logprob: -4.13330078125
    8. 'Vertex' → logprob: -5.38330078125
    9. ' Edge' → logprob: -6.00830078125
    10. 'vertices' → logprob: -6.25830078125

Token 693: ' edge' (ID: 11165)
  Prédit: ' edges'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' edges' → logprob: -1.2162450551986694
    2. 'Edge' → logprob: -1.3412450551986694
    3. 'edges' → logprob: -2.091245174407959
    4. ' pairs' → logprob: -2.091245174407959
    5. 'pairs' → logprob: -2.841245174407959
    6. 'edge' → logprob: -3.091245174407959
    7. ' Edge' → logprob: -3.591245174407959
    8. ' edge' → logprob: -3.716245174407959
    9. 'fro' → logprob: -4.216245174407959
    10. '_edge' → logprob: -5.091245174407959

Token 694: ' to' (ID: 316)
  Prédit: ' to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' to' → logprob: -0.402808278799057
    2. 'to' → logprob: -1.2778083086013794
    3. 's' → logprob: -3.02780818939209
    4. ':' → logprob: -6.65280818939209
    5. ' ->' → logprob: -6.77780818939209
    6. ' tuple' → logprob: -7.77780818939209
    7. ' pairs' → logprob: -8.02780818939209
    8. ' tuples' → logprob: -8.15280818939209
    9. ' (' → logprob: -8.40280818939209
    10. ' :' → logprob: -8.90280818939209

Token 695: ' adjacent' (ID: 39069)
  Prédit: 'List'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'List' → logprob: -0.1189536303281784
    2. 'list' → logprob: -3.1189537048339844
    3. 'faces' → logprob: -3.4939537048339844
    4. ' List' → logprob: -4.618953704833984
    5. 'the' → logprob: -4.618953704833984
    6. '[List' → logprob: -5.118953704833984
    7. 'adj' → logprob: -5.493953704833984
    8. ' list' → logprob: -5.493953704833984
    9. 'set' → logprob: -6.993953704833984
    10. ' adjacent' → logprob: -7.618953704833984

Token 696: ' faces' (ID: 22060)
  Prédit: 'faces'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'faces' → logprob: -0.043456874787807465
    2. ' faces' → logprob: -3.168456792831421
    3. '_faces' → logprob: -8.16845703125
    4. 'face' → logprob: -9.54345703125
    5. '[' → logprob: -9.91845703125
    6. '.faces' → logprob: -11.16845703125
    7. '{' → logprob: -11.66845703125
    8. '[f' → logprob: -12.04345703125
    9. 'Faces' → logprob: -12.29345703125
    10. 'fro' → logprob: -12.79345703125

Token 697: ' (' (ID: 350)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.38328665494918823
    2. '       ' → logprob: -1.258286714553833
    3. ' self' → logprob: -3.508286714553833
    4. '{' → logprob: -6.258286476135254
    5. ' =' → logprob: -7.383286476135254
    6. '
' → logprob: -7.508286476135254
    7. ':' → logprob: -7.758286476135254
    8. '(self' → logprob: -8.508286476135254
    9. ',' → logprob: -8.633286476135254
    10. '{
' → logprob: -9.508286476135254

Token 698: 'exact' (ID: 86898)
  Prédit: '{'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '{' → logprob: -1.2873523235321045
    2. 'set' → logprob: -1.6623523235321045
    3. 'List' → logprob: -2.2873523235321045
    4. ')' → logprob: -2.5373523235321045
    5. '[]' → logprob: -2.5373523235321045
    6. 'list' → logprob: -3.0373523235321045
    7. '[])' → logprob: -3.0373523235321045
    8. 'faces' → logprob: -3.9123523235321045
    9. ' set' → logprob: -4.037352561950684
    10. 'Dict' → logprob: -4.162352561950684

Token 699: 'ly' (ID: 423)
  Prédit: 'ly'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ly' → logprob: -0.29694250226020813
    2. ')' → logprob: -1.6719424724578857
    3. ' edges' → logprob: -4.171942710876465
    4. '{' → logprob: -4.421942710876465
    5. ' ' → logprob: -4.796942710876465
    6. ' mapping' → logprob: -5.171942710876465
    7. '_edges' → logprob: -5.421942710876465
    8. ' {' → logprob: -5.921942710876465
    9. '[' → logprob: -6.046942710876465
    10. ' mappings' → logprob: -6.296942710876465

Token 700: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.010620813816785812
    2. ' two' → logprob: -5.135620594024658
    3. ' ' → logprob: -6.010620594024658
    4. 'two' → logprob: -6.135620594024658
    5. '{' → logprob: -10.010621070861816
    6. '[' → logprob: -11.385621070861816
    7. ')' → logprob: -12.260621070861816
    8. ' {' → logprob: -13.885621070861816
    9. '   ' → logprob: -14.385621070861816
    10. '```' → logprob: -14.760621070861816

Token 701: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.00014537633978761733
    2. 'two' → logprob: -9.625144958496094
    3. ' ' → logprob: -9.750144958496094
    4. ' two' → logprob: -10.875144958496094
    5. '{' → logprob: -13.375144958496094
    6. 'list' → logprob: -15.125144958496094
    7. '[' → logprob: -16.000144958496094
    8. 'set' → logprob: -17.250144958496094
    9. '[]' → logprob: -17.875144958496094
    10. 'fro' → logprob: -18.000144958496094

Token 702: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.46368110179901123
    2. ' edges' → logprob: -1.0886811017990112
    3. ')
' → logprob: -3.713681221008301
    4. '):
' → logprob: -5.838681221008301
    5. '):' → logprob: -5.963681221008301
    6. 'edges' → logprob: -6.088681221008301
    7. ' objects' → logprob: -6.838681221008301
    8. '   ' → logprob: -7.963681221008301
    9. ' for' → logprob: -8.2136812210083
    10. ':' → logprob: -9.3386812210083

Token 703: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.16066205501556396
    2. 'self' → logprob: -1.910662055015564
    3. ' self' → logprob: -8.035661697387695
    4. '
' → logprob: -9.285661697387695
    5. '(self' → logprob: -11.785661697387695
    6. '   ' → logprob: -12.535661697387695
    7. '{' → logprob: -12.785661697387695
    8. '        
' → logprob: -13.285661697387695
    9. '	self' → logprob: -14.160661697387695
    10. ' ' → logprob: -14.285661697387695

Token 704: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.00036275613820180297
    2. '       ' → logprob: -8.500362396240234
    3. ' self' → logprob: -8.750362396240234
    4. 'from' → logprob: -14.375362396240234
    5. '   ' → logprob: -15.750362396240234
    6. '#' → logprob: -17.375362396240234
    7. '	self' → logprob: -17.375362396240234
    8. '(self' → logprob: -17.875362396240234
    9. '        
' → logprob: -18.500362396240234
    10. '{' → logprob: -18.875362396240234

Token 705: '.edge' (ID: 112308)
  Prédit: '.edge'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.edge' → logprob: -0.038161635398864746
    2. '._' → logprob: -4.038161754608154
    3. '.edges' → logprob: -4.288161754608154
    4. '.ad' → logprob: -6.038161754608154
    5. '_edge' → logprob: -6.788161754608154
    6. '.' → logprob: -6.788161754608154
    7. 'edge' → logprob: -7.163161754608154
    8. '.face' → logprob: -8.038161277770996
    9. 'edges' → logprob: -9.788161277770996
    10. '_edges' → logprob: -9.913161277770996

Token 706: '_to' (ID: 5089)
  Prédit: '_to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_to' → logprob: -0.006979748606681824
    2. '_faces' → logprob: -5.006979942321777
    3. '_face' → logprob: -9.506979942321777
    4. '2' → logprob: -9.506979942321777
    5. '_adj' → logprob: -9.631979942321777
    6. 'to' → logprob: -11.006979942321777
    7. '_map' → logprob: -11.006979942321777
    8. '_ad' → logprob: -11.631979942321777
    9. 'To' → logprob: -12.881979942321777
    10. 's' → logprob: -13.006979942321777

Token 707: '_faces' (ID: 158689)
  Prédit: 'faces'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'faces' → logprob: -0.07225524634122849
    2. '_faces' → logprob: -2.6972551345825195
    3. ' faces' → logprob: -6.1972551345825195
    4. 'face' → logprob: -8.57225513458252
    5. 'edges' → logprob: -10.19725513458252
    6. 'adj' → logprob: -10.69725513458252
    7. '{' → logprob: -11.69725513458252
    8. 'fac' → logprob: -12.07225513458252
    9. '.faces' → logprob: -12.32225513458252
    10. '_face' → logprob: -12.94725513458252

Token 708: ':' (ID: 25)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.18900622427463531
    2. '=' → logprob: -1.8140062093734741
    3. ':' → logprob: -4.689006328582764
    4. '   ' → logprob: -12.064005851745605
    5. ' :' → logprob: -12.189005851745605
    6. ' ' → logprob: -12.314005851745605
    7. '[' → logprob: -12.814005851745605
    8. '{' → logprob: -13.064005851745605
    9. '={' → logprob: -13.814005851745605
    10. ' ={' → logprob: -14.564005851745605

Token 709: ' Dict' (ID: 55179)
  Prédit: 'Dict'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Dict' → logprob: -0.00861468818038702
    2. ' Dict' → logprob: -4.758614540100098
    3. 'dict' → logprob: -16.008615493774414
    4. '.Dict' → logprob: -18.633615493774414
    5. 'List' → logprob: -19.258615493774414
    6. '_dict' → logprob: -19.633615493774414
    7. ' dict' → logprob: -19.758615493774414
    8. '[' → logprob: -20.008615493774414
    9. 'Dic' → logprob: -20.008615493774414
    10. 'Dictionary' → logprob: -20.133615493774414

Token 710: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -2.2842308680992573e-05
    2. ' =' → logprob: -10.875022888183594
    3. '[
' → logprob: -13.250022888183594
    4. '<Edge' → logprob: -14.000022888183594
    5. '```' → logprob: -15.000022888183594
    6. '=' → logprob: -15.250022888183594
    7. ' [' → logprob: -15.375022888183594
    8. '   ' → logprob: -16.125022888183594
    9. '       ' → logprob: -16.375022888183594
    10. '[Index' → logprob: -16.625022888183594

Token 711: 'Edge' (ID: 16577)
  Prédit: 'Edge'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Edge' → logprob: -7.541112427134067e-05
    2. '[' → logprob: -9.500075340270996
    3. ' Edge' → logprob: -14.875075340270996
    4. '<Edge' → logprob: -15.625075340270996
    5. 'Edges' → logprob: -18.250076293945312
    6. 'edge' → logprob: -18.875076293945312
    7. '   ' → logprob: -19.625076293945312
    8. '.Edge' → logprob: -19.875076293945312
    9. '_edge' → logprob: -20.500076293945312
    10. 'EDGE' → logprob: -20.500076293945312

Token 712: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0004958406207151711
    2. ',List' → logprob: -7.875495910644531
    3. ' ,' → logprob: -9.250495910644531
    4. '[List' → logprob: -11.375495910644531
    5. '[' → logprob: -12.375495910644531
    6. ']' → logprob: -12.875495910644531
    7. ',set' → logprob: -14.625495910644531
    8. '[int' → logprob: -15.250495910644531
    9. ',list' → logprob: -15.375495910644531
    10. '   ' → logprob: -16.50049591064453

Token 713: ' List' (ID: 2655)
  Prédit: 'List'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'List' → logprob: -0.0036151588428765535
    2. ' List' → logprob: -5.628615379333496
    3. 'Tuple' → logprob: -12.003615379333496
    4. '[List' → logprob: -12.128615379333496
    5. 'Set' → logprob: -12.878615379333496
    6. '   ' → logprob: -15.003615379333496
    7. 'list' → logprob: -15.128615379333496
    8. '	List' → logprob: -15.503615379333496
    9. ' ' → logprob: -16.12861442565918
    10. 'set' → logprob: -17.12861442565918

Token 714: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -1.2233183042553719e-05
    2. ']' → logprob: -12.125012397766113
    3. 'Face' → logprob: -12.625012397766113
    4. '[
' → logprob: -13.375012397766113
    5. ']=' → logprob: -14.125012397766113
    6. '[int' → logprob: -15.375012397766113
    7. '=' → logprob: -15.500012397766113
    8. '```' → logprob: -15.625012397766113
    9. 'face' → logprob: -15.875012397766113
    10. '[str' → logprob: -16.625011444091797

Token 715: 'Face' (ID: 23402)
  Prédit: 'Face'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Face' → logprob: -5.9153885558771435e-06
    2. '[' → logprob: -12.125005722045898
    3. ' Face' → logprob: -15.000005722045898
    4. 'face' → logprob: -18.3750057220459
    5. '_face' → logprob: -20.1250057220459
    6. '.Face' → logprob: -20.2500057220459
    7. ']' → logprob: -20.6250057220459
    8. 'FACE' → logprob: -20.7500057220459
    9. '   ' → logprob: -21.8750057220459
    10. 'Faces' → logprob: -21.8750057220459

Token 716: ']]' (ID: 8928)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -3.2378600735682994e-05
    2. ']=' → logprob: -10.875032424926758
    3. ']]' → logprob: -11.625032424926758
    4. ' ]' → logprob: -12.500032424926758
    5. '[' → logprob: -15.250032424926758
    6. '   ' → logprob: -16.125032424926758
    7. '>]' → logprob: -16.125032424926758
    8. ']
' → logprob: -16.875032424926758
    9. '>' → logprob: -16.875032424926758
    10. ']>' → logprob: -17.000032424926758

Token 717: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.12692883610725403
    2. ' =' → logprob: -2.1269288063049316
    3. ']' → logprob: -15.50192928314209
    4. '[' → logprob: -15.75192928314209
    5. '   ' → logprob: -15.75192928314209
    6. ' ' → logprob: -16.001928329467773
    7. ']=' → logprob: -16.751928329467773
    8. ')' → logprob: -17.001928329467773
    9. '=[]' → logprob: -18.001928329467773
    10. ')=' → logprob: -18.251928329467773

Token 718: ' {}
' (ID: 11421)
  Prédit: '{}'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '{}' → logprob: -0.16304412484169006
    2. '{' → logprob: -1.9130440950393677
    3. '{
' → logprob: -6.288043975830078
    4. '{}
' → logprob: -7.913043975830078
    5. ' {}' → logprob: -8.288043975830078
    6. 'default' → logprob: -8.538043975830078
    7. 'dict' → logprob: -9.663043975830078
    8. ' {' → logprob: -9.913043975830078
    9. ' defaultdict' → logprob: -10.913043975830078
    10. '{}

' → logprob: -12.038043975830078

Token 719: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00040576665196567774
    2. ' for' → logprob: -8.375405311584473
    3. 'for' → logprob: -9.125405311584473
    4. '   ' → logprob: -9.875405311584473
    5. '<|end|>' → logprob: -11.875405311584473
    6. '	' → logprob: -12.500405311584473
    7. '```' → logprob: -14.000405311584473
    8. '           ' → logprob: -14.375405311584473
    9. '	for' → logprob: -14.750405311584473
    10. ')' → logprob: -14.875405311584473

Token 720: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.0490141324698925
    2. ' for' → logprob: -3.674014091491699
    3. '       ' → logprob: -3.799014091491699
    4. '	for' → logprob: -10.0490140914917
    5. '   ' → logprob: -11.1740140914917
    6. '	' → logprob: -12.5490140914917
    7. ' ' → logprob: -13.4240140914917
    8. 'For' → logprob: -14.6740140914917
    9. '<|end|>' → logprob: -14.7990140914917
    10. '```' → logprob: -14.9240140914917

Token 721: ' e' (ID: 319)
  Prédit: 'edge'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'edge' → logprob: -0.044537391513586044
    2. 'e' → logprob: -3.794537305831909
    3. 'face' → logprob: -3.919537305831909
    4. ' edge' → logprob: -6.794537544250488
    5. ' e' → logprob: -10.044537544250488
    6. 'f' → logprob: -10.794537544250488
    7. ' face' → logprob: -11.169537544250488
    8. '   ' → logprob: -12.544537544250488
    9. '(edge' → logprob: -12.794537544250488
    10. 'Edge' → logprob: -13.169537544250488

Token 722: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.008643528446555138
    2. 'in' → logprob: -4.758643627166748
    3. 'n' → logprob: -12.13364315032959
    4. ' ' → logprob: -12.25864315032959
    5. 'e' → logprob: -12.38364315032959
    6. 'import' → logprob: -13.32114315032959
    7. ' i' → logprob: -13.38364315032959
    8. 'd' → logprob: -13.75864315032959
    9. 'dge' → logprob: -13.75864315032959
    10. 'self' → logprob: -13.82114315032959

Token 723: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.00019018957391381264
    2. ' self' → logprob: -8.625189781188965
    3. '[self' → logprob: -12.000189781188965
    4. '(self' → logprob: -13.125189781188965
    5. '[' → logprob: -13.375189781188965
    6. '{' → logprob: -14.875189781188965
    7. '[
' → logprob: -15.125189781188965
    8. '
' → logprob: -17.12519073486328
    9. '	self' → logprob: -17.25019073486328
    10. '   ' → logprob: -17.25019073486328

Token 724: '.edges' (ID: 102481)
  Prédit: '.edges'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.edges' → logprob: -0.0006427380722016096
    2. 'edges' → logprob: -7.375642776489258
    3. 'self' → logprob: -11.875642776489258
    4. '.' → logprob: -13.000642776489258
    5. '.faces' → logprob: -13.000642776489258
    6. ' edges' → logprob: -13.375642776489258
    7. ' .' → logprob: -14.500642776489258
    8. '_edges' → logprob: -14.500642776489258
    9. '.vertices' → logprob: -15.000642776489258
    10. '(edges' → logprob: -15.000642776489258

Token 725: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.01823621802031994
    2. ':
' → logprob: -4.01823616027832
    3. '           ' → logprob: -10.39323616027832
    4. '       ' → logprob: -10.89323616027832
    5. ' :' → logprob: -11.14323616027832
    6. ':
' → logprob: -11.76823616027832
    7. ',' → logprob: -12.26823616027832
    8. '   ' → logprob: -12.64323616027832
    9. '=' → logprob: -13.01823616027832
    10. ' :
' → logprob: -14.26823616027832

Token 726: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0011815387988463044
    2. 'self' → logprob: -7.001181602478027
    3. 'for' → logprob: -9.376181602478027
    4. 'faces' → logprob: -10.251181602478027
    5. ' self' → logprob: -10.376181602478027
    6. '       ' → logprob: -10.376181602478027
    7. ' for' → logprob: -10.751181602478027
    8. '   ' → logprob: -11.126181602478027
    9. 'face' → logprob: -11.751181602478027
    10. '```' → logprob: -12.001181602478027

Token 727: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.12494605034589767
    2. 'adj' → logprob: -2.749946117401123
    3. '           ' → logprob: -2.999946117401123
    4. 'faces' → logprob: -6.624946117401123
    5. '   ' → logprob: -6.874946117401123
    6. ' self' → logprob: -7.249946117401123
    7. '       ' → logprob: -7.999946117401123
    8. '               ' → logprob: -9.374945640563965
    9. 'for' → logprob: -9.874945640563965
    10. 'connected' → logprob: -9.999945640563965

Token 728: '.edge' (ID: 112308)
  Prédit: '.edge'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.edge' → logprob: -9.198043699143454e-05
    2. 'edge' → logprob: -10.125091552734375
    3. '.edges' → logprob: -10.375091552734375
    4. '=edge' → logprob: -11.125091552734375
    5. '.' → logprob: -12.500091552734375
    6. '_edge' → logprob: -14.250091552734375
    7. ' .' → logprob: -14.625091552734375
    8. '.e' → logprob: -14.750091552734375
    9. '.face' → logprob: -15.625091552734375
    10. '.Edge' → logprob: -16.250091552734375

Token 729: '_to' (ID: 5089)
  Prédit: '_to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_to' → logprob: -7.896309739408025e-07
    2. '._' → logprob: -15.250000953674316
    3. 'to' → logprob: -15.750000953674316
    4. '.' → logprob: -15.875000953674316
    5. 'To' → logprob: -17.25
    6. '.to' → logprob: -17.625
    7. '_edges' → logprob: -17.75
    8. '   ' → logprob: -17.875
    9. 's' → logprob: -18.25
    10. 'e' → logprob: -18.25

Token 730: '_faces' (ID: 158689)
  Prédit: '_faces'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_faces' → logprob: -0.0003099599271081388
    2. 'faces' → logprob: -8.125309944152832
    3. '_edges' → logprob: -12.125309944152832
    4. 'e' → logprob: -12.375309944152832
    5. '[e' → logprob: -13.500309944152832
    6. 'self' → logprob: -13.750309944152832
    7. 'Faces' → logprob: -14.750309944152832
    8. '{' → logprob: -15.500309944152832
    9. '```' → logprob: -15.625309944152832
    10. '.faces' → logprob: -15.875309944152832

Token 731: '[e' (ID: 51414)
  Prédit: '[e'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[e' → logprob: -0.00012928384239785373
    2. 'e' → logprob: -10.125129699707031
    3. '[' → logprob: -10.250129699707031
    4. ' =' → logprob: -10.750129699707031
    5. '=' → logprob: -11.375129699707031
    6. ' [' → logprob: -11.625129699707031
    7. '=e' → logprob: -12.375129699707031
    8. '[
' → logprob: -13.875129699707031
    9. 's' → logprob: -14.125129699707031
    10. ' e' → logprob: -14.250129699707031

Token 732: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.001048646867275238
    2. ']=' → logprob: -7.001048564910889
    3. '=' → logprob: -9.501049041748047
    4. ' ]' → logprob: -10.001049041748047
    5. ' =' → logprob: -11.001049041748047
    6. ')' → logprob: -15.876049041748047
    7. '[' → logprob: -16.626049041748047
    8. '=[]' → logprob: -17.376049041748047
    9. ' ' → logprob: -17.751049041748047
    10. ']=(' → logprob: -17.876049041748047

Token 733: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.029757659882307053
    2. ' =' → logprob: -3.5297577381134033
    3. '=[]' → logprob: -12.029757499694824
    4. '=[' → logprob: -14.279757499694824
    5. ']' → logprob: -15.279757499694824
    6. ']=' → logprob: -15.529757499694824
    7. ' =[' → logprob: -16.90475845336914
    8. '[' → logprob: -17.40475845336914
    9. ' ' → logprob: -17.77975845336914
    10. '=

' → logprob: -18.15475845336914

Token 734: ' []
' (ID: 8911)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.970002293586731
    2. '[]' → logprob: -0.970002293586731
    3. '[e' → logprob: -1.470002293586731
    4. '[
' → logprob: -4.720002174377441
    5. '[]
' → logprob: -6.345002174377441
    6. '[f' → logprob: -8.220002174377441
    7. '[t' → logprob: -9.470002174377441
    8. ' [' → logprob: -9.720002174377441
    9. '[event' → logprob: -10.095002174377441
    10. '[next' → logprob: -10.095002174377441

Token 735: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.029151031747460365
    2. '<|end|>' → logprob: -4.27915096282959
    3. 'for' → logprob: -4.65415096282959
    4. ' for' → logprob: -5.27915096282959
    5. '           ' → logprob: -9.40415096282959
    6. '<|end|>' → logprob: -9.52915096282959
    7. '   ' → logprob: -10.52915096282959
    8. '	' → logprob: -11.40415096282959
    9. '	for' → logprob: -11.40415096282959
    10. '[' → logprob: -11.52915096282959

Token 736: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.0014190420042723417
    2. ' for' → logprob: -7.0014190673828125
    3. '       ' → logprob: -7.6264190673828125
    4. '           ' → logprob: -10.876419067382812
    5. '   ' → logprob: -14.626419067382812
    6. '	for' → logprob: -14.876419067382812
    7. '               ' → logprob: -16.376419067382812
    8. '<|end|>' → logprob: -17.126419067382812
    9. ' ' → logprob: -17.751419067382812
    10. 'For' → logprob: -17.876419067382812

Token 737: ' f' (ID: 285)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.007889220491051674
    2. 'face' → logprob: -4.882889270782471
    3. ' f' → logprob: -8.257888793945312
    4. ' face' → logprob: -10.882888793945312
    5. '   ' → logprob: -12.882888793945312
    6. '	f' → logprob: -13.882888793945312
    7. 'F' → logprob: -14.257888793945312
    8. ' ' → logprob: -15.632888793945312
    9. 'fac' → logprob: -15.882888793945312
    10. 'Face' → logprob: -16.132888793945312

Token 738: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0021888066548854113
    2. 'in' → logprob: -6.127188682556152
    3. ' ' → logprob: -13.502188682556152
    4. 'n' → logprob: -14.252188682556152
    5. 's' → logprob: -14.627188682556152
    6. 'e' → logprob: -15.127188682556152
    7. 'import' → logprob: -15.502188682556152
    8. 'f' → logprob: -15.502188682556152
    9. 'i' → logprob: -16.00218963623047
    10. '  ' → logprob: -16.25218963623047

Token 739: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0011848729336634278
    2. ' self' → logprob: -6.751184940338135
    3. '[self' → logprob: -11.501184463500977
    4. '(self' → logprob: -12.501184463500977
    5. '[' → logprob: -15.251184463500977
    6. '	self' → logprob: -15.626184463500977
    7. 'f' → logprob: -15.751184463500977
    8. '   ' → logprob: -16.626184463500977
    9. ' [' → logprob: -17.376184463500977
    10. 'elf' → logprob: -17.376184463500977

Token 740: '.faces' (ID: 78268)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.00013011827832087874
    2. 'faces' → logprob: -9.375129699707031
    3. ' self' → logprob: -10.125129699707031
    4. '.faces' → logprob: -12.875129699707031
    5. '_faces' → logprob: -13.500129699707031
    6. '   ' → logprob: -15.375129699707031
    7. 'elf' → logprob: -15.625129699707031
    8. 's' → logprob: -15.875129699707031
    9. ' faces' → logprob: -16.37512969970703
    10. '
' → logprob: -16.50012969970703

Token 741: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.15533314645290375
    2. '               ' → logprob: -2.4053330421447754
    3. ':' → logprob: -3.1553330421447754
    4. ' if' → logprob: -4.780333042144775
    5. 'if' → logprob: -6.280333042144775
    6. '           ' → logprob: -7.905333042144775
    7. ' in' → logprob: -9.030333518981934
    8. ' :
' → logprob: -9.905333518981934
    9. ',' → logprob: -10.280333518981934
    10. ':
' → logprob: -10.655333518981934

Token 742: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0003654978354461491
    2. '	           ' → logprob: -9.125365257263184
    3. '		       ' → logprob: -9.250365257263184
    4. ' if' → logprob: -10.250365257263184
    5. '           ' → logprob: -10.500365257263184
    6. '	       ' → logprob: -11.125365257263184
    7. '			' → logprob: -11.250365257263184
    8. 'if' → logprob: -11.375365257263184
    9. '<|end|>' → logprob: -11.750365257263184
    10. ',' → logprob: -12.000365257263184

Token 743: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.005783735308796167
    2. ' if' → logprob: -5.255783557891846
    3. '               ' → logprob: -7.630783557891846
    4. '                   ' → logprob: -9.755784034729004
    5. '   ' → logprob: -12.755784034729004
    6. 'If' → logprob: -14.005784034729004
    7. '           ' → logprob: -14.130784034729004
    8. '	if' → logprob: -14.380784034729004
    9. '                ' → logprob: -14.630784034729004
    10. ' ' → logprob: -15.380784034729004

Token 744: ' f' (ID: 285)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.5547704696655273
    2. 'f' → logprob: -0.9297704696655273
    3. ' e' → logprob: -4.054770469665527
    4. ' f' → logprob: -4.304770469665527
    5. '   ' → logprob: -9.054770469665527
    6. ' ' → logprob: -9.617270469665527
    7. '  ' → logprob: -10.742270469665527
    8. '	e' → logprob: -10.929770469665527
    9. '	f' → logprob: -11.554770469665527
    10. '    ' → logprob: -11.929770469665527

Token 745: '.contains' (ID: 13678)
  Prédit: '.contains'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.contains' → logprob: -0.0012689243303611875
    2. '.' → logprob: -7.2512688636779785
    3. '.cont' → logprob: -7.7512688636779785
    4. ' .' → logprob: -10.376269340515137
    5. 'contains' → logprob: -10.626269340515137
    6. '   ' → logprob: -10.876269340515137
    7. '.has' → logprob: -11.001269340515137
    8. '               ' → logprob: -11.626269340515137
    9. '.includes' → logprob: -12.001269340515137
    10. '().' → logprob: -12.501269340515137

Token 746: '_edge' (ID: 43226)
  Prédit: '_edge'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_edge' → logprob: -0.2670869827270508
    2. '_vertex' → logprob: -1.6420869827270508
    3. '(e' → logprob: -3.767086982727051
    4. 'e' → logprob: -4.517086982727051
    5. 'edge' → logprob: -5.392086982727051
    6. 'vertex' → logprob: -7.017086982727051
    7. 'v' → logprob: -7.267086982727051
    8. '(v' → logprob: -9.14208698272705
    9. 'f' → logprob: -9.51708698272705
    10. ' e' → logprob: -9.76708698272705

Token 747: '(e' (ID: 3454)
  Prédit: '(e'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(e' → logprob: -7.703443770878948e-06
    2. '(' → logprob: -12.000007629394531
    3. 'e' → logprob: -14.000007629394531
    4. '(
' → logprob: -14.875007629394531
    5. ' (' → logprob: -15.125007629394531
    6. '((' → logprob: -18.87500762939453
    7. ' e' → logprob: -18.87500762939453
    8. ')' → logprob: -19.50000762939453
    9. '(edge' → logprob: -19.62500762939453
    10. ',e' → logprob: -19.75000762939453

Token 748: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.0452536977827549
    2. '):' → logprob: -3.1702537536621094
    3. 'e' → logprob: -7.045253753662109
    4. ')' → logprob: -8.04525375366211
    5. ' ):
' → logprob: -8.04525375366211
    6. '(e' → logprob: -8.42025375366211
    7. ' e' → logprob: -8.92025375366211
    8. '):
' → logprob: -9.04525375366211
    9. '           ' → logprob: -9.79525375366211
    10. '):

' → logprob: -10.17025375366211

Token 749: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.010798312723636627
    2. '                       ' → logprob: -5.135798454284668
    3. '               ' → logprob: -5.635798454284668
    4. ':' → logprob: -7.635798454284668
    5. ':
' → logprob: -8.385798454284668
    6. 'self' → logprob: -8.510798454284668
    7. ',' → logprob: -9.510798454284668
    8. ' self' → logprob: -9.885798454284668
    9. '):
' → logprob: -10.135798454284668
    10. ' :' → logprob: -10.635798454284668

Token 750: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.002630353905260563
    2. ' self' → logprob: -6.002630233764648
    3. '                   ' → logprob: -8.877630233764648
    4. '               ' → logprob: -11.252630233764648
    5. '                       ' → logprob: -14.127630233764648
    6. '           ' → logprob: -14.252630233764648
    7. '(self' → logprob: -14.627630233764648
    8. '   ' → logprob: -15.627630233764648
    9. '[self' → logprob: -16.12763023376465
    10. '	self' → logprob: -16.50263023376465

Token 751: '.edge' (ID: 112308)
  Prédit: '.edge'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.edge' → logprob: -5.1928003813372925e-05
    2. 'edge' → logprob: -10.000051498413086
    3. '.' → logprob: -12.375051498413086
    4. ' .' → logprob: -13.875051498413086
    5. '.e' → logprob: -15.375051498413086
    6. '=edge' → logprob: -15.625051498413086
    7. ').' → logprob: -15.750051498413086
    8. '.edges' → logprob: -15.875051498413086
    9. '               ' → logprob: -16.000051498413086
    10. '           ' → logprob: -17.125051498413086

Token 752: '_to' (ID: 5089)
  Prédit: '_to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_to' → logprob: -1.27099974633893e-05
    2. 's' → logprob: -12.500012397766113
    3. '.' → logprob: -12.875012397766113
    4. '.to' → logprob: -13.500012397766113
    5. 'To' → logprob: -14.125012397766113
    6. '._' → logprob: -14.375012397766113
    7. 'to' → logprob: -14.375012397766113
    8. '   ' → logprob: -14.875012397766113
    9. '[' → logprob: -15.000012397766113
    10. '.append' → logprob: -15.125012397766113

Token 753: '_faces' (ID: 158689)
  Prédit: '_faces'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_faces' → logprob: -0.026870736852288246
    2. 'faces' → logprob: -3.6518707275390625
    3. 'f' → logprob: -8.651870727539062
    4. 'e' → logprob: -9.026870727539062
    5. 'append' → logprob: -9.276870727539062
    6. 'add' → logprob: -10.151870727539062
    7. 'Faces' → logprob: -10.526870727539062
    8. 'self' → logprob: -10.526870727539062
    9. 'face' → logprob: -11.276870727539062
    10. '   ' → logprob: -11.401870727539062

Token 754: '[e' (ID: 51414)
  Prédit: '[e'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[e' → logprob: -1.8670179997570813e-05
    2. '[' → logprob: -11.750019073486328
    3. 'e' → logprob: -11.875019073486328
    4. '[f' → logprob: -12.750019073486328
    5. '(e' → logprob: -14.625019073486328
    6. ' [' → logprob: -15.500019073486328
    7. 's' → logprob: -15.875019073486328
    8. '[[' → logprob: -16.875019073486328
    9. '   ' → logprob: -17.375019073486328
    10. '[
' → logprob: -17.500019073486328

Token 755: '].' (ID: 1651)
  Prédit: '].'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '].' → logprob: -0.09084229171276093
    2. '[e' → logprob: -2.8408422470092773
    3. '.append' → logprob: -3.5908422470092773
    4. '.' → logprob: -7.465842247009277
    5. 'e' → logprob: -8.840842247009277
    6. ').' → logprob: -9.715842247009277
    7. ' ].' → logprob: -10.590842247009277
    8. ' .' → logprob: -11.215842247009277
    9. '[' → logprob: -11.340842247009277
    10. '.e' → logprob: -11.465842247009277

Token 756: 'append' (ID: 9132)
  Prédit: 'append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'append' → logprob: -1.0087516784551553e-05
    2. '.append' → logprob: -11.62501049041748
    3. ' append' → logprob: -13.75001049041748
    4. 'appen' → logprob: -17.000009536743164
    5. '	append' → logprob: -17.500009536743164
    6. '_append' → logprob: -17.875009536743164
    7. 'Append' → logprob: -18.875009536743164
    8. '   ' → logprob: -19.000009536743164
    9. 'extend' → logprob: -19.125009536743164
    10. 'app' → logprob: -19.250009536743164

Token 757: '(f' (ID: 1526)
  Prédit: '(f'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(f' → logprob: -3.7697225252486533e-06
    2. 'f' → logprob: -12.500003814697266
    3. '(' → logprob: -17.750003814697266
    4. '(
' → logprob: -20.375003814697266
    5. ' f' → logprob: -21.000003814697266
    6. '	f' → logprob: -21.250003814697266
    7. ' (' → logprob: -22.500003814697266
    8. '(e' → logprob: -23.250003814697266
    9. '[f' → logprob: -23.875003814697266
    10. '(s' → logprob: -24.250003814697266

Token 758: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00018816311785485595
    2. ')
' → logprob: -9.125187873840332
    3. '<|end|>' → logprob: -10.250187873840332
    4. '           ' → logprob: -10.875187873840332
    5. '       ' → logprob: -11.125187873840332
    6. ' )' → logprob: -12.250187873840332
    7. '               ' → logprob: -13.625187873840332
    8. '())' → logprob: -14.500187873840332
    9. '))' → logprob: -15.000187873840332
    10. '                   ' → logprob: -15.000187873840332

Token 759: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 760: ' #' (ID: 1069)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 761: ' Check' (ID: 6208)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.11871525645256042
    2. '   ' → logprob: -2.993715286254883
    3. '#' → logprob: -3.493715286254883
    4. ' def' → logprob: -4.743715286254883
    5. 'import' → logprob: -5.368715286254883
    6. '       ' → logprob: -5.493715286254883
    7. 'self' → logprob: -5.743715286254883
    8. '<|end|>' → logprob: -5.868715286254883
    9. '
' → logprob: -6.368715286254883
    10. ' #' → logprob: -6.993715286254883

Token 762: ' validity' (ID: 56294)
  Prédit: ' that'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' that' → logprob: -1.4198883771896362
    2. ' for' → logprob: -1.5448883771896362
    3. 'for' → logprob: -1.6698883771896362
    4. 'assert' → logprob: -1.7948883771896362
    5. 'that' → logprob: -2.794888496398926
    6. ' if' → logprob: -2.919888496398926
    7. '       ' → logprob: -3.669888496398926
    8. 'if' → logprob: -4.419888496398926
    9. 'len' → logprob: -4.669888496398926
    10. ' all' → logprob: -4.669888496398926

Token 763: ':' (ID: 25)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.18186816573143005
    2. ' for' → logprob: -2.181868076324463
    3. 'for' → logprob: -3.181868076324463
    4. 'assert' → logprob: -4.556868076324463
    5. ' if' → logprob: -7.431868076324463
    6. 'if' → logprob: -7.931868076324463
    7. ' assert' → logprob: -7.931868076324463
    8. ':' → logprob: -9.681868553161621
    9. ' of' → logprob: -11.181868553161621
    10. '   ' → logprob: -11.431868553161621

Token 764: ' each' (ID: 2454)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.13405805826187134
    2. ' for' → logprob: -2.1340579986572266
    3. 'assert' → logprob: -5.134057998657227
    4. '       ' → logprob: -6.884057998657227
    5. ' assert' → logprob: -8.634057998657227
    6. 'if' → logprob: -11.884057998657227
    7. 'all' → logprob: -13.259057998657227
    8. ' if' → logprob: -14.134057998657227
    9. ' all' → logprob: -15.509057998657227
    10. '```' → logprob: -15.884057998657227

Token 765: ' edge' (ID: 11165)
  Prédit: ' edge'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' edge' → logprob: -0.3879278004169464
    2. 'edge' → logprob: -1.137927770614624
    3. 'e' → logprob: -7.262928009033203
    4. 'Edge' → logprob: -8.137928009033203
    5. ' e' → logprob: -11.387928009033203
    6. '_edge' → logprob: -11.512928009033203
    7. ' ' → logprob: -12.012928009033203
    8. ' Edge' → logprob: -12.137928009033203
    9. '   ' → logprob: -12.637928009033203
    10. ' of' → logprob: -12.762928009033203

Token 766: ' belongs' (ID: 33063)
  Prédit: 'should'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'should' → logprob: -0.6623022556304932
    2. 'must' → logprob: -1.4123022556304932
    3. ' should' → logprob: -2.662302255630493
    4. 'has' → logprob: -3.037302255630493
    5. ' must' → logprob: -3.162302255630493
    6. 'is' → logprob: -3.912302255630493
    7. ' has' → logprob: -4.037302017211914
    8. ' connects' → logprob: -4.287302017211914
    9. ' is' → logprob: -4.412302017211914
    10. 'connect' → logprob: -4.537302017211914

Token 767: ' to' (ID: 316)
  Prédit: 'to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'to' → logprob: -0.4291768968105316
    2. ' to' → logprob: -1.054176926612854
    3. ' exactly' → logprob: -8.179177284240723
    4. '       ' → logprob: -9.679177284240723
    5. 'exact' → logprob: -9.929177284240723
    6. '   ' → logprob: -9.929177284240723
    7. '_to' → logprob: -11.429177284240723
    8. '           ' → logprob: -11.554177284240723
    9. '    ' → logprob: -12.429177284240723
    10. '        ' → logprob: -12.804177284240723

Token 768: ' exactly' (ID: 9707)
  Prédit: 'exact'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'exact' → logprob: -0.5385792851448059
    2. ' exactly' → logprob: -1.0385792255401611
    3. '2' → logprob: -2.913579225540161
    4. 'two' → logprob: -5.28857946395874
    5. ' two' → logprob: -6.03857946395874
    6. ' ' → logprob: -7.28857946395874
    7. 'len' → logprob: -10.413578987121582
    8. 'Exactly' → logprob: -10.913578987121582
    9. ' exact' → logprob: -12.788578987121582
    10. '[' → logprob: -12.788578987121582

Token 769: ' two' (ID: 1920)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.05087675899267197
    2. ' two' → logprob: -3.3008768558502197
    3. 'two' → logprob: -4.675876617431641
    4. ' ' → logprob: -5.675876617431641
    5. '   ' → logprob: -12.55087661743164
    6. 'exact' → logprob: -13.05087661743164
    7. '[' → logprob: -13.67587661743164
    8. ' exactly' → logprob: -14.30087661743164
    9. '_two' → logprob: -15.05087661743164
    10. 'Two' → logprob: -15.92587661743164

Token 770: ' faces' (ID: 22060)
  Prédit: ' faces'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' faces' → logprob: -0.07017672806978226
    2. 'faces' → logprob: -2.695176839828491
    3. '_faces' → logprob: -9.94517707824707
    4. ' face' → logprob: -10.19517707824707
    5. 'face' → logprob: -10.44517707824707
    6. '       ' → logprob: -10.94517707824707
    7. '   ' → logprob: -11.19517707824707
    8. '.faces' → logprob: -11.32017707824707
    9. '
' → logprob: -11.44517707824707
    10. ' edges' → logprob: -11.57017707824707

Token 771: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00031699295504949987
    2. 'for' → logprob: -8.625316619873047
    3. 'assert' → logprob: -9.625316619873047
    4. ' for' → logprob: -9.875316619873047
    5. '           ' → logprob: -11.375316619873047
    6. '   ' → logprob: -13.000316619873047
    7. ',' → logprob: -13.125316619873047
    8. '<|end|>' → logprob: -13.625316619873047
    9. '
' → logprob: -14.625316619873047
    10. 'if' → logprob: -14.875316619873047

Token 772: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -9.341087570646778e-05
    2. ' for' → logprob: -10.375093460083008
    3. '   ' → logprob: -11.125093460083008
    4. 'for' → logprob: -11.250093460083008
    5. 'assert' → logprob: -11.375093460083008
    6. '           ' → logprob: -11.625093460083008
    7. '<|end|>' → logprob: -11.750093460083008
    8. ',' → logprob: -13.500093460083008
    9. ')' → logprob: -13.875093460083008
    10. '```' → logprob: -14.500093460083008

Token 773: ' for' (ID: 395)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.026031451299786568
    2. 'for' (adapté à ' for') → logprob: -3.776031494140625
    3. ' for' → logprob: -5.901031494140625
    4. 'assert' → logprob: -10.026031494140625
    5. '   ' → logprob: -14.401031494140625
    6. ' assert' → logprob: -15.276031494140625
    7. '           ' → logprob: -15.276031494140625
    8. '```' → logprob: -16.776031494140625
    9. '	for' → logprob: -17.026031494140625
    10. '	' → logprob: -17.276031494140625

Token 774: ' e' (ID: 319)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.014863037504255772
    2. ' e' → logprob: -4.389863014221191
    3. 'edge' → logprob: -6.139863014221191
    4. ' edge' → logprob: -8.889863014221191
    5. 'edges' → logprob: -11.139863014221191
    6. '   ' → logprob: -11.639863014221191
    7. '```' → logprob: -12.577363014221191
    8. '_e' → logprob: -12.702363014221191
    9. '       ' → logprob: -12.952363014221191
    10. 'face' → logprob: -13.077363014221191

Token 775: ',' (ID: 11)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.002485050121322274
    2. 'in' → logprob: -6.002485275268555
    3. 'self' → logprob: -12.377485275268555
    4. ',' → logprob: -12.877485275268555
    5. ' ' → logprob: -14.127485275268555
    6. ' self' → logprob: -15.127485275268555
    7. '   ' → logprob: -15.252485275268555
    8. '       ' → logprob: -15.377485275268555
    9. '           ' → logprob: -15.877485275268555
    10. ' e' → logprob: -16.252485275268555

Token 776: ' fl' (ID: 1548)
  Prédit: 'faces'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'faces' → logprob: -0.3563978672027588
    2. 'fs' → logprob: -1.2313978672027588
    3. ' fs' → logprob: -5.73139762878418
    4. ' faces' → logprob: -5.85639762878418
    5. 'f' → logprob: -7.10639762878418
    6. 'fl' → logprob: -7.23139762878418
    7. 'adj' → logprob: -9.10639762878418
    8. 'face' → logprob: -9.85639762878418
    9. 'ffs' → logprob: -10.48139762878418
    10. ' fl' → logprob: -10.85639762878418

Token 777: 'ist' (ID: 421)
  Prédit: 'ist'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ist' → logprob: -0.0007268482004292309
    2. ' in' → logprob: -7.375726699829102
    3. 'ists' → logprob: -9.375726699829102
    4. 'st' → logprob: -12.625726699829102
    5. 'in' → logprob: -12.750726699829102
    6. 's' → logprob: -13.250726699829102
    7. ',' → logprob: -13.375726699829102
    8. 'o' → logprob: -14.000726699829102
    9. 'e' → logprob: -14.125726699829102
    10. 'is' → logprob: -14.250726699829102

Token 778: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.06197631359100342
    2. 'in' → logprob: -2.811976432800293
    3. ' ' → logprob: -12.311976432800293
    4. '	in' → logprob: -13.811976432800293
    5. 's' → logprob: -14.061976432800293
    6. 'import' → logprob: -14.061976432800293
    7. '   ' → logprob: -14.936976432800293
    8. ')' → logprob: -14.936976432800293
    9. '_in' → logprob: -15.811976432800293
    10. ',' → logprob: -15.936976432800293

Token 779: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0031817557755857706
    2. ' self' → logprob: -5.7531819343566895
    3. '(self' → logprob: -12.503181457519531
    4. '[self' → logprob: -16.00318145751953
    5. '	self' → logprob: -16.75318145751953
    6. ' ' → logprob: -17.00318145751953
    7. '{' → logprob: -17.50318145751953
    8. '```' → logprob: -17.50318145751953
    9. '   ' → logprob: -17.62818145751953
    10. '`' → logprob: -18.25318145751953

Token 780: '.edge' (ID: 112308)
  Prédit: '.items'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.items' → logprob: -0.001567353610880673
    2. '.edge' → logprob: -7.001567363739014
    3. '.edges' → logprob: -8.126566886901855
    4. 'edge' → logprob: -8.626566886901855
    5. 'items' → logprob: -9.126566886901855
    6. 'edges' → logprob: -9.876566886901855
    7. 'self' → logprob: -12.376566886901855
    8. '_edge' → logprob: -12.501566886901855
    9. ' .' → logprob: -12.501566886901855
    10. '.' → logprob: -13.251566886901855

Token 781: '_to' (ID: 5089)
  Prédit: '.items'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.items' → logprob: -0.012975155375897884
    2. 's' → logprob: -5.012975215911865
    3. 'to' → logprob: -6.262975215911865
    4. 'items' → logprob: -6.512975215911865
    5. '_to' → logprob: -6.512975215911865
    6. ':' → logprob: -8.137974739074707
    7. '   ' → logprob: -8.262974739074707
    8. '.' → logprob: -8.512974739074707
    9. '       ' → logprob: -8.887974739074707
    10. '.iteritems' → logprob: -8.887974739074707

Token 782: '_faces' (ID: 158689)
  Prédit: 'faces'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'faces' → logprob: -0.0007293514790944755
    2. 'lists' → logprob: -8.00072956085205
    3. 'items' → logprob: -8.87572956085205
    4. 'dict' → logprob: -8.87572956085205
    5. 'list' → logprob: -9.75072956085205
    6. 'pairs' → logprob: -10.37572956085205
    7. 'edges' → logprob: -12.50072956085205
    8. 'face' → logprob: -12.62572956085205
    9. 'check' → logprob: -12.62572956085205
    10. 'f' → logprob: -12.75072956085205

Token 783: '.items' (ID: 19607)
  Prédit: '.items'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.items' → logprob: -1.3902033970225602e-05
    2. 'items' → logprob: -11.750014305114746
    3. '.' → logprob: -13.250014305114746
    4. '.iteritems' → logprob: -13.500014305114746
    5. ' .' → logprob: -13.875014305114746
    6. ':' → logprob: -14.125014305114746
    7. '.values' → logprob: -14.375014305114746
    8. ' items' → logprob: -14.625014305114746
    9. '_items' → logprob: -17.75001335144043
    10. '.keys' → logprob: -18.00001335144043

Token 784: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.16885632276535034
    2. '():
' → logprob: -1.9188563823699951
    3. '()' → logprob: -4.793856143951416
    4. ':' → logprob: -8.918856620788574
    5. '():
' → logprob: -8.918856620788574
    6. ' ():' → logprob: -11.293856620788574
    7. '():

' → logprob: -11.918856620788574
    8. '();' → logprob: -12.418856620788574
    9. '()):
' → logprob: -12.543856620788574
    10. ':
' → logprob: -12.668856620788574

Token 785: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.002214965643361211
    2. '           ' → logprob: -6.1272149085998535
    3. ' if' → logprob: -11.377215385437012
    4. '   ' → logprob: -12.127215385437012
    5. '```' → logprob: -12.502215385437012
    6. '      ' → logprob: -13.127215385437012
    7. ':' → logprob: -13.752215385437012
    8. 'assert' → logprob: -14.002215385437012
    9. '	   ' → logprob: -14.002215385437012
    10. '[' → logprob: -14.127215385437012

Token 786: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.2789049744606018
    2. '           ' → logprob: -1.528904914855957
    3. ' if' → logprob: -3.653904914855957
    4. 'assert' → logprob: -7.653904914855957
    5. '               ' → logprob: -8.528904914855957
    6. '   ' → logprob: -10.028904914855957
    7. '       ' → logprob: -12.278904914855957
    8. ' ' → logprob: -13.653904914855957
    9. ' assert' → logprob: -13.653904914855957
    10. '```' → logprob: -14.403904914855957

Token 787: ' len' (ID: 4631)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.038060080260038376
    2. ' len' → logprob: -3.288060188293457
    3. '           ' → logprob: -10.913060188293457
    4. '(len' → logprob: -14.663060188293457
    5. '               ' → logprob: -17.03805923461914
    6. '	len' → logprob: -17.16305923461914
    7. '   ' → logprob: -17.78805923461914
    8. '[len' → logprob: -18.41305923461914
    9. '=len' → logprob: -18.66305923461914
    10. ',len' → logprob: -18.66305923461914

Token 788: '(f' (ID: 1526)
  Prédit: '(f'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(f' → logprob: -8.2994620242971e-06
    2. 'fl' → logprob: -12.375008583068848
    3. '(fl' → logprob: -14.125008583068848
    4. ' fl' → logprob: -14.375008583068848
    5. '	fl' → logprob: -14.500008583068848
    6. ' (' → logprob: -14.875008583068848
    7. '(flat' → logprob: -15.000008583068848
    8. '(
' → logprob: -15.125008583068848
    9. '(' → logprob: -15.250008583068848
    10. '     ' → logprob: -16.00000762939453

Token 789: 'list' (ID: 2641)
  Prédit: 'fl'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fl' → logprob: -0.08632532507181168
    2. 'list' → logprob: -2.8363254070281982
    3. '(f' → logprob: -4.461325168609619
    4. 'l' → logprob: -5.211325168609619
    5. 'f' → logprob: -5.711325168609619
    6. '(e' → logprob: -7.211325168609619
    7. '_f' → logprob: -7.711325168609619
    8. ' fl' → logprob: -7.961325168609619
    9. '_fl' → logprob: -8.336325645446777
    10. 'alist' → logprob: -8.461325645446777

Token 790: ')' (ID: 8)
  Prédit: ' !='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' !=' → logprob: -0.7008240222930908
    2. ')' → logprob: -0.9508240222930908
    3. '!=' → logprob: -2.325824022293091
    4. ')!=' → logprob: -3.950824022293091
    5. '()!=' → logprob: -8.325823783874512
    6. ' )' → logprob: -9.450823783874512
    7. '()' → logprob: -9.450823783874512
    8. ']!=' → logprob: -10.825823783874512
    9. '[' → logprob: -11.700823783874512
    10. '<|end|>' → logprob: -11.950823783874512

Token 791: ' !=' (ID: 1666)
  Prédit: '!='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '!=' → logprob: -0.38691937923431396
    2. ' !=' → logprob: -1.136919379234314
    3. ')!=' → logprob: -10.386919021606445
    4. '()!=' → logprob: -11.386919021606445
    5. '<' → logprob: -13.261919021606445
    6. ')' → logprob: -14.136919021606445
    7. '!==' → logprob: -14.386919021606445
    8. ']!=' → logprob: -14.511919021606445
    9. '<>' → logprob: -14.636919021606445
    10. '[' → logprob: -14.636919021606445

Token 792: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.033646389842033386
    2. ' ' → logprob: -3.40864634513855
    3. '   ' → logprob: -14.283646583557129
    4. '  ' → logprob: -17.221145629882812
    5. '۲' → logprob: -17.346145629882812
    6. '[' → logprob: -17.658645629882812
    7. '```' → logprob: -17.721145629882812
    8. ' ' → logprob: -18.096145629882812
    9. ' two' → logprob: -18.408645629882812
    10. '       ' → logprob: -18.596145629882812

Token 793: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.00017970333283301443
    2. ' ' → logprob: -8.625179290771484
    3. '   ' → logprob: -16.750179290771484
    4. '۲' → logprob: -17.000179290771484
    5. '```' → logprob: -18.125179290771484
    6. '２' → logprob: -18.812679290771484
    7. '[' → logprob: -18.875179290771484
    8. '  ' → logprob: -19.187679290771484
    9. '=' → logprob: -19.187679290771484
    10. 'two' → logprob: -19.625179290771484

Token 794: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.5770848989486694
    2. ':' → logprob: -0.8270848989486694
    3. '               ' → logprob: -7.827085018157959
    4. '           ' → logprob: -7.827085018157959
    5. '):
' → logprob: -8.4520845413208
    6. ',' → logprob: -10.0770845413208
    7. ' or' → logprob: -10.3270845413208
    8. ')' → logprob: -10.9520845413208
    9. '):' → logprob: -11.3270845413208
    10. ':
' → logprob: -11.7020845413208

Token 795: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0028878487646579742
    2. ':' → logprob: -6.877887725830078
    3. ' raise' → logprob: -7.002887725830078
    4. '           ' → logprob: -7.502887725830078
    5. ':
' → logprob: -8.627887725830078
    6. 'raise' → logprob: -9.002887725830078
    7. ',' → logprob: -10.002887725830078
    8. '):
' → logprob: -11.627887725830078
    9. '       ' → logprob: -11.877887725830078
    10. '                   ' → logprob: -12.502887725830078

Token 796: ' raise' (ID: 9338)
  Prédit: 'raise'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'raise' (adapté à ' raise') → logprob: -0.349547803401947
    2. ' raise' → logprob: -1.3495478630065918
    3. '                   ' → logprob: -3.349547863006592
    4. '               ' → logprob: -8.099547386169434
    5. '   ' → logprob: -8.724547386169434
    6. '	raise' → logprob: -10.099547386169434
    7. 'Raise' → logprob: -11.849547386169434
    8. '_raise' → logprob: -12.474547386169434
    9. '           ' → logprob: -12.599547386169434
    10. '```' → logprob: -12.599547386169434

Token 797: ' Value' (ID: 9963)
  Prédit: 'Value'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Value' → logprob: -0.0002724217774812132
    2. 'Runtime' → logprob: -8.250272750854492
    3. ' Value' → logprob: -11.625272750854492
    4. 'Assertion' → logprob: -13.125272750854492
    5. 'Exception' → logprob: -16.625272750854492
    6. ' Runtime' → logprob: -17.625272750854492
    7. '(Value' → logprob: -17.750272750854492
    8. 'value' → logprob: -18.500272750854492
    9. '_Value' → logprob: -18.875272750854492
    10. '_value' → logprob: -19.000272750854492

Token 798: 'Error' (ID: 2255)
  Prédit: 'Error'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Error' → logprob: -0.00023250321100931615
    2. 'rror' → logprob: -9.000232696533203
    3. 'Value' → logprob: -9.125232696533203
    4. 'alue' → logprob: -16.875232696533203
    5. 'ror' → logprob: -17.750232696533203
    6. 'error' → logprob: -18.375232696533203
    7. 'Val' → logprob: -18.625232696533203
    8. 'r' → logprob: -19.250232696533203
    9. '   ' → logprob: -19.500232696533203
    10. 'Warning' → logprob: -19.875232696533203

Token 799: '(f' (ID: 1526)
  Prédit: '(f'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(f' → logprob: -0.06581924110651016
    2. '("' → logprob: -2.815819263458252
    3. '(' → logprob: -5.565819263458252
    4. '(
' → logprob: -11.190818786621094
    5. '               ' → logprob: -13.565818786621094
    6. 'f' → logprob: -14.065818786621094
    7. ' f' → logprob: -14.565818786621094
    8. '           ' → logprob: -14.565818786621094
    9. '                   ' → logprob: -15.190818786621094
    10. '(F' → logprob: -15.565818786621094

Token 800: '"' (ID: 1)
  Prédit: '(f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(f' → logprob: -0.0070733861066401005
    2. ' f' → logprob: -5.132073402404785
    3. 'f' → logprob: -7.007073402404785
    4. '(' → logprob: -8.382073402404785
    5. '"' → logprob: -12.632073402404785
    6. ')' → logprob: -13.007073402404785
    7. '(
' → logprob: -14.007073402404785
    8. '=f' → logprob: -14.132073402404785
    9. '	f' → logprob: -14.507073402404785
    10. '("' → logprob: -14.757073402404785

Token 801: 'Edge' (ID: 16577)
  Prédit: ' f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' f' → logprob: -0.3972005844116211
    2. 'f' → logprob: -1.272200584411621
    3. 'Edge' → logprob: -3.522200584411621
    4. ' Edge' → logprob: -4.897200584411621
    5. 'Each' → logprob: -4.897200584411621
    6. 'Invalid' → logprob: -6.647200584411621
    7. ' Each' → logprob: -7.522200584411621
    8. 'Edges' → logprob: -8.022200584411621
    9. '"' → logprob: -8.272200584411621
    10. 'All' → logprob: -8.397200584411621

Token 802: ' {' (ID: 354)
  Prédit: ' {'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' {' → logprob: -0.00670826667919755
    2. '{' → logprob: -5.631708145141602
    3. ' e' → logprob: -5.881708145141602
    4. 'e' → logprob: -9.506708145141602
    5. ' '' → logprob: -9.881708145141602
    6. 's' → logprob: -10.131708145141602
    7. ' ' → logprob: -10.631708145141602
    8. '"{' → logprob: -11.006708145141602
    9. ' {}' → logprob: -11.131708145141602
    10. '{s' → logprob: -11.256708145141602

Token 803: 'e' (ID: 68)
  Prédit: 'e'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.13536442816257477
    2. ' e' → logprob: -2.385364532470703
    3. '{' → logprob: -3.510364532470703
    4. ' {' → logprob: -5.385364532470703
    5. '}' → logprob: -10.010364532470703
    6. 'self' → logprob: -12.385364532470703
    7. 's' → logprob: -12.510364532470703
    8. ')' → logprob: -12.510364532470703
    9. '}{' → logprob: -12.885364532470703
    10. '{
' → logprob: -13.010364532470703

Token 804: '}' (ID: 92)
  Prédit: '}'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '}' → logprob: -0.002848029136657715
    2. ' }' → logprob: -6.002848148345947
    3. ' has' → logprob: -8.877847671508789
    4. '}:' → logprob: -9.252847671508789
    5. ')' → logprob: -10.002847671508789
    6. ':' → logprob: -11.002847671508789
    7. ' edges' → logprob: -11.502847671508789
    8. ' belongs' → logprob: -11.752847671508789
    9. ' ' → logprob: -12.127847671508789
    10. '   ' → logprob: -12.627847671508789

Token 805: ' does' (ID: 2226)
  Prédit: ' belongs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' belongs' → logprob: -0.7926586270332336
    2. ' has' → logprob: -1.4176585674285889
    3. ' does' → logprob: -1.6676585674285889
    4. '}' → logprob: -3.167658567428589
    5. 'belongs' → logprob: -3.792658567428589
    6. ')' → logprob: -4.167658805847168
    7. ' must' → logprob: -4.292658805847168
    8. ' is' → logprob: -4.792658805847168
    9. ' not' → logprob: -5.417658805847168
    10. ' edges' → logprob: -6.042658805847168

Token 806: ' not' (ID: 625)
  Prédit: 'not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'not' → logprob: -0.5231826305389404
    2. ' not' → logprob: -0.8981826305389404
    3. 'n't' → logprob: -10.64818286895752
    4. '_' → logprob: -11.39818286895752
    5. '_not' → logprob: -11.77318286895752
    6. '}' → logprob: -12.27318286895752
    7. '#' → logprob: -13.14818286895752
    8. ' ' → logprob: -13.27318286895752
    9. '<|end|>' → logprob: -13.52318286895752
    10. ')' → logprob: -13.52318286895752

Token 807: ' belong' (ID: 20753)
  Prédit: ' have'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' have' → logprob: -0.5402909517288208
    2. ' belong' → logprob: -0.9152909517288208
    3. 'have' → logprob: -4.915290832519531
    4. 'bel' → logprob: -6.290290832519531
    5. ' lie' → logprob: -6.415290832519531
    6. ' appear' → logprob: -6.415290832519531
    7. ' connect' → logprob: -7.040290832519531
    8. ' ' → logprob: -7.290290832519531
    9. ' map' → logprob: -7.665290832519531
    10. ' exist' → logprob: -8.165290832519531

Token 808: ' to' (ID: 316)
  Prédit: ' to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' to' → logprob: -0.044515158981084824
    2. ' exactly' → logprob: -3.4195151329040527
    3. 'to' → logprob: -4.544515132904053
    4. '_to' → logprob: -9.294515609741211
    5. 'exact' → logprob: -9.544515609741211
    6. '_exact' → logprob: -11.169515609741211
    7. ' ' → logprob: -12.544515609741211
    8. ' exact' → logprob: -13.294515609741211
    9. '_' → logprob: -14.294515609741211
    10. ' in' → logprob: -15.294515609741211

Token 809: ' exactly' (ID: 9707)
  Prédit: ' exactly'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' exactly' → logprob: -0.31693992018699646
    2. 'exact' → logprob: -1.4419399499893188
    3. ' two' → logprob: -3.9419398307800293
    4. 'two' → logprob: -4.441939830780029
    5. '2' → logprob: -6.066939830780029
    6. ' ' → logprob: -6.816939830780029
    7. 'both' → logprob: -8.066940307617188
    8. ' both' → logprob: -8.816940307617188
    9. ' exact' → logprob: -10.191940307617188
    10. 'Exactly' → logprob: -10.566940307617188

Token 810: ' two' (ID: 1920)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.8887546062469482
    2. '2' → logprob: -1.0137546062469482
    3. ' two' → logprob: -1.5137546062469482
    4. 'two' → logprob: -5.138754844665527
    5. ' exactly' → logprob: -11.013754844665527
    6. '_two' → logprob: -12.388754844665527
    7. 'Two' → logprob: -13.388754844665527
    8. '[' → logprob: -13.513754844665527
    9. 'exact' → logprob: -13.763754844665527
    10. ' ' → logprob: -13.888754844665527

Token 811: ' faces' (ID: 22060)
  Prédit: ' faces'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' faces' → logprob: -0.03374170884490013
    2. 'faces' → logprob: -3.4087417125701904
    3. ' ' → logprob: -10.28374195098877
    4. '_faces' → logprob: -11.28374195098877
    5. ' distinct' → logprob: -11.65874195098877
    6. ' edges' → logprob: -11.65874195098877
    7. ' face' → logprob: -12.28374195098877
    8. '.faces' → logprob: -12.28374195098877
    9. ' vertices' → logprob: -12.28374195098877
    10. ' spaces' → logprob: -12.40874195098877

Token 812: '")

' (ID: 10822)
  Prédit: '")'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '")' → logprob: -0.004220620729029179
    2. '.")' → logprob: -6.254220485687256
    3. '")
' → logprob: -6.754220485687256
    4. ')' → logprob: -7.379220485687256
    5. '           ' → logprob: -8.379220962524414
    6. ':' → logprob: -9.879220962524414
    7. ')")' → logprob: -9.879220962524414
    8. '       ' → logprob: -10.254220962524414
    9. '}")' → logprob: -10.379220962524414
    10. '.' → logprob: -10.504220962524414

Token 813: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.290536493062973
    2. '
' → logprob: -2.040536403656006
    3. '<|end|>' → logprob: -2.290536403656006
    4. 'def' → logprob: -4.665536403656006
    5. '    
' → logprob: -4.915536403656006
    6. '<|end|>' → logprob: -6.290536403656006
    7. ')' → logprob: -7.915536403656006
    8. '        
' → logprob: -7.915536403656006
    9. '```' → logprob: -7.915536403656006
    10. '

' → logprob: -8.415536880493164

Token 814: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5459136366844177
    2. 'def' → logprob: -1.1709136962890625
    3. '
' → logprob: -2.6709136962890625
    4. '<|end|>' → logprob: -3.7959136962890625
    5. '    
' → logprob: -5.1709136962890625
    6. ' def' → logprob: -5.2959136962890625
    7. '       ' → logprob: -6.0459136962890625
    8. '        
' → logprob: -6.5459136962890625
    9. '<|end|>' → logprob: -6.7959136962890625
    10. ' ' → logprob: -6.7959136962890625

Token 815: ' Pre' (ID: 4659)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.508892297744751
    2. '#' → logprob: -1.133892297744751
    3. 'self' → logprob: -3.133892297744751
    4. 'face' → logprob: -4.008892059326172
    5. '   ' → logprob: -5.258892059326172
    6. 'edge' → logprob: -5.383892059326172
    7. 'import' → logprob: -6.008892059326172
    8. ' #' → logprob: -6.883892059326172
    9. ' def' → logprob: -7.383892059326172
    10. '       ' → logprob: -7.883892059326172

Token 816: 'compute' (ID: 54521)
  Prédit: 'compute'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'compute' → logprob: -0.011117145419120789
    2. 'computed' → logprob: -4.886116981506348
    3. 'c' → logprob: -6.511116981506348
    4. ' compute' → logprob: -7.261116981506348
    5. 'vious' → logprob: -8.511116981506348
    6. '   ' → logprob: -9.011116981506348
    7. '       ' → logprob: -9.011116981506348
    8. 'calculate' → logprob: -9.011116981506348
    9. 'comput' → logprob: -9.011116981506348
    10. 'pare' → logprob: -9.136116981506348

Token 817: ' orth' (ID: 35656)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.38106706738471985
    2. 'face' → logprob: -2.5060670375823975
    3. ' self' → logprob: -2.5060670375823975
    4. ' face' → logprob: -2.7560670375823975
    5. 'edge' → logprob: -2.8810670375823975
    6. ' edge' → logprob: -4.006067276000977
    7. '#' → logprob: -5.381067276000977
    8. '_face' → logprob: -5.756067276000977
    9. 'norm' → logprob: -6.631067276000977
    10. 'edges' → logprob: -6.631067276000977

Token 818: 'on' (ID: 263)
  Prédit: 'on'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'on' → logprob: -0.10023384541273117
    2. 'ogonal' → logprob: -2.350233793258667
    3. 'normal' → logprob: -11.600234031677246
    4. '   ' → logprob: -11.850234031677246
    5. '#' → logprob: -12.600234031677246
    6. ' vectors' → logprob: -13.475234031677246
    7. 'ogon' → logprob: -13.600234031677246
    8. '```' → logprob: -13.600234031677246
    9. 'vectors' → logprob: -14.850234031677246
    10. 'onor' → logprob: -15.100234031677246

Token 819: 'ormal' (ID: 3568)
  Prédit: 'ormal'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ormal' → logprob: -0.4348500072956085
    2. 'al' → logprob: -1.0598499774932861
    3. 'orm' → logprob: -5.309850215911865
    4. 'mal' → logprob: -7.684850215911865
    5. 'ogonal' → logprob: -8.559849739074707
    6. 'onal' → logprob: -9.684849739074707
    7. 'g' → logprob: -9.934849739074707
    8. '#' → logprob: -9.934849739074707
    9. '```' → logprob: -9.934849739074707
    10. 'ral' → logprob: -10.059849739074707

Token 820: ' coordinate' (ID: 30380)
  Prédit: ' basis'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' basis' → logprob: -0.20887430012226105
    2. '_basis' → logprob: -2.583874225616455
    3. ' bases' → logprob: -2.833874225616455
    4. 'basis' → logprob: -3.083874225616455
    5. 'bases' → logprob: -4.958874225616455
    6. ' base' → logprob: -7.958874225616455
    7. ' vectors' → logprob: -8.833874702453613
    8. ' unit' → logprob: -9.208874702453613
    9. ' coordinate' → logprob: -9.333874702453613
    10. '_base' → logprob: -9.333874702453613

Token 821: ' basis' (ID: 9571)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.5529868602752686
    2. ' systems' → logprob: -2.1779868602752686
    3. 'bases' → logprob: -2.3029868602752686
    4. ' bases' → logprob: -2.5529868602752686
    5. 'systems' → logprob: -3.3029868602752686
    6. ' frames' → logprob: -3.3029868602752686
    7. ' axes' → logprob: -3.8029868602752686
    8. 'frames' → logprob: -4.677987098693848
    9. ' system' → logprob: -5.052987098693848
    10. ' vectors' → logprob: -5.177987098693848

Token 822: ' for' (ID: 395)
  Prédit: ' vectors'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' vectors' → logprob: -0.43288007378578186
    2. ' for' → logprob: -1.4328800439834595
    3. 'vectors' → logprob: -3.307880163192749
    4. '_vectors' → logprob: -3.932880163192749
    5. 'for' → logprob: -4.18287992477417
    6. 's' → logprob: -4.18287992477417
    7. 'self' → logprob: -4.55787992477417
    8. '<|end|>' → logprob: -5.30787992477417
    9. '   ' → logprob: -5.68287992477417
    10. ' self' → logprob: -6.30787992477417

Token 823: ' each' (ID: 2454)
  Prédit: 'each'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'each' → logprob: -0.39047184586524963
    2. ' each' → logprob: -1.1404718160629272
    3. 'self' → logprob: -6.640471935272217
    4. 'face' → logprob: -7.140471935272217
    5. '<|end|>' → logprob: -7.765471935272217
    6. 'e' → logprob: -8.515471458435059
    7. ' self' → logprob: -8.890471458435059
    8. ' face' → logprob: -8.890471458435059
    9. ' the' → logprob: -9.390471458435059
    10. 'faces' → logprob: -9.640471458435059

Token 824: ' face' (ID: 4950)
  Prédit: 'face'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'face' → logprob: -0.387193888425827
    2. ' face' → logprob: -1.1371939182281494
    3. '_face' → logprob: -8.38719367980957
    4. 'Face' → logprob: -9.63719367980957
    5. 'class' → logprob: -11.88719367980957
    6. '.face' → logprob: -12.13719367980957
    7. '-face' → logprob: -12.51219367980957
    8. '(face' → logprob: -12.88719367980957
    9. 'vertex' → logprob: -13.01219367980957
    10. ' Face' → logprob: -13.51219367980957

Token 825: ':' (ID: 25)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0018745011184364557
    2. ':' → logprob: -7.6268744468688965
    3. ',' → logprob: -8.126874923706055
    4. ' for' → logprob: -8.126874923706055
    5. '
' → logprob: -8.501874923706055
    6. 'self' → logprob: -8.876874923706055
    7. '<|end|>' → logprob: -9.376874923706055
    8. ' with' → logprob: -9.626874923706055
    9. '        
' → logprob: -9.751874923706055
    10. ':
' → logprob: -10.501874923706055

Token 826: ' used' (ID: 2061)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.34133121371269226
    2. '       ' → logprob: -1.5913312435150146
    3. ' self' → logprob: -2.4663312435150146
    4. '        
' → logprob: -9.341331481933594
    5. 'def' → logprob: -9.591331481933594
    6. 'for' → logprob: -9.716331481933594
    7. '<|end|>' → logprob: -9.716331481933594
    8. ' for' → logprob: -9.716331481933594
    9. '
' → logprob: -9.966331481933594
    10. '   ' → logprob: -10.091331481933594

Token 827: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.3120727837085724
    2. ' for' → logprob: -1.43707275390625
    3. ' to' → logprob: -3.93707275390625
    4. 'to' → logprob: -5.18707275390625
    5. '   ' → logprob: -5.93707275390625
    6. 'in' → logprob: -6.93707275390625
    7. 'self' → logprob: -7.31207275390625
    8. ' in' → logprob: -7.56207275390625
    9. '       ' → logprob: -8.56207275390625
    10. ' ' → logprob: -9.31207275390625

Token 828: ' ' (ID: 220)
  Prédit: 'local'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'local' → logprob: -0.34264305233955383
    2. 'mapping' → logprob: -2.4676430225372314
    3. 'position' → logprob: -2.8426430225372314
    4. 'embedding' → logprob: -2.8426430225372314
    5. 'point' → logprob: -3.8426430225372314
    6. ' local' → logprob: -4.4676432609558105
    7. 'face' → logprob: -4.5926432609558105
    8. 'projection' → logprob: -4.8426432609558105
    9. 'param' → logprob: -4.9676432609558105
    10. 'coordinate' → logprob: -4.9676432609558105

Token 829: '2' (ID: 17)
  Prédit: 'local'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'local' → logprob: -0.5666607022285461
    2. 'position' → logprob: -1.6916606426239014
    3. 'mapping' → logprob: -2.0666606426239014
    4. 'point' → logprob: -3.4416606426239014
    5. 'param' → logprob: -3.9416606426239014
    6. 'coordinate' → logprob: -4.0666608810424805
    7. 'projection' → logprob: -4.4416608810424805
    8. 'face' → logprob: -4.4416608810424805
    9. 'embedding' → logprob: -4.9416608810424805
    10. 'geometry' → logprob: -5.5666608810424805

Token 830: 'D' (ID: 35)
  Prédit: 'D'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'D' → logprob: -0.2024882584810257
    2. 'd' → logprob: -1.7024883031845093
    3. '
' → logprob: -7.452488422393799
    4. '-d' → logprob: -9.32748794555664
    5. '   ' → logprob: -9.45248794555664
    6. 'face' → logprob: -10.07748794555664
    7. 'space' → logprob: -10.07748794555664
    8. ' ' → logprob: -10.32748794555664
    9. '```' → logprob: -10.95248794555664
    10. '-dimensional' → logprob: -11.07748794555664

Token 831: ' parametr' (ID: 175428)
  Prédit: 'coordinate'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'coordinate' → logprob: -1.4248781204223633
    2. 'embedding' → logprob: -1.4248781204223633
    3. 'coordinates' → logprob: -1.7998781204223633
    4. 'parameter' → logprob: -2.1748781204223633
    5. 'param' → logprob: -2.7998781204223633
    6. 'mapping' → logprob: -3.2998781204223633
    7. ' coordinate' → logprob: -3.4248781204223633
    8. ' embedding' → logprob: -3.5498781204223633
    9. ' parameter' → logprob: -4.049878120422363
    10. ' embeddings' → logprob: -4.424878120422363

Token 832: 'ization' (ID: 2860)
  Prédit: 'ization'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ization' → logprob: -0.00013417120499070734
    2. 'ized' → logprob: -9.625134468078613
    3. 'izations' → logprob: -10.875134468078613
    4. 'izing' → logprob: -11.375134468078613
    5. 'ation' → logprob: -11.375134468078613
    6. 'iz' → logprob: -12.250134468078613
    7. '```' → logprob: -12.250134468078613
    8. ' ' → logprob: -12.500134468078613
    9. '   ' → logprob: -13.000134468078613
    10. 'ize' → logprob: -13.125134468078613

Token 833: ' and' (ID: 326)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0021111206151545048
    2. 'self' → logprob: -7.002110958099365
    3. '<|end|>' → logprob: -7.752110958099365
    4. ' for' → logprob: -8.252111434936523
    5. ',' → logprob: -9.252111434936523
    6. 'import' → logprob: -9.502111434936523
    7. ' self' → logprob: -9.752111434936523
    8. '.' → logprob: -9.877111434936523
    9. 'for' → logprob: -10.002111434936523
    10. '        
' → logprob: -10.377111434936523

Token 834: ' angles' (ID: 43448)
  Prédit: 'mapping'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'mapping' → logprob: -0.8341878056526184
    2. 'projection' → logprob: -2.0841877460479736
    3. ' mapping' → logprob: -3.0841877460479736
    4. 'distance' → logprob: -3.2091877460479736
    5. 'transform' → logprob: -3.3341877460479736
    6. 'render' → logprob: -3.3341877460479736
    7. ' rendering' → logprob: -3.5841877460479736
    8. 'b' → logprob: -3.7091877460479736
    9. 'embedding' → logprob: -3.8341877460479736
    10. 'navigation' → logprob: -3.8341877460479736

Token 835: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0019841869361698627
    2. 'self' → logprob: -7.001984119415283
    3. '
' → logprob: -7.876984119415283
    4. ',' → logprob: -8.376984596252441
    5. '<|end|>' → logprob: -9.126984596252441
    6. '.' → logprob: -9.251984596252441
    7. '        
' → logprob: -10.126984596252441
    8. ' for' → logprob: -10.251984596252441
    9. '   ' → logprob: -10.626984596252441
    10. 'import' → logprob: -10.876984596252441

Token 836: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -9.341087570646778e-05
    2. '<|end|>' → logprob: -10.000093460083008
    3. 'self' → logprob: -10.500093460083008
    4. '
' → logprob: -12.625093460083008
    5. '   ' → logprob: -12.750093460083008
    6. ' self' → logprob: -12.875093460083008
    7. '        
' → logprob: -13.000093460083008
    8. ',' → logprob: -13.500093460083008
    9. 'import' → logprob: -13.625093460083008
    10. ' for' → logprob: -14.000093460083008

Token 837: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.04478020966053009
    2. 'self' → logprob: -3.1697802543640137
    3. ' self' → logprob: -6.419780254364014
    4. '   ' → logprob: -9.294779777526855
    5. 'import' → logprob: -10.169779777526855
    6. 'def' → logprob: -12.294779777526855
    7. 'from' → logprob: -12.544779777526855
    8. '
' → logprob: -12.544779777526855
    9. '```' → logprob: -12.794779777526855
    10. '#' (adapté à ' #') → logprob: -14.044779777526855

Token 838: ' For' (ID: 2214)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.294204980134964
    2. 'self' → logprob: -1.4192049503326416
    3. ' self' → logprob: -4.419205188751221
    4. '   ' → logprob: -8.294204711914062
    5. 'import' → logprob: -8.294204711914062
    6. 'for' → logprob: -8.294204711914062
    7. '
' → logprob: -9.669204711914062
    8. ' for' → logprob: -10.169204711914062
    9. 'def' → logprob: -10.544204711914062
    10. '#' → logprob: -11.419204711914062

Token 839: ' each' (ID: 2454)
  Prédit: 'face'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'face' → logprob: -0.744189977645874
    2. 'f' → logprob: -0.994189977645874
    3. 'each' → logprob: -2.869189977645874
    4. ' face' → logprob: -3.494189977645874
    5. ' f' → logprob: -3.619189977645874
    6. 'v' → logprob: -3.994189977645874
    7. ' v' → logprob: -4.869190216064453
    8. ' each' → logprob: -4.994190216064453
    9. 'e' → logprob: -5.744190216064453
    10. 'vertex' → logprob: -6.369190216064453

Token 840: ' face' (ID: 4950)
  Prédit: 'face'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'face' → logprob: -0.5768985152244568
    2. ' face' → logprob: -0.8268985152244568
    3. 'f' → logprob: -7.576898574829102
    4. ' f' → logprob: -8.576898574829102
    5. 'Face' → logprob: -8.951898574829102
    6. '_face' → logprob: -9.451898574829102
    7. ' Face' → logprob: -11.201898574829102
    8. '(face' → logprob: -11.326898574829102
    9. '.face' → logprob: -12.451898574829102
    10. '-face' → logprob: -12.764398574829102

Token 841: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.06201227381825447
    2. ':' → logprob: -3.687012195587158
    3. 'self' → logprob: -4.937012195587158
    4. '       ' → logprob: -5.062012195587158
    5. ':
' → logprob: -5.187012195587158
    6. '   ' → logprob: -5.937012195587158
    7. 'f' → logprob: -6.062012195587158
    8. ' in' → logprob: -6.187012195587158
    9. ' ,' → logprob: -6.312012195587158
    10. ' f' → logprob: -6.437012195587158

Token 842: ' store' (ID: 4897)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.4261559247970581
    2. 'for' → logprob: -2.5511560440063477
    3. 'vs' → logprob: -2.6761560440063477
    4. 'self' → logprob: -2.8011560440063477
    5. 'face' → logprob: -3.0511560440063477
    6. ' v' → logprob: -3.5511560440063477
    7. 'p' → logprob: -3.9261560440063477
    8. '   ' → logprob: -4.676156044006348
    9. ' for' → logprob: -5.551156044006348
    10. '#' → logprob: -5.551156044006348

Token 843: ' tuple' (ID: 31311)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.2190319001674652
    2. ' self' → logprob: -1.9690319299697876
    3. ' a' → logprob: -4.094031810760498
    4. '   ' → logprob: -4.469031810760498
    5. '(
' → logprob: -4.844031810760498
    6. '{
' → logprob: -4.969031810760498
    7. '(self' → logprob: -5.344031810760498
    8. 'a' → logprob: -6.094031810760498
    9. ' (' → logprob: -6.344031810760498
    10. ' the' → logprob: -7.594031810760498

Token 844: ' (' (ID: 350)
  Prédit: '(
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(
' → logprob: -0.7561149597167969
    2. '(' → logprob: -1.5061149597167969
    3. '(self' → logprob: -1.5061149597167969
    4. ' (' → logprob: -3.006114959716797
    5. '[' → logprob: -4.631114959716797
    6. ' =' → logprob: -5.006114959716797
    7. ' (
' → logprob: -5.631114959716797
    8. 'self' → logprob: -5.631114959716797
    9. ':' → logprob: -6.006114959716797
    10. '[
' → logprob: -6.256114959716797

Token 845: 'origin' (ID: 28202)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.6688819527626038
    2. '(self' → logprob: -2.043881893157959
    3. '(
' → logprob: -2.043881893157959
    4. 'u' → logprob: -2.668881893157959
    5. 'origin' → logprob: -2.918881893157959
    6. 'e' → logprob: -3.793881893157959
    7. '(u' → logprob: -4.418881893157959
    8. ' (' → logprob: -4.793881893157959
    9. '(v' → logprob: -5.043881893157959
    10. '(f' → logprob: -5.043881893157959

Token 846: '=' (ID: 28)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00015133652777876705
    2. ' ,' → logprob: -9.250151634216309
    3. ',
' → logprob: -10.875151634216309
    4. '_,' → logprob: -11.250151634216309
    5. '   ' → logprob: -12.250151634216309
    6. '),' → logprob: -12.625151634216309
    7. ')' → logprob: -12.750151634216309
    8. '=' → logprob: -13.125151634216309
    9. '_vertex' → logprob: -13.250151634216309
    10. ' ' → logprob: -13.750151634216309

Token 847: 'vertex' (ID: 25298)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.061837367713451385
    2. '(self' → logprob: -3.0618374347686768
    3. 'tuple' → logprob: -5.686837196350098
    4. 'v' → logprob: -5.936837196350098
    5. '(
' → logprob: -6.811837196350098
    6. '
' → logprob: -7.061837196350098
    7. ' self' → logprob: -7.061837196350098
    8. ')' → logprob: -7.311837196350098
    9. '(' → logprob: -7.436837196350098
    10. 'p' → logprob: -7.561837196350098

Token 848: 'A' (ID: 32)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.7761887311935425
    2. 'A' → logprob: -0.7761887311935425
    3. '_A' → logprob: -3.026188850402832
    4. '_a' → logprob: -5.026188850402832
    5. ' ,' → logprob: -5.026188850402832
    6. '_coords' → logprob: -5.401188850402832
    7. '1' → logprob: -6.026188850402832
    8. '   ' → logprob: -6.526188850402832
    9. ' A' → logprob: -6.526188850402832
    10. ')' → logprob: -6.776188850402832

Token 849: ' in' (ID: 306)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.006434456445276737
    2. ' ,' → logprob: -5.631434440612793
    3. ',
' → logprob: -7.006434440612793
    4. 'A' → logprob: -7.256434440612793
    5. '[' → logprob: -7.756434440612793
    6. '),' → logprob: -8.131434440612793
    7. ',A' → logprob: -9.006434440612793
    8. ')' → logprob: -9.381434440612793
    9. '(Vertex' → logprob: -9.756434440612793
    10. ' ' → logprob: -11.006434440612793

Token 850: ' face' (ID: 4950)
  Prédit: 'face'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'face' → logprob: -0.6201757192611694
    2. '3' → logprob: -1.1201757192611694
    3. 'self' → logprob: -2.620175838470459
    4. 'f' → logprob: -3.620175838470459
    5. 'the' → logprob: -4.370175838470459
    6. 'local' → logprob: -5.245175838470459
    7. 'v' → logprob: -5.870175838470459
    8. 'vertices' → logprob: -5.995175838470459
    9. '(self' → logprob: -6.620175838470459
    10. ' face' → logprob: -6.745175838470459

Token 851: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.015215786173939705
    2. '[' → logprob: -4.765215873718262
    3. ' ,' → logprob: -6.515215873718262
    4. '),' → logprob: -6.640215873718262
    5. '_vs' → logprob: -6.890215873718262
    6. '.v' → logprob: -7.015215873718262
    7. 'vs' → logprob: -8.015215873718262
    8. ')' → logprob: -8.140215873718262
    9. ',v' → logprob: -8.140215873718262
    10. ',
' → logprob: -8.265215873718262

Token 852: ' vector' (ID: 9727)
  Prédit: 'u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'u' → logprob: -0.507232666015625
    2. 'e' → logprob: -1.882232666015625
    3. ' u' → logprob: -2.257232666015625
    4. 'basis' → logprob: -3.007232666015625
    5. ' basis' → logprob: -3.757232666015625
    6. ' e' → logprob: -3.757232666015625
    7. '   ' → logprob: -4.382232666015625
    8. 'v' → logprob: -4.757232666015625
    9. 'edge' → logprob: -5.132232666015625
    10. ' ' → logprob: -5.757232666015625

Token 853: '_u' (ID: 17063)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.23795057833194733
    2. '_u' → logprob: -1.7379505634307861
    3. 'u' → logprob: -3.987950563430786
    4. 'AB' → logprob: -4.862950801849365
    5. '_ab' → logprob: -5.987950801849365
    6. 'U' → logprob: -6.362950801849365
    7. '_a' → logprob: -7.237950801849365
    8. '   ' → logprob: -7.487950801849365
    9. '_' → logprob: -7.612950801849365
    10. 's' → logprob: -7.612950801849365

Token 854: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.003288582433015108
    2. '=' → logprob: -5.878288745880127
    3. ' ,' → logprob: -8.628288269042969
    4. '_,' → logprob: -9.753288269042969
    5. ')' → logprob: -9.878288269042969
    6. '),' → logprob: -9.878288269042969
    7. '1' → logprob: -10.503288269042969
    8. 's' → logprob: -10.753288269042969
    9. ' =' → logprob: -11.128288269042969
    10. ',
' → logprob: -11.253288269042969

Token 855: ' vector' (ID: 9727)
  Prédit: ' vector'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' vector' → logprob: -0.3484482169151306
    2. 'vector' → logprob: -1.2234482765197754
    3. '	vector' → logprob: -13.723447799682617
    4. '   ' → logprob: -14.473447799682617
    5. ' ' → logprob: -14.973447799682617
    6. '_vector' → logprob: -15.348447799682617
    7. ' ' → logprob: -15.348447799682617
    8. '(vector' → logprob: -15.473447799682617
    9. '<vector' → logprob: -15.473447799682617
    10. 'vec' → logprob: -15.598447799682617

Token 856: '_v' (ID: 5390)
  Prédit: '_w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_w' → logprob: -0.38493478298187256
    2. '_v' → logprob: -2.384934902191162
    3. '_b' → logprob: -2.509934902191162
    4. '_a' → logprob: -2.884934902191162
    5. '1' → logprob: -3.384934902191162
    6. ')' → logprob: -3.884934902191162
    7. ',' → logprob: -4.509934902191162
    8. '_ab' → logprob: -5.259934902191162
    9. '_' → logprob: -6.259934902191162
    10. '_u' → logprob: -6.384934902191162

Token 857: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0027192833367735147
    2. ')
' → logprob: -6.127719402313232
    3. ',' → logprob: -8.252718925476074
    4. '):' → logprob: -9.127718925476074
    5. '   ' → logprob: -10.127718925476074
    6. ' )' → logprob: -10.377718925476074
    7. '):
' → logprob: -10.877718925476074
    8. ')

' → logprob: -10.877718925476074
    9. '),' → logprob: -10.877718925476074
    10. ')=' → logprob: -11.252718925476074

Token 858: ' defining' (ID: 49491)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.06868412345647812
    2. '
' → logprob: -2.8186841011047363
    3. '        
' → logprob: -5.568684101104736
    4. 'self' → logprob: -7.193684101104736
    5. '<|end|>' → logprob: -7.193684101104736
    6. '   ' → logprob: -7.818684101104736
    7. 'import' → logprob: -8.193684577941895
    8. ',' → logprob: -8.443684577941895
    9. '<|end|>' → logprob: -9.943684577941895
    10. '    
' → logprob: -10.068684577941895

Token 859: ' ' (ID: 220)
  Prédit: 'the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'the' → logprob: -0.7944613695144653
    2. ' the' → logprob: -1.2944613695144653
    3. 'a' → logprob: -2.544461250305176
    4. 'local' → logprob: -2.669461250305176
    5. ' local' → logprob: -3.044461250305176
    6. ' a' → logprob: -3.419461250305176
    7. 'face' → logprob: -4.544461250305176
    8. ' an' → logprob: -4.794461250305176
    9. ' plane' → logprob: -5.044461250305176
    10. 'plane' → logprob: -5.419461250305176

Token 860: '2' (ID: 17)
  Prédit: 'the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'the' → logprob: -0.6763988733291626
    2. 'local' → logprob: -1.4263988733291626
    3. 'a' → logprob: -3.176398754119873
    4. 'face' → logprob: -3.176398754119873
    5. 'orth' → logprob: -3.426398754119873
    6. ' the' → logprob: -3.551398754119873
    7. ' local' → logprob: -3.801398754119873
    8. 'plane' → logprob: -4.051398754119873
    9. 'basis' → logprob: -4.051398754119873
    10. 'an' → logprob: -4.176398754119873

Token 861: 'D' (ID: 35)
  Prédit: 'D'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'D' → logprob: -0.44125041365623474
    2. 'd' → logprob: -1.0662504434585571
    3. 'points' → logprob: -5.941250324249268
    4. ' orth' → logprob: -6.191250324249268
    5. ' points' → logprob: -6.441250324249268
    6. ' vectors' → logprob: -7.316250324249268
    7. 'orth' → logprob: -7.566250324249268
    8. '-' → logprob: -7.816250324249268
    9. 'vectors' → logprob: -7.816250324249268
    10. '   ' → logprob: -7.816250324249268

Token 862: ' coords' (ID: 53253)
  Prédit: ' basis'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' basis' → logprob: -0.061976201832294464
    2. '_basis' → logprob: -3.811976194381714
    3. 'basis' → logprob: -4.061976432800293
    4. ' coordinate' → logprob: -4.186976432800293
    5. 'coordinate' → logprob: -6.061976432800293
    6. ' coordinates' → logprob: -6.561976432800293
    7. 'coordinates' → logprob: -6.936976432800293
    8. '_coordinate' → logprob: -8.311976432800293
    9. '_coordinates' → logprob: -8.811976432800293
    10. '_coords' → logprob: -9.436976432800293

Token 863: ' in' (ID: 306)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.02412434294819832
    2. '
' → logprob: -4.6491241455078125
    3. 'self' → logprob: -4.8991241455078125
    4. ',' → logprob: -6.6491241455078125
    5. ' for' → logprob: -6.7741241455078125
    6. '        
' → logprob: -7.0241241455078125
    7. '   ' → logprob: -7.2741241455078125
    8. ' self' → logprob: -8.024124145507812
    9. ':' → logprob: -8.149124145507812
    10. '.' → logprob: -8.399124145507812

Token 864: ' plane' (ID: 16499)
  Prédit: '3'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '3' → logprob: -0.31686630845069885
    2. 'face' → logprob: -1.9418662786483765
    3. 'the' → logprob: -2.691866397857666
    4. 'self' → logprob: -4.316866397857666
    5. 'R' → logprob: -4.441866397857666
    6. '   ' → logprob: -4.566866397857666
    7. 'space' → logprob: -5.316866397857666
    8. ' the' → logprob: -5.441866397857666
    9. 'that' → logprob: -5.816866397857666
    10. 'plane' → logprob: -5.816866397857666

Token 865: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.012456088326871395
    2. 'self' → logprob: -5.762455940246582
    3. ' for' → logprob: -6.262455940246582
    4. '
' → logprob: -6.762455940246582
    5. ',' → logprob: -6.887455940246582
    6. '.' → logprob: -7.012455940246582
    7. '   ' → logprob: -7.262455940246582
    8. '(self' → logprob: -7.637455940246582
    9. 'for' → logprob: -7.637455940246582
    10. '        
' → logprob: -7.762455940246582

Token 866: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0034891199320554733
    2. '<|end|>' → logprob: -5.878489017486572
    3. '
' → logprob: -8.37848949432373
    4. '        
' → logprob: -9.00348949432373
    5. ')' → logprob: -9.25348949432373
    6. '   ' → logprob: -9.50348949432373
    7. 'import' → logprob: -10.62848949432373
    8. '<|end|>' → logprob: -10.62848949432373
    9. 'self' → logprob: -10.75348949432373
    10. ',' → logprob: -10.87848949432373

Token 867: ' self' (ID: 1051)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.25547173619270325
    2. 'self' (adapté à ' self') → logprob: -1.5054717063903809
    3. ' self' → logprob: -6.005471706390381
    4. '
' → logprob: -7.630471706390381
    5. 'def' → logprob: -8.505472183227539
    6. '   ' → logprob: -8.755472183227539
    7. '```' → logprob: -9.005472183227539
    8. 'import' → logprob: -10.255472183227539
    9. ')' → logprob: -11.380472183227539
    10. '        
' → logprob: -11.505472183227539

Token 868: '.face' (ID: 92193)
  Prédit: '.face'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.face' → logprob: -0.021063553169369698
    2. '._' → logprob: -3.8960635662078857
    3. '.faces' → logprob: -8.271063804626465
    4. '.origin' → logprob: -9.521063804626465
    5. '_face' → logprob: -9.896063804626465
    6. '.orig' → logprob: -10.271063804626465
    7. '.coordinate' → logprob: -10.771063804626465
    8. '.coord' → logprob: -11.396063804626465
    9. '.b' → logprob: -11.521063804626465
    10. '.f' → logprob: -11.521063804626465

Token 869: '_b' (ID: 1535)
  Prédit: '_b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_b' → logprob: -0.6279046535491943
    2. '_basis' → logprob: -1.6279046535491943
    3. '_to' → logprob: -1.7529046535491943
    4. '_coords' → logprob: -3.3779046535491943
    5. '_coordinate' → logprob: -3.7529046535491943
    6. '_coordinates' → logprob: -4.252904891967773
    7. '_orig' → logprob: -4.252904891967773
    8. '_coord' → logprob: -5.502904891967773
    9. '_' → logprob: -6.127904891967773
    10. '_base' → logprob: -7.127904891967773

Token 870: 'ases' (ID: 4324)
  Prédit: 'ases'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ases' → logprob: -0.19811810553073883
    2. 'ase' → logprob: -2.198118209838867
    3. 'asis' → logprob: -2.698118209838867
    4. '_b' → logprob: -7.073118209838867
    5. 'as' → logprob: -8.448118209838867
    6. 'bases' → logprob: -8.698118209838867
    7. '_' → logprob: -9.448118209838867
    8. '_basis' → logprob: -10.073118209838867
    9. 'basis' → logprob: -12.073118209838867
    10. '_to' → logprob: -12.448118209838867

Token 871: ':' (ID: 25)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0559176430106163
    2. '=' → logprob: -2.930917739868164
    3. ':' → logprob: -7.180917739868164
    4. '[' → logprob: -8.430917739868164
    5. '   ' → logprob: -10.680917739868164
    6. '={}' → logprob: -11.680917739868164
    7. '={' → logprob: -11.930917739868164
    8. '{' → logprob: -12.430917739868164
    9. 's' → logprob: -13.180917739868164
    10. ' ' → logprob: -13.430917739868164

Token 872: ' Dict' (ID: 55179)
  Prédit: '{}'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '{}' → logprob: -0.01188291609287262
    2. 'dict' → logprob: -5.011882781982422
    3. '{' → logprob: -5.636882781982422
    4. 'Dict' → logprob: -6.761882781982422
    5. ' {}' → logprob: -7.886882781982422
    6. ' dict' → logprob: -10.511882781982422
    7. '={}' → logprob: -11.511882781982422
    8. ' Dict' → logprob: -11.761882781982422
    9. '{
' → logprob: -11.886882781982422
    10. '{}

' → logprob: -13.261882781982422

Token 873: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -2.558399319241289e-05
    2. ' =' → logprob: -11.750025749206543
    3. '[
' → logprob: -12.875025749206543
    4. '```' → logprob: -12.875025749206543
    5. '{' → logprob: -13.000025749206543
    6. '   ' → logprob: -13.125025749206543
    7. 'Face' → logprob: -13.875025749206543
    8. '[int' → logprob: -14.000025749206543
    9. '=' → logprob: -14.250025749206543
    10. '[Serialize' → logprob: -14.250025749206543

Token 874: 'Face' (ID: 23402)
  Prédit: 'Face'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Face' → logprob: -5.512236498361744e-07
    2. ' Face' → logprob: -15.000000953674316
    3. 'face' → logprob: -16.625
    4. '_face' → logprob: -18.625
    5. '[' → logprob: -19.125
    6. 'str' → logprob: -20.125
    7. '.Face' → logprob: -20.375
    8. '   ' → logprob: -20.5
    9. 'Faces' → logprob: -20.625
    10. 'FACE' → logprob: -21.0

Token 875: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0037446212954819202
    2. ']' → logprob: -5.878744602203369
    3. ' ,' → logprob: -7.253744602203369
    4. '[' → logprob: -9.128745079040527
    5. '   ' → logprob: -10.003745079040527
    6. ')' → logprob: -10.378745079040527
    7. ' =' → logprob: -11.128745079040527
    8. ',List' → logprob: -12.003745079040527
    9. ']=' → logprob: -12.378745079040527
    10. '=' → logprob: -12.378745079040527

Token 876: ' Tuple' (ID: 50841)
  Prédit: 'Tuple'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Tuple' → logprob: -0.00043353010551072657
    2. ' Tuple' → logprob: -7.750433444976807
    3. 'tuple' → logprob: -13.000433921813965
    4. '   ' → logprob: -14.750433921813965
    5. 'List' → logprob: -16.00043296813965
    6. ' ' → logprob: -18.00043296813965
    7. 'Tu' → logprob: -18.25043296813965
    8. '  ' → logprob: -18.37543296813965
    9. '_tuple' → logprob: -18.75043296813965
    10. '.Tuple' → logprob: -18.75043296813965

Token 877: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.29037386178970337
    2. '[
' → logprob: -1.5403738021850586
    3. '[str' → logprob: -3.4153738021850586
    4. ']' → logprob: -5.665373802185059
    5. ']=' → logprob: -7.290373802185059
    6. '[(' → logprob: -8.165373802185059
    7. ' =' → logprob: -9.915373802185059
    8. '=' → logprob: -10.040373802185059
    9. '[np' → logprob: -10.165373802185059
    10. '[List' → logprob: -10.415373802185059

Token 878: 'Tuple' (ID: 40048)
  Prédit: 'Tuple'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Tuple' → logprob: -0.0011666493955999613
    2. 'Vertex' → logprob: -7.876166820526123
    3. 'tuple' → logprob: -8.126166343688965
    4. 'str' → logprob: -8.876166343688965
    5. 'float' → logprob: -9.251166343688965
    6. ' Tuple' → logprob: -9.501166343688965
    7. 'List' → logprob: -9.626166343688965
    8. '
' → logprob: -10.626166343688965
    9. '   ' → logprob: -11.126166343688965
    10. ' ' → logprob: -11.376166343688965

Token 879: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0008360736537724733
    2. 'float' → logprob: -7.25083589553833
    3. ']' → logprob: -10.125836372375488
    4. '[
' → logprob: -10.375836372375488
    5. ',float' → logprob: -10.500836372375488
    6. '(float' → logprob: -11.500836372375488
    7. '[int' → logprob: -12.000836372375488
    8. '   ' → logprob: -13.125836372375488
    9. '[str' → logprob: -13.500836372375488
    10. ',' → logprob: -13.625836372375488

Token 880: 'float' (ID: 7829)
  Prédit: 'float'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'float' → logprob: -2.618001053633634e-05
    2. '[' → logprob: -11.125025749206543
    3. '(float' → logprob: -12.625025749206543
    4. ' float' → logprob: -12.625025749206543
    5. 'int' → logprob: -13.625025749206543
    6. '0' → logprob: -14.000025749206543
    7. '...' → logprob: -14.250025749206543
    8. '   ' → logprob: -14.875025749206543
    9. '1' → logprob: -15.125025749206543
    10. '	float' → logprob: -15.125025749206543

Token 881: ',float' (ID: 119642)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.061348333954811096
    2. ',float' → logprob: -3.0613484382629395
    3. '[' → logprob: -4.8113484382629395
    4. ' ,' → logprob: -5.4363484382629395
    5. ',int' → logprob: -9.811347961425781
    6. '[int' → logprob: -10.061347961425781
    7. ',
' → logprob: -10.936347961425781
    8. '],' → logprob: -11.436347961425781
    9. ',double' → logprob: -11.686347961425781
    10. 'float' → logprob: -11.936347961425781

Token 882: ',float' (ID: 119642)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.5762885212898254
    2. ',float' → logprob: -0.8262885212898254
    3. ' ,' → logprob: -8.451288223266602
    4. ',int' → logprob: -9.451288223266602
    5. '>,' → logprob: -10.701288223266602
    6. ',double' → logprob: -11.576288223266602
    7. ',f' → logprob: -11.701288223266602
    8. ',None' → logprob: -12.576288223266602
    9. ',
' → logprob: -12.701288223266602
    10. ',bool' → logprob: -13.326288223266602

Token 883: '],' (ID: 2155)
  Prédit: '],'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '],' → logprob: -0.018590133637189865
    2. ',' → logprob: -4.018589973449707
    3. '>,' → logprob: -8.893589973449707
    4. '),' → logprob: -9.018589973449707
    5. '],
' → logprob: -9.018589973449707
    6. '],[' → logprob: -10.518589973449707
    7. ']' → logprob: -11.518589973449707
    8. '},' → logprob: -11.893589973449707
    9. ',
' → logprob: -12.768589973449707
    10. '   ' → logprob: -12.768589973449707

Token 884: ' Tuple' (ID: 50841)
  Prédit: 'Tuple'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Tuple' → logprob: -0.012600532732903957
    2. ' Tuple' → logprob: -4.387600421905518
    3. 'tuple' → logprob: -9.887600898742676
    4. '_tuple' → logprob: -11.637600898742676
    5. ' ' → logprob: -11.887600898742676
    6. '(' → logprob: -12.012600898742676
    7. '   ' → logprob: -12.137600898742676
    8. ' tuple' → logprob: -12.637600898742676
    9. 'float' → logprob: -13.012600898742676
    10. '.Tuple' → logprob: -13.262600898742676

Token 885: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -4.513339445111342e-05
    2. ',float' → logprob: -10.875044822692871
    3. '(float' → logprob: -11.375044822692871
    4. '[
' → logprob: -11.625044822692871
    5. 'float' → logprob: -12.625044822692871
    6. '<float' → logprob: -14.250044822692871
    7. ']' → logprob: -14.750044822692871
    8. ',' → logprob: -14.875044822692871
    9. '[int' → logprob: -15.250044822692871
    10. '   ' → logprob: -15.625044822692871

Token 886: 'float' (ID: 7829)
  Prédit: 'float'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'float' → logprob: -1.3856492842023727e-06
    2. ' float' → logprob: -14.250000953674316
    3. '1' → logprob: -15.250000953674316
    4. '(float' → logprob: -16.250001907348633
    5. 'flo' → logprob: -16.250001907348633
    6. '3' → logprob: -17.375001907348633
    7. '[' → logprob: -17.875001907348633
    8. '<float' → logprob: -18.000001907348633
    9. ',float' → logprob: -18.000001907348633
    10. '   ' → logprob: -18.125001907348633

Token 887: ',float' (ID: 119642)
  Prédit: ',float'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',float' → logprob: -0.0067556328140199184
    2. ',' → logprob: -5.006755828857422
    3. ',int' → logprob: -10.756755828857422
    4. ' ,' → logprob: -11.881755828857422
    5. '[' → logprob: -12.131755828857422
    6. ',
' → logprob: -13.256755828857422
    7. ',double' → logprob: -13.756755828857422
    8. ',None' → logprob: -13.756755828857422
    9. '(float' → logprob: -14.631755828857422
    10. 'float' → logprob: -14.631755828857422

Token 888: ',float' (ID: 119642)
  Prédit: ',float'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',float' → logprob: -0.00071553117595613
    2. ',' → logprob: -7.250715732574463
    3. ' ,' → logprob: -12.750715255737305
    4. ',int' → logprob: -13.875715255737305
    5. ',double' → logprob: -14.500715255737305
    6. ',
' → logprob: -15.000715255737305
    7. ',None' → logprob: -15.500715255737305
    8. ',bool' → logprob: -15.500715255737305
    9. ',f' → logprob: -15.625715255737305
    10. 'float' → logprob: -16.125715255737305

Token 889: '],' (ID: 2155)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -6.492120155598968e-05
    2. '],' → logprob: -10.125064849853516
    3. ' ,' → logprob: -11.000064849853516
    4. ',float' → logprob: -12.750064849853516
    5. ',
' → logprob: -13.250064849853516
    6. ']]' → logprob: -13.625064849853516
    7. '),' → logprob: -14.250064849853516
    8. '>,' → logprob: -14.625064849853516
    9. ',(' → logprob: -15.625064849853516
    10. '   ' → logprob: -15.625064849853516

Token 890: ' Tuple' (ID: 50841)
  Prédit: 'Tuple'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Tuple' → logprob: -0.1602400690317154
    2. ' Tuple' → logprob: -1.9102400541305542
    3. ' tuple' → logprob: -12.035240173339844
    4. ' (' → logprob: -12.910240173339844
    5. '(' → logprob: -13.160240173339844
    6. '_tuple' → logprob: -13.160240173339844
    7. 'tuple' → logprob: -13.785240173339844
    8. '<Tuple' → logprob: -14.035240173339844
    9. '.Tuple' → logprob: -14.785240173339844
    10. '(tuple' → logprob: -15.410240173339844

Token 891: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.00010735770774772391
    2. '(float' → logprob: -9.250107765197754
    3. '[(' → logprob: -12.500107765197754
    4. '[
' → logprob: -12.625107765197754
    5. '<float' → logprob: -13.250107765197754
    6. 'float' → logprob: -14.125107765197754
    7. ',float' → logprob: -14.875107765197754
    8. '   ' → logprob: -15.000107765197754
    9. '```' → logprob: -15.250107765197754
    10. ']' → logprob: -15.750107765197754

Token 892: 'float' (ID: 7829)
  Prédit: 'float'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'float' → logprob: -8.537868779967539e-06
    2. ' float' → logprob: -11.875008583068848
    3. '(float' → logprob: -13.625008583068848
    4. ',float' → logprob: -15.375008583068848
    5. '	float' → logprob: -17.12500762939453
    6. '<float' → logprob: -17.87500762939453
    7. 'flo' → logprob: -18.25000762939453
    8. '=float' → logprob: -18.25000762939453
    9. '.float' → logprob: -20.00000762939453
    10. '0' → logprob: -20.25000762939453

Token 893: ',float' (ID: 119642)
  Prédit: ',float'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',float' → logprob: -3.2855416066013277e-05
    2. ',' → logprob: -10.625032424926758
    3. 'float' → logprob: -12.875032424926758
    4. ',
' → logprob: -12.875032424926758
    5. '[' → logprob: -13.750032424926758
    6. '(float' → logprob: -14.375032424926758
    7. ',int' → logprob: -14.625032424926758
    8. '=float' → logprob: -14.750032424926758
    9. '<float' → logprob: -14.875032424926758
    10. ' ,' → logprob: -15.875032424926758

Token 894: ',float' (ID: 119642)
  Prédit: ',float'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',float' → logprob: -0.0005716211744584143
    2. ',' → logprob: -7.5005717277526855
    3. 'float' → logprob: -11.250571250915527
    4. ',
' → logprob: -13.875571250915527
    5. ',f' → logprob: -13.875571250915527
    6. ',int' → logprob: -14.000571250915527
    7. ',None' → logprob: -14.125571250915527
    8. ',double' → logprob: -14.250571250915527
    9. ',bool' → logprob: -15.250571250915527
    10. '>>>' → logprob: -15.375571250915527

Token 895: ']]]' (ID: 198030)
  Prédit: ']]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']]' → logprob: -0.0006248722202144563
    2. ')]' → logprob: -7.750624656677246
    3. ']' → logprob: -8.875624656677246
    4. ']]=' → logprob: -10.375624656677246
    5. ']]]' → logprob: -11.500624656677246
    6. ']>' → logprob: -12.375624656677246
    7. ']]
' → logprob: -12.625624656677246
    8. ' ]]' → logprob: -13.375624656677246
    9. '>]' → logprob: -14.125624656677246
    10. '']]' → logprob: -14.375624656677246

Token 896: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.1602407842874527
    2. '=' → logprob: -1.9102407693862915
    3. '   ' → logprob: -11.78524112701416
    4. ' =
' → logprob: -12.78524112701416
    5. '={}' → logprob: -13.28524112701416
    6. ' ' → logprob: -13.66024112701416
    7. ')' → logprob: -14.03524112701416
    8. '    ' → logprob: -14.41024112701416
    9. ' ={' → logprob: -14.91024112701416
    10. '=
' → logprob: -15.16024112701416

Token 897: ' {}
' (ID: 11421)
  Prédit: '{}'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '{}' → logprob: -0.0015374773647636175
    2. ' {}' → logprob: -6.501537322998047
    3. '{' → logprob: -10.751537322998047
    4. '{}
' → logprob: -11.376537322998047
    5. '{}

' → logprob: -13.376537322998047
    6. '{})' → logprob: -15.751537322998047
    7. 'dict' → logprob: -16.126537322998047
    8. ' {}
' → logprob: -16.251537322998047
    9. '={}' → logprob: -16.376537322998047
    10. '{},' → logprob: -16.501537322998047

Token 898: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.08051464706659317
    2. '   ' → logprob: -2.580514669418335
    3. '
' → logprob: -7.830514430999756
    4. 'for' → logprob: -8.330514907836914
    5. '        
' → logprob: -8.455514907836914
    6. '    
' → logprob: -8.705514907836914
    7. ' for' → logprob: -8.830514907836914
    8. '<|end|>' → logprob: -8.830514907836914
    9. ')' → logprob: -9.580514907836914
    10. 'def' → logprob: -9.955514907836914

Token 899: ' for' (ID: 395)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.04467533528804779
    2. 'for' (adapté à ' for') → logprob: -3.294675350189209
    3. ' for' → logprob: -5.669675350189209
    4. '   ' → logprob: -6.044675350189209
    5. 'def' → logprob: -7.419675350189209
    6. 'import' → logprob: -8.66967487335205
    7. '
' → logprob: -11.16967487335205
    8. '           ' → logprob: -13.66967487335205
    9. 'from' → logprob: -13.79467487335205
    10. ')' → logprob: -13.79467487335205

Token 900: ' f' (ID: 285)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.20600751042366028
    2. 'face' → logprob: -1.706007480621338
    3. ' face' → logprob: -6.081007480621338
    4. ' f' → logprob: -6.081007480621338
    5. '   ' → logprob: -12.081007957458496
    6. 'Face' → logprob: -13.206007957458496
    7. '	f' → logprob: -13.706007957458496
    8. '_face' → logprob: -14.456007957458496
    9. 'faces' → logprob: -14.581007957458496
    10. 'fac' → logprob: -14.581007957458496

Token 901: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.006125733256340027
    2. 'in' → logprob: -5.5061259269714355
    3. ' (' → logprob: -7.2561259269714355
    4. '   ' → logprob: -8.006125450134277
    5. '(Vertex' → logprob: -8.131125450134277
    6. ' ' → logprob: -8.881125450134277
    7. '_vertices' → logprob: -9.756125450134277
    8. 'f' → logprob: -9.756125450134277
    9. '_vertex' → logprob: -10.006125450134277
    10. '(f' → logprob: -10.006125450134277

Token 902: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.002206047298386693
    2. ' self' → logprob: -6.252205848693848
    3. '[self' → logprob: -8.252205848693848
    4. '(self' → logprob: -11.502205848693848
    5. '[' → logprob: -12.627205848693848
    6. ' [' → logprob: -13.502205848693848
    7. '   ' → logprob: -13.752205848693848
    8. '[f' → logprob: -15.627205848693848
    9. 'f' → logprob: -15.752205848693848
    10. '[
' → logprob: -15.877205848693848

Token 903: '.faces' (ID: 78268)
  Prédit: '.faces'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.faces' → logprob: -0.0003872974484693259
    2. 'faces' → logprob: -8.125387191772461
    3. '.vertices' → logprob: -10.375387191772461
    4. '.face' → logprob: -11.625387191772461
    5. '   ' → logprob: -11.875387191772461
    6. '_faces' → logprob: -11.875387191772461
    7. ' .' → logprob: -11.875387191772461
    8. '.' → logprob: -12.125387191772461
    9. '.edges' → logprob: -12.375387191772461
    10. '.v' → logprob: -12.625387191772461

Token 904: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.08027098327875137
    2. ':
' → logprob: -2.580271005630493
    3. '           ' → logprob: -7.205270767211914
    4. '       ' → logprob: -8.080270767211914
    5. ',' → logprob: -8.705270767211914
    6. '[' → logprob: -10.330270767211914
    7. ':
' → logprob: -10.955270767211914
    8. '=' → logprob: -11.080270767211914
    9. '   ' → logprob: -11.080270767211914
    10. ' =' → logprob: -11.205270767211914

Token 905: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00026407750556245446
    2. '           ' → logprob: -9.000264167785645
    3. ',' → logprob: -10.125264167785645
    4. 'v' → logprob: -10.500264167785645
    5. '   ' → logprob: -10.875264167785645
    6. ' vertices' → logprob: -11.125264167785645
    7. '        
' → logprob: -11.500264167785645
    8. '```' → logprob: -12.000264167785645
    9. '      ' → logprob: -12.625264167785645
    10. 'vertices' → logprob: -13.000264167785645

Token 906: ' #' (ID: 1069)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.4557453393936157
    2. '       ' → logprob: -1.9557453393936157
    3. 'origin' → logprob: -2.330745220184326
    4. 'a' → logprob: -2.705745220184326
    5. 'verts' → logprob: -3.830745220184326
    6. 'va' → logprob: -4.580745220184326
    7. '           ' → logprob: -4.580745220184326
    8. '#' (adapté à ' #') → logprob: -5.080745220184326
    9. '   ' → logprob: -5.830745220184326
    10. 'vertices' → logprob: -6.330745220184326

Token 907: ' Pick' (ID: 24284)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.5021684169769287
    2. 'origin' → logprob: -1.8771684169769287
    3. 'va' → logprob: -2.0021684169769287
    4. 'a' → logprob: -3.5021684169769287
    5. '#' → logprob: -4.002168655395508
    6. 'p' → logprob: -4.127168655395508
    7. 'A' → logprob: -4.877168655395508
    8. ' v' → logprob: -5.127168655395508
    9. 'o' → logprob: -5.377168655395508
    10. ' origin' → logprob: -5.502168655395508

Token 908: ' vertex' (ID: 25363)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.41200920939445496
    2. 'origin' → logprob: -2.2870092391967773
    3. 'f' → logprob: -2.4120092391967773
    4. ' v' → logprob: -2.7870092391967773
    5. ' origin' → logprob: -3.7870092391967773
    6. 'a' → logprob: -3.9120092391967773
    7. ' f' → logprob: -4.287009239196777
    8. '   ' → logprob: -4.787009239196777
    9. 'p' → logprob: -5.912009239196777
    10. ' a' → logprob: -6.412009239196777

Token 909: ' with' (ID: 483)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.9371514916419983
    2. 'A' → logprob: -1.0621514320373535
    3. 's' → logprob: -2.1871514320373535
    4. 'f' → logprob: -2.6871514320373535
    5. 'a' → logprob: -3.3121514320373535
    6. '=f' → logprob: -4.8121514320373535
    7. ' =' → logprob: -4.9371514320373535
    8. '_a' → logprob: -5.0621514320373535
    9. '_origin' → logprob: -5.4371514320373535
    10. 'origin' → logprob: -5.6871514320373535

Token 910: ' smallest' (ID: 42173)
  Prédit: 'index'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'index' → logprob: -0.2796469032764435
    2. 'lowest' → logprob: -1.654646873474121
    3. ' index' → logprob: -3.529646873474121
    4. 'f' → logprob: -4.654646873474121
    5. 'the' → logprob: -5.779646873474121
    6. ' f' → logprob: -6.029646873474121
    7. ' lowest' → logprob: -6.154646873474121
    8. 'min' → logprob: -6.529646873474121
    9. 'minimum' → logprob: -7.404646873474121
    10. '0' → logprob: -7.404646873474121

Token 911: ' alphabetical' (ID: 163540)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'f' → logprob: -1.4216443300247192
    2. 'lex' → logprob: -1.5466443300247192
    3. 'alphabet' → logprob: -1.9216443300247192
    4. 'vertex' → logprob: -2.0466442108154297
    5. 'ord' → logprob: -2.6716442108154297
    6. 'v' → logprob: -3.0466442108154297
    7. '(f' → logprob: -3.4216442108154297
    8. '()' → logprob: -4.29664421081543
    9. 'self' → logprob: -4.42164421081543
    10. 'ascii' → logprob: -4.54664421081543

Token 912: ' order' (ID: 2569)
  Prédit: 'order'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'order' → logprob: -1.1248773336410522
    2. 'v' → logprob: -1.2498773336410522
    3. ' order' → logprob: -1.8748773336410522
    4. '_vertex' → logprob: -3.124877452850342
    5. 'value' → logprob: -3.749877452850342
    6. ')' → logprob: -3.749877452850342
    7. 'vertex' → logprob: -3.874877452850342
    8. 'name' → logprob: -3.874877452850342
    9. '_v' → logprob: -3.999877452850342
    10. 'f' → logprob: -4.374877452850342

Token 913: ' as' (ID: 472)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -1.0055599212646484
    2. ' v' → logprob: -2.1305599212646484
    3. ',' → logprob: -2.2555599212646484
    4. ' (' → logprob: -2.2555599212646484
    5. ' as' → logprob: -2.8805599212646484
    6. 'v' → logprob: -3.0055599212646484
    7. ' in' → logprob: -3.2555599212646484
    8. ':' → logprob: -3.7555599212646484
    9. ' f' → logprob: -3.7555599212646484
    10. ' for' → logprob: -4.255559921264648

Token 914: ' origin' (ID: 12839)
  Prédit: 'origin'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'origin' → logprob: -0.029918145388364792
    2. ' origin' → logprob: -4.029918193817139
    3. 'f' → logprob: -4.779918193817139
    4. 'v' → logprob: -6.029918193817139
    5. 'orig' → logprob: -8.02991771697998
    6. ' f' → logprob: -8.65491771697998
    7. '   ' → logprob: -9.27991771697998
    8. 'first' → logprob: -9.40491771697998
    9. 'vertex' → logprob: -10.02991771697998
    10. 'anchor' → logprob: -10.27991771697998

Token 915: ' for' (ID: 395)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.08575556427240372
    2. 'v' → logprob: -3.5857555866241455
    3. ',' → logprob: -3.9607555866241455
    4. 'origin' → logprob: -4.960755348205566
    5. ' (' → logprob: -5.085755348205566
    6. ' v' → logprob: -5.335755348205566
    7. '
' → logprob: -5.460755348205566
    8. '            
' → logprob: -6.210755348205566
    9. ' origin' → logprob: -6.335755348205566
    10. ':' → logprob: -6.460755348205566

Token 916: ' face' (ID: 4950)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.024222321808338165
    2. ' f' → logprob: -5.399222373962402
    3. 'the' → logprob: -5.399222373962402
    4. 'self' → logprob: -5.649222373962402
    5. 'v' → logprob: -5.774222373962402
    6. 'face' → logprob: -5.899222373962402
    7. ' the' → logprob: -6.399222373962402
    8. 'vertices' → logprob: -7.399222373962402
    9. ' face' → logprob: -7.649222373962402
    10. 'coordinates' → logprob: -7.649222373962402

Token 917: ' plane' (ID: 16499)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.10078053176403046
    2. 'v' → logprob: -2.850780487060547
    3. ' v' → logprob: -4.850780487060547
    4. ',' → logprob: -4.975780487060547
    5. ' (' → logprob: -5.225780487060547
    6. '
' → logprob: -5.350780487060547
    7. '            
' → logprob: -5.850780487060547
    8. 'origin' → logprob: -6.225780487060547
    9. ':' → logprob: -6.600780487060547
    10. ' f' → logprob: -7.100780487060547

Token 918: ' ' (ID: 220)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.048904478549957275
    2. 'v' → logprob: -4.1739044189453125
    3. ' v' → logprob: -4.6739044189453125
    4. ',' → logprob: -4.7989044189453125
    5. '
' → logprob: -5.9239044189453125
    6. '            
' → logprob: -5.9239044189453125
    7. ':' → logprob: -6.7989044189453125
    8. '(v' → logprob: -6.9239044189453125
    9. ' (' → logprob: -6.9239044189453125
    10. 'origin' → logprob: -7.5489044189453125

Token 919: '2' (ID: 17)
  Prédit: ' ('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' (' → logprob: -1.4969464540481567
    2. ',' → logprob: -2.121946334838867
    3. ' =' → logprob: -2.121946334838867
    4. '
' → logprob: -2.246946334838867
    5. 'v' → logprob: -2.371946334838867
    6. 'f' → logprob: -2.871946334838867
    7. '(self' → logprob: -3.371946334838867
    8. ':' → logprob: -3.621946334838867
    9. '(f' → logprob: -3.621946334838867
    10. 'self' → logprob: -3.996946334838867

Token 920: 'D' (ID: 35)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.34765997529029846
    2. 'D' → logprob: -1.347659945487976
    3. '3' → logprob: -3.8476600646972656
    4. '_d' → logprob: -5.097660064697266
    5. 'coords' → logprob: -6.347660064697266
    6. '_coords' → logprob: -6.472660064697266
    7. '   ' → logprob: -7.222660064697266
    8. 'f' → logprob: -7.347660064697266
    9. ',' → logprob: -8.222660064697266
    10. 'def' → logprob: -9.222660064697266

Token 921: ' coords' (ID: 53253)
  Prédit: 'origin'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'origin' → logprob: -1.026994228363037
    2. 'v' → logprob: -1.151994228363037
    3. ' origin' → logprob: -2.526994228363037
    4. 'vertex' → logprob: -3.401994228363037
    5. ' v' → logprob: -3.901994228363037
    6. 'coords' → logprob: -3.901994228363037
    7. '_origin' → logprob: -4.151994228363037
    8. 'f' → logprob: -4.151994228363037
    9. 'vs' → logprob: -4.276994228363037
    10. '_coords' → logprob: -4.401994228363037

Token 922: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.094034343957901
    2. 'v' → logprob: -3.719034433364868
    3. '
' → logprob: -4.219034194946289
    4. ' v' → logprob: -4.469034194946289
    5. ',' → logprob: -4.594034194946289
    6. '            
' → logprob: -4.844034194946289
    7. 'origin' → logprob: -5.344034194946289
    8. '    
' → logprob: -6.344034194946289
    9. ':' → logprob: -6.594034194946289
    10. '       ' → logprob: -6.719034194946289

Token 923: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.004275107756257057
    2. 'v' → logprob: -6.129275321960449
    3. '       ' → logprob: -6.879275321960449
    4. ' v' → logprob: -8.00427532196045
    5. ',' → logprob: -8.37927532196045
    6. '
' → logprob: -9.25427532196045
    7. '            
' → logprob: -9.50427532196045
    8. '        
' → logprob: -10.50427532196045
    9. ' vertices' → logprob: -10.50427532196045
    10. '   ' → logprob: -10.62927532196045

Token 924: ' sorted' (ID: 20099)
  Prédit: 'origin'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'origin' → logprob: -0.20507369935512543
    2. ' origin' → logprob: -1.8300737142562866
    3. 'v' → logprob: -4.330073833465576
    4. ' v' → logprob: -5.455073833465576
    5. 'orig' → logprob: -5.705073833465576
    6. '   ' → logprob: -6.580073833465576
    7. '       ' → logprob: -6.955073833465576
    8. ' orig' → logprob: -7.330073833465576
    9. 'o' → logprob: -8.080073356628418
    10. 'a' → logprob: -8.455073356628418

Token 925: '_vs' (ID: 106451)
  Prédit: '_vs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_vs' → logprob: -0.17282739281654358
    2. '_vertices' → logprob: -2.2978274822235107
    3. 'vs' → logprob: -2.9228274822235107
    4. '_v' → logprob: -6.297827243804932
    5. '_' → logprob: -6.672827243804932
    6. 'Vs' → logprob: -7.922827243804932
    7. 'vertices' → logprob: -8.04782772064209
    8. 'v' → logprob: -8.54782772064209
    9. '(f' → logprob: -9.17282772064209
    10. 'verts' → logprob: -9.29782772064209

Token 926: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.22620965540409088
    2. '=' → logprob: -1.6012096405029297
    3. '=f' → logprob: -7.22620964050293
    4. '   ' → logprob: -10.47620964050293
    5. '(f' → logprob: -11.60120964050293
    6. '           ' → logprob: -12.22620964050293
    7. 'f' → logprob: -12.35120964050293
    8. '       ' → logprob: -12.60120964050293
    9. ' ' → logprob: -12.97620964050293
    10. '=self' → logprob: -13.10120964050293

Token 927: ' sorted' (ID: 20099)
  Prédit: 'sorted'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sorted' → logprob: -0.03617269545793533
    2. 'list' → logprob: -3.91117262840271
    3. 'f' → logprob: -4.286172866821289
    4. 'tuple' → logprob: -7.161172866821289
    5. '[f' → logprob: -7.911172866821289
    6. ' sorted' → logprob: -8.036172866821289
    7. '(sorted' → logprob: -9.161172866821289
    8. '   ' → logprob: -9.786172866821289
    9. '[' → logprob: -10.161172866821289
    10. ' list' → logprob: -10.411172866821289

Token 928: '(f' (ID: 1526)
  Prédit: '(f'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(f' → logprob: -0.007170217111706734
    2. '([' → logprob: -6.0071702003479
    3. '(list' → logprob: -6.2571702003479
    4. 'f' → logprob: -6.2571702003479
    5. '((' → logprob: -7.2571702003479
    6. 'list' → logprob: -9.382170677185059
    7. '(' → logprob: -10.257170677185059
    8. '[f' → logprob: -11.507170677185059
    9. '(self' → logprob: -12.132170677185059
    10. '([(' → logprob: -13.007170677185059

Token 929: '.v' (ID: 5520)
  Prédit: '.v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.v' → logprob: -0.003984485287219286
    2. '.f' → logprob: -6.128984451293945
    3. '(v' → logprob: -6.878984451293945
    4. '(f' → logprob: -8.628984451293945
    5. 'f' → logprob: -8.753984451293945
    6. 'vs' → logprob: -8.878984451293945
    7. '(.' → logprob: -9.503984451293945
    8. ' .' → logprob: -9.878984451293945
    9. '(' → logprob: -9.878984451293945
    10. ')' → logprob: -11.128984451293945

Token 930: 's' (ID: 82)
  Prédit: 's'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.06306479126214981
    2. 'f' → logprob: -2.8130648136138916
    3. '.f' → logprob: -8.313064575195312
    4. '(f' → logprob: -8.813064575195312
    5. '.s' → logprob: -8.813064575195312
    6. 'vs' → logprob: -9.188064575195312
    7. '.v' → logprob: -9.188064575195312
    8. '
' → logprob: -9.688064575195312
    9. '   ' → logprob: -10.188064575195312
    10. ')
' → logprob: -10.563064575195312

Token 931: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.005089072044938803
    2. ')' → logprob: -5.630089282989502
    3. '           ' → logprob: -6.755089282989502
    4. '       ' → logprob: -9.005088806152344
    5. '())
' → logprob: -9.005088806152344
    6. ')
' → logprob: -10.630088806152344
    7. ')

' → logprob: -11.005088806152344
    8. ' )
' → logprob: -11.505088806152344
    9. '   ' → logprob: -11.880088806152344
    10. '               ' → logprob: -12.380088806152344

Token 932: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.022643255069851875
    2. ',' → logprob: -4.772643089294434
    3. '
' → logprob: -5.772643089294434
    4. 'v' → logprob: -6.147643089294434
    5. '[' → logprob: -6.647643089294434
    6. 'origin' → logprob: -6.647643089294434
    7. '            
' → logprob: -7.022643089294434
    8. ')' → logprob: -7.147643089294434
    9. '   ' → logprob: -7.147643089294434
    10. '       ' → logprob: -7.522643089294434

Token 933: ' origin' (ID: 12839)
  Prédit: 'origin'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'origin' (adapté à ' origin') → logprob: -0.10336019843816757
    2. 'v' → logprob: -3.228360176086426
    3. '           ' → logprob: -3.603360176086426
    4. ' origin' → logprob: -3.978360176086426
    5. 'orig' → logprob: -5.353360176086426
    6. 'o' → logprob: -5.353360176086426
    7. 'a' → logprob: -7.103360176086426
    8. 'p' → logprob: -7.728360176086426
    9. ' v' → logprob: -7.728360176086426
    10. ' orig' → logprob: -8.353360176086426

Token 934: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.38689324259757996
    2. '=' → logprob: -1.1368932723999023
    3. '=self' → logprob: -11.386893272399902
    4. ',' → logprob: -11.886893272399902
    5. '=
' → logprob: -14.136893272399902
    6. ')=' → logprob: -15.136893272399902
    7. ')' → logprob: -15.136893272399902
    8. '   ' → logprob: -15.386893272399902
    9. '_=' → logprob: -15.386893272399902
    10. '_' → logprob: -15.511893272399902

Token 935: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.055195264518260956
    2. ' self' → logprob: -2.9301953315734863
    3. '           ' → logprob: -8.305194854736328
    4. '(self' → logprob: -10.305194854736328
    5. '   ' → logprob: -10.930194854736328
    6. ' ' → logprob: -12.805194854736328
    7. '[self' → logprob: -12.930194854736328
    8. '               ' → logprob: -13.055194854736328
    9. '       ' → logprob: -13.430194854736328
    10. '                   ' → logprob: -13.930194854736328

Token 936: '.vertices' (ID: 47509)
  Prédit: '.vertices'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.vertices' → logprob: -0.00122070184443146
    2. 'vertices' → logprob: -6.876220703125
    3. 'self' → logprob: -9.376220703125
    4. '           ' → logprob: -10.126220703125
    5. ' .' → logprob: -11.001220703125
    6. '.' → logprob: -11.376220703125
    7. '       ' → logprob: -11.751220703125
    8. '.v' → logprob: -11.876220703125
    9. '   ' → logprob: -12.376220703125
    10. '.users' → logprob: -12.626220703125

Token 937: '_' (ID: 62)
  Prédit: '_'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -1.2233183042553719e-05
    2. '3' → logprob: -11.375012397766113
    3. '[' → logprob: -15.000012397766113
    4. '_
' → logprob: -16.125011444091797
    5. '[f' → logprob: -16.625011444091797
    6. '_[' → logprob: -17.375011444091797
    7. ' ' → logprob: -18.062511444091797
    8. '   ' → logprob: -18.375011444091797
    9. ' _' → logprob: -18.500011444091797
    10. '[_' → logprob: -18.562511444091797

Token 938: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.00028266964363865554
    2. 'sorted' → logprob: -8.750282287597656
    3. '_' → logprob: -9.125282287597656
    4. '```' → logprob: -12.937782287597656
    5. '[' → logprob: -13.125282287597656
    6. '_sorted' → logprob: -13.500282287597656
    7. 'f' → logprob: -13.562782287597656
    8. '(sorted' → logprob: -13.625282287597656
    9. '
' → logprob: -13.812782287597656
    10. '`' → logprob: -13.875282287597656

Token 939: 'd' (ID: 67)
  Prédit: 'd'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.2254752218723297
    2. '3' → logprob: -1.6004751920700073
    3. 'f' → logprob: -9.975475311279297
    4. 'v' → logprob: -12.975475311279297
    5. '[f' → logprob: -13.100475311279297
    6. '[' → logprob: -13.225475311279297
    7. '_' → logprob: -13.225475311279297
    8. '_d' → logprob: -13.975475311279297
    9. '   ' → logprob: -14.100475311279297
    10. '```' → logprob: -14.225475311279297

Token 940: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -1.0280383548888494e-06
    2. 'sorted' → logprob: -14.375000953674316
    3. 'A' → logprob: -15.125000953674316
    4. '[f' → logprob: -16.500001907348633
    5. '(sorted' → logprob: -17.375001907348633
    6. ' [' → logprob: -18.125001907348633
    7. '[
' → logprob: -18.375001907348633
    8. '
' → logprob: -18.375001907348633
    9. '[[' → logprob: -18.625001907348633
    10. '\[' → logprob: -18.625001907348633

Token 941: 'sorted' (ID: 64288)
  Prédit: 'sorted'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sorted' → logprob: -7.755678961984813e-05
    2. '(sorted' → logprob: -9.750077247619629
    3. ' sorted' → logprob: -10.875077247619629
    4. '   ' → logprob: -16.250078201293945
    5. '
' → logprob: -16.625078201293945
    6. 'Sorted' → logprob: -18.375078201293945
    7. '.sorted' → logprob: -18.375078201293945
    8. ' ' → logprob: -19.375078201293945
    9. '           ' → logprob: -19.375078201293945
    10. '[' → logprob: -20.250078201293945

Token 942: '_vs' (ID: 106451)
  Prédit: '_vs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_vs' → logprob: -0.000363590574124828
    2. 'vs' → logprob: -8.50036334991455
    3. 'Vs' → logprob: -9.12536334991455
    4. '(f' → logprob: -10.87536334991455
    5. 'f' → logprob: -11.87536334991455
    6. '(v' → logprob: -12.12536334991455
    7. 'VS' → logprob: -12.25036334991455
    8. '(' → logprob: -12.62536334991455
    9. '
' → logprob: -13.12536334991455
    10. '_v' → logprob: -13.62536334991455

Token 943: '[' (ID: 58)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.17977608740329742
    2. '[' → logprob: -1.8047760725021362
    3. 'A' → logprob: -11.554776191711426
    4. ' ' → logprob: -12.304776191711426
    5. '(' → logprob: -12.429776191711426
    6. '   ' → logprob: -12.804776191711426
    7. '1' → logprob: -12.804776191711426
    8. '
' → logprob: -13.179776191711426
    9. '][' → logprob: -13.304776191711426
    10. '#' → logprob: -14.304776191711426

Token 944: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.4855663721391466e-05
    2. '[' → logprob: -11.625015258789062
    3. ' ' → logprob: -12.250015258789062
    4. '   ' → logprob: -14.875015258789062
    5. '1' → logprob: -15.625015258789062
    6. '
' → logprob: -15.937515258789062
    7. '(' → logprob: -16.187515258789062
    8. '۰' → logprob: -17.687515258789062
    9. '2' → logprob: -18.000015258789062
    10. ':' → logprob: -18.125015258789062

Token 945: ']]
' (ID: 29446)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.01254131831228733
    2. ']
' → logprob: -4.3875412940979
    3. ']
' → logprob: -10.887541770935059
    4. ' ]' → logprob: -11.762541770935059
    5. '       ' → logprob: -12.887541770935059
    6. '           ' → logprob: -14.137541770935059
    7. ']

' → logprob: -14.262541770935059
    8. '   ' → logprob: -14.637541770935059
    9. '],' → logprob: -15.762541770935059
    10. '];' → logprob: -15.887541770935059

Token 946: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.16696329414844513
    2. 'v' → logprob: -2.0419633388519287
    3. 'u' → logprob: -4.66696310043335
    4. ' v' → logprob: -4.91696310043335
    5. ',' → logprob: -6.04196310043335
    6. 'edge' → logprob: -7.16696310043335
    7. ' u' → logprob: -7.29196310043335
    8. 'p' → logprob: -7.91696310043335
    9. 'ab' → logprob: -8.041963577270508
    10. 'vec' → logprob: -8.166963577270508

Token 947: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' (adapté à ' v') → logprob: -0.1422853022813797
    2. 'vec' → logprob: -2.7672853469848633
    3. 'u' → logprob: -2.8922853469848633
    4. 'a' → logprob: -5.517285346984863
    5. 'def' → logprob: -5.892285346984863
    6. 'edge' → logprob: -6.017285346984863
    7. 'p' → logprob: -6.517285346984863
    8. '   ' → logprob: -6.767285346984863
    9. 'ab' → logprob: -7.642285346984863
    10. 'va' → logprob: -8.017285346984863

Token 948: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.06718415766954422
    2. 'ector' → logprob: -2.8171842098236084
    3. 'ec' → logprob: -6.192183971405029
    4. 'er' → logprob: -6.692183971405029
    5. '0' → logprob: -6.817183971405029
    6. 'ect' → logprob: -8.067184448242188
    7. 'ert' → logprob: -8.567184448242188
    8. 'u' → logprob: -9.192184448242188
    9. '2' → logprob: -9.817184448242188
    10. 'v' → logprob: -10.442184448242188

Token 949: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.1602906435728073
    2. '=' → logprob: -1.9102905988693237
    3. ',' → logprob: -10.410290718078613
    4. '_vec' → logprob: -11.660290718078613
    5. '=self' → logprob: -12.160290718078613
    6. '   ' → logprob: -12.285290718078613
    7. ' ' → logprob: -12.410290718078613
    8. '_vector' → logprob: -12.910290718078613
    9. 'v' → logprob: -13.035290718078613
    10. '_' → logprob: -13.035290718078613

Token 950: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.13038161396980286
    2. 'tuple' → logprob: -3.0053815841674805
    3. ' self' → logprob: -3.5053815841674805
    4. '(self' → logprob: -3.7553815841674805
    5. ' tuple' → logprob: -5.0053815841674805
    6. '(
' → logprob: -5.1303815841674805
    7. '(' → logprob: -5.6303815841674805
    8. ' (' → logprob: -7.1303815841674805
    9. '   ' → logprob: -7.1303815841674805
    10. '(tuple' → logprob: -7.6303815841674805

Token 951: '.vertices' (ID: 47509)
  Prédit: '.vertices'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.vertices' → logprob: -0.19363555312156677
    2. 'vertices' → logprob: -2.3186354637145996
    3. 'ector' → logprob: -3.6936354637145996
    4. 'ectors' → logprob: -4.1936354637146
    5. 'import' → logprob: -5.1936354637146
    6. 'self' → logprob: -5.4436354637146
    7. 'ert' → logprob: -5.6936354637146
    8. '.' → logprob: -5.8186354637146
    9. 't' → logprob: -5.9436354637146
    10. '_vertices' → logprob: -6.0686354637146

Token 952: '_' (ID: 62)
  Prédit: '_'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.00416482612490654
    2. '3' → logprob: -5.504164695739746
    3. '[' → logprob: -10.379164695739746
    4. '[f' → logprob: -11.254164695739746
    5. '
' → logprob: -11.504164695739746
    6. 'f' → logprob: -12.129164695739746
    7. 'C' → logprob: -13.004164695739746
    8. ' ' → logprob: -13.129164695739746
    9. '_
' → logprob: -13.254164695739746
    10. 'v' → logprob: -13.379164695739746

Token 953: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.011239157058298588
    2. '_' → logprob: -4.511239051818848
    3. '[f' → logprob: -9.886239051818848
    4. 'f' → logprob: -10.136239051818848
    5. '
' → logprob: -10.511239051818848
    6. '[' → logprob: -11.386239051818848
    7. 'math' → logprob: -11.448739051818848
    8. '4' → logprob: -12.198739051818848
    9. '1' → logprob: -12.573739051818848
    10. 'C' → logprob: -12.948739051818848

Token 954: 'd' (ID: 67)
  Prédit: 'd'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.04357168823480606
    2. '3' → logprob: -3.293571710586548
    3. 'f' → logprob: -6.418571472167969
    4. '_' → logprob: -6.418571472167969
    5. '_d' → logprob: -6.793571472167969
    6. '[f' → logprob: -7.293571472167969
    7. '[' → logprob: -8.293571472167969
    8. '[d' → logprob: -10.543571472167969
    9. 'df' → logprob: -10.918571472167969
    10. '[v' → logprob: -11.043571472167969

Token 955: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -1.0280383548888494e-06
    2. '(sorted' → logprob: -14.375000953674316
    3. 'sorted' → logprob: -15.500000953674316
    4. '   ' → logprob: -16.250001907348633
    5. ' [' → logprob: -16.625001907348633
    6. '[v' → logprob: -17.125001907348633
    7. '[s' → logprob: -18.125001907348633
    8. '       ' → logprob: -18.250001907348633
    9. '[selected' → logprob: -18.500001907348633
    10. '           ' → logprob: -18.750001907348633

Token 956: 'sorted' (ID: 64288)
  Prédit: 'sorted'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sorted' → logprob: -0.0002100965939462185
    2. '[' → logprob: -8.87520980834961
    3. ' sorted' → logprob: -10.00020980834961
    4. '(sorted' → logprob: -10.87520980834961
    5. '   ' → logprob: -12.50020980834961
    6. 'f' → logprob: -14.62520980834961
    7. '           ' → logprob: -14.62520980834961
    8. '{' → logprob: -14.62520980834961
    9. '.sorted' → logprob: -15.50020980834961
    10. ' ' → logprob: -15.75020980834961

Token 957: '_vs' (ID: 106451)
  Prédit: '_vs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_vs' → logprob: -0.40682318806648254
    2. 'vs' → logprob: -2.28182315826416
    3. 'sorted' → logprob: -2.65682315826416
    4. 'f' → logprob: -2.90682315826416
    5. 'Vs' → logprob: -3.03182315826416
    6. 's' → logprob: -4.03182315826416
    7. 'v' → logprob: -4.15682315826416
    8. '[' → logprob: -5.40682315826416
    9. '(sorted' → logprob: -5.40682315826416
    10. '_sorted' → logprob: -6.03182315826416

Token 958: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.018320027738809586
    2. '1' → logprob: -4.018320083618164
    3. '0' → logprob: -10.018320083618164
    4. '3' → logprob: -10.518320083618164
    5. '   ' → logprob: -10.643320083618164
    6. '2' → logprob: -11.143320083618164
    7. '(' → logprob: -11.643320083618164
    8. '][' → logprob: -11.768320083618164
    9. '{' → logprob: -12.018320083618164
    10. '```' → logprob: -12.018320083618164

Token 959: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.3306015716807451e-05
    2. '0' → logprob: -11.62501335144043
    3. '[' → logprob: -13.37501335144043
    4. '2' → logprob: -13.75001335144043
    5. ' ' → logprob: -14.93751335144043
    6. '   ' → logprob: -15.06251335144043
    7. '-' → logprob: -15.31251335144043
    8. '
' → logprob: -15.62501335144043
    9. '{' → logprob: -15.62501335144043
    10. '```' → logprob: -15.93751335144043

Token 960: ']]
' (ID: 29446)
  Prédit: ']
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']
' → logprob: -0.3142695128917694
    2. ']' → logprob: -1.3142695426940918
    3. ']
' → logprob: -7.064269542694092
    4. '           ' → logprob: -9.189269065856934
    5. '       ' → logprob: -10.564269065856934
    6. ']

' → logprob: -11.939269065856934
    7. ']-' → logprob: -12.314269065856934
    8. ' ]
' → logprob: -12.814269065856934
    9. '   ' → logprob: -13.314269065856934
    10. ' ]' → logprob: -13.689269065856934

Token 961: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.10205022245645523
    2. 'v' → logprob: -3.227050304412842
    3. ' v' → logprob: -3.352050304412842
    4. '
' → logprob: -5.602050304412842
    5. '   ' → logprob: -5.727050304412842
    6. '            
' → logprob: -5.727050304412842
    7. ',' → logprob: -6.352050304412842
    8. ' 
' → logprob: -6.602050304412842
    9. 'origin' → logprob: -6.727050304412842
    10. 'import' → logprob: -6.852050304412842

Token 962: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' (adapté à ' v') → logprob: -0.8504409193992615
    2. ' v' → logprob: -0.8504409193992615
    3. '           ' → logprob: -1.9754409790039062
    4. 'origin' → logprob: -6.100440979003906
    5. ' vector' → logprob: -6.725440979003906
    6. ' origin' → logprob: -7.350440979003906
    7. 'vec' → logprob: -8.225440979003906
    8. ' vec' → logprob: -8.350440979003906
    9. 'vector' → logprob: -8.725440979003906
    10. 'diff' → logprob: -8.975440979003906

Token 963: '2' (ID: 17)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.4828038215637207
    2. '1' → logprob: -1.6078038215637207
    3. '_' → logprob: -2.1078038215637207
    4. '=' → logprob: -2.9828038215637207
    5. '3' → logprob: -5.357803821563721
    6. '   ' → logprob: -6.982803821563721
    7. '0' → logprob: -7.482803821563721
    8. 's' → logprob: -7.482803821563721
    9. '-' → logprob: -7.607803821563721
    10. 'al' → logprob: -8.232803344726562

Token 964: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.17977400124073029
    2. '=' → logprob: -1.8047740459442139
    3. '=self' → logprob: -12.054774284362793
    4. '           ' → logprob: -12.304774284362793
    5. ' ' → logprob: -12.429774284362793
    6. ')' → logprob: -12.554774284362793
    7. ',' → logprob: -13.179774284362793
    8. '   ' → logprob: -13.179774284362793
    9. 'self' → logprob: -13.679774284362793
    10. '[' → logprob: -13.679774284362793

Token 965: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.12693072855472565
    2. ' self' → logprob: -2.1269307136535645
    3. '(self' → logprob: -13.376931190490723
    4. '=self' → logprob: -15.251931190490723
    5. '	self' → logprob: -15.501931190490723
    6. ' ' → logprob: -15.751931190490723
    7. '[self' → logprob: -15.876931190490723
    8. 's' → logprob: -16.501930236816406
    9. ' ' → logprob: -16.501930236816406
    10. 'elf' → logprob: -16.626930236816406

Token 966: '.vertices' (ID: 47509)
  Prédit: '.vertices'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.vertices' → logprob: -0.06287024915218353
    2. 'vertices' → logprob: -3.0628702640533447
    3. 'self' → logprob: -5.062870025634766
    4. '_vertices' → logprob: -5.187870025634766
    5. '[' → logprob: -7.062870025634766
    6. '[self' → logprob: -7.687870025634766
    7. '.' → logprob: -7.937870025634766
    8. ' vertices' → logprob: -8.187870025634766
    9. '(vertices' → logprob: -9.312870025634766
    10. '   ' → logprob: -9.687870025634766

Token 967: '_' (ID: 62)
  Prédit: '_'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.010173559188842773
    2. '3' → logprob: -5.010173797607422
    3. '[' → logprob: -5.760173797607422
    4. '[f' → logprob: -8.260173797607422
    5. 'f' → logprob: -11.385173797607422
    6. '[v' → logprob: -11.885173797607422
    7. '[(' → logprob: -12.010173797607422
    8. '_[' → logprob: -12.635173797607422
    9. '{' → logprob: -13.135173797607422
    10. 'v' → logprob: -13.635173797607422

Token 968: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.0032125303987413645
    2. '_' → logprob: -5.8782124519348145
    3. 'vertices' → logprob: -9.003212928771973
    4. 'v' → logprob: -9.128212928771973
    5. 'f' → logprob: -10.253212928771973
    6. 'vs' → logprob: -10.628212928771973
    7. ' ' → logprob: -11.003212928771973
    8. '[' → logprob: -11.128212928771973
    9. '{' → logprob: -11.253212928771973
    10. '[f' → logprob: -11.378212928771973

Token 969: 'd' (ID: 67)
  Prédit: 'd'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.08968950808048248
    2. '3' → logprob: -2.5896894931793213
    3. '_' → logprob: -4.5896897315979
    4. '[' → logprob: -7.8396897315979
    5. 'f' → logprob: -9.339689254760742
    6. '_d' → logprob: -10.214689254760742
    7. 'v' → logprob: -11.214689254760742
    8. '[f' → logprob: -11.464689254760742
    9. ' ' → logprob: -11.714689254760742
    10. '[v' → logprob: -11.839689254760742

Token 970: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -1.5048530030981055e-06
    2. ' [' → logprob: -13.750001907348633
    3. 'sorted' → logprob: -16.250001907348633
    4. '   ' → logprob: -16.750001907348633
    5. '[[' → logprob: -17.000001907348633
    6. '[
' → logprob: -17.125001907348633
    7. ' ' → logprob: -17.125001907348633
    8. '[selected' → logprob: -17.250001907348633
    9. '           ' → logprob: -17.500001907348633
    10. '[s' → logprob: -17.875001907348633

Token 971: 'sorted' (ID: 64288)
  Prédit: 'sorted'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sorted' → logprob: -7.302704761968926e-05
    2. '[' → logprob: -9.625073432922363
    3. '(sorted' → logprob: -12.500073432922363
    4. ' sorted' → logprob: -12.750073432922363
    5. '.sorted' → logprob: -15.500073432922363
    6. '[
' → logprob: -17.875072479248047
    7. 'Sorted' → logprob: -18.125072479248047
    8. '{' → logprob: -18.500072479248047
    9. '_sorted' → logprob: -18.625072479248047
    10. '   ' → logprob: -18.875072479248047

Token 972: '_vs' (ID: 106451)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.27280113101005554
    2. '_vs' → logprob: -1.897801160812378
    3. 'vs' → logprob: -3.022801160812378
    4. 'sorted' → logprob: -4.022800922393799
    5. 'f' → logprob: -4.772800922393799
    6. '[f' → logprob: -5.147800922393799
    7. '(f' → logprob: -5.897800922393799
    8. '(sorted' → logprob: -5.897800922393799
    9. '_sorted' → logprob: -7.272800922393799
    10. '(' → logprob: -7.522800922393799

Token 973: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.5237306952476501
    2. '2' → logprob: -0.8987306952476501
    3. '(' → logprob: -7.648730754852295
    4. '   ' → logprob: -10.023730278015137
    5. '
' → logprob: -10.898730278015137
    6. '0' → logprob: -11.023730278015137
    7. '       ' → logprob: -11.648730278015137
    8. '{' → logprob: -11.648730278015137
    9. '           ' → logprob: -12.273730278015137
    10. ' ' → logprob: -12.398730278015137

Token 974: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.002212942810729146
    2. '0' → logprob: -6.127213001251221
    3. '1' → logprob: -11.627212524414062
    4. '3' → logprob: -12.189712524414062
    5. '   ' → logprob: -12.689712524414062
    6. ' ' → logprob: -13.064712524414062
    7. '[' → logprob: -13.127212524414062
    8. '-' → logprob: -13.689712524414062
    9. '```' → logprob: -13.814712524414062
    10. '
' → logprob: -14.002212524414062

Token 975: ']]
' (ID: 29446)
  Prédit: ']
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']
' → logprob: -0.3155054450035095
    2. ']' → logprob: -1.3155055046081543
    3. ']

' → logprob: -6.565505504608154
    4. ']
' → logprob: -7.440505504608154
    5. '           ' → logprob: -8.815505027770996
    6. '       ' → logprob: -10.690505027770996
    7. ']]
' → logprob: -11.315505027770996
    8. ')]' → logprob: -11.315505027770996
    9. '])' → logprob: -11.440505027770996
    10. ')]
' → logprob: -11.815505027770996

Token 976: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.03532025218009949
    2. '
' → logprob: -3.910320281982422
    3. '       ' → logprob: -5.160320281982422
    4. 'u' → logprob: -5.660320281982422
    5. '#' → logprob: -6.660320281982422
    6. 'import' → logprob: -7.160320281982422
    7. '            
' → logprob: -7.535320281982422
    8. 'x' → logprob: -7.910320281982422
    9. '   ' → logprob: -8.035320281982422
    10. 'dx' → logprob: -8.160320281982422

Token 977: ' #' (ID: 1069)
  Prédit: 'u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'u' → logprob: -0.7298895716667175
    2. '           ' → logprob: -0.9798895716667175
    3. '#' (adapté à ' #') → logprob: -3.1048896312713623
    4. 'import' → logprob: -3.6048896312713623
    5. 'vec' → logprob: -3.7298896312713623
    6. ' u' → logprob: -3.8548896312713623
    7. '
' → logprob: -4.854889392852783
    8. 'uv' → logprob: -5.979889392852783
    9. 'def' → logprob: -6.229889392852783
    10. 'v' → logprob: -6.229889392852783

Token 978: ' Basis' (ID: 60805)
  Prédit: 'u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'u' → logprob: -0.9518464207649231
    2. 'def' → logprob: -1.4518463611602783
    3. 'vec' → logprob: -1.5768463611602783
    4. '#' → logprob: -1.9518463611602783
    5. 'ux' → logprob: -4.451846599578857
    6. 'ox' → logprob: -5.201846599578857
    7. 'import' → logprob: -5.326846599578857
    8. 'uv' → logprob: -5.701846599578857
    9. '   ' → logprob: -6.576846599578857
    10. 'uo' → logprob: -7.451846599578857

Token 979: ' vectors' (ID: 52254)
  Prédit: '_u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_u' → logprob: -0.49442946910858154
    2. 'u' → logprob: -0.9944294691085815
    3. ' =' → logprob: -5.244429588317871
    4. 'origin' → logprob: -5.619429588317871
    5. '_origin' → logprob: -5.869429588317871
    6. '_vec' → logprob: -6.619429588317871
    7. 'vec' → logprob: -6.994429588317871
    8. 'vector' → logprob: -6.994429588317871
    9. 'e' → logprob: -6.994429588317871
    10. '=' → logprob: -7.244429588317871

Token 980: ' in' (ID: 306)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.28267425298690796
    2. 'u' → logprob: -1.5326743125915527
    3. '=' → logprob: -4.032674312591553
    4. ' u' → logprob: -5.407674312591553
    5. '_u' → logprob: -6.032674312591553
    6. '           ' → logprob: -6.157674312591553
    7. '=(' → logprob: -6.907674312591553
    8. '=u' → logprob: -7.782674312591553
    9. '(u' → logprob: -7.907674312591553
    10. ' (' → logprob: -8.157673835754395

Token 981: ' face' (ID: 4950)
  Prédit: '(
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(
' → logprob: -0.18270911276340485
    2. '[' → logprob: -2.682709217071533
    3. 'tuple' → logprob: -2.932709217071533
    4. '[
' → logprob: -4.307709217071533
    5. '(x' → logprob: -5.307709217071533
    6. '[x' → logprob: -5.557709217071533
    7. 'x' → logprob: -5.682709217071533
    8. 'def' → logprob: -5.682709217071533
    9. '(tuple' → logprob: -5.807709217071533
    10. '(float' → logprob: -5.807709217071533

Token 982: ' plane' (ID: 16499)
  Prédit: ' plane'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' plane' → logprob: -0.4828023910522461
    2. ' u' → logprob: -2.107802391052246
    3. 'plane' → logprob: -2.357802391052246
    4. 'u' → logprob: -2.607802391052246
    5. ' =' → logprob: -3.357802391052246
    6. '_u' → logprob: -3.607802391052246
    7. ':' → logprob: -4.982802391052246
    8. '_plane' → logprob: -5.482802391052246
    9. ' v' → logprob: -5.607802391052246
    10. 'v' → logprob: -5.982802391052246

Token 983: ' (' (ID: 350)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.40348488092422485
    2. 'u' → logprob: -1.77848482131958
    3. '           ' → logprob: -2.27848482131958
    4. ' u' → logprob: -3.90348482131958
    5. '=' → logprob: -4.02848482131958
    6. 'v' → logprob: -5.52848482131958
    7. ' vector' → logprob: -5.77848482131958
    8. '=u' → logprob: -6.15348482131958
    9. '(u' → logprob: -6.40348482131958
    10. ',' → logprob: -6.65348482131958

Token 984: 'v' (ID: 85)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.3187257051467896
    2. '(
' → logprob: -1.6937257051467896
    3. 'v' → logprob: -1.9437257051467896
    4. 'u' → logprob: -2.1937255859375
    5. ')
' → logprob: -2.9437255859375
    6. ' (' → logprob: -3.1937255859375
    7. ' v' → logprob: -3.4437255859375
    8. 'x' → logprob: -3.6937255859375
    9. '(u' → logprob: -3.8187255859375
    10. '(v' → logprob: -4.4437255859375

Token 985: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.005354601424187422
    2. 'v' → logprob: -6.505354404449463
    3. '_' → logprob: -7.005354404449463
    4. '
' → logprob: -7.130354404449463
    5. 'u' → logprob: -7.505354404449463
    6. '_u' → logprob: -8.380354881286621
    7. 'vector' → logprob: -9.130354881286621
    8. '

' → logprob: -9.255354881286621
    9. '2' → logprob: -9.505354881286621
    10. 'b' → logprob: -9.505354881286621

Token 986: '-origin' (ID: 156335)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.023574111983180046
    2. ',' → logprob: -4.648573875427246
    3. '
' → logprob: -4.898573875427246
    4. ')' → logprob: -6.398573875427246
    5. '),' → logprob: -7.023573875427246
    6. '[i' → logprob: -7.148573875427246
    7. '   ' → logprob: -8.023573875427246
    8. ' [' → logprob: -8.023573875427246
    9. 'x' → logprob: -8.148573875427246
    10. '=' → logprob: -8.773573875427246

Token 987: ')' (ID: 8)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.08095307648181915
    2. ')' → logprob: -3.3309531211853027
    3. ',' → logprob: -3.9559531211853027
    4. '),' → logprob: -4.080953121185303
    5. '),
' → logprob: -6.205953121185303
    6. ')
' → logprob: -6.580953121185303
    7. ',
' → logprob: -7.705953121185303
    8. ' ,' → logprob: -7.955953121185303
    9. ' )' → logprob: -8.080952644348145
    10. ' ),' → logprob: -8.330952644348145

Token 988: ' and' (ID: 326)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.043833907693624496
    2. '=' → logprob: -3.1688339710235596
    3. 'u' → logprob: -7.6688337326049805
    4. '=(' → logprob: -9.04383373260498
    5. 'v' → logprob: -9.91883373260498
    6. 'x' → logprob: -9.91883373260498
    7. '=u' → logprob: -9.91883373260498
    8. ',' → logprob: -10.79383373260498
    9. ')' → logprob: -11.04383373260498
    10. '_u' → logprob: -11.54383373260498

Token 989: ' (' (ID: 350)
  Prédit: ' ('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.7546077966690063
    2. '(v' → logprob: -0.7546077966690063
    3. 'v' → logprob: -3.504607677459717
    4. ' v' → logprob: -3.629607677459717
    5. ' vector' → logprob: -6.379607677459717
    6. 'vector' → logprob: -7.629607677459717
    7. '
' → logprob: -8.629608154296875
    8. '(' → logprob: -8.754608154296875
    9. '(vector' → logprob: -9.379608154296875
    10. ' ' → logprob: -9.504608154296875

Token 990: 'v' (ID: 85)
  Prédit: 'v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.31553032994270325
    2. ' v' → logprob: -1.3155303001403809
    3. ' (' → logprob: -7.190530300140381
    4. ' ' → logprob: -7.565530300140381
    5. '(v' → logprob: -7.690530300140381
    6. '   ' → logprob: -9.440530776977539
    7. ' ' → logprob: -9.815530776977539
    8. ')' → logprob: -9.940530776977539
    9. ' vector' → logprob: -10.128030776977539
    10. 'vector' → logprob: -10.190530776977539

Token 991: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -2.2200749754119897e-06
    2. '[' → logprob: -14.125001907348633
    3. '
' → logprob: -14.875001907348633
    4. 'ectors' → logprob: -15.000001907348633
    5. '```' → logprob: -16.000001907348633
    6. '   ' → logprob: -16.125001907348633
    7. 'ector' → logprob: -16.562501907348633
    8. 's' → logprob: -16.812501907348633
    9. '۲' → logprob: -17.062501907348633
    10. '
' → logprob: -17.125001907348633

Token 992: '-origin' (ID: 156335)
  Prédit: '-origin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-origin' → logprob: -0.03787919878959656
    2. ' -' → logprob: -3.412879228591919
    3. '-' → logprob: -6.16287899017334
    4. '[' → logprob: -7.66287899017334
    5. 'origin' → logprob: -7.66287899017334
    6. ')' → logprob: -8.03787899017334
    7. '-Origin' → logprob: -8.28787899017334
    8. ',' → logprob: -9.16287899017334
    9. '
' → logprob: -9.53787899017334
    10. ' ' → logprob: -9.66287899017334

Token 993: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.015221892856061459
    2. ')
' → logprob: -4.265222072601318
    3. '),' → logprob: -7.890222072601318
    4. ' )' → logprob: -8.14022159576416
    5. ',' → logprob: -9.39022159576416
    6. '           ' → logprob: -9.64022159576416
    7. '):
' → logprob: -10.14022159576416
    8. '),
' → logprob: -10.39022159576416
    9. ')
' → logprob: -10.64022159576416
    10. ' )
' → logprob: -10.64022159576416

Token 994: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.05619175732135773
    2. '
' → logprob: -3.5561916828155518
    3. 'u' → logprob: -4.306191921234131
    4. ' u' → logprob: -5.681191921234131
    5. ',' → logprob: -5.806191921234131
    6. 'x' → logprob: -6.931191921234131
    7. ' self' → logprob: -7.056191921234131
    8. 'self' → logprob: -7.431191921234131
    9. 'import' → logprob: -7.556191921234131
    10. '            
' → logprob: -7.681191921234131

Token 995: ' u' (ID: 337)
  Prédit: 'u'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'u' (adapté à ' u') → logprob: -0.32368695735931396
    2. ' u' → logprob: -2.6986870765686035
    3. 'vec' → logprob: -3.0736870765686035
    4. ' vector' → logprob: -3.0736870765686035
    5. '           ' → logprob: -3.1986870765686035
    6. 'vector' → logprob: -3.4486870765686035
    7. 'self' → logprob: -4.0736870765686035
    8. ' self' → logprob: -4.4486870765686035
    9. ' vec' → logprob: -5.3236870765686035
    10. 'uv' → logprob: -6.0736870765686035

Token 996: '_raw' (ID: 36128)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.11283571273088455
    2. ' =' → logprob: -2.237835645675659
    3. '=(' → logprob: -12.987835884094238
    4. '1' → logprob: -12.987835884094238
    5. 'x' → logprob: -13.237835884094238
    6. ',' → logprob: -13.862835884094238
    7. 's' → logprob: -14.112835884094238
    8. '=
' → logprob: -14.237835884094238
    9. '_' → logprob: -14.362835884094238
    10. '0' → logprob: -14.862835884094238

Token 997: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.07890421897172928
    2. ' =' → logprob: -2.578904151916504
    3. '=(' → logprob: -11.328904151916504
    4. '   ' → logprob: -13.828904151916504
    5. 'x' → logprob: -14.578904151916504
    6. ' =(' → logprob: -15.203904151916504
    7. '=((' → logprob: -15.828904151916504
    8. ' ' → logprob: -15.953904151916504
    9. '           ' → logprob: -16.07890510559082
    10. '=
' → logprob: -16.82890510559082

Token 998: ' vector' (ID: 9727)
  Prédit: '(v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(v' → logprob: -0.08893478661775589
    2. '(tuple' → logprob: -2.838934898376465
    3. '(' → logprob: -4.088934898376465
    4. '(
' → logprob: -4.838934898376465
    5. '(vector' → logprob: -6.588934898376465
    6. 'tuple' → logprob: -8.588934898376465
    7. ' (' → logprob: -9.338934898376465
    8. '((' → logprob: -9.338934898376465
    9. '(math' → logprob: -10.338934898376465
    10. '(t' → logprob: -10.338934898376465

Token 999: '_sub' (ID: 11572)
  Prédit: '_sub'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sub' → logprob: -0.9671896696090698
    2. 'subtract' → logprob: -1.7171896696090698
    3. '(' → logprob: -1.8421896696090698
    4. '(
' → logprob: -2.2171897888183594
    5. 'sub' → logprob: -2.4671897888183594
    6. '=' → logprob: -3.0921897888183594
    7. 's' → logprob: -3.9671897888183594
    8. ' =' → logprob: -4.842189788818359
    9. '(sub' → logprob: -6.342189788818359
    10. '-' → logprob: -6.342189788818359

Token 1000: '(v' (ID: 6932)
  Prédit: 'tract'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tract' → logprob: -0.5585829019546509
    2. '(v' → logprob: -0.9335829019546509
    3. 'stract' → logprob: -4.058582782745361
    4. '(origin' → logprob: -5.058582782745361
    5. '(' → logprob: -5.183582782745361
    6. '(u' → logprob: -5.933582782745361
    7. 'traction' → logprob: -6.308582782745361
    8. 't' → logprob: -7.808582782745361
    9. 'tr' → logprob: -8.18358325958252
    10. '(vector' → logprob: -8.80858325958252

Token 1001: '1' (ID: 16)
  Prédit: '(origin'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(origin' → logprob: -0.1659952998161316
    2. 'ector' → logprob: -1.9159953594207764
    3. 'origin' → logprob: -5.665995121002197
    4. '3' → logprob: -6.790995121002197
    5. 'ectors' → logprob: -8.040995597839355
    6. 'ect' → logprob: -8.165995597839355
    7. 'er' → logprob: -9.040995597839355
    8. 'ec' → logprob: -9.290995597839355
    9. '(' → logprob: -9.665995597839355
    10. ' origin' → logprob: -9.790995597839355

Token 1002: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.005012444220483303
    2. ',
' → logprob: -6.255012512207031
    3. 'origin' → logprob: -6.255012512207031
    4. '(origin' → logprob: -7.130012512207031
    5. ' ,' → logprob: -8.505012512207031
    6. ')' → logprob: -9.880012512207031
    7. '
' → logprob: -10.005012512207031
    8. '),' → logprob: -12.255012512207031
    9. ',

' → logprob: -12.255012512207031
    10. ')
' → logprob: -12.380012512207031

Token 1003: ' origin' (ID: 12839)
  Prédit: 'origin'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'origin' → logprob: -5.848420551046729e-05
    2. ' origin' → logprob: -9.7500581741333
    3. '   ' → logprob: -17.000059127807617
    4. '
' → logprob: -17.500059127807617
    5. '(origin' → logprob: -17.625059127807617
    6. '           ' → logprob: -18.500059127807617
    7. ')' → logprob: -19.875059127807617
    8. 'orig' → logprob: -20.125059127807617
    9. '               ' → logprob: -20.250059127807617
    10. '       ' → logprob: -20.875059127807617

Token 1004: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.020558351650834084
    2. ')
' → logprob: -3.8955583572387695
    3. ')
' → logprob: -12.52055835723877
    4. ')#' → logprob: -12.77055835723877
    5. '<|end|>' → logprob: -12.89555835723877
    6. ',' → logprob: -13.27055835723877
    7. ')

' → logprob: -13.64555835723877
    8. ' )' → logprob: -13.64555835723877
    9. '),' → logprob: -14.02055835723877
    10. ')`' → logprob: -14.64555835723877

Token 1005: '           ' (ID: 352)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.4442492425441742
    2. '<|end|>' → logprob: -1.9442492723464966
    3. 'u' → logprob: -2.694249153137207
    4. ')' → logprob: -3.569249153137207
    5. '   ' → logprob: -3.694249153137207
    6. '           ' → logprob: -4.319249153137207
    7. ' ' → logprob: -4.444249153137207
    8. '' → logprob: -4.569249153137207
    9. '\n' → logprob: -4.694249153137207
    10. '  
' → logprob: -4.694249153137207

Token 1006: ' v' (ID: 323)
  Prédit: 'u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'u' → logprob: -0.03318418934941292
    2. ' u' → logprob: -3.908184289932251
    3. 'v' (adapté à ' v') → logprob: -4.658184051513672
    4. 'vector' → logprob: -6.283184051513672
    5. '           ' → logprob: -8.158184051513672
    6. '   ' → logprob: -8.408184051513672
    7. ' vector' → logprob: -8.408184051513672
    8. ' v' → logprob: -8.533184051513672
    9. '       ' → logprob: -9.283184051513672
    10. 'def' → logprob: -9.408184051513672

Token 1007: '_raw' (ID: 36128)
  Prédit: '_raw'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_raw' → logprob: -0.0007305434555746615
    2. '_' → logprob: -7.625730514526367
    3. '=_' → logprob: -9.250730514526367
    4. ' =' → logprob: -9.500730514526367
    5. '=' → logprob: -10.250730514526367
    6. '\' → logprob: -12.000730514526367
    7. ' _' → logprob: -12.125730514526367
    8. '```' → logprob: -13.000730514526367
    9. '_s' → logprob: -13.375730514526367
    10. '##_' → logprob: -13.625730514526367

Token 1008: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.2519298195838928
    2. ' =' → logprob: -1.501929759979248
    3. ')' → logprob: -14.751930236816406
    4. ',' → logprob: -14.876930236816406
    5. ' ' → logprob: -17.876930236816406
    6. '<|end|>' → logprob: -18.126930236816406
    7. ')=' → logprob: -19.001930236816406
    8. '=}' → logprob: -19.126930236816406
    9. 's' → logprob: -19.251930236816406
    10. '.' → logprob: -19.251930236816406

Token 1009: ' vector' (ID: 9727)
  Prédit: 'vector'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'vector' → logprob: -0.06196959316730499
    2. ' vector' → logprob: -2.811969518661499
    3. '(vector' → logprob: -13.436969757080078
    4. '.vector' → logprob: -15.811969757080078
    5. '	vector' → logprob: -16.061969757080078
    6. '<vector' → logprob: -17.061969757080078
    7. '   ' → logprob: -17.311969757080078
    8. 'vectors' → logprob: -17.561969757080078
    9. '_vector' → logprob: -18.186969757080078
    10. 'vect' → logprob: -18.811969757080078

Token 1010: '_sub' (ID: 11572)
  Prédit: '_sub'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sub' → logprob: -1.676292231422849e-05
    2. 'sub' → logprob: -11.000017166137695
    3. '_add' → logprob: -18.250017166137695
    4. 'subtract' → logprob: -18.750017166137695
    5. '_' → logprob: -19.250017166137695
    6. 'Sub' → logprob: -19.375017166137695
    7. '_SUB' → logprob: -19.500017166137695
    8. '_cross' → logprob: -20.125017166137695
    9. ' суб' → logprob: -20.250017166137695
    10. '	sub' → logprob: -20.375017166137695

Token 1011: '(v' (ID: 6932)
  Prédit: '(v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(v' → logprob: -3.128163257315464e-07
    2. '(vector' → logprob: -15.375
    3. '(' → logprob: -17.25
    4. 'v' → logprob: -19.0
    5. '(
' → logprob: -19.0
    6. 'vector' → logprob: -19.375
    7. ' (' → logprob: -19.75
    8. '((' → logprob: -21.375
    9. '(vertex' → logprob: -21.875
    10. '(Vector' → logprob: -22.0

Token 1012: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.2541396915912628
    2. '(v' → logprob: -1.5041396617889404
    3. 'v' → logprob: -6.3791399002075195
    4. 'ector' → logprob: -8.75413990020752
    5. '(' → logprob: -9.25413990020752
    6. 'origin' → logprob: -9.62913990020752
    7. 'ectors' → logprob: -10.12913990020752
    8. ')' → logprob: -10.50413990020752
    9. 'vector' → logprob: -10.62913990020752
    10. 'ect' → logprob: -11.25413990020752

Token 1013: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -9.507972572464496e-05
    2. ' ,' → logprob: -9.87509536743164
    3. '(origin' → logprob: -10.37509536743164
    4. '(' → logprob: -12.00009536743164
    5. ',
' → logprob: -13.25009536743164
    6. ')' → logprob: -13.62509536743164
    7. '<|end|>' → logprob: -13.87509536743164
    8. 'origin' → logprob: -14.75009536743164
    9. '`,' → logprob: -15.50009536743164
    10. 'import' → logprob: -15.75009536743164

Token 1014: ' origin' (ID: 12839)
  Prédit: 'origin'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'origin' → logprob: -0.014173625037074089
    2. ' origin' → logprob: -4.26417350769043
    3. '(origin' → logprob: -11.51417350769043
    4. '.origin' → logprob: -17.01417350769043
    5. 'orig' → logprob: -17.26417350769043
    6. ')' → logprob: -17.51417350769043
    7. '_origin' → logprob: -17.63917350769043
    8. 'Origin' → logprob: -17.63917350769043
    9. 'original' → logprob: -17.76417350769043
    10. '
' → logprob: -17.88917350769043

Token 1015: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.20144890248775482
    2. ')
' → logprob: -1.701448917388916
    3. '       ' → logprob: -11.076448440551758
    4. ')
' → logprob: -11.701448440551758
    5. '           ' → logprob: -12.326448440551758
    6. ')#' → logprob: -13.076448440551758
    7. ')`
' → logprob: -13.701448440551758
    8. ')

' → logprob: -13.826448440551758
    9. '   ' → logprob: -13.951448440551758
    10. ' )
' → logprob: -14.326448440551758

Token 1016: '           ' (ID: 352)
  Prédit: 'u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'u' → logprob: -0.19621247053146362
    2. '           ' → logprob: -2.0712125301361084
    3. ' u' → logprob: -4.196212291717529
    4. '       ' → logprob: -4.821212291717529
    5. '
' → logprob: -4.821212291717529
    6. ',' → logprob: -5.071212291717529
    7. 'import' → logprob: -5.821212291717529
    8. ',u' → logprob: -5.821212291717529
    9. '[u' → logprob: -6.196212291717529
    10. ',
' → logprob: -6.696212291717529

Token 1017: ' #' (ID: 1069)
  Prédit: 'u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'u' → logprob: -0.0019513490842655301
    2. ' u' → logprob: -7.376951217651367
    3. '#' (adapté à ' #') → logprob: -7.501951217651367
    4. '           ' → logprob: -7.626951217651367
    5. '       ' → logprob: -9.001951217651367
    6. 'self' → logprob: -9.626951217651367
    7. '   ' → logprob: -10.001951217651367
    8. 'def' → logprob: -10.626951217651367
    9. 'import' → logprob: -11.751951217651367
    10. '[u' → logprob: -13.001951217651367

Token 1018: ' Normalize' (ID: 155762)
  Prédit: 'u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'u' → logprob: -0.017907001078128815
    2. '#' → logprob: -4.76790714263916
    3. 'def' → logprob: -4.89290714263916
    4. ' u' → logprob: -6.76790714263916
    5. 'import' → logprob: -9.14290714263916
    6. ' def' → logprob: -9.64290714263916
    7. ' #' → logprob: -9.64290714263916
    8. 'norm' → logprob: -9.76790714263916
    9. '(u' → logprob: -10.01790714263916
    10. '   ' → logprob: -10.26790714263916

Token 1019: ' u' (ID: 337)
  Prédit: 'u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'u' → logprob: -0.01230455469340086
    2. ' u' → logprob: -4.512304782867432
    3. '(u' → logprob: -6.887304782867432
    4. '_u' → logprob: -9.012304306030273
    5. ',' → logprob: -10.387304306030273
    6. 'vector' → logprob: -11.012304306030273
    7. '   ' → logprob: -11.512304306030273
    8. ' (' → logprob: -11.512304306030273
    9. '```' → logprob: -11.512304306030273
    10. '(' → logprob: -11.887304306030273

Token 1020: '_raw' (ID: 36128)
  Prédit: '_u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_u' → logprob: -0.3359643518924713
    2. 'u' → logprob: -2.0859644412994385
    3. ' =' → logprob: -2.0859644412994385
    4. '=' → logprob: -3.9609644412994385
    5. '(u' → logprob: -4.835964202880859
    6. '_' → logprob: -5.335964202880859
    7. '=u' → logprob: -6.585964202880859
    8. ',' → logprob: -7.085964202880859
    9. ')' → logprob: -7.335964202880859
    10. '[u' → logprob: -8.08596420288086

Token 1021: ' to' (ID: 316)
  Prédit: 'u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'u' → logprob: -0.15101568400859833
    2. ' =' → logprob: -2.4010157585144043
    3. '=' → logprob: -3.0260157585144043
    4. '_u' → logprob: -7.901015758514404
    5. ' u' → logprob: -8.276015281677246
    6. '=u' → logprob: -8.651015281677246
    7. ',' → logprob: -9.151015281677246
    8. '```' → logprob: -10.151015281677246
    9. '(u' → logprob: -10.901015281677246
    10. '   ' → logprob: -11.151015281677246

Token 1022: ' unit' (ID: 7670)
  Prédit: 'unit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'unit' → logprob: -0.12739849090576172
    2. 'vector' → logprob: -2.3773984909057617
    3. 'length' → logprob: -4.752398490905762
    4. ' unit' → logprob: -4.877398490905762
    5. 'u' → logprob: -5.377398490905762
    6. '(' → logprob: -5.502398490905762
    7. ' vector' → logprob: -6.627398490905762
    8. '1' → logprob: -8.627398490905762
    9. ' length' → logprob: -9.002398490905762
    10. ' (' → logprob: -9.377398490905762

Token 1023: ' length' (ID: 5517)
  Prédit: 'vector'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'vector' → logprob: -0.25639262795448303
    2. '_vector' → logprob: -2.63139271736145
    3. 'u' → logprob: -2.88139271736145
    4. ' vector' → logprob: -2.88139271736145
    5. ',' → logprob: -4.256392478942871
    6. '_u' → logprob: -5.006392478942871
    7. '(u' → logprob: -5.506392478942871
    8. '_vectors' → logprob: -5.631392478942871
    9. '```' → logprob: -5.881392478942871
    10. '_vec' → logprob: -6.631392478942871

Token 1024: '
' (ID: 198)
  Prédit: 'u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'u' → logprob: -0.0035519623197615147
    2. '           ' → logprob: -6.378551959991455
    3. '(u' → logprob: -8.003552436828613
    4. ' u' → logprob: -8.253552436828613
    5. '```' → logprob: -8.253552436828613
    6. ',' → logprob: -8.628552436828613
    7. '
' → logprob: -9.003552436828613
    8. 'unit' → logprob: -9.128552436828613
    9. ',
' → logprob: -9.378552436828613
    10. ' (' → logprob: -9.628552436828613

Token 1025: '           ' (ID: 352)
  Prédit: 'u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'u' → logprob: -0.005096307024359703
    2. '```' → logprob: -6.505096435546875
    3. '           ' → logprob: -7.255096435546875
    4. '
' → logprob: -7.380096435546875
    5. '   ' → logprob: -7.505096435546875
    6. ' u' → logprob: -7.505096435546875
    7. '       ' → logprob: -8.130096435546875
    8. 'def' → logprob: -8.630096435546875
    9. '(u' → logprob: -9.255096435546875
    10. ',
' → logprob: -9.255096435546875

Token 1026: ' u' (ID: 337)
  Prédit: 'u'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'u' (adapté à ' u') → logprob: -0.013784170150756836
    2. ' u' → logprob: -4.388784408569336
    3. 'def' → logprob: -7.388784408569336
    4. ' def' → logprob: -8.888784408569336
    5. '(u' → logprob: -9.263784408569336
    6. '```' → logprob: -9.388784408569336
    7. 'import' → logprob: -9.763784408569336
    8. 'vector' → logprob: -9.763784408569336
    9. '   ' → logprob: -9.888784408569336
    10. ' (' → logprob: -10.263784408569336

Token 1027: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.25501182675361633
    2. '_' → logprob: -2.255011796951294
    3. ' =' → logprob: -2.380011796951294
    4. '_u' → logprob: -5.255012035369873
    5. '_length' → logprob: -5.380012035369873
    6. '_raw' → logprob: -5.630012035369873
    7. '_norm' → logprob: -5.880012035369873
    8. 'u' → logprob: -6.130012035369873
    9. '_vector' → logprob: -6.130012035369873
    10. '_unit' → logprob: -6.255012035369873

Token 1028: ' normalize' (ID: 44464)
  Prédit: 'vector'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'vector' → logprob: -0.002076028846204281
    2. ' vector' → logprob: -6.627076148986816
    3. 'normalize' → logprob: -7.377076148986816
    4. 'unit' → logprob: -9.377076148986816
    5. 'tuple' → logprob: -10.252076148986816
    6. ' normalize' → logprob: -13.502076148986816
    7. '(vector' → logprob: -13.627076148986816
    8. 'scalar' → logprob: -14.252076148986816
    9. 'vec' → logprob: -14.502076148986816
    10. '	vector' → logprob: -15.627076148986816

Token 1029: '(u' (ID: 17057)
  Prédit: '(u'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(u' → logprob: -0.014169970527291298
    2. '(' → logprob: -4.264170169830322
    3. '(v' → logprob: -13.139169692993164
    4. '(
' → logprob: -13.514169692993164
    5. '(vector' → logprob: -13.764169692993164
    6. 'u' → logprob: -13.764169692993164
    7. ' (' → logprob: -14.389169692993164
    8. '_vector' → logprob: -16.389169692993164
    9. 'vector' → logprob: -16.389169692993164
    10. ' u' → logprob: -17.389169692993164

Token 1030: '_raw' (ID: 36128)
  Prédit: '_raw'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_raw' → logprob: -0.0010462664067745209
    2. 'raw' → logprob: -7.501046180725098
    3. 'u' → logprob: -7.876046180725098
    4. ')' → logprob: -10.126046180725098
    5. '[u' → logprob: -10.876046180725098
    6. 'Raw' → logprob: -10.876046180725098
    7. '(u' → logprob: -11.251046180725098
    8. ')_' → logprob: -12.126046180725098
    9. '[' → logprob: -12.251046180725098
    10. '_RAW' → logprob: -13.251046180725098

Token 1031: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0009320637909695506
    2. ')
' → logprob: -7.000932216644287
    3. ' )' → logprob: -11.000931739807129
    4. ')#' → logprob: -13.375931739807129
    5. ')

' → logprob: -14.375931739807129
    6. ')
' → logprob: -14.500931739807129
    7. '   ' → logprob: -15.750931739807129
    8. ' )
' → logprob: -15.750931739807129
    9. ')`' → logprob: -15.750931739807129
    10. '<|end|>' → logprob: -16.000932693481445

Token 1032: '           ' (ID: 352)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1033: ' #' (ID: 1069)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.11886102706193924
    2. ' v' → logprob: -2.993860960006714
    3. '           ' → logprob: -3.243860960006714
    4. '       ' → logprob: -3.993860960006714
    5. '   ' → logprob: -5.993861198425293
    6. '
' → logprob: -7.493861198425293
    7. ',' → logprob: -7.493861198425293
    8. '	v' → logprob: -8.368861198425293
    9. ',v' → logprob: -8.493861198425293
    10. '#' (adapté à ' #') → logprob: -9.993861198425293

Token 1034: ' Project' (ID: 8761)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.028926150873303413
    2. '#' → logprob: -3.903926134109497
    3. 'n' → logprob: -6.028926372528076
    4. 'w' → logprob: -6.028926372528076
    5. 'proj' → logprob: -7.528926372528076
    6. 'vn' → logprob: -7.653926372528076
    7. 'cross' → logprob: -7.653926372528076
    8. 'def' → logprob: -7.778926372528076
    9. 'vv' → logprob: -8.028925895690918
    10. 'temp' → logprob: -8.403925895690918

Token 1035: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.01882389560341835
    2. ' v' → logprob: -4.143824100494385
    3. 'vector' → logprob: -6.143824100494385
    4. '(v' → logprob: -7.768824100494385
    5. ' vector' → logprob: -8.893823623657227
    6. '(vector' → logprob: -11.018823623657227
    7. '_v' → logprob: -11.018823623657227
    8. '	v' → logprob: -11.143823623657227
    9. '_vector' → logprob: -11.518823623657227
    10. '=v' → logprob: -12.393823623657227

Token 1036: '_raw' (ID: 36128)
  Prédit: '_raw'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_raw' → logprob: -0.5101878643035889
    2. ' onto' → logprob: -1.3851878643035889
    3. ' =' → logprob: -3.010187864303589
    4. ' v' → logprob: -3.635187864303589
    5. 'onto' → logprob: -4.135188102722168
    6. '=' → logprob: -4.135188102722168
    7. ' on' → logprob: -4.260188102722168
    8. 'v' → logprob: -4.635188102722168
    9. 'u' → logprob: -5.885188102722168
    10. '<|end|>' → logprob: -5.885188102722168

Token 1037: ' to' (ID: 316)
  Prédit: ' onto'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' onto' → logprob: -0.31341418623924255
    2. ',' → logprob: -2.3134140968322754
    3. 'onto' → logprob: -2.4384140968322754
    4. ' on' → logprob: -3.4384140968322754
    5. '<|end|>' → logprob: -4.063414096832275
    6. 'on' → logprob: -5.063414096832275
    7. ')' → logprob: -5.188414096832275
    8. 'v' → logprob: -5.438414096832275
    9. ' -' → logprob: -5.688414096832275
    10. ' v' → logprob: -6.063414096832275

Token 1038: ' plane' (ID: 16499)
  Prédit: 'vector'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'vector' → logprob: -0.42562445998191833
    2. 'plane' → logprob: -1.5506244897842407
    3. 'v' → logprob: -2.425624370574951
    4. ' vector' → logprob: -4.300624370574951
    5. 'subtract' → logprob: -4.550624370574951
    6. 'sub' → logprob: -4.925624370574951
    7. 'u' → logprob: -5.175624370574951
    8. ' plane' → logprob: -5.675624370574951
    9. 'orth' → logprob: -6.550624370574951
    10. ' v' → logprob: -6.800624370574951

Token 1039: ' orth' (ID: 35656)
  Prédit: ' -'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.9749236702919006
    2. 'u' → logprob: -1.3499236106872559
    3. '-' → logprob: -1.9749236106872559
    4. ' u' → logprob: -2.349923610687256
    5. '(u' → logprob: -3.349923610687256
    6. 'per' → logprob: -4.099923610687256
    7. ',' → logprob: -4.474923610687256
    8. ' perpendicular' → logprob: -4.599923610687256
    9. '   ' → logprob: -4.849923610687256
    10. ' onto' → logprob: -5.349923610687256

Token 1040: 'ogonal' (ID: 127861)
  Prédit: 'ogonal'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ogonal' → logprob: -3.7697225252486533e-06
    2. 'on' → logprob: -13.000003814697266
    3. 'ogon' → logprob: -14.500003814697266
    4. '```' → logprob: -15.750003814697266
    5. '(u' → logprob: -15.875003814697266
    6. 'g' → logprob: -16.000003814697266
    7. 'normal' → logprob: -16.250003814697266
    8. 'og' → logprob: -16.250003814697266
    9. '   ' → logprob: -16.625003814697266
    10. 'u' → logprob: -16.750003814697266

Token 1041: ' to' (ID: 316)
  Prédit: 'to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'to' → logprob: -0.16950353980064392
    2. ' to' → logprob: -2.0445034503936768
    3. 'u' → logprob: -4.669503688812256
    4. '=' → logprob: -5.044503688812256
    5. '(u' → logprob: -5.669503688812256
    6. ' u' → logprob: -5.794503688812256
    7. ')' → logprob: -6.669503688812256
    8. '_to' → logprob: -6.919503688812256
    9. '(' → logprob: -7.294503688812256
    10. ',' → logprob: -7.919503688812256

Token 1042: ' u' (ID: 337)
  Prédit: 'u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'u' → logprob: -0.0015059324214234948
    2. ' u' → logprob: -6.5015058517456055
    3. 'vector' → logprob: -13.126505851745605
    4. '(u' → logprob: -13.751505851745605
    5. ' vector' → logprob: -15.876505851745605
    6. '```' → logprob: -16.626506805419922
    7. '	u' → logprob: -16.876506805419922
    8. '
' → logprob: -16.876506805419922
    9. '`' → logprob: -17.126506805419922
    10. 'Vector' → logprob: -17.501506805419922

Token 1043: '
' (ID: 198)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.07179546356201172
    2. ')' → logprob: -4.446795463562012
    3. ' and' → logprob: -4.571795463562012
    4. '           ' → logprob: -4.571795463562012
    5. ',
' → logprob: -4.821795463562012
    6. 'v' → logprob: -5.446795463562012
    7. ':' → logprob: -5.696795463562012
    8. ' (' → logprob: -5.821795463562012
    9. ' =' → logprob: -5.946795463562012
    10. '<|end|>' → logprob: -6.071795463562012

Token 1044: '           ' (ID: 352)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -1.2511566877365112
    2. '           ' → logprob: -1.6261566877365112
    3. 'v' → logprob: -1.7511566877365112
    4. ',' → logprob: -2.001156806945801
    5. ' v' → logprob: -3.126156806945801
    6. '<|end|>' → logprob: -3.126156806945801
    7. '   ' → logprob: -4.501156806945801
    8. ' 
' → logprob: -4.501156806945801
    9. 'vector' → logprob: -4.501156806945801
    10. '  
' → logprob: -4.751156806945801

Token 1045: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' (adapté à ' v') → logprob: -0.1241045743227005
    2. ' v' → logprob: -2.2491044998168945
    3. 'w' → logprob: -5.6241044998168945
    4. 'proj' → logprob: -5.8741044998168945
    5. ' w' → logprob: -6.8741044998168945
    6. 'vector' → logprob: -7.2491044998168945
    7. ' proj' → logprob: -7.4991044998168945
    8. ' vector' → logprob: -7.8741044998168945
    9. 'u' → logprob: -7.9991044998168945
    10. 'def' → logprob: -8.374104499816895

Token 1046: '_proj' (ID: 132629)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.20327763259410858
    2. '_' → logprob: -2.453277587890625
    3. ' =' → logprob: -2.578277587890625
    4. '_raw' → logprob: -4.203277587890625
    5. '_=' → logprob: -5.203277587890625
    6. '=_' → logprob: -7.578277587890625
    7. ',' → logprob: -8.328277587890625
    8. '_proj' → logprob: -8.703277587890625
    9. '_,' → logprob: -9.328277587890625
    10. ')' → logprob: -9.328277587890625

Token 1047: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.523141086101532
    2. ' =' → logprob: -0.898141086101532
    3. ',' → logprob: -11.648140907287598
    4. ')' → logprob: -12.648140907287598
    5. 'vector' → logprob: -13.523140907287598
    6. '_' → logprob: -13.648140907287598
    7. 'v' → logprob: -14.273140907287598
    8. '=
' → logprob: -15.148140907287598
    9. '=v' → logprob: -15.273140907287598
    10. '_vector' → logprob: -15.398140907287598

Token 1048: ' vector' (ID: 9727)
  Prédit: 'vector'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'vector' → logprob: -0.00015300170343834907
    2. ' vector' → logprob: -9.000152587890625
    3. 'subtract' → logprob: -10.500152587890625
    4. 'sub' → logprob: -13.625152587890625
    5. 'project' → logprob: -14.750152587890625
    6. '(vector' → logprob: -15.500152587890625
    7. 'vec' → logprob: -16.000152587890625
    8. 'tuple' → logprob: -16.375152587890625
    9. 'normalize' → logprob: -17.375152587890625
    10. '	vector' → logprob: -17.375152587890625

Token 1049: '_sub' (ID: 11572)
  Prédit: '_sub'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sub' → logprob: -0.00026777281891554594
    2. '_proj' → logprob: -9.12526798248291
    3. 'sub' → logprob: -9.25026798248291
    4. '_project' → logprob: -10.37526798248291
    5. '_cross' → logprob: -10.87526798248291
    6. '_' → logprob: -12.00026798248291
    7. 'subtract' → logprob: -12.50026798248291
    8. '_minus' → logprob: -14.25026798248291
    9. 'proj' → logprob: -14.50026798248291
    10. 'project' → logprob: -15.12526798248291

Token 1050: '(v' (ID: 6932)
  Prédit: '(v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(v' → logprob: -0.00010509284038562328
    2. '(' → logprob: -9.625104904174805
    3. 'v' → logprob: -10.375104904174805
    4. '(vector' → logprob: -12.375104904174805
    5. '(
' → logprob: -13.500104904174805
    6. 'vector' → logprob: -13.625104904174805
    7. ' (' → logprob: -15.125104904174805
    8. ',v' → logprob: -16.750104904174805
    9. '((' → logprob: -17.000104904174805
    10. 's' → logprob: -17.000104904174805

Token 1051: '_raw' (ID: 36128)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.007359090726822615
    2. '(v' → logprob: -5.007359027862549
    3. ' v' → logprob: -7.507359027862549
    4. 'ector' → logprob: -10.382359504699707
    5. ')v' → logprob: -11.382359504699707
    6. 'vector' → logprob: -11.507359504699707
    7. '=v' → logprob: -11.507359504699707
    8. 'raw' → logprob: -11.632359504699707
    9. '_raw' → logprob: -12.257359504699707
    10. 'ectors' → logprob: -12.382359504699707

Token 1052: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.006006414070725441
    2. ',v' → logprob: -5.381006240844727
    3. '(v' → logprob: -7.506006240844727
    4. ' ,' → logprob: -7.881006240844727
    5. ',u' → logprob: -8.006006240844727
    6. '(' → logprob: -10.131006240844727
    7. '(u' → logprob: -10.131006240844727
    8. 'v' → logprob: -10.881006240844727
    9. ',
' → logprob: -11.381006240844727
    10. ')' → logprob: -12.631006240844727

Token 1053: ' scalar' (ID: 35065)
  Prédit: 'vector'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'vector' → logprob: -0.03002144955098629
    2. 'scalar' → logprob: -3.5300214290618896
    3. 'scale' → logprob: -8.655021667480469
    4. 'project' → logprob: -10.030021667480469
    5. 'multiply' → logprob: -10.155021667480469
    6. ' vector' → logprob: -12.280021667480469
    7. '(vector' → logprob: -12.405021667480469
    8. 'projection' → logprob: -13.155021667480469
    9. 'tuple' → logprob: -13.405021667480469
    10. ' scalar' → logprob: -14.530021667480469

Token 1054: '_mult' (ID: 44050)
  Prédit: '_mul'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_mul' → logprob: -0.4979466497898102
    2. '_m' → logprob: -0.9979466199874878
    3. '_mult' → logprob: -3.7479467391967773
    4. 'mul' → logprob: -10.997946739196777
    5. 'multiply' → logprob: -13.497946739196777
    6. '_product' → logprob: -14.122946739196777
    7. '_proj' → logprob: -14.622946739196777
    8. '_multi' → logprob: -14.747946739196777
    9. 'Multiply' → logprob: -15.372946739196777
    10. 'mult' → logprob: -15.747946739196777

Token 1055: '(u' (ID: 17057)
  Prédit: '(u'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(u' → logprob: -0.34697338938713074
    2. 'u' → logprob: -1.3469734191894531
    3. '(' → logprob: -3.971973419189453
    4. 'v' → logprob: -4.471973419189453
    5. '(v' → logprob: -7.096973419189453
    6. '(s' → logprob: -7.471973419189453
    7. ' u' → logprob: -7.471973419189453
    8. ')' → logprob: -7.721973419189453
    9. ' (' → logprob: -8.846973419189453
    10. 's' → logprob: -9.846973419189453

Token 1056: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.8749817609786987
    2. '(u' → logprob: -1.7499817609786987
    3. 'dot' → logprob: -2.4999818801879883
    4. 'u' → logprob: -2.6249818801879883
    5. '(vector' → logprob: -2.6249818801879883
    6. 'vector' → logprob: -3.2499818801879883
    7. '(dot' → logprob: -3.4999818801879883
    8. 'scalar' → logprob: -3.6249818801879883
    9. ',u' → logprob: -3.6249818801879883
    10. '(v' → logprob: -3.8749818801879883

Token 1057: ' dot' (ID: 16579)
  Prédit: 'dot'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dot' → logprob: -0.2014826387166977
    2. 'vector' → logprob: -1.7014826536178589
    3. ' dot' → logprob: -10.451482772827148
    4. 'scalar' → logprob: -10.576482772827148
    5. ' vector' → logprob: -11.951482772827148
    6. '(dot' → logprob: -13.076482772827148
    7. 'vec' → logprob: -13.201482772827148
    8. 'inner' → logprob: -13.326482772827148
    9. 'v' → logprob: -13.451482772827148
    10. 'Dot' → logprob: -14.701482772827148

Token 1058: '(v' (ID: 6932)
  Prédit: '(u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(u' → logprob: -0.2215517908334732
    2. '(v' → logprob: -2.0965518951416016
    3. 'u' → logprob: -2.7215518951416016
    4. 'v' → logprob: -4.721551895141602
    5. '(' → logprob: -6.971551895141602
    6. 'product' → logprob: -9.346551895141602
    7. ')' → logprob: -10.346551895141602
    8. ')v' → logprob: -10.971551895141602
    9. '(
' → logprob: -11.096551895141602
    10. '```' → logprob: -11.346551895141602

Token 1059: '_raw' (ID: 36128)
  Prédit: '(u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(u' → logprob: -0.13284039497375488
    2. '(v' → logprob: -2.132840394973755
    3. 'u' → logprob: -5.632840156555176
    4. '(' → logprob: -6.507840156555176
    5. 'v' → logprob: -7.257840156555176
    6. '(
' → logprob: -10.257840156555176
    7. '
' → logprob: -11.382840156555176
    8. '_raw' → logprob: -11.757840156555176
    9. ',' → logprob: -11.882840156555176
    10. ' (' → logprob: -11.882840156555176

Token 1060: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.5783369541168213
    2. '(u' → logprob: -1.5783369541168213
    3. ',u' → logprob: -1.9533369541168213
    4. 'u' → logprob: -2.5783369541168213
    5. ',v' → logprob: -5.328336715698242
    6. '(v' → logprob: -5.578336715698242
    7. 'v' → logprob: -5.703336715698242
    8. ' ,' → logprob: -6.328336715698242
    9. ')' → logprob: -7.453336715698242
    10. '),' → logprob: -8.828336715698242

Token 1061: ' u' (ID: 337)
  Prédit: 'u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'u' → logprob: -0.00018244501552544534
    2. ' u' → logprob: -9.250182151794434
    3. '(u' → logprob: -9.500182151794434
    4. 'v' → logprob: -12.625182151794434
    5. ')' → logprob: -12.875182151794434
    6. '[u' → logprob: -13.000182151794434
    7. '	u' → logprob: -13.625182151794434
    8. '   ' → logprob: -14.500182151794434
    9. '
' → logprob: -15.000182151794434
    10. '),' → logprob: -15.500182151794434

Token 1062: ')))
' (ID: 12562)
  Prédit: '))
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))
' → logprob: -0.4133451581001282
    2. ')))
' → logprob: -1.5383450984954834
    3. '))' → logprob: -2.5383450984954834
    4. ')))' → logprob: -3.1633450984954834
    5. '))
' → logprob: -6.2883453369140625
    6. ')))
' → logprob: -8.413345336914062
    7. ')' → logprob: -8.538345336914062
    8. ' ))
' → logprob: -9.663345336914062
    9. ' ' → logprob: -9.663345336914062
    10. '))

' → logprob: -10.413345336914062

Token 1063: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.004090866539627314
    2. ')' → logprob: -5.754090785980225
    3. 'v' → logprob: -8.129091262817383
    4. ',' → logprob: -9.004091262817383
    5. ' v' → logprob: -9.254091262817383
    6. '       ' → logprob: -9.504091262817383
    7. '<|end|>' → logprob: -9.504091262817383
    8. '
' → logprob: -9.629091262817383
    9. '          ' → logprob: -10.254091262817383
    10. '               ' → logprob: -10.504091262817383

Token 1064: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' (adapté à ' v') → logprob: -0.06413678079843521
    2. ' v' → logprob: -2.8141367435455322
    3. '           ' → logprob: -6.314136981964111
    4. '   ' → logprob: -8.689136505126953
    5. '	v' → logprob: -9.689136505126953
    6. '       ' → logprob: -10.064136505126953
    7. '
' → logprob: -10.689136505126953
    8. ')v' → logprob: -11.564136505126953
    9. '          ' → logprob: -12.064136505126953
    10. ',v' → logprob: -12.189136505126953

Token 1065: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.2014312595129013
    2. ' =' → logprob: -1.7014312744140625
    3. '_proj' → logprob: -11.951431274414062
    4. '_' → logprob: -12.701431274414062
    5. '_norm' → logprob: -13.826431274414062
    6. ' ' → logprob: -14.076431274414062
    7. '=_' → logprob: -14.326431274414062
    8. '=v' → logprob: -14.326431274414062
    9. '_pro' → logprob: -14.326431274414062
    10. '```' → logprob: -14.576431274414062

Token 1066: ' normalize' (ID: 44464)
  Prédit: 'normalize'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'normalize' → logprob: -9.627176768844947e-05
    2. ' normalize' → logprob: -9.250096321105957
    3. 'normal' → logprob: -15.875096321105957
    4. 'norm' → logprob: -18.37509536743164
    5. '   ' → logprob: -20.12509536743164
    6. '(normal' → logprob: -20.87509536743164
    7. '.normalize' → logprob: -21.00009536743164
    8. ' ' → logprob: -21.25009536743164
    9. 'vector' → logprob: -21.75009536743164
    10. 'normalized' → logprob: -21.87509536743164

Token 1067: '(v' (ID: 6932)
  Prédit: '(v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(v' → logprob: -6.704273118884885e-07
    2. '(' → logprob: -14.250000953674316
    3. ' (' → logprob: -19.25
    4. 'v' → logprob: -19.75
    5. '\(' → logprob: -22.0
    6. '(vector' → logprob: -22.875
    7. '(
' → logprob: -22.875
    8. '((' → logprob: -23.125
    9. '(V' → logprob: -23.625
    10. '(u' → logprob: -24.0

Token 1068: '_proj' (ID: 132629)
  Prédit: '_proj'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_proj' → logprob: -1.8074162653647363e-05
    2. '_raw' → logprob: -11.125018119812012
    3. 'proj' → logprob: -13.125018119812012
    4. 'v' → logprob: -14.375018119812012
    5. 'raw' → logprob: -16.125017166137695
    6. '(v' → logprob: -16.125017166137695
    7. 'Proj' → logprob: -16.375017166137695
    8. ')' → logprob: -16.625017166137695
    9. '_project' → logprob: -16.875017166137695
    10. '
' → logprob: -17.250017166137695

Token 1069: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -3.173704271830502e-06
    2. ')
' → logprob: -13.00000286102295
    3. ' )' → logprob: -15.50000286102295
    4. '<|end|>' → logprob: -15.50000286102295
    5. ')#' → logprob: -15.87500286102295
    6. ')}' → logprob: -17.000003814697266
    7. '),' → logprob: -17.250003814697266
    8. ')return' → logprob: -17.375003814697266
    9. ')

' → logprob: -17.500003814697266
    10. '       ' → logprob: -17.500003814697266

Token 1070: '           ' (ID: 352)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1071: ' self' (ID: 1051)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.3236149549484253
    2. ')' → logprob: -1.4486149549484253
    3. '<|end|>' → logprob: -3.698615074157715
    4. '       ' → logprob: -5.198615074157715
    5. ')
' → logprob: -5.573615074157715
    6. 'self' (adapté à ' self') → logprob: -5.948615074157715
    7. '
' → logprob: -6.323615074157715
    8. ' self' → logprob: -7.198615074157715
    9. '   ' → logprob: -7.323615074157715
    10. '```' → logprob: -7.823615074157715

Token 1072: '.face' (ID: 92193)
  Prédit: '.face'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.face' → logprob: -0.00019197762594558299
    2. '.faces' → logprob: -9.000191688537598
    3. '.' → logprob: -10.250191688537598
    4. '.fac' → logprob: -11.500191688537598
    5. ' .' → logprob: -12.000191688537598
    6. '._' → logprob: -12.875191688537598
    7. '.Face' → logprob: -12.875191688537598
    8. '.focus' → logprob: -13.750191688537598
    9. '_face' → logprob: -13.875191688537598
    10. '`.' → logprob: -14.250191688537598

Token 1073: '_b' (ID: 1535)
  Prédit: '_b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_b' → logprob: -0.0001475220051361248
    2. '_basis' → logprob: -9.125147819519043
    3. 's' → logprob: -11.375147819519043
    4. '_faces' → logprob: -12.250147819519043
    5. ' _' → logprob: -12.625147819519043
    6. ')_' → logprob: -12.750147819519043
    7. '_s' → logprob: -12.750147819519043
    8. '_bas' → logprob: -13.250147819519043
    9. '   ' → logprob: -13.375147819519043
    10. '_' → logprob: -13.750147819519043

Token 1074: 'ases' (ID: 4324)
  Prédit: 'ases'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ases' → logprob: -0.00020795092859771103
    2. 'bases' → logprob: -8.500207901000977
    3. 'ase' → logprob: -12.750207901000977
    4. '_b' → logprob: -14.000207901000977
    5. 'asis' → logprob: -15.375207901000977
    6. 'Bases' → logprob: -16.500207901000977
    7. 'faces' → logprob: -16.625207901000977
    8. '#' → logprob: -16.875207901000977
    9. '_' → logprob: -17.250207901000977
    10. '```' → logprob: -17.250207901000977

Token 1075: '[f' (ID: 52330)
  Prédit: '[f'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[f' → logprob: -0.0008218993316404521
    2. '[' → logprob: -7.125822067260742
    3. '[e' → logprob: -11.375822067260742
    4. ' [' → logprob: -13.375822067260742
    5. '\[' → logprob: -14.125822067260742
    6. ')[' → logprob: -14.375822067260742
    7. '```' → logprob: -14.500822067260742
    8. '   ' → logprob: -14.750822067260742
    9. '[
' → logprob: -14.875822067260742
    10. ']' → logprob: -15.375822067260742

Token 1076: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.5830602049827576
    2. ' =' → logprob: -1.2080602645874023
    3. '=' → logprob: -2.0830602645874023
    4. ']=' → logprob: -4.083060264587402
    5. ']=(' → logprob: -7.708060264587402
    6. '[' → logprob: -7.833060264587402
    7. ' ]' → logprob: -7.833060264587402
    8. ')' → logprob: -8.708060264587402
    9. '   ' → logprob: -9.833060264587402
    10. ',' → logprob: -10.458060264587402

Token 1077: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.4740847051143646
    2. '=' → logprob: -0.974084734916687
    3. ')' → logprob: -12.724084854125977
    4. '=(' → logprob: -13.849084854125977
    5. '=self' → logprob: -14.099084854125977
    6. ' =(' → logprob: -14.849084854125977
    7. ']' → logprob: -14.974084854125977
    8. '.' → logprob: -14.974084854125977
    9. ' ' → logprob: -15.099084854125977
    10. '[' → logprob: -15.099084854125977

Token 1078: ' (' (ID: 350)
  Prédit: '(origin'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(origin' → logprob: -9.491498531133402e-06
    2. ' (' → logprob: -12.500009536743164
    3. '(orig' → logprob: -12.625009536743164
    4. '(' → logprob: -13.125009536743164
    5. '(original' → logprob: -15.375009536743164
    6. '   ' → logprob: -16.000009536743164
    7. '(
' → logprob: -17.500009536743164
    8. 'origin' → logprob: -18.000009536743164
    9. '(output' → logprob: -19.000009536743164
    10. '(owner' → logprob: -19.375009536743164

Token 1079: 'origin' (ID: 28202)
  Prédit: 'origin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'origin' → logprob: -1.4140441635390744e-05
    2. ' origin' → logprob: -11.750014305114746
    3. '(origin' → logprob: -12.000014305114746
    4. 'orig' → logprob: -18.75001335144043
    5. '   ' → logprob: -18.75001335144043
    6. 'original' → logprob: -19.37501335144043
    7. '.origin' → logprob: -20.12501335144043
    8. '_origin' → logprob: -21.62501335144043
    9. 'Origin' → logprob: -21.87501335144043
    10. '(' → logprob: -22.00001335144043

Token 1080: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -9.531813702778891e-05
    2. ' ,' → logprob: -9.62509536743164
    3. ',
' → logprob: -10.62509536743164
    4. ')' → logprob: -13.25009536743164
    5. ',u' → logprob: -13.75009536743164
    6. '   ' → logprob: -14.37509536743164
    7. '),' → logprob: -14.87509536743164
    8. ',v' → logprob: -15.12509536743164
    9. '<|end|>' → logprob: -15.37509536743164
    10. '‌,' → logprob: -16.00009536743164

Token 1081: ' u' (ID: 337)
  Prédit: 'u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'u' → logprob: -0.0019286326132714748
    2. ' u' → logprob: -6.251928806304932
    3. '(u' → logprob: -17.501928329467773
    4. '	u' → logprob: -18.251928329467773
    5. '   ' → logprob: -19.126928329467773
    6. ',u' → logprob: -22.376928329467773
    7. ')' → logprob: -22.626928329467773
    8. '           ' → logprob: -22.876928329467773
    9. '    ' → logprob: -23.001928329467773
    10. ' ' → logprob: -23.626928329467773

Token 1082: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.4974866644479334e-05
    2. ' ,' → logprob: -11.375015258789062
    3. ',v' → logprob: -13.125015258789062
    4. ',
' → logprob: -13.500015258789062
    5. ')' → logprob: -17.375015258789062
    6. '‌,' → logprob: -17.500015258789062
    7. '),' → logprob: -17.625015258789062
    8. ',)' → logprob: -18.500015258789062
    9. ',\
' → logprob: -18.625015258789062
    10. ',u' → logprob: -19.375015258789062

Token 1083: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -3.547789674485102e-05
    2. ' v' → logprob: -10.250035285949707
    3. '	v' → logprob: -17.000036239624023
    4. ')v' → logprob: -20.375036239624023
    5. '   ' → logprob: -21.125036239624023
    6. '_v' → logprob: -22.000036239624023
    7. '(v' → logprob: -22.000036239624023
    8. '$v' → logprob: -22.375036239624023
    9. ',v' → logprob: -23.625036239624023
    10. '<v' → logprob: -23.875036239624023

Token 1084: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.735893965815194e-05
    2. ')
' → logprob: -11.000017166137695
    3. '       ' → logprob: -15.375017166137695
    4. ' )' → logprob: -15.625017166137695
    5. '   ' → logprob: -16.000017166137695
    6. ')}' → logprob: -16.500017166137695
    7. ')

' → logprob: -16.625017166137695
    8. ')
' → logprob: -17.750017166137695
    9. '),' → logprob: -17.750017166137695
    10. '}' → logprob: -18.625017166137695

Token 1085: '   ' (ID: 271)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0037328568287193775
    2. '
' → logprob: -6.003732681274414
    3. '   ' → logprob: -6.878732681274414
    4. '#' → logprob: -9.003732681274414
    5. '```' → logprob: -9.753732681274414
    6. ')' → logprob: -10.503732681274414
    7. '    
' → logprob: -12.003732681274414
    8. ' def' → logprob: -12.378732681274414
    9. '

' → logprob: -12.503732681274414
    10. 'import' → logprob: -13.503732681274414

Token 1086: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.0013660696567967534
    2. '   ' → logprob: -7.251366138458252
    3. ')' → logprob: -7.376366138458252
    4. '
' → logprob: -11.376365661621094
    5. ' def' → logprob: -11.376365661621094
    6. ']' → logprob: -13.126365661621094
    7. '#' → logprob: -13.376365661621094
    8. '    
' → logprob: -13.626365661621094
    9. '```' → logprob: -13.751365661621094
    10. '	def' → logprob: -14.751365661621094

Token 1087: ' get' (ID: 717)
  Prédit: ' edge'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' edge' → logprob: -1.3603435754776
    2. ' face' → logprob: -1.7353435754776
    3. ' vector' → logprob: -1.7353435754776
    4. 'face' → logprob: -2.8603434562683105
    5. 'vector' → logprob: -2.8603434562683105
    6. 'edge' → logprob: -3.1103434562683105
    7. ' vertex' → logprob: -3.1103434562683105
    8. ' local' → logprob: -3.4853434562683105
    9. ' get' → logprob: -3.6103434562683105
    10. ' point' → logprob: -3.6103434562683105

Token 1088: '_face' (ID: 75619)
  Prédit: '_face'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_face' → logprob: -0.49056577682495117
    2. '_edge' → logprob: -1.1155657768249512
    3. '_adj' → logprob: -4.490565776824951
    4. '_faces' → logprob: -4.740565776824951
    5. '_position' → logprob: -5.115565776824951
    6. '_local' → logprob: -5.365565776824951
    7. '_edges' → logprob: -5.365565776824951
    8. '_point' → logprob: -5.490565776824951
    9. '_neighbor' → logprob: -5.615565776824951
    10. '_vector' → logprob: -5.740565776824951

Token 1089: '_op' (ID: 20111)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.9304076433181763
    2. '_vertices' → logprob: -1.4304076433181763
    3. '_vector' → logprob: -2.8054075241088867
    4. '_basis' → logprob: -2.8054075241088867
    5. '_neighbors' → logprob: -3.0554075241088867
    6. '_cont' → logprob: -3.1804075241088867
    7. '_coords' → logprob: -3.5554075241088867
    8. '_point' → logprob: -3.9304075241088867
    9. '_vectors' → logprob: -4.055407524108887
    10. '_edges' → logprob: -4.430407524108887

Token 1090: 'posite' (ID: 25800)
  Prédit: 'posite'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'posite' → logprob: -0.007166189607232809
    2. 't' → logprob: -5.757166385650635
    3. 'posit' → logprob: -6.382166385650635
    4. 'en' → logprob: -6.507166385650635
    5. 'er' → logprob: -7.882166385650635
    6. 'pos' → logprob: -8.882165908813477
    7. 'tim' → logprob: -9.007165908813477
    8. '_pos' → logprob: -10.257165908813477
    9. 'tion' → logprob: -10.632165908813477
    10. 'ening' → logprob: -11.007165908813477

Token 1091: '_vertex' (ID: 65291)
  Prédit: '_vertex'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_vertex' → logprob: -0.009259788319468498
    2. '(self' → logprob: -5.0092597007751465
    3. '(Vertex' → logprob: -6.1342597007751465
    4. 'vertex' → logprob: -8.384260177612305
    5. 'Vertex' → logprob: -10.509260177612305
    6. '_edge' → logprob: -10.634260177612305
    7. '_vertices' → logprob: -11.009260177612305
    8. '_vert' → logprob: -11.259260177612305
    9. '<Vertex' → logprob: -11.384260177612305
    10. '(vertex' → logprob: -11.509260177612305

Token 1092: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -5.466968650580384e-05
    2. '(' → logprob: -10.375054359436035
    3. 's' → logprob: -12.000054359436035
    4. 'self' → logprob: -12.375054359436035
    5. '   ' → logprob: -13.125054359436035
    6. '(
' → logprob: -13.250054359436035
    7. ' (' → logprob: -13.625054359436035
    8. '_face' → logprob: -13.625054359436035
    9. '_(' → logprob: -13.750054359436035
    10. '(face' → logprob: -14.125054359436035

Token 1093: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0540219321846962
    2. '(self' → logprob: -3.1790218353271484
    3. 'self' → logprob: -4.679021835327148
    4. ')(' → logprob: -7.554021835327148
    5. '   ' → logprob: -8.054021835327148
    6. ')' → logprob: -8.054021835327148
    7. ' ,' → logprob: -8.679021835327148
    8. '(' → logprob: -10.054021835327148
    9. ',self' → logprob: -10.054021835327148
    10. ' (' → logprob: -10.429021835327148

Token 1094: ' vertex' (ID: 25363)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.055914949625730515
    2. ' self' → logprob: -2.930914878845215
    3. 'face' → logprob: -7.805914878845215
    4. '   ' → logprob: -8.430914878845215
    5. 'f' → logprob: -8.555914878845215
    6. '(self' → logprob: -9.805914878845215
    7. ')' → logprob: -10.555914878845215
    8. 'v' → logprob: -10.680914878845215
    9. ' face' → logprob: -10.680914878845215
    10. 'vertex' → logprob: -10.680914878845215

Token 1095: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.08278167247772217
    2. '):' → logprob: -3.3327817916870117
    3. '(self' → logprob: -3.9577817916870117
    4. ',' → logprob: -4.457781791687012
    5. '   ' → logprob: -5.582781791687012
    6. '):
' → logprob: -5.582781791687012
    7. ')' → logprob: -6.582781791687012
    8. 's' → logprob: -6.957781791687012
    9. ' :' → logprob: -6.957781791687012
    10. 'self' → logprob: -7.207781791687012

Token 1096: ' str' (ID: 989)
  Prédit: 'str'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'str' → logprob: -0.01080563385039568
    2. ' str' → logprob: -4.635805606842041
    3. ')' → logprob: -7.635805606842041
    4. 'Vertex' → logprob: -8.0108060836792
    5. '   ' → logprob: -8.8858060836792
    6. ' ' → logprob: -11.0108060836792
    7. 's' → logprob: -11.2608060836792
    8. '(str' → logprob: -11.5108060836792
    9. ' Vertex' → logprob: -11.7608060836792
    10. ':str' → logprob: -11.7608060836792

Token 1097: ')' (ID: 8)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.16062499582767487
    2. ')' → logprob: -1.9106249809265137
    3. '   ' → logprob: -8.660625457763672
    4. '):' → logprob: -9.410625457763672
    5. 'self' → logprob: -9.660625457763672
    6. '       ' → logprob: -10.785625457763672
    7. ' ,' → logprob: -11.035625457763672
    8. '):
' → logprob: -11.160625457763672
    9. ' )' → logprob: -11.410625457763672
    10. ':' → logprob: -12.035625457763672

Token 1098: ' ->' (ID: 2747)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.11605237424373627
    2. ')' → logprob: -2.9910523891448975
    3. ':' → logprob: -3.4910523891448975
    4. ' ->' → logprob: -4.366052150726318
    5. '->' → logprob: -5.116052150726318
    6. ',' → logprob: -5.866052150726318
    7. '   ' → logprob: -6.116052150726318
    8. '):' → logprob: -6.366052150726318
    9. '       ' → logprob: -6.866052150726318
    10. 'self' → logprob: -7.366052150726318

Token 1099: ' Face' (ID: 29049)
  Prédit: 'Face'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Face' → logprob: -0.42633724212646484
    2. 'Optional' → logprob: -1.1763372421264648
    3. 'List' → logprob: -3.301337242126465
    4. 'None' → logprob: -7.301337242126465
    5. 'Tuple' → logprob: -7.926337242126465
    6. ' Face' → logprob: -8.551337242126465
    7. 'face' → logprob: -8.926337242126465
    8. ' Optional' → logprob: -9.051337242126465
    9. 'Vertex' → logprob: -9.176337242126465
    10. 'Set' → logprob: -9.676337242126465

Token 1100: ':
' (ID: 734)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.008697419427335262
    2. '(
' → logprob: -5.008697509765625
    3. '(' → logprob: -6.883697509765625
    4. '   ' → logprob: -7.258697509765625
    5. '       ' → logprob: -9.008697509765625
    6. 'self' → logprob: -10.008697509765625
    7. ':' → logprob: -10.258697509765625
    8. ' (' → logprob: -11.383697509765625
    9. ')' → logprob: -12.008697509765625
    10. ':
' → logprob: -12.383697509765625

Token 1101: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0036857128143310547
    2. ')' → logprob: -7.12868595123291
    3. '   ' → logprob: -7.37868595123291
    4. ' for' → logprob: -7.75368595123291
    5. '<|end|>' → logprob: -7.75368595123291
    6. '```' → logprob: -8.50368595123291
    7. '    ' → logprob: -8.62868595123291
    8. ' return' → logprob: -8.75368595123291
    9. '        
' → logprob: -8.75368595123291
    10. ':' → logprob: -9.37868595123291

Token 1102: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.09394263476133347
    2. 'for' → logprob: -2.593942642211914
    3. ' for' → logprob: -4.218942642211914
    4. 'return' → logprob: -8.843942642211914
    5. 'faces' → logprob: -10.593942642211914
    6. '#' (adapté à ' #') → logprob: -11.093942642211914
    7. '```' → logprob: -11.218942642211914
    8. 'vertices' → logprob: -12.218942642211914
    9. ')' → logprob: -12.968942642211914
    10. 'face' → logprob: -13.093942642211914

Token 1103: ' The' (ID: 623)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0003794336807914078
    2. 'return' → logprob: -8.62537956237793
    3. 'faces' → logprob: -8.87537956237793
    4. '       ' → logprob: -9.87537956237793
    5. '   ' → logprob: -12.87537956237793
    6. ' for' → logprob: -13.25037956237793
    7. 'verts' → logprob: -13.75037956237793
    8. '"""' → logprob: -13.75037956237793
    9. 'face' → logprob: -14.37537956237793
    10. 'vertices' → logprob: -14.75037956237793

Token 1104: ' face' (ID: 4950)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.9724096655845642
    2. ' for' → logprob: -1.347409725189209
    3. 'faces' → logprob: -1.347409725189209
    4. 'face' → logprob: -3.472409725189209
    5. ' faces' → logprob: -3.847409725189209
    6. ' face' → logprob: -4.347409725189209
    7. 'f' → logprob: -4.597409725189209
    8. 'return' → logprob: -4.972409725189209
    9. 's' → logprob: -5.472409725189209
    10. '   ' → logprob: -5.722409725189209

Token 1105: ' opposite' (ID: 23821)
  Prédit: ' opposite'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' opposite' → logprob: -1.3442150354385376
    2. 'op' → logprob: -1.7192150354385376
    3. 'cont' → logprob: -2.094214916229248
    4. 'not' → logprob: -2.219214916229248
    5. ' containing' → logprob: -2.594214916229248
    6. ' not' → logprob: -2.969214916229248
    7. ' that' → logprob: -3.094214916229248
    8. 'that' → logprob: -3.844214916229248
    9. 'for' → logprob: -4.094214916229248
    10. ' for' → logprob: -4.094214916229248

Token 1106: ' to' (ID: 316)
  Prédit: 'to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'to' → logprob: -0.5138323307037354
    2. '(vertex' → logprob: -1.6388323307037354
    3. ' to' → logprob: -2.1388323307037354
    4. 'vertex' → logprob: -2.6388323307037354
    5. ' vertex' → logprob: -5.388832092285156
    6. 'self' → logprob: -5.763832092285156
    7. 'the' → logprob: -5.888832092285156
    8. '(self' → logprob: -6.013832092285156
    9. '(' → logprob: -6.138832092285156
    10. ' the' → logprob: -7.513832092285156

Token 1107: ' a' (ID: 261)
  Prédit: 'vertex'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'vertex' → logprob: -0.00030924470047466457
    2. ' vertex' → logprob: -8.125308990478516
    3. '	vertex' → logprob: -12.000308990478516
    4. 'Vertex' → logprob: -12.750308990478516
    5. '(vertex' → logprob: -13.125308990478516
    6. '   ' → logprob: -13.875308990478516
    7. '
' → logprob: -14.625308990478516
    8. '_vertex' → logprob: -15.625308990478516
    9. ' ' → logprob: -15.750308990478516
    10. 'self' → logprob: -15.875308990478516

Token 1108: ' vertex' (ID: 25363)
  Prédit: 'vertex'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'vertex' → logprob: -0.0002585978072602302
    2. 'given' → logprob: -8.500258445739746
    3. ' vertex' → logprob: -10.125258445739746
    4. ' given' → logprob: -12.125258445739746
    5. '	vertex' → logprob: -12.500258445739746
    6. '
' → logprob: -12.625258445739746
    7. '(vertex' → logprob: -13.500258445739746
    8. '{' → logprob: -15.375258445739746
    9. '_vertex' → logprob: -15.625258445739746
    10. 'v' → logprob: -15.750258445739746

Token 1109: ' is' (ID: 382)
  Prédit: ' is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.3610074818134308
    2. 'is' → logprob: -1.2360074520111084
    3. ' =' → logprob: -6.2360076904296875
    4. '(v' → logprob: -6.2360076904296875
    5. '(vertex' → logprob: -6.6110076904296875
    6. ' (' → logprob: -6.6110076904296875
    7. '(self' → logprob: -7.3610076904296875
    8. 'v' → logprob: -7.4860076904296875
    9. '   ' → logprob: -7.4860076904296875
    10. ' in' → logprob: -7.7360076904296875

Token 1110: ' the' (ID: 290)
  Prédit: 'next'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'next' → logprob: -0.2870407700538635
    2. 'Face' → logprob: -1.5370407104492188
    3. ' next' → logprob: -3.5370407104492188
    4. ' Face' → logprob: -6.162040710449219
    5. '   ' → logprob: -6.662040710449219
    6. '[' → logprob: -6.912040710449219
    7. '[next' → logprob: -8.037040710449219
    8. '{' → logprob: -8.287040710449219
    9. 'the' → logprob: -9.037040710449219
    10. ' [' → logprob: -9.412040710449219

Token 1111: ' one' (ID: 1001)
  Prédit: 'Face'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Face' → logprob: -0.04026651009917259
    2. 'face' → logprob: -3.415266513824463
    3. 'next' → logprob: -5.165266513824463
    4. ' Face' → logprob: -7.790266513824463
    5. '_face' → logprob: -9.040266036987305
    6. ' face' → logprob: -9.040266036987305
    7. 'f' → logprob: -9.415266036987305
    8. ' next' → logprob: -9.665266036987305
    9. 'set' → logprob: -10.540266036987305
    10. '[' → logprob: -11.290266036987305

Token 1112: ' not' (ID: 625)
  Prédit: ' next'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' next' → logprob: -1.1500951051712036
    2. 'v' → logprob: -2.275094985961914
    3. 'next' → logprob: -2.400094985961914
    4. ' with' → logprob: -2.525094985961914
    5. '   ' → logprob: -2.650094985961914
    6. ' that' → logprob: -3.025094985961914
    7. 'with' → logprob: -3.275094985961914
    8. ' for' → logprob: -3.400094985961914
    9. ' in' → logprob: -3.525094985961914
    10. '(v' → logprob: -3.650094985961914

Token 1113: ' containing' (ID: 15683)
  Prédit: 'cont'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cont' → logprob: -0.04371798411011696
    2. ' containing' → logprob: -3.168718099594116
    3. 'including' → logprob: -7.668717861175537
    4. ' including' → logprob: -8.793718338012695
    5. '_cont' → logprob: -10.043718338012695
    6. '   ' → logprob: -10.918718338012695
    7. ' ' → logprob: -11.793718338012695
    8. 'Containing' → logprob: -11.918718338012695
    9. '(cont' → logprob: -12.293718338012695
    10. 'in' → logprob: -12.543718338012695

Token 1114: ' that' (ID: 484)
  Prédit: 'vertex'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'vertex' → logprob: -0.004982201382517815
    2. ' vertex' → logprob: -5.754981994628906
    3. 'that' → logprob: -7.004981994628906
    4. '(vertex' → logprob: -7.504981994628906
    5. 'the' → logprob: -8.254981994628906
    6. '	vertex' → logprob: -10.004981994628906
    7. ' that' → logprob: -10.754981994628906
    8. '   ' → logprob: -11.379981994628906
    9. '```' → logprob: -13.004981994628906
    10. '       ' → logprob: -13.504981994628906

Token 1115: ' vertex' (ID: 25363)
  Prédit: 'vertex'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'vertex' → logprob: -0.0036130205262452364
    2. ' vertex' → logprob: -5.628612995147705
    3. '	vertex' → logprob: -11.753613471984863
    4. '
' → logprob: -13.753613471984863
    5. '   ' → logprob: -14.003613471984863
    6. ' ' → logprob: -14.003613471984863
    7. '_vertex' → logprob: -14.128613471984863
    8. '(vertex' → logprob: -14.503613471984863
    9. 'v' → logprob: -14.628613471984863
    10. '.vertex' → logprob: -15.253613471984863

Token 1116: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -1.1883506774902344
    2. 'for' → logprob: -1.3133506774902344
    3. ' for' → logprob: -1.8133506774902344
    4. '       ' → logprob: -1.9383506774902344
    5. '(v' → logprob: -3.1883506774902344
    6. '   ' → logprob: -4.188350677490234
    7. ',' → logprob: -4.563350677490234
    8. '(' → logprob: -4.688350677490234
    9. '(
' → logprob: -4.813350677490234
    10. '(f' → logprob: -5.813350677490234

Token 1117: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.13084879517555237
    2. '   ' → logprob: -2.3808488845825195
    3. '(' → logprob: -5.2558488845825195
    4. ' for' → logprob: -5.2558488845825195
    5. ':' → logprob: -5.5058488845825195
    6. '
' → logprob: -5.7558488845825195
    7. ')' → logprob: -6.6308488845825195
    8. ' =' → logprob: -6.8808488845825195
    9. '[' → logprob: -7.0058488845825195
    10. ' (' → logprob: -7.1308488845825195

Token 1118: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.06583073735237122
    2. ' for' → logprob: -2.815830707550049
    3. '       ' → logprob: -5.690830707550049
    4. 'return' → logprob: -7.690830707550049
    5. '```' → logprob: -10.940831184387207
    6. ' return' → logprob: -12.690831184387207
    7. '
' → logprob: -14.940831184387207
    8. '   ' → logprob: -15.565831184387207
    9. '	for' → logprob: -15.690831184387207
    10. '``' → logprob: -15.815831184387207

Token 1119: ' f' (ID: 285)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.030033713206648827
    2. 'face' → logprob: -3.530033826828003
    3. ' f' → logprob: -8.405034065246582
    4. ' face' → logprob: -9.780034065246582
    5. '	f' → logprob: -14.530034065246582
    6. '_face' → logprob: -14.655034065246582
    7. '   ' → logprob: -14.905034065246582
    8. 'Face' → logprob: -15.030034065246582
    9. 'faces' → logprob: -15.280034065246582
    10. 'fac' → logprob: -15.405034065246582

Token 1120: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0076742954552173615
    2. 'in' → logprob: -4.882674217224121
    3. 'f' → logprob: -10.382674217224121
    4. ' f' → logprob: -10.382674217224121
    5. ' ' → logprob: -12.632674217224121
    6. '	in' → logprob: -14.257674217224121
    7. 'n' → logprob: -14.757674217224121
    8. 's' → logprob: -15.132674217224121
    9. 'self' → logprob: -15.382674217224121
    10. '   ' → logprob: -15.632674217224121

Token 1121: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -5.872261317563243e-05
    2. ' self' → logprob: -9.750059127807617
    3. '(self' → logprob: -15.500059127807617
    4. '[self' → logprob: -15.625059127807617
    5. '   ' → logprob: -17.625059127807617
    6. 'f' → logprob: -17.875059127807617
    7. '
' → logprob: -18.250059127807617
    8. '=self' → logprob: -18.375059127807617
    9. ' ' → logprob: -18.750059127807617
    10. '[' → logprob: -19.125059127807617

Token 1122: '.faces' (ID: 78268)
  Prédit: '.faces'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.faces' → logprob: -7.3458322731312364e-06
    2. 'faces' → logprob: -11.875007629394531
    3. '.face' → logprob: -15.750007629394531
    4. '.f' → logprob: -16.12500762939453
    5. '.fac' → logprob: -17.62500762939453
    6. '.' → logprob: -18.00000762939453
    7. '
' → logprob: -18.25000762939453
    8. ' .' → logprob: -18.50000762939453
    9. '_faces' → logprob: -18.87500762939453
    10. '.edges' → logprob: -19.25000762939453

Token 1123: ':
' (ID: 734)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.44666388630867004
    2. ':' → logprob: -1.6966638565063477
    3. '       ' → logprob: -2.1966638565063477
    4. ' if' → logprob: -3.1966638565063477
    5. ':
' → logprob: -3.9466638565063477
    6. 'if' → logprob: -6.321663856506348
    7. ',' → logprob: -6.571663856506348
    8. '   ' → logprob: -7.696663856506348
    9. ' in' → logprob: -7.821663856506348
    10. '<|end|>' → logprob: -7.946663856506348

Token 1124: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.012526008300483227
    2. '       ' → logprob: -4.512526035308838
    3. ' if' → logprob: -7.262526035308838
    4. ',' → logprob: -8.38752555847168
    5. '<|end|>' → logprob: -8.51252555847168
    6. '   ' → logprob: -9.38752555847168
    7. '<|end|>' → logprob: -9.51252555847168
    8. 'if' → logprob: -10.13752555847168
    9. '	       ' → logprob: -10.13752555847168
    10. ':' → logprob: -10.38752555847168

Token 1125: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.6627209186553955
    2. ' if' → logprob: -1.2877209186553955
    3. '           ' → logprob: -1.7877209186553955
    4. 'not' → logprob: -3.5377209186553955
    5. '               ' → logprob: -4.787720680236816
    6. '       ' → logprob: -6.287720680236816
    7. ' not' → logprob: -6.412720680236816
    8. '   ' → logprob: -7.912720680236816
    9. '```' → logprob: -11.662720680236816
    10. '	       ' → logprob: -11.787720680236816

Token 1126: ' vertex' (ID: 25363)
  Prédit: 'vertex'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'vertex' → logprob: -0.03005037270486355
    2. ' vertex' → logprob: -3.530050277709961
    3. 'not' → logprob: -8.780050277709961
    4. '   ' → logprob: -9.780050277709961
    5. '	vertex' → logprob: -9.780050277709961
    6. ' not' → logprob: -11.030050277709961
    7. '(vertex' → logprob: -11.405050277709961
    8. 'v' → logprob: -13.405050277709961
    9. ' ' → logprob: -13.780050277709961
    10. '
' → logprob: -14.405050277709961

Token 1127: ' not' (ID: 625)
  Prédit: ' not'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.029754191637039185
    2. 'not' → logprob: -3.529754161834717
    3. '	not' → logprob: -13.904754638671875
    4. ')' → logprob: -14.029754638671875
    5. ' ' → logprob: -14.154754638671875
    6. ' !=' → logprob: -15.404754638671875
    7. '_not' → logprob: -15.404754638671875
    8. 'Not' → logprob: -15.529754638671875
    9. '!=' → logprob: -15.654754638671875
    10. ' no' → logprob: -16.404754638671875

Token 1128: ' in' (ID: 306)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -1.0031940937042236
    2. ' in' → logprob: -1.0031940937042236
    3. 'in' → logprob: -1.7531940937042236
    4. ' f' → logprob: -2.3781940937042236
    5. '(f' → logprob: -8.003193855285645
    6. ')' → logprob: -9.503193855285645
    7. ',f' → logprob: -9.753193855285645
    8. ',' → logprob: -9.878193855285645
    9. '=f' → logprob: -10.003193855285645
    10. '<f' → logprob: -11.003193855285645

Token 1129: ' f' (ID: 285)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.000488110730657354
    2. ' f' → logprob: -7.62548828125
    3. '   ' → logprob: -18.75048828125
    4. '	f' → logprob: -18.75048828125
    5. ')' → logprob: -19.00048828125
    6. '(f' → logprob: -19.50048828125
    7. ' ' → logprob: -20.25048828125
    8. '```' → logprob: -20.37548828125
    9. '{' → logprob: -20.62548828125
    10. '
' → logprob: -20.87548828125

Token 1130: '.v' (ID: 5520)
  Prédit: '.v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.v' → logprob: -0.00019126241386402398
    2. 'vs' → logprob: -8.625191688537598
    3. ').' → logprob: -12.625191688537598
    4. ')' → logprob: -13.375191688537598
    5. '.' → logprob: -13.375191688537598
    6. '_vs' → logprob: -13.875191688537598
    7. '.vn' → logprob: -14.000191688537598
    8. ' .' → logprob: -14.125191688537598
    9. ' vs' → logprob: -14.500191688537598
    10. '   ' → logprob: -14.625191688537598

Token 1131: 's' (ID: 82)
  Prédit: 's'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -1.0087516784551553e-05
    2. '.v' → logprob: -13.37501049041748
    3. '.s' → logprob: -13.37501049041748
    4. ')' → logprob: -13.75001049041748
    5. 'vs' → logprob: -13.87501049041748
    6. '```' → logprob: -13.87501049041748
    7. 'rs' → logprob: -14.37501049041748
    8. 'f' → logprob: -14.62501049041748
    9. '
' → logprob: -14.75001049041748
    10. '.' → logprob: -14.75001049041748

Token 1132: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.09429212659597397
    2. ':' → logprob: -2.719292163848877
    3. '               ' → logprob: -3.844292163848877
    4. '):
' → logprob: -6.469292163848877
    5. '           ' → logprob: -7.594292163848877
    6. ' and' → logprob: -8.594291687011719
    7. '():
' → logprob: -9.219291687011719
    8. ',' → logprob: -9.469291687011719
    9. '<|end|>' → logprob: -10.094291687011719
    10. 'and' → logprob: -10.219291687011719

Token 1133: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0006389308837242424
    2. ':' → logprob: -8.250638961791992
    3. ' return' → logprob: -9.250638961791992
    4. ':
' → logprob: -9.500638961791992
    5. '           ' → logprob: -9.625638961791992
    6. 'return' → logprob: -9.750638961791992
    7. ':return' → logprob: -10.250638961791992
    8. '<|end|>' → logprob: -11.125638961791992
    9. '              ' → logprob: -11.500638961791992
    10. ',' → logprob: -11.875638961791992

Token 1134: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.20787082612514496
    2. ' return' → logprob: -1.7078708410263062
    3. '               ' → logprob: -5.082870960235596
    4. ':return' → logprob: -9.582870483398438
    5. '           ' → logprob: -9.707870483398438
    6. '	return' → logprob: -10.082870483398438
    7. '                   ' → logprob: -10.207870483398438
    8. '{return' → logprob: -11.457870483398438
    9. '_return' → logprob: -12.457870483398438
    10. '   ' → logprob: -12.707870483398438

Token 1135: ' f' (ID: 285)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.0005530327325686812
    2. ' f' → logprob: -7.500553131103516
    3. '	f' → logprob: -19.375553131103516
    4. '   ' → logprob: -21.750553131103516
    5. ' ' → logprob: -22.000553131103516
    6. 'face' → logprob: -22.000553131103516
    7. '(f' → logprob: -22.125553131103516
    8. ' ' → logprob: -23.250553131103516
    9. '`' → logprob: -23.875553131103516
    10. '```' → logprob: -23.875553131103516

Token 1136: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.5860911011695862
    2. '<|end|>' → logprob: -0.8360911011695862
    3. '\n' → logprob: -5.086091041564941
    4. '       ' → logprob: -6.336091041564941
    5. '<|end|>' → logprob: -7.586091041564941
    6. '   ' → logprob: -7.586091041564941
    7. '    
' → logprob: -8.461091041564941
    8. ')' → logprob: -9.086091041564941
    9. '  
' → logprob: -9.211091041564941
    10. '\' → logprob: -9.461091041564941

Token 1137: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1138: ' raise' (ID: 9338)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1139: ' Value' (ID: 9963)
  Prédit: 'Value'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Value' → logprob: -0.0008421457023359835
    2. 'Lookup' → logprob: -7.250842094421387
    3. 'Runtime' → logprob: -9.250842094421387
    4. ' Value' → logprob: -10.250842094421387
    5. ' Lookup' → logprob: -15.125842094421387
    6. '(Value' → logprob: -15.750842094421387
    7. '_value' → logprob: -16.625843048095703
    8. ' Runtime' → logprob: -16.625843048095703
    9. 'Key' → logprob: -16.875843048095703
    10. 'Stop' → logprob: -17.000843048095703

Token 1140: 'Error' (ID: 2255)
  Prédit: 'Error'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Error' → logprob: -1.9504606825648807e-05
    2. 'rror' → logprob: -11.500019073486328
    3. '("' → logprob: -11.875019073486328
    4. 'Value' → logprob: -13.125019073486328
    5. 'f' → logprob: -15.875019073486328
    6. 'SError' → logprob: -17.125019073486328
    7. '('' → logprob: -17.250019073486328
    8. 'LError' → logprob: -17.375019073486328
    9. 'Not' → logprob: -17.625019073486328
    10. '"' → logprob: -18.000019073486328

Token 1141: '(f' (ID: 1526)
  Prédit: '("'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '("' → logprob: -0.03406103327870369
    2. '(f' → logprob: -3.7840609550476074
    3. '(' → logprob: -4.534060955047607
    4. '(
' → logprob: -11.909061431884766
    5. '()' → logprob: -12.284061431884766
    6. '('' → logprob: -12.659061431884766
    7. '("")' → logprob: -12.784061431884766
    8. 'f' → logprob: -13.159061431884766
    9. '(None' → logprob: -15.284061431884766
    10. '("("' → logprob: -15.534061431884766

Token 1142: '"No' (ID: 108237)
  Prédit: '(f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(f' → logprob: -0.2719150483608246
    2. '"' → logprob: -2.1469149589538574
    3. '(' → logprob: -2.7719149589538574
    4. '("' → logprob: -3.0219149589538574
    5. 'f' → logprob: -4.771914958953857
    6. ' f' → logprob: -6.896914958953857
    7. '(
' → logprob: -8.646915435791016
    8. ')' → logprob: -9.396915435791016
    9. ' (' → logprob: -9.646915435791016
    10. '"No' → logprob: -10.021915435791016

Token 1143: ' face' (ID: 4950)
  Prédit: ' face'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' face' → logprob: -0.023586450144648552
    2. 'face' → logprob: -4.023586273193359
    3. ' opposite' → logprob: -5.398586273193359
    4. ' such' → logprob: -8.14858627319336
    5. '_face' → logprob: -8.27358627319336
    6. 'Face' → logprob: -8.89858627319336
    7. 'op' → logprob: -9.52358627319336
    8. ' Face' → logprob: -9.77358627319336
    9. ' ' → logprob: -10.64858627319336
    10. ' opposing' → logprob: -11.02358627319336

Token 1144: ' opposite' (ID: 23821)
  Prédit: ' found'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' found' → logprob: -0.06566096097230911
    2. ' opposite' → logprob: -3.6906609535217285
    3. ' contains' → logprob: -3.9406609535217285
    4. 'found' → logprob: -4.5656609535217285
    5. 'op' → logprob: -5.4406609535217285
    6. ' opp' → logprob: -6.4406609535217285
    7. ' excludes' → logprob: -7.4406609535217285
    8. ' containing' → logprob: -7.5656609535217285
    9. ' corresponds' → logprob: -7.8156609535217285
    10. 'contains' → logprob: -8.315661430358887

Token 1145: ' to' (ID: 316)
  Prédit: ' to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' to' → logprob: -0.31593793630599976
    2. 'to' → logprob: -1.3159379959106445
    3. ' vertex' → logprob: -6.4409379959106445
    4. 'vertex' → logprob: -7.9409379959106445
    5. ' ' → logprob: -8.190937995910645
    6. '(vertex' → logprob: -8.315937995910645
    7. '_vertex' → logprob: -10.190937995910645
    8. ' the' → logprob: -10.440937995910645
    9. ' for' → logprob: -10.690937995910645
    10. '(Vertex' → logprob: -10.940937995910645

Token 1146: ' vertex' (ID: 25363)
  Prédit: 'vertex'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'vertex' → logprob: -0.09340770542621613
    2. ' vertex' → logprob: -2.84340763092041
    3. '{' → logprob: -3.59340763092041
    4. ' {' → logprob: -5.71840763092041
    5. '(vertex' → logprob: -8.96840763092041
    6. '	vertex' → logprob: -11.09340763092041
    7. 'the' → logprob: -12.21840763092041
    8. ' ' → logprob: -12.71840763092041
    9. '```' → logprob: -13.34340763092041
    10. ' the' → logprob: -13.59340763092041

Token 1147: ' {' (ID: 354)
  Prédit: ' {'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' {' → logprob: -0.08396802097558975
    2. '{' → logprob: -2.583967924118042
    3. ' '{' → logprob: -5.458968162536621
    4. ''{' → logprob: -7.333968162536621
    5. ''' → logprob: -9.833968162536621
    6. ' '' → logprob: -9.958968162536621
    7. ' ' → logprob: -11.458968162536621
    8. '(vertex' → logprob: -11.833968162536621
    9. '"' → logprob: -12.083968162536621
    10. '"{' → logprob: -12.208968162536621

Token 1148: 'vertex' (ID: 25298)
  Prédit: 'vertex'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'vertex' → logprob: -0.2520201802253723
    2. ' vertex' → logprob: -1.5020201206207275
    3. '{' → logprob: -10.002019882202148
    4. '(vertex' → logprob: -10.877019882202148
    5. ' {' → logprob: -11.377019882202148
    6. '	vertex' → logprob: -12.127019882202148
    7. 'v' → logprob: -12.252019882202148
    8. '_vertex' → logprob: -13.377019882202148
    9. 'Vertex' → logprob: -13.752019882202148
    10. '.vertex' → logprob: -14.252019882202148

Token 1149: '}")

' (ID: 119200)
  Prédit: '}")'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '}")' → logprob: -0.2180064171552658
    2. ')' → logprob: -2.2180063724517822
    3. '")' → logprob: -3.0930063724517822
    4. ')")' → logprob: -3.3430063724517822
    5. '}' → logprob: -5.593006610870361
    6. ' found' → logprob: -6.343006610870361
    7. '   ' → logprob: -8.593006134033203
    8. '})' → logprob: -8.718006134033203
    9. ' )' → logprob: -8.968006134033203
    10. '}")
' → logprob: -9.843006134033203

Token 1150: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.24768894910812378
    2. '
' → logprob: -1.8726890087127686
    3. 'def' → logprob: -3.1226890087127686
    4. '<|end|>' → logprob: -4.7476887702941895
    5. '    
' → logprob: -5.6226887702941895
    6. ' ' → logprob: -6.2476887702941895
    7. '```' → logprob: -6.7476887702941895
    8. ' def' → logprob: -6.7476887702941895
    9. '#' → logprob: -7.3726887702941895
    10. '	def' → logprob: -7.6226887702941895

Token 1151: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.06403066962957382
    2. '
' → logprob: -3.314030647277832
    3. '   ' → logprob: -3.689030647277832
    4. '    
' → logprob: -7.564030647277832
    5. ' def' → logprob: -10.564030647277832
    6. '```' → logprob: -10.814030647277832
    7. '#' → logprob: -11.189030647277832
    8. ')' → logprob: -11.189030647277832
    9. '

' → logprob: -11.314030647277832
    10. '        
' → logprob: -11.439030647277832

Token 1152: ' get' (ID: 717)
  Prédit: 'get'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'get' → logprob: -1.0958609580993652
    2. ' get' → logprob: -1.3458609580993652
    3. 'def' → logprob: -1.7208609580993652
    4. ' def' → logprob: -2.7208609580993652
    5. 'face' → logprob: -3.7208609580993652
    6. 'edge' → logprob: -3.7208609580993652
    7. ' edge' → logprob: -4.095860958099365
    8. '_edge' → logprob: -4.095860958099365
    9. 'vector' → logprob: -4.970860958099365
    10. ' adjacent' → logprob: -5.220860958099365

Token 1153: '_face' (ID: 75619)
  Prédit: '_edge'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_edge' → logprob: -0.09228329360485077
    2. '_face' → logprob: -2.967283248901367
    3. '_adj' → logprob: -3.842283248901367
    4. '_op' → logprob: -5.217283248901367
    5. '_edges' → logprob: -5.467283248901367
    6. '_vertex' → logprob: -5.717283248901367
    7. '_faces' → logprob: -7.342283248901367
    8. '_neighbor' → logprob: -7.592283248901367
    9. '_vertices' → logprob: -8.342283248901367
    10. '_neighbors' → logprob: -8.967283248901367

Token 1154: '_from' (ID: 12526)
  Prédit: '_op'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_op' → logprob: -0.4374158978462219
    2. '_adj' → logprob: -1.3124158382415771
    3. '_ad' → logprob: -3.312415838241577
    4. '_neighbors' → logprob: -3.937415838241577
    5. '_cont' → logprob: -5.312416076660156
    6. '_vertices' → logprob: -5.312416076660156
    7. '_ac' → logprob: -5.562416076660156
    8. 's' → logprob: -5.812416076660156
    9. 'adj' → logprob: -5.937416076660156
    10. '_from' → logprob: -6.437416076660156

Token 1155: '_vertices' (ID: 96842)
  Prédit: '_vertices'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_vertices' → logprob: -0.1391983926296234
    2. 'vertices' → logprob: -2.2641983032226562
    3. '_edge' → logprob: -4.639198303222656
    4. '_edges' → logprob: -4.889198303222656
    5. 'edge' → logprob: -5.514198303222656
    6. 'edges' → logprob: -6.389198303222656
    7. 'vs' → logprob: -7.264198303222656
    8. 'verts' → logprob: -7.389198303222656
    9. 'v' → logprob: -7.514198303222656
    10. '_' → logprob: -8.139198303222656

Token 1156: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -4.35837464465294e-05
    2. '(' → logprob: -10.250043869018555
    3. 'self' → logprob: -12.125043869018555
    4. '   ' → logprob: -14.125043869018555
    5. '(
' → logprob: -14.625043869018555
    6. '(s' → logprob: -14.625043869018555
    7. ' (' → logprob: -14.625043869018555
    8. '_(' → logprob: -15.250043869018555
    9. ' ' → logprob: -15.500043869018555
    10. '(f' → logprob: -16.250043869018555

Token 1157: ',' (ID: 11)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.060728494077920914
    2. '(' → logprob: -3.5607285499572754
    3. ',' → logprob: -4.435728549957275
    4. '(v' → logprob: -5.310728549957275
    5. '(
' → logprob: -5.310728549957275
    6. ')' → logprob: -5.560728549957275
    7. ' (' → logprob: -6.935728549957275
    8. '   ' → logprob: -7.435728549957275
    9. '(Vertex' → logprob: -7.435728549957275
    10. ')(' → logprob: -7.560728549957275

Token 1158: ' v' (ID: 323)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.13457365334033966
    2. 'v' → logprob: -2.1345736980438232
    3. 'vertices' → logprob: -5.134573459625244
    4. 'vs' → logprob: -6.884573459625244
    5. '   ' → logprob: -8.009573936462402
    6. ' self' → logprob: -8.759573936462402
    7. 'vertex' → logprob: -10.009573936462402
    8. '(self' → logprob: -10.259573936462402
    9. 'verts' → logprob: -11.009573936462402
    10. '       ' → logprob: -11.134573936462402

Token 1159: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.6800742745399475
    2. 's' → logprob: -0.9300742745399475
    3. ':' → logprob: -2.4300742149353027
    4. '   ' → logprob: -6.180074214935303
    5. '=' → logprob: -6.680074214935303
    6. 'es' → logprob: -7.180074214935303
    7. ')' → logprob: -7.305074214935303
    8. '(' → logprob: -7.305074214935303
    9. '       ' → logprob: -7.680074214935303
    10. ',' → logprob: -7.805074214935303

Token 1160: ':' (ID: 25)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.013533705845475197
    2. ':' → logprob: -4.388533592224121
    3. ',v' → logprob: -7.263533592224121
    4. ' ,' → logprob: -8.388533592224121
    5. ':str' → logprob: -10.763533592224121
    6. 'v' → logprob: -10.888533592224121
    7. '=' → logprob: -11.388533592224121
    8. '`,' → logprob: -11.638533592224121
    9. ' v' → logprob: -12.013533592224121
    10. ':v' → logprob: -12.138533592224121

Token 1161: ' str' (ID: 989)
  Prédit: 'str'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'str' → logprob: -0.164773628115654
    2. ' str' → logprob: -1.9147735834121704
    3. 'v' → logprob: -5.539773464202881
    4. ' v' → logprob: -7.414773464202881
    5. ' ' → logprob: -12.039773941040039
    6. ':str' → logprob: -13.789773941040039
    7. '   ' → logprob: -14.164773941040039
    8. '[str' → logprob: -14.914773941040039
    9. ',' → logprob: -14.914773941040039
    10. 's' → logprob: -15.664773941040039

Token 1162: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.000133098365040496
    2. ',v' → logprob: -9.125133514404297
    3. ' ,' → logprob: -10.750133514404297
    4. ',
' → logprob: -13.125133514404297
    5. 'v' → logprob: -14.625133514404297
    6. '‌,' → logprob: -16.500133514404297
    7. ')' → logprob: -16.750133514404297
    8. '_,' → logprob: -17.250133514404297
    9. '   ' → logprob: -17.250133514404297
    10. ' v' → logprob: -17.500133514404297

Token 1163: ' v' (ID: 323)
  Prédit: ' v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' v' → logprob: -0.12694606184959412
    2. 'v' → logprob: -2.126945972442627
    3. ' ' → logprob: -11.751946449279785
    4. ' ' → logprob: -12.251946449279785
    5. ',' → logprob: -13.876946449279785
    6. ',v' → logprob: -14.376946449279785
    7. '	v' → logprob: -14.501946449279785
    8. ' 
' → logprob: -14.501946449279785
    9. '   ' → logprob: -14.564446449279785
    10. '    ' → logprob: -14.876946449279785

Token 1164: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0004914337769150734
    2. ',' → logprob: -7.625491619110107
    3. ',v' → logprob: -14.12549114227295
    4. 'v' → logprob: -14.37549114227295
    5. ' ,' → logprob: -14.62549114227295
    6. ',
' → logprob: -14.75049114227295
    7. ')' → logprob: -15.00049114227295
    8. '   ' → logprob: -15.12549114227295
    9. '```' → logprob: -15.75049114227295
    10. ' ' → logprob: -15.87549114227295

Token 1165: ':' (ID: 25)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.07147622108459473
    2. ':' → logprob: -2.6964762210845947
    3. ' ,' → logprob: -7.446475982666016
    4. ':str' → logprob: -7.696475982666016
    5. ',v' → logprob: -8.446475982666016
    6. '   ' → logprob: -9.321475982666016
    7. 'v' → logprob: -9.696475982666016
    8. ')' → logprob: -9.946475982666016
    9. ' :' → logprob: -10.821475982666016
    10. '):' → logprob: -11.446475982666016

Token 1166: ' str' (ID: 989)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.09286162257194519
    2. ' v' → logprob: -2.8428616523742676
    3. 'str' → logprob: -3.5928616523742676
    4. ' str' → logprob: -5.842861652374268
    5. ' ' → logprob: -13.71786117553711
    6. '   ' → logprob: -14.84286117553711
    7. ')v' → logprob: -16.96786117553711
    8. '	v' → logprob: -17.34286117553711
    9. 'Str' → logprob: -17.59286117553711
    10. 'V' → logprob: -17.71786117553711

Token 1167: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.026630360633134842
    2. ')' → logprob: -3.651630401611328
    3. '):' → logprob: -9.026630401611328
    4. ' ,' → logprob: -9.151630401611328
    5. '   ' → logprob: -10.401630401611328
    6. '):
' → logprob: -10.776630401611328
    7. ',v' → logprob: -10.776630401611328
    8. ' )' → logprob: -11.651630401611328
    9. ',
' → logprob: -12.401630401611328
    10. ':' → logprob: -12.776630401611328

Token 1168: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.05488397553563118
    2. ' v' → logprob: -2.9298839569091797
    3. '   ' → logprob: -14.42988395690918
    4. '	v' → logprob: -14.80488395690918
    5. ' ' → logprob: -15.05488395690918
    6. ')v' → logprob: -15.67988395690918
    7. '$v' → logprob: -16.42988395690918
    8. ' ' → logprob: -16.42988395690918
    9. '_v' → logprob: -17.17988395690918
    10. ')' → logprob: -17.42988395690918

Token 1169: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.0018555807182565331
    2. ':' → logprob: -6.376855373382568
    3. '2' → logprob: -9.501855850219727
    4. '```' → logprob: -10.876855850219727
    5. 's' → logprob: -11.251855850219727
    6. ':str' → logprob: -11.501855850219727
    7. ')' → logprob: -11.876855850219727
    8. '...' → logprob: -12.376855850219727
    9. 'v' → logprob: -12.626855850219727
    10. '=None' → logprob: -12.751855850219727

Token 1170: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0083507364615798
    2. ')' → logprob: -5.258350849151611
    3. '):' → logprob: -5.883350849151611
    4. '):
' → logprob: -8.258350372314453
    5. '   ' → logprob: -10.508350372314453
    6. ':str' → logprob: -10.508350372314453
    7. '=' → logprob: -12.883350372314453
    8. ' :' → logprob: -13.008350372314453
    9. ',' → logprob: -13.508350372314453
    10. '):

' → logprob: -13.758350372314453

Token 1171: ' str' (ID: 989)
  Prédit: ' str'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' str' → logprob: -0.16038964688777924
    2. 'str' → logprob: -1.9103896617889404
    3. ''' → logprob: -9.03538990020752
    4. ' '' → logprob: -11.16038990020752
    5. ')' → logprob: -11.91038990020752
    6. ' v' → logprob: -12.16038990020752
    7. '_str' → logprob: -12.28538990020752
    8. ' ' → logprob: -13.03538990020752
    9. '"' → logprob: -13.16038990020752
    10. ':str' → logprob: -13.28538990020752

Token 1172: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.01896825060248375
    2. '):
' → logprob: -4.018968105316162
    3. '):' → logprob: -7.143968105316162
    4. '   ' → logprob: -11.01896858215332
    5. ' )' → logprob: -12.14396858215332
    6. '):
' → logprob: -12.26896858215332
    7. '       ' → logprob: -14.51896858215332
    8. '):

' → logprob: -14.64396858215332
    9. ' ):
' → logprob: -15.26896858215332
    10. ')->' → logprob: -15.39396858215332

Token 1173: ' ->' (ID: 2747)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.03313184529542923
    2. ')' → logprob: -4.158132076263428
    3. ':
' → logprob: -4.408132076263428
    4. '       ' → logprob: -6.908132076263428
    5. '):' → logprob: -6.908132076263428
    6. ' ->' → logprob: -6.908132076263428
    7. '->' → logprob: -7.158132076263428
    8. '   ' → logprob: -8.03313159942627
    9. '):
' → logprob: -8.15813159942627
    10. ')->' → logprob: -8.28313159942627

Token 1174: ' Face' (ID: 29049)
  Prédit: 'Face'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Face' → logprob: -0.002483031013980508
    2. ' Face' → logprob: -6.127482891082764
    3. 'Optional' → logprob: -8.127483367919922
    4. 'optional' → logprob: -13.502483367919922
    5. 'face' → logprob: -15.127483367919922
    6. '_face' → logprob: -15.377483367919922
    7. ' face' → logprob: -15.752483367919922
    8. '.Face' → logprob: -16.252483367919922
    9. 'Fac' → logprob: -16.377483367919922
    10. ' Optional' → logprob: -16.377483367919922

Token 1175: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.10874643176794052
    2. '(
' → logprob: -3.4837465286254883
    3. '   ' → logprob: -3.8587465286254883
    4. '(' → logprob: -4.483746528625488
    5. '):' → logprob: -4.483746528625488
    6. ':
' → logprob: -5.108746528625488
    7. ')' → logprob: -5.483746528625488
    8. '():' → logprob: -5.733746528625488
    9. '       ' → logprob: -5.858746528625488
    10. '<|end|>' → logprob: -5.983746528625488

Token 1176: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03967021778225899
    2. '   ' → logprob: -4.164669990539551
    3. ')' → logprob: -4.664669990539551
    4. ' return' → logprob: -5.414669990539551
    5. ' ' → logprob: -5.789669990539551
    6. ' 
' → logprob: -6.164669990539551
    7. '    ' → logprob: -6.664669990539551
    8. '        
' → logprob: -7.914669990539551
    9. '        ' → logprob: -8.28966999053955
    10. '[' → logprob: -8.28966999053955

Token 1177: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.2240731418132782
    2. '       ' → logprob: -1.8490731716156006
    3. 'vertices' → logprob: -3.5990731716156006
    4. ' return' → logprob: -4.8490729331970215
    5. 'v' → logprob: -5.5990729331970215
    6. 'sorted' → logprob: -6.2240729331970215
    7. ' vertices' → logprob: -7.0990729331970215
    8. 'faces' → logprob: -8.34907341003418
    9. 'vs' → logprob: -8.72407341003418
    10. 'face' → logprob: -8.84907341003418

Token 1178: ' Face' (ID: 29049)
  Prédit: 'Face'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Face' → logprob: -7.553032628493384e-05
    2. ' Face' → logprob: -9.500075340270996
    3. 'self' → logprob: -15.500075340270996
    4. '   ' → logprob: -16.500076293945312
    5. 'Facet' → logprob: -16.500076293945312
    6. 'Fac' → logprob: -16.625076293945312
    7. 'Faces' → logprob: -16.625076293945312
    8. 'next' → logprob: -17.250076293945312
    9. 'face' → logprob: -18.125076293945312
    10. '_face' → logprob: -18.500076293945312

Token 1179: '(v' (ID: 6932)
  Prédit: '(v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(v' → logprob: -1.1398757123970427e-05
    2. '(' → logprob: -11.500011444091797
    3. 'v' → logprob: -14.500011444091797
    4. '(sorted' → logprob: -14.625011444091797
    5. '((' → logprob: -16.125011444091797
    6. '(
' → logprob: -16.625011444091797
    7. ' (' → logprob: -19.125011444091797
    8. '   ' → logprob: -20.125011444091797
    9. '(s' → logprob: -20.750011444091797
    10. '(V' → logprob: -20.750011444091797

Token 1180: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.836499985889532e-05
    2. 'er' → logprob: -10.3750581741333
    3. 'ert' → logprob: -10.6250581741333
    4. '(v' → logprob: -13.7500581741333
    5. 'al' → logprob: -15.2500581741333
    6. 'ersion' → logprob: -15.3750581741333
    7. 'v' → logprob: -15.6250581741333
    8. '{' → logprob: -15.6250581741333
    9. 'tx' → logprob: -16.375059127807617
    10. '```' → logprob: -16.375059127807617

Token 1181: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0004172065819147974
    2. ',v' → logprob: -7.875417232513428
    3. ' ,' → logprob: -10.37541675567627
    4. ',
' → logprob: -12.25041675567627
    5. 'v' → logprob: -14.50041675567627
    6. ')' → logprob: -15.12541675567627
    7. ' ' → logprob: -16.750417709350586
    8. '
' → logprob: -17.125417709350586
    9. '‌,' → logprob: -17.125417709350586
    10. ',
' → logprob: -17.625417709350586

Token 1182: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.0001234428636962548
    2. ' v' → logprob: -9.000123023986816
    3. '    ' → logprob: -19.250123977661133
    4. '   ' → logprob: -19.625123977661133
    5. '	v' → logprob: -21.125123977661133
    6. '  ' → logprob: -21.625123977661133
    7. ',v' → logprob: -22.875123977661133
    8. ' ' → logprob: -23.000123977661133
    9. ' ' → logprob: -23.125123977661133
    10. '     ' → logprob: -23.125123977661133

Token 1183: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0001552665780764073
    2. '3' → logprob: -9.125155448913574
    3. ',' → logprob: -10.125155448913574
    4. ',v' → logprob: -12.625155448913574
    5. 'v' → logprob: -13.250155448913574
    6. '1' → logprob: -13.875155448913574
    7. '```' → logprob: -17.125154495239258
    8. '   ' → logprob: -17.500154495239258
    9. '``' → logprob: -17.625154495239258
    10. ')' → logprob: -17.625154495239258

Token 1184: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.000249061529757455
    2. ',v' → logprob: -8.375248908996582
    3. ' ,' → logprob: -11.500248908996582
    4. 'v' → logprob: -11.750248908996582
    5. ',
' → logprob: -15.625248908996582
    6. ')' → logprob: -16.7502498626709
    7. '`,' → logprob: -16.8752498626709
    8. ' v' → logprob: -17.1252498626709
    9. '```' → logprob: -17.3752498626709
    10. '   ' → logprob: -17.8752498626709

Token 1185: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -4.0126840758603066e-05
    2. ' v' → logprob: -10.125040054321289
    3. '   ' → logprob: -19.50004005432129
    4. '	v' → logprob: -21.00004005432129
    5. '    ' → logprob: -21.87504005432129
    6. ')v' → logprob: -22.12504005432129
    7. ' ' → logprob: -22.37504005432129
    8. '       ' → logprob: -22.50004005432129
    9. 'vq' → logprob: -22.50004005432129
    10. '(v' → logprob: -22.62504005432129

Token 1186: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -2.339278580620885e-06
    2. ')' → logprob: -14.125001907348633
    3. 'v' → logprob: -14.125001907348633
    4. 'C' → logprob: -15.125001907348633
    5. '1' → logprob: -15.875001907348633
    6. 'w' → logprob: -16.375001907348633
    7. '۳' → logprob: -17.375001907348633
    8. ' ' → logprob: -17.625001907348633
    9. '```' → logprob: -17.625001907348633
    10. ')v' → logprob: -17.875001907348633

Token 1187: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -6.468279752880335e-05
    2. ')
' → logprob: -9.750064849853516
    3. '   ' → logprob: -12.375064849853516
    4. '       ' → logprob: -13.500064849853516
    5. ' )' → logprob: -15.000064849853516
    6. '<|end|>' → logprob: -15.750064849853516
    7. '")' → logprob: -16.500064849853516
    8. '')' → logprob: -16.750064849853516
    9. ')

' → logprob: -16.875064849853516
    10. ')
' → logprob: -17.000064849853516

Token 1188: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2478586733341217
    2. '
' → logprob: -1.8728586435317993
    3. '```' → logprob: -2.872858762741089
    4. '    
' → logprob: -5.37285852432251
    5. 'def' → logprob: -6.49785852432251
    6. '<|end|>' → logprob: -6.74785852432251
    7. ' def' → logprob: -7.37285852432251
    8. '#' → logprob: -8.872859001159668
    9. '    ' → logprob: -8.997859001159668
    10. '\n' → logprob: -9.122859001159668

Token 1189: ' def' (ID: 1056)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4089922606945038
    2. 'def' (adapté à ' def') → logprob: -1.1589922904968262
    3. '
' → logprob: -3.908992290496826
    4. ' def' → logprob: -7.033992290496826
    5. '    
' → logprob: -7.158992290496826
    6. '```' → logprob: -9.533991813659668
    7. ' ' → logprob: -10.658991813659668
    8. '#' → logprob: -11.158991813659668
    9. '        
' → logprob: -11.658991813659668
    10. ' 
' → logprob: -11.908991813659668

Token 1190: ' get' (ID: 717)
  Prédit: ' vector'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' vector' → logprob: -1.3383439779281616
    2. 'vector' → logprob: -1.7133439779281616
    3. 'face' → logprob: -2.338344097137451
    4. ' get' → logprob: -2.588344097137451
    5. ' edge' → logprob: -2.588344097137451
    6. ' face' → logprob: -2.588344097137451
    7. ' point' → logprob: -3.213344097137451
    8. 'edge' → logprob: -3.213344097137451
    9. 'point' → logprob: -3.338344097137451
    10. 'get' → logprob: -3.713344097137451

Token 1191: '_op' (ID: 20111)
  Prédit: '_edge'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_edge' → logprob: -0.2812385559082031
    2. '_adj' → logprob: -1.7812385559082031
    3. '_face' → logprob: -3.281238555908203
    4. '_op' → logprob: -3.781238555908203
    5. '_edges' → logprob: -5.406238555908203
    6. '_vertex' → logprob: -5.781238555908203
    7. '_neighbor' → logprob: -6.031238555908203
    8. '_faces' → logprob: -6.031238555908203
    9. '_ad' → logprob: -7.531238555908203
    10. '_path' → logprob: -7.656238555908203

Token 1192: 'posite' (ID: 25800)
  Prédit: 'posite'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'posite' → logprob: -0.0013246455928310752
    2. '_edge' → logprob: -7.126324653625488
    3. '_pos' → logprob: -9.001324653625488
    4. 'osite' → logprob: -9.751324653625488
    5. '```' → logprob: -10.001324653625488
    6. 'posit' → logprob: -10.251324653625488
    7. 'Edge' → logprob: -10.376324653625488
    8. 'p' → logprob: -10.501324653625488
    9. 'pos' → logprob: -10.501324653625488
    10. '_' → logprob: -11.251324653625488

Token 1193: '_vertex' (ID: 65291)
  Prédit: '_edge'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_edge' → logprob: -0.389780730009079
    2. '_vertex' → logprob: -1.1397807598114014
    3. '_face' → logprob: -5.889780521392822
    4. 'vertex' → logprob: -9.76478099822998
    5. '_corner' → logprob: -10.01478099822998
    6. 'edge' → logprob: -10.88978099822998
    7. 'Edge' → logprob: -11.88978099822998
    8. '(vertex' → logprob: -14.01478099822998
    9. 'Vertex' → logprob: -14.13978099822998
    10. 'v' → logprob: -14.13978099822998

Token 1194: '_of' (ID: 8023)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.07291585952043533
    2. '(' → logprob: -2.69791579246521
    3. '(edge' → logprob: -6.697916030883789
    4. ' (' → logprob: -7.197916030883789
    5. '_edge' → logprob: -8.197916030883789
    6. '(
' → logprob: -8.572916030883789
    7. '(Vertex' → logprob: -8.572916030883789
    8. '_' → logprob: -10.072916030883789
    9. ':' → logprob: -10.447916030883789
    10. '   ' → logprob: -10.697916030883789

Token 1195: '_edge' (ID: 43226)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.7171831130981445
    2. 'edge' → logprob: -1.3421831130981445
    3. '_edge' → logprob: -1.9671831130981445
    4. '(self' → logprob: -2.4671831130981445
    5. 'face' → logprob: -4.5921831130981445
    6. 'Edge' → logprob: -5.4671831130981445
    7. '_face' → logprob: -5.8421831130981445
    8. ' edge' → logprob: -6.0921831130981445
    9. 'e' → logprob: -6.3421831130981445
    10. 'def' → logprob: -6.5921831130981445

Token 1196: '_in' (ID: 2267)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.006947668269276619
    2. '(' → logprob: -5.0069475173950195
    3. ' (' → logprob: -8.63194751739502
    4. 'self' → logprob: -11.13194751739502
    5. '   ' → logprob: -11.38194751739502
    6. '(
' → logprob: -11.63194751739502
    7. '(edge' → logprob: -11.88194751739502
    8. ' ' → logprob: -13.50694751739502
    9. ' self' → logprob: -13.63194751739502
    10. ',' → logprob: -13.75694751739502

Token 1197: '_face' (ID: 75619)
  Prédit: 'face'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'face' → logprob: -0.04855875298380852
    2. '_face' → logprob: -3.1735587120056152
    3. 'self' → logprob: -6.798558712005615
    4. 'edge' → logprob: -6.923558712005615
    5. '_faces' → logprob: -7.048558712005615
    6. 'Face' → logprob: -7.173558712005615
    7. 'def' → logprob: -7.423558712005615
    8. 'faces' → logprob: -7.673558712005615
    9. 'a' → logprob: -8.423559188842773
    10. ' face' → logprob: -9.173559188842773

Token 1198: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.007422633469104767
    2. '(' → logprob: -5.00742244720459
    3. ' (' → logprob: -7.38242244720459
    4. '(
' → logprob: -9.63242244720459
    5. '   ' → logprob: -12.13242244720459
    6. ' ' → logprob: -12.38242244720459
    7. '(face' → logprob: -12.88242244720459
    8. ' self' → logprob: -13.00742244720459
    9. 'self' → logprob: -13.13242244720459
    10. '(f' → logprob: -14.75742244720459

Token 1199: ',' (ID: 11)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.6371504664421082
    2. ',' → logprob: -0.8871504664421082
    3. 'self' → logprob: -3.387150526046753
    4. ')' → logprob: -4.137150287628174
    5. '_,' → logprob: -5.887150287628174
    6. '(' → logprob: -6.387150287628174
    7. ')(' → logprob: -7.512150287628174
    8. '   ' → logprob: -7.762150287628174
    9. '
' → logprob: -7.762150287628174
    10. ',self' → logprob: -7.762150287628174

Token 1200: ' edge' (ID: 11165)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0008321399218402803
    2. ' self' → logprob: -8.000832557678223
    3. '       ' → logprob: -8.375832557678223
    4. '   ' → logprob: -8.875832557678223
    5. '(self' → logprob: -9.500832557678223
    6. 'face' → logprob: -10.375832557678223
    7. 'f' → logprob: -11.375832557678223
    8. 'v' → logprob: -13.000832557678223
    9. ')' → logprob: -13.375832557678223
    10. 'e' → logprob: -13.500832557678223

Token 1201: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.04835660383105278
    2. ',' → logprob: -4.673356533050537
    3. '(edge' → logprob: -4.673356533050537
    4. '(' → logprob: -4.798356533050537
    5. '(self' → logprob: -5.798356533050537
    6. '   ' → logprob: -6.173356533050537
    7. ' =' → logprob: -6.298356533050537
    8. ' (' → logprob: -6.423356533050537
    9. '(e' → logprob: -6.548356533050537
    10. '=' → logprob: -6.548356533050537

Token 1202: ' Edge' (ID: 16396)
  Prédit: 'Face'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Face' → logprob: -0.5723296999931335
    2. 'Edge' → logprob: -1.0723297595977783
    3. ' Face' → logprob: -3.0723297595977783
    4. ' Edge' → logprob: -3.0723297595977783
    5. 'self' → logprob: -7.447329521179199
    6. '   ' → logprob: -9.8223295211792
    7. 'face' → logprob: -10.0723295211792
    8. ')' → logprob: -10.1973295211792
    9. ',' → logprob: -10.3223295211792
    10. ' self' → logprob: -10.5723295211792

Token 1203: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0006260605878196657
    2. ' ,' → logprob: -7.625626087188721
    3. '   ' → logprob: -9.500625610351562
    4. ')' → logprob: -10.125625610351562
    5. ',
' → logprob: -12.000625610351562
    6. ',v' → logprob: -12.500625610351562
    7. '       ' → logprob: -12.750625610351562
    8. 'self' → logprob: -13.750625610351562
    9. ':' → logprob: -14.000625610351562
    10. 'v' → logprob: -14.125625610351562

Token 1204: ' face' (ID: 4950)
  Prédit: 'face'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'face' → logprob: -0.11286693066358566
    2. ' face' → logprob: -2.2378668785095215
    3. '   ' → logprob: -10.61286735534668
    4. 'f' → logprob: -11.86286735534668
    5. ' ' → logprob: -12.36286735534668
    6. '       ' → logprob: -13.48786735534668
    7. '    ' → logprob: -13.86286735534668
    8. 'vertex' → logprob: -13.98786735534668
    9. '_face' → logprob: -14.11286735534668
    10. ' f' → logprob: -14.36286735534668

Token 1205: ':' (ID: 25)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.4398272633552551
    2. ':' → logprob: -1.1898272037506104
    3. '):' → logprob: -3.0648272037506104
    4. '   ' → logprob: -5.9398274421691895
    5. '):
' → logprob: -7.1898274421691895
    6. ',' → logprob: -7.3148274421691895
    7. ' )' → logprob: -8.189826965332031
    8. '       ' → logprob: -9.314826965332031
    9. ' :' → logprob: -9.439826965332031
    10. '[' → logprob: -9.564826965332031

Token 1206: ' Face' (ID: 29049)
  Prédit: 'Face'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Face' → logprob: -0.01385376788675785
    2. 'face' → logprob: -4.513853549957275
    3. ' Face' → logprob: -6.263853549957275
    4. ' face' → logprob: -7.638853549957275
    5. 'Edge' → logprob: -8.638854026794434
    6. '   ' → logprob: -9.763854026794434
    7. 'Optional' → logprob: -10.638854026794434
    8. 'Vertex' → logprob: -10.888854026794434
    9. 'str' → logprob: -11.013854026794434
    10. ')' → logprob: -11.013854026794434

Token 1207: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0002795703476294875
    2. '):' → logprob: -8.625279426574707
    3. '):
' → logprob: -9.500279426574707
    4. '   ' → logprob: -11.000279426574707
    5. ' )' → logprob: -12.250279426574707
    6. ':' → logprob: -13.750279426574707
    7. '       ' → logprob: -14.500279426574707
    8. ',' → logprob: -14.750279426574707
    9. ')->' → logprob: -14.750279426574707
    10. '`)' → logprob: -14.750279426574707

Token 1208: ' ->' (ID: 2747)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.017095116898417473
    2. '   ' → logprob: -4.64209508895874
    3. '):' → logprob: -6.51709508895874
    4. '       ' → logprob: -6.76709508895874
    5. ' :' → logprob: -6.89209508895874
    6. ')' → logprob: -6.89209508895874
    7. ' =' → logprob: -7.39209508895874
    8. ',' → logprob: -7.51709508895874
    9. '=' → logprob: -8.017095565795898
    10. ':
' → logprob: -8.392095565795898

Token 1209: ' str' (ID: 989)
  Prédit: 'str'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'str' → logprob: -0.9548463225364685
    2. 'next' → logprob: -1.5798463821411133
    3. 'Optional' → logprob: -1.5798463821411133
    4. '[str' → logprob: -1.7048463821411133
    5. '[next' → logprob: -4.829846382141113
    6. ' next' → logprob: -4.954846382141113
    7. ' Optional' → logprob: -6.454846382141113
    8. ' str' → logprob: -6.579846382141113
    9. '[' → logprob: -6.704846382141113
    10. 'Next' → logprob: -7.579846382141113

Token 1210: ':
' (ID: 734)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.6993739008903503
    2. '       ' → logprob: -1.0743739604949951
    3. ':' → logprob: -3.449373960494995
    4. ' for' → logprob: -3.824373960494995
    5. '   ' → logprob: -3.949373960494995
    6. 's' → logprob: -3.949373960494995
    7. '{' → logprob: -4.699373722076416
    8. ')' → logprob: -4.699373722076416
    9. 'for' → logprob: -4.824373722076416
    10. '=' → logprob: -5.074373722076416

Token 1211: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.011859827674925327
    2. ' for' → logprob: -4.761859893798828
    3. ' v' → logprob: -7.011859893798828
    4. '   ' → logprob: -7.886859893798828
    5. '<|end|>' → logprob: -8.261859893798828
    6. ' s' → logprob: -8.386859893798828
    7. ')' → logprob: -9.011859893798828
    8. '```' → logprob: -9.136859893798828
    9. '' → logprob: -9.261859893798828
    10. '	' → logprob: -9.261859893798828

Token 1212: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.7586640119552612
    2. ' for' → logprob: -0.8836640119552612
    3. '       ' → logprob: -3.633664131164551
    4. 'v' → logprob: -3.758664131164551
    5. 'return' → logprob: -3.883664131164551
    6. ' return' → logprob: -4.258664131164551
    7. '   ' → logprob: -4.508664131164551
    8. ' v' → logprob: -4.633664131164551
    9. '[v' → logprob: -5.133664131164551
    10. 'vs' → logprob: -6.008664131164551

Token 1213: ' face' (ID: 4950)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.052137985825538635
    2. 'return' → logprob: -3.802138090133667
    3. 'vs' → logprob: -4.427137851715088
    4. 'v' → logprob: -4.552137851715088
    5. '[v' → logprob: -6.552137851715088
    6. ' for' → logprob: -6.802137851715088
    7. 'verts' → logprob: -7.177137851715088
    8. 'face' → logprob: -7.802137851715088
    9. 'next' → logprob: -7.927137851715088
    10. 'vertices' → logprob: -8.052138328552246

Token 1214: ' has' (ID: 853)
  Prédit: '_vs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_vs' → logprob: -0.13814030587673187
    2. '_vertices' → logprob: -2.3881402015686035
    3. ' =' → logprob: -4.0131402015686035
    4. '_v' → logprob: -4.5131402015686035
    5. 'vs' → logprob: -5.7631402015686035
    6. '_vertex' → logprob: -6.5131402015686035
    7. '.v' → logprob: -7.0131402015686035
    8. '=' → logprob: -7.3881402015686035
    9. 's' → logprob: -7.5131402015686035
    10. 'vertices' → logprob: -7.7631402015686035

Token 1215: ' ' (ID: 220)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.3928992450237274
    2. '   ' → logprob: -2.26789927482605
    3. 'vs' → logprob: -2.39289927482605
    4. 'a' → logprob: -3.14289927482605
    5. 'e' → logprob: -3.64289927482605
    6. 'next' → logprob: -4.142899036407471
    7. '[v' → logprob: -4.642899036407471
    8. '
' → logprob: -5.142899036407471
    9. 'vertex' → logprob: -5.267899036407471
    10. '3' → logprob: -5.767899036407471

Token 1216: '3' (ID: 18)
  Prédit: 'next'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'next' → logprob: -0.6160863041877747
    2. 'v' → logprob: -0.9910863041877747
    3. 'set' → logprob: -3.74108624458313
    4. 'vertex' → logprob: -4.116086483001709
    5. '[v' → logprob: -4.366086483001709
    6. 'a' → logprob: -4.741086483001709
    7. 'vs' → logprob: -4.866086483001709
    8. 'tuple' → logprob: -5.991086483001709
    9. '{' → logprob: -6.241086483001709
    10. ' next' → logprob: -6.241086483001709

Token 1217: ' vertices' (ID: 38360)
  Prédit: 'vs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'vs' → logprob: -0.0566423274576664
    2. 'vertices' → logprob: -2.9316422939300537
    3. 'for' → logprob: -7.306642532348633
    4. '   ' → logprob: -8.181642532348633
    5. ' vs' → logprob: -8.431642532348633
    6. ' vertices' → logprob: -8.681642532348633
    7. '_vs' → logprob: -9.306642532348633
    8. '
' → logprob: -9.806642532348633
    9. 'def' → logprob: -10.181642532348633
    10. ')' → logprob: -10.306642532348633

Token 1218: ' -' (ID: 533)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.98912113904953
    2. '       ' → logprob: -0.98912113904953
    3. '[' → logprob: -2.239121198654175
    4. ' for' → logprob: -2.989121198654175
    5. ' =' → logprob: -3.739121198654175
    6. '        
' → logprob: -4.114120960235596
    7. ',' → logprob: -4.239120960235596
    8. 'for' → logprob: -4.489120960235596
    9. '   ' → logprob: -4.864120960235596
    10. ':' → logprob: -5.364120960235596

Token 1219: ' edge' (ID: 11165)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.8398658633232117
    2. ' for' → logprob: -1.2148659229278564
    3. 'v' → logprob: -2.5898659229278564
    4. 'next' → logprob: -2.7148659229278564
    5. ' next' → logprob: -2.7148659229278564
    6. '[v' → logprob: -3.4648659229278564
    7. ' v' → logprob: -4.214865684509277
    8. '[next' → logprob: -5.589865684509277
    9. '
' → logprob: -5.839865684509277
    10. '   ' → logprob: -6.089865684509277

Token 1220: ' has' (ID: 853)
  Prédit: '.v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.v' → logprob: -0.21207661926746368
    2. 'v' → logprob: -3.0870766639709473
    3. ',' → logprob: -3.5870766639709473
    4. 's' → logprob: -4.337076663970947
    5. 'vs' → logprob: -4.337076663970947
    6. '_v' → logprob: -4.462076663970947
    7. '_vs' → logprob: -4.462076663970947
    8. ',v' → logprob: -4.712076663970947
    9. '_vertices' → logprob: -4.712076663970947
    10. 'vertices' → logprob: -5.212076663970947

Token 1221: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.4416281580924988
    2. 'two' → logprob: -1.6916282176971436
    3. ' two' → logprob: -2.6916282176971436
    4. 'edge' → logprob: -2.9416282176971436
    5. 'e' → logprob: -4.6916279792785645
    6. '(' → logprob: -4.9416279792785645
    7. ' edge' → logprob: -5.0666279792785645
    8. 'v' → logprob: -5.1916279792785645
    9. '(v' → logprob: -5.4416279792785645
    10. ' ' → logprob: -5.6916279792785645

Token 1222: '2' (ID: 17)
  Prédit: 'two'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'two' → logprob: -1.3976221084594727
    2. '2' → logprob: -1.5226221084594727
    3. 'edge' → logprob: -1.5226221084594727
    4. 'tuple' → logprob: -2.2726221084594727
    5. '(v' → logprob: -3.0226221084594727
    6. 'face' → logprob: -3.3976221084594727
    7. 'e' → logprob: -3.3976221084594727
    8. '(edge' → logprob: -4.022622108459473
    9. '(' → logprob: -4.147622108459473
    10. '(e' → logprob: -4.272622108459473

Token 1223: ' -' (ID: 533)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.8345330953598022
    2. ' for' → logprob: -0.8345330953598022
    3. 'for' → logprob: -3.084533214569092
    4. ' v' → logprob: -3.834533214569092
    5. '       ' → logprob: -3.959533214569092
    6. '[' → logprob: -4.709533214569092
    7. '   ' → logprob: -5.209533214569092
    8. ',' → logprob: -5.584533214569092
    9. '[v' → logprob: -5.584533214569092
    10. 'v' → logprob: -5.834533214569092

Token 1224: ' the' (ID: 290)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.584281325340271
    2. 'for' → logprob: -1.584281325340271
    3. ' v' → logprob: -2.7092814445495605
    4. 'v' → logprob: -3.2092814445495605
    5. ' return' → logprob: -3.5842814445495605
    6. 'return' → logprob: -3.7092814445495605
    7. ' next' → logprob: -3.7092814445495605
    8. ' set' → logprob: -4.4592814445495605
    9. 'next' → logprob: -4.5842814445495605
    10. '[v' → logprob: -5.4592814445495605

Token 1225: ' remaining' (ID: 15448)
  Prédit: 'third'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'third' → logprob: -1.3867344856262207
    2. 'v' → logprob: -1.8867344856262207
    3. 'next' → logprob: -2.1367344856262207
    4. 'remaining' → logprob: -2.5117344856262207
    5. ' next' → logprob: -2.6367344856262207
    6. ' third' → logprob: -3.1367344856262207
    7. ' for' → logprob: -3.2617344856262207
    8. 'vertex' → logprob: -3.3867344856262207
    9. 'set' → logprob: -3.6367344856262207
    10. ' remaining' → logprob: -4.011734485626221

Token 1226: ' vertex' (ID: 25363)
  Prédit: 'vertex'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'vertex' → logprob: -0.11056862771511078
    2. ' vertex' → logprob: -2.3605685234069824
    3. 'v' → logprob: -5.360568523406982
    4. ' one' → logprob: -6.110568523406982
    5. 'face' → logprob: -7.235568523406982
    6. '(vertex' → logprob: -7.485568523406982
    7. 'vert' → logprob: -7.610568523406982
    8. 'one' → logprob: -7.735568523406982
    9. '_vertex' → logprob: -9.11056900024414
    10. 'tuple' → logprob: -9.23556900024414

Token 1227: ' in' (ID: 306)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5412901639938354
    2. '=' → logprob: -1.0412901639938354
    3. ' is' → logprob: -3.666290283203125
    4. 'is' → logprob: -3.666290283203125
    5. 's' → logprob: -4.916290283203125
    6. ' in' → logprob: -6.416290283203125
    7. 'in' → logprob: -7.166290283203125
    8. ')' → logprob: -7.291290283203125
    9. '[' → logprob: -7.291290283203125
    10. ',' → logprob: -7.291290283203125

Token 1228: ' face' (ID: 4950)
  Prédit: 'face'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'face' → logprob: -2.4868770196917467e-05
    2. ' face' → logprob: -11.375024795532227
    3. 'f' → logprob: -12.125024795532227
    4. '[' → logprob: -13.000024795532227
    5. 'set' → logprob: -13.000024795532227
    6. '(face' → logprob: -13.250024795532227
    7. '   ' → logprob: -14.375024795532227
    8. '[f' → logprob: -14.500024795532227
    9. 'the' → logprob: -15.250024795532227
    10. '
' → logprob: -16.875024795532227

Token 1229: ' is' (ID: 382)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.771493673324585
    2. '[' → logprob: -1.396493673324585
    3. 'v' → logprob: -3.146493673324585
    4. '=' → logprob: -3.271493673324585
    5. 'for' → logprob: -3.646493673324585
    6. '
' → logprob: -4.021493911743164
    7. '   ' → logprob: -4.271493911743164
    8. ' for' → logprob: -4.396493911743164
    9. '.' → logprob: -4.521493911743164
    10. '<|end|>' → logprob: -4.521493911743164

Token 1230: ' opposite' (ID: 23821)
  Prédit: 'next'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'next' → logprob: -0.5857217907905579
    2. '[next' → logprob: -1.460721731185913
    3. ' next' → logprob: -2.335721731185913
    4. '[' → logprob: -2.835721731185913
    5. 'set' → logprob: -3.210721731185913
    6. '{' → logprob: -4.835721969604492
    7. ' [' → logprob: -5.585721969604492
    8. '(next' → logprob: -5.835721969604492
    9. ' set' → logprob: -7.835721969604492
    10. '[str' → logprob: -9.710721969604492

Token 1231: ' vertex' (ID: 25363)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -1.2167515754699707
    2. '(face' → logprob: -2.0917515754699707
    3. ' of' → logprob: -2.4667515754699707
    4. 'face' → logprob: -2.8417515754699707
    5. 's' → logprob: -2.8417515754699707
    6. 'of' → logprob: -2.9667515754699707
    7. ' =' → logprob: -2.9667515754699707
    8. '.' → logprob: -3.0917515754699707
    9. '<|end|>' → logprob: -3.2167515754699707
    10. '(' → logprob: -3.4667515754699707

Token 1232: ' on' (ID: 402)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -1.0019367933273315
    2. '[' → logprob: -1.8769367933273315
    3. ' =' → logprob: -2.876936912536621
    4. '
' → logprob: -3.001936912536621
    5. 's' → logprob: -3.126936912536621
    6. '(s' → logprob: -3.251936912536621
    7. '(
' → logprob: -3.376936912536621
    8. '       ' → logprob: -3.376936912536621
    9. ')' → logprob: -3.626936912536621
    10. '(v' → logprob: -3.626936912536621

Token 1233: ' face' (ID: 4950)
  Prédit: 'face'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'face' → logprob: -0.006154527422040701
    2. ' face' → logprob: -5.256154537200928
    3. 'the' → logprob: -7.256154537200928
    4. ' the' → logprob: -9.88115406036377
    5. '   ' → logprob: -10.75615406036377
    6. 'edge' → logprob: -11.00615406036377
    7. '
' → logprob: -11.13115406036377
    8. 'vs' → logprob: -11.13115406036377
    9. '(face' → logprob: -11.13115406036377
    10. ')' → logprob: -11.25615406036377

Token 1234: ' to' (ID: 316)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.8951680660247803
    2. '[' → logprob: -2.0201680660247803
    3. ' for' → logprob: -2.0201680660247803
    4. '
' → logprob: -2.1451680660247803
    5. ' v' → logprob: -3.6451680660247803
    6. '   ' → logprob: -3.6451680660247803
    7. ')' → logprob: -3.8951680660247803
    8. 'for' → logprob: -3.8951680660247803
    9. 's' → logprob: -4.020168304443359
    10. ' =' → logprob: -4.270168304443359

Token 1235: ' edge' (ID: 11165)
  Prédit: 'edge'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'edge' → logprob: -0.002240654779598117
    2. ' edge' → logprob: -6.1272406578063965
    3. '   ' → logprob: -11.752240180969238
    4. '=edge' → logprob: -11.752240180969238
    5. '(edge' → logprob: -12.002240180969238
    6. ' ' → logprob: -12.127240180969238
    7. 'face' → logprob: -12.127240180969238
    8. 'egde' → logprob: -12.252240180969238
    9. '
' → logprob: -12.502240180969238
    10. 'e' → logprob: -12.502240180969238

Token 1236: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.33183470368385315
    2. '   ' → logprob: -2.7068347930908203
    3. '[' → logprob: -3.0818347930908203
    4. '
' → logprob: -3.0818347930908203
    5. '(' → logprob: -3.4568347930908203
    6. ' =' → logprob: -3.8318347930908203
    7. '(
' → logprob: -4.45683479309082
    8. ' (' → logprob: -5.45683479309082
    9. '\n' → logprob: -5.45683479309082
    10. ')' → logprob: -5.45683479309082

Token 1237: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.24994732439517975
    2. '       ' → logprob: -1.9999473094940186
    3. '[' → logprob: -3.2499473094940186
    4. ' for' → logprob: -4.999947547912598
    5. ' v' → logprob: -5.499947547912598
    6. '
' → logprob: -5.624947547912598
    7. '[v' → logprob: -5.874947547912598
    8. 's' → logprob: -5.999947547912598
    9. ' =' → logprob: -5.999947547912598
    10. ')' → logprob: -6.124947547912598

Token 1238: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.7108454704284668
    2. '       ' → logprob: -1.3358454704284668
    3. ' for' → logprob: -1.8358454704284668
    4. 'return' → logprob: -3.710845470428467
    5. 'v' → logprob: -3.960845470428467
    6. '[v' → logprob: -3.960845470428467
    7. ' v' → logprob: -4.835845470428467
    8. ' return' → logprob: -5.210845470428467
    9. '   ' → logprob: -5.960845470428467
    10. '[' → logprob: -6.585845470428467

Token 1239: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.013216116465628147
    2. 'vertex' → logprob: -4.388216018676758
    3. 'vert' → logprob: -7.638216018676758
    4. 'fv' → logprob: -9.388216018676758
    5. ' v' → logprob: -9.513216018676758
    6. 'vt' → logprob: -11.138216018676758
    7. 'vv' → logprob: -11.263216018676758
    8. ' vertex' → logprob: -11.388216018676758
    9. 'vx' → logprob: -12.013216018676758
    10. 'w' → logprob: -12.263216018676758

Token 1240: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.5761907696723938
    2. 'in' → logprob: -0.8261907696723938
    3. ' ' → logprob: -9.201190948486328
    4. 'v' → logprob: -9.326190948486328
    5. 'i' → logprob: -11.201190948486328
    6. 'n' → logprob: -11.451190948486328
    7. '_in' → logprob: -12.201190948486328
    8. '	in' → logprob: -12.201190948486328
    9. '   ' → logprob: -12.326190948486328
    10. '  ' → logprob: -12.326190948486328

Token 1241: ' face' (ID: 4950)
  Prédit: 'face'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'face' → logprob: -0.003178782993927598
    2. ' face' → logprob: -5.753178596496582
    3. 'f' → logprob: -14.753178596496582
    4. '(face' → logprob: -15.003178596496582
    5. '   ' → logprob: -15.628178596496582
    6. '[' → logprob: -17.3781795501709
    7. '.face' → logprob: -17.7531795501709
    8. '_face' → logprob: -18.2531795501709
    9. 'fac' → logprob: -18.3781795501709
    10. ' ' → logprob: -18.6281795501709

Token 1242: '.v' (ID: 5520)
  Prédit: '.v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.v' → logprob: -2.463036435074173e-05
    2. 'vs' → logprob: -11.500024795532227
    3. ' .' → logprob: -12.000024795532227
    4. '.' → logprob: -12.625024795532227
    5. '().' → logprob: -14.125024795532227
    6. '(v' → logprob: -14.250024795532227
    7. '.vn' → logprob: -14.250024795532227
    8. '   ' → logprob: -14.625024795532227
    9. '.vi' → logprob: -15.000024795532227
    10. '_vs' → logprob: -15.375024795532227

Token 1243: 's' (ID: 82)
  Prédit: 's'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -5.200166469876422e-06
    2. '   ' → logprob: -13.500004768371582
    3. '```' → logprob: -13.875004768371582
    4. '
' → logprob: -14.875004768371582
    5. '``' → logprob: -15.000004768371582
    6. ' s' → logprob: -15.125004768371582
    7. '`s' → logprob: -15.375004768371582
    8. '1' → logprob: -15.562504768371582
    9. '       ' → logprob: -15.812504768371582
    10. 'v' → logprob: -15.937504768371582

Token 1244: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.09675989300012589
    2. ':' → logprob: -2.596759796142578
    3. '           ' → logprob: -4.096759796142578
    4. '       ' → logprob: -6.971759796142578
    5. ' if' → logprob: -10.221759796142578
    6. ' :
' → logprob: -10.721759796142578
    7. '():
' → logprob: -10.721759796142578
    8. '   ' → logprob: -11.221759796142578
    9. '               ' → logprob: -11.471759796142578
    10. ':
' → logprob: -11.721759796142578

Token 1245: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.047256410121917725
    2. '       ' → logprob: -3.2972564697265625
    3. ' if' → logprob: -5.0472564697265625
    4. '   ' → logprob: -6.7972564697265625
    5. '        ' → logprob: -8.047256469726562
    6. '<|end|>' → logprob: -8.047256469726562
    7. '	       ' → logprob: -8.172256469726562
    8. '               ' → logprob: -9.172256469726562
    9. '          ' → logprob: -9.297256469726562
    10. ' ​' → logprob: -9.297256469726562

Token 1246: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.1535491794347763
    2. 'if' (adapté à ' if') → logprob: -2.5285491943359375
    3. '               ' → logprob: -2.7785491943359375
    4. '           ' → logprob: -8.528549194335938
    5. '	           ' → logprob: -10.403549194335938
    6. ' ' → logprob: -10.528549194335938
    7. '	       ' → logprob: -10.653549194335938
    8. ' not' → logprob: -10.903549194335938
    9. '	if' → logprob: -11.028549194335938
    10. '   ' → logprob: -11.028549194335938

Token 1247: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.0003416607796680182
    2. ' v' → logprob: -8.000341415405273
    3. '           ' → logprob: -12.375341415405273
    4. '   ' → logprob: -13.625341415405273
    5. 'not' → logprob: -16.000341415405273
    6. '       ' → logprob: -16.000341415405273
    7. '	v' → logprob: -16.000341415405273
    8. '    ' → logprob: -16.250341415405273
    9. '(v' → logprob: -16.375341415405273
    10. '         ' → logprob: -17.500341415405273

Token 1248: ' not' (ID: 625)
  Prédit: '!='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '!=' → logprob: -0.1968127340078354
    2. ' !=' → logprob: -2.071812629699707
    3. ' not' → logprob: -3.196812629699707
    4. 'not' → logprob: -4.446812629699707
    5. ')!=' → logprob: -10.571812629699707
    6. '!==' → logprob: -11.446812629699707
    7. '()!=' → logprob: -11.571812629699707
    8. ']!=' → logprob: -11.571812629699707
    9. '<>' → logprob: -11.821812629699707
    10. '<|end|>' → logprob: -12.571812629699707

Token 1249: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.7124283909797668
    2. ' in' → logprob: -0.7124283909797668
    3. 'edge' → logprob: -4.212428569793701
    4. ' edge' → logprob: -5.587428569793701
    5. '(edge' → logprob: -8.462428092956543
    6. '=edge' → logprob: -8.712428092956543
    7. ',' → logprob: -9.712428092956543
    8. 'e' → logprob: -11.087428092956543
    9. ' v' → logprob: -11.337428092956543
    10. '=' → logprob: -11.712428092956543

Token 1250: ' edge' (ID: 11165)
  Prédit: 'edge'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'edge' → logprob: -0.0009155054576694965
    2. ' edge' → logprob: -7.00091552734375
    3. '(edge' → logprob: -14.00091552734375
    4. '   ' → logprob: -14.25091552734375
    5. 'set' → logprob: -14.25091552734375
    6. 'e' → logprob: -14.37591552734375
    7. '=edge' → logprob: -15.12591552734375
    8. ' ' → logprob: -15.37591552734375
    9. 'edges' → logprob: -15.75091552734375
    10. '{' → logprob: -15.75091552734375

Token 1251: '.v' (ID: 5520)
  Prédit: '.v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.v' → logprob: -3.190178904333152e-05
    2. '.' → logprob: -10.750031471252441
    3. 'vs' → logprob: -12.000031471252441
    4. ' .' → logprob: -12.875031471252441
    5. '_vs' → logprob: -14.375031471252441
    6. '.s' → logprob: -15.000031471252441
    7. '```' → logprob: -15.875031471252441
    8. ' vs' → logprob: -16.125032424926758
    9. '[' → logprob: -16.375032424926758
    10. '   ' → logprob: -16.500032424926758

Token 1252: 's' (ID: 82)
  Prédit: 's'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -5.6934557505883276e-05
    2. '
' → logprob: -11.500057220458984
    3. '```' → logprob: -12.000057220458984
    4. '   ' → logprob: -12.375057220458984
    5. '1' → logprob: -12.437557220458984
    6. '[' → logprob: -12.562557220458984
    7. 'sv' → logprob: -12.687557220458984
    8. '``' → logprob: -12.812557220458984
    9. '0' → logprob: -13.250057220458984
    10. ' s' → logprob: -13.312557220458984

Token 1253: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.13965414464473724
    2. ':
' → logprob: -2.1396541595458984
    3. '           ' → logprob: -5.014654159545898
    4. '               ' → logprob: -5.764654159545898
    5. ')' → logprob: -7.014654159545898
    6. '):
' → logprob: -7.639654159545898
    7. '<|end|>' → logprob: -8.264654159545898
    8. '):' → logprob: -8.514654159545898
    9. '       ' → logprob: -8.639654159545898
    10. ',' → logprob: -8.639654159545898

Token 1254: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.018192434683442116
    2. ':
' → logprob: -4.893192291259766
    3. ':' → logprob: -5.143192291259766
    4. '           ' → logprob: -6.018192291259766
    5. ' return' → logprob: -6.893192291259766
    6. ':return' → logprob: -7.643192291259766
    7. 'return' → logprob: -7.768192291259766
    8. '              ' → logprob: -9.268192291259766
    9. '            ' → logprob: -10.518192291259766
    10. ' :
' → logprob: -11.018192291259766

Token 1255: ' return' (ID: 622)
  Prédit: ' return'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.4953606426715851
    2. 'return' (adapté à ' return') → logprob: -0.9953606128692627
    3. '               ' → logprob: -3.8703606128692627
    4. '	return' → logprob: -9.245360374450684
    5. ':return' → logprob: -9.495360374450684
    6. '           ' → logprob: -11.370360374450684
    7. '			' → logprob: -12.370360374450684
    8. '{return' → logprob: -12.495360374450684
    9. ' ' → logprob: -12.745360374450684
    10. '   ' → logprob: -13.245360374450684

Token 1256: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.004078401252627373
    2. ' v' → logprob: -5.504078388214111
    3. '	v' → logprob: -18.504077911376953
    4. ' ' → logprob: -18.879077911376953
    5. '_v' → logprob: -19.629077911376953
    6. '(v' → logprob: -19.879077911376953
    7. '.v' → logprob: -21.379077911376953
    8. ' ' → logprob: -21.379077911376953
    9. '$v' → logprob: -21.379077911376953
    10. ')v' → logprob: -21.879077911376953

Token 1257: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1258: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1259: ' raise' (ID: 9338)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1260: ' Value' (ID: 9963)
  Prédit: 'Value'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Value' → logprob: -0.0086397435516119
    2. ' Value' → logprob: -4.758639812469482
    3. '_value' → logprob: -11.258639335632324
    4. '_Value' → logprob: -12.383639335632324
    5. '(Value' → logprob: -13.258639335632324
    6. 'Lookup' → logprob: -13.508639335632324
    7. 'Runtime' → logprob: -13.633639335632324
    8. '.Value' → logprob: -14.008639335632324
    9. 'Not' → logprob: -14.133639335632324
    10. 'Index' → logprob: -14.258639335632324

Token 1261: 'Error' (ID: 2255)
  Prédit: 'Error'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Error' → logprob: -0.00010926496179308742
    2. 'rror' → logprob: -9.375109672546387
    3. 'Value' → logprob: -10.625109672546387
    4. 'Errors' → logprob: -18.12510871887207
    5. 'SError' → logprob: -18.75010871887207
    6. 'Output' → logprob: -18.75010871887207
    7. 'ror' → logprob: -19.50010871887207
    8. 'r' → logprob: -19.62510871887207
    9. ' Error' → logprob: -19.62510871887207
    10. 'error' → logprob: -19.87510871887207

Token 1262: '(f' (ID: 1526)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.47486329078674316
    2. '("' → logprob: -0.9748632907867432
    3. '()' → logprob: -8.349863052368164
    4. '(f' → logprob: -8.474863052368164
    5. '(
' → logprob: -9.099863052368164
    6. '('' → logprob: -9.349863052368164
    7. '("")' → logprob: -9.474863052368164
    8. '("("' → logprob: -10.224863052368164
    9. '(""' → logprob: -11.974863052368164
    10. '(None' → logprob: -12.099863052368164

Token 1263: '"' (ID: 1)
  Prédit: '("'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '("' → logprob: -0.41048580408096313
    2. '"' → logprob: -1.1604857444763184
    3. '(f' → logprob: -4.660485744476318
    4. '(' → logprob: -5.160485744476318
    5. ' f' → logprob: -5.660485744476318
    6. ' "' → logprob: -5.910485744476318
    7. ' ("' → logprob: -7.410485744476318
    8. 'f' → logprob: -7.660485744476318
    9. ')' → logprob: -8.410486221313477
    10. '"No' → logprob: -8.785486221313477

Token 1264: 'Face' (ID: 23402)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.1068851426243782
    2. 'face' → logprob: -2.7318851947784424
    3. '"In' → logprob: -3.8568851947784424
    4. 'Invalid' → logprob: -5.356884956359863
    5. 'Face' → logprob: -5.356884956359863
    6. 'f' → logprob: -5.731884956359863
    7. '"No' → logprob: -7.481884956359863
    8. ''' → logprob: -7.731884956359863
    9. 'edge' → logprob: -8.106884956359863
    10. '"The' → logprob: -8.356884956359863

Token 1265: ' {' (ID: 354)
  Prédit: ' {'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' {' → logprob: -0.8746935725212097
    2. '.v' → logprob: -1.1246936321258545
    3. ' does' → logprob: -1.7496936321258545
    4. '{' → logprob: -3.1246936321258545
    5. ' contains' → logprob: -4.624693393707275
    6. ' ' → logprob: -4.999693393707275
    7. ' v' → logprob: -5.499693393707275
    8. ' not' → logprob: -6.499693393707275
    9. ' has' → logprob: -6.499693393707275
    10. ')' → logprob: -6.624693393707275

Token 1266: 'face' (ID: 2300)
  Prédit: '}'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '}' → logprob: -0.14118318259716034
    2. '{' → logprob: -2.6411831378936768
    3. ' {' → logprob: -3.8911831378936768
    4. 'v' → logprob: -4.266183376312256
    5. '.v' → logprob: -4.391183376312256
    6. 'face' → logprob: -5.766183376312256
    7. 'contains' → logprob: -6.641183376312256
    8. '}{' → logprob: -6.641183376312256
    9. '
' → logprob: -6.766183376312256
    10. 'vs' → logprob: -6.891183376312256

Token 1267: '}' (ID: 92)
  Prédit: '}'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '}' → logprob: -0.03252309560775757
    2. ')' → logprob: -4.282523155212402
    3. ' does' → logprob: -4.782523155212402
    4. '.v' → logprob: -5.407523155212402
    5. '}.' → logprob: -6.282523155212402
    6. ',' → logprob: -7.032523155212402
    7. '.' → logprob: -7.282523155212402
    8. ').' → logprob: -8.157523155212402
    9. 'does' → logprob: -8.282523155212402
    10. ' ' → logprob: -8.407523155212402

Token 1268: ' does' (ID: 2226)
  Prédit: ' does'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' does' → logprob: -0.04397377371788025
    2. 'does' → logprob: -3.293973684310913
    3. ' lacks' → logprob: -5.918973922729492
    4. ')' → logprob: -6.668973922729492
    5. '}' → logprob: -8.043973922729492
    6. ' doesn't' → logprob: -8.168973922729492
    7. ',' → logprob: -8.293973922729492
    8. ' contains' → logprob: -8.418973922729492
    9. ' has' → logprob: -8.793973922729492
    10. ' missing' → logprob: -9.418973922729492

Token 1269: ' not' (ID: 625)
  Prédit: 'not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'not' → logprob: -0.07190463691949844
    2. ' not' → logprob: -2.6969046592712402
    3. 'contain' → logprob: -6.94690465927124
    4. 'contains' → logprob: -7.57190465927124
    5. 'n't' → logprob: -9.196904182434082
    6. 's' → logprob: -9.571904182434082
    7. 'cont' → logprob: -9.821904182434082
    8. 'nt' → logprob: -10.571904182434082
    9. '...' → logprob: -10.571904182434082
    10. 'n' → logprob: -10.696904182434082

Token 1270: ' contain' (ID: 10232)
  Prédit: 'contain'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'contain' → logprob: -0.023252932354807854
    2. ' contain' → logprob: -3.7732529640197754
    3. 'contains' → logprob: -12.023252487182617
    4. 'include' → logprob: -14.773252487182617
    5. ' ' → logprob: -15.023252487182617
    6. 'have' → logprob: -15.148252487182617
    7. 'cont' → logprob: -15.398252487182617
    8. ' have' → logprob: -16.648252487182617
    9. ' contains' → logprob: -17.023252487182617
    10. '
' → logprob: -17.398252487182617

Token 1271: ' vertices' (ID: 38360)
  Prédit: 'edge'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'edge' → logprob: -0.18473713099956512
    2. 'all' → logprob: -2.184737205505371
    3. 'any' → logprob: -3.434737205505371
    4. 'both' → logprob: -4.434737205505371
    5. ' edge' → logprob: -5.559737205505371
    6. 'set' → logprob: -5.559737205505371
    7. 'either' → logprob: -7.059737205505371
    8. '{' → logprob: -7.059737205505371
    9. ' all' → logprob: -7.309737205505371
    10. 'Edge' → logprob: -7.434737205505371

Token 1272: ' outside' (ID: 7539)
  Prédit: ' v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' v' → logprob: -1.2126339673995972
    2. ' {' → logprob: -1.4626339673995972
    3. '{' → logprob: -1.9626339673995972
    4. 'v' → logprob: -2.5876340866088867
    5. ' in' → logprob: -2.5876340866088867
    6. 'set' → logprob: -3.4626340866088867
    7. '   ' → logprob: -4.087634086608887
    8. ' for' → logprob: -4.087634086608887
    9. ' of' → logprob: -4.212634086608887
    10. ' set' → logprob: -4.212634086608887

Token 1273: ' edge' (ID: 11165)
  Prédit: 'edge'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'edge' → logprob: -0.06436169892549515
    2. ' edge' → logprob: -2.814361810684204
    3. '(edge' → logprob: -6.814361572265625
    4. '{' → logprob: -7.064361572265625
    5. 'set' → logprob: -9.314361572265625
    6. 'the' → logprob: -9.564361572265625
    7. 'of' → logprob: -9.564361572265625
    8. ' of' → logprob: -9.564361572265625
    9. '   ' → logprob: -9.814361572265625
    10. ' {' → logprob: -10.689361572265625

Token 1274: ' {' (ID: 354)
  Prédit: '.v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.v' → logprob: -0.3292064666748047
    2. '")' → logprob: -1.3292064666748047
    3. ')' → logprob: -4.204206466674805
    4. ')")' → logprob: -8.454206466674805
    5. '}")' → logprob: -8.704206466674805
    6. '.e' → logprob: -8.829206466674805
    7. '   ' → logprob: -8.954206466674805
    8. '")
' → logprob: -9.829206466674805
    9. '"' → logprob: -10.329206466674805
    10. '.")' → logprob: -11.329206466674805

Token 1275: 'edge' (ID: 13457)
  Prédit: 'edge'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'edge' → logprob: -0.019982673227787018
    2. ' edge' → logprob: -4.269982814788818
    3. 'e' → logprob: -5.519982814788818
    4. '{' → logprob: -6.519982814788818
    5. ' e' → logprob: -8.76998233795166
    6. '}' → logprob: -9.64498233795166
    7. '(edge' → logprob: -9.89498233795166
    8. ' {' → logprob: -10.51998233795166
    9. '.edge' → logprob: -11.64498233795166
    10. 'edges' → logprob: -13.01998233795166

Token 1276: '}")

' (ID: 119200)
  Prédit: ')")'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')")' → logprob: -0.6416317224502563
    2. ')' → logprob: -0.8916317224502563
    3. '}")' → logprob: -3.016631603240967
    4. '")' → logprob: -4.391631603240967
    5. ')")
' → logprob: -7.391631603240967
    6. ')}' → logprob: -7.641631603240967
    7. '}' → logprob: -7.641631603240967
    8. ')"' → logprob: -8.391632080078125
    9. '   ' → logprob: -8.891632080078125
    10. '.v' → logprob: -9.516632080078125

Token 1277: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.9508572816848755
    2. '   ' → logprob: -1.0758572816848755
    3. 'def' → logprob: -1.3258572816848755
    4. '```' → logprob: -5.325857162475586
    5. ' def' → logprob: -7.075857162475586
    6. '    
' → logprob: -8.075857162475586
    7. '#' → logprob: -8.200857162475586
    8. 'import' → logprob: -8.325857162475586
    9. '	def' → logprob: -9.325857162475586
    10. ')' → logprob: -9.575857162475586

Token 1278: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.030106469988822937
    2. '
' → logprob: -3.780106544494629
    3. '   ' → logprob: -5.030106544494629
    4. '#' → logprob: -8.530106544494629
    5. '```' → logprob: -9.780106544494629
    6. '    
' → logprob: -10.655106544494629
    7. ')' → logprob: -11.530106544494629
    8. 'import' → logprob: -12.405106544494629
    9. ' def' → logprob: -12.780106544494629
    10. '

' → logprob: -13.655106544494629

Token 1279: ' face' (ID: 4950)
  Prédit: ' vector'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' vector' → logprob: -1.5267271995544434
    2. 'vector' → logprob: -1.6517271995544434
    3. ' def' → logprob: -2.2767271995544434
    4. 'def' → logprob: -2.2767271995544434
    5. ' get' → logprob: -2.6517271995544434
    6. 'face' → logprob: -2.6517271995544434
    7. 'get' → logprob: -2.7767271995544434
    8. ' face' → logprob: -4.026727199554443
    9. 'edge' → logprob: -4.151727199554443
    10. 'angle' → logprob: -4.276727199554443

Token 1280: '_frame' (ID: 19952)
  Prédit: '_to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_to' → logprob: -0.3363617956638336
    2. '_normal' → logprob: -2.836361885070801
    3. '_edges' → logprob: -3.336361885070801
    4. '_b' → logprob: -3.461361885070801
    5. '_vertices' → logprob: -3.461361885070801
    6. '_ad' → logprob: -3.961361885070801
    7. '_basis' → logprob: -3.961361885070801
    8. '_contains' → logprob: -4.336361885070801
    9. '_neighbors' → logprob: -4.461361885070801
    10. '_adj' → logprob: -5.211361885070801

Token 1281: '_to' (ID: 5089)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.002087569562718272
    2. '(
' → logprob: -6.752087593078613
    3. '(' → logprob: -7.627087593078613
    4. 'def' → logprob: -8.627087593078613
    5. '   ' → logprob: -9.627087593078613
    6. '_coordinates' → logprob: -10.502087593078613
    7. 'self' → logprob: -10.752087593078613
    8. ' (' → logprob: -11.002087593078613
    9. '_get' → logprob: -11.377087593078613
    10. '_coords' → logprob: -11.752087593078613

Token 1282: '_' (ID: 62)
  Prédit: 'local'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'local' → logprob: -0.7066793441772461
    2. 'face' → logprob: -1.706679344177246
    3. 'global' → logprob: -1.831679344177246
    4. 'world' → logprob: -2.081679344177246
    5. 'plane' → logprob: -3.831679344177246
    6. 'vector' → logprob: -4.456679344177246
    7. 'cart' → logprob: -6.331679344177246
    8. 'point' → logprob: -6.331679344177246
    9. '3' → logprob: -6.706679344177246
    10. '_local' → logprob: -7.081679344177246

Token 1283: '3' (ID: 18)
  Prédit: 'global'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'global' → logprob: -0.6259760856628418
    2. 'local' → logprob: -1.6259760856628418
    3. '3' → logprob: -2.125976085662842
    4. 'face' → logprob: -2.375976085662842
    5. 'plane' → logprob: -3.875976085662842
    6. 'world' → logprob: -4.125976085662842
    7. 'cart' → logprob: -5.125976085662842
    8. 'vector' → logprob: -5.125976085662842
    9. 'xyz' → logprob: -5.750976085662842
    10. 'point' → logprob: -5.875976085662842

Token 1284: 'd' (ID: 67)
  Prédit: 'd'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -6.217951886355877e-05
    2. 'tuple' → logprob: -10.625061988830566
    3. 'vector' → logprob: -11.125061988830566
    4. 'xyz' → logprob: -11.750061988830566
    5. 'D' → logprob: -12.375061988830566
    6. 'def' → logprob: -12.625061988830566
    7. 'dto' → logprob: -13.375061988830566
    8. 'dv' → logprob: -13.750061988830566
    9. 'space' → logprob: -14.125061988830566
    10. 'x' → logprob: -14.375061988830566

Token 1285: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.0004581942630466074
    2. '(' → logprob: -7.750458240509033
    3. ' (' → logprob: -11.500457763671875
    4. 'self' → logprob: -11.625457763671875
    5. '(
' → logprob: -12.875457763671875
    6. 'def' → logprob: -13.625457763671875
    7. '(f' → logprob: -14.000457763671875
    8. '   ' → logprob: -14.000457763671875
    9. '(face' → logprob: -14.250457763671875
    10. '_coordinates' → logprob: -14.500457763671875

Token 1286: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.02812153287231922
    2. '_coords' → logprob: -4.028121471405029
    3. '_coordinates' → logprob: -6.028121471405029
    4. '_point' → logprob: -6.778121471405029
    5. 'coordinate' → logprob: -6.778121471405029
    6. 'coordinates' → logprob: -6.903121471405029
    7. 'self' → logprob: -6.903121471405029
    8. 'point' → logprob: -7.403121471405029
    9. '_coordinate' → logprob: -7.528121471405029
    10. 'coords' → logprob: -7.528121471405029

Token 1287: ' face' (ID: 4950)
  Prédit: 'face'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'face' → logprob: -0.4364548325538635
    2. 'self' → logprob: -1.0614547729492188
    3. 'f' → logprob: -5.061454772949219
    4. ' face' → logprob: -7.186454772949219
    5. ' self' → logprob: -7.436454772949219
    6. '(self' → logprob: -11.311454772949219
    7. ')' → logprob: -11.811454772949219
    8. 'point' → logprob: -12.561454772949219
    9. '_face' → logprob: -12.561454772949219
    10. 'Face' → logprob: -12.936454772949219

Token 1288: ':' (ID: 25)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.04560043662786484
    2. ':' → logprob: -3.420600414276123
    3. '(self' → logprob: -5.295600414276123
    4. 'self' → logprob: -6.045600414276123
    5. '(f' → logprob: -6.420600414276123
    6. ',f' → logprob: -6.795600414276123
    7. ' ,' → logprob: -7.170600414276123
    8. ' :' → logprob: -8.420600891113281
    9. '   ' → logprob: -8.545600891113281
    10. '):' → logprob: -8.795600891113281

Token 1289: ' Face' (ID: 29049)
  Prédit: 'Face'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Face' → logprob: -0.14447113871574402
    2. 'self' → logprob: -2.2694711685180664
    3. 'face' → logprob: -3.5194711685180664
    4. ' face' → logprob: -7.394471168518066
    5. ' Face' → logprob: -8.269471168518066
    6. ' self' → logprob: -8.394471168518066
    7. '_face' → logprob: -9.019471168518066
    8. 'Tuple' → logprob: -9.144471168518066
    9. ')' → logprob: -9.644471168518066
    10. 'Edge' → logprob: -10.394471168518066

Token 1290: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.001302618533372879
    2. ')' → logprob: -7.751302719116211
    3. 'self' → logprob: -7.751302719116211
    4. '   ' → logprob: -8.126302719116211
    5. '(self' → logprob: -9.626302719116211
    6. '       ' → logprob: -10.126302719116211
    7. ',
' → logprob: -11.376302719116211
    8. ' ,' → logprob: -11.501302719116211
    9. ')(' → logprob: -12.751302719116211
    10. '):' → logprob: -12.876302719116211

Token 1291: ' u' (ID: 337)
  Prédit: 'local'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'local' → logprob: -0.9101166725158691
    2. 'coords' → logprob: -1.7851166725158691
    3. 'x' → logprob: -1.9101166725158691
    4. 'u' → logprob: -1.9101166725158691
    5. 'p' → logprob: -2.535116672515869
    6. 'point' → logprob: -3.410116672515869
    7. 'coord' → logprob: -4.660116672515869
    8. 'xy' → logprob: -5.660116672515869
    9. 'uv' → logprob: -5.910116672515869
    10. 'pt' → logprob: -6.660116672515869

Token 1292: '_coord' (ID: 71065)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.6531660556793213
    2. '_coords' → logprob: -1.4031660556793213
    3. '_coord' → logprob: -2.2781660556793213
    4. 'n' → logprob: -3.6531660556793213
    5. ',v' → logprob: -3.7781660556793213
    6. ')' → logprob: -4.028165817260742
    7. '_vector' → logprob: -4.278165817260742
    8. '_coordinates' → logprob: -4.778165817260742
    9. '_pos' → logprob: -5.028165817260742
    10. ':' → logprob: -5.278165817260742

Token 1293: ':' (ID: 25)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.004623679909855127
    2. ':' → logprob: -5.629623889923096
    3. ' ,' → logprob: -7.879623889923096
    4. ')' → logprob: -8.004623413085938
    5. '):' → logprob: -9.004623413085938
    6. '<|end|>' → logprob: -9.629623413085938
    7. '=' → logprob: -10.129623413085938
    8. ',u' → logprob: -10.879623413085938
    9. '   ' → logprob: -11.879623413085938
    10. ' ' → logprob: -12.004623413085938

Token 1294: ' float' (ID: 4428)
  Prédit: 'float'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'float' → logprob: -0.001339050941169262
    2. ' float' → logprob: -6.626338958740234
    3. ',' → logprob: -12.501338958740234
    4. ',float' → logprob: -12.626338958740234
    5. ')' → logprob: -13.376338958740234
    6. '   ' → logprob: -14.001338958740234
    7. '=float' → logprob: -14.126338958740234
    8. '(float' → logprob: -14.126338958740234
    9. 'flo' → logprob: -14.876338958740234
    10. 'f' → logprob: -15.001338958740234

Token 1295: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -4.954393079970032e-05
    2. ' ,' → logprob: -10.000049591064453
    3. ')' → logprob: -13.125049591064453
    4. ',
' → logprob: -13.500049591064453
    5. ',u' → logprob: -15.125049591064453
    6. '‌,' → logprob: -16.125049591064453
    7. ',float' → logprob: -16.125049591064453
    8. ',v' → logprob: -16.750049591064453
    9. ',y' → logprob: -17.250049591064453
    10. '<|end|>' → logprob: -17.375049591064453

Token 1296: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.029750484973192215
    2. ' v' → logprob: -3.5297505855560303
    3. '	v' → logprob: -17.40475082397461
    4. '_v' → logprob: -18.52975082397461
    5. ' ' → logprob: -19.27975082397461
    6. 'u' → logprob: -19.40475082397461
    7. ' ' → logprob: -19.65475082397461
    8. '    ' → logprob: -20.40475082397461
    9. ')v' → logprob: -21.15475082397461
    10. ' ' → logprob: -21.27975082397461

Token 1297: '_coord' (ID: 71065)
  Prédit: '_coord'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_coord' → logprob: -0.00021259987261146307
    2. ':' → logprob: -8.625212669372559
    3. ')' → logprob: -11.750212669372559
    4. '_COORD' → logprob: -12.375212669372559
    5. '_coords' → logprob: -12.875212669372559
    6. ')_' → logprob: -13.000212669372559
    7. 'coord' → logprob: -13.125212669372559
    8. 'Coord' → logprob: -13.125212669372559
    9. ' _' → logprob: -13.250212669372559
    10. '_coeff' → logprob: -13.500212669372559

Token 1298: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.02992323786020279
    2. ')' → logprob: -3.5299232006073
    3. '):' → logprob: -8.779923439025879
    4. ',' → logprob: -11.654923439025879
    5. '   ' → logprob: -12.029923439025879
    6. '):
' → logprob: -13.279923439025879
    7. ' )' → logprob: -13.529923439025879
    8. ' :' → logprob: -14.404923439025879
    9. '=' → logprob: -15.279923439025879
    10. '`)' → logprob: -16.654922485351562

Token 1299: ' float' (ID: 4428)
  Prédit: 'float'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'float' → logprob: -0.0009117019944824278
    2. ' float' → logprob: -7.000911712646484
    3. ')' → logprob: -16.375911712646484
    4. '=float' → logprob: -17.375911712646484
    5. '(float' → logprob: -17.875911712646484
    6. '	float' → logprob: -18.625911712646484
    7. '<float' → logprob: -19.500911712646484
    8. ',float' → logprob: -20.375911712646484
    9. 'flo' → logprob: -20.625911712646484
    10. '.float' → logprob: -20.625911712646484

Token 1300: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.049020372331142426
    2. '):' → logprob: -3.049020290374756
    3. '):
' → logprob: -8.049020767211914
    4. ' )' → logprob: -9.299020767211914
    5. ' ):' → logprob: -11.924020767211914
    6. '   ' → logprob: -12.174020767211914
    7. '):
' → logprob: -12.299020767211914
    8. ',' → logprob: -13.299020767211914
    9. '):

' → logprob: -13.299020767211914
    10. ')->' → logprob: -13.424020767211914

Token 1301: ' ->' (ID: 2747)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.00896600540727377
    2. ' ->' → logprob: -5.633965969085693
    3. ')' → logprob: -5.758965969085693
    4. '->' → logprob: -6.758965969085693
    5. '):' → logprob: -7.008965969085693
    6. '   ' → logprob: -9.883966445922852
    7. ')->' → logprob: -10.258966445922852
    8. ',' → logprob: -11.008966445922852
    9. ' :' → logprob: -11.383966445922852
    10. '=' → logprob: -11.883966445922852

Token 1302: ' Tuple' (ID: 50841)
  Prédit: 'Tuple'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Tuple' → logprob: -0.02227153070271015
    2. 'tuple' → logprob: -4.272271633148193
    3. ' Tuple' → logprob: -5.022271633148193
    4. ' tuple' → logprob: -6.522271633148193
    5. 'float' → logprob: -11.397271156311035
    6. '_tuple' → logprob: -12.522271156311035
    7. '.Tuple' → logprob: -14.897271156311035
    8. ' float' → logprob: -16.39727210998535
    9. '(tuple' → logprob: -16.52227210998535
    10. 'List' → logprob: -17.89727210998535

Token 1303: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0008242761832661927
    2. '(float' → logprob: -7.250824451446533
    3. 'float' → logprob: -9.125823974609375
    4. '[
' → logprob: -12.625823974609375
    5. ',float' → logprob: -14.250823974609375
    6. '<float' → logprob: -14.625823974609375
    7. '=float' → logprob: -15.000823974609375
    8. '[int' → logprob: -15.250823974609375
    9. '(' → logprob: -15.375823974609375
    10. '   ' → logprob: -16.125823974609375

Token 1304: 'float' (ID: 7829)
  Prédit: 'float'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'float' → logprob: -6.704273118884885e-07
    2. ' float' → logprob: -15.125000953674316
    3. '(float' → logprob: -16.0
    4. 'flo' → logprob: -16.0
    5. '   ' → logprob: -16.625
    6. '	float' → logprob: -18.375
    7. '3' → logprob: -18.375
    8. '[' → logprob: -18.5
    9. '<float' → logprob: -19.25
    10. ',float' → logprob: -19.75

Token 1305: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.07893330603837967
    2. ',float' → logprob: -2.5789332389831543
    3. ' ,' → logprob: -10.453933715820312
    4. ',
' → logprob: -11.703933715820312
    5. ',f' → logprob: -12.703933715820312
    6. ',int' → logprob: -13.828933715820312
    7. ',double' → logprob: -14.203933715820312
    8. 'float' → logprob: -14.328933715820312
    9. '<float' → logprob: -15.953933715820312
    10. ',bool' → logprob: -16.078933715820312

Token 1306: ' float' (ID: 4428)
  Prédit: 'float'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'float' → logprob: -9.662937372922897e-05
    2. ' float' → logprob: -9.250096321105957
    3. '<float' → logprob: -15.375096321105957
    4. '	float' → logprob: -16.625097274780273
    5. ',float' → logprob: -16.875097274780273
    6. '=float' → logprob: -17.250097274780273
    7. '(float' → logprob: -17.375097274780273
    8. 'Float' → logprob: -18.125097274780273
    9. '_float' → logprob: -18.625097274780273
    10. '.float' → logprob: -19.625097274780273

Token 1307: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00011391390580683947
    2. ',float' → logprob: -9.125113487243652
    3. ' ,' → logprob: -12.250113487243652
    4. ',
' → logprob: -16.25011444091797
    5. ',f' → logprob: -17.62511444091797
    6. '‌,' → logprob: -18.87511444091797
    7. 'float' → logprob: -19.00011444091797
    8. ',int' → logprob: -19.62511444091797
    9. ',double' → logprob: -19.75011444091797
    10. ',

' → logprob: -19.87511444091797

Token 1308: ' float' (ID: 4428)
  Prédit: 'float'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'float' → logprob: -0.004078639671206474
    2. ' float' → logprob: -5.5040788650512695
    3. '	float' → logprob: -16.504077911376953
    4. '(float' → logprob: -17.629077911376953
    5. ',float' → logprob: -18.004077911376953
    6. '=float' → logprob: -18.379077911376953
    7. '<float' → logprob: -18.504077911376953
    8. '_float' → logprob: -19.879077911376953
    9. '.float' → logprob: -20.254077911376953
    10. 'Float' → logprob: -20.879077911376953

Token 1309: ']:
' (ID: 22152)
  Prédit: ']:
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']:
' → logprob: -0.4572829306125641
    2. ']:' → logprob: -1.8322829008102417
    3. '):
' → logprob: -1.9572829008102417
    4. '   ' → logprob: -3.5822830200195312
    5. '):' → logprob: -3.7072830200195312
    6. ']' → logprob: -5.582283020019531
    7. ']:
' → logprob: -6.082283020019531
    8. ':' → logprob: -6.332283020019531
    9. '>' → logprob: -7.082283020019531
    10. '']:
' → logprob: -7.332283020019531

Token 1310: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.3306015716807451e-05
    2. '   ' → logprob: -12.75001335144043
    3. '```' → logprob: -13.12501335144043
    4. '​' → logprob: -13.50001335144043
    5. '        
' → logprob: -13.75001335144043
    6. 'origin' → logprob: -14.12501335144043
    7. ',' → logprob: -14.62501335144043
    8. '
' → logprob: -14.75001335144043
    9. '    ' → logprob: -14.75001335144043
    10. '      ' → logprob: -14.87501335144043

Token 1311: ' #' (ID: 1069)
  Prédit: 'origin'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'origin' → logprob: -0.5792633891105652
    2. ' origin' → logprob: -0.8292633891105652
    3. '       ' → logprob: -6.454263210296631
    4. '(origin' → logprob: -6.579263210296631
    5. 'o' → logprob: -8.954263687133789
    6. ' o' → logprob: -9.204263687133789
    7. '_origin' → logprob: -10.579263687133789
    8. '   ' → logprob: -10.579263687133789
    9. 'orig' → logprob: -11.329263687133789
    10. '```' → logprob: -11.329263687133789

Token 1312: ' Map' (ID: 7343)
  Prédit: 'origin'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'origin' → logprob: -1.9862216504407115e-05
    2. 'o' → logprob: -11.625020027160645
    3. '(origin' → logprob: -11.875020027160645
    4. 'orig' → logprob: -13.125020027160645
    5. 'ori' → logprob: -14.625020027160645
    6. 'org' → logprob: -14.750020027160645
    7. ' origin' → logprob: -15.250020027160645
    8. '   ' → logprob: -15.250020027160645
    9. 'ox' → logprob: -15.375020027160645
    10. '
' → logprob: -15.750020027160645

Token 1313: ' ' (ID: 220)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.12141937762498856
    2. '(
' → logprob: -2.9964194297790527
    3. '(self' → logprob: -3.7464194297790527
    4. 'vector' → logprob: -3.9964194297790527
    5. ' self' → logprob: -4.746419429779053
    6. 'origin' → logprob: -5.246419429779053
    7. 'scalar' → logprob: -5.996419429779053
    8. '(' → logprob: -6.746419429779053
    9. ' (
' → logprob: -6.746419429779053
    10. 'tuple' → logprob: -7.246419429779053

Token 1314: '2' (ID: 17)
  Prédit: 'face'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'face' → logprob: -0.4460355341434479
    2. 'u' → logprob: -1.8210355043411255
    3. 'self' → logprob: -1.9460355043411255
    4. 'origin' → logprob: -3.821035623550415
    5. '(u' → logprob: -4.571035385131836
    6. '(self' → logprob: -5.071035385131836
    7. '(face' → logprob: -5.696035385131836
    8. 'point' → logprob: -5.821035385131836
    9. '(
' → logprob: -6.071035385131836
    10. 'def' → logprob: -6.321035385131836

Token 1315: 'D' (ID: 35)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.5950049161911011
    2. ',' → logprob: -2.3450050354003906
    3. '   ' → logprob: -2.4700050354003906
    4. ' *' → logprob: -3.2200050354003906
    5. '*' → logprob: -3.3450050354003906
    6. '_coord' → logprob: -3.4700050354003906
    7. '_coords' → logprob: -3.7200050354003906
    8. ')' → logprob: -3.8450050354003906
    9. '       ' → logprob: -4.220005035400391
    10. ' =' → logprob: -4.595005035400391

Token 1316: ' coordinates' (ID: 27933)
  Prédit: ' coordinates'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' coordinates' → logprob: -1.2041829824447632
    2. 'coords' → logprob: -1.2041829824447632
    3. 'coordinates' → logprob: -1.9541829824447632
    4. '_coords' → logprob: -2.0791831016540527
    5. ' coords' → logprob: -2.8291831016540527
    6. ',' → logprob: -4.079183101654053
    7. '_coordinates' → logprob: -4.329183101654053
    8. ' coordinate' → logprob: -4.579183101654053
    9. 'coordinate' → logprob: -4.954183101654053
    10. '(coords' → logprob: -5.704183101654053

Token 1317: ' in' (ID: 306)
  Prédit: ' on'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' on' → logprob: -1.151465654373169
    2. ' in' → logprob: -1.276465654373169
    3. '(face' → logprob: -2.276465654373169
    4. 'on' → logprob: -2.776465654373169
    5. '(' → logprob: -2.776465654373169
    6. 'in' → logprob: -3.276465654373169
    7. ' to' → logprob: -3.651465654373169
    8. '(
' → logprob: -3.651465654373169
    9. ' (' → logprob: -3.901465654373169
    10. ' =' → logprob: -4.15146541595459

Token 1318: ' face' (ID: 4950)
  Prédit: 'face'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'face' → logprob: -0.01419159211218357
    2. ' face' → logprob: -5.014191627502441
    3. 'the' → logprob: -5.889191627502441
    4. 'self' → logprob: -6.264191627502441
    5. 'space' → logprob: -6.514191627502441
    6. 'plane' → logprob: -7.764191627502441
    7. ' the' → logprob: -7.889191627502441
    8. '3' → logprob: -8.014191627502441
    9. 'local' → logprob: -10.014191627502441
    10. '   ' → logprob: -10.264191627502441

Token 1319: ' to' (ID: 316)
  Prédit: ' plane'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' plane' → logprob: -0.2966483533382416
    2. 'plane' → logprob: -1.546648383140564
    3. '_plane' → logprob: -3.4216482639312744
    4. ',' → logprob: -4.7966485023498535
    5. ' ,' → logprob: -6.1716485023498535
    6. '-plane' → logprob: -8.796648025512695
    7. ' frame' → logprob: -8.921648025512695
    8. '   ' → logprob: -9.796648025512695
    9. 'frame' → logprob: -9.921648025512695
    10. '_' → logprob: -10.046648025512695

Token 1320: ' ' (ID: 220)
  Prédit: 'vector'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'vector' → logprob: -0.8941327929496765
    2. 'origin' → logprob: -1.3941328525543213
    3. '(
' → logprob: -2.0191328525543213
    4. '(' → logprob: -2.1441328525543213
    5. '3' → logprob: -3.5191328525543213
    6. '(origin' → logprob: -3.7691328525543213
    7. 'point' → logprob: -4.644132614135742
    8. 'tuple' → logprob: -4.769132614135742
    9. 'xyz' → logprob: -5.019132614135742
    10. '(vector' → logprob: -5.519132614135742

Token 1321: '3' (ID: 18)
  Prédit: 'vector'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'vector' → logprob: -0.8715744614601135
    2. 'self' → logprob: -0.9965744614601135
    3. '(
' → logprob: -2.7465744018554688
    4. '(self' → logprob: -2.8715744018554688
    5. '3' → logprob: -2.9965744018554688
    6. '(' → logprob: -4.371574401855469
    7. 'origin' → logprob: -4.371574401855469
    8. 'tuple' → logprob: -4.996574401855469
    9. 'point' → logprob: -5.371574401855469
    10. 'xyz' → logprob: -5.996574401855469

Token 1322: 'D' (ID: 35)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.003244966734200716
    2. 'D' → logprob: -6.003244876861572
    3. '-d' → logprob: -7.253244876861572
    4. '_d' → logprob: -10.00324535369873
    5. '-t' → logprob: -12.50324535369873
    6. 'tuple' → logprob: -12.62824535369873
    7. '-dimensional' → logprob: -13.75324535369873
    8. ',' → logprob: -13.87824535369873
    9. '-vector' → logprob: -13.87824535369873
    10. 'space' → logprob: -14.00324535369873

Token 1323: ' coordinates' (ID: 27933)
  Prédit: ' point'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' point' → logprob: -1.0613301992416382
    2. 'point' → logprob: -1.4363301992416382
    3. ' coordinates' → logprob: -1.9363301992416382
    4. ' vector' → logprob: -2.8113303184509277
    5. ' coordinate' → logprob: -2.9363303184509277
    6. '_point' → logprob: -3.6863303184509277
    7. ':' → logprob: -3.6863303184509277
    8. ' =' → logprob: -3.8113303184509277
    9. 'coordinates' → logprob: -3.8113303184509277
    10. ' position' → logprob: -4.436330318450928

Token 1324: '
' (ID: 198)
  Prédit: '(origin'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(origin' → logprob: -1.210026502609253
    2. '   ' → logprob: -2.210026502609253
    3. '       ' → logprob: -2.210026502609253
    4. ' =' → logprob: -2.335026502609253
    5. ':
' → logprob: -2.335026502609253
    6. ':' → logprob: -2.460026502609253
    7. 'origin' → logprob: -3.085026502609253
    8. ' (' → logprob: -3.460026502609253
    9. '=' → logprob: -3.960026502609253
    10. 'vector' → logprob: -4.085026741027832

Token 1325: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.235367551445961
    2. '   ' → logprob: -1.8603675365447998
    3. ':
' → logprob: -3.4853675365448
    4. ':' → logprob: -4.610367774963379
    5. ' =' → logprob: -4.860367774963379
    6. '(origin' → logprob: -6.735367774963379
    7. 'origin' → logprob: -6.735367774963379
    8. ' (' → logprob: -7.485367774963379
    9. '):
' → logprob: -7.860367774963379
    10. '=' → logprob: -7.985367774963379

Token 1326: ' origin' (ID: 12839)
  Prédit: 'origin'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'origin' (adapté à ' origin') → logprob: -0.02406487800180912
    2. ' origin' → logprob: -3.774064779281616
    3. '       ' → logprob: -8.024065017700195
    4. '(origin' → logprob: -8.024065017700195
    5. 'o' → logprob: -9.149065017700195
    6. 'orig' → logprob: -10.274065017700195
    7. '   ' → logprob: -12.274065017700195
    8. ' o' → logprob: -12.399065017700195
    9. 'org' → logprob: -12.774065017700195
    10. 'ori' → logprob: -13.399065017700195

Token 1327: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.9459811449050903
    2. ' =' → logprob: -1.3209811449050903
    3. '=' → logprob: -1.4459811449050903
    4. ' +' → logprob: -2.695981025695801
    5. '[' → logprob: -3.945981025695801
    6. '+' → logprob: -4.320981025695801
    7. ')' → logprob: -5.070981025695801
    8. ' ,' → logprob: -7.320981025695801
    9. '   ' → logprob: -7.445981025695801
    10. 'def' → logprob: -8.1959810256958

Token 1328: ' u' (ID: 337)
  Prédit: 'u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'u' → logprob: -0.0006278486107476056
    2. ' u' → logprob: -7.3756279945373535
    3. '(u' → logprob: -14.500627517700195
    4. '   ' → logprob: -15.500627517700195
    5. '	u' → logprob: -15.625627517700195
    6. 'self' → logprob: -16.000627517700195
    7. '       ' → logprob: -16.125627517700195
    8. '  ' → logprob: -17.000627517700195
    9. '_u' → logprob: -17.125627517700195
    10. '    ' → logprob: -17.250627517700195

Token 1329: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0026175130624324083
    2. '_coord' → logprob: -7.127617359161377
    3. '_vec' → logprob: -7.627617359161377
    4. ' ,' → logprob: -8.002617835998535
    5. '_vector' → logprob: -8.377617835998535
    6. '_coords' → logprob: -8.502617835998535
    7. '_,' → logprob: -8.877617835998535
    8. ',_' → logprob: -9.002617835998535
    9. ',u' → logprob: -9.002617835998535
    10. ',
' → logprob: -10.627617835998535

Token 1330: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -7.493430894101039e-05
    2. ' v' → logprob: -9.500075340270996
    3. '	v' → logprob: -17.62507438659668
    4. 'vector' → logprob: -20.12507438659668
    5. '   ' → logprob: -20.25007438659668
    6. '_v' → logprob: -20.25007438659668
    7. 'self' → logprob: -20.87507438659668
    8. '(v' → logprob: -21.37507438659668
    9. 'u' → logprob: -21.75007438659668
    10. 'vv' → logprob: -22.00007438659668

Token 1331: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.20141607522964478
    2. ' =' → logprob: -1.701416015625
    3. ')' → logprob: -13.076416015625
    4. ',' → logprob: -15.326416015625
    5. '   ' → logprob: -15.576416015625
    6. ')=' → logprob: -15.826416015625
    7. '       ' → logprob: -16.201416015625
    8. ' ' → logprob: -16.826416015625
    9. '<|end|>' → logprob: -17.201416015625
    10. '        ' → logprob: -18.701416015625

Token 1332: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -1.4974866644479334e-05
    2. ' self' → logprob: -11.125015258789062
    3. '(self' → logprob: -16.500015258789062
    4. '[self' → logprob: -17.625015258789062
    5. '=self' → logprob: -18.625015258789062
    6. '       ' → logprob: -18.750015258789062
    7. '   ' → logprob: -19.000015258789062
    8. '`' → logprob: -19.750015258789062
    9. '	self' → logprob: -19.750015258789062
    10. 'this' → logprob: -20.250015258789062

Token 1333: '.face' (ID: 92193)
  Prédit: '.face'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.face' → logprob: -4.632542913896032e-05
    2. 'face' → logprob: -10.000046730041504
    3. '.' → logprob: -14.250046730041504
    4. ' .' → logprob: -15.500046730041504
    5. '.fac' → logprob: -17.000045776367188
    6. '.self' → logprob: -17.625045776367188
    7. '.f' → logprob: -17.875045776367188
    8. '.faces' → logprob: -18.375045776367188
    9. ' face' → logprob: -18.375045776367188
    10. 'self' → logprob: -18.500045776367188

Token 1334: '_b' (ID: 1535)
  Prédit: '_b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_b' → logprob: -0.000271706550847739
    2. '_frame' → logprob: -9.125271797180176
    3. '_face' → logprob: -9.250271797180176
    4. 'face' → logprob: -10.250271797180176
    5. '_basis' → logprob: -11.625271797180176
    6. 'b' → logprob: -11.875271797180176
    7. 'bases' → logprob: -12.375271797180176
    8. 'frame' → logprob: -12.875271797180176
    9. '_faces' → logprob: -13.375271797180176
    10. '(face' → logprob: -13.750271797180176

Token 1335: 'ases' (ID: 4324)
  Prédit: 'ases'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ases' → logprob: -0.00024215869780164212
    2. 'bases' → logprob: -8.750242233276367
    3. 'ase' → logprob: -9.500242233276367
    4. 'asis' → logprob: -12.500242233276367
    5. '_b' → logprob: -12.875242233276367
    6. '_' → logprob: -13.750242233276367
    7. 'as' → logprob: -14.875242233276367
    8. 'Bases' → logprob: -15.750242233276367
    9. 'faces' → logprob: -16.250242233276367
    10. '#' → logprob: -16.250242233276367

Token 1336: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -9.088346359931165e-07
    2. 'face' → logprob: -14.500000953674316
    3. '[f' → logprob: -15.125000953674316
    4. '(face' → logprob: -16.375
    5. '[self' → logprob: -17.75
    6. ' [' → logprob: -18.5
    7. 's' → logprob: -19.0
    8. '[class' → logprob: -19.125
    9. '   ' → logprob: -19.875
    10. '[
' → logprob: -20.0

Token 1337: 'face' (ID: 2300)
  Prédit: 'face'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'face' → logprob: 0.0
    2. '(face' → logprob: -17.25
    3. ' face' → logprob: -17.875
    4. '[' → logprob: -19.625
    5. 'Face' → logprob: -21.625
    6. 'f' → logprob: -21.625
    7. '.face' → logprob: -22.25
    8. '_face' → logprob: -22.75
    9. ')' → logprob: -22.75
    10. '
' → logprob: -22.875

Token 1338: ']
' (ID: 1592)
  Prédit: ']
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']
' → logprob: -0.2520003318786621
    2. ']' → logprob: -1.502000331878662
    3. ']
' → logprob: -10.50200080871582
    4. ']

' → logprob: -10.87700080871582
    5. '   ' → logprob: -11.25200080871582
    6. '][' → logprob: -12.62700080871582
    7. '       ' → logprob: -12.87700080871582
    8. ' ]
' → logprob: -12.87700080871582
    9. ' ]' → logprob: -14.37700080871582
    10. '];' → logprob: -14.37700080871582

Token 1339: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03032263182103634
    2. ' return' → logprob: -4.155322551727295
    3. '   ' → logprob: -4.905322551727295
    4. 'return' → logprob: -5.030322551727295
    5. '	return' → logprob: -9.530323028564453
    6. '
' → logprob: -9.655323028564453
    7. '	' → logprob: -10.655323028564453
    8. ' ' → logprob: -11.155323028564453
    9. '<|end|>' → logprob: -11.530323028564453
    10. '```' → logprob: -12.155323028564453

Token 1340: ' p' (ID: 275)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.06096629798412323
    2. '   ' → logprob: -3.6859662532806396
    3. 'ox' → logprob: -4.185966491699219
    4. ' return' → logprob: -4.435966491699219
    5. 'x' → logprob: -5.060966491699219
    6. ' ox' → logprob: -8.560966491699219
    7. '       ' → logprob: -9.060966491699219
    8. 'result' → logprob: -9.060966491699219
    9. ' x' → logprob: -9.810966491699219
    10. 'point' → logprob: -10.060966491699219

Token 1341: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.14370375871658325
    2. ' =' → logprob: -2.0187036991119385
    3. 'x' → logprob: -7.143703937530518
    4. '=
' → logprob: -9.64370346069336
    5. '_x' → logprob: -10.01870346069336
    6. '=p' → logprob: -10.14370346069336
    7. 'p' → logprob: -10.89370346069336
    8. 'osition' → logprob: -11.39370346069336
    9. '=(' → logprob: -11.89370346069336
    10. 'r' → logprob: -12.26870346069336

Token 1342: ' vector' (ID: 9727)
  Prédit: 'vector'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'vector' → logprob: -0.4697997570037842
    2. '(
' → logprob: -1.3447997570037842
    3. '(vector' → logprob: -3.219799757003784
    4. '(origin' → logprob: -3.594799757003784
    5. 'tuple' → logprob: -3.594799757003784
    6. '(' → logprob: -4.344799995422363
    7. 'add' → logprob: -5.969799995422363
    8. ' vector' → logprob: -6.719799995422363
    9. '(tuple' → logprob: -7.219799995422363
    10. 'origin' → logprob: -7.469799995422363

Token 1343: '_add' (ID: 8390)
  Prédit: '_add'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_add' → logprob: -0.0031897129956632853
    2. 'add' → logprob: -5.753189563751221
    3. '_sub' → logprob: -11.503190040588379
    4. '_sum' → logprob: -13.753190040588379
    5. '_scale' → logprob: -15.128190040588379
    6. '(' → logprob: -16.378189086914062
    7. '_mul' → logprob: -16.378189086914062
    8. 'Add' → logprob: -16.628189086914062
    9. '_scalar' → logprob: -17.003189086914062
    10. '_plus' → logprob: -17.378189086914062

Token 1344: '(origin' (ID: 96705)
  Prédit: '(origin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(origin' → logprob: -5.133198283147067e-05
    2. 'origin' → logprob: -10.000051498413086
    3. '(' → logprob: -12.125051498413086
    4. '(
' → logprob: -14.750051498413086
    5. '(original' → logprob: -17.000051498413086
    6. ' origin' → logprob: -17.625051498413086
    7. ' (' → logprob: -17.625051498413086
    8. '(orig' → logprob: -17.875051498413086
    9. '.origin' → logprob: -18.250051498413086
    10. '_origin' → logprob: -19.500051498413086

Token 1345: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00022392053506337106
    2. ',
' → logprob: -9.625224113464355
    3. ' ,' → logprob: -10.000224113464355
    4. ',u' → logprob: -10.000224113464355
    5. ',s' → logprob: -10.625224113464355
    6. 'vector' → logprob: -11.250224113464355
    7. ',v' → logprob: -11.375224113464355
    8. '(' → logprob: -11.875224113464355
    9. 'u' → logprob: -12.625224113464355
    10. '(vector' → logprob: -13.375224113464355

Token 1346: ' vector' (ID: 9727)
  Prédit: 'scalar'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'scalar' → logprob: -0.02638993225991726
    2. 'vector' → logprob: -3.7763898372650146
    3. ' scalar' → logprob: -5.776390075683594
    4. ' vector' → logprob: -10.526390075683594
    5. '   ' → logprob: -12.026390075683594
    6. 'scale' → logprob: -12.901390075683594
    7. '       ' → logprob: -13.901390075683594
    8. 'scaled' → logprob: -14.526390075683594
    9. ' ' → logprob: -14.651390075683594
    10. '           ' → logprob: -14.776390075683594

Token 1347: '_add' (ID: 8390)
  Prédit: '_add'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_add' → logprob: -0.004341698717325926
    2. '_scale' → logprob: -6.0043416023254395
    3. '_scalar' → logprob: -7.2543416023254395
    4. '_mul' → logprob: -8.004342079162598
    5. 'add' → logprob: -8.129342079162598
    6. 'scalar' → logprob: -8.504342079162598
    7. '(u' → logprob: -9.504342079162598
    8. '_mult' → logprob: -9.879342079162598
    9. 'scale' → logprob: -10.254342079162598
    10. '_scaled' → logprob: -10.629342079162598

Token 1348: '(s' (ID: 1858)
  Prédit: '(s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(s' → logprob: -1.6166903151315637e-05
    2. '(' → logprob: -11.625016212463379
    3. 'scalar' → logprob: -11.875016212463379
    4. '(vector' → logprob: -16.125015258789062
    5. ' scalar' → logprob: -16.500015258789062
    6. '(scale' → logprob: -17.375015258789062
    7. '(tuple' → logprob: -17.375015258789062
    8. ' (' → logprob: -18.375015258789062
    9. '.scalar' → logprob: -18.375015258789062
    10. '(
' → logprob: -18.500015258789062

Token 1349: 'calar' (ID: 128179)
  Prédit: 'calar'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'calar' → logprob: -1.9361264946837764e-07
    2. 'cale' → logprob: -15.875
    3. 'cal' → logprob: -17.375
    4. 'scalar' → logprob: -18.0
    5. 'c' → logprob: -19.125
    6. 'caler' → logprob: -19.125
    7. '(' → logprob: -19.375
    8. 'alar' → logprob: -19.625
    9. 'olar' → logprob: -19.75
    10. '(s' → logprob: -19.875

Token 1350: '_mult' (ID: 44050)
  Prédit: '_mult'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_mult' → logprob: -3.619311974034645e-05
    2. '_mul' → logprob: -10.875036239624023
    3. 'mult' → logprob: -11.125036239624023
    4. '(u' → logprob: -13.250036239624023
    5. 'Mult' → logprob: -15.250036239624023
    6. '(mult' → logprob: -15.750036239624023
    7. '_m' → logprob: -16.000036239624023
    8. '_MULT' → logprob: -17.125036239624023
    9. 'u' → logprob: -17.375036239624023
    10. '
' → logprob: -17.500036239624023

Token 1351: '(u' (ID: 17057)
  Prédit: '(u'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(u' → logprob: -2.2200749754119897e-06
    2. 'u' → logprob: -13.250001907348633
    3. '(' → logprob: -14.875001907348633
    4. ' (' → logprob: -16.875001907348633
    5. '(
' → logprob: -19.125001907348633
    6. ')(' → logprob: -19.250001907348633
    7. ')' → logprob: -19.625001907348633
    8. '((' → logprob: -20.125001907348633
    9. '[u' → logprob: -20.375001907348633
    10. '(v' → logprob: -20.500001907348633

Token 1352: ',u' (ID: 80698)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.1919908970594406
    2. '(u' → logprob: -2.191990852355957
    3. ',u' → logprob: -2.816990852355957
    4. 'u' → logprob: -6.191990852355957
    5. '(' → logprob: -7.816990852355957
    6. ',(' → logprob: -8.066990852355957
    7. ' ,' → logprob: -8.316990852355957
    8. '),' → logprob: -10.066990852355957
    9. ')' → logprob: -10.441990852355957
    10. ',
' → logprob: -10.691990852355957

Token 1353: '_coord' (ID: 71065)
  Prédit: '_coord'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_coord' → logprob: -9.209963900502771e-05
    2. 'coord' → logprob: -9.750092506408691
    3. ',' → logprob: -11.375092506408691
    4. '_coords' → logprob: -12.000092506408691
    5. '_co' → logprob: -12.250092506408691
    6. 'Coord' → logprob: -12.875092506408691
    7. 'u' → logprob: -13.625092506408691
    8. '
' → logprob: -13.750092506408691
    9. '_coeff' → logprob: -14.125092506408691
    10. ')' → logprob: -14.125092506408691

Token 1354: '),' (ID: 936)
  Prédit: '),'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),' → logprob: -0.00016432604752480984
    2. ' ),' → logprob: -9.000164031982422
    3. '),
' → logprob: -10.625164031982422
    4. ')' → logprob: -11.625164031982422
    5. ',' → logprob: -13.250164031982422
    6. ',),' → logprob: -13.250164031982422
    7. '),

' → logprob: -14.125164031982422
    8. '   ' → logprob: -14.250164031982422
    9. '),(' → logprob: -14.375164031982422
    10. '_),' → logprob: -14.625164031982422

Token 1355: ' scalar' (ID: 35065)
  Prédit: 'scalar'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'scalar' → logprob: -0.00975833274424076
    2. ' scalar' → logprob: -4.634758472442627
    3. '   ' → logprob: -14.259757995605469
    4. '.scalar' → logprob: -14.759757995605469
    5. '           ' → logprob: -15.134757995605469
    6. ' ' → logprob: -15.759757995605469
    7. '       ' → logprob: -15.884757995605469
    8. 'scaled' → logprob: -15.884757995605469
    9. 'sc' → logprob: -16.25975799560547
    10. 'scale' → logprob: -16.38475799560547

Token 1356: '_mult' (ID: 44050)
  Prédit: '_mult'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_mult' → logprob: -4.36574100604048e-06
    2. 'mult' → logprob: -12.875004768371582
    3. '_mul' → logprob: -13.875004768371582
    4. '(mult' → logprob: -15.000004768371582
    5. 'Mult' → logprob: -15.500004768371582
    6. '_MULT' → logprob: -15.875004768371582
    7. '_m' → logprob: -17.000003814697266
    8. 's' → logprob: -17.375003814697266
    9. '*_' → logprob: -18.125003814697266
    10. '*' → logprob: -18.375003814697266

Token 1357: '(v' (ID: 6932)
  Prédit: '(v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(v' → logprob: -3.047134305234067e-05
    2. 'v' → logprob: -10.750030517578125
    3. '(' → logprob: -11.625030517578125
    4. ' (' → logprob: -17.125030517578125
    5. ')' → logprob: -18.125030517578125
    6. '(
' → logprob: -18.750030517578125
    7. '(V' → logprob: -19.125030517578125
    8. ')(' → logprob: -19.625030517578125
    9. ')v' → logprob: -19.875030517578125
    10. 's' → logprob: -20.375030517578125

Token 1358: ',v' (ID: 30680)
  Prédit: ',v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',v' → logprob: -0.16054296493530273
    2. ',' → logprob: -1.9105429649353027
    3. 'v' → logprob: -8.160543441772461
    4. '(v' → logprob: -11.035543441772461
    5. ' ,' → logprob: -12.035543441772461
    6. ',(' → logprob: -13.285543441772461
    7. '(' → logprob: -13.410543441772461
    8. ',
' → logprob: -14.035543441772461
    9. ',p' → logprob: -14.035543441772461
    10. ' v' → logprob: -14.285543441772461

Token 1359: '_coord' (ID: 71065)
  Prédit: '_coord'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_coord' → logprob: -3.881560041918419e-05
    2. 'coord' → logprob: -10.250039100646973
    3. '_co' → logprob: -13.125039100646973
    4. 'Coord' → logprob: -15.000039100646973
    5. '_coords' → logprob: -15.125039100646973
    6. '_coeff' → logprob: -15.500039100646973
    7. '_COORD' → logprob: -16.000038146972656
    8. 'v' → logprob: -16.500038146972656
    9. '_coef' → logprob: -16.625038146972656
    10. ')' → logprob: -16.625038146972656

Token 1360: ')))
' (ID: 12562)
  Prédit: ')))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')))' → logprob: -0.00013715129171032459
    2. ')))
' → logprob: -9.500137329101562
    3. ')' → logprob: -10.375137329101562
    4. '))' → logprob: -10.625137329101562
    5. ')))

' → logprob: -12.750137329101562
    6. '))))' → logprob: -13.500137329101562
    7. ' ' → logprob: -13.500137329101562
    8. ')));' → logprob: -14.625137329101562
    9. ')))
' → logprob: -15.500137329101562
    10. '))).' → logprob: -15.625137329101562

Token 1361: '       ' (ID: 309)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.6280500888824463
    2. '       ' → logprob: -1.6280500888824463
    3. '<|end|>' → logprob: -1.7530500888824463
    4. '
' → logprob: -3.0030500888824463
    5. 'return' → logprob: -3.8780500888824463
    6. ')return' → logprob: -4.503049850463867
    7. ')
' → logprob: -4.753049850463867
    8. ' return' → logprob: -6.003049850463867
    9. '   ' → logprob: -7.253049850463867
    10. ':return' → logprob: -7.253049850463867

Token 1362: ' return' (ID: 622)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.12666568160057068
    2. 'return' (adapté à ' return') → logprob: -2.7516655921936035
    3. ' return' → logprob: -3.0016655921936035
    4. '
' → logprob: -5.2516655921936035
    5. '   ' → logprob: -9.876666069030762
    6. '<|end|>' → logprob: -9.876666069030762
    7. '	return' → logprob: -10.626666069030762
    8. '        
' → logprob: -11.376666069030762
    9. ':return' → logprob: -11.501666069030762
    10. ' ' → logprob: -11.751666069030762

Token 1363: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.0040785204619169235
    2. ' p' → logprob: -5.504078388214111
    3. '(p' → logprob: -16.254077911376953
    4. '(' → logprob: -18.504077911376953
    5. ' (' → logprob: -20.004077911376953
    6. '	p' → logprob: -20.129077911376953
    7. '   ' → logprob: -21.129077911376953
    8. 'tuple' → logprob: -21.379077911376953
    9. ' ' → logprob: -21.879077911376953
    10. ' ' → logprob: -22.379077911376953

Token 1364: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.10886597633361816
    2. '<|end|>' → logprob: -2.358865976333618
    3. '   ' → logprob: -5.108865737915039
    4. 'def' → logprob: -6.608865737915039
    5. '

' → logprob: -7.608865737915039
    6. '<|end|>' → logprob: -8.733865737915039
    7. ',' → logprob: -8.858865737915039
    8. ')' → logprob: -8.983865737915039
    9. '    
' → logprob: -9.358865737915039
    10. '```' → logprob: -10.233865737915039

Token 1365: '   ' (ID: 271)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0063036843203008175
    2. '   ' → logprob: -5.631303787231445
    3. '
' → logprob: -6.131303787231445
    4. '#' → logprob: -7.881303787231445
    5. '    
' → logprob: -10.006303787231445
    6. ' def' → logprob: -10.631303787231445
    7. '\' → logprob: -10.756303787231445
    8. ')' → logprob: -10.756303787231445
    9. '```' → logprob: -11.131303787231445
    10. 'import' → logprob: -12.256303787231445

Token 1366: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -6.778209353797138e-05
    2. '
' → logprob: -10.000067710876465
    3. '#' → logprob: -11.000067710876465
    4. '   ' → logprob: -12.500067710876465
    5. '    
' → logprob: -13.875067710876465
    6. '```' → logprob: -14.500067710876465
    7. ' def' → logprob: -15.000067710876465
    8. '  
' → logprob: -17.25006866455078
    9. 'import' → logprob: -17.25006866455078
    10. '

' → logprob: -17.75006866455078

Token 1367: ' vector' (ID: 9727)
  Prédit: 'face'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'face' → logprob: -1.1000765562057495
    2. 'edge' → logprob: -1.4750765562057495
    3. 'vector' → logprob: -2.225076675415039
    4. 'distance' → logprob: -2.850076675415039
    5. 'point' → logprob: -2.975076675415039
    6. 'get' → logprob: -3.225076675415039
    7. ' face' → logprob: -3.850076675415039
    8. ' edge' → logprob: -4.100076675415039
    9. ' vector' → logprob: -4.100076675415039
    10. 'angle' → logprob: -4.100076675415039

Token 1368: '_angle' (ID: 51505)
  Prédit: '_add'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_add' → logprob: -0.3869685232639313
    2. '_sub' → logprob: -1.1369684934616089
    3. '_length' → logprob: -9.386968612670898
    4. '_norm' → logprob: -12.011968612670898
    5. '_cross' → logprob: -13.011968612670898
    6. '_dot' → logprob: -13.511968612670898
    7. '_mul' → logprob: -13.761968612670898
    8. '_normal' → logprob: -14.261968612670898
    9. '_mult' → logprob: -14.636968612670898
    10. '_' → logprob: -14.761968612670898

Token 1369: '_deg' (ID: 144310)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.3966344892978668
    2. '(' → logprob: -1.7716344594955444
    3. '(v' → logprob: -2.271634578704834
    4. '(vector' → logprob: -3.896634578704834
    5. '(u' → logprob: -4.146634578704834
    6. '_between' → logprob: -4.271634578704834
    7. '(vec' → logprob: -6.771634578704834
    8. '(p' → logprob: -7.021634578704834
    9. '(
' → logprob: -7.396634578704834
    10. ' (' → logprob: -8.021634101867676

Token 1370: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.006067682523280382
    2. '(' → logprob: -5.131067752838135
    3. '(v' → logprob: -9.756067276000977
    4. '(vector' → logprob: -9.756067276000977
    5. '(
' → logprob: -11.756067276000977
    6. '(p' → logprob: -12.006067276000977
    7. ' (' → logprob: -12.506067276000977
    8. '(vec' → logprob: -13.131067276000977
    9. '_between' → logprob: -14.131067276000977
    10. '_(' → logprob: -14.256067276000977

Token 1371: ',' (ID: 11)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.32331550121307373
    2. '(' → logprob: -2.1983156204223633
    3. '(v' → logprob: -2.5733156204223633
    4. '(vector' → logprob: -3.1983156204223633
    5. ',' → logprob: -3.4483156204223633
    6. ')(' → logprob: -5.073315620422363
    7. ' (' → logprob: -5.573315620422363
    8. '(p' → logprob: -6.448315620422363
    9. '(a' → logprob: -6.573315620422363
    10. '(u' → logprob: -6.948315620422363

Token 1372: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.10433342307806015
    2. 'u' → logprob: -2.6043334007263184
    3. 'a' → logprob: -3.8543334007263184
    4. ' v' → logprob: -5.604333400726318
    5. ' u' → logprob: -8.479333877563477
    6. ' a' → logprob: -11.229333877563477
    7. 'w' → logprob: -11.354333877563477
    8. 'vec' → logprob: -12.354333877563477
    9. 'vector' → logprob: -12.479333877563477
    10. '   ' → logprob: -12.604333877563477

Token 1373: '1' (ID: 16)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.29890942573547363
    2. '1' → logprob: -1.6739094257354736
    3. '):' → logprob: -2.9239094257354736
    4. 'ector' → logprob: -5.0489091873168945
    5. ')' → logprob: -5.7989091873168945
    6. ',' → logprob: -6.0489091873168945
    7. '):
' → logprob: -6.2989091873168945
    8. ':(' → logprob: -7.1739091873168945
    9. '(vector' → logprob: -7.5489091873168945
    10. '=' → logprob: -7.6739091873168945

Token 1374: ':' (ID: 25)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0063868374563753605
    2. ',v' → logprob: -5.381386756896973
    3. ':' → logprob: -7.256386756896973
    4. ' ,' → logprob: -7.631386756896973
    5. '(v' → logprob: -8.131386756896973
    6. '(' → logprob: -9.256386756896973
    7. ' (' → logprob: -9.631386756896973
    8. '   ' → logprob: -10.381386756896973
    9. ',(' → logprob: -10.506386756896973
    10. ' ' → logprob: -11.381386756896973

Token 1375: ' Tuple' (ID: 50841)
  Prédit: 'Tuple'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Tuple' → logprob: -0.17937982082366943
    2. 'float' → logprob: -2.179379940032959
    3. 'tuple' → logprob: -3.054379940032959
    4. ' Tuple' → logprob: -6.679379940032959
    5. ')' → logprob: -6.804379940032959
    6. '_tuple' → logprob: -8.0543794631958
    7. '(float' → logprob: -8.1793794631958
    8. ' ' → logprob: -8.4293794631958
    9. '(tuple' → logprob: -8.6793794631958
    10. 'lambda' → logprob: -8.9293794631958

Token 1376: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -8.006006828509271e-05
    2. 'float' → logprob: -10.250080108642578
    3. ',float' → logprob: -10.500080108642578
    4. '(float' → logprob: -11.625080108642578
    5. '3' → logprob: -12.500080108642578
    6. '<float' → logprob: -13.625080108642578
    7. '   ' → logprob: -13.875080108642578
    8. '=float' → logprob: -14.375080108642578
    9. '[
' → logprob: -14.625080108642578
    10. '```' → logprob: -15.125080108642578

Token 1377: 'float' (ID: 7829)
  Prédit: 'float'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'float' → logprob: -1.0206720617134124e-05
    2. '(float' → logprob: -12.37501049041748
    3. '[' → logprob: -13.37501049041748
    4. ' float' → logprob: -13.37501049041748
    5. '3' → logprob: -13.75001049041748
    6. ',float' → logprob: -13.75001049041748
    7. 'flo' → logprob: -15.00001049041748
    8. '<float' → logprob: -15.62501049041748
    9. '=float' → logprob: -16.250009536743164
    10. 'int' → logprob: -16.750009536743164

Token 1378: ',float' (ID: 119642)
  Prédit: ',float'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',float' → logprob: -0.31512513756752014
    2. ',' → logprob: -1.3151251077651978
    3. '[' → logprob: -6.565124988555908
    4. ' ,' → logprob: -8.940125465393066
    5. ',v' → logprob: -9.565125465393066
    6. '(float' → logprob: -10.315125465393066
    7. ',(' → logprob: -10.315125465393066
    8. 'float' → logprob: -10.565125465393066
    9. '(' → logprob: -10.815125465393066
    10. ')' → logprob: -10.940125465393066

Token 1379: ',float' (ID: 119642)
  Prédit: ',float'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',float' → logprob: -0.5765479803085327
    2. ',' → logprob: -0.8265479803085327
    3. ',v' → logprob: -7.826548099517822
    4. ',int' → logprob: -9.076547622680664
    5. ',double' → logprob: -10.326547622680664
    6. ' ,' → logprob: -11.201547622680664
    7. ',f' → logprob: -11.201547622680664
    8. ',
' → logprob: -11.826547622680664
    9. ',user' → logprob: -12.451547622680664
    10. ',bool' → logprob: -12.576547622680664

Token 1380: '],' (ID: 2155)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00783741194754839
    2. ')' → logprob: -4.882837295532227
    3. ' ,' → logprob: -9.382837295532227
    4. '),' → logprob: -9.757837295532227
    5. '):' → logprob: -10.132837295532227
    6. '):
' → logprob: -11.007837295532227
    7. ',
' → logprob: -11.382837295532227
    8. '   ' → logprob: -11.757837295532227
    9. ',)' → logprob: -11.757837295532227
    10. ',v' → logprob: -13.007837295532227

Token 1381: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.47407984733581543
    2. ' v' → logprob: -0.9740798473358154
    3. '   ' → logprob: -13.849080085754395
    4. ' ' → logprob: -14.224080085754395
    5. '    ' → logprob: -14.474080085754395
    6. '	v' → logprob: -14.474080085754395
    7. ')' → logprob: -16.474079132080078
    8. '  ' → logprob: -17.724079132080078
    9. ')v' → logprob: -18.349079132080078
    10. ' ' → logprob: -18.349079132080078

Token 1382: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0009236076730303466
    2. '1' → logprob: -7.0009236335754395
    3. 'v' → logprob: -12.750923156738281
    4. '_' → logprob: -13.250923156738281
    5. 'ector' → logprob: -13.500923156738281
    6. '0' → logprob: -13.750923156738281
    7. '```' → logprob: -13.875923156738281
    8. ',' → logprob: -14.250923156738281
    9. 'ectors' → logprob: -14.625923156738281
    10. ',v' → logprob: -14.750923156738281

Token 1383: ':' (ID: 25)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.08091491460800171
    2. ',' → logprob: -2.5809149742126465
    3. '):' → logprob: -6.8309149742126465
    4. ' )' → logprob: -8.205914497375488
    5. ':' → logprob: -8.330914497375488
    6. '   ' → logprob: -8.330914497375488
    7. '[' → logprob: -10.455914497375488
    8. '):
' → logprob: -10.455914497375488
    9. ' ,' → logprob: -10.455914497375488
    10. ' ' → logprob: -10.580914497375488

Token 1384: ' Tuple' (ID: 50841)
  Prédit: 'Tuple'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Tuple' → logprob: -0.47581925988197327
    2. ' Tuple' → logprob: -0.9758192300796509
    3. ' tuple' → logprob: -7.600819110870361
    4. ')' → logprob: -7.850819110870361
    5. ' ' → logprob: -7.975819110870361
    6. 'tuple' → logprob: -8.10081958770752
    7. 'float' → logprob: -9.35081958770752
    8. ' float' → logprob: -10.35081958770752
    9. ' (' → logprob: -11.10081958770752
    10. ' 
' → logprob: -11.47581958770752

Token 1385: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.01658417098224163
    2. ',float' → logprob: -4.516584396362305
    3. '<float' → logprob: -5.391584396362305
    4. ',' → logprob: -7.516584396362305
    5. '(float' → logprob: -8.141584396362305
    6. 'float' → logprob: -9.641584396362305
    7. '=float' → logprob: -11.016584396362305
    8. '   ' → logprob: -11.266584396362305
    9. '[int' → logprob: -11.516584396362305
    10. '(' → logprob: -12.266584396362305

Token 1386: 'float' (ID: 7829)
  Prédit: 'float'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'float' → logprob: -1.318681188422488e-05
    2. '(float' → logprob: -11.75001335144043
    3. ' float' → logprob: -12.37501335144043
    4. ',float' → logprob: -14.37501335144043
    5. '=float' → logprob: -15.87501335144043
    6. '	float' → logprob: -16.00001335144043
    7. '<float' → logprob: -16.12501335144043
    8. '```' → logprob: -17.37501335144043
    9. '.float' → logprob: -18.00001335144043
    10. '   ' → logprob: -18.50001335144043

Token 1387: ',float' (ID: 119642)
  Prédit: ',float'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',float' → logprob: -2.570319702499546e-05
    2. ',' → logprob: -11.125025749206543
    3. ',
' → logprob: -12.375025749206543
    4. 'float' → logprob: -12.500025749206543
    5. ',int' → logprob: -14.125025749206543
    6. '[' → logprob: -14.500025749206543
    7. '<float' → logprob: -14.625025749206543
    8. '
' → logprob: -14.875025749206543
    9. ',bool' → logprob: -15.375025749206543
    10. '=float' → logprob: -15.375025749206543

Token 1388: ',float' (ID: 119642)
  Prédit: ',float'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',float' → logprob: -4.286852345103398e-05
    2. ',' → logprob: -10.375042915344238
    3. ',
' → logprob: -11.625042915344238
    4. ',f' → logprob: -14.625042915344238
    5. ',v' → logprob: -15.125042915344238
    6. ',int' → logprob: -15.250042915344238
    7. ',None' → logprob: -15.250042915344238
    8. ',double' → logprob: -15.625042915344238
    9. 'float' → logprob: -15.625042915344238
    10. '<float' → logprob: -15.875042915344238

Token 1389: '])' (ID: 4636)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00026073982007801533
    2. '):
' → logprob: -9.000260353088379
    3. ' )' → logprob: -9.250260353088379
    4. ',' → logprob: -11.125260353088379
    5. '):' → logprob: -11.250260353088379
    6. '   ' → logprob: -11.375260353088379
    7. ',)' → logprob: -14.625260353088379
    8. '):

' → logprob: -15.125260353088379
    9. '`)' → logprob: -15.750260353088379
    10. ')=' → logprob: -15.750260353088379

Token 1390: ' ->' (ID: 2747)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0017060093814507127
    2. '   ' → logprob: -7.751706123352051
    3. ' ->' → logprob: -8.12670612335205
    4. ':return' → logprob: -8.25170612335205
    5. ')' → logprob: -8.50170612335205
    6. ' :' → logprob: -9.12670612335205
    7. '=' → logprob: -9.25170612335205
    8. ',' → logprob: -9.62670612335205
    9. '->' → logprob: -9.87670612335205
    10. '(' → logprob: -9.87670612335205

Token 1391: ' float' (ID: 4428)
  Prédit: 'float'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'float' → logprob: -0.1817605197429657
    2. ' float' → logprob: -1.806760549545288
    3. 'math' → logprob: -6.806760311126709
    4. ' math' → logprob: -7.431760311126709
    5. ',float' → logprob: -9.431760787963867
    6. ' ' → logprob: -9.681760787963867
    7. '[' → logprob: -10.306760787963867
    8. '(float' → logprob: -10.431760787963867
    9. '=float' → logprob: -11.181760787963867
    10. ')' → logprob: -11.181760787963867

Token 1392: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0004936986370012164
    2. '):' → logprob: -8.750494003295898
    3. ':
' → logprob: -9.000494003295898
    4. '   ' → logprob: -9.250494003295898
    5. ',' → logprob: -10.125494003295898
    6. '():' → logprob: -10.875494003295898
    7. ':return' → logprob: -11.000494003295898
    8. '(' → logprob: -11.625494003295898
    9. ':def' → logprob: -12.125494003295898
    10. '=' → logprob: -12.125494003295898

Token 1393: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2346218079328537
    2. '   ' → logprob: -1.6096217632293701
    3. ':' → logprob: -5.609622001647949
    4. '    ' → logprob: -5.859622001647949
    5. '```' → logprob: -7.609622001647949
    6. '(' → logprob: -7.734622001647949
    7. ')' → logprob: -7.984622001647949
    8. 'import' → logprob: -8.10962200164795
    9. '
' → logprob: -8.98462200164795
    10. ' return' → logprob: -9.10962200164795

Token 1394: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03508340194821358
    2. 'dot' → logprob: -4.035083293914795
    3. '```' → logprob: -5.035083293914795
    4. 'cos' → logprob: -5.535083293914795
    5. '   ' → logprob: -6.410083293914795
    6. 'n' → logprob: -7.285083293914795
    7. 'import' → logprob: -7.285083293914795
    8. 'a' → logprob: -7.535083293914795
    9. '``' → logprob: -7.535083293914795
    10. ' dot' → logprob: -7.910083293914795

Token 1395: ' Returns' (ID: 9609)
  Prédit: 'dot'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dot' → logprob: -0.024272006005048752
    2. 'cos' → logprob: -4.1492719650268555
    3. 'd' → logprob: -5.7742719650268555
    4. 'angle' → logprob: -6.6492719650268555
    5. 'dp' → logprob: -6.7742719650268555
    6. 'def' → logprob: -7.5242719650268555
    7. '   ' → logprob: -7.6492719650268555
    8. '#' → logprob: -7.6492719650268555
    9. 'v' → logprob: -8.149271965026855
    10. 'import' → logprob: -8.899271965026855

Token 1396: ' angle' (ID: 16538)
  Prédit: 'math'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'math' → logprob: -0.12743428349494934
    2. ' math' → logprob: -2.127434253692627
    3. '       ' → logprob: -8.127434730529785
    4. '   ' → logprob: -9.877434730529785
    5. 'max' → logprob: -9.877434730529785
    6. 'angle' → logprob: -10.752434730529785
    7. ' acos' → logprob: -11.127434730529785
    8. 'acos' → logprob: -11.252434730529785
    9. '           ' → logprob: -11.377434730529785
    10. '(math' → logprob: -11.502434730529785

Token 1397: ' between' (ID: 2870)
  Prédit: '_between'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_between' → logprob: -0.17779120802879333
    2. '_deg' → logprob: -3.302791118621826
    3. '_rad' → logprob: -3.427791118621826
    4. '=' → logprob: -3.552791118621826
    5. 'between' → logprob: -3.677791118621826
    6. '(' → logprob: -4.177791118621826
    7. '(
' → logprob: -4.677791118621826
    8. '(v' → logprob: -4.802791118621826
    9. ' between' → logprob: -5.677791118621826
    10. '_de' → logprob: -6.927791118621826

Token 1398: ' vectors' (ID: 52254)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.012578755617141724
    2. 'vectors' → logprob: -4.887578964233398
    3. ' v' → logprob: -5.762578964233398
    4. ' vectors' → logprob: -6.512578964233398
    5. 'two' → logprob: -8.887578964233398
    6. ' two' → logprob: -9.137578964233398
    7. '(
' → logprob: -10.137578964233398
    8. '   ' → logprob: -10.387578964233398
    9. 'vector' → logprob: -12.012578964233398
    10. '(' → logprob: -13.012578964233398

Token 1399: ' in' (ID: 306)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.28380346298217773
    2. '(
' → logprob: -2.4088034629821777
    3. '(v' → logprob: -2.5338034629821777
    4. 'v' → logprob: -3.2838034629821777
    5. ' (' → logprob: -3.4088034629821777
    6. ' in' → logprob: -5.533803462982178
    7. ' (
' → logprob: -7.408803462982178
    8. ' v' → logprob: -8.033803939819336
    9. 'in' → logprob: -8.158803939819336
    10. '   ' → logprob: -8.158803939819336

Token 1400: ' degrees' (ID: 18210)
  Prédit: 'degrees'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'degrees' → logprob: -0.019052693620324135
    2. '[' → logprob: -4.019052505493164
    3. 'r' → logprob: -7.394052505493164
    4. ' degrees' → logprob: -8.644052505493164
    5. 'degree' → logprob: -9.394052505493164
    6. '0' → logprob: -11.519052505493164
    7. 'deg' → logprob: -11.894052505493164
    8. '   ' → logprob: -12.394052505493164
    9. '[
' → logprob: -13.394052505493164
    10. '
' → logprob: -13.769052505493164

Token 1401: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6965420842170715
    2. '       ' → logprob: -1.3215420246124268
    3. '(' → logprob: -2.1965420246124268
    4. '(
' → logprob: -3.3215420246124268
    5. '(self' → logprob: -3.8215420246124268
    6. ' (' → logprob: -3.8215420246124268
    7. ':' → logprob: -4.446542263031006
    8. ',' → logprob: -5.071542263031006
    9. '(v' → logprob: -5.196542263031006
    10. '```' → logprob: -5.196542263031006

Token 1402: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.8137288689613342
    2. '(' → logprob: -1.3137288093566895
    3. '   ' → logprob: -1.6887288093566895
    4. '(
' → logprob: -2.9387288093566895
    5. '(self' → logprob: -3.4387288093566895
    6. ':' → logprob: -5.4387288093566895
    7. '```' → logprob: -5.5637288093566895
    8. ' (' → logprob: -5.6887288093566895
    9. ',' → logprob: -6.4387288093566895
    10. 'def' → logprob: -7.0637288093566895

Token 1403: ' a' (ID: 261)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.028612500056624413
    2. 'import' → logprob: -4.0286126136779785
    3. '   ' → logprob: -5.4036126136779785
    4. ' import' → logprob: -5.7786126136779785
    5. '```' → logprob: -7.0286126136779785
    6. 'dot' → logprob: -8.02861213684082
    7. ' acos' → logprob: -8.27861213684082
    8. '
' → logprob: -8.90361213684082
    9. ' dot' → logprob: -9.02861213684082
    10. ' v' → logprob: -9.15361213684082

Token 1404: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5168837308883667
    2. '=' → logprob: -1.0168837308883667
    3. 'cos' → logprob: -4.016883850097656
    4. 'ng' → logprob: -4.141883850097656
    5. '   ' → logprob: -6.266883850097656
    6. 'r' → logprob: -6.516883850097656
    7. 'b' → logprob: -6.516883850097656
    8. '_cos' → logprob: -6.641883850097656
    9. 'import' → logprob: -7.641883850097656
    10. ' ' → logprob: -8.391883850097656

Token 1405: ' normalize' (ID: 44464)
  Prédit: 'math'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'math' → logprob: -0.0015733062755316496
    2. 'dot' → logprob: -7.001573085784912
    3. 'vector' → logprob: -7.876573085784912
    4. ' math' → logprob: -8.62657356262207
    5. 'max' → logprob: -9.50157356262207
    6. 'angle' → logprob: -11.37657356262207
    7. '(math' → logprob: -11.75157356262207
    8. 'cl' → logprob: -12.87657356262207
    9. 'acos' → logprob: -12.87657356262207
    10. 'v' → logprob: -13.75157356262207

Token 1406: '(v' (ID: 6932)
  Prédit: '(v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(v' → logprob: -2.7133641196996905e-05
    2. '(' → logprob: -10.62502670288086
    3. 'v' → logprob: -13.00002670288086
    4. '(vector' → logprob: -16.00002670288086
    5. ',v' → logprob: -16.12502670288086
    6. ' (' → logprob: -16.50002670288086
    7. '(
' → logprob: -16.50002670288086
    8. 'vector' → logprob: -17.50002670288086
    9. ' v' → logprob: -17.87502670288086
    10. '(s' → logprob: -18.87502670288086

Token 1407: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0006367852329276502
    2. '(v' → logprob: -7.750636577606201
    3. 'vector' → logprob: -10.25063705444336
    4. '(' → logprob: -10.50063705444336
    5. '_' → logprob: -10.62563705444336
    6. 'ector' → logprob: -10.87563705444336
    7. '(vector' → logprob: -11.00063705444336
    8. '
' → logprob: -11.12563705444336
    9. 'ec' → logprob: -11.37563705444336
    10. ')' → logprob: -11.37563705444336

Token 1408: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.2049311101436615
    2. ')
' → logprob: -1.8299311399459839
    3. ',' → logprob: -3.7049310207366943
    4. '),' → logprob: -9.454931259155273
    5. ')v' → logprob: -10.079931259155273
    6. ',
' → logprob: -10.204931259155273
    7. ')
' → logprob: -10.579931259155273
    8. '   ' → logprob: -10.704931259155273
    9. ')

' → logprob: -11.329931259155273
    10. '       ' → logprob: -11.579931259155273

Token 1409: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4717380404472351
    2. '   ' → logprob: -2.09673810005188
    3. '.dot' → logprob: -2.22173810005188
    4. '```' → logprob: -3.34673810005188
    5. ',' → logprob: -3.84673810005188
    6. 'dot' → logprob: -4.221737861633301
    7. 'b' → logprob: -4.721737861633301
    8. ' ' → logprob: -4.846737861633301
    9. ',
' → logprob: -4.971737861633301
    10. 'return' → logprob: -4.971737861633301

Token 1410: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' (adapté à ' b') → logprob: -0.10052862763404846
    2. ' b' → logprob: -2.3505287170410156
    3. '   ' → logprob: -9.475528717041016
    4. '       ' → logprob: -9.600528717041016
    5. 'import' → logprob: -9.725528717041016
    6. 'v' → logprob: -10.725528717041016
    7. 'max' → logprob: -11.850528717041016
    8. 'dot' → logprob: -11.850528717041016
    9. 'normalize' → logprob: -11.975528717041016
    10. 'return' → logprob: -12.100528717041016

Token 1411: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.14285549521446228
    2. '=' → logprob: -2.017855405807495
    3. ')' → logprob: -8.767855644226074
    4. ' =
' → logprob: -12.392855644226074
    5. ',' → logprob: -12.517855644226074
    6. 'b' → logprob: -12.767855644226074
    7. '[' → logprob: -13.267855644226074
    8. 'a' → logprob: -13.392855644226074
    9. '=
' → logprob: -13.517855644226074
    10. ')=' → logprob: -13.642855644226074

Token 1412: ' normalize' (ID: 44464)
  Prédit: 'normalize'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'normalize' → logprob: -0.0002614550176076591
    2. ' normalize' → logprob: -8.250261306762695
    3. '(normal' → logprob: -16.250261306762695
    4. 'normal' → logprob: -16.875261306762695
    5. 'normalized' → logprob: -18.875261306762695
    6. '.normalize' → logprob: -18.875261306762695
    7. 'norm' → logprob: -20.125261306762695
    8. '_normal' → logprob: -22.125261306762695
    9. '0' → logprob: -22.250261306762695
    10. 'Normalize' → logprob: -23.000261306762695

Token 1413: '(v' (ID: 6932)
  Prédit: '(v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(v' → logprob: -1.8074162653647363e-05
    2. '(' → logprob: -11.125018119812012
    3. 'v' → logprob: -13.375018119812012
    4. ' (' → logprob: -13.375018119812012
    5. '(b' → logprob: -16.250017166137695
    6. '(
' → logprob: -17.500017166137695
    7. ' v' → logprob: -17.500017166137695
    8. '(vector' → logprob: -18.375017166137695
    9. '
' → logprob: -18.625017166137695
    10. ',v' → logprob: -19.500017166137695

Token 1414: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.000229046301683411
    2. '1' → logprob: -8.500228881835938
    3. '(v' → logprob: -10.625228881835938
    4. '(' → logprob: -14.375228881835938
    5. 'v' → logprob: -14.875228881835938
    6. '```' → logprob: -16.000228881835938
    7. '_' → logprob: -16.750228881835938
    8. '[' → logprob: -16.875228881835938
    9. ')' → logprob: -17.500228881835938
    10. 'ector' → logprob: -18.250228881835938

Token 1415: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.07899245619773865
    2. ')' → logprob: -2.5789923667907715
    3. '       ' → logprob: -9.57899284362793
    4. ')
' → logprob: -10.57899284362793
    5. '   ' → logprob: -12.57899284362793
    6. ')

' → logprob: -13.57899284362793
    7. ' )
' → logprob: -13.82899284362793
    8. ')`
' → logprob: -13.95399284362793
    9. ')return' → logprob: -15.20399284362793
    10. ',' → logprob: -15.32899284362793

Token 1416: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.01829240471124649
    2. '   ' → logprob: -4.643292427062988
    3. 'import' → logprob: -5.268292427062988
    4. 'return' → logprob: -6.143292427062988
    5. '```' → logprob: -7.893292427062988
    6. ' return' → logprob: -8.143292427062988
    7. ')' → logprob: -8.893292427062988
    8. 'dot' → logprob: -9.643292427062988
    9. 'angle' → logprob: -9.893292427062988
    10. '
' → logprob: -10.143292427062988

Token 1417: ' c' (ID: 274)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7033336162567139
    2. 'dot' → logprob: -1.2033336162567139
    3. '   ' → logprob: -2.453333616256714
    4. 'cl' → logprob: -3.203333616256714
    5. ' dot' → logprob: -3.828333616256714
    6. 'import' → logprob: -4.078333854675293
    7. 'return' → logprob: -4.703333854675293
    8. 'angle' → logprob: -4.703333854675293
    9. '```' → logprob: -5.203333854675293
    10. 'c' (adapté à ' c') → logprob: -5.328333854675293

Token 1418: ' =' (ID: 314)
  Prédit: 'os'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'os' → logprob: -0.9664061069488525
    2. '=' → logprob: -1.4664061069488525
    3. 'dot' → logprob: -2.2164061069488525
    4. ' =' → logprob: -2.3414061069488525
    5. '_dot' → logprob: -2.3414061069488525
    6. 'o' → logprob: -2.7164061069488525
    7. '_' → logprob: -5.466405868530273
    8. '_angle' → logprob: -5.466405868530273
    9. 'oss' → logprob: -5.966405868530273
    10. '_cos' → logprob: -6.341405868530273

Token 1419: ' dot' (ID: 16579)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.16255028545856476
    2. 'math' → logprob: -1.9125503301620483
    3. ' max' → logprob: -6.537550449371338
    4. ' math' → logprob: -7.537550449371338
    5. 'min' → logprob: -8.78754997253418
    6. 'dot' → logprob: -9.16254997253418
    7. 'cl' → logprob: -9.53754997253418
    8. 'vector' → logprob: -11.91254997253418
    9. '(max' → logprob: -13.53754997253418
    10. ' dot' → logprob: -13.78754997253418

Token 1420: '(a' (ID: 6271)
  Prédit: '(a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.00917084887623787
    2. '(' → logprob: -4.759171009063721
    3. '(c' → logprob: -7.509171009063721
    4. '(
' → logprob: -12.384170532226562
    5. '(b' → logprob: -13.134170532226562
    6. ' (' → logprob: -13.384170532226562
    7. '(n' → logprob: -16.384170532226562
    8. '(s' → logprob: -16.509170532226562
    9. 'a' → logprob: -17.259170532226562
    10. '((' → logprob: -17.634170532226562

Token 1421: ',b' (ID: 17568)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.004184059798717499
    2. ',b' → logprob: -5.629184246063232
    3. ' ,' → logprob: -8.379183769226074
    4. '(' → logprob: -8.504183769226074
    5. '(b' → logprob: -9.629183769226074
    6. ',c' → logprob: -10.004183769226074
    7. ',v' → logprob: -11.129183769226074
    8. 'b' → logprob: -11.754183769226074
    9. ',
' → logprob: -12.254183769226074
    10. '(c' → logprob: -12.379183769226074

Token 1422: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.03812835365533829
    2. ')
' → logprob: -3.28812837600708
    3. ' )' → logprob: -10.788127899169922
    4. ',' → logprob: -11.038127899169922
    5. '       ' → logprob: -11.163127899169922
    6. ')`' → logprob: -11.663127899169922
    7. ')**' → logprob: -12.538127899169922
    8. ' )
' → logprob: -12.663127899169922
    9. '   ' → logprob: -12.788127899169922
    10. ')+' → logprob: -12.913127899169922

Token 1423: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5052986145019531
    2. ' if' → logprob: -1.0052986145019531
    3. 'c' → logprob: -3.755298614501953
    4. '=' → logprob: -6.380298614501953
    5. 'if' → logprob: -6.380298614501953
    6. ' =' → logprob: -6.880298614501953
    7. ')' → logprob: -7.130298614501953
    8. '
' → logprob: -7.505298614501953
    9. ' c' → logprob: -7.505298614501953
    10. ',' → logprob: -8.380298614501953

Token 1424: ' c' (ID: 274)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.9488898515701294
    2. 'c' (adapté à ' c') → logprob: -1.3238898515701294
    3. '       ' → logprob: -1.3238898515701294
    4. ' c' → logprob: -3.19888973236084
    5. 'if' → logprob: -3.32388973236084
    6. ' return' → logprob: -6.32388973236084
    7. 'return' → logprob: -6.57388973236084
    8. 'cl' → logprob: -7.94888973236084
    9. 'import' → logprob: -9.44888973236084
    10. '   ' → logprob: -9.57388973236084

Token 1425: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.002475777640938759
    2. ' =' → logprob: -6.002475738525391
    3. '=c' → logprob: -17.00247573852539
    4. 'c' → logprob: -17.12747573852539
    5. 'if' → logprob: -19.25247573852539
    6. ')' → logprob: -19.75247573852539
    7. ')=' → logprob: -20.00247573852539
    8. '=
' → logprob: -20.00247573852539
    9. '=}' → logprob: -20.00247573852539
    10. '_=' → logprob: -20.12747573852539

Token 1426: ' max' (ID: 2999)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.07914666831493378
    2. 'min' → logprob: -2.57914662361145
    3. ' max' → logprob: -8.329146385192871
    4. ' min' → logprob: -11.079146385192871
    5. '	max' → logprob: -18.204147338867188
    6. '(max' → logprob: -18.579147338867188
    7. '1' → logprob: -18.704147338867188
    8. '	min' → logprob: -18.954147338867188
    9. '(min' → logprob: -19.579147338867188
    10. '=max' → logprob: -20.829147338867188

Token 1427: '(min' (ID: 26035)
  Prédit: '(min'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(min' → logprob: -0.5768786668777466
    2. '(-' → logprob: -0.8268786668777466
    3. '-' → logprob: -7.076878547668457
    4. 'min' → logprob: -9.326878547668457
    5. '-min' → logprob: -12.701878547668457
    6. '(' → logprob: -13.076878547668457
    7. ' min' → logprob: -16.326879501342773
    8. '=min' → logprob: -16.451879501342773
    9. ',min' → logprob: -16.576879501342773
    10. '	min' → logprob: -17.326879501342773

Token 1428: '(c' (ID: 2410)
  Prédit: '(c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(c' → logprob: -0.12693524360656738
    2. '(' → logprob: -2.1269352436065674
    3. '1' → logprob: -12.251935005187988
    4. 'c' → logprob: -13.001935005187988
    5. ' (' → logprob: -16.501935958862305
    6. '(
' → logprob: -17.376935958862305
    7. '((' → logprob: -18.751935958862305
    8. '(a' → logprob: -19.251935958862305
    9. '	c' → logprob: -19.501935958862305
    10. '(-' → logprob: -19.626935958862305

Token 1429: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0003335585934109986
    2. ' ,' → logprob: -8.125333786010742
    3. '1' → logprob: -10.250333786010742
    4. '(' → logprob: -13.750333786010742
    5. '(c' → logprob: -14.375333786010742
    6. 'c' → logprob: -15.750333786010742
    7. '0' → logprob: -16.250333786010742
    8. ',c' → logprob: -16.500333786010742
    9. ',
' → logprob: -16.750333786010742
    10. ' ' → logprob: -17.375333786010742

Token 1430: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.2729995988775045e-06
    2. ' ' → logprob: -12.000006675720215
    3. '+' → logprob: -22.1250057220459
    4. '   ' → logprob: -22.3750057220459
    5. '  ' → logprob: -23.5000057220459
    6. '
' → logprob: -24.3750057220459
    7. ' ' → logprob: -24.8750057220459
    8. '１' → logprob: -25.7500057220459
    9. ')' → logprob: -25.8750057220459
    10. '`' → logprob: -26.0000057220459

Token 1431: '.' (ID: 13)
  Prédit: '.'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.3868943452835083
    2. '),' → logprob: -1.1368943452835083
    3. '),(' → logprob: -11.136894226074219
    4. ' ),' → logprob: -12.386894226074219
    5. ',' → logprob: -13.261894226074219
    6. ')' → logprob: -13.636894226074219
    7. '0' → logprob: -14.761894226074219
    8. 'c' → logprob: -15.011894226074219
    9. '1' → logprob: -15.386894226074219
    10. '.),' → logprob: -15.636894226074219

Token 1432: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0005393316387198865
    2. '.' → logprob: -8.000539779663086
    3. '),' → logprob: -8.500539779663086
    4. ' ' → logprob: -15.625539779663086
    5. '```' → logprob: -16.125539779663086
    6. ',' → logprob: -16.500539779663086
    7. '   ' → logprob: -16.625539779663086
    8. '1' → logprob: -17.250539779663086
    9. '000' → logprob: -17.625539779663086
    10. ')' → logprob: -17.750539779663086

Token 1433: '),' (ID: 936)
  Prédit: '),'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),' → logprob: -3.4121114822482923e-06
    2. ' ),' → logprob: -12.625003814697266
    3. '),(' → logprob: -17.375003814697266
    4. ')' → logprob: -17.625003814697266
    5. '),
' → logprob: -19.625003814697266
    6. '   ' → logprob: -19.875003814697266
    7. ',),' → logprob: -20.500003814697266
    8. ',' → logprob: -20.875003814697266
    9. '​' → logprob: -21.375003814697266
    10. '0' → logprob: -21.375003814697266

Token 1434: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -3.128163257315464e-07
    2. ' -' → logprob: -15.25
    3. '−' → logprob: -21.75
    4. '```' → logprob: -25.0
    5. '
' → logprob: -25.25
    6. '–' → logprob: -25.625
    7. '\-' → logprob: -25.625
    8. '   ' → logprob: -25.75
    9. '1' → logprob: -26.25
    10. '-
' → logprob: -27.25

Token 1435: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: 0.0
    2. ' ' → logprob: -18.125
    3. '   ' → logprob: -21.75
    4. '```' → logprob: -21.875
    5. '１' → logprob: -23.0
    6. '
' → logprob: -23.0
    7. '۱' → logprob: -23.125
    8. '``' → logprob: -23.875
    9. '

' → logprob: -24.5
    10. '       ' → logprob: -24.625

Token 1436: '.' (ID: 13)
  Prédit: '.'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.00010962257510982454
    2. ')' → logprob: -9.125109672546387
    3. '0' → logprob: -14.625109672546387
    4. '))' → logprob: -16.12510871887207
    5. '1' → logprob: -17.12510871887207
    6. ')
' → logprob: -17.87510871887207
    7. '),' → logprob: -18.37510871887207
    8. ',' → logprob: -20.25010871887207
    9. '(' → logprob: -20.75010871887207
    10. '[' → logprob: -20.75010871887207

Token 1437: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.018164223060011864
    2. '1' → logprob: -4.018164157867432
    3. ' ' → logprob: -11.39316463470459
    4. '.' → logprob: -13.39316463470459
    5. ')' → logprob: -13.51816463470459
    6. '   ' → logprob: -16.768163681030273
    7. '```' → logprob: -17.518163681030273
    8. '2' → logprob: -18.518163681030273
    9. '000' → logprob: -19.143163681030273
    10. ')
' → logprob: -19.768163681030273

Token 1438: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.014377268962562084
    2. ')' → logprob: -4.264377117156982
    3. '       ' → logprob: -8.63937759399414
    4. ')
' → logprob: -10.26437759399414
    5. ' )
' → logprob: -13.51437759399414
    6. ')

' → logprob: -15.01437759399414
    7. ')`
' → logprob: -16.26437759399414
    8. ')#' → logprob: -16.38937759399414
    9. '))
' → logprob: -16.51437759399414
    10. ')return' → logprob: -17.01437759399414

Token 1439: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.011748253367841244
    2. 'return' → logprob: -4.636748313903809
    3. 'import' → logprob: -6.886748313903809
    4. ' return' → logprob: -7.261748313903809
    5. ')' → logprob: -8.636748313903809
    6. '   ' → logprob: -10.261748313903809
    7. '```' → logprob: -11.011748313903809
    8. ',' → logprob: -11.636748313903809
    9. ')return' → logprob: -12.136748313903809
    10. '
' → logprob: -12.386748313903809

Token 1440: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.01607179269194603
    2. '       ' → logprob: -4.766071796417236
    3. ' return' → logprob: -5.891071796417236
    4. 'import' → logprob: -6.016071796417236
    5. 'angle' → logprob: -6.141071796417236
    6. 'theta' → logprob: -10.141071319580078
    7. '	return' → logprob: -11.266071319580078
    8. ' angle' → logprob: -11.266071319580078
    9. '```' → logprob: -12.391071319580078
    10. '   ' → logprob: -13.516071319580078

Token 1441: ' math' (ID: 13324)
  Prédit: 'math'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'math' → logprob: -0.008615635335445404
    2. ' math' → logprob: -4.758615493774414
    3. '   ' → logprob: -14.383615493774414
    4. '(math' → logprob: -14.883615493774414
    5. '180' → logprob: -16.133615493774414
    6. '       ' → logprob: -17.133615493774414
    7. ' ' → logprob: -19.258615493774414
    8. 'Math' → logprob: -19.383615493774414
    9. '.math' → logprob: -20.508615493774414
    10. '     ' → logprob: -20.633615493774414

Token 1442: '.de' (ID: 3906)
  Prédit: '.ac'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.ac' → logprob: -0.015319567173719406
    2. '.' → logprob: -4.390319347381592
    3. '.atan' → logprob: -6.140319347381592
    4. '.pi' → logprob: -7.390319347381592
    5. '.cos' → logprob: -10.89031982421875
    6. '.de' → logprob: -12.01531982421875
    7. ' .' → logprob: -12.39031982421875
    8. '.as' → logprob: -13.39031982421875
    9. '.ceil' → logprob: -13.51531982421875
    10. '​.' → logprob: -14.64031982421875

Token 1443: 'grees' (ID: 86997)
  Prédit: 'grees'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'grees' → logprob: -0.00900652538985014
    2. 'f' → logprob: -5.634006500244141
    3. 'g' → logprob: -5.759006500244141
    4. 'gree' → logprob: -6.134006500244141
    5. 'gress' → logprob: -9.75900650024414
    6. 'gre' → logprob: -13.13400650024414
    7. 'gs' → logprob: -13.25900650024414
    8. '```' → logprob: -13.75900650024414
    9. '6' → logprob: -14.13400650024414
    10. 'gres' → logprob: -14.13400650024414

Token 1444: '(math' (ID: 86464)
  Prédit: '(math'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(math' → logprob: -0.006204646546393633
    2. '(' → logprob: -5.131204605102539
    3. '(angle' → logprob: -9.006204605102539
    4. '(abs' → logprob: -9.506204605102539
    5. '(vector' → logprob: -10.881204605102539
    6. '((' → logprob: -11.381204605102539
    7. '(
' → logprob: -11.631204605102539
    8. 'math' → logprob: -11.756204605102539
    9. '(Math' → logprob: -11.881204605102539
    10. '(c' → logprob: -12.506204605102539

Token 1445: '.ac' (ID: 25905)
  Prédit: '.ac'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.ac' → logprob: -9.729906196298543e-06
    2. '.' → logprob: -11.750009536743164
    3. ').' → logprob: -14.500009536743164
    4. ' .' → logprob: -15.125009536743164
    5. '.atan' → logprob: -15.375009536743164
    6. ' acos' → logprob: -15.750009536743164
    7. '```' → logprob: -16.125009536743164
    8. '_ac' → logprob: -16.250009536743164
    9. '].' → logprob: -16.375009536743164
    10. '#ac' → logprob: -16.875009536743164

Token 1446: 'os' (ID: 365)
  Prédit: 'os'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'os' → logprob: -9.729906196298543e-06
    2. 'cos' → logprob: -11.875009536743164
    3. '#' → logprob: -14.125009536743164
    4. '(os' → logprob: -14.375009536743164
    5. 's' → logprob: -15.125009536743164
    6. 'ос' → logprob: -15.500009536743164
    7. '
' → logprob: -15.500009536743164
    8. 'o' → logprob: -15.750009536743164
    9. '       ' → logprob: -15.750009536743164
    10. '{
' → logprob: -16.000009536743164

Token 1447: '(c' (ID: 2410)
  Prédit: '(c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(c' → logprob: -0.020366927608847618
    2. '(' → logprob: -4.02036714553833
    3. ')' → logprob: -6.52036714553833
    4. 'c' → logprob: -7.64536714553833
    5. '(
' → logprob: -8.770366668701172
    6. ')c' → logprob: -9.270366668701172
    7. ' (' → logprob: -12.145366668701172
    8. '((' → logprob: -12.645366668701172
    9. '))' → logprob: -13.395366668701172
    10. '(

' → logprob: -14.145366668701172

Token 1448: '))

' (ID: 9746)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '))' → logprob: -0.0004374638374429196
    2. ')' → logprob: -7.750437259674072
    3. ' ))' → logprob: -12.87543773651123
    4. ')))' → logprob: -13.12543773651123
    5. '))
' → logprob: -13.62543773651123
    6. '   ' → logprob: -14.87543773651123
    7. '       ' → logprob: -15.12543773651123
    8. '(' → logprob: -15.25043773651123
    9. '()))' → logprob: -16.875436782836914
    10. ' ' → logprob: -17.000436782836914

Token 1449: '   ' (ID: 271)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0073918793350458145
    2. '
' → logprob: -5.382391929626465
    3. '```' → logprob: -6.007391929626465
    4. '#' → logprob: -8.257391929626465
    5. ' def' → logprob: -11.632391929626465
    6. '``' → logprob: -11.882391929626465
    7. 'import' → logprob: -12.132391929626465
    8. '\' → logprob: -12.257391929626465
    9. '    
' → logprob: -12.382391929626465
    10. ')' → logprob: -12.757391929626465

Token 1450: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.007147129625082016
    2. '   ' → logprob: -5.257147312164307
    3. '
' → logprob: -6.882147312164307
    4. '```' → logprob: -7.257147312164307
    5. ')' → logprob: -9.507146835327148
    6. ' def' → logprob: -10.007146835327148
    7. '#' → logprob: -10.382146835327148
    8. '    
' → logprob: -10.882146835327148
    9. '``' → logprob: -13.132146835327148
    10. ')
' → logprob: -13.382146835327148

Token 1451: ' vector' (ID: 9727)
  Prédit: 'vector'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'vector' → logprob: -1.234545111656189
    2. 'def' → logprob: -1.609545111656189
    3. 'face' → logprob: -1.734545111656189
    4. ' vector' → logprob: -2.3595452308654785
    5. 'dot' → logprob: -2.9845452308654785
    6. 'normalize' → logprob: -3.2345452308654785
    7. ' def' → logprob: -3.7345452308654785
    8. 'get' → logprob: -3.9845452308654785
    9. ' dot' → logprob: -4.4845452308654785
    10. 'edge' → logprob: -4.4845452308654785

Token 1452: '_rotate' (ID: 151095)
  Prédit: '_add'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_add' → logprob: -0.2127259373664856
    2. '_sub' → logprob: -1.7127258777618408
    3. '_length' → logprob: -5.33772611618042
    4. '_cross' → logprob: -6.08772611618042
    5. '_dot' → logprob: -6.46272611618042
    6. '_mul' → logprob: -6.71272611618042
    7. '_norm' → logprob: -7.46272611618042
    8. '_normal' → logprob: -8.462725639343262
    9. '_m' → logprob: -8.587725639343262
    10. '_mult' → logprob: -8.962725639343262

Token 1453: '_' (ID: 62)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.02168154902756214
    2. '(self' → logprob: -4.646681785583496
    3. '_' → logprob: -5.646681785583496
    4. '((' → logprob: -6.021681785583496
    5. '(vector' → logprob: -6.021681785583496
    6. ' (' → logprob: -7.146681785583496
    7. '(v' → logprob: -7.646681785583496
    8. '(
' → logprob: -7.771681785583496
    9. '_vector' → logprob: -7.771681785583496
    10. '(tuple' → logprob: -8.146681785583496

Token 1454: 'around' (ID: 42235)
  Prédit: 'deg'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'deg' → logprob: -0.13585124909877777
    2. 'z' → logprob: -2.6358511447906494
    3. '_deg' → logprob: -4.2608513832092285
    4. 'vector' → logprob: -4.3858513832092285
    5. 'tuple' → logprob: -5.3858513832092285
    6. '3' → logprob: -5.5108513832092285
    7. '(' → logprob: -5.8858513832092285
    8. 'degree' → logprob: -6.1358513832092285
    9. 'def' → logprob: -6.5108513832092285
    10. 'float' → logprob: -6.6358513832092285

Token 1455: '_axis' (ID: 50852)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.9451718926429749
    2. '(v' → logprob: -0.9451718926429749
    3. 'v' → logprob: -2.57017183303833
    4. '(self' → logprob: -3.19517183303833
    5. '<|end|>' → logprob: -3.82017183303833
    6. '_axis' → logprob: -4.07017183303833
    7. '(vector' → logprob: -4.19517183303833
    8. '(u' → logprob: -4.44517183303833
    9. '(axis' → logprob: -4.44517183303833
    10. '_vector' → logprob: -4.82017183303833

Token 1456: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.008852927945554256
    2. '(' → logprob: -4.758852958679199
    3. '(v' → logprob: -9.5088529586792
    4. ' (' → logprob: -9.6338529586792
    5. '(
' → logprob: -10.1338529586792
    6. '(vector' → logprob: -10.5088529586792
    7. '((' → logprob: -10.7588529586792
    8. '<|end|>' → logprob: -12.7588529586792
    9. '(Vector' → logprob: -13.3838529586792
    10. 'self' → logprob: -14.1338529586792

Token 1457: ',' (ID: 11)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.02086826227605343
    2. '(' → logprob: -4.020868301391602
    3. '(v' → logprob: -6.770868301391602
    4. '(vector' → logprob: -7.020868301391602
    5. '(axis' → logprob: -8.145868301391602
    6. '(
' → logprob: -8.770868301391602
    7. ' (' → logprob: -9.895868301391602
    8. ':' → logprob: -10.520868301391602
    9. '   ' → logprob: -10.770868301391602
    10. '(Vector' → logprob: -11.020868301391602

Token 1458: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.23723845183849335
    2. 'self' → logprob: -1.8622384071350098
    3. 'axis' → logprob: -3.1122384071350098
    4. 'vector' → logprob: -4.98723840713501
    5. ' v' → logprob: -6.98723840713501
    6. '   ' → logprob: -6.98723840713501
    7. 'vec' → logprob: -7.11223840713501
    8. 'point' → logprob: -7.36223840713501
    9. ' axis' → logprob: -7.61223840713501
    10. ' self' → logprob: -7.86223840713501

Token 1459: ':' (ID: 25)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.12482021749019623
    2. '(v' → logprob: -2.4998202323913574
    3. ' (' → logprob: -3.6248202323913574
    4. '_' → logprob: -5.374820232391357
    5. '(self' → logprob: -6.874820232391357
    6. '(axis' → logprob: -7.374820232391357
    7. '(vector' → logprob: -7.499820232391357
    8. '(
' → logprob: -7.624820232391357
    9. ',' → logprob: -7.874820232391357
    10. '   ' → logprob: -8.2498197555542

Token 1460: ' Tuple' (ID: 50841)
  Prédit: 'Tuple'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Tuple' → logprob: -0.10262195765972137
    2. ' Tuple' → logprob: -2.7276220321655273
    3. 'v' → logprob: -3.7276220321655273
    4. 'self' → logprob: -6.352622032165527
    5. ',' → logprob: -6.477622032165527
    6. 'vector' → logprob: -6.852622032165527
    7. 'Vector' → logprob: -6.977622032165527
    8. 'tuple' → logprob: -7.227622032165527
    9. ' v' → logprob: -7.852622032165527
    10. ')' → logprob: -8.227622032165527

Token 1461: '[' (ID: 58)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.45846500992774963
    2. ',' → logprob: -1.2084649801254272
    3. ':' → logprob: -3.333465099334717
    4. '[' → logprob: -4.208465099334717
    5. '   ' → logprob: -4.833465099334717
    6. '(float' → logprob: -5.833465099334717
    7. '_' → logprob: -6.583465099334717
    8. ' (' → logprob: -6.833465099334717
    9. ',float' → logprob: -6.958465099334717
    10. '<float' → logprob: -7.333465099334717

Token 1462: 'float' (ID: 7829)
  Prédit: 'float'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'float' → logprob: -2.3557529857498594e-05
    2. '(float' → logprob: -10.87502384185791
    3. ',float' → logprob: -13.12502384185791
    4. ' float' → logprob: -13.50002384185791
    5. '<float' → logprob: -14.50002384185791
    6. '[' → logprob: -15.37502384185791
    7. '   ' → logprob: -15.62502384185791
    8. '=float' → logprob: -16.125022888183594
    9. '	float' → logprob: -16.375022888183594
    10. '.float' → logprob: -18.250022888183594

Token 1463: ',float' (ID: 119642)
  Prédit: ',float'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',float' → logprob: -0.04109426960349083
    2. ',' → logprob: -3.2910943031311035
    3. 'float' → logprob: -6.1660943031311035
    4. '<float' → logprob: -7.9160943031311035
    5. '[' → logprob: -8.291093826293945
    6. '(float' → logprob: -8.416093826293945
    7. '3' → logprob: -10.416093826293945
    8. '=float' → logprob: -11.041093826293945
    9. '0' → logprob: -11.416093826293945
    10. ',
' → logprob: -11.916093826293945

Token 1464: ',float' (ID: 119642)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.22791120409965515
    2. ',float' → logprob: -1.6029112339019775
    3. ',v' → logprob: -6.727910995483398
    4. ',int' → logprob: -7.352910995483398
    5. ',input' → logprob: -9.352910995483398
    6. '','' → logprob: -9.852910995483398
    7. ',const' → logprob: -10.102910995483398
    8. ',x' → logprob: -10.227910995483398
    9. ',char' → logprob: -10.352910995483398
    10. ',value' → logprob: -10.477910995483398

Token 1465: '],' (ID: 2155)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -1.1517960956552997e-05
    2. ' ,' → logprob: -11.625011444091797
    3. ',
' → logprob: -13.875011444091797
    4. '   ' → logprob: -14.125011444091797
    5. ',v' → logprob: -14.875011444091797
    6. '),' → logprob: -15.625011444091797
    7. 'v' → logprob: -16.000011444091797
    8. '_,' → logprob: -16.500011444091797
    9. '‌,' → logprob: -17.125011444091797
    10. ')' → logprob: -17.125011444091797

Token 1466: ' axis' (ID: 16300)
  Prédit: 'axis'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'axis' → logprob: -0.14305585622787476
    2. ' axis' → logprob: -2.0180559158325195
    3. 'angle' → logprob: -9.01805591583252
    4. '   ' → logprob: -9.51805591583252
    5. 'a' → logprob: -9.64305591583252
    6. '(axis' → logprob: -10.14305591583252
    7. 'k' → logprob: -10.39305591583252
    8. '_axis' → logprob: -11.51805591583252
    9. 'point' → logprob: -11.64305591583252
    10. '-axis' → logprob: -11.76805591583252

Token 1467: ':' (ID: 25)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.14293630421161652
    2. ':' → logprob: -2.0179362297058105
    3. '=' → logprob: -8.767936706542969
    4. '   ' → logprob: -10.267936706542969
    5. ' ,' → logprob: -10.767936706542969
    6. ' :' → logprob: -10.767936706542969
    7. ')' → logprob: -11.392936706542969
    8. '       ' → logprob: -12.642936706542969
    9. ',
' → logprob: -13.142936706542969
    10. 'v' → logprob: -13.267936706542969

Token 1468: ' Tuple' (ID: 50841)
  Prédit: 'Tuple'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Tuple' → logprob: -7.624555291840807e-05
    2. ' Tuple' → logprob: -9.500076293945312
    3. 'tuple' → logprob: -13.875076293945312
    4. '   ' → logprob: -15.250076293945312
    5. 'Tu' → logprob: -16.250076293945312
    6. '_tuple' → logprob: -17.750076293945312
    7. ' ' → logprob: -18.375076293945312
    8. '.Tuple' → logprob: -18.750076293945312
    9. '    ' → logprob: -19.125076293945312
    10. '  ' → logprob: -19.250076293945312

Token 1469: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0023481729440391064
    2. '<float' → logprob: -6.502347946166992
    3. ',float' → logprob: -7.752347946166992
    4. ',' → logprob: -8.127347946166992
    5. '(float' → logprob: -10.002347946166992
    6. '_float' → logprob: -10.752347946166992
    7. 'float' → logprob: -11.252347946166992
    8. '[int' → logprob: -11.877347946166992
    9. '(' → logprob: -12.002347946166992
    10. 'of' → logprob: -12.252347946166992

Token 1470: 'float' (ID: 7829)
  Prédit: 'float'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'float' → logprob: -7.266944157890975e-05
    2. ',float' → logprob: -10.250072479248047
    3. '(float' → logprob: -10.875072479248047
    4. '<float' → logprob: -11.625072479248047
    5. ' float' → logprob: -12.500072479248047
    6. '=float' → logprob: -12.875072479248047
    7. '[' → logprob: -13.000072479248047
    8. '.float' → logprob: -14.625072479248047
    9. '	float' → logprob: -15.125072479248047
    10. 'f' → logprob: -16.500072479248047

Token 1471: ',float' (ID: 119642)
  Prédit: ',float'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',float' → logprob: -0.009376125410199165
    2. 'float' → logprob: -6.009376049041748
    3. '<float' → logprob: -6.134376049041748
    4. '[' → logprob: -6.134376049041748
    5. ',' → logprob: -6.384376049041748
    6. '(float' → logprob: -7.134376049041748
    7. '=float' → logprob: -10.384376525878906
    8. '.float' → logprob: -12.384376525878906
    9. ':' → logprob: -12.384376525878906
    10. '_float' → logprob: -12.509376525878906

Token 1472: ',float' (ID: 119642)
  Prédit: ',float'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',float' → logprob: -0.00012678056373260915
    2. ',' → logprob: -9.125126838684082
    3. '[' → logprob: -12.125126838684082
    4. ',int' → logprob: -13.000126838684082
    5. '
' → logprob: -13.500126838684082
    6. 'float' → logprob: -13.750126838684082
    7. '(float' → logprob: -13.875126838684082
    8. ',
' → logprob: -14.125126838684082
    9. '<float' → logprob: -14.375126838684082
    10. ',f' → logprob: -14.375126838684082

Token 1473: '],' (ID: 2155)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -1.700132997939363e-05
    2. ' ,' → logprob: -11.250017166137695
    3. ',
' → logprob: -13.250017166137695
    4. '   ' → logprob: -13.750017166137695
    5. '',' → logprob: -14.875017166137695
    6. '),' → logprob: -15.625017166137695
    7. '_,' → logprob: -15.625017166137695
    8. '‌,' → logprob: -15.625017166137695
    9. '`,' → logprob: -16.375017166137695
    10. ')' → logprob: -17.375017166137695

Token 1474: ' angle' (ID: 16538)
  Prédit: 'angle'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'angle' → logprob: -0.039780888706445694
    2. ' angle' → logprob: -3.289780855178833
    3. 'theta' → logprob: -6.539781093597412
    4. 'math' → logprob: -8.289780616760254
    5. '   ' → logprob: -10.664780616760254
    6. ' theta' → logprob: -11.789780616760254
    7. ' math' → logprob: -12.539780616760254
    8. '    ' → logprob: -12.914780616760254
    9. '-angle' → logprob: -14.039780616760254
    10. '       ' → logprob: -14.289780616760254

Token 1475: '_deg' (ID: 144310)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.20548640191555023
    2. '):' → logprob: -2.080486297607422
    3. '_de' → logprob: -3.580486297607422
    4. '_rad' → logprob: -4.080486297607422
    5. '   ' → logprob: -4.705486297607422
    6. ')' → logprob: -6.455486297607422
    7. '=' → logprob: -6.830486297607422
    8. '_deg' → logprob: -7.080486297607422
    9. '_:' → logprob: -7.330486297607422
    10. ',' → logprob: -7.455486297607422

Token 1476: ':' (ID: 25)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.023002732545137405
    2. ':' → logprob: -4.148002624511719
    3. '):' → logprob: -5.023002624511719
    4. '):
' → logprob: -8.148002624511719
    5. ' )' → logprob: -9.898002624511719
    6. '   ' → logprob: -11.148002624511719
    7. ' ):' → logprob: -13.648002624511719
    8. ',' → logprob: -13.898002624511719
    9. '):

' → logprob: -14.273002624511719
    10. ' ' → logprob: -14.398002624511719

Token 1477: ' float' (ID: 4428)
  Prédit: 'float'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'float' → logprob: -0.4742031693458557
    2. ' float' → logprob: -0.9742031693458557
    3. ')' → logprob: -9.349203109741211
    4. ',float' → logprob: -10.974203109741211
    5. 'angle' → logprob: -12.099203109741211
    6. '(float' → logprob: -12.599203109741211
    7. '=float' → logprob: -12.724203109741211
    8. '	float' → logprob: -12.849203109741211
    9. ' ' → logprob: -13.349203109741211
    10. ' )' → logprob: -13.849203109741211

Token 1478: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00016444525681436062
    2. '):' → logprob: -8.750164031982422
    3. '):
' → logprob: -12.500164031982422
    4. '   ' → logprob: -14.000164031982422
    5. ' )' → logprob: -14.000164031982422
    6. ')->' → logprob: -14.750164031982422
    7. '`)' → logprob: -16.250164031982422
    8. ':' → logprob: -17.500164031982422
    9. '):
' → logprob: -17.625164031982422
    10. ',' → logprob: -18.000164031982422

Token 1479: ' ->' (ID: 2747)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0015433111693710089
    2. '   ' → logprob: -7.6265435218811035
    3. '):' → logprob: -7.8765435218811035
    4. ')' → logprob: -8.626543045043945
    5. ':
' → logprob: -8.751543045043945
    6. ' ->' → logprob: -9.126543045043945
    7. ' :' → logprob: -9.251543045043945
    8. ',' → logprob: -10.251543045043945
    9. '->' → logprob: -10.376543045043945
    10. ':return' → logprob: -11.251543045043945

Token 1480: ' Tuple' (ID: 50841)
  Prédit: ' Tuple'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Tuple' → logprob: -0.47407999634742737
    2. 'Tuple' → logprob: -0.974079966545105
    3. ' tuple' → logprob: -13.099080085754395
    4. 'tuple' → logprob: -14.724080085754395
    5. '_tuple' → logprob: -15.849080085754395
    6. '.Tuple' → logprob: -15.849080085754395
    7. '<Tuple' → logprob: -16.349079132080078
    8. ' ' → logprob: -16.349079132080078
    9. ' ' → logprob: -16.724079132080078
    10. 'Tu' → logprob: -16.849079132080078

Token 1481: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -3.4121114822482923e-06
    2. '[
' → logprob: -13.125003814697266
    3. '(float' → logprob: -14.375003814697266
    4. '(' → logprob: -15.375003814697266
    5. '   ' → logprob: -15.375003814697266
    6. '```' → logprob: -15.875003814697266
    7. '<float' → logprob: -16.375003814697266
    8. 'float' → logprob: -16.750003814697266
    9. '(
' → logprob: -17.125003814697266
    10. '[int' → logprob: -17.875003814697266

Token 1482: 'float' (ID: 7829)
  Prédit: 'float'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'float' → logprob: -3.4121114822482923e-06
    2. ' float' → logprob: -13.125003814697266
    3. '(float' → logprob: -14.000003814697266
    4. '<float' → logprob: -15.375003814697266
    5. ',float' → logprob: -15.375003814697266
    6. '	float' → logprob: -17.250003814697266
    7. '=float' → logprob: -17.750003814697266
    8. '.float' → logprob: -18.000003814697266
    9. 'flo' → logprob: -18.500003814697266
    10. 'Tuple' → logprob: -19.375003814697266

Token 1483: ',float' (ID: 119642)
  Prédit: ',float'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',float' → logprob: -0.028764711692929268
    2. ',' → logprob: -4.028764724731445
    3. '[' → logprob: -4.653764724731445
    4. 'float' → logprob: -7.403764724731445
    5. '<float' → logprob: -8.528764724731445
    6. ',
' → logprob: -9.028764724731445
    7. '(float' → logprob: -9.403764724731445
    8. '=float' → logprob: -12.278764724731445
    9. ' ,' → logprob: -12.403764724731445
    10. '.float' → logprob: -12.528764724731445

Token 1484: ',float' (ID: 119642)
  Prédit: ',float'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',float' → logprob: -0.00020711649267468601
    2. ',' → logprob: -8.50020694732666
    3. ',
' → logprob: -13.12520694732666
    4. 'float' → logprob: -14.62520694732666
    5. ',const' → logprob: -15.75020694732666
    6. '```' → logprob: -15.75020694732666
    7. ',bool' → logprob: -16.000207901000977
    8. '<float' → logprob: -16.125207901000977
    9. ',int' → logprob: -16.250207901000977
    10. ',input' → logprob: -16.500207901000977

Token 1485: ']:
' (ID: 22152)
  Prédit: '):
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.4457915127277374
    2. '):' → logprob: -1.070791482925415
    3. '   ' → logprob: -4.320791721343994
    4. ')' → logprob: -7.320791721343994
    5. ':' → logprob: -7.445791721343994
    6. '):
' → logprob: -7.695791721343994
    7. ']:
' → logprob: -7.820791721343994
    8. '<|end|>' → logprob: -8.070791244506836
    9. '>' → logprob: -8.320791244506836
    10. ',' → logprob: -8.445791244506836

Token 1486: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.12217450886964798
    2. ' (' → logprob: -3.3721745014190674
    3. '(' → logprob: -3.4971745014190674
    4. '       ' → logprob: -4.1221747398376465
    5. 'v' → logprob: -5.2471747398376465
    6. ':' → logprob: -5.2471747398376465
    7. ':
' → logprob: -5.4971747398376465
    8. '(v' → logprob: -5.6221747398376465
    9. '    ' → logprob: -5.8721747398376465
    10. ' v' → logprob: -6.4971747398376465

Token 1487: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6274606585502625
    2. '   ' → logprob: -1.1274607181549072
    3. 'import' → logprob: -2.2524607181549072
    4. ' import' → logprob: -3.8774607181549072
    5. '#' (adapté à ' #') → logprob: -5.377460479736328
    6. '    ' → logprob: -5.502460479736328
    7. ' #' → logprob: -6.002460479736328
    8. ' (' → logprob: -6.627460479736328
    9. ' vector' → logprob: -6.877460479736328
    10. '(' → logprob: -7.502460479736328

Token 1488: ' Rodrigues' (ID: 148866)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.028182266280055046
    2. '#' → logprob: -4.528182029724121
    3. '   ' → logprob: -5.278182029724121
    4. '       ' → logprob: -5.778182029724121
    5. 'def' → logprob: -5.778182029724121
    6. 'theta' → logprob: -6.403182029724121
    7. 'angle' → logprob: -6.528182029724121
    8. 'axis' → logprob: -7.153182029724121
    9. 'from' → logprob: -7.653182029724121
    10. 'k' → logprob: -7.653182029724121

Token 1489: ''' (ID: 6)
  Prédit: '''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.1914300173521042
    2. '_formula' → logprob: -2.44143009185791
    3. 'Formula' → logprob: -3.56643009185791
    4. 'formula' → logprob: -3.69143009185791
    5. '_rotation' → logprob: -4.06643009185791
    6. '`' → logprob: -5.94143009185791
    7. ' formula' → logprob: -6.06643009185791
    8. 'Rotation' → logprob: -6.19143009185791
    9. 'rotation' → logprob: -6.19143009185791
    10. '(' → logprob: -6.69143009185791

Token 1490: ' rotation' (ID: 23769)
  Prédit: 'rotation'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rotation' → logprob: -0.04057139530777931
    2. ' rotation' → logprob: -3.540571451187134
    3. 'formula' → logprob: -4.790571212768555
    4. ''' → logprob: -6.915571212768555
    5. '_rotation' → logprob: -6.915571212768555
    6. 'Rotation' → logprob: -8.540571212768555
    7. ' formula' → logprob: -8.790571212768555
    8. 'rotate' → logprob: -10.040571212768555
    9. 'vector' → logprob: -10.540571212768555
    10. '_formula' → logprob: -11.290571212768555

Token 1491: ' formula' (ID: 20690)
  Prédit: ' formula'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' formula' → logprob: -0.10811558365821838
    2. 'formula' → logprob: -2.8581156730651855
    3. '_formula' → logprob: -3.2331156730651855
    4. '(v' → logprob: -5.3581156730651855
    5. 'Formula' → logprob: -6.9831156730651855
    6. '(
' → logprob: -11.733115196228027
    7. '
' → logprob: -12.358115196228027
    8. 'v' → logprob: -12.483115196228027
    9. ' Formula' → logprob: -12.858115196228027
    10. '`' → logprob: -13.483115196228027

Token 1492: ' to' (ID: 316)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3489094376564026
    2. '(
' → logprob: -2.098909378051758
    3. 'def' → logprob: -2.723909378051758
    4. '   ' → logprob: -3.098909378051758
    5. ':' → logprob: -4.223909378051758
    6. '(' → logprob: -4.598909378051758
    7. '```' → logprob: -4.598909378051758
    8. ' (' → logprob: -4.723909378051758
    9. ' def' → logprob: -4.973909378051758
    10. ':
' → logprob: -5.723909378051758

Token 1493: ' rotate' (ID: 31987)
  Prédit: 'rotate'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rotate' → logprob: -0.0025329755153506994
    2. ' rotate' → logprob: -6.002532958984375
    3. 'def' → logprob: -10.502532958984375
    4. 'vector' → logprob: -11.002532958984375
    5. '```' → logprob: -12.627532958984375
    6. 'import' → logprob: -13.002532958984375
    7. '.rotate' → logprob: -13.127532958984375
    8. '_rotate' → logprob: -13.377532958984375
    9. 'perform' → logprob: -13.627532958984375
    10. 'apply' → logprob: -13.877532958984375

Token 1494: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.0036823786795139313
    2. 'vector' → logprob: -6.253682613372803
    3. ' v' → logprob: -6.378682613372803
    4. ' vector' → logprob: -9.878682136535645
    5. '       ' → logprob: -13.753682136535645
    6. '(v' → logprob: -13.878682136535645
    7. '   ' → logprob: -14.003682136535645
    8. 'a' → logprob: -15.128682136535645
    9. ' a' → logprob: -15.878682136535645
    10. 'vec' → logprob: -16.12868309020996

Token 1495: ' in' (ID: 306)
  Prédit: '(v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(v' → logprob: -0.5750036835670471
    2. 'around' → logprob: -1.0750036239624023
    3. '(
' → logprob: -3.3250036239624023
    4. ' around' → logprob: -3.3250036239624023
    5. '(' → logprob: -3.8250036239624023
    6. ' (' → logprob: -7.325003623962402
    7. 'v' → logprob: -7.325003623962402
    8. '(vector' → logprob: -8.450003623962402
    9. 'Around' → logprob: -8.700003623962402
    10. 'about' → logprob: -9.450003623962402

Token 1496: ' ' (ID: 220)
  Prédit: '3'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.035875216126441956
    2. 'space' → logprob: -3.4108753204345703
    3. ' three' → logprob: -6.78587532043457
    4. 'three' → logprob: -7.78587532043457
    5. ' ' → logprob: -8.66087532043457
    6. ' space' → logprob: -8.66087532043457
    7. 'direction' → logprob: -9.28587532043457
    8. 'vector' → logprob: -9.66087532043457
    9. '(space' → logprob: -9.78587532043457
    10. 'float' → logprob: -10.41087532043457

Token 1497: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.0014424959663301706
    2. 'space' → logprob: -6.6264424324035645
    3. 'three' → logprob: -9.876442909240723
    4. 'R' → logprob: -9.876442909240723
    5. ' three' → logprob: -12.376442909240723
    6. 'direction' → logprob: -12.501442909240723
    7. 'axis' → logprob: -13.376442909240723
    8. ' ' → logprob: -13.501442909240723
    9. 'vector' → logprob: -14.126442909240723
    10. 'float' → logprob: -14.751442909240723

Token 1498: 'D' (ID: 35)
  Prédit: 'D'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'D' → logprob: -0.4698460102081299
    2. 'd' → logprob: -1.0948460102081299
    3. '-space' → logprob: -3.34484601020813
    4. 'space' → logprob: -5.594845771789551
    5. '-d' → logprob: -8.21984577178955
    6. 'tuple' → logprob: -8.21984577178955
    7. '_space' → logprob: -8.46984577178955
    8. '```' → logprob: -9.21984577178955
    9. '_d' → logprob: -9.34484577178955
    10. '-dimensional' → logprob: -9.71984577178955

Token 1499: ' around' (ID: 2846)
  Prédit: '(
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(
' → logprob: -0.23611566424369812
    2. '(self' → logprob: -2.9861156940460205
    3. ' (' → logprob: -3.1111156940460205
    4. '(' → logprob: -3.6111156940460205
    5. '(v' → logprob: -3.6111156940460205
    6. 'v' → logprob: -4.111115455627441
    7. ':' → logprob: -4.236115455627441
    8. '   ' → logprob: -4.236115455627441
    9. '       ' → logprob: -5.486115455627441
    10. ':
' → logprob: -5.486115455627441

Token 1500: ' unit' (ID: 7670)
  Prédit: 'axis'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'axis' → logprob: -0.001930420519784093
    2. ' axis' → logprob: -6.251930236816406
    3. '(axis' → logprob: -13.876930236816406
    4. '   ' → logprob: -14.751930236816406
    5. '
' → logprob: -15.876930236816406
    6. '`' → logprob: -16.126930236816406
    7. '_axis' → logprob: -16.376930236816406
    8. 'vector' → logprob: -16.751930236816406
    9. '```' → logprob: -16.751930236816406
    10. 'the' → logprob: -17.001930236816406

Token 1501: ' vector' (ID: 9727)
  Prédit: 'axis'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'axis' → logprob: -0.02008187770843506
    2. ' axis' → logprob: -4.270081996917725
    3. 'vector' → logprob: -5.520081996917725
    4. '(axis' → logprob: -6.645081996917725
    5. '(
' → logprob: -8.520081520080566
    6. ' vector' → logprob: -8.770081520080566
    7. '_axis' → logprob: -9.020081520080566
    8. '(' → logprob: -9.645081520080566
    9. ',' → logprob: -10.520081520080566
    10. ' (' → logprob: -11.645081520080566

Token 1502: ' axis' (ID: 16300)
  Prédit: 'axis'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'axis' → logprob: -0.12882249057292938
    2. '(axis' → logprob: -2.3788225650787354
    3. ' axis' → logprob: -3.6288225650787354
    4. '(' → logprob: -6.628822326660156
    5. ' (' → logprob: -8.503822326660156
    6. '(
' → logprob: -10.003822326660156
    7. '_axis' → logprob: -10.503822326660156
    8. ' ' → logprob: -10.628822326660156
    9. '`' → logprob: -11.378822326660156
    10. '   ' → logprob: -11.753822326660156

Token 1503: ' by' (ID: 656)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.8360836505889893
    2. ' (' → logprob: -1.3360836505889893
    3. '   ' → logprob: -2.2110836505889893
    4. '(v' → logprob: -2.7110836505889893
    5. '(
' → logprob: -2.9610836505889893
    6. '       ' → logprob: -4.08608341217041
    7. ' by' → logprob: -4.21108341217041
    8. ':' → logprob: -4.46108341217041
    9. 'v' → logprob: -4.71108341217041
    10. '(' → logprob: -4.83608341217041

Token 1504: ' angle' (ID: 16538)
  Prédit: 'angle'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'angle' → logprob: -0.6932311058044434
    2. ' angle' → logprob: -0.6932311058044434
    3. '(angle' → logprob: -9.568231582641602
    4. ' an' → logprob: -12.068231582641602
    5. ' ' → logprob: -12.568231582641602
    6. '_angle' → logprob: -13.318231582641602
    7. ' a' → logprob: -13.318231582641602
    8. ' ' → logprob: -14.318231582641602
    9. 'a' → logprob: -15.318231582641602
    10. ' given' → logprob: -15.693231582641602

Token 1505: ' in' (ID: 306)
  Prédit: '_deg'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_deg' → logprob: -0.02732507884502411
    2. ' (' → logprob: -4.52732515335083
    3. '(' → logprob: -5.15232515335083
    4. '_de' → logprob: -5.40232515335083
    5. '(v' → logprob: -6.65232515335083
    6. '_rad' → logprob: -6.77732515335083
    7. '(angle' → logprob: -7.15232515335083
    8. '(
' → logprob: -7.40232515335083
    9. '_v' → logprob: -7.40232515335083
    10. '(de' → logprob: -7.90232515335083

Token 1506: ' degrees' (ID: 18210)
  Prédit: ' degrees'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' degrees' → logprob: -0.8963314294815063
    2. 'degrees' → logprob: -0.8963314294815063
    3. 'float' → logprob: -2.146331310272217
    4. ' float' → logprob: -2.771331310272217
    5. ' radians' → logprob: -6.021331310272217
    6. 'degree' → logprob: -7.146331310272217
    7. 'deg' → logprob: -8.146331787109375
    8. ' math' → logprob: -8.271331787109375
    9. 'r' → logprob: -9.146331787109375
    10. '=float' → logprob: -9.396331787109375

Token 1507: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.9870672821998596
    2. ':' → logprob: -1.2370672225952148
    3. '       ' → logprob: -1.4870672225952148
    4. '(' → logprob: -2.987067222595215
    5. ':
' → logprob: -4.237067222595215
    6. '(
' → logprob: -4.612067222595215
    7. 'def' → logprob: -4.612067222595215
    8. ' (' → logprob: -5.237067222595215
    9. '
' → logprob: -5.487067222595215
    10. '```' → logprob: -5.487067222595215

Token 1508: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.16397076845169067
    2. ':' → logprob: -2.413970708847046
    3. '       ' → logprob: -3.163970708847046
    4. '<|end|>' → logprob: -5.038970947265625
    5. 'def' → logprob: -6.163970947265625
    6. '(' → logprob: -6.413970947265625
    7. 'v' → logprob: -6.663970947265625
    8. ' ' → logprob: -6.913970947265625
    9. ')' → logprob: -7.038970947265625
    10. '    ' → logprob: -7.163970947265625

Token 1509: ' angle' (ID: 16538)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1625916212797165
    2. '   ' → logprob: -2.1625916957855225
    3. 'import' → logprob: -4.287591457366943
    4. ' import' → logprob: -4.912591457366943
    5. ' v' → logprob: -5.912591457366943
    6. ' x' → logprob: -5.912591457366943
    7. '    ' → logprob: -6.162591457366943
    8. ' vector' → logprob: -6.912591457366943
    9. ' ' → logprob: -7.162591457366943
    10. ' axis' → logprob: -7.412591457366943

Token 1510: ' =' (ID: 314)
  Prédit: '_rad'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_rad' → logprob: -0.0019035318400710821
    2. ' =' → logprob: -7.126903533935547
    3. '_r' → logprob: -7.501903533935547
    4. '=' → logprob: -8.001903533935547
    5. '_deg' → logprob: -9.626903533935547
    6. ')' → logprob: -10.001903533935547
    7. '_' → logprob: -10.126903533935547
    8. '   ' → logprob: -11.501903533935547
    9. '=_' → logprob: -11.626903533935547
    10. '_angle' → logprob: -12.126903533935547

Token 1511: ' math' (ID: 13324)
  Prédit: 'math'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'math' → logprob: -0.005246210377663374
    2. ' math' → logprob: -5.255246162414551
    3. 'angle' → logprob: -11.38024616241455
    4. '   ' → logprob: -14.75524616241455
    5. ' angle' → logprob: -15.00524616241455
    6. '(math' → logprob: -15.00524616241455
    7. ' ' → logprob: -19.130247116088867
    8. 'Math' → logprob: -20.005247116088867
    9. '.math' → logprob: -20.130247116088867
    10. '```' → logprob: -20.630247116088867

Token 1512: '.r' (ID: 2951)
  Prédit: '.r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.r' → logprob: -0.002358167665079236
    2. '.' → logprob: -6.7523579597473145
    3. '.pi' → logprob: -6.7523579597473145
    4. '.cos' → logprob: -11.752358436584473
    5. '.rad' → logprob: -12.502358436584473
    6. '.atan' → logprob: -13.252358436584473
    7. ' .' → logprob: -13.377358436584473
    8. '.sqrt' → logprob: -13.877358436584473
    9. '.sin' → logprob: -14.002358436584473
    10. ' radians' → logprob: -14.002358436584473

Token 1513: 'adians' (ID: 45611)
  Prédit: 'adians'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'adians' → logprob: -0.010602293536067009
    2. 'ads' → logprob: -4.7606024742126465
    3. 'ad' → logprob: -7.2606024742126465
    4. 'adi' → logprob: -7.5106024742126465
    5. 'a' → logprob: -7.7606024742126465
    6. '**' → logprob: -8.635601997375488
    7. 'adian' → logprob: -10.635601997375488
    8. '{' → logprob: -10.760601997375488
    9. 'math' → logprob: -11.260601997375488
    10. '#' → logprob: -11.760601997375488

Token 1514: '(angle' (ID: 66047)
  Prédit: '(angle'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(angle' → logprob: -2.15310683415737e-05
    2. 'angle' → logprob: -10.750021934509277
    3. '(' → logprob: -17.12502098083496
    4. '(
' → logprob: -19.50002098083496
    5. '(abs' → logprob: -19.87502098083496
    6. ' (' → logprob: -20.25002098083496
    7. '_angle' → logprob: -20.87502098083496
    8. ' angle' → logprob: -21.37502098083496
    9. '(amount' → logprob: -21.50002098083496
    10. '.angle' → logprob: -21.50002098083496

Token 1515: '_deg' (ID: 144310)
  Prédit: '_deg'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_deg' → logprob: -0.009718094021081924
    2. '_angle' → logprob: -5.25971794128418
    3. ')' → logprob: -5.63471794128418
    4. 'angle' → logprob: -7.88471794128418
    5. '(angle' → logprob: -8.13471794128418
    6. ')
' → logprob: -8.88471794128418
    7. 'deg' → logprob: -10.75971794128418
    8. '_degree' → logprob: -11.13471794128418
    9. '_de' → logprob: -11.25971794128418
    10. '_ang' → logprob: -12.13471794128418

Token 1516: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.1602463573217392
    2. ')' → logprob: -1.9102463722229004
    3. ')
' → logprob: -11.285245895385742
    4. '       ' → logprob: -12.535245895385742
    5. ' )
' → logprob: -13.160245895385742
    6. '   ' → logprob: -13.410245895385742
    7. ')

' → logprob: -13.785245895385742
    8. ')v' → logprob: -14.285245895385742
    9. ')`
' → logprob: -14.785245895385742
    10. ')return' → logprob: -15.285245895385742

Token 1517: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6106375455856323
    2. '   ' → logprob: -1.3606375455856323
    3. ' k' → logprob: -2.360637664794922
    4. ' x' → logprob: -2.735637664794922
    5. 'x' → logprob: -4.485637664794922
    6. 'k' → logprob: -4.735637664794922
    7. 'import' → logprob: -5.235637664794922
    8. ' s' → logprob: -5.360637664794922
    9. ' import' → logprob: -6.110637664794922
    10. '    ' → logprob: -6.735637664794922

Token 1518: ' k' (ID: 372)
  Prédit: 'cos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cos' → logprob: -0.5122551321983337
    2. 'c' → logprob: -1.3872551918029785
    3. 'k' (adapté à ' k') → logprob: -2.2622551918029785
    4. 'kx' → logprob: -3.5122551918029785
    5. 'x' → logprob: -5.0122551918029785
    6. 'cx' → logprob: -6.2622551918029785
    7. ' cos' → logprob: -6.5122551918029785
    8. 'import' → logprob: -6.5122551918029785
    9. ' k' → logprob: -6.5122551918029785
    10. 'ux' → logprob: -6.6372551918029785

Token 1519: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.4655274748802185
    2. '=' → logprob: -1.0905275344848633
    3. 'x' → logprob: -3.3405275344848633
    4. '_x' → logprob: -7.340527534484863
    5. ',' → logprob: -11.090527534484863
    6. '_' → logprob: -11.215527534484863
    7. '=k' → logprob: -11.215527534484863
    8. 'w' → logprob: -11.465527534484863
    9. '=(' → logprob: -11.590527534484863
    10. '1' → logprob: -12.590527534484863

Token 1520: ' normalize' (ID: 44464)
  Prédit: 'normalize'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'normalize' → logprob: -0.28213831782341003
    2. 'axis' → logprob: -1.4071383476257324
    3. ' normalize' → logprob: -7.657138347625732
    4. ' axis' → logprob: -8.407137870788574
    5. 'vector' → logprob: -8.907137870788574
    6. 'scalar' → logprob: -9.657137870788574
    7. '(axis' → logprob: -10.157137870788574
    8. 'unit' → logprob: -11.032137870788574
    9. 'normal' → logprob: -11.032137870788574
    10. 'normalized' → logprob: -11.907137870788574

Token 1521: '(axis' (ID: 74227)
  Prédit: '(axis'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(axis' → logprob: -0.001929228543303907
    2. 'axis' → logprob: -6.25192928314209
    3. ' axis' → logprob: -14.37692928314209
    4. '(' → logprob: -17.501928329467773
    5. 'vector' → logprob: -17.876928329467773
    6. '(vector' → logprob: -18.751928329467773
    7. '_axis' → logprob: -19.126928329467773
    8. '(angle' → logprob: -19.501928329467773
    9. '.axis' → logprob: -19.501928329467773
    10. '(
' → logprob: -19.626928329467773

Token 1522: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.31328585743904114
    2. ')
' → logprob: -1.3132858276367188
    3. ')
' → logprob: -10.813285827636719
    4. ')

' → logprob: -13.313285827636719
    5. ')`
' → logprob: -14.438285827636719
    6. ')v' → logprob: -14.438285827636719
    7. ' )
' → logprob: -15.063285827636719
    8. ' )' → logprob: -15.313285827636719
    9. ')#' → logprob: -15.938285827636719
    10. '   ' → logprob: -16.06328582763672

Token 1523: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.05792631581425667
    2. 'x' → logprob: -4.057926177978516
    3. 'v' → logprob: -4.432926177978516
    4. ' x' → logprob: -4.682926177978516
    5. ' (' → logprob: -5.557926177978516
    6. ' v' → logprob: -5.807926177978516
    7. '   ' → logprob: -6.057926177978516
    8. '(
' → logprob: -6.182926177978516
    9. 'cos' → logprob: -6.182926177978516
    10. '(' → logprob: -6.432926177978516

Token 1524: ' cos' (ID: 8974)
  Prédit: 'cos'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cos' (adapté à ' cos') → logprob: -0.09512363374233246
    2. 'v' → logprob: -2.720123529434204
    3. 'x' → logprob: -4.595123767852783
    4. 'term' → logprob: -4.970123767852783
    5. 'vx' → logprob: -5.345123767852783
    6. '   ' → logprob: -7.595123767852783
    7. 'cost' → logprob: -7.720123767852783
    8. 'kx' → logprob: -8.220123291015625
    9. 'k' → logprob: -8.470123291015625
    10. 'import' → logprob: -8.595123291015625

Token 1525: '_theta' (ID: 100778)
  Prédit: '(angle'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(angle' → logprob: -0.012085512280464172
    2. 'angle' → logprob: -5.012085437774658
    3. '_angle' → logprob: -5.262085437774658
    4. '_theta' → logprob: -9.012085914611816
    5. 'theta' → logprob: -11.012085914611816
    6. '(theta' → logprob: -11.512085914611816
    7. 'θ' → logprob: -11.887085914611816
    8. '_ang' → logprob: -12.262085914611816
    9. '(' → logprob: -12.512085914611816
    10. ' angle' → logprob: -12.887085914611816

Token 1526: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.06565571576356888
    2. ' =' → logprob: -2.8156557083129883
    3. '*' → logprob: -5.690655708312988
    4. ',' → logprob: -8.690655708312988
    5. ' *' → logprob: -9.815655708312988
    6. ')' → logprob: -10.565655708312988
    7. ' ' → logprob: -11.690655708312988
    8. 't' → logprob: -11.940655708312988
    9. '   ' → logprob: -12.190655708312988
    10. 'math' → logprob: -12.315655708312988

Token 1527: ' math' (ID: 13324)
  Prédit: 'math'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'math' → logprob: -0.029750604182481766
    2. ' math' → logprob: -3.5297505855560303
    3. '(math' → logprob: -16.90475082397461
    4. '   ' → logprob: -18.40475082397461
    5. '.math' → logprob: -18.90475082397461
    6. 'cmath' → logprob: -19.40475082397461
    7. '_math' → logprob: -20.15475082397461
    8. ' ' → logprob: -20.40475082397461
    9. 'Math' → logprob: -20.52975082397461
    10. 'cos' → logprob: -21.15475082397461

Token 1528: '.cos' (ID: 44221)
  Prédit: '.cos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.cos' → logprob: -0.00010711929644457996
    2. 'cos' → logprob: -9.250106811523438
    3. '.Cos' → logprob: -11.875106811523438
    4. '_cos' → logprob: -13.375106811523438
    5. '.' → logprob: -13.500106811523438
    6. '*cos' → logprob: -14.375106811523438
    7. ' cos' → logprob: -15.875106811523438
    8. 'Cos' → logprob: -16.000106811523438
    9. '.sin' → logprob: -16.875106811523438
    10. '.ac' → logprob: -17.125106811523438

Token 1529: '(angle' (ID: 66047)
  Prédit: '(angle'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(angle' → logprob: -1.9623810658231378e-05
    2. '(' → logprob: -11.500020027160645
    3. 'angle' → logprob: -11.625020027160645
    4. '(
' → logprob: -15.125020027160645
    5. ' angle' → logprob: -16.250019073486328
    6. '(theta' → logprob: -17.125019073486328
    7. '_angle' → logprob: -17.625019073486328
    8. ')' → logprob: -17.750019073486328
    9. '.angle' → logprob: -18.250019073486328
    10. 'Angle' → logprob: -18.500019073486328

Token 1530: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.1602635383605957
    2. ')' → logprob: -1.9102635383605957
    3. '       ' → logprob: -10.785263061523438
    4. ')
' → logprob: -11.035263061523438
    5. ' )
' → logprob: -13.660263061523438
    6. '   ' → logprob: -14.410263061523438
    7. ')

' → logprob: -14.660263061523438
    8. ')`
' → logprob: -16.285263061523438
    9. ' )' → logprob: -16.535263061523438
    10. '),' → logprob: -16.535263061523438

Token 1531: '       ' (ID: 309)
  Prédit: 'sin'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sin' → logprob: -0.6860793828964233
    2. ' sin' → logprob: -1.3110793828964233
    3. ' v' → logprob: -2.811079502105713
    4. '       ' → logprob: -3.061079502105713
    5. '```' → logprob: -3.186079502105713
    6. ',' → logprob: -4.311079502105713
    7. ' 
' → logprob: -4.811079502105713
    8. 'v' → logprob: -5.061079502105713
    9. ' k' → logprob: -5.186079502105713
    10. '        
' → logprob: -5.186079502105713

Token 1532: ' sin' (ID: 2187)
  Prédit: 'sin'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sin' (adapté à ' sin') → logprob: -0.0015056940028443933
    2. ' sin' → logprob: -6.5015058517456055
    3. '1' → logprob: -13.251505851745605
    4. 's' → logprob: -14.751505851745605
    5. 'cos' → logprob: -14.751505851745605
    6. '```' → logprob: -14.751505851745605
    7. '       ' → logprob: -15.876505851745605
    8. 'u' → logprob: -16.75150489807129
    9. 'one' → logprob: -17.25150489807129
    10. 'k' → logprob: -17.25150489807129

Token 1533: '_theta' (ID: 100778)
  Prédit: '_theta'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_theta' → logprob: -0.001093903905712068
    2. '_' → logprob: -7.126093864440918
    3. '(' → logprob: -9.126093864440918
    4. '_\' → logprob: -9.626093864440918
    5. '(theta' → logprob: -10.126093864440918
    6. '\' → logprob: -11.126093864440918
    7. '_angle' → logprob: -11.376093864440918
    8. ',' → logprob: -11.501093864440918
    9. 'Theta' → logprob: -11.626093864440918
    10. 'theta' → logprob: -12.001093864440918

Token 1534: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6898528933525085
    2. ' =' → logprob: -0.9398528933525085
    3. '*' → logprob: -2.3148529529571533
    4. ' *' → logprob: -5.314852714538574
    5. ',' → logprob: -6.064852714538574
    6. ')' → logprob: -7.189852714538574
    7. '(' → logprob: -8.314852714538574
    8. '_theta' → logprob: -9.314852714538574
    9. '(angle' → logprob: -9.439852714538574
    10. '```' → logprob: -9.689852714538574

Token 1535: ' math' (ID: 13324)
  Prédit: 'math'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'math' → logprob: -0.0024756586644798517
    2. ' math' → logprob: -6.002475738525391
    3. '(math' → logprob: -19.87747573852539
    4. '1' → logprob: -20.25247573852539
    5. '.math' → logprob: -21.25247573852539
    6. 'sin' → logprob: -22.12747573852539
    7. 'Math' → logprob: -23.12747573852539
    8. '/math' → logprob: -23.87747573852539
    9. 'float' → logprob: -24.12747573852539
    10. 'cmath' → logprob: -24.37747573852539

Token 1536: '.sin' (ID: 35734)
  Prédit: '.sin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.sin' → logprob: -0.011157468892633915
    2. '.cos' → logprob: -5.386157512664795
    3. '.theta' → logprob: -5.761157512664795
    4. '.pi' → logprob: -7.011157512664795
    5. '.angle' → logprob: -7.136157512664795
    6. '.' → logprob: -7.511157512664795
    7. 'sin' → logprob: -8.011157035827637
    8. '_angle' → logprob: -8.136157035827637
    9. '*sin' → logprob: -9.011157035827637
    10. '.sqrt' → logprob: -9.386157035827637

Token 1537: '(angle' (ID: 66047)
  Prédit: '(angle'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(angle' → logprob: -0.0001246348983841017
    2. '(theta' → logprob: -9.00012493133545
    3. '(' → logprob: -13.87512493133545
    4. 'theta' → logprob: -15.62512493133545
    5. '(
' → logprob: -16.000123977661133
    6. 'angle' → logprob: -17.375123977661133
    7. ' (' → logprob: -17.500123977661133
    8. '_angle' → logprob: -18.250123977661133
    9. '_theta' → logprob: -18.250123977661133
    10. ' angle' → logprob: -18.375123977661133

Token 1538: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0031918513122946024
    2. ')
' → logprob: -5.753191947937012
    3. ',' → logprob: -12.253191947937012
    4. '   ' → logprob: -13.253191947937012
    5. '       ' → logprob: -13.753191947937012
    6. ')
' → logprob: -13.753191947937012
    7. 'v' → logprob: -13.878191947937012
    8. '),' → logprob: -14.128191947937012
    9. ')

' → logprob: -14.253191947937012
    10. '<|end|>' → logprob: -14.753191947937012

Token 1539: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2080754190683365
    2. '```' → logprob: -2.458075523376465
    3. 'v' → logprob: -2.833075523376465
    4. ' v' → logprob: -3.958075523376465
    5. 'return' → logprob: -5.208075523376465
    6. '``' → logprob: -5.333075523376465
    7. 'x' → logprob: -5.583075523376465
    8. ' return' → logprob: -6.083075523376465
    9. '   ' → logprob: -6.333075523376465
    10. 'def' → logprob: -6.958075523376465

Token 1540: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' (adapté à ' v') → logprob: -0.35737085342407227
    2. 'term' → logprob: -2.2323708534240723
    3. 'x' → logprob: -2.6073708534240723
    4. 'k' → logprob: -2.9823708534240723
    5. 'vector' → logprob: -4.232370853424072
    6. 'return' → logprob: -4.607370853424072
    7. ' v' → logprob: -4.732370853424072
    8. '(' → logprob: -5.357370853424072
    9. 'vx' → logprob: -5.482370853424072
    10. '(v' → logprob: -5.732370853424072

Token 1541: '_rot' (ID: 90451)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '*' → logprob: -0.9920490980148315
    2. '_mul' → logprob: -1.4920490980148315
    3. '_mult' → logprob: -1.6170490980148315
    4. '_' → logprob: -2.867049217224121
    5. '_scaled' → logprob: -3.117049217224121
    6. '_cos' → logprob: -3.492049217224121
    7. '_times' → logprob: -3.617049217224121
    8. ' *' → logprob: -4.992049217224121
    9. 'x' → logprob: -5.242049217224121
    10. '*cos' → logprob: -5.242049217224121

Token 1542: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -1.0211867094039917
    2. 'ated' → logprob: -1.1461867094039917
    3. ' =' → logprob: -1.1461867094039917
    4. 'ected' → logprob: -7.271186828613281
    5. '_' → logprob: -7.396186828613281
    6. 'ator' → logprob: -7.521186828613281
    7. '_rot' → logprob: -7.521186828613281
    8. 'ate' → logprob: -7.896186828613281
    9. '   ' → logprob: -8.021186828613281
    10. 'ector' → logprob: -8.396186828613281

Token 1543: ' vector' (ID: 9727)
  Prédit: '(
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(
' → logprob: -0.023043040186166763
    2. '(' → logprob: -4.773043155670166
    3. 'tuple' → logprob: -4.773043155670166
    4. 'vector' → logprob: -5.273043155670166
    5. 'add' → logprob: -7.898043155670166
    6. ' (
' → logprob: -8.648042678833008
    7. '(vector' → logprob: -9.398042678833008
    8. '(tuple' → logprob: -10.023042678833008
    9. '(
' → logprob: -11.273042678833008
    10. ' tuple' → logprob: -11.398042678833008

Token 1544: '_add' (ID: 8390)
  Prédit: '_add'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_add' → logprob: -0.10040981322526932
    2. '_mul' → logprob: -2.475409746170044
    3. '_mult' → logprob: -4.725409984588623
    4. '_sub' → logprob: -7.100409984588623
    5. 'add' → logprob: -8.350409507751465
    6. '_scale' → logprob: -8.475409507751465
    7. '_cos' → logprob: -8.600409507751465
    8. '_scalar' → logprob: -8.725409507751465
    9. '_cross' → logprob: -8.975409507751465
    10. 'mul' → logprob: -8.975409507751465

Token 1545: '(
' (ID: 1607)
  Prédit: '(s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(s' → logprob: -0.704472541809082
    2. 'scalar' → logprob: -1.454472541809082
    3. '(
' → logprob: -1.829472541809082
    4. 'vector' → logprob: -2.704472541809082
    5. '(vector' → logprob: -3.704472541809082
    6. '(' → logprob: -3.954472541809082
    7. '(v' → logprob: -7.454472541809082
    8. '   ' → logprob: -9.454472541809082
    9. ' scalar' → logprob: -9.579472541809082
    10. 'v' → logprob: -9.954472541809082

Token 1546: '           ' (ID: 352)
  Prédit: 'scalar'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'scalar' → logprob: -0.6354179978370667
    2. 'vector' → logprob: -0.8854179978370667
    3. '           ' → logprob: -3.385417938232422
    4. 'v' → logprob: -4.260417938232422
    5. ' scalar' → logprob: -5.010417938232422
    6. ' vector' → logprob: -6.510417938232422
    7. '   ' → logprob: -7.510417938232422
    8. ' v' → logprob: -8.385417938232422
    9. 's' → logprob: -8.385417938232422
    10. '       ' → logprob: -8.510417938232422

Token 1547: ' scalar' (ID: 35065)
  Prédit: 'scalar'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'scalar' (adapté à ' scalar') → logprob: -0.0012346376897767186
    2. 'vector' → logprob: -6.751234531402588
    3. ' scalar' → logprob: -10.001235008239746
    4. '   ' → logprob: -11.501235008239746
    5. '           ' → logprob: -12.751235008239746
    6. '                   ' → logprob: -13.001235008239746
    7. '               ' → logprob: -13.501235008239746
    8. 'scaled' → logprob: -14.251235008239746
    9. '       ' → logprob: -15.001235008239746
    10. 'scale' → logprob: -15.376235008239746

Token 1548: '_mult' (ID: 44050)
  Prédit: '_mult'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_mult' → logprob: -0.002239946974441409
    2. 'mult' → logprob: -6.127240180969238
    3. '(v' → logprob: -10.877240180969238
    4. 'v' → logprob: -11.127240180969238
    5. 'Mult' → logprob: -11.252240180969238
    6. '_mul' → logprob: -12.377240180969238
    7. '(mult' → logprob: -13.502240180969238
    8. 'multip' → logprob: -13.877240180969238
    9. 'multiply' → logprob: -14.252240180969238
    10. 'vect' → logprob: -15.127240180969238

Token 1549: '(v' (ID: 6932)
  Prédit: '(v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(v' → logprob: -0.0006485754274763167
    2. 'v' → logprob: -7.375648498535156
    3. '(' → logprob: -10.750648498535156
    4. 'vector' → logprob: -15.750648498535156
    5. '   ' → logprob: -16.500648498535156
    6. '(
' → logprob: -16.500648498535156
    7. '	v' → logprob: -16.625648498535156
    8. '(k' → logprob: -16.875648498535156
    9. '```' → logprob: -16.875648498535156
    10. ')v' → logprob: -17.250648498535156

Token 1550: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.014489595778286457
    2. ',v' → logprob: -4.889489650726318
    3. '(' → logprob: -6.139489650726318
    4. '(v' → logprob: -6.514489650726318
    5. 'cos' → logprob: -6.764489650726318
    6. ',k' → logprob: -6.889489650726318
    7. ',c' → logprob: -7.639489650726318
    8. ' ,' → logprob: -9.38948917388916
    9. '*cos' → logprob: -9.51448917388916
    10. ',(' → logprob: -9.51448917388916

Token 1551: ' cos' (ID: 8974)
  Prédit: 'cos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cos' → logprob: -4.5491004129871726e-05
    2. ' cos' → logprob: -10.000045776367188
    3. '*cos' → logprob: -19.000045776367188
    4. '           ' → logprob: -19.375045776367188
    5. '               ' → logprob: -20.625045776367188
    6. 'cot' → logprob: -21.250045776367188
    7. '_cos' → logprob: -21.875045776367188
    8. '   ' → logprob: -22.250045776367188
    9. '                   ' → logprob: -22.625045776367188
    10. '.cos' → logprob: -22.750045776367188

Token 1552: '_theta' (ID: 100778)
  Prédit: '_theta'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_theta' → logprob: -0.00013977376511320472
    2. 'Theta' → logprob: -9.250140190124512
    3. '_' → logprob: -10.750140190124512
    4. '_angle' → logprob: -12.000140190124512
    5. 'theta' → logprob: -12.250140190124512
    6. ')_' → logprob: -13.000140190124512
    7. '(theta' → logprob: -13.125140190124512
    8. '`' → logprob: -13.375140190124512
    9. '```' → logprob: -13.750140190124512
    10. ')' → logprob: -14.000140190124512

Token 1553: '),
' (ID: 2313)
  Prédit: '),
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),
' → logprob: -0.008046153001487255
    2. '),' → logprob: -4.8830461502075195
    3. '           ' → logprob: -8.75804615020752
    4. ')' → logprob: -9.13304615020752
    5. '),
' → logprob: -9.50804615020752
    6. '),

' → logprob: -9.88304615020752
    7. '       ' → logprob: -10.88304615020752
    8. ' ),
' → logprob: -11.25804615020752
    9. ')
' → logprob: -12.13304615020752
    10. ',' → logprob: -13.00804615020752

Token 1554: '           ' (ID: 352)
  Prédit: 'scalar'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'scalar' → logprob: -0.6268574595451355
    2. 'vector' → logprob: -1.6268575191497803
    3. '           ' → logprob: -2.0018575191497803
    4. ' scalar' → logprob: -2.1268575191497803
    5. ' vector' → logprob: -4.251857280731201
    6. '       ' → logprob: -8.75185775756836
    7. '            ' → logprob: -8.75185775756836
    8. '               ' → logprob: -9.00185775756836
    9. '   ' → logprob: -9.75185775756836
    10. '          ' → logprob: -10.75185775756836

Token 1555: ' vector' (ID: 9727)
  Prédit: 'vector'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'vector' (adapté à ' vector') → logprob: -0.06878095120191574
    2. 'scalar' → logprob: -3.0687808990478516
    3. '           ' → logprob: -4.443780899047852
    4. ' vector' → logprob: -5.068780899047852
    5. ' scalar' → logprob: -6.693780899047852
    6. '               ' → logprob: -8.943780899047852
    7. '       ' → logprob: -9.068780899047852
    8. '                   ' → logprob: -9.318780899047852
    9. '   ' → logprob: -9.443780899047852
    10. '            ' → logprob: -9.693780899047852

Token 1556: '_add' (ID: 8390)
  Prédit: '_mult'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_mult' → logprob: -0.2697528302669525
    2. '_sub' → logprob: -2.1447527408599854
    3. '_add' → logprob: -2.2697527408599854
    4. 'mult' → logprob: -4.6447529792785645
    5. '_mul' → logprob: -5.5197529792785645
    6. 'sub' → logprob: -7.1447529792785645
    7. '_cross' → logprob: -7.5197529792785645
    8. 'add' → logprob: -7.7697529792785645
    9. 'multiply' → logprob: -8.894752502441406
    10. '_m' → logprob: -9.144752502441406

Token 1557: '(
' (ID: 1607)
  Prédit: '(
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(
' → logprob: -0.5756730437278748
    2. '(s' → logprob: -0.9506730437278748
    3. 'scalar' → logprob: -3.5756731033325195
    4. '(' → logprob: -3.8256731033325195
    5. '           ' → logprob: -7.3256731033325195
    6. '               ' → logprob: -7.4506731033325195
    7. '   ' → logprob: -10.32567310333252
    8. ' scalar' → logprob: -10.32567310333252
    9. '       ' → logprob: -10.95067310333252
    10. '(
' → logprob: -11.45067310333252

Token 1558: '               ' (ID: 506)
  Prédit: 'scalar'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'scalar' → logprob: -0.031021753326058388
    2. '               ' → logprob: -3.6560218334198
    3. '           ' → logprob: -5.656021595001221
    4. ' scalar' → logprob: -6.781021595001221
    5. '   ' → logprob: -10.156022071838379
    6. '                   ' → logprob: -11.656022071838379
    7. '              ' → logprob: -12.031022071838379
    8. '       ' → logprob: -12.406022071838379
    9. '             ' → logprob: -12.531022071838379
    10. '.scalar' → logprob: -12.656022071838379

Token 1559: ' scalar' (ID: 35065)
  Prédit: 'scalar'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'scalar' (adapté à ' scalar') → logprob: -0.0015250948490574956
    2. 'vector' → logprob: -7.001524925231934
    3. ' scalar' → logprob: -8.376524925231934
    4. '                   ' → logprob: -8.501524925231934
    5. '               ' → logprob: -9.751524925231934
    6. '           ' → logprob: -9.751524925231934
    7. 'cross' → logprob: -10.001524925231934
    8. '                 ' → logprob: -12.501524925231934
    9. '   ' → logprob: -12.501524925231934
    10. '             ' → logprob: -12.876524925231934

Token 1560: '_mult' (ID: 44050)
  Prédit: '_mult'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_mult' → logprob: -6.897412822581828e-05
    2. 'mult' → logprob: -9.875068664550781
    3. '_m' → logprob: -12.000068664550781
    4. '_cross' → logprob: -12.000068664550781
    5. '_mul' → logprob: -12.750068664550781
    6. 'Mult' → logprob: -13.750068664550781
    7. 'multiply' → logprob: -15.500068664550781
    8. '_MULT' → logprob: -15.500068664550781
    9. '(mult' → logprob: -15.500068664550781
    10. '_product' → logprob: -15.625068664550781

Token 1561: '(c' (ID: 2410)
  Prédit: '(c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(c' → logprob: -0.5544976592063904
    2. '(axis' → logprob: -1.8044977188110352
    3. '(k' → logprob: -2.054497718811035
    4. '(vector' → logprob: -2.054497718811035
    5. '(' → logprob: -5.929497718811035
    6. '(v' → logprob: -7.179497718811035
    7. '((' → logprob: -7.804497718811035
    8. 'vector' → logprob: -8.429497718811035
    9. 'axis' → logprob: -8.804497718811035
    10. '(vec' → logprob: -9.304497718811035

Token 1562: 'ross' (ID: 2838)
  Prédit: 'ross'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ross' → logprob: -0.05807897076010704
    2. 'v' → logprob: -3.5580790042877197
    3. '(v' → logprob: -3.6830790042877197
    4. 'cross' → logprob: -7.183078765869141
    5. 'vector' → logprob: -7.558078765869141
    6. ',v' → logprob: -8.18307876586914
    7. ')' → logprob: -8.30807876586914
    8. 'ros' → logprob: -8.68307876586914
    9. ')v' → logprob: -8.93307876586914
    10. 'k' → logprob: -9.43307876586914

Token 1563: '(k' (ID: 12125)
  Prédit: '(v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(v' → logprob: -0.007683874107897282
    2. 'v' → logprob: -4.882683753967285
    3. ')v' → logprob: -10.132683753967285
    4. ')' → logprob: -10.632683753967285
    5. '(' → logprob: -12.507683753967285
    6. ')(' → logprob: -13.007683753967285
    7. ',v' → logprob: -13.132683753967285
    8. '(
' → logprob: -14.007683753967285
    9. '<|end|>' → logprob: -14.007683753967285
    10. ' v' → logprob: -14.132683753967285

Token 1564: ',' (ID: 11)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.5056232810020447
    2. ',v' → logprob: -1.5056233406066895
    3. ',' → logprob: -1.7556233406066895
    4. '(v' → logprob: -6.1306233406066895
    5. ' ,' → logprob: -12.630622863769531
    6. ',
' → logprob: -13.130622863769531
    7. ' v' → logprob: -13.380622863769531
    8. '(' → logprob: -13.505622863769531
    9. '	v' → logprob: -13.630622863769531
    10. '```' → logprob: -13.755622863769531

Token 1565: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -3.8889261304575484e-06
    2. ' v' → logprob: -12.500003814697266
    3. '(v' → logprob: -16.250003814697266
    4. 'vector' → logprob: -17.375003814697266
    5. ')v' → logprob: -17.625003814697266
    6. '	v' → logprob: -18.625003814697266
    7. '   ' → logprob: -20.125003814697266
    8. '
' → logprob: -20.375003814697266
    9. '[v' → logprob: -20.625003814697266
    10. '_v' → logprob: -20.875003814697266

Token 1566: '),' (ID: 936)
  Prédit: '),'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),' → logprob: -0.00014609156642109156
    2. ',' → logprob: -8.87514591217041
    3. ' ),' → logprob: -12.25014591217041
    4. ',),' → logprob: -14.75014591217041
    5. '),
' → logprob: -15.37514591217041
    6. '```' → logprob: -15.50014591217041
    7. '   ' → logprob: -16.500146865844727
    8. '),(' → logprob: -16.625146865844727
    9. '},' → logprob: -16.875146865844727
    10. ' ,' → logprob: -17.000146865844727

Token 1567: ' sin' (ID: 2187)
  Prédit: 'sin'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sin' → logprob: -4.5491004129871726e-05
    2. ' sin' → logprob: -10.000045776367188
    3. '   ' → logprob: -18.500045776367188
    4. 'cos' → logprob: -18.500045776367188
    5. '*sin' → logprob: -20.500045776367188
    6. '```' → logprob: -21.750045776367188
    7. '     ' → logprob: -22.375045776367188
    8. 'sins' → logprob: -22.375045776367188
    9. '               ' → logprob: -22.500045776367188
    10. '	s' → logprob: -22.500045776367188

Token 1568: '_theta' (ID: 100778)
  Prédit: '_theta'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_theta' → logprob: -0.00016218038217630237
    2. 'theta' → logprob: -9.000162124633789
    3. 'Theta' → logprob: -10.500162124633789
    4. '_angle' → logprob: -11.750162124633789
    5. '(theta' → logprob: -13.375162124633789
    6. '_' → logprob: -14.375162124633789
    7. 'θ' → logprob: -14.875162124633789
    8. ')' → logprob: -15.625162124633789
    9. '(' → logprob: -16.00016212463379
    10. '_t' → logprob: -16.87516212463379

Token 1569: '),
' (ID: 2313)
  Prédit: '),
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),
' → logprob: -0.006485623307526112
    2. '),' → logprob: -5.631485462188721
    3. '           ' → logprob: -6.131485462188721
    4. '               ' → logprob: -7.506485462188721
    5. '),
' → logprob: -9.381485939025879
    6. '),

' → logprob: -10.381485939025879
    7. ' ),
' → logprob: -11.256485939025879
    8. '       ' → logprob: -11.881485939025879
    9. '          ' → logprob: -12.006485939025879
    10. '                   ' → logprob: -12.256485939025879

Token 1570: '               ' (ID: 506)
  Prédit: 'scalar'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'scalar' → logprob: -0.26236459612846375
    2. ' scalar' → logprob: -1.6373646259307861
    3. '               ' → logprob: -3.387364625930786
    4. '                ' → logprob: -6.762364387512207
    5. '           ' → logprob: -7.637364387512207
    6. '                   ' → logprob: -8.137364387512207
    7. 'vector' → logprob: -8.762364387512207
    8. '                
' → logprob: -9.387364387512207
    9. '            ' → logprob: -9.762364387512207
    10. ')' → logprob: -10.012364387512207

Token 1571: ' scalar' (ID: 35065)
  Prédit: 'scalar'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'scalar' (adapté à ' scalar') → logprob: -7.517272024415433e-05
    2. ' scalar' → logprob: -9.500075340270996
    3. '.scalar' → logprob: -15.750075340270996
    4. '           ' → logprob: -16.25007438659668
    5. '               ' → logprob: -16.87507438659668
    6. '   ' → logprob: -17.37507438659668
    7. '                   ' → logprob: -17.50007438659668
    8. 'vector' → logprob: -17.62507438659668
    9. '       ' → logprob: -18.75007438659668
    10. 'Scalar' → logprob: -18.87507438659668

Token 1572: '_mult' (ID: 44050)
  Prédit: '_mult'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_mult' → logprob: -0.006805483717471361
    2. 'mult' → logprob: -5.006805419921875
    3. 'scalar' → logprob: -10.506805419921875
    4. 's' → logprob: -11.256805419921875
    5. 'Mult' → logprob: -11.381805419921875
    6. '_mul' → logprob: -11.631805419921875
    7. '(mult' → logprob: -11.881805419921875
    8. '_sub' → logprob: -12.881805419921875
    9. 'token' → logprob: -13.006805419921875
    10. 't' → logprob: -13.506805419921875

Token 1573: '(k' (ID: 12125)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.6931518912315369
    2. '(k' → logprob: -0.6931518912315369
    3. '(' → logprob: -12.943151473999023
    4. '   ' → logprob: -13.943151473999023
    5. '	k' → logprob: -14.443151473999023
    6. '(
' → logprob: -15.193151473999023
    7. ' k' → logprob: -16.068151473999023
    8. ' (' → logprob: -16.193151473999023
    9. '```' → logprob: -16.193151473999023
    10. ')' → logprob: -16.443151473999023

Token 1574: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.01121840812265873
    2. ',d' → logprob: -4.636218547821045
    3. 'dot' → logprob: -6.886218547821045
    4. '(dot' → logprob: -7.886218547821045
    5. ',c' → logprob: -10.886218070983887
    6. 'cross' → logprob: -11.386218070983887
    7. '(' → logprob: -11.386218070983887
    8. '```' → logprob: -11.636218070983887
    9. ' ,' → logprob: -12.261218070983887
    10. '(d' → logprob: -12.636218070983887

Token 1575: ' dot' (ID: 16579)
  Prédit: 'dot'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dot' → logprob: -9.491498531133402e-06
    2. '(dot' → logprob: -11.750009536743164
    3. ' dot' → logprob: -13.375009536743164
    4. '.dot' → logprob: -19.250009536743164
    5. '_dot' → logprob: -20.000009536743164
    6. 'vector' → logprob: -20.125009536743164
    7. 'scalar' → logprob: -20.750009536743164
    8. '(' → logprob: -20.875009536743164
    9. '   ' → logprob: -21.250009536743164
    10. '-dot' → logprob: -21.625009536743164

Token 1576: '(k' (ID: 12125)
  Prédit: '(k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(k' → logprob: -0.0016053172294050455
    2. '(v' → logprob: -6.87660551071167
    3. 'k' → logprob: -7.50160551071167
    4. '(' → logprob: -11.001605033874512
    5. 'v' → logprob: -12.751605033874512
    6. '(
' → logprob: -14.626605033874512
    7. '```' → logprob: -17.001605987548828
    8. ' (' → logprob: -17.626605987548828
    9. '{k' → logprob: -17.876605987548828
    10. ')' → logprob: -18.001605987548828

Token 1577: ',v' (ID: 30680)
  Prédit: '(v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(v' → logprob: -0.23216667771339417
    2. ',' → logprob: -1.7321666479110718
    3. 'v' → logprob: -4.357166767120361
    4. '(' → logprob: -4.482166767120361
    5. ',v' → logprob: -5.107166767120361
    6. '(k' → logprob: -9.607166290283203
    7. ' ,' → logprob: -11.607166290283203
    8. ')' → logprob: -12.107166290283203
    9. ' v' → logprob: -12.232166290283203
    10. '(
' → logprob: -12.357166290283203

Token 1578: ')*(' (ID: 44406)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '))' → logprob: -0.6981456875801086
    2. ')))' → logprob: -1.0731456279754639
    3. '))
' → logprob: -2.573145627975464
    4. ')' → logprob: -2.823145627975464
    5. ')))
' → logprob: -4.448145866394043
    6. '))))' → logprob: -5.573145866394043
    7. ')*' → logprob: -6.073145866394043
    8. ')),
' → logprob: -6.573145866394043
    9. '))))
' → logprob: -6.823145866394043
    10. ')v' → logprob: -7.198145866394043

Token 1579: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.006734676193445921
    2. 'cos' → logprob: -5.256734848022461
    3. '(' → logprob: -6.506734848022461
    4. ' (' → logprob: -13.131734848022461
    5. ' cos' → logprob: -13.506734848022461
    6. '   ' → logprob: -14.256734848022461
    7. ' ' → logprob: -14.256734848022461
    8. 'math' → logprob: -14.756734848022461
    9. 'sin' → logprob: -15.256734848022461
    10. '```' → logprob: -15.256734848022461

Token 1580: '-c' (ID: 3452)
  Prédit: ' -'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.048764947801828384
    2. '-' → logprob: -3.048764944076538
    3. '-c' → logprob: -8.798765182495117
    4. '.' → logprob: -10.673765182495117
    5. '-m' → logprob: -13.673765182495117
    6. 'cos' → logprob: -14.048765182495117
    7. '-k' → logprob: -14.423765182495117
    8. ' cos' → logprob: -15.048765182495117
    9. ' ' → logprob: -15.423765182495117
    10. '−' → logprob: -16.548765182495117

Token 1581: 'os' (ID: 365)
  Prédit: 'os'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'os' → logprob: -7.896309739408025e-07
    2. 'cos' → logprob: -15.125000953674316
    3. 'o' → logprob: -15.500000953674316
    4. '	os' → logprob: -16.875
    5. 'osph' → logprob: -17.125
    6. '-os' → logprob: -17.125
    7. '```' → logprob: -17.25
    8. 'ос' → logprob: -17.375
    9. ' os' → logprob: -17.5
    10. '-' → logprob: -17.75

Token 1582: '_theta' (ID: 100778)
  Prédit: '_theta'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_theta' → logprob: -0.0014884350821375847
    2. '_' → logprob: -6.751488208770752
    3. '_angle' → logprob: -8.75148868560791
    4. ')' → logprob: -10.12648868560791
    5. 'Theta' → logprob: -10.12648868560791
    6. 'theta' → logprob: -10.50148868560791
    7. ')_' → logprob: -11.37648868560791
    8. '(theta' → logprob: -11.37648868560791
    9. '```' → logprob: -11.37648868560791
    10. '(' → logprob: -12.12648868560791

Token 1583: '))
' (ID: 2210)
  Prédit: '))
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))
' → logprob: -0.1217731162905693
    2. '))' → logprob: -3.3717730045318604
    3. ')))
' → logprob: -3.6217730045318604
    4. ')))' → logprob: -4.1217732429504395
    5. '))))
' → logprob: -4.4967732429504395
    6. '))))' → logprob: -4.7467732429504395
    7. ')' → logprob: -4.7467732429504395
    8. ')
' → logprob: -5.4967732429504395
    9. ')))))
' → logprob: -6.4967732429504395
    10. '           ' → logprob: -6.6217732429504395

Token 1584: '           ' (ID: 352)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.6920918226242065
    2. '           ' → logprob: -1.4420918226242065
    3. ')
' → logprob: -2.067091941833496
    4. ')))' → logprob: -2.317091941833496
    5. '))' → logprob: -3.692091941833496
    6. '       ' → logprob: -4.442091941833496
    7. '               ' → logprob: -7.817091941833496
    8. '))))' → logprob: -8.192091941833496
    9. ')
' → logprob: -8.442091941833496
    10. '))
' → logprob: -8.817091941833496

Token 1585: ' )
' (ID: 3270)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.7317438125610352
    2. ')
' (adapté à ' )
') → logprob: -0.9817438125610352
    3. ')))' → logprob: -2.606743812561035
    4. '       ' → logprob: -2.981743812561035
    5. '))' → logprob: -4.231743812561035
    6. '           ' → logprob: -5.481743812561035
    7. '))
' → logprob: -7.981743812561035
    8. ')))
' → logprob: -8.356743812561035
    9. ')
' → logprob: -8.356743812561035
    10. '))))' → logprob: -8.731743812561035

Token 1586: '       ' (ID: 309)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.04305902495980263
    2. '       ' → logprob: -3.1680591106414795
    3. ')
' → logprob: -10.668059349060059
    4. '))' → logprob: -11.418059349060059
    5. ')))' → logprob: -12.043059349060059
    6. ')return' → logprob: -12.543059349060059
    7. ')`' → logprob: -12.543059349060059
    8. ' )' → logprob: -13.043059349060059
    9. '<|end|>' → logprob: -13.168059349060059
    10. '   ' → logprob: -13.293059349060059

Token 1587: ' )
' (ID: 3270)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.08937975764274597
    2. '       ' → logprob: -2.4643797874450684
    3. ')
' (adapté à ' )
') → logprob: -7.964379787445068
    4. ')return' → logprob: -9.46437931060791
    5. '   ' → logprob: -12.33937931060791
    6. ' )' → logprob: -12.46437931060791
    7. ')`' → logprob: -13.96437931060791
    8. ')}' → logprob: -14.08937931060791
    9. '))' → logprob: -14.21437931060791
    10. '           ' → logprob: -14.33937931060791

Token 1588: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1589: ' return' (ID: 622)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6718801856040955
    2. ')' → logprob: -0.7968801856040955
    3. '<|end|>' → logprob: -3.5468802452087402
    4. 'return' (adapté à ' return') → logprob: -5.67188024520874
    5. ')return' → logprob: -5.79688024520874
    6. '
' → logprob: -7.04688024520874
    7. ' return' → logprob: -7.04688024520874
    8. '   ' → logprob: -7.54688024520874
    9. ')
' → logprob: -8.546879768371582
    10. '<|end|>' → logprob: -8.796879768371582

Token 1590: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.06196858361363411
    2. ' v' → logprob: -2.8119685649871826
    3. '(v' → logprob: -14.186968803405762
    4. '	v' → logprob: -15.811968803405762
    5. 'vector' → logprob: -16.311967849731445
    6. '_v' → logprob: -17.811967849731445
    7. '(' → logprob: -17.936967849731445
    8. ')v' → logprob: -17.936967849731445
    9. 'tuple' → logprob: -18.311967849731445
    10. ' vector' → logprob: -19.061967849731445

Token 1591: '_rot' (ID: 90451)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.31609785556793213
    2. '
' → logprob: -1.5660978555679321
    3. '

' → logprob: -2.8160977363586426
    4. '#' → logprob: -7.691097736358643
    5. '_' → logprob: -8.4410982131958
    6. '_

' → logprob: -8.4410982131958
    7. '
' → logprob: -8.5660982131958
    8. '<|end|>' → logprob: -8.5660982131958
    9. '_def' → logprob: -8.6910982131958
    10. ' def' → logprob: -8.8160982131958

Token 1592: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.3235255777835846
    2. 'def' → logprob: -1.3235255479812622
    3. '

' → logprob: -5.448525428771973
    4. '```' → logprob: -5.573525428771973
    5. '(
' → logprob: -7.323525428771973
    6. '\' → logprob: -7.573525428771973
    7. '\n' → logprob: -8.573525428771973
    8. '
' → logprob: -8.948525428771973
    9. '#' → logprob: -9.198525428771973
    10. '    
' → logprob: -9.573525428771973

Token 1593: '#' (ID: 2)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.00014299227041192353
    2. '
' → logprob: -9.125143051147461
    3. '#' → logprob: -10.375143051147461
    4. '```' → logprob: -12.875143051147461
    5. '\' → logprob: -16.37514305114746
    6. '

' → logprob: -16.50014305114746
    7. 'd' → logprob: -16.62514305114746
    8. ' def' → logprob: -17.12514305114746
    9. 'ndef' → logprob: -17.37514305114746
    10. 'de' → logprob: -17.87514305114746

Token 1594: ' Vector' (ID: 8764)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.00867071095854044
    2. '
' → logprob: -4.758670806884766
    3. '#' → logprob: -10.008670806884766
    4. '```' → logprob: -12.258670806884766
    5. '\' → logprob: -13.133670806884766
    6. '
' → logprob: -14.258670806884766
    7. 'd' → logprob: -14.258670806884766
    8. '

' → logprob: -14.383670806884766
    9. '#
' → logprob: -14.508670806884766
    10. '  
' → logprob: -14.758670806884766

Token 1595: ' utilities' (ID: 50290)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.011175267398357391
    2. '_sub' → logprob: -4.636175155639648
    3. '_add' → logprob: -7.136175155639648
    4. '_def' → logprob: -8.011175155639648
    5. ' def' → logprob: -8.386175155639648
    6. '_' → logprob: -10.386175155639648
    7. '
' → logprob: -10.886175155639648
    8. 'sub' → logprob: -12.886175155639648
    9. ')' → logprob: -13.511175155639648
    10. '```' → logprob: -13.511175155639648

Token 1596: '
' (ID: 198)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.024120399728417397
    2. '
' → logprob: -3.774120330810547
    3. '(
' → logprob: -7.274120330810547
    4. '(' → logprob: -10.024120330810547
    5. '```' → logprob: -10.399120330810547
    6. '

' → logprob: -10.899120330810547
    7. '  
' → logprob: -11.149120330810547
    8. '(def' → logprob: -11.274120330810547
    9. '\' → logprob: -11.274120330810547
    10. ' def' → logprob: -11.524120330810547

Token 1597: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0006419036653824151
    2. '
' → logprob: -7.375641822814941
    3. '```' → logprob: -11.875641822814941
    4. ' def' → logprob: -12.500641822814941
    5. '(' → logprob: -13.000641822814941
    6. '(
' → logprob: -13.750641822814941
    7. ' 
' → logprob: -14.875641822814941
    8. 'de' → logprob: -15.250641822814941
    9. '  
' → logprob: -15.500641822814941
    10. '(def' → logprob: -15.625641822814941

Token 1598: ' vector' (ID: 9727)
  Prédit: 'vector'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'vector' → logprob: -0.07892625778913498
    2. ' vector' → logprob: -2.5789263248443604
    3. '(vector' → logprob: -10.828926086425781
    4. 'tuple' → logprob: -11.703926086425781
    5. 'def' → logprob: -12.078926086425781
    6. 'scalar' → logprob: -13.703926086425781
    7. ' tuple' → logprob: -15.078926086425781
    8. '	vector' → logprob: -15.203926086425781
    9. 'add' → logprob: -15.453926086425781
    10. ' def' → logprob: -15.453926086425781

Token 1599: '_sub' (ID: 11572)
  Prédit: '_add'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_add' → logprob: -0.011057492345571518
    2. '_sub' → logprob: -4.511057376861572
    3. '_' → logprob: -11.76105785369873
    4. '_def' → logprob: -13.88605785369873
    5. '_Add' → logprob: -15.38605785369873
    6. 'add' → logprob: -15.63605785369873
    7. 'def' → logprob: -15.76105785369873
    8. '_mul' → logprob: -16.511056900024414
    9. 'Add' → logprob: -16.886056900024414
    10. '_sum' → logprob: -16.886056900024414

Token 1600: '(a' (ID: 6271)
  Prédit: '(a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.17293670773506165
    2. '(' → logprob: -2.4229366779327393
    3. '(v' → logprob: -2.7979366779327393
    4. '(vector' → logprob: -5.297936916351318
    5. ' (' → logprob: -6.297936916351318
    6. '(u' → logprob: -6.922936916351318
    7. '((' → logprob: -7.047936916351318
    8. '(vec' → logprob: -8.29793643951416
    9. '(p' → logprob: -9.67293643951416
    10. '(x' → logprob: -9.92293643951416

Token 1601: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00046296243090182543
    2. ' ,' → logprob: -8.375462532043457
    3. ',a' → logprob: -8.500462532043457
    4. ',b' → logprob: -11.000462532043457
    5. ',v' → logprob: -12.250462532043457
    6. ',
' → logprob: -12.875462532043457
    7. 'a' → logprob: -13.750462532043457
    8. '(' → logprob: -14.000462532043457
    9. '(a' → logprob: -14.500462532043457
    10. '_,' → logprob: -15.125462532043457

Token 1602: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.001170225441455841
    2. ' b' → logprob: -6.7511701583862305
    3. '	b' → logprob: -19.501171112060547
    4. ')b' → logprob: -19.626171112060547
    5. '   ' → logprob: -21.251171112060547
    6. '    ' → logprob: -21.751171112060547
    7. ')' → logprob: -22.376171112060547
    8. '(b' → logprob: -22.376171112060547
    9. ' ' → logprob: -23.126171112060547
    10. '  ' → logprob: -24.001171112060547

Token 1603: '):
' (ID: 1883)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.820380687713623
    2. '):' → logprob: -1.195380687713623
    3. '):
' → logprob: -1.445380687713623
    4. ':' → logprob: -3.945380687713623
    5. '   ' → logprob: -7.445380687713623
    6. ')' → logprob: -7.570380687713623
    7. '[' → logprob: -8.320381164550781
    8. ',a' → logprob: -8.570381164550781
    9. ' ,' → logprob: -9.070381164550781
    10. '):
' → logprob: -9.195381164550781

Token 1604: '   ' (ID: 271)
  Prédit: ' a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.8737618923187256
    2. 'a' → logprob: -1.4987618923187256
    3. ' (' → logprob: -1.7487618923187256
    4. '(a' → logprob: -1.7487618923187256
    5. ' return' → logprob: -5.248762130737305
    6. '(' → logprob: -6.373762130737305
    7. '(
' → logprob: -6.998762130737305
    8. ' tuple' → logprob: -7.123762130737305
    9. 'return' → logprob: -7.373762130737305
    10. '   ' → logprob: -7.498762130737305

Token 1605: ' return' (ID: 622)
  Prédit: '(a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.031702205538749695
    2. '(' → logprob: -3.9067022800445557
    3. ' (' → logprob: -5.031702041625977
    4. '(tuple' → logprob: -6.781702041625977
    5. '(x' → logprob: -6.906702041625977
    6. 'tuple' → logprob: -7.031702041625977
    7. 'return' (adapté à ' return') → logprob: -7.906702041625977
    8. '(
' → logprob: -7.906702041625977
    9. '[a' → logprob: -7.906702041625977
    10. 'a' → logprob: -8.281702041625977

Token 1606: ' tuple' (ID: 31311)
  Prédit: '(a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.0003143704670947045
    2. '(' → logprob: -9.250314712524414
    3. '(tuple' → logprob: -9.250314712524414
    4. ' (' → logprob: -9.750314712524414
    5. 'tuple' → logprob: -10.375314712524414
    6. 'a' → logprob: -10.375314712524414
    7. ' tuple' → logprob: -13.875314712524414
    8. '[a' → logprob: -16.000314712524414
    9. '(t' → logprob: -16.250314712524414
    10. '   ' → logprob: -16.250314712524414

Token 1607: '(x' (ID: 4061)
  Prédit: '(a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.1934155821800232
    2. '(x' → logprob: -2.443415641784668
    3. '(ai' → logprob: -2.443415641784668
    4. 'a' → logprob: -6.943415641784668
    5. 'x' → logprob: -7.443415641784668
    6. '(' → logprob: -8.568415641784668
    7. 'ai' → logprob: -8.693415641784668
    8. '([' → logprob: -8.818415641784668
    9. '[a' → logprob: -9.818415641784668
    10. '(i' → logprob: -11.818415641784668

Token 1608: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.4900997281074524
    2. 'a' → logprob: -1.2400996685028076
    3. ' -' → logprob: -2.6150996685028076
    4. '-a' → logprob: -4.240099906921387
    5. '_a' → logprob: -5.365099906921387
    6. '-y' → logprob: -5.365099906921387
    7. '1' → logprob: -7.490099906921387
    8. '[' → logprob: -8.240099906921387
    9. '[a' → logprob: -8.865099906921387
    10. '-b' → logprob: -9.615099906921387

Token 1609: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.00012415809032972902
    2. ' y' → logprob: -9.000123977661133
    3. 'b' → logprob: -14.375123977661133
    4. '	y' → logprob: -17.125123977661133
    5. '(y' → logprob: -18.375123977661133
    6. ' ' → logprob: -19.000123977661133
    7. '   ' → logprob: -19.625123977661133
    8. 'ykl' → logprob: -19.625123977661133
    9. 'x' → logprob: -19.750123977661133
    10. ''y' → logprob: -20.125123977661133

Token 1610: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.31330153346061707
    2. ' for' → logprob: -1.3133015632629395
    3. '[' → logprob: -10.938301086425781
    4. ' ' → logprob: -11.188301086425781
    5. '	for' → logprob: -12.438301086425781
    6. ',' → logprob: -13.563301086425781
    7. ')' → logprob: -13.813301086425781
    8. 'a' → logprob: -14.063301086425781
    9. '   ' → logprob: -14.938301086425781
    10. 'x' → logprob: -15.313301086425781

Token 1611: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -4.60414821645827e-06
    2. ' x' → logprob: -12.875004768371582
    3. '(x' → logprob: -13.250004768371582
    4. 'a' → logprob: -16.375003814697266
    5. '	x' → logprob: -19.125003814697266
    6. '(' → logprob: -19.375003814697266
    7. ',x' → logprob: -19.625003814697266
    8. '_x' → logprob: -20.000003814697266
    9. ')x' → logprob: -20.375003814697266
    10. ' (' → logprob: -20.625003814697266

Token 1612: ',y' (ID: 16103)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.05388390272855759
    2. ',y' → logprob: -3.1788837909698486
    3. 'x' → logprob: -4.928884029388428
    4. 'y' → logprob: -6.178884029388428
    5. ',x' → logprob: -6.553884029388428
    6. 'in' → logprob: -10.05388355255127
    7. '(x' → logprob: -11.17888355255127
    8. ' ,' → logprob: -11.30388355255127
    9. ',b' → logprob: -11.42888355255127
    10. 'b' → logprob: -12.92888355255127

Token 1613: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.061970602720975876
    2. ' in' → logprob: -2.8119707107543945
    3. ',' → logprob: -13.311970710754395
    4. ')' → logprob: -14.061970710754395
    5. '
' → logprob: -16.061969757080078
    6. ' ' → logprob: -16.186969757080078
    7. 'b' → logprob: -16.311969757080078
    8. '	in' → logprob: -16.811969757080078
    9. 'n' → logprob: -16.936969757080078
    10. 'i' → logprob: -17.186969757080078

Token 1614: ' zip' (ID: 16216)
  Prédit: 'zip'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'zip' → logprob: -0.0011715330183506012
    2. ' zip' → logprob: -6.751171588897705
    3. '(zip' → logprob: -13.626171112060547
    4. 'z' → logprob: -16.626171112060547
    5. '.zip' → logprob: -17.501171112060547
    6. '_zip' → logprob: -18.251171112060547
    7. '
' → logprob: -18.876171112060547
    8. '```' → logprob: -20.751171112060547
    9. ' ' → logprob: -20.876171112060547
    10. '   ' → logprob: -21.376171112060547

Token 1615: '(a' (ID: 6271)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.014168089255690575
    2. '(a' → logprob: -4.2641682624816895
    3. ' a' → logprob: -12.389167785644531
    4. '(' → logprob: -16.01416778564453
    5. ')a' → logprob: -16.38916778564453
    6. '	a' → logprob: -16.76416778564453
    7. '   ' → logprob: -17.63916778564453
    8. 'b' → logprob: -17.63916778564453
    9. '[a' → logprob: -18.38916778564453
    10. '#a' → logprob: -18.88916778564453

Token 1616: ',b' (ID: 17568)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.5760117769241333
    2. ',b' → logprob: -0.8260117769241333
    3. 'b' → logprob: -9.701011657714844
    4. ' ,' → logprob: -11.701011657714844
    5. ',y' → logprob: -13.951011657714844
    6. '(b' → logprob: -14.576011657714844
    7. ',B' → logprob: -15.076011657714844
    8. ',(' → logprob: -15.326011657714844
    9. ',
' → logprob: -15.826011657714844
    10. '   ' → logprob: -15.826011657714844

Token 1617: '))

' (ID: 9746)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -8.65707261255011e-06
    2. '))

' → logprob: -12.625008583068848
    3. ')' → logprob: -12.750008583068848
    4. '))
' → logprob: -13.000008583068848
    5. ')))' → logprob: -16.375009536743164
    6. ' ))' → logprob: -17.000009536743164
    7. '()))' → logprob: -17.625009536743164
    8. ')),' → logprob: -18.250009536743164
    9. '));' → logprob: -18.625009536743164
    10. '))


' → logprob: -18.625009536743164

Token 1618: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -4.429896944202483e-05
    2. '```' → logprob: -10.125043869018555
    3. '
' → logprob: -13.000043869018555
    4. ' def' → logprob: -13.375043869018555
    5. '-def' → logprob: -16.625043869018555
    6. '``' → logprob: -16.625043869018555
    7. 'Def' → logprob: -17.000043869018555
    8. '_def' → logprob: -17.125043869018555
    9. ':def' → logprob: -17.125043869018555
    10. '(def' → logprob: -17.375043869018555

Token 1619: ' vector' (ID: 9727)
  Prédit: 'vector'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'vector' → logprob: -2.165027217415627e-05
    2. ' vector' → logprob: -10.750021934509277
    3. 'def' → logprob: -15.500021934509277
    4. 'tuple' → logprob: -19.00002098083496
    5. '	vector' → logprob: -19.37502098083496
    6. '(vector' → logprob: -19.75002098083496
    7. '_vector' → logprob: -20.00002098083496
    8. '<vector' → logprob: -20.25002098083496
    9. '.vector' → logprob: -20.75002098083496
    10. 'scalar' → logprob: -20.75002098083496

Token 1620: '_add' (ID: 8390)
  Prédit: '_add'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_add' → logprob: -5.676981345459353e-06
    2. 'add' → logprob: -12.125005722045898
    3. '_sub' → logprob: -15.750005722045898
    4. '_mul' → logprob: -17.6250057220459
    5. 'Add' → logprob: -17.7500057220459
    6. '_sum' → logprob: -18.6250057220459
    7. '_Add' → logprob: -19.6250057220459
    8. ' add' → logprob: -19.7500057220459
    9. '_added' → logprob: -20.3750057220459
    10. '_ADD' → logprob: -20.6250057220459

Token 1621: '(a' (ID: 6271)
  Prédit: '(a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -3.173704271830502e-06
    2. '(' → logprob: -12.87500286102295
    3. 'def' → logprob: -15.12500286102295
    4. '(A' → logprob: -16.625003814697266
    5. ' (' → logprob: -16.875003814697266
    6. '((' → logprob: -16.875003814697266
    7. '(tuple' → logprob: -17.000003814697266
    8. '(
' → logprob: -18.125003814697266
    9. '(lambda' → logprob: -18.500003814697266
    10. '   ' → logprob: -19.250003814697266

Token 1622: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00550718791782856
    2. '(a' → logprob: -6.005506992340088
    3. ',b' → logprob: -6.380506992340088
    4. ',a' → logprob: -6.755506992340088
    5. 'a' → logprob: -9.505507469177246
    6. ' ,' → logprob: -10.505507469177246
    7. '(b' → logprob: -10.755507469177246
    8. ',(' → logprob: -10.755507469177246
    9. '(' → logprob: -11.630507469177246
    10. '   ' → logprob: -11.880507469177246

Token 1623: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.003180094063282013
    2. ' b' → logprob: -5.753180027008057
    3. '(b' → logprob: -13.003180503845215
    4. '   ' → logprob: -17.1281795501709
    5. '	b' → logprob: -17.6281795501709
    6. 'a' → logprob: -18.2531795501709
    7. '(' → logprob: -18.3781795501709
    8. ' (' → logprob: -18.3781795501709
    9. ')b' → logprob: -19.0031795501709
    10. 'tuple' → logprob: -19.1281795501709

Token 1624: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.25255119800567627
    2. '):' → logprob: -1.5025511980056763
    3. '(a' → logprob: -8.502551078796387
    4. ')' → logprob: -8.502551078796387
    5. '   ' → logprob: -9.627551078796387
    6. ',' → logprob: -9.627551078796387
    7. 'a' → logprob: -10.377551078796387
    8. '(' → logprob: -11.377551078796387
    9. '):
' → logprob: -11.377551078796387
    10. '):

' → logprob: -11.752551078796387

Token 1625: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.08186867088079453
    2. 'return' → logprob: -2.9568686485290527
    3. ' return' → logprob: -3.9568686485290527
    4. 'def' → logprob: -5.331868648529053
    5. '(' → logprob: -7.206868648529053
    6. '(tuple' → logprob: -7.206868648529053
    7. 'tuple' → logprob: -7.456868648529053
    8. ' tuple' → logprob: -8.581869125366211
    9. '(a' → logprob: -8.831869125366211
    10. '(
' → logprob: -8.956869125366211

Token 1626: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.5842625498771667
    2. 'tuple' → logprob: -0.8342625498771667
    3. '(' → logprob: -5.209262371063232
    4. '(tuple' → logprob: -6.709262371063232
    5. '(
' → logprob: -7.334262371063232
    6. ' tuple' → logprob: -7.584262371063232
    7. 'def' → logprob: -8.08426284790039
    8. ' return' → logprob: -9.33426284790039
    9. '   ' → logprob: -10.95926284790039
    10. '(x' → logprob: -11.45926284790039

Token 1627: ' tuple' (ID: 31311)
  Prédit: 'tuple'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tuple' → logprob: -0.006544724106788635
    2. ' tuple' → logprob: -5.256544589996338
    3. '(tuple' → logprob: -6.756544589996338
    4. '(x' → logprob: -9.381545066833496
    5. '(' → logprob: -10.006545066833496
    6. ' (' → logprob: -11.381545066833496
    7. '(a' → logprob: -13.006545066833496
    8. 'a' → logprob: -13.131545066833496
    9. '   ' → logprob: -14.131545066833496
    10. '(
' → logprob: -14.381545066833496

Token 1628: '(x' (ID: 4061)
  Prédit: '(x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.3132629096508026
    2. 'x' → logprob: -1.313262939453125
    3. '(' → logprob: -14.063262939453125
    4. '[x' → logprob: -15.188262939453125
    5. '	x' → logprob: -16.563262939453125
    6. ' x' → logprob: -16.688262939453125
    7. '_x' → logprob: -17.188262939453125
    8. '$x' → logprob: -17.438262939453125
    9. '+x' → logprob: -18.813262939453125
    10. '(
' → logprob: -18.938262939453125

Token 1629: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.1269323080778122
    2. ' +' → logprob: -2.126932382583618
    3. '+y' → logprob: -13.001932144165039
    4. '+x' → logprob: -13.751932144165039
    5. '+
' → logprob: -14.251932144165039
    6. ' plus' → logprob: -16.87693214416504
    7. ' ' → logprob: -16.87693214416504
    8. ' +
' → logprob: -17.00193214416504
    9. '＋' → logprob: -17.37693214416504
    10. '+a' → logprob: -17.37693214416504

Token 1630: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.00317783304490149
    2. ' y' → logprob: -5.753177642822266
    3. '(y' → logprob: -16.253177642822266
    4. '	y' → logprob: -18.003177642822266
    5. ' ' → logprob: -19.128177642822266
    6. 'b' → logprob: -19.878177642822266
    7. '   ' → logprob: -19.878177642822266
    8. '  ' → logprob: -20.253177642822266
    9. '(' → logprob: -20.503177642822266
    10. '_y' → logprob: -21.128177642822266

Token 1631: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.12692958116531372
    2. ' for' → logprob: -2.126929521560669
    3. '(x' → logprob: -13.75192928314209
    4. '   ' → logprob: -15.75192928314209
    5. '	for' → logprob: -16.501930236816406
    6. '  ' → logprob: -16.876930236816406
    7. ' ' → logprob: -17.126930236816406
    8. 'or' → logprob: -18.626930236816406
    9. 'in' → logprob: -18.626930236816406
    10. 'For' → logprob: -19.126930236816406

Token 1632: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.003766113193705678
    2. 'a' → logprob: -5.753766059875488
    3. '(x' → logprob: -7.753766059875488
    4. ' x' → logprob: -8.753766059875488
    5. ' a' → logprob: -13.878766059875488
    6. 'zip' → logprob: -16.253767013549805
    7. '(a' → logprob: -16.253767013549805
    8. '	x' → logprob: -17.378767013549805
    9. ',x' → logprob: -17.503767013549805
    10. '[x' → logprob: -18.378767013549805

Token 1633: ',y' (ID: 16103)
  Prédit: ',y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',y' → logprob: -0.022231068462133408
    2. ',' → logprob: -4.522231101989746
    3. ',x' → logprob: -4.522231101989746
    4. ',b' → logprob: -8.522231101989746
    5. ',a' → logprob: -10.272231101989746
    6. ' ,' → logprob: -11.522231101989746
    7. ',z' → logprob: -12.272231101989746
    8. ' in' → logprob: -13.147231101989746
    9. ',v' → logprob: -13.522231101989746
    10. 'y' → logprob: -13.897231101989746

Token 1634: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.4740920662879944
    2. ' in' → logprob: -0.9740920662879944
    3. ',' → logprob: -11.224092483520508
    4. '
' → logprob: -14.474092483520508
    5. ' ' → logprob: -14.724092483520508
    6. 'for' → logprob: -15.474092483520508
    7. ')' → logprob: -15.599092483520508
    8. '[' → logprob: -16.724092483520508
    9. '```' → logprob: -17.224092483520508
    10. '   ' → logprob: -17.224092483520508

Token 1635: ' zip' (ID: 16216)
  Prédit: 'zip'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'zip' → logprob: -0.2014162540435791
    2. ' zip' → logprob: -1.701416254043579
    3. '(zip' → logprob: -12.826416015625
    4. 'a' → logprob: -15.951416015625
    5. '.zip' → logprob: -16.076416015625
    6. 'b' → logprob: -16.451416015625
    7. 'z' → logprob: -17.951416015625
    8. '_zip' → logprob: -18.076416015625
    9. ' zipped' → logprob: -18.201416015625
    10. 'x' → logprob: -18.451416015625

Token 1636: '(a' (ID: 6271)
  Prédit: '(a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -1.1472419600977446e-06
    2. 'a' → logprob: -13.750000953674316
    3. '(' → logprob: -17.000001907348633
    4. ' (' → logprob: -19.250001907348633
    5. ' a' → logprob: -19.750001907348633
    6. '(
' → logprob: -20.250001907348633
    7. '((' → logprob: -21.000001907348633
    8. ')(' → logprob: -21.250001907348633
    9. 's' → logprob: -21.375001907348633
    10. ')' → logprob: -21.625001907348633

Token 1637: ',b' (ID: 17568)
  Prédit: ',b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',b' → logprob: -0.027898628264665604
    2. '(b' → logprob: -4.402898788452148
    3. 'b' → logprob: -5.027898788452148
    4. '(a' → logprob: -5.277898788452148
    5. ')' → logprob: -6.652898788452148
    6. ',a' → logprob: -6.902898788452148
    7. 'a' → logprob: -7.027898788452148
    8. ',' → logprob: -8.027898788452148
    9. '(' → logprob: -9.777898788452148
    10. ')b' → logprob: -10.152898788452148

Token 1638: '))

' (ID: 9746)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.029813556000590324
    2. ')' → logprob: -3.529813528060913
    3. '):' → logprob: -10.154813766479492
    4. ')):' → logprob: -10.904813766479492
    5. ')))' → logprob: -12.904813766479492
    6. ')),' → logprob: -14.654813766479492
    7. '))
' → logprob: -14.779813766479492
    8. ' ))' → logprob: -14.779813766479492
    9. '),' → logprob: -14.904813766479492
    10. '))

' → logprob: -15.279813766479492

Token 1639: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -4.036524842376821e-05
    2. '```' → logprob: -10.250040054321289
    3. '
' → logprob: -12.625040054321289
    4. ' def' → logprob: -14.000040054321289
    5. '``' → logprob: -14.875040054321289
    6. 'Def' → logprob: -16.25004005432129
    7. 'from' → logprob: -16.75004005432129
    8. 'ndef' → logprob: -16.75004005432129
    9. '-def' → logprob: -16.75004005432129
    10. '\' → logprob: -16.87504005432129

Token 1640: ' dot' (ID: 16579)
  Prédit: 'scalar'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'scalar' → logprob: -0.02212800644338131
    2. 'vector' → logprob: -3.897128105163574
    3. 'def' → logprob: -6.897128105163574
    4. ' scalar' → logprob: -7.522128105163574
    5. 'dot' → logprob: -10.647128105163574
    6. ' vector' → logprob: -11.897128105163574
    7. '
' → logprob: -14.147128105163574
    8. 'tuple' → logprob: -14.647128105163574
    9. ' def' → logprob: -15.397128105163574
    10. 's' → logprob: -15.522128105163574

Token 1641: '(a' (ID: 6271)
  Prédit: '(a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.06200074777007103
    2. '(' → logprob: -2.8120007514953613
    3. ' (' → logprob: -10.937000274658203
    4. '(A' → logprob: -11.812000274658203
    5. '((' → logprob: -12.812000274658203
    6. '(x' → logprob: -13.187000274658203
    7. '<|end|>' → logprob: -13.937000274658203
    8. '(vector' → logprob: -14.062000274658203
    9. '(
' → logprob: -15.062000274658203
    10. '(Vector' → logprob: -15.562000274658203

Token 1642: ',b' (ID: 17568)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.03201235085725784
    2. ',a' → logprob: -3.907012462615967
    3. '(a' → logprob: -4.532012462615967
    4. ',b' → logprob: -8.157011985778809
    5. 'a' → logprob: -8.907011985778809
    6. '(' → logprob: -8.907011985778809
    7. ' ,' → logprob: -9.657011985778809
    8. ',(' → logprob: -11.532011985778809
    9. ' (' → logprob: -12.407011985778809
    10. ')' → logprob: -12.782011985778809

Token 1643: '):
' (ID: 1883)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.6170588135719299
    2. ')' → logprob: -0.8670588135719299
    3. '):' → logprob: -3.367058753967285
    4. '(' → logprob: -6.617058753967285
    5. '(x' → logprob: -6.617058753967285
    6. '):
' → logprob: -7.492058753967285
    7. ' )' → logprob: -7.617058753967285
    8. ' ,' → logprob: -7.617058753967285
    9. ',a' → logprob: -7.867058753967285
    10. '(a' → logprob: -8.242058753967285

Token 1644: '   ' (ID: 271)
  Prédit: 'sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sum' → logprob: -0.5990872979164124
    2. ' return' → logprob: -1.5990872383117676
    3. 'return' → logprob: -1.5990872383117676
    4. ' sum' → logprob: -3.3490872383117676
    5. 'x' → logprob: -4.974087238311768
    6. '=' → logprob: -6.224087238311768
    7. ' x' → logprob: -7.099087238311768
    8. '=sum' → logprob: -7.349087238311768
    9. '   ' → logprob: -7.974087238311768
    10. ' =' → logprob: -8.349087715148926

Token 1645: ' return' (ID: 622)
  Prédit: 'sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sum' → logprob: -0.012232127599418163
    2. 'x' → logprob: -4.512232303619385
    3. 'return' (adapté à ' return') → logprob: -6.762232303619385
    4. ' sum' → logprob: -11.012231826782227
    5. 'a' → logprob: -12.137231826782227
    6. '
' → logprob: -13.637231826782227
    7. '(x' → logprob: -13.887231826782227
    8. '=sum' → logprob: -14.387231826782227
    9. '0' → logprob: -14.637231826782227
    10. '```' → logprob: -14.762231826782227

Token 1646: ' sum' (ID: 4215)
  Prédit: 'sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sum' → logprob: -0.0003360582049936056
    2. ' sum' → logprob: -8.000335693359375
    3. 'a' → logprob: -14.250335693359375
    4. '(sum' → logprob: -18.250335693359375
    5. 'x' → logprob: -20.250335693359375
    6. '=sum' → logprob: -20.500335693359375
    7. '	sum' → logprob: -21.375335693359375
    8. '
' → logprob: -23.250335693359375
    9. ' a' → logprob: -23.250335693359375
    10. 'float' → logprob: -24.125335693359375

Token 1647: '(x' (ID: 4061)
  Prédit: '(x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -1.6240566083070007e-06
    2. 'x' → logprob: -13.500001907348633
    3. '(' → logprob: -15.375001907348633
    4. '(i' → logprob: -18.000001907348633
    5. '[x' → logprob: -18.375001907348633
    6. '([' → logprob: -19.500001907348633
    7. '(a' → logprob: -19.500001907348633
    8. '(u' → logprob: -20.500001907348633
    9. '	x' → logprob: -20.625001907348633
    10. '((' → logprob: -21.375001907348633

Token 1648: '*y' (ID: 83575)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.06734677404165268
    2. '*y' → logprob: -2.8173468112945557
    3. ' *' → logprob: -5.317346572875977
    4. '*x' → logprob: -7.817346572875977
    5. '*a' → logprob: -9.942346572875977
    6. '*u' → logprob: -12.942346572875977
    7. '*i' → logprob: -13.567346572875977
    8. '*q' → logprob: -13.817346572875977
    9. '*z' → logprob: -13.942346572875977
    10. '*p' → logprob: -14.067346572875977

Token 1649: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.3868802487850189
    2. 'for' → logprob: -1.1368802785873413
    3. '	for' → logprob: -12.636879920959473
    4. ' ' → logprob: -12.886879920959473
    5. '   ' → logprob: -13.261879920959473
    6. 'x' → logprob: -14.011879920959473
    7. '(x' → logprob: -14.511879920959473
    8. '  ' → logprob: -15.261879920959473
    9. 'a' → logprob: -17.26188087463379
    10. ',' → logprob: -17.38688087463379

Token 1650: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.00015955790877342224
    2. ' x' → logprob: -8.75015926361084
    3. '(x' → logprob: -14.25015926361084
    4. '	x' → logprob: -14.87515926361084
    5. ',x' → logprob: -18.125160217285156
    6. '"x' → logprob: -18.875160217285156
    7. '_x' → logprob: -19.125160217285156
    8. '$x' → logprob: -19.250160217285156
    9. ')x' → logprob: -19.500160217285156
    10. 'a' → logprob: -19.500160217285156

Token 1651: ',y' (ID: 16103)
  Prédit: ',x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',x' → logprob: -0.030673449859023094
    2. ',' → logprob: -3.5306735038757324
    3. ',y' → logprob: -7.280673503875732
    4. 'x' → logprob: -8.405673027038574
    5. ',a' → logprob: -12.405673027038574
    6. ' ,' → logprob: -13.155673027038574
    7. ',b' → logprob: -13.405673027038574
    8. 'a' → logprob: -13.905673027038574
    9. '(x' → logprob: -13.905673027038574
    10. ',(' → logprob: -15.155673027038574

Token 1652: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.4740791916847229
    2. 'in' → logprob: -0.9740791916847229
    3. ',' → logprob: -13.474079132080078
    4. ',in' → logprob: -15.474079132080078
    5. '
' → logprob: -15.974079132080078
    6. 'a' → logprob: -15.974079132080078
    7. ' ' → logprob: -16.224079132080078
    8. ',b' → logprob: -16.724079132080078
    9. 'i' → logprob: -17.474079132080078
    10. '	in' → logprob: -17.599079132080078

Token 1653: ' zip' (ID: 16216)
  Prédit: ' zip'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' zip' → logprob: -0.20141392946243286
    2. 'zip' → logprob: -1.701413869857788
    3. '(zip' → logprob: -14.826414108276367
    4. '.zip' → logprob: -15.701414108276367
    5. '_zip' → logprob: -19.576414108276367
    6. 'z' → logprob: -19.701414108276367
    7. '
' → logprob: -19.826414108276367
    8. ' z' → logprob: -20.701414108276367
    9. 'Zip' → logprob: -20.951414108276367
    10. '```' → logprob: -21.701414108276367

Token 1654: '(a' (ID: 6271)
  Prédit: '(a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.4740926921367645
    2. 'a' → logprob: -0.9740927219390869
    3. ' a' → logprob: -11.099092483520508
    4. '	a' → logprob: -15.349092483520508
    5. ')a' → logprob: -16.224092483520508
    6. '(' → logprob: -16.849092483520508
    7. ' (' → logprob: -16.849092483520508
    8. '#a' → logprob: -17.224092483520508
    9. '(
' → logprob: -17.474092483520508
    10. '   ' → logprob: -17.849092483520508

Token 1655: ',b' (ID: 17568)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.008724244311451912
    2. '(a' → logprob: -4.758724212646484
    3. ',a' → logprob: -9.758724212646484
    4. ' a' → logprob: -9.883724212646484
    5. ')a' → logprob: -15.383724212646484
    6. '	a' → logprob: -15.508724212646484
    7. ',' → logprob: -15.633724212646484
    8. 'b' → logprob: -16.633724212646484
    9. '=a' → logprob: -16.758724212646484
    10. '_a' → logprob: -17.383724212646484

Token 1656: '))

' (ID: 9746)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -2.2842308680992573e-05
    2. '))

' → logprob: -11.125022888183594
    3. ')' → logprob: -13.000022888183594
    4. ' ))' → logprob: -13.250022888183594
    5. '))
' → logprob: -13.375022888183594
    6. ')))' → logprob: -13.750022888183594
    7. ',' → logprob: -14.000022888183594
    8. '));' → logprob: -15.375022888183594
    9. ')),' → logprob: -16.375022888183594
    10. ',b' → logprob: -16.750022888183594

Token 1657: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -1.771655115589965e-05
    2. '```' → logprob: -11.000018119812012
    3. '
' → logprob: -14.125018119812012
    4. ' def' → logprob: -15.875018119812012
    5. 'import' → logprob: -16.125017166137695
    6. 'from' → logprob: -17.000017166137695
    7. '``' → logprob: -19.250017166137695
    8. ')' → logprob: -20.125017166137695
    9. '(' → logprob: -20.125017166137695
    10. 'Def' → logprob: -20.750017166137695

Token 1658: ' cross' (ID: 8088)
  Prédit: 'cross'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cross' → logprob: -0.016812890768051147
    2. 'scalar' → logprob: -4.516812801361084
    3. 'normalize' → logprob: -5.891812801361084
    4. 'vector' → logprob: -6.516812801361084
    5. ' cross' → logprob: -6.891812801361084
    6. 'def' → logprob: -7.766812801361084
    7. 'tuple' → logprob: -10.516813278198242
    8. 'len' → logprob: -11.016813278198242
    9. ' scalar' → logprob: -11.891813278198242
    10. 'math' → logprob: -12.766813278198242

Token 1659: '(a' (ID: 6271)
  Prédit: '(a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.000651793903671205
    2. '(lambda' → logprob: -8.000651359558105
    3. 'def' → logprob: -8.125651359558105
    4. '(' → logprob: -11.125651359558105
    5. ' (' → logprob: -13.250651359558105
    6. '(A' → logprob: -13.375651359558105
    7. '(
' → logprob: -13.625651359558105
    8. '((' → logprob: -14.250651359558105
    9. '(def' → logprob: -15.750651359558105
    10. '```' → logprob: -15.750651359558105

Token 1660: ',b' (ID: 17568)
  Prédit: ',b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',b' → logprob: -0.02031693048775196
    2. ',' → logprob: -4.145317077636719
    3. 'b' → logprob: -5.770317077636719
    4. 'a' → logprob: -7.270317077636719
    5. '(a' → logprob: -8.270317077636719
    6. ',a' → logprob: -9.270317077636719
    7. '(b' → logprob: -9.770317077636719
    8. '(' → logprob: -10.895317077636719
    9. ')' → logprob: -11.645317077636719
    10. '```' → logprob: -12.145317077636719

Token 1661: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.011118912138044834
    2. '):' → logprob: -4.5111188888549805
    3. ')' → logprob: -9.88611888885498
    4. '(a' → logprob: -11.76111888885498
    5. '):

' → logprob: -12.88611888885498
    6. ')(
' → logprob: -13.13611888885498
    7. '):
' → logprob: -13.38611888885498
    8. ')(' → logprob: -13.51111888885498
    9. '):(' → logprob: -13.88611888885498
    10. ')
' → logprob: -14.26111888885498

Token 1662: '   ' (ID: 271)
  Prédit: '(
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(
' → logprob: -0.39819860458374023
    2. '(' → logprob: -1.6481986045837402
    3. 'return' → logprob: -2.0231986045837402
    4. '(a' → logprob: -6.77319860458374
    5. '   ' → logprob: -7.02319860458374
    6. '```' → logprob: -7.52319860458374
    7. ' return' → logprob: -8.148199081420898
    8. '(lambda' → logprob: -8.398199081420898
    9. '(return' → logprob: -8.398199081420898
    10. '(x' → logprob: -8.398199081420898

Token 1663: ' return' (ID: 622)
  Prédit: '(
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(
' → logprob: -0.44837644696235657
    2. '(a' → logprob: -1.4483764171600342
    3. '(' → logprob: -2.198376417160034
    4. '(x' → logprob: -4.198376655578613
    5. 'return' (adapté à ' return') → logprob: -8.698376655578613
    6. '(return' → logprob: -8.698376655578613
    7. '(lambda' → logprob: -11.323376655578613
    8. ' (' → logprob: -11.698376655578613
    9. '(

' → logprob: -12.073376655578613
    10. 'a' → logprob: -12.073376655578613

Token 1664: ' (' (ID: 350)
  Prédit: '(
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(
' → logprob: -0.18731658160686493
    2. '(' → logprob: -2.187316656112671
    3. '(a' → logprob: -2.937316656112671
    4. '(x' → logprob: -5.187316417694092
    5. '(

' → logprob: -13.31231689453125
    6. '(b' → logprob: -13.93731689453125
    7. '((' → logprob: -14.18731689453125
    8. '(tuple' → logprob: -14.31231689453125
    9. ' (' → logprob: -14.56231689453125
    10. 'a' → logprob: -14.93731689453125

Token 1665: 'a' (ID: 64)
  Prédit: 'a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -4.320199877838604e-07
    2. ' a' → logprob: -15.0
    3. '(a' → logprob: -18.125
    4. '	a' → logprob: -20.25
    5. '(
' → logprob: -20.875
    6. '   ' → logprob: -21.25
    7. ')a' → logprob: -21.75
    8. '
' → logprob: -22.25
    9. '(' → logprob: -22.375
    10. '#a' → logprob: -23.375

Token 1666: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0020403447560966015
    2. 'a' → logprob: -6.252040386199951
    3. '[
' → logprob: -9.252039909362793
    4. '1' → logprob: -11.752039909362793
    5. '[a' → logprob: -12.002039909362793
    6. ' a' → logprob: -14.252039909362793
    7. 'b' → logprob: -14.752039909362793
    8. '0' → logprob: -15.377039909362793
    9. '_a' → logprob: -16.62704086303711
    10. '(
' → logprob: -17.00204086303711

Token 1667: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0010070850839838386
    2. 'a' → logprob: -7.001007080078125
    3. '[' → logprob: -9.876007080078125
    4. '0' → logprob: -10.376007080078125
    5. '
' → logprob: -12.626007080078125
    6. '   ' → logprob: -12.876007080078125
    7. 'y' → logprob: -13.376007080078125
    8. '(' → logprob: -13.626007080078125
    9. ' ' → logprob: -13.876007080078125
    10. ' a' → logprob: -14.251007080078125

Token 1668: ']*' (ID: 18579)
  Prédit: '*b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*b' → logprob: -0.09917721152305603
    2. '*' → logprob: -2.599177122116089
    3. '*a' → logprob: -3.974177122116089
    4. '*c' → logprob: -7.849177360534668
    5. '*z' → logprob: -8.099177360534668
    6. '**' → logprob: -8.349177360534668
    7. ' *' → logprob: -8.724177360534668
    8. '*v' → logprob: -9.724177360534668
    9. '*h' → logprob: -10.724177360534668
    10. ']*' → logprob: -11.474177360534668

Token 1669: 'b' (ID: 65)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.016059475019574165
    2. 'b' → logprob: -4.141059398651123
    3. ' a' → logprob: -10.766059875488281
    4. 'c' → logprob: -12.891059875488281
    5. '   ' → logprob: -15.141059875488281
    6. ' b' → logprob: -15.266059875488281
    7. '2' → logprob: -15.516059875488281
    8. '#a' → logprob: -15.766059875488281
    9. '
' → logprob: -16.14105987548828
    10. '	a' → logprob: -16.26605987548828

Token 1670: '[' (ID: 58)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.05780098959803581
    2. '[' → logprob: -2.9328010082244873
    3. '*' → logprob: -6.557800769805908
    4. 'a' → logprob: -6.807800769805908
    5. '*a' → logprob: -8.432801246643066
    6. '*b' → logprob: -9.307801246643066
    7. 'b' → logprob: -10.557801246643066
    8. ' ' → logprob: -11.682801246643066
    9. '
' → logprob: -11.682801246643066
    10. '(' → logprob: -11.807801246643066

Token 1671: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0006466718041338027
    2. 'a' → logprob: -7.375646591186523
    3. '   ' → logprob: -12.000646591186523
    4. ' ' → logprob: -12.125646591186523
    5. '  ' → logprob: -12.875646591186523
    6. '
' → logprob: -13.375646591186523
    7. '[' → logprob: -13.625646591186523
    8. '0' → logprob: -14.500646591186523
    9. '```' → logprob: -14.500646591186523
    10. '#' → logprob: -15.125646591186523

Token 1672: ']-' (ID: 27107)
  Prédit: ' -'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.2014746367931366
    2. '-' → logprob: -1.701474666595459
    3. ',' → logprob: -10.0764741897583
    4. '-a' → logprob: -10.9514741897583
    5. 'a' → logprob: -14.2014741897583
    6. ' ' → logprob: -14.7014741897583
    7. '-b' → logprob: -14.9514741897583
    8. '   ' → logprob: -15.3264741897583
    9. ' a' → logprob: -16.951475143432617
    10. ' ,' → logprob: -17.201475143432617

Token 1673: 'a' (ID: 64)
  Prédit: 'a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -2.4391956685576588e-05
    2. ' a' → logprob: -10.625024795532227
    3. 'b' → logprob: -17.750024795532227
    4. '	a' → logprob: -18.250024795532227
    5. '   ' → logprob: -18.500024795532227
    6. ')a' → logprob: -19.500024795532227
    7. ' ' → logprob: -20.000024795532227
    8. '#a' → logprob: -20.000024795532227
    9. '  ' → logprob: -21.250024795532227
    10. '(a' → logprob: -21.625024795532227

Token 1674: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0031847211066633463
    2. '2' → logprob: -5.753184795379639
    3. '0' → logprob: -12.75318431854248
    4. 'a' → logprob: -13.50318431854248
    5. 'b' → logprob: -14.00318431854248
    6. '[
' → logprob: -14.00318431854248
    7. '
' → logprob: -14.87818431854248
    8. '(' → logprob: -15.12818431854248
    9. ' ' → logprob: -15.62818431854248
    10. '1' → logprob: -16.878185272216797

Token 1675: '2' (ID: 17)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.08720551431179047
    2. '2' → logprob: -2.587205410003662
    3. '0' → logprob: -4.962205410003662
    4. '[' → logprob: -7.337205410003662
    5. 'b' → logprob: -7.587205410003662
    6. '   ' → logprob: -9.96220588684082
    7. '-' → logprob: -11.58720588684082
    8. '  ' → logprob: -11.83720588684082
    9. ' a' → logprob: -11.83720588684082
    10. '```' → logprob: -11.83720588684082

Token 1676: ']*' (ID: 18579)
  Prédit: '*b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '*b' → logprob: -0.00866775307804346
    2. 'b' → logprob: -4.758667945861816
    3. '*' → logprob: -9.883667945861816
    4. '[' → logprob: -13.633667945861816
    5. '[b' → logprob: -14.883667945861816
    6. ' b' → logprob: -14.883667945861816
    7. ',b' → logprob: -15.883667945861816
    8. '*a' → logprob: -16.1336669921875
    9. '	b' → logprob: -17.1336669921875
    10. '%b' → logprob: -17.2586669921875

Token 1677: 'b' (ID: 65)
  Prédit: 'b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -6.704273118884885e-07
    2. ' b' → logprob: -14.250000953674316
    3. 'a' → logprob: -17.75
    4. ')b' → logprob: -19.125
    5. '	b' → logprob: -19.625
    6. '_b' → logprob: -20.625
    7. '%b' → logprob: -22.0
    8. '>b' → logprob: -22.25
    9. ''b' → logprob: -23.0
    10. '(b' → logprob: -23.0

Token 1678: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0008051026379689574
    2. '1' → logprob: -7.125804901123047
    3. 'a' → logprob: -15.250804901123047
    4. '0' → logprob: -15.875804901123047
    5. '{' → logprob: -16.625804901123047
    6. '
' → logprob: -16.750804901123047
    7. '(' → logprob: -16.875804901123047
    8. '[
' → logprob: -17.375804901123047
    9. ' [' → logprob: -17.625804901123047
    10. '#' → logprob: -17.625804901123047

Token 1679: '1' (ID: 16)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.49210643768310547
    2. '1' → logprob: -1.1171064376831055
    3. 'b' → logprob: -2.8671064376831055
    4. '0' → logprob: -5.4921064376831055
    5. '[' → logprob: -8.492106437683105
    6. 'c' → logprob: -9.617106437683105
    7. '   ' → logprob: -10.117106437683105
    8. '#' → logprob: -10.117106437683105
    9. ' a' → logprob: -10.242106437683105
    10. '  ' → logprob: -11.242106437683105

Token 1680: '],' (ID: 2155)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.005478844977915287
    2. ',a' → logprob: -5.255478858947754
    3. ',
' → logprob: -8.505478858947754
    4. ' ,' → logprob: -10.380478858947754
    5. ',(' → logprob: -11.755478858947754
    6. ',b' → logprob: -12.880478858947754
    7. 'a' → logprob: -15.005478858947754
    8. ',x' → logprob: -15.505478858947754
    9. ' a' → logprob: -15.630478858947754
    10. ',\
' → logprob: -15.880478858947754

Token 1681: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.023269474506378174
    2. ' a' → logprob: -3.7732694149017334
    3. '-a' → logprob: -10.648269653320312
    4. ' -' → logprob: -15.898269653320312
    5. '	a' → logprob: -15.898269653320312
    6. '(a' → logprob: -16.773269653320312
    7. ' ' → logprob: -17.273269653320312
    8. '   ' → logprob: -17.523269653320312
    9. '_a' → logprob: -18.398269653320312
    10. '-' → logprob: -18.398269653320312

Token 1682: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0024763736873865128
    2. '0' → logprob: -6.002476215362549
    3. '2' → logprob: -14.752476692199707
    4. '[
' → logprob: -15.752476692199707
    5. '(' → logprob: -17.00247573852539
    6. '
' → logprob: -17.50247573852539
    7. '   ' → logprob: -17.50247573852539
    8. ' ' → logprob: -18.25247573852539
    9. '#' → logprob: -18.75247573852539
    10. '```' → logprob: -19.12747573852539

Token 1683: '2' (ID: 17)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0011708177626132965
    2. '2' → logprob: -6.751170635223389
    3. ' ' → logprob: -15.251171112060547
    4. '[' → logprob: -15.501171112060547
    5. '
' → logprob: -16.501171112060547
    6. '   ' → logprob: -17.626171112060547
    7. '```' → logprob: -18.001171112060547
    8. '``' → logprob: -20.126171112060547
    9. '(' → logprob: -20.251171112060547
    10. '  ' → logprob: -20.376171112060547

Token 1684: ']*' (ID: 18579)
  Prédit: '*b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '*b' → logprob: -1.3425219549390022e-05
    2. '[' → logprob: -12.00001335144043
    3. '*a' → logprob: -12.62501335144043
    4. '*' → logprob: -13.50001335144043
    5. 'b' → logprob: -13.75001335144043
    6. '*[' → logprob: -14.00001335144043
    7. '[b' → logprob: -15.12501335144043
    8. '**' → logprob: -16.00001335144043
    9. '*(' → logprob: -16.50001335144043
    10. ' *' → logprob: -16.62501335144043

Token 1685: 'b' (ID: 65)
  Prédit: 'b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -1.9361264946837764e-07
    2. ' b' → logprob: -16.125
    3. ')b' → logprob: -20.625
    4. '	b' → logprob: -20.75
    5. '0' → logprob: -22.75
    6. '[b' → logprob: -23.125
    7. ',b' → logprob: -23.375
    8. '
' → logprob: -24.25
    9. '(b' → logprob: -24.25
    10. ''b' → logprob: -25.0

Token 1686: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.038048259913921356
    2. '0' → logprob: -3.288048267364502
    3. '(' → logprob: -12.288047790527344
    4. '[
' → logprob: -14.413047790527344
    5. '```' → logprob: -15.163047790527344
    6. 'a' → logprob: -15.413047790527344
    7. '
' → logprob: -15.538047790527344
    8. 'def' → logprob: -15.913047790527344
    9. '#' → logprob: -15.913047790527344
    10. '1' → logprob: -16.038047790527344

Token 1687: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -6.158350151963532e-05
    2. 'b' → logprob: -9.875061988830566
    3. 'a' → logprob: -12.125061988830566
    4. '
' → logprob: -12.875061988830566
    5. '[' → logprob: -14.000061988830566
    6. 'c' → logprob: -14.375061988830566
    7. 'o' → logprob: -15.750061988830566
    8. '#' → logprob: -15.875061988830566
    9. 'x' → logprob: -16.12506103515625
    10. '   ' → logprob: -16.12506103515625

Token 1688: ']-' (ID: 27107)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '-' → logprob: -1.1011698246002197
    2. ' -' → logprob: -1.1011698246002197
    3. '-a' → logprob: -1.1011698246002197
    4. '-b' → logprob: -5.976169586181641
    5. '-
' → logprob: -12.47616958618164
    6. '-c' → logprob: -12.47616958618164
    7. 'a' → logprob: -12.60116958618164
    8. '−' → logprob: -13.97616958618164
    9. '-A' → logprob: -14.10116958618164
    10. '–' → logprob: -14.60116958618164

Token 1689: 'a' (ID: 64)
  Prédit: 'a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -1.0206720617134124e-05
    2. ' a' → logprob: -11.50001049041748
    3. '	a' → logprob: -18.750009536743164
    4. '_a' → logprob: -21.000009536743164
    5. '   ' → logprob: -22.125009536743164
    6. '(a' → logprob: -22.500009536743164
    7. ' ' → logprob: -23.000009536743164
    8. '#a' → logprob: -23.000009536743164
    9. '-a' → logprob: -23.750009536743164
    10. ')a' → logprob: -23.750009536743164

Token 1690: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.038073163479566574
    2. '1' → logprob: -3.2880730628967285
    3. '0' → logprob: -10.788073539733887
    4. '{' → logprob: -12.038073539733887
    5. '#' → logprob: -13.288073539733887
    6. '(' → logprob: -13.663073539733887
    7. '```' → logprob: -13.788073539733887
    8. '
' → logprob: -15.163073539733887
    9. '2' → logprob: -15.538073539733887
    10. '   ' → logprob: -16.03807258605957

Token 1691: '0' (ID: 15)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.2726868689060211
    2. '0' → logprob: -2.1476869583129883
    3. '1' → logprob: -2.1476869583129883
    4. '[' → logprob: -5.522686958312988
    5. ' a' → logprob: -7.397686958312988
    6. '   ' → logprob: -9.147686958312988
    7. '```' → logprob: -9.272686958312988
    8. '	a' → logprob: -9.397686958312988
    9. '  ' → logprob: -9.647686958312988
    10. '#' → logprob: -9.897686958312988

Token 1692: ']*' (ID: 18579)
  Prédit: '*b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*b' → logprob: -0.1294478178024292
    2. '[' → logprob: -2.1294479370117188
    3. 'b' → logprob: -6.629447937011719
    4. '*' → logprob: -7.629447937011719
    5. ',b' → logprob: -7.629447937011719
    6. '1' → logprob: -8.629447937011719
    7. '[b' → logprob: -10.254447937011719
    8. '*a' → logprob: -13.379447937011719
    9. '*[' → logprob: -13.504447937011719
    10. ']*' → logprob: -13.629447937011719

Token 1693: 'b' (ID: 65)
  Prédit: 'b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.00317783304490149
    2. 'a' → logprob: -5.753177642822266
    3. 'c' → logprob: -16.378177642822266
    4. ' b' → logprob: -17.503177642822266
    5. '[b' → logprob: -19.503177642822266
    6. '$b' → logprob: -20.128177642822266
    7. '	b' → logprob: -20.878177642822266
    8. ' a' → logprob: -20.878177642822266
    9. '#a' → logprob: -21.128177642822266
    10. '_b' → logprob: -21.128177642822266

Token 1694: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0160544291138649
    2. '1' → logprob: -4.141054630279541
    3. '2' → logprob: -11.016054153442383
    4. '{' → logprob: -13.266054153442383
    5. '(' → logprob: -14.141054153442383
    6. '#' → logprob: -14.766054153442383
    7. '```' → logprob: -15.266054153442383
    8. 'b' → logprob: -15.766054153442383
    9. '   ' → logprob: -16.016054153442383
    10. '
' → logprob: -16.891054153442383

Token 1695: '2' (ID: 17)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0019353042589500546
    2. '2' → logprob: -6.2519354820251465
    3. 'a' → logprob: -12.251935005187988
    4. '
' → logprob: -14.126935005187988
    5. '[' → logprob: -14.376935005187988
    6. 'b' → logprob: -15.126935005187988
    7. ' ' → logprob: -16.251935958862305
    8. '   ' → logprob: -16.501935958862305
    9. '0' → logprob: -16.751935958862305
    10. '{' → logprob: -17.001935958862305

Token 1696: '],' (ID: 2155)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00580756738781929
    2. '[' → logprob: -5.255807399749756
    3. ',a' → logprob: -7.755807399749756
    4. ',b' → logprob: -9.380807876586914
    5. ' ,' → logprob: -10.755807876586914
    6. '1' → logprob: -11.130807876586914
    7. '0' → logprob: -11.505807876586914
    8. 'b' → logprob: -12.255807876586914
    9. 'a' → logprob: -12.630807876586914
    10. ')' → logprob: -12.755807876586914

Token 1697: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -7.493430894101039e-05
    2. ' a' → logprob: -9.500075340270996
    3. '	a' → logprob: -19.00007438659668
    4. '0' → logprob: -20.75007438659668
    5. ' ' → logprob: -21.25007438659668
    6. '(a' → logprob: -21.37507438659668
    7. '-a' → logprob: -21.75007438659668
    8. '_a' → logprob: -21.87507438659668
    9. '#a' → logprob: -22.00007438659668
    10. '   ' → logprob: -22.50007438659668

Token 1698: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -3.702754474943504e-05
    2. '(' → logprob: -10.62503719329834
    3. '0' → logprob: -11.37503719329834
    4. '1' → logprob: -13.62503719329834
    5. '{' → logprob: -18.250036239624023
    6. '#' → logprob: -18.625036239624023
    7. '[
' → logprob: -18.750036239624023
    8. '   ' → logprob: -19.250036239624023
    9. '
' → logprob: -19.500036239624023
    10. '```' → logprob: -19.750036239624023

Token 1699: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0067204674705863
    2. '1' → logprob: -5.006720542907715
    3. 'a' → logprob: -12.381720542907715
    4. '[' → logprob: -15.006720542907715
    5. ' ' → logprob: -15.006720542907715
    6. '   ' → logprob: -16.3817195892334
    7. '  ' → logprob: -17.0067195892334
    8. '```' → logprob: -17.0067195892334
    9. '#' → logprob: -17.1317195892334
    10. ' a' → logprob: -18.0067195892334

Token 1700: ']*' (ID: 18579)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.1660560816526413
    2. '*b' → logprob: -2.5410561561584473
    3. '[' → logprob: -2.6660561561584473
    4. '*a' → logprob: -5.666056156158447
    5. '1' → logprob: -7.416056156158447
    6. '*[' → logprob: -8.166055679321289
    7. ']*' → logprob: -8.291055679321289
    8. '**' → logprob: -10.041055679321289
    9. '```' → logprob: -11.291055679321289
    10. '*v' → logprob: -11.416055679321289

Token 1701: 'b' (ID: 65)
  Prédit: 'b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -1.7432603272027336e-06
    2. '1' → logprob: -13.375001907348633
    3. 'a' → logprob: -15.625001907348633
    4. '	b' → logprob: -17.500001907348633
    5. ' b' → logprob: -17.625001907348633
    6. '(b' → logprob: -19.875001907348633
    7. '
' → logprob: -20.500001907348633
    8. '_b' → logprob: -20.625001907348633
    9. '```' → logprob: -20.625001907348633
    10. '   ' → logprob: -20.875001907348633

Token 1702: '[' (ID: 58)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.772314190864563
    2. '1' → logprob: -1.272314190864563
    3. '[' → logprob: -1.397314190864563
    4. '*b' → logprob: -4.647314071655273
    5. '*a' → logprob: -7.272314071655273
    6. '*[' → logprob: -8.897314071655273
    7. '```' → logprob: -9.772314071655273
    8. ']*' → logprob: -9.772314071655273
    9. 'b' → logprob: -10.647314071655273
    10. '*y' → logprob: -10.772314071655273

Token 1703: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: 0.0
    2. '
' → logprob: -17.375
    3. '[' → logprob: -18.75
    4. 'a' → logprob: -19.5
    5. '１' → logprob: -22.25
    6. '```' → logprob: -22.25
    7. '#' → logprob: -22.375
    8. '(a' → logprob: -22.375
    9. 'b' → logprob: -22.5
    10. '{' → logprob: -22.875

Token 1704: ']-' (ID: 27107)
  Prédit: '-a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-a' → logprob: -0.08546284586191177
    2. '-' → logprob: -2.960462808609009
    3. ' -' → logprob: -3.585462808609009
    4. '-b' → logprob: -6.085463047027588
    5. 'a' → logprob: -9.71046257019043
    6. ']-' → logprob: -10.21046257019043
    7. ' a' → logprob: -12.58546257019043
    8. '()-' → logprob: -12.71046257019043
    9. ' ' → logprob: -13.21046257019043
    10. '–' → logprob: -13.46046257019043

Token 1705: 'a' (ID: 64)
  Prédit: 'a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -1.1756367712223437e-05
    2. ' a' → logprob: -11.500011444091797
    3. 'b' → logprob: -13.375011444091797
    4. '	a' → logprob: -18.750011444091797
    5. '#a' → logprob: -19.750011444091797
    6. '_a' → logprob: -20.500011444091797
    7. ')a' → logprob: -21.375011444091797
    8. '   ' → logprob: -23.000011444091797
    9. '-a' → logprob: -23.375011444091797
    10. ' ' → logprob: -23.375011444091797

Token 1706: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.036108653992414474
    2. '0' → logprob: -3.5361087322235107
    3. '1' → logprob: -5.411108493804932
    4. '2' → logprob: -6.286108493804932
    5. ' ' → logprob: -12.78610897064209
    6. '```' → logprob: -13.28610897064209
    7. ',' → logprob: -14.16110897064209
    8. '(' → logprob: -14.41110897064209
    9. ',a' → logprob: -14.53610897064209
    10. '   ' → logprob: -14.66110897064209

Token 1707: '1' (ID: 16)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.010680858045816422
    2. '1' → logprob: -4.635680675506592
    3. '0' → logprob: -7.135680675506592
    4. ' a' → logprob: -10.01068115234375
    5. '	a' → logprob: -10.38568115234375
    6. '#a' → logprob: -11.38568115234375
    7. 'b' → logprob: -11.88568115234375
    8. ')a' → logprob: -12.01068115234375
    9. '$a' → logprob: -12.51068115234375
    10. 'c' → logprob: -12.51068115234375

Token 1708: ']*' (ID: 18579)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.00028743778239004314
    2. '0' → logprob: -8.250287055969238
    3. 'b' → logprob: -10.625287055969238
    4. '][' → logprob: -14.000287055969238
    5. '[b' → logprob: -14.750287055969238
    6. '2' → logprob: -15.500287055969238
    7. 'a' → logprob: -15.750287055969238
    8. ']' → logprob: -16.875288009643555
    9. '*b' → logprob: -17.000288009643555
    10. '*' → logprob: -17.375288009643555

Token 1709: 'b' (ID: 65)
  Prédit: 'b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -3.3213025744771585e-05
    2. 'a' → logprob: -10.375033378601074
    3. ' b' → logprob: -13.500033378601074
    4. '0' → logprob: -14.875033378601074
    5. '	b' → logprob: -16.250032424926758
    6. '$b' → logprob: -17.000032424926758
    7. ')b' → logprob: -18.125032424926758
    8. '_b' → logprob: -18.625032424926758
    9. '*b' → logprob: -19.000032424926758
    10. ''b' → logprob: -19.375032424926758

Token 1710: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0028098674956709146
    2. '0' → logprob: -5.877810001373291
    3. '2' → logprob: -12.377809524536133
    4. '```' → logprob: -15.252809524536133
    5. ',' → logprob: -15.377809524536133
    6. ')' → logprob: -15.752809524536133
    7. '[
' → logprob: -15.877809524536133
    8. '#' → logprob: -17.252809524536133
    9. '
' → logprob: -17.377809524536133
    10. ' [' → logprob: -17.627809524536133

Token 1711: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -7.896309739408025e-07
    2. '2' → logprob: -15.125000953674316
    3. 'a' → logprob: -15.875000953674316
    4. '1' → logprob: -16.0
    5. ' ' → logprob: -16.125
    6. '[' → logprob: -16.5
    7. 'c' → logprob: -17.125
    8. '```' → logprob: -17.875
    9. '   ' → logprob: -18.625
    10. '{' → logprob: -19.125

Token 1712: '])

' (ID: 21045)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -9.968312951968983e-06
    2. '})' → logprob: -12.375009536743164
    3. '])' → logprob: -12.875009536743164
    4. '))' → logprob: -13.000009536743164
    5. ' )' → logprob: -15.750009536743164
    6. '>)' → logprob: -15.875009536743164
    7. '())' → logprob: -16.125009536743164
    8. '`)' → logprob: -16.250009536743164
    9. ')")' → logprob: -16.375009536743164
    10. ')
' → logprob: -17.250009536743164

Token 1713: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -3.1782583391759545e-05
    2. '```' → logprob: -10.375031471252441
    3. '
' → logprob: -15.750031471252441
    4. ' def' → logprob: -16.250032424926758
    5. 'ndef' → logprob: -16.500032424926758
    6. '	def' → logprob: -17.875032424926758
    7. ':def' → logprob: -17.875032424926758
    8. '``' → logprob: -17.875032424926758
    9. '>' → logprob: -18.500032424926758
    10. '\' → logprob: -18.625032424926758

Token 1714: ' length' (ID: 5517)
  Prédit: 'normalize'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'normalize' → logprob: -0.010992409661412239
    2. 'length' → logprob: -5.385992527008057
    3. 'vector' → logprob: -5.885992527008057
    4. 'math' → logprob: -6.010992527008057
    5. ' normalize' → logprob: -7.635992527008057
    6. 'def' → logprob: -8.385992050170898
    7. 'sqrt' → logprob: -8.385992050170898
    8. 'norm' → logprob: -9.760992050170898
    9. 'scalar' → logprob: -10.510992050170898
    10. ' vector' → logprob: -10.510992050170898

Token 1715: '(v' (ID: 6932)
  Prédit: '(a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.0033039047848433256
    2. '(' → logprob: -5.8783040046691895
    3. '(tuple' → logprob: -8.628303527832031
    4. '(vector' → logprob: -8.753303527832031
    5. '<|end|>' → logprob: -9.878303527832031
    6. '((' → logprob: -10.878303527832031
    7. '(v' → logprob: -11.253303527832031
    8. '(x' → logprob: -11.378303527832031
    9. '(vec' → logprob: -11.378303527832031
    10. ' (' → logprob: -11.378303527832031

Token 1716: '):
' (ID: 1883)
  Prédit: '(v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(v' → logprob: -0.00024965754710137844
    2. '(' → logprob: -8.875249862670898
    3. '):' → logprob: -10.000249862670898
    4. '):
' → logprob: -10.500249862670898
    5. '(tuple' → logprob: -11.375249862670898
    6. ' (' → logprob: -12.000249862670898
    7. '(vector' → logprob: -12.250249862670898
    8. 'v' → logprob: -12.625249862670898
    9. ')' → logprob: -12.875249862670898
    10. ')(' → logprob: -13.375249862670898

Token 1717: '   ' (ID: 271)
  Prédit: '(math'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(math' → logprob: -1.1169019937515259
    2. 'return' → logprob: -1.3669019937515259
    3. 'math' → logprob: -1.8669019937515259
    4. '(' → logprob: -2.1169018745422363
    5. ' math' → logprob: -2.3669018745422363
    6. ' return' → logprob: -4.116901874542236
    7. '(v' → logprob: -4.616901874542236
    8. ' (' → logprob: -4.866901874542236
    9. '(
' → logprob: -5.741901874542236
    10. '   ' → logprob: -5.741901874542236

Token 1718: ' return' (ID: 622)
  Prédit: 'math'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'math' → logprob: -0.00785479974001646
    2. ' math' → logprob: -5.25785493850708
    3. '(math' → logprob: -6.00785493850708
    4. 'return' (adapté à ' return') → logprob: -8.757854461669922
    5. 'sum' → logprob: -15.382854461669922
    6. ' return' → logprob: -15.382854461669922
    7. '(' → logprob: -15.757854461669922
    8. '   ' → logprob: -16.007854461669922
    9. 'm' → logprob: -16.257854461669922
    10. 'import' → logprob: -16.257854461669922

Token 1719: ' math' (ID: 13324)
  Prédit: 'math'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'math' → logprob: -0.04450717940926552
    2. ' math' → logprob: -3.2945072650909424
    3. '(math' → logprob: -5.044507026672363
    4. '(' → logprob: -16.41950798034668
    5. 'sum' → logprob: -16.41950798034668
    6. ' (' → logprob: -16.91950798034668
    7. '.math' → logprob: -17.16950798034668
    8. '/math' → logprob: -19.16950798034668
    9. '_math' → logprob: -19.79450798034668
    10. 'm' → logprob: -19.79450798034668

Token 1720: '.sqrt' (ID: 38011)
  Prédit: '.sqrt'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.sqrt' → logprob: -0.0036355883348733187
    2. '.' → logprob: -5.628635406494141
    3. '.s' → logprob: -10.50363540649414
    4. '.Sqrt' → logprob: -12.00363540649414
    5. '.h' → logprob: -13.87863540649414
    6. 'sqrt' → logprob: -15.12863540649414
    7. '.pow' → logprob: -15.62863540649414
    8. '.f' → logprob: -16.12863540649414
    9. '.dist' → logprob: -16.50363540649414
    10. '.linalg' → logprob: -16.62863540649414

Token 1721: '(dot' (ID: 151841)
  Prédit: '(sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(sum' → logprob: -0.0004428243264555931
    2. 'sum' → logprob: -8.750442504882812
    3. '(dot' → logprob: -8.750442504882812
    4. '(v' → logprob: -9.000442504882812
    5. '(' → logprob: -13.375442504882812
    6. '(x' → logprob: -14.375442504882812
    7. '=sum' → logprob: -15.750442504882812
    8. 'dot' → logprob: -16.125442504882812
    9. '(s' → logprob: -16.375442504882812
    10. '((' → logprob: -17.000442504882812

Token 1722: '(v' (ID: 6932)
  Prédit: '(v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(v' → logprob: -5.200166469876422e-06
    2. 'v' → logprob: -12.250004768371582
    3. '(' → logprob: -15.000004768371582
    4. ' (' → logprob: -20.5000057220459
    5. ',v' → logprob: -20.5000057220459
    6. ' v' → logprob: -21.0000057220459
    7. '(
' → logprob: -21.1250057220459
    8. ')v' → logprob: -21.1250057220459
    9. ')' → logprob: -21.3750057220459
    10. '	v' → logprob: -21.5000057220459

Token 1723: ',v' (ID: 30680)
  Prédit: '(v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(v' → logprob: -0.014193123206496239
    2. 'v' → logprob: -4.264193058013916
    3. ',v' → logprob: -10.514193534851074
    4. ',' → logprob: -13.264193534851074
    5. '(' → logprob: -14.764193534851074
    6. ')' → logprob: -15.764193534851074
    7. ')v' → logprob: -16.639192581176758
    8. ' v' → logprob: -16.764192581176758
    9. '<v' → logprob: -17.639192581176758
    10. '
' → logprob: -17.639192581176758

Token 1724: '))

' (ID: 9746)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.00019972586596850306
    2. ')' → logprob: -8.750199317932129
    3. '))
' → logprob: -11.000199317932129
    4. '(v' → logprob: -11.250199317932129
    5. '))

' → logprob: -12.750199317932129
    6. ')v' → logprob: -12.750199317932129
    7. '()))' → logprob: -13.125199317932129
    8. ' ))' → logprob: -13.250199317932129
    9. 'v' → logprob: -13.875199317932129
    10. ')))' → logprob: -14.250199317932129

Token 1725: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -3.292907877039397e-06
    2. '```' → logprob: -12.87500286102295
    3. ' def' → logprob: -14.12500286102295
    4. 'Def' → logprob: -18.500003814697266
    5. '``' → logprob: -18.500003814697266
    6. '
' → logprob: -20.250003814697266
    7. '	def' → logprob: -20.750003814697266
    8. '\' → logprob: -21.625003814697266
    9. '_def' → logprob: -21.750003814697266
    10. 'ndef' → logprob: -21.875003814697266

Token 1726: ' normalize' (ID: 44464)
  Prédit: 'normalize'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'normalize' → logprob: -7.896309739408025e-07
    2. ' normalize' → logprob: -14.250000953674316
    3. 'scalar' → logprob: -18.75
    4. 'vector' → logprob: -20.75
    5. '.normalize' → logprob: -21.25
    6. 'normalized' → logprob: -21.25
    7. 'normal' → logprob: -21.875
    8. 'norm' → logprob: -22.75
    9. 'scale' → logprob: -23.125
    10. 'unit' → logprob: -23.375

Token 1727: '(v' (ID: 6932)
  Prédit: '(v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(v' → logprob: -0.026358237490057945
    2. '(' → logprob: -3.651358127593994
    3. ' (' → logprob: -10.276358604431152
    4. '(vector' → logprob: -11.901358604431152
    5. '(lambda' → logprob: -12.026358604431152
    6. '(value' → logprob: -12.026358604431152
    7. '(tuple' → logprob: -14.401358604431152
    8. '(Vector' → logprob: -14.526358604431152
    9. '(vec' → logprob: -14.526358604431152
    10. '(n' → logprob: -14.651358604431152

Token 1728: '):
' (ID: 1883)
  Prédit: '(v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(v' → logprob: -0.0010367410723119974
    2. '):' → logprob: -7.251036643981934
    3. '):
' → logprob: -8.251036643981934
    4. ')' → logprob: -10.376036643981934
    5. '(' → logprob: -10.876036643981934
    6. ')v' → logprob: -12.251036643981934
    7. ')(' → logprob: -12.376036643981934
    8. 'v' → logprob: -12.876036643981934
    9. ' (' → logprob: -13.126036643981934
    10. ',v' → logprob: -14.376036643981934

Token 1729: '   ' (ID: 271)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -1.0976548194885254
    2. ' def' → logprob: -1.2226548194885254
    3. 'tuple' → logprob: -1.7226548194885254
    4. ' v' → logprob: -3.0976548194885254
    5. ' tuple' → logprob: -3.2226548194885254
    6. 'v' → logprob: -3.2226548194885254
    7. 'vector' → logprob: -3.4726548194885254
    8. 'return' → logprob: -4.222654819488525
    9. '   ' → logprob: -5.347654819488525
    10. ' vector' → logprob: -5.472654819488525

Token 1730: ' l' (ID: 305)
  Prédit: 'tuple'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'tuple' → logprob: -0.04394116625189781
    2. 'scalar' → logprob: -3.5439412593841553
    3. ' tuple' → logprob: -4.918941020965576
    4. 'vector' → logprob: -5.668941020965576
    5. 'lambda' → logprob: -5.918941020965576
    6. ' scalar' → logprob: -7.668941020965576
    7. 'def' → logprob: -9.793941497802734
    8. ' vector' → logprob: -10.543941497802734
    9. '(tuple' → logprob: -10.543941497802734
    10. 'x' → logprob: -10.668941497802734

Token 1731: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.48884889483451843
    2. '=' → logprob: -1.4888489246368408
    3. '(v' → logprob: -1.9888489246368408
    4. '=v' → logprob: -3.738848924636841
    5. 'v' → logprob: -8.863848686218262
    6. 'ength' → logprob: -9.113848686218262
    7. '=(' → logprob: -9.613848686218262
    8. '(' → logprob: -10.988848686218262
    9. '_v' → logprob: -11.238848686218262
    10. '   ' → logprob: -11.738848686218262

Token 1732: ' length' (ID: 5517)
  Prédit: 'length'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'length' → logprob: -0.0007105246186256409
    2. ' length' → logprob: -7.250710487365723
    3. '(length' → logprob: -14.500710487365723
    4. 'len' → logprob: -19.50071144104004
    5. '1' → logprob: -19.75071144104004
    6. 'leng' → logprob: -20.50071144104004
    7. 'ength' → logprob: -20.62571144104004
    8. 'l' → logprob: -20.87571144104004
    9. '	length' → logprob: -20.87571144104004
    10. 'max' → logprob: -20.87571144104004

Token 1733: '(v' (ID: 6932)
  Prédit: '(v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(v' → logprob: -7.896309739408025e-07
    2. '(' → logprob: -14.125000953674316
    3. ' (' → logprob: -17.0
    4. '(
' → logprob: -18.125
    5. 'v' → logprob: -18.375
    6. '(u' → logprob: -21.25
    7. '(value' → logprob: -21.375
    8. '(s' → logprob: -21.75
    9. '<v' → logprob: -21.875
    10. '(x' → logprob: -22.0

Token 1734: ')
' (ID: 446)
  Prédit: '(v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(v' → logprob: -0.05758156627416611
    2. ')' → logprob: -3.557581663131714
    3. 'v' → logprob: -3.807581663131714
    4. ')
' → logprob: -5.307581424713135
    5. ')v' → logprob: -8.557581901550293
    6. ' v' → logprob: -9.432581901550293
    7. '   ' → logprob: -12.182581901550293
    8. '(' → logprob: -12.682581901550293
    9. '	v' → logprob: -12.932581901550293
    10. 'if' → logprob: -13.432581901550293

Token 1735: '   ' (ID: 271)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.2965236008167267
    2. ' if' → logprob: -1.5465235710144043
    3. '(v' → logprob: -3.6715235710144043
    4. 'v' → logprob: -4.296523571014404
    5. 'return' → logprob: -6.546523571014404
    6. ' v' → logprob: -6.796523571014404
    7. 'None' → logprob: -7.546523571014404
    8. '   ' → logprob: -7.796523571014404
    9. ' /' → logprob: -8.296524047851562
    10. '(' → logprob: -8.296524047851562

Token 1736: ' if' (ID: 538)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.29572534561157227
    2. 'if' (adapté à ' if') → logprob: -1.9207253456115723
    3. ' v' → logprob: -2.6707253456115723
    4. 'return' → logprob: -3.6707253456115723
    5. ' if' → logprob: -4.420725345611572
    6. '(v' → logprob: -6.545725345611572
    7. ' return' → logprob: -7.670725345611572
    8. ' (' → logprob: -8.420724868774414
    9. '0' → logprob: -8.795724868774414
    10. '(' → logprob: -8.795724868774414

Token 1737: ' l' (ID: 305)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.0015023599844425917
    2. ' l' → logprob: -6.501502513885498
    3. 'v' → logprob: -17.376502990722656
    4. '0' → logprob: -17.876502990722656
    5. '	l' → logprob: -18.376502990722656
    6. '   ' → logprob: -19.126502990722656
    7. '(l' → logprob: -20.251502990722656
    8. ' ' → logprob: -21.126502990722656
    9. '_l' → logprob: -21.501502990722656
    10. ' v' → logprob: -22.001502990722656

Token 1738: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.6932055950164795
    2. ' ==' → logprob: -0.6932055950164795
    3. '=' → logprob: -10.943205833435059
    4. ' <' → logprob: -10.943205833435059
    5. '0' → logprob: -11.568205833435059
    6. '<' → logprob: -12.318205833435059
    7. ')==' → logprob: -12.693205833435059
    8. '===' → logprob: -13.443205833435059
    9. '()==' → logprob: -13.443205833435059
    10. ' =' → logprob: -14.068205833435059

Token 1739: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.1472419600977446e-06
    2. ' ' → logprob: -13.750000953674316
    3. '۰' → logprob: -23.250001907348633
    4. '=' → logprob: -25.375001907348633
    5. '<|end|>' → logprob: -25.750001907348633
    6. '٠' → logprob: -26.500001907348633
    7. '   ' → logprob: -26.625001907348633
    8. '```' → logprob: -26.625001907348633
    9. '０' → logprob: -26.750001907348633
    10. ' ' → logprob: -27.125001907348633

Token 1740: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.339278580620885e-06
    2. ' ' → logprob: -13.000001907348633
    3. '=' → logprob: -19.750001907348633
    4. '۰' → logprob: -21.125001907348633
    5. '   ' → logprob: -21.625001907348633
    6. 's' → logprob: -21.875001907348633
    7. '(' → logprob: -22.625001907348633
    8. '>' → logprob: -23.125001907348633
    9. '٠' → logprob: -23.500001907348633
    10. '<|end|>' → logprob: -23.500001907348633

Token 1741: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0927656888961792
    2. ':
' → logprob: -2.4677658081054688
    3. ':return' → logprob: -5.592765808105469
    4. '.' → logprob: -9.717765808105469
    5. ' :' → logprob: -11.217765808105469
    6. ' or' → logprob: -11.467765808105469
    7. ' :
' → logprob: -12.467765808105469
    8. ':
' → logprob: -13.467765808105469
    9. '   ' → logprob: -13.717765808105469
    10. 'return' → logprob: -14.217765808105469

Token 1742: '       ' (ID: 309)
  Prédit: 'raise'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'raise' → logprob: -1.0349924564361572
    2. ' raise' → logprob: -1.1599924564361572
    3. '   ' → logprob: -1.2849924564361572
    4. '0' → logprob: -3.5349924564361572
    5. '    ' → logprob: -4.409992218017578
    6. '       ' → logprob: -4.534992218017578
    7. '1' → logprob: -7.284992218017578
    8. 'None' → logprob: -7.534992218017578
    9. 'return' → logprob: -7.659992218017578
    10. ' None' → logprob: -8.284992218017578

Token 1743: ' raise' (ID: 9338)
  Prédit: 'raise'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'raise' (adapté à ' raise') → logprob: -0.21187321841716766
    2. ' raise' → logprob: -1.711873173713684
    3. 'return' → logprob: -4.7118730545043945
    4. ' return' → logprob: -6.5868730545043945
    5. '1' → logprob: -11.086873054504395
    6. '   ' → logprob: -11.086873054504395
    7. '0' → logprob: -12.211873054504395
    8. '    ' → logprob: -13.711873054504395
    9. '	raise' → logprob: -13.961873054504395
    10. '
' → logprob: -14.711873054504395

Token 1744: ' Value' (ID: 9963)
  Prédit: 'Value'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Value' → logprob: -0.0002819544170051813
    2. ' Value' → logprob: -8.750282287597656
    3. 'Zero' → logprob: -9.000282287597656
    4. '_value' → logprob: -16.875282287597656
    5. '(Value' → logprob: -17.625282287597656
    6. 'Vector' → logprob: -18.125282287597656
    7. 'value' → logprob: -18.250282287597656
    8. '	Value' → logprob: -18.500282287597656
    9. '.Value' → logprob: -19.375282287597656
    10. '_Value' → logprob: -19.500282287597656

Token 1745: 'Error' (ID: 2255)
  Prédit: 'Error'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Error' → logprob: -6.704273118884885e-07
    2. 'rror' → logprob: -14.500000953674316
    3. 'Value' → logprob: -16.0
    4. 'SError' → logprob: -18.375
    5. 'LError' → logprob: -20.0
    6. 'Output' → logprob: -20.875
    7. ' Error' → logprob: -22.0
    8. '	Error' → logprob: -22.125
    9. 'Exception' → logprob: -22.25
    10. '_Error' → logprob: -22.375

Token 1746: '("' (ID: 568)
  Prédit: '("'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '("' → logprob: -7.226628895296017e-06
    2. '(' → logprob: -12.000007629394531
    3. '"' → logprob: -14.125007629394531
    4. '('' → logprob: -15.375007629394531
    5. '("("' → logprob: -19.25000762939453
    6. '("'' → logprob: -20.00000762939453
    7. '("(' → logprob: -20.00000762939453
    8. '(f' → logprob: -20.12500762939453
    9. '("")' → logprob: -20.37500762939453
    10. '(
' → logprob: -20.62500762939453

Token 1747: 'Zero' (ID: 20870)
  Prédit: 'Cannot'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Cannot' → logprob: -0.2712819576263428
    2. 'Vector' → logprob: -2.2712819576263428
    3. 'Zero' → logprob: -2.5212819576263428
    4. '"' → logprob: -4.146282196044922
    5. 'Division' → logprob: -4.771282196044922
    6. ' vector' → logprob: -5.021282196044922
    7. 'vector' → logprob: -5.146282196044922
    8. 'v' → logprob: -5.521282196044922
    9. '(' → logprob: -6.021282196044922
    10. ' Cannot' → logprob: -6.146282196044922

Token 1748: ' length' (ID: 5517)
  Prédit: ' vector'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' vector' → logprob: -0.1777079552412033
    2. ' length' → logprob: -2.1777079105377197
    3. '-length' → logprob: -3.3027079105377197
    4. 'Division' → logprob: -5.302708148956299
    5. 'Vector' → logprob: -5.677708148956299
    6. ' division' → logprob: -5.802708148956299
    7. 'Length' → logprob: -7.177708148956299
    8. 'vector' → logprob: -8.55270767211914
    9. 'length' → logprob: -8.92770767211914
    10. 'division' → logprob: -9.80270767211914

Token 1749: ' vector' (ID: 9727)
  Prédit: ' vector'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' vector' → logprob: -0.012531552463769913
    2. 'vector' → logprob: -4.387531757354736
    3. 'v' → logprob: -11.762531280517578
    4. '_vector' → logprob: -12.262531280517578
    5. 'Vector' → logprob: -12.512531280517578
    6. ' ' → logprob: -13.262531280517578
    7. '-vector' → logprob: -14.262531280517578
    8. 'vec' → logprob: -14.512531280517578
    9. ' Vector' → logprob: -14.637531280517578
    10. ' ' → logprob: -14.887531280517578

Token 1750: '")
' (ID: 1896)
  Prédit: '")'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '")' → logprob: -0.07567276805639267
    2. '")
' → logprob: -2.7006728649139404
    3. ' cannot' → logprob: -5.325672626495361
    4. ')")
' → logprob: -8.57567310333252
    5. ')' → logprob: -8.70067310333252
    6. ')")' → logprob: -9.32567310333252
    7. ' vector' → logprob: -9.57567310333252
    8. ' encountered' → logprob: -9.70067310333252
    9. ' for' → logprob: -9.95067310333252
    10. ' is' → logprob: -10.07567310333252

Token 1751: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8016285300254822
    2. ' return' → logprob: -0.8016285300254822
    3. 'return' → logprob: -2.301628589630127
    4. '```' → logprob: -6.551628589630127
    5. '
' → logprob: -7.801628589630127
    6. 'v' → logprob: -8.926628112792969
    7. ':return' → logprob: -8.926628112792969
    8. '	return' → logprob: -9.051628112792969
    9. '  ' → logprob: -9.301628112792969
    10. '       ' → logprob: -9.301628112792969

Token 1752: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.26056018471717834
    2. ' return' → logprob: -1.510560154914856
    3. '   ' → logprob: -4.760560035705566
    4. '	return' → logprob: -10.760560035705566
    5. '```' → logprob: -12.260560035705566
    6. ')return' → logprob: -13.260560035705566
    7. 'def' → logprob: -13.385560035705566
    8. ':return' → logprob: -14.010560035705566
    9. '{return' → logprob: -14.260560035705566
    10. 'eturn' → logprob: -14.385560035705566

Token 1753: ' tuple' (ID: 31311)
  Prédit: 'tuple'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tuple' → logprob: -0.057463161647319794
    2. ' tuple' → logprob: -3.3074631690979004
    3. '(tuple' → logprob: -4.1824631690979
    4. '(' → logprob: -6.1824631690979
    5. '(x' → logprob: -6.3074631690979
    6. ' (' → logprob: -10.182462692260742
    7. '(v' → logprob: -10.557462692260742
    8. '(vector' → logprob: -11.557462692260742
    9. 'vector' → logprob: -11.682462692260742
    10. '(s' → logprob: -14.432462692260742

Token 1754: '(x' (ID: 4061)
  Prédit: '(x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.000727325037587434
    2. '(c' → logprob: -8.375727653503418
    3. '(coord' → logprob: -8.375727653503418
    4. 'x' → logprob: -8.625727653503418
    5. '(' → logprob: -9.625727653503418
    6. '(component' → logprob: -11.375727653503418
    7. '(co' → logprob: -12.375727653503418
    8. '(comp' → logprob: -13.125727653503418
    9. 'coord' → logprob: -13.500727653503418
    10. 'component' → logprob: -14.875727653503418

Token 1755: '/l' (ID: 16347)
  Prédit: '/'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '/' → logprob: -0.03819410875439644
    2. ' /' → logprob: -3.288194179534912
    3. '/l' → logprob: -8.788193702697754
    4. '/
' → logprob: -17.03819465637207
    5. 'l' → logprob: -17.16319465637207
    6. '   ' → logprob: -17.66319465637207
    7. 'v' → logprob: -17.78819465637207
    8. ' ' → logprob: -18.53819465637207
    9. ')' → logprob: -18.66319465637207
    10. '0' → logprob: -19.03819465637207

Token 1756: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.03168141469359398
    2. 'for' → logprob: -3.5316812992095947
    3. 'or' → logprob: -6.281681537628174
    4. ' ' → logprob: -10.406681060791016
    5. '	for' → logprob: -11.406681060791016
    6. ' or' → logprob: -12.031681060791016
    7. ')' → logprob: -12.531681060791016
    8. '   ' → logprob: -13.031681060791016
    9. ',' → logprob: -13.531681060791016
    10. '*' → logprob: -14.406681060791016

Token 1757: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.005240037105977535
    2. 'v' → logprob: -5.255239963531494
    3. ' x' → logprob: -12.005240440368652
    4. ' v' → logprob: -16.755239486694336
    5. '(x' → logprob: -18.505239486694336
    6. '<|end|>' → logprob: -18.755239486694336
    7. '
' → logprob: -19.255239486694336
    8. '<|end|>' → logprob: -19.380239486694336
    9. '	x' → logprob: -19.505239486694336
    10. 'w' → logprob: -20.255239486694336

Token 1758: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.5759824514389038
    2. ' in' → logprob: -0.8259824514389038
    3. 'v' → logprob: -10.575982093811035
    4. 'x' → logprob: -11.450982093811035
    5. 'i' → logprob: -13.825982093811035
    6. 's' → logprob: -13.825982093811035
    7. 'n' → logprob: -14.075982093811035
    8. 'ins' → logprob: -14.075982093811035
    9. 'import' → logprob: -14.450982093811035
    10. 'inx' → logprob: -14.575982093811035

Token 1759: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -3.128163257315464e-07
    2. ' v' → logprob: -15.5
    3. '	v' → logprob: -21.5
    4. '(v' → logprob: -22.5
    5. ')v' → logprob: -23.625
    6. '.v' → logprob: -26.25
    7. '$v' → logprob: -26.375
    8. '_v' → logprob: -26.625
    9. '
' → logprob: -26.875
    10. '[v' → logprob: -27.375

Token 1760: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00022678142704535276
    2. ' )' → logprob: -9.250226974487305
    3. ')v' → logprob: -9.750226974487305
    4. 'v' → logprob: -10.625226974487305
    5. 'in' → logprob: -10.750226974487305
    6. '):' → logprob: -11.250226974487305
    7. ')x' → logprob: -12.875226974487305
    8. ' in' → logprob: -13.125226974487305
    9. ')}' → logprob: -13.250226974487305
    10. '))' → logprob: -13.500226974487305

Token 1761: 'def' (ID: 1314)
  Prédit: 'class'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'class' → logprob: -0.5502294301986694
    2. '
' → logprob: -1.6752294301986694
    3. '<|end|>' → logprob: -1.9252294301986694
    4. '#' → logprob: -2.550229549407959
    5. '<|end|>' → logprob: -4.675229549407959
    6. '

' → logprob: -6.550229549407959
    7. ' class' → logprob: -7.050229549407959
    8. '```' → logprob: -8.4252290725708
    9. '


' → logprob: -10.4252290725708
    10. 'import' → logprob: -10.5502290725708

Token 1762: ' angle' (ID: 16538)
  Prédit: 'scalar'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'scalar' → logprob: -0.20993532240390778
    2. ' scalar' → logprob: -1.9599353075027466
    3. 'vector' → logprob: -3.334935426712036
    4. ' vector' → logprob: -4.709935188293457
    5. 'main' → logprob: -7.584935188293457
    6. 'is' → logprob: -7.834935188293457
    7. 'cl' → logprob: -7.834935188293457
    8. 'angle' → logprob: -8.334935188293457
    9. ' clamp' → logprob: -8.334935188293457
    10. 'round' → logprob: -8.584935188293457

Token 1763: '_between' (ID: 124874)
  Prédit: '_between'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_between' → logprob: -0.07415276765823364
    2. '_' → logprob: -2.699152708053589
    3. '(' → logprob: -5.949152946472168
    4. '_diff' → logprob: -7.699152946472168
    5. '_angle' → logprob: -8.824152946472168
    6. '(a' → logprob: -8.949152946472168
    7. '_vector' → logprob: -8.949152946472168
    8. '_to' → logprob: -8.949152946472168
    9. '_difference' → logprob: -9.074152946472168
    10. '_(' → logprob: -9.699152946472168

Token 1764: '_vectors' (ID: 129121)
  Prédit: '(a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.18277205526828766
    2. '(v' → logprob: -2.432772159576416
    3. '(u' → logprob: -3.182772159576416
    4. '(' → logprob: -3.682772159576416
    5. '_vectors' → logprob: -4.932772159576416
    6. 'vectors' → logprob: -5.807772159576416
    7. 'v' → logprob: -7.182772159576416
    8. ' vectors' → logprob: -7.682772159576416
    9. '(
' → logprob: -8.182771682739258
    10. 'def' → logprob: -8.557771682739258

Token 1765: '_deg' (ID: 144310)
  Prédit: '(a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.0046955798752605915
    2. '(v' → logprob: -5.504695415496826
    3. '(' → logprob: -7.504695415496826
    4. '(u' → logprob: -10.254695892333984
    5. ' (' → logprob: -10.754695892333984
    6. 'def' → logprob: -12.379695892333984
    7. '(
' → logprob: -13.379695892333984
    8. '(A' → logprob: -13.629695892333984
    9. '(b' → logprob: -14.629695892333984
    10. '(x' → logprob: -14.879695892333984

Token 1766: '(u' (ID: 17057)
  Prédit: '(a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.0012744003906846046
    2. '(' → logprob: -6.876274585723877
    3. '(v' → logprob: -8.376274108886719
    4. '(u' → logprob: -12.126274108886719
    5. ' (' → logprob: -12.751274108886719
    6. 'def' → logprob: -13.251274108886719
    7. '(A' → logprob: -14.501274108886719
    8. '(
' → logprob: -15.376274108886719
    9. '(x' → logprob: -16.50127410888672
    10. '(def' → logprob: -16.50127410888672

Token 1767: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0006974232383072376
    2. ' ,' → logprob: -8.250697135925293
    3. ',a' → logprob: -9.000697135925293
    4. ',v' → logprob: -9.500697135925293
    5. ',b' → logprob: -9.750697135925293
    6. ',u' → logprob: -9.875697135925293
    7. '(' → logprob: -10.000697135925293
    8. '_,' → logprob: -10.375697135925293
    9. 's' → logprob: -11.375697135925293
    10. 'a' → logprob: -11.875697135925293

Token 1768: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -1.700132997939363e-05
    2. ' v' → logprob: -11.000017166137695
    3. 'w' → logprob: -15.250017166137695
    4. '	v' → logprob: -17.375017166137695
    5. '   ' → logprob: -19.000017166137695
    6. 'u' → logprob: -20.500017166137695
    7. '(v' → logprob: -21.375017166137695
    8. '```' → logprob: -22.125017166137695
    9. 't' → logprob: -22.500017166137695
    10. '_v' → logprob: -22.625017166137695

Token 1769: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.4751012325286865
    2. '):
' → logprob: -0.9751012325286865
    3. ')' → logprob: -7.475101470947266
    4. ',' → logprob: -8.600101470947266
    5. ' ):' → logprob: -9.225101470947266
    6. '):
' → logprob: -9.475101470947266
    7. ' ):
' → logprob: -10.600101470947266
    8. '   ' → logprob: -10.850101470947266
    9. '):

' → logprob: -11.100101470947266
    10. '(' → logprob: -11.100101470947266

Token 1770: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.017610130831599236
    2. 'return' → logprob: -4.2676100730896
    3. ' return' → logprob: -6.2676100730896
    4. 'def' → logprob: -7.5176100730896
    5. '```' → logprob: -8.267610549926758
    6. 'a' → logprob: -8.892610549926758
    7. '    ' → logprob: -9.142610549926758
    8. '{
' → logprob: -9.517610549926758
    9. '`' → logprob: -9.767610549926758
    10. '``' → logprob: -10.142610549926758

Token 1771: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.26442596316337585
    2. 'a' → logprob: -2.3894259929656982
    3. 'vector' → logprob: -2.8894259929656982
    4. 'def' → logprob: -3.1394259929656982
    5. 'v' → logprob: -4.389425754547119
    6. 'u' → logprob: -4.389425754547119
    7. '   ' → logprob: -5.264425754547119
    8. 't' → logprob: -5.264425754547119
    9. ' return' → logprob: -6.014425754547119
    10. 'max' → logprob: -7.389425754547119

Token 1772: ' math' (ID: 13324)
  Prédit: 'T'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'T' → logprob: -0.05765819922089577
    2. 'math' → logprob: -2.9326581954956055
    3. ' T' → logprob: -6.6826581954956055
    4. 'vector' → logprob: -6.9326581954956055
    5. ' math' → logprob: -8.307658195495605
    6. 'self' → logprob: -8.932658195495605
    7. 'float' → logprob: -9.682658195495605
    8. '   ' → logprob: -9.932658195495605
    9. 'max' → logprob: -11.307658195495605
    10. 'abs' → logprob: -11.557658195495605

Token 1773: '.de' (ID: 3906)
  Prédit: '.ac'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.ac' → logprob: -0.029833558946847916
    2. '.de' → logprob: -3.5298335552215576
    3. '.' → logprob: -10.154833793640137
    4. '.atan' → logprob: -10.154833793640137
    5. ' .' → logprob: -13.779833793640137
    6. '_de' → logprob: -14.029833793640137
    7. '_ac' → logprob: -14.029833793640137
    8. '.cos' → logprob: -14.029833793640137
    9. '.angle' → logprob: -14.654833793640137
    10. '.dist' → logprob: -15.529833793640137

Token 1774: 'grees' (ID: 86997)
  Prédit: 'grees'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'grees' → logprob: -9.088346359931165e-07
    2. 'g' → logprob: -14.250000953674316
    3. 'degrees' → logprob: -16.375
    4. 'rees' → logprob: -16.5
    5. 'gress' → logprob: -16.625
    6. 'gres' → logprob: -17.0
    7. 'gree' → logprob: -18.0
    8. 'f' → logprob: -19.0
    9. 'gre' → logprob: -19.25
    10. 'gles' → logprob: -19.375

Token 1775: '(math' (ID: 86464)
  Prédit: '(math'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(math' → logprob: -0.004100723657757044
    2. '(' → logprob: -5.504100799560547
    3. 'math' → logprob: -11.129100799560547
    4. '(angle' → logprob: -13.254100799560547
    5. '(
' → logprob: -13.504100799560547
    6. '("("' → logprob: -13.754100799560547
    7. '((' → logprob: -14.254100799560547
    8. ' (' → logprob: -14.254100799560547
    9. '(float' → logprob: -14.504100799560547
    10. '(Math' → logprob: -14.629100799560547

Token 1776: '.ac' (ID: 25905)
  Prédit: '.ac'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.ac' → logprob: -8.061054359131958e-06
    2. '.' → logprob: -11.875007629394531
    3. '.atan' → logprob: -14.000007629394531
    4. '_ac' → logprob: -16.50000762939453
    5. ' acos' → logprob: -17.87500762939453
    6. '.)' → logprob: -17.87500762939453
    7. '```' → logprob: -18.37500762939453
    8. '.pi' → logprob: -18.37500762939453
    9. '.cos' → logprob: -18.87500762939453
    10. 'acos' → logprob: -19.00000762939453

Token 1777: 'os' (ID: 365)
  Prédit: 'os'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'os' → logprob: -6.349075556499884e-05
    2. 'cos' → logprob: -10.7500638961792
    3. '(os' → logprob: -11.3750638961792
    4. 's' → logprob: -12.3750638961792
    5. 'oss' → logprob: -12.7500638961792
    6. 'osl' → logprob: -12.8750638961792
    7. '{' → logprob: -13.0000638961792
    8. 'math' → logprob: -13.0000638961792
    9. '```' → logprob: -13.2500638961792
    10. 'osh' → logprob: -13.5000638961792

Token 1778: '(max' (ID: 17178)
  Prédit: '(max'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(max' → logprob: -0.08127591013908386
    2. 'max' → logprob: -3.3312759399414062
    3. '(dot' → logprob: -3.3312759399414062
    4. '(' → logprob: -6.081275939941406
    5. 'dot' → logprob: -6.331275939941406
    6. '(min' → logprob: -6.456275939941406
    7. '(
' → logprob: -7.081275939941406
    8. '(lambda' → logprob: -10.456275939941406
    9. 'min' → logprob: -11.081275939941406
    10. ' max' → logprob: -11.581275939941406

Token 1779: '(min' (ID: 26035)
  Prédit: '(min'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(min' → logprob: -0.0001801801408873871
    2. '(-' → logprob: -8.7501802444458
    3. '(' → logprob: -10.7501802444458
    4. 'min' → logprob: -15.2501802444458
    5. '(
' → logprob: -18.875179290771484
    6. '[min' → logprob: -19.000179290771484
    7. '=min' → logprob: -19.375179290771484
    8. '	min' → logprob: -19.500179290771484
    9. '((' → logprob: -20.125179290771484
    10. ' min' → logprob: -20.375179290771484

Token 1780: '(dot' (ID: 151841)
  Prédit: '(dot'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(dot' → logprob: -0.008635726757347584
    2. 'dot' → logprob: -4.758635520935059
    3. '(angle' → logprob: -11.383635520935059
    4. '(' → logprob: -12.383635520935059
    5. 'angle' → logprob: -12.758635520935059
    6. ' dot' → logprob: -13.633635520935059
    7. '((' → logprob: -14.758635520935059
    8. '.dot' → logprob: -14.883635520935059
    9. '_dot' → logprob: -15.008635520935059
    10. '-dot' → logprob: -16.383636474609375

Token 1781: '(normal' (ID: 100011)
  Prédit: '(u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(u' → logprob: -0.02447340078651905
    2. 'u' → logprob: -3.7744734287261963
    3. '(normal' → logprob: -6.899473190307617
    4. '(' → logprob: -8.899473190307617
    5. 'normalize' → logprob: -9.524473190307617
    6. '(angle' → logprob: -12.774473190307617
    7. ' (' → logprob: -13.899473190307617
    8. '(norm' → logprob: -14.149473190307617
    9. '(
' → logprob: -14.274473190307617
    10. ' u' → logprob: -14.274473190307617

Token 1782: 'ize' (ID: 750)
  Prédit: 'ize'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ize' → logprob: -0.00019495772721711546
    2. '(u' → logprob: -8.750194549560547
    3. 'u' → logprob: -10.875194549560547
    4. '(' → logprob: -11.375194549560547
    5. 'ized' → logprob: -13.250194549560547
    6. 'normalize' → logprob: -13.750194549560547
    7. 'IZE' → logprob: -14.250194549560547
    8. '(normal' → logprob: -14.375194549560547
    9. 'imize' → logprob: -14.750194549560547
    10. 'iz' → logprob: -15.000194549560547

Token 1783: '(u' (ID: 17057)
  Prédit: '(u'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(u' → logprob: -0.050534769892692566
    2. 'u' → logprob: -3.050534725189209
    3. '(normal' → logprob: -6.550534725189209
    4. 'normalize' → logprob: -7.675534725189209
    5. '(' → logprob: -9.925535202026367
    6. '(
' → logprob: -14.050535202026367
    7. '((' → logprob: -14.425535202026367
    8. ' u' → logprob: -14.800535202026367
    9. ' (' → logprob: -15.425535202026367
    10. ',u' → logprob: -15.675535202026367

Token 1784: '),' (ID: 936)
  Prédit: '(normal'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(normal' → logprob: -0.8687899112701416
    2. '(u' → logprob: -1.1187899112701416
    3. ',' → logprob: -2.4937899112701416
    4. '(' → logprob: -2.4937899112701416
    5. '),' → logprob: -3.3687899112701416
    6. '(n' → logprob: -3.7437899112701416
    7. '(v' → logprob: -3.7437899112701416
    8. '(norm' → logprob: -5.3687896728515625
    9. ',u' → logprob: -7.2437896728515625
    10. ' ,' → logprob: -7.7437896728515625

Token 1785: ' normalize' (ID: 44464)
  Prédit: 'normalize'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'normalize' → logprob: -1.0325924449716695e-05
    2. ' normalize' → logprob: -11.50001049041748
    3. '(normal' → logprob: -15.87501049041748
    4. 'normal' → logprob: -19.375009536743164
    5. 'n' → logprob: -19.625009536743164
    6. '   ' → logprob: -19.750009536743164
    7. 'norm' → logprob: -20.125009536743164
    8. 'normalized' → logprob: -20.125009536743164
    9. '.normalize' → logprob: -20.125009536743164
    10. 'sanitize' → logprob: -20.625009536743164

Token 1786: '(v' (ID: 6932)
  Prédit: '(v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(v' → logprob: -0.24903535842895508
    2. '(u' → logprob: -1.999035358428955
    3. 'v' → logprob: -2.499035358428955
    4. 'u' → logprob: -6.624035358428955
    5. '(normal' → logprob: -6.624035358428955
    6. '(' → logprob: -9.124034881591797
    7. 'normalize' → logprob: -10.624034881591797
    8. '(n' → logprob: -11.249034881591797
    9. '(norm' → logprob: -12.499034881591797
    10. ' v' → logprob: -12.624034881591797

Token 1787: ')),' (ID: 12098)
  Prédit: '),'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),' → logprob: -0.0031338706612586975
    2. '(u' → logprob: -6.128133773803711
    3. '(v' → logprob: -7.253133773803711
    4. '(' → logprob: -9.003133773803711
    5. ' ),' → logprob: -10.003133773803711
    6. ')),' → logprob: -10.128133773803711
    7. ')' → logprob: -11.253133773803711
    8. 'v' → logprob: -12.128133773803711
    9. '()),' → logprob: -13.128133773803711
    10. '),(' → logprob: -13.253133773803711

Token 1788: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -15.875
    3. '   ' → logprob: -20.0
    4. '```' → logprob: -21.625
    5. '  ' → logprob: -22.0
    6. '
' → logprob: -22.25
    7. '`' → logprob: -23.0
    8. '+' → logprob: -23.375
    9. ' ' → logprob: -23.625
    10. ')' → logprob: -23.875

Token 1789: '),' (ID: 936)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -4.60414821645827e-06
    2. '),' → logprob: -12.375004768371582
    3. ',' → logprob: -15.250004768371582
    4. '0' → logprob: -18.250003814697266
    5. '.,' → logprob: -18.500003814697266
    6. ' .' → logprob: -18.750003814697266
    7. '.),' → logprob: -19.750003814697266
    8. '[' → logprob: -20.000003814697266
    9. 'e' → logprob: -20.125003814697266
    10. ' ' → logprob: -20.250003814697266

Token 1790: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -2.5822400857578032e-05
    2. ' -' → logprob: -10.625025749206543
    3. '0' → logprob: -13.625025749206543
    4. '1' → logprob: -15.875025749206543
    5. '   ' → logprob: -17.37502670288086
    6. '  ' → logprob: -17.37502670288086
    7. '−' → logprob: -18.25002670288086
    8. ' ' → logprob: -18.37502670288086
    9. '[-' → logprob: -18.75002670288086
    10. '{-' → logprob: -19.12502670288086

Token 1791: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -15.625
    3. '```' → logprob: -19.125
    4. '   ' → logprob: -20.25
    5. '۱' → logprob: -20.625
    6. '
' → logprob: -21.25
    7. 'import' → logprob: -21.25
    8. '{' → logprob: -21.625
    9. '0' → logprob: -21.75
    10. '１' → logprob: -21.875

Token 1792: ')))

' (ID: 46526)
  Prédit: ')))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')))' → logprob: -0.0011083055287599564
    2. ')' → logprob: -6.876108169555664
    3. '))' → logprob: -10.251108169555664
    4. '))))' → logprob: -10.876108169555664
    5. ' ' → logprob: -11.501108169555664
    6. ')));' → logprob: -12.376108169555664
    7. ')))
' → logprob: -13.126108169555664
    8. '.' → logprob: -13.376108169555664
    9. '0' → logprob: -13.626108169555664
    10. ')))

' → logprob: -14.251108169555664

Token 1793: '#' (ID: 2)
  Prédit: 'class'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'class' → logprob: -0.3153019845485687
    2. '
' → logprob: -1.3153020143508911
    3. '#' → logprob: -6.315301895141602
    4. ' class' → logprob: -9.190301895141602
    5. '```' → logprob: -10.065301895141602
    6. '

' → logprob: -10.315301895141602
    7. '<|end|>' → logprob: -11.065301895141602
    8. '"class' → logprob: -12.065301895141602
    9. 'def' → logprob: -12.440301895141602
    10. '<class' → logprob: -12.815301895141602

Token 1794: ' Worm' (ID: 119021)
  Prédit: 'class'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'class' → logprob: -0.006729814689606428
    2. '#' → logprob: -5.006729602813721
    3. 'from' → logprob: -12.131730079650879
    4. 'import' → logprob: -12.381730079650879
    5. 'def' → logprob: -12.506730079650879
    6. '
' → logprob: -14.756730079650879
    7. ' class' → logprob: -14.881730079650879
    8. '```' → logprob: -15.006730079650879
    9. '"class' → logprob: -18.006729125976562
    10. '@' → logprob: -18.131729125976562

Token 1795: 'Direction' (ID: 14084)
  Prédit: 'class'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'class' → logprob: -0.0024914760142564774
    2. 'Path' → logprob: -6.002491474151611
    3. ' class' → logprob: -12.37749195098877
    4. 'path' → logprob: -12.75249195098877
    5. '#' → logprob: -13.00249195098877
    6. '_path' → logprob: -13.25249195098877
    7. '
' → logprob: -13.25249195098877
    8. 'import' → logprob: -13.62749195098877
    9. '```' → logprob: -14.25249195098877
    10. 'from' → logprob: -15.37749195098877

Token 1796: ' abstracts' (ID: 164080)
  Prédit: 'class'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'class' → logprob: -0.06675481796264648
    2. ':' → logprob: -3.1917548179626465
    3. '(' → logprob: -4.0667548179626465
    4. 'from' → logprob: -6.3167548179626465
    5. '(
' → logprob: -6.3167548179626465
    6. ':
' → logprob: -7.0667548179626465
    7. ' class' → logprob: -7.6917548179626465
    8. ' =' → logprob: -8.066755294799805
    9. '(class' → logprob: -8.191755294799805
    10. '[' → logprob: -8.691755294799805

Token 1797: ' the' (ID: 290)
  Prédit: 'class'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'class' → logprob: -0.005022175144404173
    2. ' class' → logprob: -5.505022048950195
    3. '<|end|>' → logprob: -7.505022048950195
    4. '
' → logprob: -8.005022048950195
    5. '(' → logprob: -10.880022048950195
    6. 'from' → logprob: -11.755022048950195
    7. '<|end|>' → logprob: -12.255022048950195
    8. '(
' → logprob: -12.255022048950195
    9. 's' → logprob: -12.380022048950195
    10. ' ' → logprob: -12.505022048950195

Token 1798: ' initial' (ID: 4871)
  Prédit: 'class'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'class' → logprob: -0.42291292548179626
    2. 'from' → logprob: -1.5479129552841187
    3. 'W' → logprob: -2.422912836074829
    4. 'ABC' → logprob: -3.672912836074829
    5. 'import' → logprob: -5.797913074493408
    6. 'movement' → logprob: -5.922913074493408
    7. '#' → logprob: -6.047913074493408
    8. 'Enum' → logprob: -6.172913074493408
    9. ' class' → logprob: -6.922913074493408
    10. 'possible' → logprob: -7.172913074493408

Token 1799: ' direction' (ID: 9262)
  Prédit: 'class'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'class' → logprob: -0.0037121959030628204
    2. 'from' → logprob: -5.878712177276611
    3. ' class' → logprob: -7.878712177276611
    4. ':' → logprob: -8.50371265411377
    5. '#' → logprob: -9.00371265411377
    6. 'direction' → logprob: -10.37871265411377
    7. '   ' → logprob: -10.50371265411377
    8. 'Direction' → logprob: -10.75371265411377
    9. '```' → logprob: -11.12871265411377
    10. '_direction' → logprob: -11.37871265411377

Token 1800: ' across' (ID: 5251)
  Prédit: 'class'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'class' → logprob: -0.1325540393590927
    2. ':' → logprob: -2.257554054260254
    3. ' class' → logprob: -4.757554054260254
    4. ':
' → logprob: -5.257554054260254
    5. '(' → logprob: -6.257554054260254
    6. '
' → logprob: -7.132554054260254
    7. 's' → logprob: -7.507554054260254
    8. '#' → logprob: -8.007554054260254
    9. '(
' → logprob: -8.007554054260254
    10. 'W' → logprob: -8.382554054260254

Token 1801: ' the' (ID: 290)
  Prédit: 'an'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'an' → logprob: -0.64332115650177
    2. 'edges' → logprob: -2.0183210372924805
    3. 'the' → logprob: -2.2683210372924805
    4. 'faces' → logprob: -2.6433210372924805
    5. ' an' → logprob: -2.8933210372924805
    6. 'Edge' → logprob: -3.3933210372924805
    7. ' edges' → logprob: -3.6433210372924805
    8. '#' → logprob: -3.7683210372924805
    9. 'a' → logprob: -4.2683210372924805
    10. ' the' → logprob: -5.2683210372924805

Token 1802: ' first' (ID: 1577)
  Prédit: 'edge'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'edge' → logprob: -0.586811363697052
    2. 'Edge' → logprob: -1.4618113040924072
    3. 'face' → logprob: -2.2118113040924072
    4. ' edge' → logprob: -3.3368113040924072
    5. 'edges' → logprob: -3.7118113040924072
    6. 'faces' → logprob: -4.211811542510986
    7. ' Edge' → logprob: -5.336811542510986
    8. '#' → logprob: -5.461811542510986
    9. 'worm' → logprob: -5.961811542510986
    10. 'shared' → logprob: -6.336811542510986

Token 1803: ' crossed' (ID: 47928)
  Prédit: 'edge'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'edge' → logprob: -0.6449874639511108
    2. ' edge' → logprob: -0.8949874639511108
    3. 'face' → logprob: -3.2699875831604004
    4. 'Edge' → logprob: -4.2699875831604
    5. '_edge' → logprob: -4.8949875831604
    6. ' face' → logprob: -5.6449875831604
    7. ' Edge' → logprob: -6.5199875831604
    8. '_face' → logprob: -7.5199875831604
    9. 'Face' → logprob: -8.144987106323242
    10. 'e' → logprob: -9.144987106323242

Token 1804: ' edge' (ID: 11165)
  Prédit: '_edge'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_edge' → logprob: -0.5162647366523743
    2. '_' → logprob: -2.1412646770477295
    3. ' edge' → logprob: -2.3912646770477295
    4. 'Edge' → logprob: -2.3912646770477295
    5. ' Edge' → logprob: -2.7662646770477295
    6. 'edge' → logprob: -4.141264915466309
    7. 'space' → logprob: -5.266264915466309
    8. ' _' → logprob: -5.391264915466309
    9. ' space' → logprob: -5.516264915466309
    10. '_space' → logprob: -5.516264915466309

Token 1805: ' on' (ID: 402)
  Prédit: 'class'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'class' → logprob: -0.0013959495117887855
    2. 'from' → logprob: -6.626396179199219
    3. '
' → logprob: -9.876396179199219
    4. ' class' → logprob: -11.501396179199219
    5. '(
' → logprob: -12.626396179199219
    6. ':' → logprob: -13.626396179199219
    7. '(' → logprob: -13.626396179199219
    8. ':
' → logprob: -13.751396179199219
    9. '(class' → logprob: -13.876396179199219
    10. '#' → logprob: -15.751396179199219

Token 1806: ' initial' (ID: 4871)
  Prédit: 'the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'the' → logprob: -0.18565766513347626
    2. ' the' → logprob: -2.4356577396392822
    3. 'a' → logprob: -3.0606577396392822
    4. ' a' → logprob: -4.685657501220703
    5. 'face' → logprob: -5.185657501220703
    6. 'W' → logprob: -5.185657501220703
    7. 'T' → logprob: -5.560657501220703
    8. 'Face' → logprob: -5.685657501220703
    9. 'faces' → logprob: -6.560657501220703
    10. '#' → logprob: -6.560657501220703

Token 1807: ' face' (ID: 4950)
  Prédit: ' line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' line' → logprob: -0.37751683592796326
    2. ' face' → logprob: -2.502516746520996
    3. 'class' → logprob: -2.627516746520996
    4. ' class' → logprob: -3.252516746520996
    5. '#' → logprob: -3.502516746520996
    6. 'face' → logprob: -3.627516746520996
    7. ' path' → logprob: -4.752516746520996
    8. '_face' → logprob: -4.877516746520996
    9. ' edge' → logprob: -4.877516746520996
    10. ' W' → logprob: -5.252516746520996

Token 1808: '
' (ID: 198)
  Prédit: 'class'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'class' → logprob: -0.000850605487357825
    2. '
' → logprob: -7.125850677490234
    3. ' class' → logprob: -10.875850677490234
    4. 'from' → logprob: -11.000850677490234
    5. '(
' → logprob: -12.000850677490234
    6. ':
' → logprob: -13.500850677490234
    7. ':' → logprob: -14.250850677490234
    8. '(' → logprob: -14.750850677490234
    9. '(class' → logprob: -14.875850677490234
    10. '#' → logprob: -15.000850677490234

Token 1809: 'class' (ID: 1444)
  Prédit: 'class'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'class' → logprob: -0.0003552463313098997
    2. ' class' → logprob: -8.62535572052002
    3. '
' → logprob: -8.87535572052002
    4. 'from' → logprob: -11.75035572052002
    5. '<|end|>' → logprob: -11.87535572052002
    6. ':' → logprob: -12.00035572052002
    7. '#' → logprob: -12.62535572052002
    8. ' 
' → logprob: -12.75035572052002
    9. '(' → logprob: -13.62535572052002
    10. '(
' → logprob: -13.87535572052002

Token 1810: ' Worm' (ID: 119021)
  Prédit: 'W'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'W' → logprob: -0.22631272673606873
    2. ' Worm' → logprob: -1.6013127565383911
    3. 'Enum' → logprob: -7.976312637329102
    4. 'enum' → logprob: -7.976312637329102
    5. 'object' → logprob: -9.601312637329102
    6. 'T' → logprob: -9.726312637329102
    7. ' W' → logprob: -11.101312637329102
    8. 'class' → logprob: -11.851312637329102
    9. 'Vector' → logprob: -12.226312637329102
    10. 'Abstract' → logprob: -12.226312637329102

Token 1811: 'Direction' (ID: 14084)
  Prédit: 'Direction'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Direction' → logprob: -0.026393424719572067
    2. 'Path' → logprob: -3.651393413543701
    3. 'D' → logprob: -10.02639389038086
    4. '(Direction' → logprob: -11.15139389038086
    5. 'Direct' → logprob: -11.65139389038086
    6. 'Directional' → logprob: -12.52639389038086
    7. 'Position' → logprob: -12.90139389038086
    8. 'Directions' → logprob: -13.02639389038086
    9. '(' → logprob: -13.02639389038086
    10. 'P' → logprob: -13.15139389038086

Token 1812: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.024631120264530182
    2. ':
' → logprob: -3.8996310234069824
    3. '(' → logprob: -5.524631023406982
    4. '(Abstract' → logprob: -9.89963150024414
    5. '(Enum' → logprob: -10.52463150024414
    6. ':

' → logprob: -11.89963150024414
    7. '(enum' → logprob: -13.52463150024414
    8. '(object' → logprob: -13.77463150024414
    9. '(W' → logprob: -13.77463150024414
    10. ',' → logprob: -13.89963150024414

Token 1813: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.002630353905260563
    2. 'class' → logprob: -6.252630233764648
    3. '    ' → logprob: -8.002630233764648
    4. '(' → logprob: -8.877630233764648
    5. ' def' → logprob: -9.002630233764648
    6. ' class' → logprob: -10.002630233764648
    7. '```' → logprob: -11.502630233764648
    8. 'def' → logprob: -11.627630233764648
    9. 'from' → logprob: -11.877630233764648
    10. ' (' → logprob: -12.002630233764648

Token 1814: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.0795658752322197
    2. 'class' → logprob: -3.2045657634735107
    3. ' def' → logprob: -3.7045657634735107
    4. '   ' → logprob: -5.32956600189209
    5. '__' → logprob: -5.32956600189209
    6. 'from' → logprob: -7.82956600189209
    7. 'LEFT' → logprob: -8.07956600189209
    8. 'RIGHT' → logprob: -8.45456600189209
    9. 'UP' → logprob: -9.57956600189209
    10. 'DOWN' → logprob: -9.82956600189209

Token 1815: ' __' (ID: 2516)
  Prédit: 'init'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: -0.3360116481781006
    2. '__' → logprob: -1.3360116481781006
    3. ' __' → logprob: -4.46101188659668
    4. '_init' → logprob: -4.58601188659668
    5. '_enum' → logprob: -8.08601188659668
    6. ' init' → logprob: -9.08601188659668
    7. 'enum' → logprob: -9.71101188659668
    8. 'int' → logprob: -9.96101188659668
    9. '...' → logprob: -10.08601188659668
    10. 'def' → logprob: -10.58601188659668

Token 1816: 'init' (ID: 3287)
  Prédit: 'init'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: -5.371605948312208e-05
    2. 'class' → logprob: -9.875053405761719
    3. 'nit' → logprob: -14.375053405761719
    4. 'code' → logprob: -14.875053405761719
    5. 'name' → logprob: -15.000053405761719
    6. ' init' → logprob: -15.250053405761719
    7. '_init' → logprob: -15.375053405761719
    8. 'ini' → logprob: -16.00005340576172
    9. '```' → logprob: -16.75005340576172
    10. 'repr' → logprob: -17.00005340576172

Token 1817: '__(' (ID: 8241)
  Prédit: '__('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.09600003808736801
    2. '(self' → logprob: -2.4709999561309814
    3. '(' → logprob: -5.4710001945495605
    4. '__' → logprob: -6.3460001945495605
    5. '__(
' → logprob: -7.3460001945495605
    6. ' (' → logprob: -7.8460001945495605
    7. 'self' → logprob: -11.095999717712402
    8. '(
' → logprob: -11.595999717712402
    9. ',' → logprob: -12.470999717712402
    10. '__((' → logprob: -12.970999717712402

Token 1818: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0006691903108730912
    2. ' self' → logprob: -7.500669002532959
    3. '(self' → logprob: -9.250669479370117
    4. '0' → logprob: -11.875669479370117
    5. ')' → logprob: -12.000669479370117
    6. '
' → logprob: -13.250669479370117
    7. ',' → logprob: -13.750669479370117
    8. '   ' → logprob: -14.250669479370117
    9. '	self' → logprob: -14.250669479370117
    10. ' (' → logprob: -14.500669479370117

Token 1819: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.3150734603404999
    2. '(self' → logprob: -1.9400734901428223
    3. ' (' → logprob: -2.1900734901428223
    4. 'self' → logprob: -4.815073490142822
    5. '(' → logprob: -5.190073490142822
    6. ' ,' → logprob: -8.190073013305664
    7. '(
' → logprob: -8.690073013305664
    8. ' self' → logprob: -8.690073013305664
    9. '   ' → logprob: -9.315073013305664
    10. ' (
' → logprob: -9.815073013305664

Token 1820: ' tetra' (ID: 176775)
  Prédit: 'face'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'face' → logprob: -0.5552007555961609
    2. 'initial' → logprob: -1.5552008152008057
    3. 'edge' → logprob: -1.9302008152008057
    4. ' initial' → logprob: -3.9302008152008057
    5. 'start' → logprob: -4.555200576782227
    6. ' edge' → logprob: -4.555200576782227
    7. ' face' → logprob: -4.555200576782227
    8. 'angle' → logprob: -4.930200576782227
    9. 'direction' → logprob: -5.430200576782227
    10. 'cross' → logprob: -6.930200576782227

Token 1821: ':' (ID: 25)
  Prédit: 'hedron'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'hedron' → logprob: -5.514650183613412e-05
    2. '   ' → logprob: -10.000055313110352
    3. ')' → logprob: -12.125055313110352
    4. 'hed' → logprob: -14.000055313110352
    5. ',' → logprob: -14.875055313110352
    6. '.' → logprob: -14.875055313110352
    7. '       ' → logprob: -15.125055313110352
    8. '):
' → logprob: -15.375055313110352
    9. '{' → logprob: -15.375055313110352
    10. '#' → logprob: -15.750055313110352

Token 1822: ' T' (ID: 353)
  Prédit: 'T'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'T' → logprob: -0.005515011493116617
    2. ' T' → logprob: -5.255515098571777
    3. 'self' → logprob: -9.380515098571777
    4. 'Geometry' → logprob: -9.380515098571777
    5. 'None' → logprob: -10.130515098571777
    6. '   ' → logprob: -11.505515098571777
    7. ')' → logprob: -11.505515098571777
    8. '=T' → logprob: -11.630515098571777
    9. '=None' → logprob: -11.755515098571777
    10. ',' → logprob: -11.755515098571777

Token 1823: 'etra' (ID: 72836)
  Prédit: 'etra'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'etra' → logprob: -0.5242410898208618
    2. '.' → logprob: -1.7742410898208618
    3. '.T' → logprob: -2.6492409706115723
    4. 'T' → logprob: -2.7742409706115723
    5. '.Geometry' → logprob: -2.8992409706115723
    6. 'Geometry' → logprob: -3.3992409706115723
    7. ',' → logprob: -5.899240970611572
    8. 'et' → logprob: -6.024240970611572
    9. ' T' → logprob: -6.149240970611572
    10. 'hedron' → logprob: -6.649240970611572

Token 1824: 'hedron' (ID: 144037)
  Prédit: 'hedron'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'hedron' → logprob: -1.6240566083070007e-06
    2. 'hed' → logprob: -14.375001907348633
    3. ')' → logprob: -15.250001907348633
    4. 'ed' → logprob: -15.375001907348633
    5. ',' → logprob: -15.750001907348633
    6. 'hedral' → logprob: -16.250001907348633
    7. '   ' → logprob: -16.500001907348633
    8. ')
' → logprob: -17.375001907348633
    9. 'e' → logprob: -17.750001907348633
    10. '),' → logprob: -18.000001907348633

Token 1825: 'Geometry' (ID: 30417)
  Prédit: 'Geometry'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Geometry' → logprob: -0.0003843173326458782
    2. ',' → logprob: -7.875384330749512
    3. 'Ge' → logprob: -14.250384330749512
    4. '_geometry' → logprob: -14.250384330749512
    5. ' Geometry' → logprob: -14.250384330749512
    6. '.Geometry' → logprob: -14.375384330749512
    7. '   ' → logprob: -14.375384330749512
    8. ',
' → logprob: -14.500384330749512
    9. 'geometry' → logprob: -15.750384330749512
    10. ' ,' → logprob: -16.125383377075195

Token 1826: ',
' (ID: 412)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0003380846756044775
    2. '):' → logprob: -8.250338554382324
    3. ' ,' → logprob: -9.875338554382324
    4. '):
' → logprob: -11.125338554382324
    5. '   ' → logprob: -11.875338554382324
    6. '       ' → logprob: -13.750338554382324
    7. ',
' → logprob: -14.000338554382324
    8. ')' → logprob: -14.875338554382324
    9. ' ):' → logprob: -14.875338554382324
    10. '‌,' → logprob: -15.625338554382324

Token 1827: '                ' (ID: 408)
  Prédit: ' initial'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' initial' → logprob: -1.0962446928024292
    2. 'face' → logprob: -1.4712446928024292
    3. ' face' → logprob: -1.5962446928024292
    4. 'initial' → logprob: -2.5962448120117188
    5. '   ' → logprob: -2.9712448120117188
    6. ' start' → logprob: -3.2212448120117188
    7. ' edge' → logprob: -3.9712448120117188
    8. 'start' → logprob: -3.9712448120117188
    9. 'edge' → logprob: -4.721244812011719
    10. ' current' → logprob: -5.096244812011719

Token 1828: ' first' (ID: 1577)
  Prédit: 'face'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'face' → logprob: -0.49139466881752014
    2. 'initial' → logprob: -1.4913946390151978
    3. 'start' → logprob: -2.4913947582244873
    4. ' initial' → logprob: -3.4913947582244873
    5. ' face' → logprob: -3.7413947582244873
    6. ' start' → logprob: -4.116394519805908
    7. 'edge' → logprob: -5.866394519805908
    8. 'current' → logprob: -5.991394519805908
    9. 'starting' → logprob: -6.616394519805908
    10. 'position' → logprob: -7.491394519805908

Token 1829: '_edge' (ID: 43226)
  Prédit: '_edge'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_edge' → logprob: -0.014257056638598442
    2. 'Edge' → logprob: -5.389256954193115
    3. '_face' → logprob: -6.264256954193115
    4. ')' → logprob: -6.514256954193115
    5. '_vertex' → logprob: -6.764256954193115
    6. 'W' → logprob: -7.139256954193115
    7. '_e' → logprob: -7.264256954193115
    8. '_direction' → logprob: -7.889256954193115
    9. '_w' → logprob: -8.014257431030273
    10. ',' → logprob: -8.139257431030273

Token 1830: '_str' (ID: 6182)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.026110315695405006
    2. '=' → logprob: -4.2761101722717285
    3. ':' → logprob: -4.7761101722717285
    4. ')' → logprob: -6.7761101722717285
    5. '):' → logprob: -6.9011101722717285
    6. ',
' → logprob: -7.4011101722717285
    7. ' ,' → logprob: -8.526110649108887
    8. '=None' → logprob: -8.776110649108887
    9. '):
' → logprob: -9.401110649108887
    10. '   ' → logprob: -9.526110649108887

Token 1831: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -1.035062313079834
    2. '):' → logprob: -1.160062313079834
    3. '):
' → logprob: -1.410062313079834
    4. '=' → logprob: -3.535062313079834
    5. ',' → logprob: -3.660062313079834
    6. ')' → logprob: -4.160062313079834
    7. '='' → logprob: -4.785062313079834
    8. '=None' → logprob: -6.410062313079834
    9. '='',' → logprob: -7.160062313079834
    10. '):
' → logprob: -7.410062313079834

Token 1832: ' str' (ID: 989)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.4249018430709839
    2. ')' → logprob: -2.1749019622802734
    3. 'str' → logprob: -2.9249019622802734
    4. ' '' → logprob: -3.4249019622802734
    5. '"' → logprob: -3.6749019622802734
    6. ''s' → logprob: -3.7999019622802734
    7. ' ' → logprob: -3.9249019622802734
    8. 'Vertex' → logprob: -4.174901962280273
    9. ' str' → logprob: -4.674901962280273
    10. 's' → logprob: -4.799901962280273

Token 1833: ',
' (ID: 412)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.5810014605522156
    2. '):
' → logprob: -0.8310014605522156
    3. '       ' → logprob: -5.831001281738281
    4. '   ' → logprob: -7.081001281738281
    5. '[' → logprob: -7.831001281738281
    6. ':' → logprob: -8.081001281738281
    7. ')' → logprob: -8.581001281738281
    8. ',' → logprob: -8.956001281738281
    9. '):
' → logprob: -9.456001281738281
    10. '=' → logprob: -10.081001281738281

Token 1834: '                ' (ID: 408)
  Prédit: '                '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                ' → logprob: -0.2573879361152649
    2. '                 ' → logprob: -3.00738787651062
    3. ' initial' → logprob: -3.13238787651062
    4. ' start' → logprob: -3.13238787651062
    5. ' first' → logprob: -3.75738787651062
    6. 'from' → logprob: -4.257388114929199
    7. 'first' → logprob: -4.257388114929199
    8. 'start' → logprob: -4.382388114929199
    9. 'initial' → logprob: -4.757388114929199
    10. ' from' → logprob: -5.882388114929199

Token 1835: ' angle' (ID: 16538)
  Prédit: 'initial'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'initial' → logprob: -1.1149473190307617
    2. 'start' → logprob: -1.6149473190307617
    3. ' initial' → logprob: -1.9899473190307617
    4. 'first' → logprob: -2.1149473190307617
    5. ' start' → logprob: -2.2399473190307617
    6. ' first' → logprob: -3.3649473190307617
    7. 'face' → logprob: -3.6149473190307617
    8. 'starting' → logprob: -4.239947319030762
    9. 'position' → logprob: -4.614947319030762
    10. 'angle' (adapté à ' angle') → logprob: -5.489947319030762

Token 1836: '_deg' (ID: 144310)
  Prédit: '_deg'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_deg' → logprob: -0.315260648727417
    2. ':' → logprob: -1.940260648727417
    3. '=' → logprob: -2.565260648727417
    4. '):' → logprob: -3.440260648727417
    5. '_de' → logprob: -4.940260887145996
    6. ')' → logprob: -5.565260887145996
    7. '_:' → logprob: -5.940260887145996
    8. '_' → logprob: -6.440260887145996
    9. '=_' → logprob: -7.440260887145996
    10. '):
' → logprob: -7.815260887145996

Token 1837: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.7843345403671265
    2. '):' → logprob: -0.7843345403671265
    3. '=' → logprob: -2.534334659576416
    4. ')' → logprob: -5.159334659576416
    5. ',' → logprob: -7.034334659576416
    6. '):
' → logprob: -7.659334659576416
    7. '=None' → logprob: -7.784334659576416
    8. ' ):' → logprob: -8.409334182739258
    9. ' :' → logprob: -10.409334182739258
    10. '   ' → logprob: -10.534334182739258

Token 1838: ' int' (ID: 677)
  Prédit: 'float'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'float' → logprob: -0.5457907915115356
    2. ' float' → logprob: -0.9207907915115356
    3. '0' → logprob: -4.170790672302246
    4. ')' → logprob: -5.670790672302246
    5. ' None' → logprob: -6.670790672302246
    6. 'None' → logprob: -7.045790672302246
    7. ' ' → logprob: -7.545790672302246
    8. ' )' → logprob: -8.295790672302246
    9. '=float' → logprob: -8.795790672302246
    10. '45' → logprob: -9.045790672302246

Token 1839: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.39171102643013
    2. '):' → logprob: -1.1417109966278076
    3. ':' → logprob: -6.141711235046387
    4. '=' → logprob: -6.516711235046387
    5. '=None' → logprob: -7.766711235046387
    6. '   ' → logprob: -8.266711235046387
    7. '):
' → logprob: -8.391711235046387
    8. ')' → logprob: -8.766711235046387
    9. ' ):' → logprob: -9.891711235046387
    10. ',' → logprob: -10.391711235046387

Token 1840: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -8.160971628967673e-05
    2. ':' → logprob: -10.375082015991211
    3. '   ' → logprob: -10.375082015991211
    4. '```' → logprob: -12.125082015991211
    5. '#' → logprob: -13.250082015991211
    6. '):
' → logprob: -13.375082015991211
    7. '        
' → logprob: -14.000082015991211
    8. ')' → logprob: -14.000082015991211
    9. '           ' → logprob: -14.125082015991211
    10. ',' → logprob: -14.125082015991211

Token 1841: ' """
' (ID: 7037)
  Prédit: ' self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.9064940214157104
    2. 'self' → logprob: -0.9064940214157104
    3. '       ' → logprob: -1.7814940214157104
    4. '#' → logprob: -4.906494140625
    5. ' edge' → logprob: -5.781494140625
    6. ' v' → logprob: -5.906494140625
    7. 'edge' → logprob: -6.031494140625
    8. 'v' → logprob: -6.156494140625
    9. 'face' → logprob: -6.281494140625
    10. ' first' → logprob: -6.656494140625

Token 1842: '       ' (ID: 309)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.5806968808174133
    2. '       ' → logprob: -0.8306968808174133
    3. ' self' → logprob: -5.955697059631348
    4. '#' → logprob: -6.955697059631348
    5. 'super' → logprob: -7.205697059631348
    6. 'v' → logprob: -8.830697059631348
    7. 'if' → logprob: -9.080697059631348
    8. 'import' → logprob: -9.955697059631348
    9. '   ' → logprob: -10.080697059631348
    10. 'assert' → logprob: -10.455697059631348

Token 1843: ' first' (ID: 1577)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.39779171347618103
    2. '"""
' → logprob: -1.7727917432785034
    3. 'self' → logprob: -2.897791624069214
    4. '"""' → logprob: -3.272791624069214
    5. '#' → logprob: -3.397791624069214
    6. ' """
' → logprob: -4.147791862487793
    7. 'First' → logprob: -4.897791862487793
    8. ' self' → logprob: -6.022791862487793
    9. 'The' → logprob: -7.022791862487793
    10. '        ' → logprob: -7.022791862487793

Token 1844: '_edge' (ID: 43226)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.09235034137964249
    2. '_edge' → logprob: -2.4673502445220947
    3. ' _' → logprob: -6.592350482940674
    4. '_line' → logprob: -7.592350482940674
    5. ')_' → logprob: -8.342350006103516
    6. '_angle' → logprob: -8.592350006103516
    7. '_
' → logprob: -8.592350006103516
    8. ')' → logprob: -9.092350006103516
    9. '   ' → logprob: -9.467350006103516
    10. '`' → logprob: -9.467350006103516

Token 1845: '_str' (ID: 6182)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.955803394317627
    2. '=' → logprob: -1.830803394317627
    3. '):' → logprob: -1.955803394317627
    4. '_str' → logprob: -2.205803394317627
    5. '_' → logprob: -2.705803394317627
    6. ')' → logprob: -2.830803394317627
    7. ' =' → logprob: -3.205803394317627
    8. ',' → logprob: -5.205803394317627
    9. ' _' → logprob: -5.455803394317627
    10. '_:' → logprob: -5.455803394317627

Token 1846: ':' (ID: 25)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.8135573863983154
    2. ':' → logprob: -0.9385573863983154
    3. ')' → logprob: -2.5635573863983154
    4. '):' → logprob: -3.0635573863983154
    5. ' =' → logprob: -4.8135576248168945
    6. '[' → logprob: -4.9385576248168945
    7. '='' → logprob: -5.1885576248168945
    8. '="' → logprob: -5.9385576248168945
    9. '):
' → logprob: -6.0635576248168945
    10. '       ' → logprob: -6.3135576248168945

Token 1847: ' like' (ID: 1299)
  Prédit: ' str'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' str' → logprob: -0.2911805212497711
    2. 'str' → logprob: -1.5411804914474487
    3. ' first' → logprob: -4.416180610656738
    4. '"' → logprob: -4.541180610656738
    5. 'first' → logprob: -5.416180610656738
    6. ')' → logprob: -6.416180610656738
    7. ' f' → logprob: -6.541180610656738
    8. ' ' → logprob: -6.916180610656738
    9. ' "' → logprob: -7.166180610656738
    10. ' e' → logprob: -7.291180610656738

Token 1848: ' '' (ID: 461)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.12051691114902496
    2. ''' → logprob: -2.6205170154571533
    3. '"A' → logprob: -3.4955170154571533
    4. 'AB' → logprob: -5.120516777038574
    5. ''A' → logprob: -6.370516777038574
    6. ' "' → logprob: -6.620516777038574
    7. ' AB' → logprob: -7.995516777038574
    8. ' '' → logprob: -8.120516777038574
    9. '   ' → logprob: -8.620516777038574
    10. ' ' → logprob: -8.620516777038574

Token 1849: 'BC' (ID: 7551)
  Prédit: 'AB'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'AB' → logprob: -0.0012261815136298537
    2. '"' → logprob: -7.62622594833374
    3. ''' → logprob: -7.62622594833374
    4. 'AC' → logprob: -8.626226425170898
    5. 'BC' → logprob: -11.251226425170898
    6. '"A' → logprob: -11.251226425170898
    7. ''A' → logprob: -11.376226425170898
    8. 'A' → logprob: -11.376226425170898
    9. 'ab' → logprob: -11.751226425170898
    10. ' AB' → logprob: -12.376226425170898

Token 1850: '',' (ID: 787)
  Prédit: '')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '')' → logprob: -0.6612212061882019
    2. ''' → logprob: -0.7862212061882019
    3. '',' → logprob: -3.7862212657928467
    4. ''):' → logprob: -6.286221027374268
    5. '')
' → logprob: -6.786221027374268
    6. ''):
' → logprob: -7.536221027374268
    7. ' '' → logprob: -8.036221504211426
    8. ''
' → logprob: -8.286221504211426
    9. ' ')' → logprob: -8.286221504211426
    10. '')"' → logprob: -8.536221504211426

Token 1851: ' '' (ID: 461)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -1.3587360382080078
    2. ''' → logprob: -1.3587360382080078
    3. 'angle' → logprob: -2.108736038208008
    4. ' angle' → logprob: -2.483736038208008
    5. '       ' → logprob: -3.358736038208008
    6. '                ' → logprob: -3.358736038208008
    7. ' '' → logprob: -3.483736038208008
    8. ')' → logprob: -3.483736038208008
    9. ' direction' → logprob: -3.483736038208008
    10. ' start' → logprob: -3.983736038208008

Token 1852: 'CD' (ID: 8257)
  Prédit: 'AB'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'AB' → logprob: -0.19930419325828552
    2. 'A' → logprob: -1.824304223060608
    3. 'AD' → logprob: -4.699304103851318
    4. ''' → logprob: -5.949304103851318
    5. ' A' → logprob: -6.199304103851318
    6. ' AB' → logprob: -6.199304103851318
    7. ''A' → logprob: -6.324304103851318
    8. 'AC' → logprob: -7.324304103851318
    9. ' ' → logprob: -7.824304103851318
    10. '')' → logprob: -8.574304580688477

Token 1853: '',' (ID: 787)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.8869271874427795
    2. '')' → logprob: -0.8869271874427795
    3. '',' → logprob: -1.7619271278381348
    4. '')
' → logprob: -6.136927127838135
    5. '')"' → logprob: -7.261927127838135
    6. ''
' → logprob: -7.886927127838135
    7. ')'' → logprob: -8.636927604675293
    8. ''A' → logprob: -9.261927604675293
    9. ''),' → logprob: -9.386927604675293
    10. ''):
' → logprob: -9.511927604675293

Token 1854: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.02022535353899002
    2. ' '' → logprob: -4.520225524902344
    3. ''A' → logprob: -4.895225524902344
    4. '"' → logprob: -7.395225524902344
    5. ')' → logprob: -8.270225524902344
    6. ' ' → logprob: -8.645225524902344
    7. 'AB' → logprob: -8.895225524902344
    8. ' AB' → logprob: -9.145225524902344
    9. '#' → logprob: -9.770225524902344
    10. '')' → logprob: -10.395225524902344

Token 1855: 'DB' (ID: 5220)
  Prédit: 'AB'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'AB' → logprob: -0.22412964701652527
    2. 'A' → logprob: -2.3491296768188477
    3. 'AD' → logprob: -3.2241296768188477
    4. ''' → logprob: -3.3491296768188477
    5. ''A' → logprob: -4.349129676818848
    6. '')' → logprob: -5.099129676818848
    7. 'DA' → logprob: -5.349129676818848
    8. 'D' → logprob: -6.474129676818848
    9. ' ' → logprob: -6.599129676818848
    10. ' AB' → logprob: -6.974129676818848

Token 1856: '',' (ID: 787)
  Prédit: '')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '')' → logprob: -0.35695117712020874
    2. ''' → logprob: -1.2319512367248535
    3. ')'' → logprob: -5.7319512367248535
    4. '',' → logprob: -6.3569512367248535
    5. '')"' → logprob: -6.4819512367248535
    6. '')
' → logprob: -6.8569512367248535
    7. ''''' → logprob: -8.481950759887695
    8. ')' → logprob: -8.731950759887695
    9. 'A' → logprob: -9.106950759887695
    10. ''
' → logprob: -9.356950759887695

Token 1857: ' unordered' (ID: 131528)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''' → logprob: -0.16309212148189545
    2. ' '' → logprob: -2.9130921363830566
    3. ' or' → logprob: -3.4130921363830566
    4. '                ' → logprob: -3.7880921363830566
    5. '...' → logprob: -4.038092136383057
    6. ' etc' → logprob: -6.288092136383057
    7. '')' → logprob: -6.288092136383057
    8. ''A' → logprob: -6.413092136383057
    9. '',' → logprob: -6.538092136383057
    10. '"' → logprob: -6.663092136383057

Token 1858: ' edge' (ID: 11165)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.15281543135643005
    2. '       ' → logprob: -2.277815341949463
    3. '')' → logprob: -4.402815341949463
    4. ')
' → logprob: -4.902815341949463
    5. '):' → logprob: -5.777815341949463
    6. '   ' → logprob: -5.777815341949463
    7. ' )' → logprob: -5.777815341949463
    8. '")' → logprob: -5.902815341949463
    9. '):
' → logprob: -6.527815341949463
    10. ''' → logprob: -6.777815341949463

Token 1859: ' crossed' (ID: 47928)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.9675639271736145
    2. ')' → logprob: -1.0925638675689697
    3. '')' → logprob: -1.9675638675689697
    4. ''' → logprob: -2.2175638675689697
    5. '   ' → logprob: -4.842564105987549
    6. ' )' → logprob: -5.217564105987549
    7. '"' → logprob: -5.717564105987549
    8. '
' → logprob: -5.842564105987549
    9. '")' → logprob: -5.842564105987549
    10. '):
' → logprob: -6.467564105987549

Token 1860: ' first' (ID: 1577)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.8010597825050354
    2. ')' → logprob: -1.8010597229003906
    3. '):' → logprob: -1.8010597229003906
    4. '):
' → logprob: -1.9260597229003906
    5. ')
' → logprob: -3.3010597229003906
    6. ':' → logprob: -4.551059722900391
    7. '
' → logprob: -5.051059722900391
    8. '   ' → logprob: -5.301059722900391
    9. '')' → logprob: -6.051059722900391
    10. ''):' → logprob: -6.176059722900391

Token 1861: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4746344983577728
    2. ')' → logprob: -1.3496345281600952
    3. ')
' → logprob: -3.0996344089508057
    4. '):' → logprob: -3.8496344089508057
    5. '):
' → logprob: -3.9746344089508057
    6. '   ' → logprob: -4.099634647369385
    7. '
' → logprob: -5.724634647369385
    8. '')' → logprob: -5.974634647369385
    9. ' )' → logprob: -6.099634647369385
    10. '")' → logprob: -6.724634647369385

Token 1862: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.18007811903953552
    2. ''' → logprob: -2.0550780296325684
    3. ''):
' → logprob: -4.180078029632568
    4. '"' → logprob: -5.055078029632568
    5. '"""
' → logprob: -5.805078029632568
    6. '')' → logprob: -6.305078029632568
    7. ''):' → logprob: -6.430078029632568
    8. '',' → logprob: -6.555078029632568
    9. '"""' → logprob: -7.055078029632568
    10. '"):
' → logprob: -7.180078029632568

Token 1863: ' angle' (ID: 16538)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.01989421434700489
    2. 'self' → logprob: -4.894894123077393
    3. '
' → logprob: -6.144894123077393
    4. '"""
' → logprob: -6.144894123077393
    5. '):
' → logprob: -6.269894123077393
    6. '"""' → logprob: -6.644894123077393
    7. 'first' → logprob: -7.269894123077393
    8. '```' → logprob: -7.644894123077393
    9. ')
' → logprob: -8.01989459991455
    10. ')' → logprob: -8.14489459991455

Token 1864: '_deg' (ID: 144310)
  Prédit: '_deg'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_deg' → logprob: -0.004023426678031683
    2. '=' → logprob: -5.754023551940918
    3. '_' → logprob: -8.004023551940918
    4. ':' → logprob: -9.254023551940918
    5. '=_' → logprob: -9.504023551940918
    6. ')' → logprob: -9.504023551940918
    7. ' =' → logprob: -9.879023551940918
    8. '_degree' → logprob: -10.004023551940918
    9. '):' → logprob: -10.129023551940918
    10. '_de' → logprob: -10.254023551940918

Token 1865: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.01121510285884142
    2. '):' → logprob: -4.8862152099609375
    3. '):
' → logprob: -6.2612152099609375
    4. '=' → logprob: -7.0112152099609375
    5. ')' → logprob: -7.8862152099609375
    6. ':int' → logprob: -8.511215209960938
    7. ' :' → logprob: -9.511215209960938
    8. '   ' → logprob: -9.886215209960938
    9. ' ):' → logprob: -10.636215209960938
    10. '=None' → logprob: -11.136215209960938

Token 1866: ' angle' (ID: 16538)
  Prédit: ' int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.03451408073306084
    2. 'int' → logprob: -3.4095141887664795
    3. ' float' → logprob: -7.7845139503479
    4. ' angle' → logprob: -8.784514427185059
    5. ' ' → logprob: -9.409514427185059
    6. ')' → logprob: -9.909514427185059
    7. ' ' → logprob: -10.534514427185059
    8. 'float' → logprob: -10.534514427185059
    9. ':int' → logprob: -10.659514427185059
    10. '[int' → logprob: -10.909514427185059

Token 1867: ' in' (ID: 306)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -1.2098143100738525
    2. ':' → logprob: -1.8348143100738525
    3. '=' → logprob: -1.8348143100738525
    4. '   ' → logprob: -2.2098143100738525
    5. ' between' → logprob: -3.0848143100738525
    6. '):
' → logprob: -3.0848143100738525
    7. ')' → logprob: -3.0848143100738525
    8. 'from' → logprob: -3.4598143100738525
    9. '       ' → logprob: -3.5848143100738525
    10. ' =' → logprob: -3.9598143100738525

Token 1868: ' degrees' (ID: 18210)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.07972010970115662
    2. 'degrees' → logprob: -3.3297200202941895
    3. ' [' → logprob: -3.4547200202941895
    4. 'int' → logprob: -5.8297200202941895
    5. 'range' → logprob: -6.4547200202941895
    6. ' degrees' → logprob: -6.9547200202941895
    7. '[int' → logprob: -7.2047200202941895
    8. '(' → logprob: -7.7047200202941895
    9. '0' → logprob: -7.9547200202941895
    10. ' int' → logprob: -7.9547200202941895

Token 1869: ' (' (ID: 350)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.6996846795082092
    2. '       ' → logprob: -1.9496846199035645
    3. '):
' → logprob: -1.9496846199035645
    4. ')
' → logprob: -2.5746846199035645
    5. ' between' → logprob: -3.3246846199035645
    6. ',' → logprob: -3.6996846199035645
    7. ' from' → logprob: -4.0746846199035645
    8. 'from' → logprob: -4.1996846199035645
    9. ' (' → logprob: -4.3246846199035645
    10. '=' → logprob: -5.1996846199035645

Token 1870: '1' (ID: 16)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.19300465285778046
    2. '0' → logprob: -2.693004608154297
    3. ')
' → logprob: -3.693004608154297
    4. 'between' → logprob: -3.693004608154297
    5. ' )' → logprob: -3.943004608154297
    6. ' between' → logprob: -4.443004608154297
    7. '):
' → logprob: -5.068004608154297
    8. 'from' → logprob: -5.318004608154297
    9. '       ' → logprob: -5.818004608154297
    10. ' ' → logprob: -5.943004608154297

Token 1871: ' to' (ID: 316)
  Prédit: '80'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '80' → logprob: -0.5660915374755859
    2. '8' → logprob: -0.9410915374755859
    3. '0' → logprob: -4.441091537475586
    4. '2' → logprob: -5.066091537475586
    5. '85' → logprob: -5.441091537475586
    6. ')' → logprob: -5.566091537475586
    7. '20' → logprob: -6.066091537475586
    8. '00' → logprob: -6.191091537475586
    9. '```' → logprob: -6.566091537475586
    10. ',' → logprob: -6.691091537475586

Token 1872: ' ' (ID: 220)
  Prédit: '179'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '179' → logprob: -0.515397846698761
    2. '180' → logprob: -1.2653977870941162
    3. '359' → logprob: -2.640397787094116
    4. '360' → logprob: -3.140397787094116
    5. '89' → logprob: -6.015398025512695
    6. '60' → logprob: -7.015398025512695
    7. '120' → logprob: -7.015398025512695
    8. '90' → logprob: -8.140398025512695
    9. ')' → logprob: -8.515398025512695
    10. '
' → logprob: -8.765398025512695

Token 1873: '59' (ID: 4621)
  Prédit: '179'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '179' → logprob: -1.146527647972107
    2. '359' → logprob: -1.271527647972107
    3. '180' → logprob: -1.646527647972107
    4. '360' → logprob: -1.646527647972107
    5. '60' → logprob: -4.5215277671813965
    6. '120' → logprob: -6.5215277671813965
    7. '89' → logprob: -7.2715277671813965
    8. '36' → logprob: -7.5215277671813965
    9. '59' → logprob: -7.5215277671813965
    10. '35' → logprob: -8.021527290344238

Token 1874: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.10319798439741135
    2. ')
' → logprob: -2.3531980514526367
    3. ' )' → logprob: -6.603198051452637
    4. '       ' → logprob: -7.603198051452637
    5. ' )
' → logprob: -7.728198051452637
    6. '   ' → logprob: -8.478198051452637
    7. ')
' → logprob: -9.103198051452637
    8. '0' → logprob: -9.728198051452637
    9. '9' → logprob: -10.228198051452637
    10. ',' → logprob: -10.478198051452637

Token 1875: ' between' (ID: 2870)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1861865371465683
    2. '):
' → logprob: -2.0611865520477295
    3. ')' → logprob: -3.6861865520477295
    4. '):' → logprob: -4.43618631362915
    5. ')
' → logprob: -6.43618631362915
    6. '
' → logprob: -6.81118631362915
    7. ',' → logprob: -7.06118631362915
    8. ' ):
' → logprob: -7.18618631362915
    9. '   ' → logprob: -7.81118631362915
    10. '):
' → logprob: -8.436186790466309

Token 1876: ' edge' (ID: 11165)
  Prédit: ' the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' the' → logprob: -1.3046334981918335
    2. ''' → logprob: -1.5546334981918335
    3. 'the' → logprob: -2.054633617401123
    4. ' first' → logprob: -2.304633617401123
    5. ' direction' → logprob: -2.554633617401123
    6. 'first' → logprob: -2.804633617401123
    7. '"' → logprob: -3.429633617401123
    8. 'direction' → logprob: -3.679633617401123
    9. ' '' → logprob: -3.929633617401123
    10. ' initial' → logprob: -3.929633617401123

Token 1877: ' AX' (ID: 71084)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.5708204507827759
    2. ',' → logprob: -1.8208204507827759
    3. '_' → logprob: -1.9458204507827759
    4. ')' → logprob: -3.3208203315734863
    5. ''' → logprob: -3.6958203315734863
    6. 'and' → logprob: -4.320820331573486
    7. 's' → logprob: -4.945820331573486
    8. ' '' → logprob: -5.070820331573486
    9. ' ' → logprob: -5.195820331573486
    10. ' )' → logprob: -5.195820331573486

Token 1878: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.5404317378997803
    2. ',' → logprob: -1.7904317378997803
    3. ')' → logprob: -2.4154317378997803
    4. 'and' → logprob: -3.2904317378997803
    5. '')' → logprob: -3.4154317378997803
    6. '.' → logprob: -4.415431976318359
    7. ''' → logprob: -4.415431976318359
    8. ')
' → logprob: -4.915431976318359
    9. ' (' → logprob: -5.415431976318359
    10. '',' → logprob: -5.540431976318359

Token 1879: ' worm' (ID: 40598)
  Prédit: 'the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'the' → logprob: -1.6865873336791992
    2. 'AB' → logprob: -2.186587333679199
    3. ' the' → logprob: -2.436587333679199
    4. 'AD' → logprob: -2.811587333679199
    5. 'first' → logprob: -2.811587333679199
    6. 'face' → logprob: -2.811587333679199
    7. ' first' → logprob: -3.061587333679199
    8. ' AB' → logprob: -3.186587333679199
    9. 'edge' → logprob: -3.186587333679199
    10. 'vector' → logprob: -3.811587333679199

Token 1880: ''s' (ID: 885)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.8600307703018188
    2. '):' → logprob: -1.6100307703018188
    3. '):
' → logprob: -1.7350307703018188
    4. '   ' → logprob: -2.2350306510925293
    5. '       ' → logprob: -3.9850306510925293
    6. ')
' → logprob: -4.110030651092529
    7. ' )' → logprob: -4.610030651092529
    8. '_' → logprob: -4.985030651092529
    9. ':' → logprob: -5.110030651092529
    10. '.' → logprob: -5.235030651092529

Token 1881: ' initial' (ID: 4871)
  Prédit: 'direction'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'direction' → logprob: -0.6363298296928406
    2. ' direction' → logprob: -1.2613298892974854
    3. ' initial' → logprob: -2.7613298892974854
    4. 'initial' → logprob: -3.0113298892974854
    5. 'path' → logprob: -3.6363298892974854
    6. ' path' → logprob: -4.261329650878906
    7. '_direction' → logprob: -5.136329650878906
    8. 'vector' → logprob: -6.011329650878906
    9. 'starting' → logprob: -6.011329650878906
    10. ' trajectory' → logprob: -6.136329650878906

Token 1882: ' direction' (ID: 9262)
  Prédit: ' direction'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' direction' → logprob: -0.41897884011268616
    2. 'direction' → logprob: -1.1689788103103638
    3. '_direction' → logprob: -3.7939789295196533
    4. ''' → logprob: -6.168978691101074
    5. ' vector' → logprob: -6.168978691101074
    6. '_' → logprob: -7.543978691101074
    7. '"' → logprob: -7.793978691101074
    8. 'vector' → logprob: -7.793978691101074
    9. ' '' → logprob: -7.918978691101074
    10. ' path' → logprob: -8.168978691101074

Token 1883: ' in' (ID: 306)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.06312858313322067
    2. '):
' → logprob: -3.0631284713745117
    3. '):' → logprob: -5.063128471374512
    4. ':' → logprob: -6.313128471374512
    5. ':
' → logprob: -6.438128471374512
    6. ')' → logprob: -6.563128471374512
    7. '
' → logprob: -6.688128471374512
    8. '   ' → logprob: -6.813128471374512
    9. 'def' → logprob: -8.063128471374512
    10. ')
' → logprob: -9.563128471374512

Token 1884: ' face' (ID: 4950)
  Prédit: 'face'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'face' → logprob: -0.2704026401042938
    2. 'the' → logprob: -1.7704026699066162
    3. ' the' → logprob: -4.145402431488037
    4. 'plane' → logprob: -4.145402431488037
    5. ' face' → logprob: -4.895402431488037
    6. 'first' → logprob: -4.895402431488037
    7. 'degrees' → logprob: -5.145402431488037
    8. 'local' → logprob: -5.520402431488037
    9. '
' → logprob: -5.895402431488037
    10. 'Face' → logprob: -6.645402431488037

Token 1885: ' AX' (ID: 71084)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1997087448835373
    2. '):
' → logprob: -2.3247087001800537
    3. '):' → logprob: -2.9497087001800537
    4. '   ' → logprob: -4.449708938598633
    5. ':' → logprob: -5.324708938598633
    6. ')' → logprob: -5.824708938598633
    7. '        ' → logprob: -6.574708938598633
    8. '
' → logprob: -6.699708938598633
    9. ' ):
' → logprob: -6.949708938598633
    10. 'def' → logprob: -7.074708938598633

Token 1886: ' Y' (ID: 865)
  Prédit: '):
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.3906567096710205
    2. '):' → logprob: -2.5156567096710205
    3. ')
' → logprob: -2.6406567096710205
    4. '   ' → logprob: -3.1406567096710205
    5. ')' → logprob: -3.3906567096710205
    6. '       ' → logprob: -4.265656471252441
    7. ' ):
' → logprob: -4.515656471252441
    8. 'class' → logprob: -4.765656471252441
    9. 'A' → logprob: -4.890656471252441
    10. ',' → logprob: -5.265656471252441

Token 1887: '
' (ID: 198)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.6812455654144287
    2. ')
' → logprob: -1.0562455654144287
    3. '   ' → logprob: -3.1812455654144287
    4. ' )
' → logprob: -3.8062455654144287
    5. ' )' → logprob: -4.306245803833008
    6. '):' → logprob: -4.556245803833008
    7. '):
' → logprob: -4.681245803833008
    8. 'face' → logprob: -5.556245803833008
    9. ' ' → logprob: -5.681245803833008
    10. '
' → logprob: -5.931245803833008

Token 1888: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.21888267993927
    2. ')
' → logprob: -1.34388267993927
    3. ')' → logprob: -1.96888267993927
    4. '   ' → logprob: -2.0938825607299805
    5. '"""
' → logprob: -2.5938825607299805
    6. '):
' → logprob: -2.8438825607299805
    7. ' """
' → logprob: -4.5938825607299805
    8. '")' → logprob: -4.7188825607299805
    9. ' )
' → logprob: -4.9688825607299805
    10. '")
' → logprob: -5.4688825607299805

Token 1889: ' """
' (ID: 7037)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3722397983074188
    2. '"""
' (adapté à ' """
') → logprob: -1.8722398281097412
    3. '):
' → logprob: -2.622239828109741
    4. '   ' → logprob: -2.997239828109741
    5. ' """
' → logprob: -4.747239589691162
    6. '"""' → logprob: -5.372239589691162
    7. ')
' → logprob: -5.622239589691162
    8. ')' → logprob: -5.622239589691162
    9. '"):
' → logprob: -5.622239589691162
    10. '):' → logprob: -5.872239589691162

Token 1890: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0060572512447834015
    2. 'self' → logprob: -5.381057262420654
    3. '#' → logprob: -7.381057262420654
    4. 'v' → logprob: -8.381056785583496
    5. 'first' → logprob: -9.131056785583496
    6. 'def' → logprob: -9.506056785583496
    7. 'edge' → logprob: -9.506056785583496
    8. 'if' → logprob: -9.631056785583496
    9. 'assert' → logprob: -9.881056785583496
    10. ' self' → logprob: -10.256056785583496

Token 1891: ' #' (ID: 1069)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.06205316260457039
    2. '       ' → logprob: -3.6870532035827637
    3. 'if' → logprob: -4.312053203582764
    4. '#' (adapté à ' #') → logprob: -4.562053203582764
    5. 'edge' → logprob: -5.062053203582764
    6. 'first' → logprob: -5.562053203582764
    7. 'assert' → logprob: -7.187053203582764
    8. 'e' → logprob: -9.187052726745605
    9. ' self' → logprob: -9.437052726745605
    10. 'edges' → logprob: -9.812052726745605

Token 1892: ' Parse' (ID: 26701)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.9175444841384888
    2. 'first' → logprob: -1.1675444841384888
    3. 'edge' → logprob: -1.9175444841384888
    4. 'if' → logprob: -2.542544364929199
    5. '#' → logprob: -2.917544364929199
    6. 'assert' → logprob: -5.417544364929199
    7. 'e' → logprob: -6.167544364929199
    8. '       ' → logprob: -6.417544364929199
    9. 'edges' → logprob: -8.0425443649292
    10. 'fe' → logprob: -8.4175443649292

Token 1893: ' first' (ID: 1577)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.8471176624298096
    2. 'e' → logprob: -1.5971176624298096
    3. 'v' → logprob: -1.8471176624298096
    4. 'edge' → logprob: -1.9721176624298096
    5. 'first' → logprob: -3.0971176624298096
    6. 'if' → logprob: -3.7221176624298096
    7. 'f' → logprob: -7.9721174240112305
    8. 'edges' → logprob: -8.09711742401123
    9. 'vs' → logprob: -8.22211742401123
    10. 'vertices' → logprob: -8.72211742401123

Token 1894: ' edge' (ID: 11165)
  Prédit: '_edge'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_edge' → logprob: -0.002685636980459094
    2. 'edge' → logprob: -6.002685546875
    3. '_' → logprob: -9.877685546875
    4. 'v' → logprob: -10.502685546875
    5. '_e' → logprob: -10.752685546875
    6. 'e' → logprob: -10.752685546875
    7. '       ' → logprob: -10.877685546875
    8. '
' → logprob: -11.502685546875
    9. '_vertex' → logprob: -11.502685546875
    10. 'Edge' → logprob: -11.627685546875

Token 1895: ' vertices' (ID: 38360)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.38052070140838623
    2. 'v' → logprob: -2.380520820617676
    3. 'if' → logprob: -2.505520820617676
    4. 'e' → logprob: -2.630520820617676
    5. '       ' → logprob: -3.005520820617676
    6. 'vs' → logprob: -4.630520820617676
    7. 'first' → logprob: -6.130520820617676
    8. 'chars' → logprob: -6.130520820617676
    9. ' self' → logprob: -6.880520820617676
    10. ' if' → logprob: -7.255520820617676

Token 1896: '
' (ID: 198)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.19549956917762756
    2. 'v' → logprob: -1.9454995393753052
    3. '       ' → logprob: -3.6954996585845947
    4. 'e' → logprob: -5.570499420166016
    5. ' self' → logprob: -6.070499420166016
    6. 'vs' → logprob: -6.570499420166016
    7. 'vertices' → logprob: -7.320499420166016
    8. ' v' → logprob: -7.570499420166016
    9. 'first' → logprob: -8.320499420166016
    10. '[v' → logprob: -8.570499420166016

Token 1897: '       ' (ID: 309)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.7165159583091736
    2. '       ' → logprob: -0.9665159583091736
    3. 'self' → logprob: -2.2165160179138184
    4. 'e' → logprob: -4.216516017913818
    5. ' v' → logprob: -5.591516017913818
    6. ' self' → logprob: -6.841516017913818
    7. '[v' → logprob: -7.216516017913818
    8. 'first' → logprob: -7.716516017913818
    9. 'vs' → logprob: -7.841516017913818
    10. '```' → logprob: -8.34151554107666

Token 1898: ' e' (ID: 319)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.44376903772354126
    2. 'v' → logprob: -1.0687689781188965
    3. 'vs' → logprob: -4.9437689781188965
    4. '       ' → logprob: -5.9437689781188965
    5. 'e' (adapté à ' e') → logprob: -6.1937689781188965
    6. ' self' → logprob: -6.3187689781188965
    7. ' v' → logprob: -7.4437689781188965
    8. 'vertices' → logprob: -7.9437689781188965
    9. 'verts' → logprob: -8.693769454956055
    10. 'first' → logprob: -9.443769454956055

Token 1899: '_vertices' (ID: 96842)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.13944335281848907
    2. '_v' → logprob: -2.7644433975219727
    3. 'v' → logprob: -3.8894433975219727
    4. 's' → logprob: -4.764443397521973
    5. 'vs' → logprob: -4.889443397521973
    6. '.v' → logprob: -5.139443397521973
    7. '_' → logprob: -5.389443397521973
    8. ' =' → logprob: -5.514443397521973
    9. '_vs' → logprob: -6.014443397521973
    10. '_str' → logprob: -6.014443397521973

Token 1900: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.004081247374415398
    2. ' =' → logprob: -5.5040812492370605
    3. '=e' → logprob: -13.129080772399902
    4. '=self' → logprob: -15.754080772399902
    5. '=list' → logprob: -15.879080772399902
    6. '=[' → logprob: -16.00408172607422
    7. 's' → logprob: -16.62908172607422
    8. 'e' → logprob: -16.62908172607422
    9. '=set' → logprob: -17.12908172607422
    10. '   ' → logprob: -17.62908172607422

Token 1901: ' tuple' (ID: 31311)
  Prédit: 'sorted'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sorted' → logprob: -0.24569466710090637
    2. 'tuple' → logprob: -1.745694637298584
    3. 'list' → logprob: -3.245694637298584
    4. '(sorted' → logprob: -6.495694637298584
    5. '[first' → logprob: -6.870694637298584
    6. 'set' → logprob: -7.245694637298584
    7. 'first' → logprob: -7.870694637298584
    8. ' tuple' → logprob: -7.995694637298584
    9. ' sorted' → logprob: -8.995695114135742
    10. '[' → logprob: -9.495695114135742

Token 1902: '(first' (ID: 31998)
  Prédit: '(sorted'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(sorted' → logprob: -0.038086701184511185
    2. 'sorted' → logprob: -3.2880866527557373
    3. '(first' → logprob: -10.163086891174316
    4. 'first' → logprob: -12.288086891174316
    5. '(' → logprob: -14.163086891174316
    6. '(
' → logprob: -15.663086891174316
    7. '(s' → logprob: -15.663086891174316
    8. '(c' → logprob: -15.788086891174316
    9. ' sorted' → logprob: -15.788086891174316
    10. '(e' → logprob: -15.913086891174316

Token 1903: '_edge' (ID: 43226)
  Prédit: '_edge'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_edge' → logprob: -0.33473724126815796
    2. '(e' → logprob: -2.2097373008728027
    3. '(sorted' → logprob: -2.7097373008728027
    4. 'sorted' → logprob: -3.5847373008728027
    5. '(first' → logprob: -3.8347373008728027
    6. '_sorted' → logprob: -3.9597373008728027
    7. ')' → logprob: -4.959737300872803
    8. '[' → logprob: -5.084737300872803
    9. 'e' → logprob: -5.209737300872803
    10. '(
' → logprob: -5.709737300872803

Token 1904: '_str' (ID: 6182)
  Prédit: '(sorted'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(sorted' → logprob: -0.778124213218689
    2. '(first' → logprob: -1.903124213218689
    3. '_str' → logprob: -2.1531243324279785
    4. '(e' → logprob: -2.2781243324279785
    5. 'sorted' → logprob: -2.4031243324279785
    6. '_sorted' → logprob: -3.2781243324279785
    7. ')' → logprob: -3.6531243324279785
    8. 'str' → logprob: -5.1531243324279785
    9. '(' → logprob: -5.9031243324279785
    10. '(
' → logprob: -6.2781243324279785

Token 1905: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.6116737723350525
    2. '(sorted' → logprob: -0.8616737723350525
    3. 'sorted' → logprob: -3.4866738319396973
    4. '.strip' → logprob: -7.361673831939697
    5. '(' → logprob: -7.486673831939697
    6. '())' → logprob: -7.986673831939697
    7. '(
' → logprob: -8.111673355102539
    8. ')
' → logprob: -8.111673355102539
    9. '.upper' → logprob: -8.111673355102539
    10. '[' → logprob: -8.236673355102539

Token 1906: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00516141252592206
    2. ' if' → logprob: -6.505161285400391
    3. '<|end|>' → logprob: -7.255161285400391
    4. 'self' → logprob: -7.505161285400391
    5. 'e' → logprob: -7.630161285400391
    6. ')' → logprob: -7.880161285400391
    7. '[' → logprob: -8.38016128540039
    8. 'if' → logprob: -8.38016128540039
    9. ',' → logprob: -8.50516128540039
    10. 'v' → logprob: -8.63016128540039

Token 1907: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.30384042859077454
    2. 'self' → logprob: -1.6788403987884521
    3. '       ' → logprob: -3.428840398788452
    4. 'e' → logprob: -3.553840398788452
    5. ' if' → logprob: -4.553840637207031
    6. 'v' → logprob: -5.803840637207031
    7. ' self' → logprob: -7.803840637207031
    8. '#' → logprob: -8.678840637207031
    9. 'first' → logprob: -9.303840637207031
    10. ' e' → logprob: -9.803840637207031

Token 1908: ' len' (ID: 4631)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.6167460680007935
    2. 'e' → logprob: -0.8667460680007935
    3. 'set' → logprob: -3.491745948791504
    4. 'sorted' → logprob: -4.991745948791504
    5. 'not' → logprob: -6.866745948791504
    6. ' len' → logprob: -7.491745948791504
    7. 'Vertex' → logprob: -8.116745948791504
    8. ' e' → logprob: -8.366745948791504
    9. 'first' → logprob: -8.991745948791504
    10. 'Edge' → logprob: -9.241745948791504

Token 1909: '(e' (ID: 3454)
  Prédit: '(e'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(e' → logprob: -0.0022141309455037117
    2. '(set' → logprob: -6.127213954925537
    3. 'set' → logprob: -10.877214431762695
    4. 'e' → logprob: -12.252214431762695
    5. '(' → logprob: -13.002214431762695
    6. '(
' → logprob: -13.377214431762695
    7. '
' → logprob: -15.127214431762695
    8. '({' → logprob: -15.377214431762695
    9. ' (' → logprob: -15.877214431762695
    10. '>' → logprob: -15.877214431762695

Token 1910: '_vertices' (ID: 96842)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.6084017157554626
    2. '(e' → logprob: -1.2334017753601074
    3. ' e' → logprob: -2.1084017753601074
    4. ')' → logprob: -4.108401775360107
    5. '_vertices' → logprob: -4.733401775360107
    6. '_e' → logprob: -5.108401775360107
    7. '[' → logprob: -5.608401775360107
    8. '(' → logprob: -6.358401775360107
    9. ' )' → logprob: -6.983401775360107
    10. '_' → logprob: -7.108401775360107

Token 1911: ')' (ID: 8)
  Prédit: '!='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '!=' → logprob: -0.22364413738250732
    2. ' !=' → logprob: -1.9736441373825073
    3. ')' → logprob: -2.973644256591797
    4. ')!=' → logprob: -4.598644256591797
    5. '()!=' → logprob: -9.598644256591797
    6. '[' → logprob: -9.723644256591797
    7. '```' → logprob: -9.848644256591797
    8. '==' → logprob: -10.723644256591797
    9. '1' → logprob: -10.973644256591797
    10. '   ' → logprob: -11.098644256591797

Token 1912: ' !=' (ID: 1666)
  Prédit: '!='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '!=' → logprob: -0.2015068084001541
    2. ' !=' → logprob: -1.7015068531036377
    3. ')!=' → logprob: -9.701506614685059
    4. '()!=' → logprob: -11.201506614685059
    5. '==' → logprob: -11.701506614685059
    6. ')' → logprob: -12.076506614685059
    7. '!==' → logprob: -13.951506614685059
    8. '```' → logprob: -14.201506614685059
    9. '[' → logprob: -14.326506614685059
    10. ' ' → logprob: -14.451506614685059

Token 1913: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.00010998018842656165
    2. ' ' → logprob: -9.125109672546387
    3. '   ' → logprob: -15.062609672546387
    4. '```' → logprob: -15.812609672546387
    5. 'exact' → logprob: -16.125110626220703
    6. '۲' → logprob: -16.250110626220703
    7. '  ' → logprob: -16.625110626220703
    8. '3' → logprob: -17.125110626220703
    9. '{' → logprob: -17.500110626220703
    10. '1' → logprob: -17.625110626220703

Token 1914: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -5.676981345459353e-06
    2. ' ' → logprob: -12.125005722045898
    3. '   ' → logprob: -16.7500057220459
    4. '  ' → logprob: -18.6250057220459
    5. '(' → logprob: -18.8750057220459
    6. '{' → logprob: -19.0000057220459
    7. '۲' → logprob: -19.2500057220459
    8. '```' → logprob: -19.6250057220459
    9. '    ' → logprob: -19.6875057220459
    10. '
' → logprob: -20.0000057220459

Token 1915: ' or' (ID: 503)
  Prédit: ' or'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' or' → logprob: -0.021072078496217728
    2. ':' → logprob: -4.021071910858154
    3. 'or' → logprob: -7.021071910858154
    4. '<|end|>' → logprob: -7.146071910858154
    5. ':
' → logprob: -7.646071910858154
    6. ' and' → logprob: -7.896071910858154
    7. ')' → logprob: -8.896072387695312
    8. ' ' → logprob: -9.271072387695312
    9. '       ' → logprob: -10.146072387695312
    10. 'and' → logprob: -10.396072387695312

Token 1916: ' set' (ID: 920)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.004220739938318729
    2. 'not' → logprob: -5.879220962524414
    3. 'any' → logprob: -7.504220962524414
    4. 'set' → logprob: -7.629220962524414
    5. 'len' → logprob: -8.879220962524414
    6. 'first' → logprob: -9.129220962524414
    7. ' e' → logprob: -9.504220962524414
    8. ' not' → logprob: -11.004220962524414
    9. '{' → logprob: -11.129220962524414
    10. 'sorted' → logprob: -11.254220962524414

Token 1917: '(e' (ID: 3454)
  Prédit: '(e'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(e' → logprob: -0.00019376569252926856
    2. 'e' → logprob: -8.62519359588623
    3. 'not' → logprob: -11.50019359588623
    4. '(
' → logprob: -13.62519359588623
    5. '(' → logprob: -14.50019359588623
    6. '((' → logprob: -14.75019359588623
    7. '{' → logprob: -15.00019359588623
    8. '({'' → logprob: -15.12519359588623
    9. ')e' → logprob: -16.000194549560547
    10. '(not' → logprob: -16.125194549560547

Token 1918: '_vertices' (ID: 96842)
  Prédit: '(e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(e' → logprob: -0.11374474316835403
    2. 'e' → logprob: -2.6137447357177734
    3. ' e' → logprob: -3.4887447357177734
    4. '{' → logprob: -6.613744735717773
    5. ')e' → logprob: -6.863744735717773
    6. '_vertices' → logprob: -7.863744735717773
    7. '{}' → logprob: -8.238744735717773
    8. ')' → logprob: -8.988744735717773
    9. 's' → logprob: -8.988744735717773
    10. '[e' → logprob: -10.113744735717773

Token 1919: ')' (ID: 8)
  Prédit: '(e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(e' → logprob: -0.5447959899902344
    2. ')' → logprob: -0.9197959899902344
    3. ')!=' → logprob: -4.419795989990234
    4. '!=' → logprob: -5.419795989990234
    5. ' !=' → logprob: -6.794795989990234
    6. '({'' → logprob: -7.044795989990234
    7. '```' → logprob: -8.044795989990234
    8. ')!' → logprob: -8.044795989990234
    9. ')e' → logprob: -8.044795989990234
    10. '>' → logprob: -8.294795989990234

Token 1920: ' -' (ID: 533)
  Prédit: '!='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '!=' → logprob: -0.09407491981983185
    2. ' !=' → logprob: -2.8440749645233154
    3. '!' → logprob: -3.9690749645233154
    4. '{' → logprob: -6.344074726104736
    5. 'not' → logprob: -6.469074726104736
    6. '()!=' → logprob: -6.469074726104736
    7. '<=' → logprob: -6.594074726104736
    8. '>' → logprob: -6.719074726104736
    9. '!==' → logprob: -6.969074726104736
    10. ')!=' → logprob: -7.094074726104736

Token 1921: ' {'' (ID: 11881)
  Prédit: '{'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '{' → logprob: -0.07965680956840515
    2. 'set' → logprob: -2.5796568393707275
    3. '{'' → logprob: -7.204656600952148
    4. '{"' → logprob: -11.079656600952148
    5. '{s' → logprob: -12.079656600952148
    6. '{sub' → logprob: -14.454656600952148
    7. ' {' → logprob: -14.454656600952148
    8. ' set' → logprob: -14.579656600952148
    9. '(set' → logprob: -15.079656600952148
    10. '{
' → logprob: -15.829656600952148

Token 1922: 'B' (ID: 33)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.013186587952077389
    2. 'AB' → logprob: -4.513186454772949
    3. '{' → logprob: -6.763186454772949
    4. '{'' → logprob: -7.638186454772949
    5. 'ABC' → logprob: -8.26318645477295
    6. ''A' → logprob: -9.26318645477295
    7. ''.' → logprob: -10.26318645477295
    8. ''' → logprob: -10.51318645477295
    9. 'ABCDEFGHIJKLMNOPQRSTUVWXYZ' → logprob: -10.51318645477295
    10. 'ABCDE' → logprob: -11.13818645477295

Token 1923: '','' (ID: 4074)
  Prédit: '',''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '','' → logprob: -0.6456097364425659
    2. '',' → logprob: -0.7706097364425659
    3. 'C' → logprob: -5.1456098556518555
    4. ',' → logprob: -5.7706098556518555
    5. ''C' → logprob: -6.1456098556518555
    6. ',C' → logprob: -6.5206098556518555
    7. ''' → logprob: -8.520609855651855
    8. ','' → logprob: -10.020609855651855
    9. 'A' → logprob: -10.020609855651855
    10. ''A' → logprob: -11.145609855651855

Token 1924: 'C' (ID: 34)
  Prédit: 'C'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'C' → logprob: -0.00011093381908722222
    2. ''C' → logprob: -9.625110626220703
    3. 'A' → logprob: -10.875110626220703
    4. ' C' → logprob: -11.125110626220703
    5. ''' → logprob: -12.125110626220703
    6. '<|end|>' → logprob: -13.125110626220703
    7. 'D' → logprob: -13.625110626220703
    8. '')' → logprob: -14.625110626220703
    9. '{'' → logprob: -15.000110626220703
    10. ')' → logprob: -15.500110626220703

Token 1925: '','' (ID: 4074)
  Prédit: '',''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '','' → logprob: -0.06735647469758987
    2. '',' → logprob: -3.067356586456299
    3. 'D' → logprob: -4.817356586456299
    4. ''D' → logprob: -5.442356586456299
    5. ','' → logprob: -5.817356586456299
    6. ',D' → logprob: -6.192356586456299
    7. ',' → logprob: -7.067356586456299
    8. ''' → logprob: -8.56735610961914
    9. 'A' → logprob: -10.19235610961914
    10. ''A' → logprob: -11.19235610961914

Token 1926: 'D' (ID: 35)
  Prédit: 'D'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'D' → logprob: -0.0009994633728638291
    2. ''D' → logprob: -7.125999450683594
    3. 'A' → logprob: -9.000999450683594
    4. ' D' → logprob: -9.875999450683594
    5. ''' → logprob: -11.125999450683594
    6. ' ' → logprob: -13.625999450683594
    7. ''A' → logprob: -14.125999450683594
    8. '"D' → logprob: -14.125999450683594
    9. '{'' → logprob: -14.250999450683594
    10. '	D' → logprob: -14.875999450683594

Token 1927: ''}' (ID: 17352)
  Prédit: ''}'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''}' → logprob: -0.002422152552753687
    2. '}' → logprob: -6.127422332763672
    3. '',' → logprob: -9.877422332763672
    4. ''' → logprob: -10.002422332763672
    5. '','' → logprob: -10.127422332763672
    6. ''}>
' → logprob: -10.252422332763672
    7. ' '}' → logprob: -10.877422332763672
    8. ''}
' → logprob: -11.252422332763672
    9. ''})' → logprob: -11.877422332763672
    10. '"}' → logprob: -12.127422332763672

Token 1928: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.5172711610794067
    2. ':
' → logprob: -1.3922711610794067
    3. '>' → logprob: -2.517271041870117
    4. '):
' → logprob: -3.517271041870117
    5. '):' → logprob: -4.392271041870117
    6. '!=' → logprob: -4.392271041870117
    7. ' !=' → logprob: -4.767271041870117
    8. '{' → logprob: -5.142271041870117
    9. ')' → logprob: -6.392271041870117
    10. '():
' → logprob: -7.142271041870117

Token 1929: '           ' (ID: 352)
  Prédit: ':
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.9165887832641602
    2. ':' → logprob: -1.1665887832641602
    3. '           ' → logprob: -1.4165887832641602
    4. ' :
' → logprob: -3.91658878326416
    5. ' ' → logprob: -5.54158878326416
    6. ' raise' → logprob: -5.66658878326416
    7. '            ' → logprob: -5.91658878326416
    8. '        ' → logprob: -6.04158878326416
    9. '   ' → logprob: -6.29158878326416
    10. ' :' → logprob: -6.41658878326416

Token 1930: ' raise' (ID: 9338)
  Prédit: ' raise'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' raise' → logprob: -0.046423062682151794
    2. 'raise' (adapté à ' raise') → logprob: -3.2964229583740234
    3. '           ' → logprob: -4.796422958374023
    4. '	raise' → logprob: -9.796422958374023
    5. '            ' → logprob: -11.546422958374023
    6. '            
' → logprob: -12.046422958374023
    7. '               ' → logprob: -13.046422958374023
    8. '       ' → logprob: -13.046422958374023
    9. '_raise' → logprob: -13.046422958374023
    10. '```' → logprob: -13.296422958374023

Token 1931: ' Value' (ID: 9963)
  Prédit: 'Value'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Value' → logprob: -7.896309739408025e-07
    2. ' Value' → logprob: -14.875000953674316
    3. '_value' → logprob: -16.5
    4. 'Runtime' → logprob: -16.625
    5. 'value' → logprob: -16.875
    6. 'Assertion' → logprob: -17.0
    7. 'Not' → logprob: -17.125
    8. '(Value' → logprob: -17.375
    9. '_Value' → logprob: -17.625
    10. '.Value' → logprob: -18.75

Token 1932: 'Error' (ID: 2255)
  Prédit: 'Error'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Error' → logprob: -6.015305552864447e-05
    2. 'Value' → logprob: -9.750060081481934
    3. 'rror' → logprob: -13.250060081481934
    4. '           ' → logprob: -18.12506103515625
    5. 'Input' → logprob: -18.50006103515625
    6. 'n' → logprob: -18.62506103515625
    7. ' Error' → logprob: -18.87506103515625
    8. 'SError' → logprob: -18.87506103515625
    9. 'error' → logprob: -19.12506103515625
    10. '   ' → logprob: -19.25006103515625

Token 1933: '(f' (ID: 1526)
  Prédit: '("'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '("' → logprob: -0.0015479490393772721
    2. '(' → logprob: -6.501547813415527
    3. '(f' → logprob: -10.126547813415527
    4. '('' → logprob: -12.751547813415527
    5. '(
' → logprob: -13.126547813415527
    6. '("'' → logprob: -14.251547813415527
    7. '"' → logprob: -16.126548767089844
    8. '("")' → logprob: -19.126548767089844
    9. '()' → logprob: -19.251548767089844
    10. '(("' → logprob: -19.376548767089844

Token 1934: '"' (ID: 1)
  Prédit: '"'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.006537384819239378
    2. ' "' → logprob: -5.381537437438965
    3. ' f' → logprob: -6.881537437438965
    4. 'f' → logprob: -7.756537437438965
    5. '(f' → logprob: -8.256537437438965
    6. '("' → logprob: -9.506537437438965
    7. '"The' → logprob: -10.506537437438965
    8. ''' → logprob: -10.631537437438965
    9. '           ' → logprob: -11.006537437438965
    10. '"value' → logprob: -11.256537437438965

Token 1935: 'Invalid' (ID: 12278)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.2255559116601944
    2. 'f' → logprob: -1.7255558967590332
    3. 'first' → logprob: -4.600555896759033
    4. '"W' → logprob: -4.725555896759033
    5. 'W' → logprob: -6.225555896759033
    6. ''' → logprob: -6.475555896759033
    7. 'Invalid' → logprob: -7.850555896759033
    8. 'First' → logprob: -8.350556373596191
    9. 'e' → logprob: -8.475556373596191
    10. '"The' → logprob: -8.600556373596191

Token 1936: ' first' (ID: 1577)
  Prédit: 'first'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'first' → logprob: -0.03143943473696709
    2. ' first' → logprob: -3.5314395427703857
    3. 'edge' → logprob: -7.031439304351807
    4. 'e' → logprob: -7.781439304351807
    5. 'angle' → logprob: -9.031439781188965
    6. 'edges' → logprob: -9.781439781188965
    7. ' edge' → logprob: -10.031439781188965
    8. 'vertices' → logprob: -10.156439781188965
    9. ' e' → logprob: -10.781439781188965
    10. ' angle' → logprob: -11.156439781188965

Token 1937: ' edge' (ID: 11165)
  Prédit: '_edge'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_edge' → logprob: -0.0014721262268722057
    2. '_' → logprob: -6.626471996307373
    3. '_edges' → logprob: -10.126472473144531
    4. 'edge' → logprob: -10.876472473144531
    5. ' _' → logprob: -10.876472473144531
    6. ' edge' → logprob: -11.126472473144531
    7. ' ' → logprob: -11.251472473144531
    8. '_
' → logprob: -11.876472473144531
    9. ')' → logprob: -12.001472473144531
    10. '_e' → logprob: -12.126472473144531

Token 1938: ' string' (ID: 1621)
  Prédit: '_str'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_str' → logprob: -0.12527835369110107
    2. '_' → logprob: -2.2502784729003906
    3. '_vertices' → logprob: -5.125278472900391
    4. ')' → logprob: -6.375278472900391
    5. '_s' → logprob: -6.750278472900391
    6. 's' → logprob: -7.875278472900391
    7. ')_' → logprob: -8.00027847290039
    8. '_)' → logprob: -8.25027847290039
    9. ''_' → logprob: -8.37527847290039
    10. ' _' → logprob: -8.37527847290039

Token 1939: ':' (ID: 25)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.4988863170146942
    2. '(first' → logprob: -1.4988863468170166
    3. '")' → logprob: -2.6238863468170166
    4. '(f' → logprob: -3.2488863468170166
    5. ' first' → logprob: -4.4988861083984375
    6. ':' → logprob: -4.4988861083984375
    7. '(e' → logprob: -4.7488861083984375
    8. '(' → logprob: -5.4988861083984375
    9. '')' → logprob: -5.8738861083984375
    10. '{' → logprob: -5.8738861083984375

Token 1940: ' {' (ID: 354)
  Prédit: 'first'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'first' → logprob: -0.3637627065181732
    2. ' first' → logprob: -1.2387627363204956
    3. '{' → logprob: -4.238762855529785
    4. ' {' → logprob: -8.488762855529785
    5. ''{' → logprob: -8.488762855529785
    6. 'f' → logprob: -8.863762855529785
    7. ' f' → logprob: -9.113762855529785
    8. ''' → logprob: -10.363762855529785
    9. ' '{' → logprob: -11.363762855529785
    10. 'e' → logprob: -11.363762855529785

Token 1941: 'first' (ID: 7743)
  Prédit: 'first'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'first' → logprob: -0.00012642296496778727
    2. ' first' → logprob: -9.375126838684082
    3. '{' → logprob: -10.125126838684082
    4. 'e' → logprob: -14.375126838684082
    5. '[first' → logprob: -14.625126838684082
    6. '{
' → logprob: -16.500125885009766
    7. 'f' → logprob: -16.625125885009766
    8. '{'' → logprob: -17.125125885009766
    9. ':first' → logprob: -17.250125885009766
    10. '	first' → logprob: -17.750125885009766

Token 1942: '_edge' (ID: 43226)
  Prédit: '_edge'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_edge' → logprob: -0.0006970656104385853
    2. 'edge' → logprob: -7.750697135925293
    3. 'Edge' → logprob: -9.750697135925293
    4. '_vertex' → logprob: -9.875697135925293
    5. '_edges' → logprob: -10.375697135925293
    6. 'e' → logprob: -10.750697135925293
    7. '_e' → logprob: -10.875697135925293
    8. ')' → logprob: -12.000697135925293
    9. '_ed' → logprob: -12.250697135925293
    10. '_EDGE' → logprob: -12.250697135925293

Token 1943: '_str' (ID: 6182)
  Prédit: '_str'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_str' → logprob: -0.006476148962974548
    2. 'str' → logprob: -5.631475925445557
    3. 'Str' → logprob: -7.006475925445557
    4. ')' → logprob: -7.506475925445557
    5. 's' → logprob: -7.881475925445557
    6. '}_' → logprob: -8.756476402282715
    7. '_' → logprob: -8.756476402282715
    8. ''_' → logprob: -9.381476402282715
    9. '   ' → logprob: -9.506476402282715
    10. '})' → logprob: -9.756476402282715

Token 1944: '}")
' (ID: 23577)
  Prédit: '}")'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '}")' → logprob: -0.20503900945186615
    2. '")' → logprob: -1.8300390243530273
    3. '}' → logprob: -4.580039024353027
    4. '}")
' → logprob: -4.705039024353027
    5. ')' → logprob: -6.205039024353027
    6. '')' → logprob: -6.705039024353027
    7. ')")' → logprob: -6.830039024353027
    8. ' }' → logprob: -7.830039024353027
    9. '")
' → logprob: -8.580039024353027
    10. '       ' → logprob: -8.705039024353027

Token 1945: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.000771509250625968
    2. '<|end|>' → logprob: -7.500771522521973
    3. '        
' → logprob: -9.500771522521973
    4. ')' → logprob: -9.500771522521973
    5. 'e' → logprob: -11.250771522521973
    6. '   ' → logprob: -11.750771522521973
    7. '```' → logprob: -12.125771522521973
    8. ',' → logprob: -12.500771522521973
    9. 'self' → logprob: -12.625771522521973
    10. '<|end|>' → logprob: -12.625771522521973

Token 1946: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.22558178007602692
    2. 'self' → logprob: -1.7255817651748657
    3. ' self' → logprob: -4.100581645965576
    4. '#' (adapté à ' #') → logprob: -5.600581645965576
    5. 'if' → logprob: -6.225581645965576
    6. ' if' → logprob: -7.475581645965576
    7. 'v' → logprob: -7.725581645965576
    8. 'A' → logprob: -8.975582122802734
    9. '        
' → logprob: -9.475582122802734
    10. 'e' → logprob: -9.975582122802734

Token 1947: ' The' (ID: 623)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.3495175242424011
    2. 'self' → logprob: -1.474517583847046
    3. '#' → logprob: -2.974517583847046
    4. '       ' → logprob: -4.474517345428467
    5. 'first' → logprob: -6.724517345428467
    6. 'for' → logprob: -7.599517345428467
    7. 'e' → logprob: -7.724517345428467
    8. 'v' → logprob: -7.974517345428467
    9. ' if' → logprob: -8.099517822265625
    10. 'assert' → logprob: -8.599517822265625

Token 1948: ' first' (ID: 1577)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -1.4143810272216797
    2. 'v' → logprob: -1.4143810272216797
    3. 'first' → logprob: -1.4143810272216797
    4. 'e' → logprob: -3.0393810272216797
    5. 'A' → logprob: -3.2893810272216797
    6. 't' → logprob: -3.6643810272216797
    7. 'initial' → logprob: -3.6643810272216797
    8. 'vertex' → logprob: -3.6643810272216797
    9. 'axis' → logprob: -3.9143810272216797
    10. 'tet' → logprob: -4.66438102722168

Token 1949: ' face' (ID: 4950)
  Prédit: '_edge'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_edge' → logprob: -0.010677788406610489
    2. 'edge' → logprob: -4.885677814483643
    3. '_vertex' → logprob: -7.010677814483643
    4. 'A' → logprob: -8.135677337646484
    5. '#' → logprob: -8.260677337646484
    6. 'vertex' → logprob: -8.885677337646484
    7. '_' → logprob: -8.885677337646484
    8. '_line' → logprob: -8.885677337646484
    9. 'line' → logprob: -9.135677337646484
    10. '_face' → logprob: -9.260677337646484

Token 1950: ' is' (ID: 382)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.1120724231004715
    2. '=' → logprob: -2.612072467803955
    3. '_face' → logprob: -4.737072467803955
    4. '_vertices' → logprob: -4.987072467803955
    5. '_is' → logprob: -5.862072467803955
    6. 'is' → logprob: -5.862072467803955
    7. '_faces' → logprob: -6.237072467803955
    8. ' is' → logprob: -6.612072467803955
    9. '       ' → logprob: -6.862072467803955
    10. 's' → logprob: -7.237072467803955

Token 1951: ' triangle' (ID: 41487)
  Prédit: 'Face'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Face' → logprob: -0.027800090610980988
    2. 'self' → logprob: -4.6528000831604
    3. 'f' → logprob: -4.7778000831604
    4. ' Face' → logprob: -4.7778000831604
    5. ' f' → logprob: -8.152800559997559
    6. ' self' → logprob: -8.277800559997559
    7. 'face' → logprob: -8.777800559997559
    8. 'sorted' → logprob: -8.902800559997559
    9. '   ' → logprob: -9.527800559997559
    10. ' face' → logprob: -10.777800559997559

Token 1952: ' A' (ID: 355)
  Prédit: '(Vertex'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(Vertex' → logprob: -0.20051901042461395
    2. 'Face' → logprob: -2.45051908493042
    3. 'Vertex' → logprob: -3.07551908493042
    4. '(' → logprob: -5.07551908493042
    5. 'with' → logprob: -5.07551908493042
    6. ' =' → logprob: -5.07551908493042
    7. 'cont' → logprob: -5.20051908493042
    8. ' Vertex' → logprob: -5.70051908493042
    9. ' (' → logprob: -5.82551908493042
    10. 'f' → logprob: -6.32551908493042

Token 1953: 'XY' (ID: 27825)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.22583414614200592
    2. 'X' → logprob: -1.8508341312408447
    3. 'B' → logprob: -3.2258341312408447
    4. 'x' → logprob: -6.600834369659424
    5. ' ,' → logprob: -6.850834369659424
    6. ',B' → logprob: -7.475834369659424
    7. ',
' → logprob: -8.475833892822266
    8. 'C' → logprob: -8.475833892822266
    9. ',X' → logprob: -8.600833892822266
    10. ' B' → logprob: -8.725833892822266

Token 1954: ' (' (ID: 350)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.45732182264328003
    2. ',' → logprob: -2.457321882247925
    3. ' where' → logprob: -2.832321882247925
    4. ' with' → logprob: -2.957321882247925
    5. ' (' → logprob: -3.082321882247925
    6. '=' → logprob: -3.957321882247925
    7. '(self' → logprob: -3.957321882247925
    8. 'with' → logprob: -3.957321882247925
    9. 'where' → logprob: -4.707321643829346
    10. ' ' → logprob: -4.832321643829346

Token 1955: 'A' (ID: 32)
  Prédit: 'Vertex'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Vertex' → logprob: -0.6754816174507141
    2. ''' → logprob: -1.1754815578460693
    3. 'A' → logprob: -2.4254815578460693
    4. ''A' → logprob: -2.9254815578460693
    5. 'B' → logprob: -4.800481796264648
    6. ')' → logprob: -5.550481796264648
    7. '('' → logprob: -6.050481796264648
    8. 'e' → logprob: -6.050481796264648
    9. '{'' → logprob: -6.050481796264648
    10. '(Vertex' → logprob: -6.175481796264648

Token 1956: ' +' (ID: 659)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.045712850987911224
    2. 'X' → logprob: -3.420712947845459
    3. ' ,' → logprob: -4.920712947845459
    4. ',X' → logprob: -6.295712947845459
    5. '',' → logprob: -7.670712947845459
    6. ')' → logprob: -7.795712947845459
    7. ',
' → logprob: -7.795712947845459
    8. ' and' → logprob: -8.9207124710083
    9. '),' → logprob: -9.0457124710083
    10. '  ' → logprob: -9.1707124710083

Token 1957: ' first' (ID: 1577)
  Prédit: 'first'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'first' → logprob: -0.41016677021980286
    2. 'set' → logprob: -1.6601667404174805
    3. 'e' → logprob: -2.2851667404174805
    4. '{' → logprob: -3.6601667404174805
    5. '''.' → logprob: -4.6601667404174805
    6. 'fro' → logprob: -5.7851667404174805
    7. 'tuple' → logprob: -6.2851667404174805
    8. '('' → logprob: -7.0351667404174805
    9. '(e' → logprob: -7.6601667404174805
    10. '(first' → logprob: -7.7851667404174805

Token 1958: '_edge' (ID: 43226)
  Prédit: '_edge'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_edge' → logprob: -0.01632384955883026
    2. 'edge' → logprob: -4.891324043273926
    3. '_vertices' → logprob: -6.641324043273926
    4. '_' → logprob: -7.016324043273926
    5. '_vertex' → logprob: -7.141324043273926
    6. 'Edge' → logprob: -7.141324043273926
    7. 'e' → logprob: -7.141324043273926
    8. '_e' → logprob: -7.266324043273926
    9. ')' → logprob: -7.641324043273926
    10. 'X' → logprob: -8.016324043273926

Token 1959: ' vertices' (ID: 38360)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.08624352514743805
    2. ')' → logprob: -2.9612436294555664
    3. '_vertices' → logprob: -4.211243629455566
    4. ',' → logprob: -5.461243629455566
    5. '   ' → logprob: -5.836243629455566
    6. '_str' → logprob: -6.211243629455566
    7. '),' → logprob: -7.461243629455566
    8. 'vertices' → logprob: -7.586243629455566
    9. 'Vertices' → logprob: -7.586243629455566
    10. 'str' → logprob: -7.711243629455566

Token 1960: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.11710923165082932
    2. ')
' → logprob: -2.3671092987060547
    3. '[' → logprob: -4.617109298706055
    4. '       ' → logprob: -6.242109298706055
    5. '')' → logprob: -7.117109298706055
    6. ')}' → logprob: -7.367109298706055
    7. '+' → logprob: -7.617109298706055
    8. ' )' → logprob: -8.117109298706055
    9. '   ' → logprob: -8.117109298706055
    10. '),' → logprob: -8.367109298706055

Token 1961: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.009453128091990948
    2. 'self' → logprob: -4.884453296661377
    3. ',' → logprob: -7.634453296661377
    4. 'v' → logprob: -7.884453296661377
    5. ' self' → logprob: -8.259452819824219
    6. 'A' → logprob: -8.634452819824219
    7. ' v' → logprob: -9.384452819824219
    8. '        
' → logprob: -9.634452819824219
    9. ')' → logprob: -9.884452819824219
    10. 'e' → logprob: -10.009452819824219

Token 1962: ' v' (ID: 323)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.053654689341783524
    2. '       ' → logprob: -3.553654670715332
    3. 'face' → logprob: -4.178654670715332
    4. ' self' → logprob: -5.553654670715332
    5. 'v' (adapté à ' v') → logprob: -6.178654670715332
    6. 'first' → logprob: -6.678654670715332
    7. 'sorted' → logprob: -8.553654670715332
    8. '#' → logprob: -8.803654670715332
    9. 'if' → logprob: -8.928654670715332
    10. ' v' → logprob: -9.303654670715332

Token 1963: 'X' (ID: 55)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.5444449782371521
    2. 'al' → logprob: -2.169445037841797
    3. ' =' → logprob: -2.169445037841797
    4. '1' → logprob: -2.794445037841797
    5. 's' → logprob: -2.919445037841797
    6. '=' → logprob: -3.669445037841797
    7. 'er' → logprob: -4.169445037841797
    8. 'alid' → logprob: -4.794445037841797
    9. '=A' → logprob: -4.794445037841797
    10. '0' → logprob: -5.794445037841797

Token 1964: ',' (ID: 11)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2597385346889496
    2. '=' → logprob: -1.509738564491272
    3. ',' → logprob: -5.259738445281982
    4. 's' → logprob: -6.509738445281982
    5. '1' → logprob: -7.009738445281982
    6. '=v' → logprob: -10.25973892211914
    7. ',v' → logprob: -10.38473892211914
    8. ')' → logprob: -11.13473892211914
    9. '_' → logprob: -11.38473892211914
    10. ':' → logprob: -11.38473892211914

Token 1965: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.006734080612659454
    2. ' v' → logprob: -5.0067338943481445
    3. '   ' → logprob: -11.881733894348145
    4. 'e' → logprob: -13.381733894348145
    5. '    ' → logprob: -13.381733894348145
    6. ' =' → logprob: -13.631733894348145
    7. ' ' → logprob: -13.756733894348145
    8. '	v' → logprob: -13.881733894348145
    9. '_v' → logprob: -14.006733894348145
    10. '=' → logprob: -14.256733894348145

Token 1966: 'Y' (ID: 56)
  Prédit: 'Y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Y' → logprob: -2.3319124011322856e-05
    2. ' Y' → logprob: -12.250022888183594
    3. ' =' → logprob: -12.250022888183594
    4. 'X' → logprob: -12.500022888183594
    5. '=' → logprob: -13.125022888183594
    6. '
' → logprob: -13.375022888183594
    7. 'v' → logprob: -13.375022888183594
    8. '	Y' → logprob: -13.875022888183594
    9. '_Y' → logprob: -14.000022888183594
    10. 'y' → logprob: -14.500022888183594

Token 1967: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.19945350289344788
    2. ',' → logprob: -1.8244534730911255
    3. ' =' → logprob: -3.949453592300415
    4. ',v' → logprob: -8.449453353881836
    5. ' ,' → logprob: -11.449453353881836
    6. ')' → logprob: -11.949453353881836
    7. '=v' → logprob: -12.199453353881836
    8. 'v' → logprob: -12.449453353881836
    9. ' ' → logprob: -12.824453353881836
    10. '   ' → logprob: -13.324453353881836

Token 1968: ' e' (ID: 319)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.007518246304243803
    2. 'sorted' → logprob: -5.007518291473389
    3. ' e' → logprob: -7.632518291473389
    4. '   ' → logprob: -9.00751781463623
    5. 'tuple' → logprob: -9.38251781463623
    6. 'first' → logprob: -10.25751781463623
    7. ' sorted' → logprob: -10.38251781463623
    8. '(sorted' → logprob: -11.13251781463623
    9. ' ' → logprob: -12.00751781463623
    10. '(e' → logprob: -12.13251781463623

Token 1969: '_vertices' (ID: 96842)
  Prédit: '(e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(e' → logprob: -0.6506626605987549
    2. '_vertices' → logprob: -0.9006626605987549
    3. 'e' → logprob: -3.525662660598755
    4. 'tuple' → logprob: -4.525662422180176
    5. '[e' → logprob: -4.525662422180176
    6. '(first' → logprob: -5.025662422180176
    7. 'first' → logprob: -5.525662422180176
    8. '[' → logprob: -6.275662422180176
    9. ' e' → logprob: -6.650662422180176
    10. 'vertices' → logprob: -7.275662422180176

Token 1970: '
' (ID: 198)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.6879934668540955
    2. '=' → logprob: -0.8129934668540955
    3. ' =' → logprob: -2.9379935264587402
    4. ',v' → logprob: -8.062993049621582
    5. ')' → logprob: -8.562993049621582
    6. 'v' → logprob: -8.687993049621582
    7. '       ' → logprob: -9.562993049621582
    8. ' ,' → logprob: -10.187993049621582
    9. ' ' → logprob: -10.687993049621582
    10. '<|end|>' → logprob: -10.937993049621582

Token 1971: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.14576326310634613
    2. 'self' → logprob: -2.1457631587982178
    3. ' self' → logprob: -5.020763397216797
    4. '<|end|>' → logprob: -5.145763397216797
    5. ')' → logprob: -6.395763397216797
    6. ',' → logprob: -6.770763397216797
    7. '
' → logprob: -7.395763397216797
    8. 'v' → logprob: -7.645763397216797
    9. '#' → logprob: -8.020763397216797
    10. 'if' → logprob: -8.270763397216797

Token 1972: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.04223587363958359
    2. 'face' → logprob: -3.542235851287842
    3. 'origin' → logprob: -5.542235851287842
    4. 'super' → logprob: -5.917235851287842
    5. 'first' → logprob: -6.292235851287842
    6. 'v' → logprob: -6.667235851287842
    7. '#' → logprob: -6.792235851287842
    8. '       ' → logprob: -7.417235851287842
    9. 'edge' → logprob: -8.417236328125
    10. 'Face' → logprob: -8.792236328125

Token 1973: '.first' (ID: 14272)
  Prédit: '.t'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.t' → logprob: -0.013814857229590416
    2. '.' → logprob: -5.263814926147461
    3. ' =' → logprob: -5.513814926147461
    4. '.v' → logprob: -6.513814926147461
    5. '._' → logprob: -7.013814926147461
    6. '.first' → logprob: -7.638814926147461
    7. '.vertex' → logprob: -7.888814926147461
    8. '=' → logprob: -8.138814926147461
    9. '   ' → logprob: -8.263814926147461
    10. '.face' → logprob: -8.388814926147461

Token 1974: '_edge' (ID: 43226)
  Prédit: '_edge'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_edge' → logprob: -0.16275767982006073
    2. '_face' → logprob: -1.9127576351165771
    3. '_vertex' → logprob: -6.412757873535156
    4. '_angle' → logprob: -8.912757873535156
    5. '_edges' → logprob: -9.412757873535156
    6. '       ' → logprob: -9.662757873535156
    7. '```' → logprob: -9.912757873535156
    8. 'Edge' → logprob: -10.037757873535156
    9. '   ' → logprob: -10.162757873535156
    10. '
' → logprob: -10.287757873535156

Token 1975: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5232443809509277
    2. ' =' → logprob: -0.8982443809509277
    3. '_vertices' → logprob: -9.773244857788086
    4. '_str' → logprob: -10.898244857788086
    5. '_' → logprob: -11.273244857788086
    6. 'str' → logprob: -12.523244857788086
    7. ')' → logprob: -12.898244857788086
    8. 's' → logprob: -12.898244857788086
    9. '=_' → logprob: -13.023244857788086
    10. ':' → logprob: -13.023244857788086

Token 1976: ' Edge' (ID: 16396)
  Prédit: 'Edge'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Edge' → logprob: -0.00012356207298580557
    2. ' Edge' → logprob: -9.000123977661133
    3. '   ' → logprob: -16.250123977661133
    4. '<Edge' → logprob: -17.250123977661133
    5. 'edge' → logprob: -18.125123977661133
    6. '       ' → logprob: -18.250123977661133
    7. 'Edges' → logprob: -19.000123977661133
    8. 'Ed' → logprob: -19.375123977661133
    9. 'EDGE' → logprob: -19.500123977661133
    10. '.Edge' → logprob: -19.625123977661133

Token 1977: '(v' (ID: 6932)
  Prédit: '(v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(v' → logprob: -0.528330385684967
    2. '('' → logprob: -1.1533303260803223
    3. '(Vertex' → logprob: -2.4033303260803223
    4. '(' → logprob: -6.153330326080322
    5. ''' → logprob: -7.278330326080322
    6. 'v' → logprob: -7.403330326080322
    7. 'Vertex' → logprob: -7.903330326080322
    8. '("' → logprob: -8.27833080291748
    9. '(vertex' → logprob: -9.52833080291748
    10. '(
' → logprob: -10.40333080291748

Token 1978: 'X' (ID: 55)
  Prédit: 'X'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'X' → logprob: -0.000273971410933882
    2. ''' → logprob: -9.375273704528809
    3. 'B' → logprob: -9.500273704528809
    4. 'ert' → logprob: -10.250273704528809
    5. '('' → logprob: -10.625273704528809
    6. 'e' → logprob: -11.625273704528809
    7. 'Y' → logprob: -11.625273704528809
    8. 'v' → logprob: -12.000273704528809
    9. '(' → logprob: -12.125273704528809
    10. 'er' → logprob: -12.750273704528809

Token 1979: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.015083109959959984
    2. ',v' → logprob: -4.265083312988281
    3. ' ,' → logprob: -7.140083312988281
    4. 'v' → logprob: -10.015083312988281
    5. ',
' → logprob: -11.015083312988281
    6. '',' → logprob: -11.140083312988281
    7. '(' → logprob: -11.390083312988281
    8. '(v' → logprob: -11.765083312988281
    9. '[' → logprob: -12.015083312988281
    10. ' v' → logprob: -12.265083312988281

Token 1980: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -1.0564331205387134e-05
    2. ' v' → logprob: -11.50001049041748
    3. 'V' → logprob: -15.12501049041748
    4. '   ' → logprob: -16.625011444091797
    5. ' ' → logprob: -17.375011444091797
    6. '	v' → logprob: -17.625011444091797
    7. '_v' → logprob: -18.875011444091797
    8. 'vy' → logprob: -19.000011444091797
    9. ')v' → logprob: -19.000011444091797
    10. '$v' → logprob: -19.125011444091797

Token 1981: 'Y' (ID: 56)
  Prédit: 'Y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Y' → logprob: -3.5716304410016164e-05
    2. 'v' → logprob: -10.250035285949707
    3. 'y' → logprob: -16.000036239624023
    4. ' Y' → logprob: -16.000036239624023
    5. '   ' → logprob: -18.125036239624023
    6. ')' → logprob: -18.250036239624023
    7. 'w' → logprob: -18.375036239624023
    8. '<|end|>' → logprob: -18.625036239624023
    9. '	Y' → logprob: -18.625036239624023
    10. 'X' → logprob: -18.750036239624023

Token 1982: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -7.822646693966817e-06
    2. ')
' → logprob: -12.375007629394531
    3. ' )' → logprob: -13.250007629394531
    4. '<|end|>' → logprob: -14.125007629394531
    5. '       ' → logprob: -15.375007629394531
    6. '),' → logprob: -15.500007629394531
    7. '   ' → logprob: -15.750007629394531
    8. ')#' → logprob: -16.00000762939453
    9. ')}' → logprob: -16.37500762939453
    10. ',' → logprob: -16.75000762939453

Token 1983: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.007413651328533888
    2. '<|end|>' → logprob: -5.132413864135742
    3. 'self' → logprob: -6.882413864135742
    4. ' self' → logprob: -8.882413864135742
    5. ')' → logprob: -9.507413864135742
    6. '```' → logprob: -9.757413864135742
    7. ',' → logprob: -10.382413864135742
    8. '#' → logprob: -10.382413864135742
    9. '
' → logprob: -10.757413864135742
    10. '<|end|>' → logprob: -10.757413864135742

Token 1984: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.0035764304921031
    2. '#' → logprob: -6.253576278686523
    3. 'face' → logprob: -7.253576278686523
    4. 'origin' → logprob: -8.128576278686523
    5. '       ' → logprob: -8.378576278686523
    6. 'A' → logprob: -8.628576278686523
    7. 'v' → logprob: -9.378576278686523
    8. 'angle' → logprob: -9.753576278686523
    9. 'vertex' → logprob: -10.503576278686523
    10. 'a' → logprob: -10.628576278686523

Token 1985: '.angle' (ID: 90963)
  Prédit: '.t'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.t' → logprob: -0.06328726559877396
    2. '.first' → logprob: -3.4382872581481934
    3. '.initial' → logprob: -4.688287258148193
    4. '.face' → logprob: -4.813287258148193
    5. '.angle' → logprob: -4.938287258148193
    6. '.origin' → logprob: -7.313287258148193
    7. '.vertex' → logprob: -7.438287258148193
    8. '.start' → logprob: -7.688287258148193
    9. 'face' → logprob: -7.938287258148193
    10. 'initial' → logprob: -8.063287734985352

Token 1986: '_deg' (ID: 144310)
  Prédit: '_deg'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_deg' → logprob: -0.24903647601604462
    2. '_' → logprob: -1.749036431312561
    3. '<|end|>' → logprob: -4.3740363121032715
    4. ')' → logprob: -4.4990363121032715
    5. '_degree' → logprob: -5.1240363121032715
    6. '=' → logprob: -5.3740363121032715
    7. '<|end|>' → logprob: -5.3740363121032715
    8. ' =' → logprob: -5.8740363121032715
    9. '_angle' → logprob: -7.1240363121032715
    10. '=_' → logprob: -7.4990363121032715

Token 1987: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.52573561668396
    2. '=' → logprob: -0.90073561668396
    3. '<|end|>' → logprob: -6.400735855102539
    4. ')' → logprob: -7.400735855102539
    5. ' ' → logprob: -8.275735855102539
    6. '_' → logprob: -11.025735855102539
    7. ',' → logprob: -11.525735855102539
    8. '        ' → logprob: -11.775735855102539
    9. '<|end|>' → logprob: -11.900735855102539
    10. 's' → logprob: -11.900735855102539

Token 1988: ' angle' (ID: 16538)
  Prédit: 'angle'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'angle' → logprob: -0.07890795916318893
    2. ' angle' → logprob: -2.5789079666137695
    3. 'float' → logprob: -11.20390796661377
    4. ' float' → logprob: -12.57890796661377
    5. 'int' → logprob: -14.07890796661377
    6. '(angle' → logprob: -15.57890796661377
    7. ' int' → logprob: -15.70390796661377
    8. '60' → logprob: -17.328907012939453
    9. '.angle' → logprob: -17.453907012939453
    10. '   ' → logprob: -17.703907012939453

Token 1989: '_deg' (ID: 144310)
  Prédit: '_deg'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_deg' → logprob: -0.01871216855943203
    2. ')' → logprob: -4.018712043762207
    3. ' )' → logprob: -9.018712043762207
    4. '_' → logprob: -9.143712043762207
    5. ')_' → logprob: -9.518712043762207
    6. 'deg' → logprob: -10.518712043762207
    7. 'Deg' → logprob: -10.643712043762207
    8. '       ' → logprob: -10.768712043762207
    9. '[' → logprob: -10.768712043762207
    10. '_degree' → logprob: -11.018712043762207

Token 1990: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1991: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1992: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.5999754071235657
    2. '       ' → logprob: -1.224975347518921
    3. '#' → logprob: -2.474975347518921
    4. 'if' → logprob: -3.599975347518921
    5. ' self' → logprob: -4.3499755859375
    6. 'assert' → logprob: -4.3499755859375
    7. '   ' → logprob: -5.2249755859375
    8. '<|end|>' → logprob: -5.5999755859375
    9. 'A' → logprob: -5.7249755859375
    10. ' if' → logprob: -6.0999755859375

Token 1993: '.t' (ID: 1370)
  Prédit: '.t'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.t' → logprob: -0.003341452218592167
    2. '._' → logprob: -6.1283416748046875
    3. '.first' → logprob: -7.2533416748046875
    4. '.angle' → logprob: -8.878341674804688
    5. '.face' → logprob: -9.503341674804688
    6. '.' → logprob: -9.628341674804688
    7. '.initial' → logprob: -10.253341674804688
    8. '.direction' → logprob: -11.128341674804688
    9. '.geometry' → logprob: -11.378341674804688
    10. '.vertex' → logprob: -11.378341674804688

Token 1994: 'etra' (ID: 72836)
  Prédit: 'etra'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'etra' → logprob: -3.1186566047836095e-05
    2. 'et' → logprob: -12.250031471252441
    3. '
' → logprob: -12.375031471252441
    4. '=' → logprob: -12.875031471252441
    5. ' tetra' → logprob: -13.125031471252441
    6. '   ' → logprob: -13.500031471252441
    7. 'етра' → logprob: -13.750031471252441
    8. 'etr' → logprob: -13.750031471252441
    9. 'etri' → logprob: -13.875031471252441
    10. ' =' → logprob: -14.125031471252441

Token 1995: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.4515446126461029
    2. ' =' → logprob: -1.0765446424484253
    3. '.' → logprob: -4.451544761657715
    4. '<|end|>' → logprob: -5.076544761657715
    5. '   ' → logprob: -6.826544761657715
    6. '       ' → logprob: -7.076544761657715
    7. ':' → logprob: -7.201544761657715
    8. ' ' → logprob: -7.951544761657715
    9. '_' → logprob: -8.326544761657715
    10. '        ' → logprob: -8.576544761657715

Token 1996: ' tetra' (ID: 176775)
  Prédit: 'tet'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tet' → logprob: -0.004666149616241455
    2. ' tetra' → logprob: -5.379666328430176
    3. 't' → logprob: -10.004666328430176
    4. '	t' → logprob: -15.504666328430176
    5. '   ' → logprob: -15.754666328430176
    6. 'etra' → logprob: -16.00466537475586
    7. 'ted' → logprob: -17.25466537475586
    8. ' tet' → logprob: -17.37966537475586
    9. 'tle' → logprob: -17.62966537475586
    10. ' ' → logprob: -17.75466537475586

Token 1997: '

' (ID: 279)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.15553215146064758
    2. '
' → logprob: -2.780532121658325
    3. '       ' → logprob: -3.280532121658325
    4. '<|end|>' → logprob: -3.405532121658325
    5. 'def' → logprob: -5.030532360076904
    6. ' def' → logprob: -6.780532360076904
    7. ')' → logprob: -7.405532360076904
    8. '    
' → logprob: -7.655532360076904
    9. '<|end|>' → logprob: -7.905532360076904
    10. '	def' → logprob: -8.030531883239746

Token 1998: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06311224400997162
    2. 'def' → logprob: -3.438112258911133
    3. '       ' → logprob: -3.813112258911133
    4. '<|end|>' → logprob: -5.438112258911133
    5. ' def' → logprob: -6.938112258911133
    6. '
' → logprob: -7.188112258911133
    7. '    
' → logprob: -8.688112258911133
    8. ')' → logprob: -8.813112258911133
    9. '        
' → logprob: -8.938112258911133
    10. '	def' → logprob: -9.563112258911133

Token 1999: ' #' (ID: 1069)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' (adapté à ' #') → logprob: -0.3279683589935303
    2. '       ' → logprob: -1.8279683589935303
    3. 'self' → logprob: -2.7029683589935303
    4. 'face' → logprob: -3.5779683589935303
    5. 'origin' → logprob: -4.577968597412109
    6. '   ' → logprob: -4.952968597412109
    7. 'first' → logprob: -5.952968597412109
    8. 'def' → logprob: -6.577968597412109
    9. 'v' → logprob: -6.952968597412109
    10. 'A' → logprob: -7.202968597412109

Token 2000: ' Determine' (ID: 57076)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.46924009919166565
    2. '       ' → logprob: -1.4692400693893433
    3. 'self' → logprob: -2.594240188598633
    4. 'face' → logprob: -3.469240188598633
    5. 'origin' → logprob: -4.344240188598633
    6. 'v' → logprob: -5.094240188598633
    7. ' #' → logprob: -5.219240188598633
    8. 'first' → logprob: -5.594240188598633
    9. 'if' → logprob: -6.344240188598633
    10. 'A' → logprob: -6.594240188598633

Token 2001: ' first' (ID: 1577)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.08707156032323837
    2. '#' → logprob: -2.962071657180786
    3. 'the' → logprob: -4.212071418762207
    4. 'first' → logprob: -5.212071418762207
    5. 'face' → logprob: -5.587071418762207
    6. ' self' → logprob: -5.587071418762207
    7. 'op' → logprob: -6.337071418762207
    8. ' #' → logprob: -7.587071418762207
    9. 'which' → logprob: -7.712071418762207
    10. 'initial' → logprob: -7.712071418762207

Token 2002: ' face' (ID: 4950)
  Prédit: '_face'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_face' → logprob: -0.45912373065948486
    2. '_edge' → logprob: -1.0841237306594849
    3. 'face' → logprob: -3.7091236114501953
    4. '_vertex' → logprob: -5.959123611450195
    5. 'edge' → logprob: -6.584123611450195
    6. '#' → logprob: -8.209123611450195
    7. 'vertex' → logprob: -8.334123611450195
    8. ' face' → logprob: -8.709123611450195
    9. '_direction' → logprob: -8.959123611450195
    10. '_origin' → logprob: -9.084123611450195

Token 2003: ' =' (ID: 314)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.40209290385246277
    2. 'self' → logprob: -1.2770929336547852
    3. ' =' → logprob: -3.152092933654785
    4. '(self' → logprob: -5.277092933654785
    5. ' self' → logprob: -6.402092933654785
    6. '=' → logprob: -6.777092933654785
    7. '=self' → logprob: -6.902092933654785
    8. 'for' → logprob: -8.902092933654785
    9. ',' → logprob: -9.152092933654785
    10. ':' → logprob: -9.902092933654785

Token 2004: ' Face' (ID: 29049)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.7080004215240479
    2. 'tet' → logprob: -0.7080004215240479
    3. 'Face' → logprob: -4.458000183105469
    4. ' tetra' → logprob: -6.583000183105469
    5. ' self' → logprob: -7.083000183105469
    6. '   ' → logprob: -7.833000183105469
    7. 'f' → logprob: -9.208000183105469
    8. 'fro' → logprob: -9.583000183105469
    9. ' Face' → logprob: -9.708000183105469
    10. '       ' → logprob: -9.833000183105469

Token 2005: '(A' (ID: 10706)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -1.1091041564941406
    2. 'self' → logprob: -1.1091041564941406
    3. ' =' → logprob: -1.8591041564941406
    4. '(Vertex' → logprob: -1.8591041564941406
    5. '(self' → logprob: -4.609104156494141
    6. '       ' → logprob: -4.859104156494141
    7. 'Vertex' → logprob: -5.109104156494141
    8. '   ' → logprob: -6.234104156494141
    9. '=self' → logprob: -6.484104156494141
    10. '           ' → logprob: -7.734104156494141

Token 2006: ',' (ID: 11)
  Prédit: '(Vertex'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(Vertex' → logprob: -0.36587387323379517
    2. ',' → logprob: -1.2408738136291504
    3. 'Vertex' → logprob: -4.61587381362915
    4. '.Vertex' → logprob: -5.49087381362915
    5. '('' → logprob: -6.61587381362915
    6. ' Vertex' → logprob: -7.99087381362915
    7. '',' → logprob: -8.365874290466309
    8. 'A' → logprob: -8.365874290466309
    9. ')' → logprob: -9.240874290466309
    10. '.' → logprob: -9.490874290466309

Token 2007: ' X' (ID: 2127)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.21878115832805634
    2. 'Vertex' → logprob: -1.7187811136245728
    3. 'self' → logprob: -4.593780994415283
    4. ' v' → logprob: -5.593780994415283
    5. ''' → logprob: -6.218780994415283
    6. ' Vertex' → logprob: -7.093780994415283
    7. ' self' → logprob: -8.968781471252441
    8. 'x' → logprob: -9.468781471252441
    9. 'vertex' → logprob: -9.593781471252441
    10. '   ' → logprob: -10.093781471252441

Token 2008: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00041518008220009506
    2. ',v' → logprob: -8.250414848327637
    3. ' ,' → logprob: -9.500414848327637
    4. ',
' → logprob: -10.250414848327637
    5. ')' → logprob: -11.375414848327637
    6. 'v' → logprob: -11.500414848327637
    7. ',self' → logprob: -11.875414848327637
    8. '),' → logprob: -12.500414848327637
    9. 'self' → logprob: -12.500414848327637
    10. '       ' → logprob: -13.750414848327637

Token 2009: ' Y' (ID: 865)
  Prédit: 'Y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Y' → logprob: -0.003073021536692977
    2. ' Y' → logprob: -5.878073215484619
    3. 'y' → logprob: -9.253072738647461
    4. 'v' → logprob: -9.378072738647461
    5. '   ' → logprob: -10.128072738647461
    6. '       ' → logprob: -11.503072738647461
    7. '           ' → logprob: -11.753072738647461
    8. 'self' → logprob: -12.003072738647461
    9. ' ' → logprob: -12.253072738647461
    10. '  ' → logprob: -12.253072738647461

Token 2010: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.781964898109436
    2. ')' → logprob: -1.031964898109436
    3. '       ' → logprob: -1.781964898109436
    4. 'self' → logprob: -4.4069647789001465
    5. '(self' → logprob: -6.2819647789001465
    6. ',' → logprob: -6.9069647789001465
    7. ')
' → logprob: -7.4069647789001465
    8. '(A' → logprob: -7.6569647789001465
    9. '(' → logprob: -7.7819647789001465
    10. '):
' → logprob: -8.156965255737305

Token 2011: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0005662570474669337
    2. 'self' → logprob: -8.000566482543945
    3. '(' → logprob: -9.125566482543945
    4. '(self' → logprob: -10.000566482543945
    5. ',' → logprob: -11.125566482543945
    6. '   ' → logprob: -11.500566482543945
    7. '<|end|>' → logprob: -11.625566482543945
    8. '
' → logprob: -11.750566482543945
    9. '           ' → logprob: -11.875566482543945
    10. '        
' → logprob: -12.250566482543945

Token 2012: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.0003491705865599215
    2. '       ' → logprob: -8.000349044799805
    3. ' self' → logprob: -11.750349044799805
    4. 'face' → logprob: -12.750349044799805
    5. 'f' → logprob: -13.375349044799805
    6. 'first' → logprob: -13.625349044799805
    7. '(self' → logprob: -16.000349044799805
    8. 'v' → logprob: -16.375349044799805
    9. '   ' → logprob: -18.125349044799805
    10. '        
' → logprob: -18.125349044799805

Token 2013: '.first' (ID: 14272)
  Prédit: 'first'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'first' → logprob: -0.5335688591003418
    2. '.first' → logprob: -0.9085688591003418
    3. 'face' → logprob: -5.283568859100342
    4. '.face' → logprob: -6.033568859100342
    5. '=' → logprob: -6.533568859100342
    6. ' =' → logprob: -7.783568859100342
    7. '_first' → logprob: -8.7835693359375
    8. '.t' → logprob: -8.9085693359375
    9. '_face' → logprob: -8.9085693359375
    10. '.' → logprob: -9.0335693359375

Token 2014: '_face' (ID: 75619)
  Prédit: '_face'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_face' → logprob: -0.2529653310775757
    2. '_edge' → logprob: -1.5029653310775757
    3. 'Face' → logprob: -8.252964973449707
    4. '_' → logprob: -8.502964973449707
    5. 'Edge' → logprob: -8.502964973449707
    6. 'face' → logprob: -9.377964973449707
    7. '_direction' → logprob: -9.502964973449707
    8. '_edges' → logprob: -10.877964973449707
    9. '_angle' → logprob: -10.877964973449707
    10. '._' → logprob: -11.002964973449707

Token 2015: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.20142288506031036
    2. ' =' → logprob: -1.701422929763794
    3. '=self' → logprob: -11.826422691345215
    4. 'self' → logprob: -13.576422691345215
    5. '=f' → logprob: -14.701422691345215
    6. ':' → logprob: -15.576422691345215
    7. ' ' → logprob: -16.32642364501953
    8. ')' → logprob: -16.57642364501953
    9. '   ' → logprob: -16.95142364501953
    10. '.' → logprob: -17.20142364501953

Token 2016: ' tetra' (ID: 176775)
  Prédit: 'tet'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tet' → logprob: -0.4035968780517578
    2. 'Face' → logprob: -1.2785968780517578
    3. 'self' → logprob: -3.028596878051758
    4. ' tetra' → logprob: -6.153596878051758
    5. 't' → logprob: -6.403596878051758
    6. 'f' → logprob: -7.153596878051758
    7. ' Face' → logprob: -8.528596878051758
    8. '   ' → logprob: -9.028596878051758
    9. 'face' → logprob: -9.403596878051758
    10. ' self' → logprob: -10.278596878051758

Token 2017: '.get' (ID: 775)
  Prédit: '.get'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.get' → logprob: -0.00026753442944027483
    2. 'get' → logprob: -8.37526798248291
    3. '.' → logprob: -11.00026798248291
    4. '   ' → logprob: -11.62526798248291
    5. '.faces' → logprob: -12.62526798248291
    6. ' .' → logprob: -13.12526798248291
    7. 'faces' → logprob: -13.12526798248291
    8. ').' → logprob: -14.25026798248291
    9. '.face' → logprob: -14.50026798248291
    10. 'face' → logprob: -14.62526798248291

Token 2018: '_face' (ID: 75619)
  Prédit: '_face'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_face' → logprob: -0.0003360582049936056
    2. 'face' → logprob: -8.000335693359375
    3. 'Face' → logprob: -14.375335693359375
    4. ' face' → logprob: -17.750335693359375
    5. '_fac' → logprob: -18.375335693359375
    6. '_faces' → logprob: -18.875335693359375
    7. ' Face' → logprob: -19.500335693359375
    8. '(face' → logprob: -19.750335693359375
    9. '_FACE' → logprob: -20.125335693359375
    10. 'get' → logprob: -20.375335693359375

Token 2019: '_from' (ID: 12526)
  Prédit: '_from'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_from' → logprob: -0.0017032715259119868
    2. 'from' → logprob: -6.376703262329102
    3. '_op' → logprob: -15.251703262329102
    4. 'op' → logprob: -15.501703262329102
    5. '(' → logprob: -16.1267032623291
    6. 'From' → logprob: -16.2517032623291
    7. '```' → logprob: -16.3767032623291
    8. '`' → logprob: -16.6267032623291
    9. '
' → logprob: -17.0017032623291
    10. '   ' → logprob: -17.3767032623291

Token 2020: '_vertices' (ID: 96842)
  Prédit: '_vertices'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_vertices' → logprob: -0.02063228003680706
    2. 'vertices' → logprob: -3.895632266998291
    3. 'Vertices' → logprob: -9.52063274383545
    4. 'str' → logprob: -11.77063274383545
    5. 'v' → logprob: -12.39563274383545
    6. '
' → logprob: -14.14563274383545
    7. 'self' → logprob: -14.27063274383545
    8. 'string' → logprob: -14.27063274383545
    9. 'import' → logprob: -14.52063274383545
    10. '```' → logprob: -14.52063274383545

Token 2021: '(Vertex' (ID: 175535)
  Prédit: '(Vertex'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(Vertex' → logprob: -0.0017298025777563453
    2. 'Vertex' → logprob: -6.751729965209961
    3. '('' → logprob: -7.501729965209961
    4. ''' → logprob: -12.376729965209961
    5. '("' → logprob: -13.751729965209961
    6. ' Vertex' → logprob: -14.376729965209961
    7. '<Vertex' → logprob: -14.751729965209961
    8. '(' → logprob: -15.001729965209961
    9. '.Vertex' → logprob: -15.376729965209961
    10. '`' → logprob: -15.876729965209961

Token 2022: '.A' (ID: 1336)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.043273888528347015
    2. '.A' → logprob: -3.16827392578125
    3. '.' → logprob: -8.79327392578125
    4. ''A' → logprob: -9.66827392578125
    5. ' A' → logprob: -10.66827392578125
    6. '   ' → logprob: -11.41827392578125
    7. '`' → logprob: -12.04327392578125
    8. '```' → logprob: -12.66827392578125
    9. '"A' → logprob: -13.04327392578125
    10. '	A' → logprob: -13.41827392578125

Token 2023: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0006631145952269435
    2. ' ,' → logprob: -8.125662803649902
    3. ',A' → logprob: -8.875662803649902
    4. ',v' → logprob: -9.250662803649902
    5. ',self' → logprob: -10.125662803649902
    6. '.A' → logprob: -11.000662803649902
    7. 'A' → logprob: -11.125662803649902
    8. '   ' → logprob: -11.500662803649902
    9. ',V' → logprob: -11.625662803649902
    10. ',
' → logprob: -11.750662803649902

Token 2024: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -3.1424973713001236e-05
    2. 'self' → logprob: -10.500031471252441
    3. 'e' → logprob: -13.250031471252441
    4. ' v' → logprob: -13.750031471252441
    5. '   ' → logprob: -15.375031471252441
    6. '           ' → logprob: -15.750031471252441
    7. '
' → logprob: -16.125030517578125
    8. '            
' → logprob: -16.625030517578125
    9. '       ' → logprob: -17.125030517578125
    10. '
' → logprob: -17.375030517578125

Token 2025: 'X' (ID: 55)
  Prédit: 'X'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'X' → logprob: -3.128163257315464e-07
    2. ')' → logprob: -15.875
    3. 'Y' → logprob: -16.75
    4. ' X' → logprob: -16.875
    5. '
' → logprob: -17.5
    6. '[' → logprob: -18.625
    7. 'x' → logprob: -18.875
    8. '   ' → logprob: -19.125
    9. 'C' → logprob: -19.5625
    10. '(X' → logprob: -19.75

Token 2026: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00014764121442567557
    2. ',v' → logprob: -9.750147819519043
    3. ' ,' → logprob: -9.750147819519043
    4. ',
' → logprob: -10.625147819519043
    5. '`,' → logprob: -13.500147819519043
    6. '‌,' → logprob: -13.750147819519043
    7. ')' → logprob: -14.500147819519043
    8. 'v' → logprob: -15.000147819519043
    9. '   ' → logprob: -15.375147819519043
    10. ',",' → logprob: -15.375147819519043

Token 2027: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.0040785204619169235
    2. ' v' → logprob: -5.504078388214111
    3. '_v' → logprob: -17.254077911376953
    4. '	v' → logprob: -17.629077911376953
    5. ')v' → logprob: -18.379077911376953
    6. 'vy' → logprob: -19.379077911376953
    7. 'vq' → logprob: -19.504077911376953
    8. '.v' → logprob: -19.629077911376953
    9. ' ' → logprob: -20.379077911376953
    10. '    ' → logprob: -20.504077911376953

Token 2028: 'Y' (ID: 56)
  Prédit: 'Y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Y' → logprob: -4.4849443838757e-06
    2. ')' → logprob: -12.375004768371582
    3. '<|end|>' → logprob: -16.250003814697266
    4. ' Y' → logprob: -16.750003814697266
    5. 'v' → logprob: -17.375003814697266
    6. '_Y' → logprob: -17.625003814697266
    7. '	Y' → logprob: -18.125003814697266
    8. '),' → logprob: -18.125003814697266
    9. 'X' → logprob: -18.500003814697266
    10. '[' → logprob: -18.875003814697266

Token 2029: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.735893965815194e-05
    2. '       ' → logprob: -11.375017166137695
    3. ')
' → logprob: -12.625017166137695
    4. ' )' → logprob: -13.375017166137695
    5. '   ' → logprob: -15.125017166137695
    6. ')}' → logprob: -15.250017166137695
    7. '))' → logprob: -16.125017166137695
    8. '),' → logprob: -16.625017166137695
    9. ')return' → logprob: -16.750017166137695
    10. ')`' → logprob: -17.250017166137695

Token 2030: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.25510215759277344
    2. '<|end|>' → logprob: -1.8801021575927734
    3. '   ' → logprob: -3.0051021575927734
    4. ')' → logprob: -4.380102157592773
    5. '```' → logprob: -5.505102157592773
    6. 'self' → logprob: -5.505102157592773
    7. 'def' → logprob: -7.630102157592773
    8. '
' → logprob: -7.755102157592773
    9. '<|end|>' → logprob: -7.880102157592773
    10. 'class' → logprob: -8.755102157592773

Token 2031: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.07780253142118454
    2. '   ' → logprob: -2.8278024196624756
    3. 'def' → logprob: -4.577802658081055
    4. 'self' → logprob: -5.952802658081055
    5. '#' (adapté à ' #') → logprob: -6.202802658081055
    6. 'v' → logprob: -7.952802658081055
    7. '
' → logprob: -8.952802658081055
    8. '```' → logprob: -9.702802658081055
    9. '        
' → logprob: -9.827802658081055
    10. 'u' → logprob: -10.077802658081055

Token 2032: ' Point' (ID: 9971)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.1459643691778183
    2. '       ' → logprob: -2.8959643840789795
    3. 'self' → logprob: -2.8959643840789795
    4. 'def' → logprob: -4.6459641456604
    5. 'origin' → logprob: -5.0209641456604
    6. '   ' → logprob: -5.5209641456604
    7. '```' → logprob: -7.1459641456604
    8. '
' → logprob: -7.1459641456604
    9. 'first' → logprob: -7.2709641456604
    10. 'face' → logprob: -7.3959641456604

Token 2033: ' A' (ID: 355)
  Prédit: '_on'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_on' → logprob: -0.8363772034645081
    2. '_coords' → logprob: -2.0863771438598633
    3. '_pos' → logprob: -2.3363771438598633
    4. '_position' → logprob: -2.5863771438598633
    5. '0' → logprob: -2.7113771438598633
    6. ' =' → logprob: -3.0863771438598633
    7. 's' → logprob: -3.4613771438598633
    8. '_in' → logprob: -3.7113771438598633
    9. '=' → logprob: -4.086377143859863
    10. '_angle' → logprob: -4.586377143859863

Token 2034: ' coords' (ID: 53253)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.10331365466117859
    2. '=' → logprob: -2.603313684463501
    3. ',' → logprob: -5.103313446044922
    4. '=self' → logprob: -5.853313446044922
    5. 'self' → logprob: -5.853313446044922
    6. ':' → logprob: -6.228313446044922
    7. '_position' → logprob: -6.228313446044922
    8. '_pos' → logprob: -6.978313446044922
    9. '_' → logprob: -6.978313446044922
    10. '_coords' → logprob: -7.103313446044922

Token 2035: '
' (ID: 198)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.39731526374816895
    2. '=' → logprob: -1.272315263748169
    3. 'self' → logprob: -3.522315263748169
    4. '       ' → logprob: -4.39731502532959
    5. '=self' → logprob: -5.52231502532959
    6. ':' → logprob: -7.64731502532959
    7. '3' → logprob: -8.39731502532959
    8. ' self' → logprob: -8.89731502532959
    9. 'origin' → logprob: -9.14731502532959
    10. '_coords' → logprob: -9.27231502532959

Token 2036: '       ' (ID: 309)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.775122344493866
    2. '       ' → logprob: -0.900122344493866
    3. ' =' → logprob: -2.6501224040985107
    4. 'self' → logprob: -3.0251224040985107
    5. '=self' → logprob: -5.025122165679932
    6. '   ' → logprob: -6.900122165679932
    7. 'origin' → logprob: -7.150122165679932
    8. 'coords' → logprob: -7.150122165679932
    9. ':' → logprob: -7.275122165679932
    10. ' self' → logprob: -7.650122165679932

Token 2037: ' A' (ID: 355)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0024579374585300684
    2. 'origin' → logprob: -6.752458095550537
    3. '       ' → logprob: -7.002458095550537
    4. 'point' → logprob: -8.877457618713379
    5. 'a' → logprob: -9.002457618713379
    6. 'p' → logprob: -10.502457618713379
    7. 'A' (adapté à ' A') → logprob: -10.627457618713379
    8. ' self' → logprob: -10.877457618713379
    9. 'pa' → logprob: -11.752457618713379
    10. '   ' → logprob: -12.002457618713379

Token 2038: '3' (ID: 18)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.44300395250320435
    2. '_coords' → logprob: -1.5680038928985596
    3. '=' → logprob: -2.5680038928985596
    4. '_coord' → logprob: -2.6930038928985596
    5. '_pos' → logprob: -6.193004131317139
    6. 'coords' → logprob: -6.318004131317139
    7. 'coord' → logprob: -8.31800365447998
    8. '_point' → logprob: -8.44300365447998
    9. '_origin' → logprob: -9.31800365447998
    10. '=self' → logprob: -9.56800365447998

Token 2039: 'd' (ID: 67)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.42937302589416504
    2. '=' → logprob: -1.054373025894165
    3. ':' → logprob: -7.554372787475586
    4. '_coords' → logprob: -9.554372787475586
    5. 'coords' → logprob: -10.804372787475586
    6. ')' → logprob: -11.179372787475586
    7. '=self' → logprob: -11.804372787475586
    8. '_coord' → logprob: -12.429372787475586
    9. '   ' → logprob: -12.679372787475586
    10. '  ' → logprob: -12.804372787475586

Token 2040: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.38692033290863037
    2. ' =' → logprob: -1.1369203329086304
    3. ')' → logprob: -11.011919975280762
    4. '=self' → logprob: -11.261919975280762
    5. ':' → logprob: -11.761919975280762
    6. '   ' → logprob: -12.011919975280762
    7. '       ' → logprob: -13.011919975280762
    8. 'self' → logprob: -13.136919975280762
    9. ' ' → logprob: -14.886919975280762
    10. ',' → logprob: -15.386919975280762

Token 2041: ' tetra' (ID: 176775)
  Prédit: 'tet'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tet' → logprob: -0.009666013531386852
    2. 'self' → logprob: -5.0096659660339355
    3. ' tetra' → logprob: -6.0096659660339355
    4. 't' → logprob: -8.509666442871094
    5. '   ' → logprob: -9.009666442871094
    6. ' self' → logprob: -9.884666442871094
    7. 'tuple' → logprob: -10.697166442871094
    8. ' ' → logprob: -11.759666442871094
    9. '```' → logprob: -11.759666442871094
    10. '(t' → logprob: -12.072166442871094

Token 2042: '.vertices' (ID: 47509)
  Prédit: '.vertices'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.vertices' → logprob: -0.0003787184541579336
    2. 'vertices' → logprob: -8.000378608703613
    3. '.' → logprob: -11.000378608703613
    4. ' .' → logprob: -11.625378608703613
    5. '   ' → logprob: -12.625378608703613
    6. 'A' → logprob: -12.625378608703613
    7. '.v' → logprob: -13.125378608703613
    8. '_vertices' → logprob: -13.625378608703613
    9. '3' → logprob: -13.750378608703613
    10. '.points' → logprob: -13.750378608703613

Token 2043: '_' (ID: 62)
  Prédit: '_'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.02466461807489395
    2. '3' → logprob: -3.7746646404266357
    3. '[' → logprob: -6.649664402008057
    4. '(Vertex' → logprob: -9.399664878845215
    5. 'Vertex' → logprob: -11.274664878845215
    6. '```' → logprob: -11.524664878845215
    7. '_[' → logprob: -12.524664878845215
    8. '   ' → logprob: -12.649664878845215
    9. '__' → logprob: -13.274664878845215
    10. '<Vertex' → logprob: -14.024664878845215

Token 2044: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.006771499291062355
    2. 'Vertex' → logprob: -5.381771564483643
    3. '(Vertex' → logprob: -6.631771564483643
    4. 'A' → logprob: -7.256771564483643
    5. '[' → logprob: -10.006771087646484
    6. '
' → logprob: -10.756771087646484
    7. '_' → logprob: -11.131771087646484
    8. '['' → logprob: -11.506771087646484
    9. '<Vertex' → logprob: -11.631771087646484
    10. '```' → logprob: -12.381771087646484

Token 2045: 'd' (ID: 67)
  Prédit: 'D'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'D' → logprob: -0.04303082078695297
    2. '3' → logprob: -3.4180307388305664
    3. 'd' → logprob: -4.918030738830566
    4. '[' → logprob: -7.043030738830566
    5. 'Vertex' → logprob: -7.168030738830566
    6. '(Vertex' → logprob: -8.293030738830566
    7. '<Vertex' → logprob: -10.418030738830566
    8. 'A' → logprob: -10.543030738830566
    9. 'math' → logprob: -10.543030738830566
    10. 'C' → logprob: -12.043030738830566

Token 2046: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.00012856863031629473
    2. '(Vertex' → logprob: -9.125128746032715
    3. 'Vertex' → logprob: -12.125128746032715
    4. '['' → logprob: -12.625128746032715
    5. '=' → logprob: -12.875128746032715
    6. 'A' → logprob: -13.375128746032715
    7. '[
' → logprob: -13.500128746032715
    8. '[A' → logprob: -14.250128746032715
    9. '<Vertex' → logprob: -14.250128746032715
    10. '
' → logprob: -14.625128746032715

Token 2047: 'Vertex' (ID: 14196)
  Prédit: 'Vertex'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Vertex' → logprob: -7.219262624857947e-05
    2. '(Vertex' → logprob: -10.000072479248047
    3. ''' → logprob: -10.625072479248047
    4. ' Vertex' → logprob: -13.625072479248047
    5. '"' → logprob: -14.625072479248047
    6. '   ' → logprob: -15.000072479248047
    7. '<Vertex' → logprob: -16.000072479248047
    8. 'Vert' → logprob: -16.250072479248047
    9. '.Vertex' → logprob: -16.500072479248047
    10. 'vertex' → logprob: -17.750072479248047

Token 2048: '.A' (ID: 1336)
  Prédit: '.A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.A' → logprob: -0.10496965050697327
    2. 'A' → logprob: -2.3549697399139404
    3. ''A' → logprob: -5.354969501495361
    4. '"A' → logprob: -10.72996997833252
    5. '.' → logprob: -13.47996997833252
    6. ''.' → logprob: -13.85496997833252
    7. '['' → logprob: -14.10496997833252
    8. ''' → logprob: -14.60496997833252
    9. '   ' → logprob: -14.72996997833252
    10. '('' → logprob: -15.22996997833252

Token 2049: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.3135952651500702
    2. ']
' → logprob: -1.3135952949523926
    3. '       ' → logprob: -8.313594818115234
    4. ']
' → logprob: -9.688594818115234
    5. ']

' → logprob: -11.813594818115234
    6. '   ' → logprob: -11.938594818115234
    7. ' ]' → logprob: -12.188594818115234
    8. ' ]
' → logprob: -12.688594818115234
    9. '           ' → logprob: -14.188594818115234
    10. '];' → logprob: -14.563594818115234

Token 2050: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.20551756024360657
    2. 'v' → logprob: -2.830517530441284
    3. 'X' → logprob: -3.080517530441284
    4. 'XY' → logprob: -3.080517530441284
    5. 'u' → logprob: -3.705517530441284
    6. ' v' → logprob: -6.705517768859863
    7. ' u' → logprob: -6.955517768859863
    8. 'self' → logprob: -7.205517768859863
    9. ' XY' → logprob: -7.205517768859863
    10. '#' → logprob: -7.455517768859863

Token 2051: ' X' (ID: 2127)
  Prédit: 'XY'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'XY' → logprob: -1.1214241981506348
    2. 'X' (adapté à ' X') → logprob: -1.2464241981506348
    3. 'v' → logprob: -1.7464241981506348
    4. 'first' → logprob: -2.2464241981506348
    5. 'AX' → logprob: -2.9964241981506348
    6. '#' → logprob: -3.9964241981506348
    7. 'self' → logprob: -4.121424198150635
    8. 'e' → logprob: -4.621424198150635
    9. 'edge' → logprob: -5.621424198150635
    10. 'face' → logprob: -6.746424198150635

Token 2052: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -9.758300438988954e-05
    2. ' =' → logprob: -9.750097274780273
    3. '_coords' → logprob: -10.875097274780273
    4. '_' → logprob: -11.000097274780273
    5. '=' → logprob: -13.750097274780273
    6. ',' → logprob: -14.500097274780273
    7. ' ' → logprob: -14.875097274780273
    8. '_coord' → logprob: -15.125097274780273
    9. '_xyz' → logprob: -15.375097274780273
    10. '_vec' → logprob: -15.625097274780273

Token 2053: 'd' (ID: 67)
  Prédit: 'd'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.0009113443666137755
    2. ' =' → logprob: -7.500911235809326
    3. '3' → logprob: -8.125911712646484
    4. '=' → logprob: -9.875911712646484
    5. '_d' → logprob: -11.875911712646484
    6. ' d' → logprob: -13.750911712646484
    7. ' ' → logprob: -13.875911712646484
    8. ',' → logprob: -14.000911712646484
    9. '=d' → logprob: -15.625911712646484
    10. '  ' → logprob: -15.875911712646484

Token 2054: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.1270396113395691
    2. ' =' → logprob: -2.127039670944214
    3. ')' → logprob: -9.877039909362793
    4. ':' → logprob: -10.502039909362793
    5. ',' → logprob: -10.752039909362793
    6. '   ' → logprob: -12.502039909362793
    7. ' ' → logprob: -13.127039909362793
    8. '       ' → logprob: -13.752039909362793
    9. ')=' → logprob: -14.377039909362793
    10. '    ' → logprob: -14.752039909362793

Token 2055: ' tetra' (ID: 176775)
  Prédit: 'tet'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tet' → logprob: -0.004660099744796753
    2. ' tetra' → logprob: -5.379660129547119
    3. 't' → logprob: -10.504659652709961
    4. 'self' → logprob: -13.129659652709961
    5. 'tuple' → logprob: -13.379659652709961
    6. '   ' → logprob: -13.504659652709961
    7. '[t' → logprob: -14.129659652709961
    8. '(t' → logprob: -14.254659652709961
    9. '```' → logprob: -14.254659652709961
    10. 'tensor' → logprob: -14.629659652709961

Token 2056: '.vertices' (ID: 47509)
  Prédit: '.vertices'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.vertices' → logprob: -0.001194275333546102
    2. 'vertices' → logprob: -7.001194477081299
    3. '.' → logprob: -9.12619400024414
    4. '.vector' → logprob: -9.25119400024414
    5. ' .' → logprob: -10.62619400024414
    6. '.faces' → logprob: -11.50119400024414
    7. '.v' → logprob: -11.87619400024414
    8. ' vertices' → logprob: -12.12619400024414
    9. '._' → logprob: -12.25119400024414
    10. '
' → logprob: -12.37619400024414

Token 2057: '_' (ID: 62)
  Prédit: '_'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.5235529541969299
    2. '3' → logprob: -0.8985529541969299
    3. '[' → logprob: -8.773552894592285
    4. '[X' → logprob: -9.148552894592285
    5. '   ' → logprob: -10.773552894592285
    6. '[D' → logprob: -11.023552894592285
    7. '[C' → logprob: -11.148552894592285
    8. '  ' → logprob: -11.398552894592285
    9. '[v' → logprob: -11.523552894592285
    10. 't' → logprob: -11.648552894592285

Token 2058: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.00012166214582975954
    2. 'v' → logprob: -10.0001220703125
    3. 'first' → logprob: -10.5001220703125
    4. '[v' → logprob: -10.8751220703125
    5. 'e' → logprob: -11.7501220703125
    6. '(v' → logprob: -12.0001220703125
    7. 't' → logprob: -12.2501220703125
    8. '{' → logprob: -12.6251220703125
    9. 'X' → logprob: -13.7501220703125
    10. 'First' → logprob: -14.1251220703125

Token 2059: 'd' (ID: 67)
  Prédit: 'd'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.0012508237268775702
    2. '3' → logprob: -6.751250743865967
    3. '_d' → logprob: -10.251251220703125
    4. '_' → logprob: -10.376251220703125
    5. '4' → logprob: -12.126251220703125
    6. '[' → logprob: -13.251251220703125
    7. '
' → logprob: -13.376251220703125
    8. 'C' → logprob: -14.001251220703125
    9. 'D' → logprob: -14.001251220703125
    10. 'math' → logprob: -14.626251220703125

Token 2060: '[v' (ID: 36561)
  Prédit: '[v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[v' → logprob: -0.0034891199320554733
    2. '[e' → logprob: -6.378489017486572
    3. '[self' → logprob: -7.003489017486572
    4. '[' → logprob: -7.128489017486572
    5. '[first' → logprob: -10.50348949432373
    6. 'v' → logprob: -11.50348949432373
    7. '[V' → logprob: -11.50348949432373
    8. 'e' → logprob: -11.87848949432373
    9. '(v' → logprob: -12.25348949432373
    10. 'self' → logprob: -12.37848949432373

Token 2061: 'X' (ID: 55)
  Prédit: 'X'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'X' → logprob: -1.5048530030981055e-06
    2. 'Y' → logprob: -14.875001907348633
    3. ')' → logprob: -15.125001907348633
    4. ']' → logprob: -15.750001907348633
    5. '[' → logprob: -16.000001907348633
    6. 'First' → logprob: -16.000001907348633
    7. ' X' → logprob: -16.625001907348633
    8. 'first' → logprob: -17.125001907348633
    9. '
' → logprob: -17.375001907348633
    10. 'C' → logprob: -17.375001907348633

Token 2062: ']
' (ID: 1592)
  Prédit: ']
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']
' → logprob: -0.5763933658599854
    2. ']' → logprob: -0.8263933658599854
    3. '       ' → logprob: -7.951393127441406
    4. ' ]
' → logprob: -10.326393127441406
    5. ' ]' → logprob: -10.826393127441406
    6. ']
' → logprob: -10.951393127441406
    7. '   ' → logprob: -11.076393127441406
    8. ']

' → logprob: -11.951393127441406
    9. '           ' → logprob: -13.201393127441406
    10. ',' → logprob: -13.201393127441406

Token 2063: '       ' (ID: 309)
  Prédit: 'Y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Y' → logprob: -0.43059787154197693
    2. '       ' → logprob: -1.0555979013442993
    3. ' Y' → logprob: -6.43059778213501
    4. 'self' → logprob: -9.805598258972168
    5. '   ' → logprob: -9.930598258972168
    6. '#' → logprob: -10.305598258972168
    7. ' ' → logprob: -10.805598258972168
    8. 'v' → logprob: -10.930598258972168
    9. '           ' → logprob: -11.180598258972168
    10. 'AY' → logprob: -11.430598258972168

Token 2064: ' Y' (ID: 865)
  Prédit: 'Y'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Y' (adapté à ' Y') → logprob: -0.0008403576212003827
    2. '#' → logprob: -8.000840187072754
    3. '       ' → logprob: -8.250840187072754
    4. 'self' → logprob: -9.250840187072754
    5. ' Y' → logprob: -9.625840187072754
    6. 'XY' → logprob: -10.875840187072754
    7. 'X' → logprob: -11.125840187072754
    8. 'vector' → logprob: -11.250840187072754
    9. 'AY' → logprob: -11.250840187072754
    10. 'YX' → logprob: -12.625840187072754

Token 2065: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -8.399378566537052e-05
    2. '[' → logprob: -9.500083923339844
    3. ' =' → logprob: -12.500083923339844
    4. '=' → logprob: -13.000083923339844
    5. 'v' → logprob: -14.500083923339844
    6. '[v' → logprob: -14.625083923339844
    7. ' ' → logprob: -14.750083923339844
    8. 't' → logprob: -15.000083923339844
    9. '=v' → logprob: -15.500083923339844
    10. '```' → logprob: -15.500083923339844

Token 2066: 'd' (ID: 67)
  Prédit: '3'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.5759773850440979
    2. 'd' → logprob: -0.8259773850440979
    3. '[' → logprob: -10.700977325439453
    4. 'v' → logprob: -12.700977325439453
    5. ' =' → logprob: -13.700977325439453
    6. 'д' → logprob: -13.700977325439453
    7. '=' → logprob: -13.825977325439453
    8. ''d' → logprob: -14.075977325439453
    9. ' ' → logprob: -14.200977325439453
    10. ')' → logprob: -14.325977325439453

Token 2067: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.22559547424316406
    2. ' =' → logprob: -1.600595474243164
    3. ')' → logprob: -8.850595474243164
    4. ':' → logprob: -10.475595474243164
    5. '   ' → logprob: -12.725595474243164
    6. '[' → logprob: -13.475595474243164
    7. ')=' → logprob: -13.725595474243164
    8. '3' → logprob: -13.850595474243164
    9. ',' → logprob: -14.100595474243164
    10. 's' → logprob: -14.475595474243164

Token 2068: ' tetra' (ID: 176775)
  Prédit: 'tet'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tet' → logprob: -8.602024900028482e-05
    2. ' tetra' → logprob: -9.375085830688477
    3. 'tuple' → logprob: -15.250085830688477
    4. '   ' → logprob: -15.750085830688477
    5. 't' → logprob: -16.375085830688477
    6. '
' → logprob: -16.625085830688477
    7. ' ' → logprob: -17.125085830688477
    8. '(t' → logprob: -17.375085830688477
    9. '[t' → logprob: -17.375085830688477
    10. 'vector' → logprob: -17.375085830688477

Token 2069: '.vertices' (ID: 47509)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.05076142027974129
    2. '3' → logprob: -3.0507614612579346
    3. '[v' → logprob: -6.4257612228393555
    4. '[' → logprob: -7.8007612228393555
    5. 'v' → logprob: -9.925761222839355
    6. 'vertices' → logprob: -10.550761222839355
    7. '[y' → logprob: -10.925761222839355
    8. '_vertices' → logprob: -12.175761222839355
    9. '.vertices' → logprob: -12.425761222839355
    10. '(v' → logprob: -12.675761222839355

Token 2070: '_' (ID: 62)
  Prédit: '_'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.1803123503923416
    2. '3' → logprob: -1.8053123950958252
    3. '[v' → logprob: -8.555312156677246
    4. '[' → logprob: -8.805312156677246
    5. 'v' → logprob: -9.555312156677246
    6. 'd' → logprob: -9.680312156677246
    7. '_d' → logprob: -10.805312156677246
    8. '[Y' → logprob: -11.055312156677246
    9. '```' → logprob: -11.430312156677246
    10. 'D' → logprob: -12.055312156677246

Token 2071: '3' (ID: 18)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.00042090186616405845
    2. 'Vertex' → logprob: -8.250420570373535
    3. '{' → logprob: -9.375420570373535
    4. '3' → logprob: -10.750420570373535
    5. 'Y' → logprob: -11.000420570373535
    6. '[v' → logprob: -11.000420570373535
    7. 'y' → logprob: -12.000420570373535
    8. '{'' → logprob: -12.750420570373535
    9. ' v' → logprob: -13.125420570373535
    10. ''' → logprob: -13.750420570373535

Token 2072: 'd' (ID: 67)
  Prédit: 'd'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.11292006075382233
    2. '3' → logprob: -2.237920045852661
    3. 'v' → logprob: -9.862919807434082
    4. 'f' → logprob: -10.987919807434082
    5. '[' → logprob: -11.862919807434082
    6. 'str' → logprob: -12.487919807434082
    7. '[str' → logprob: -12.487919807434082
    8. '
' → logprob: -12.612919807434082
    9. 'д' → logprob: -13.737919807434082
    10. '[v' → logprob: -13.862919807434082

Token 2073: '[v' (ID: 36561)
  Prédit: '[v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[v' → logprob: -0.031866405159235
    2. '[' → logprob: -3.5318663120269775
    3. 'v' → logprob: -6.531866550445557
    4. '(v' → logprob: -7.781866550445557
    5. '(Vertex' → logprob: -9.531866073608398
    6. '<Vertex' → logprob: -10.031866073608398
    7. 'Vertex' → logprob: -10.781866073608398
    8. '[(' → logprob: -10.781866073608398
    9. '[
' → logprob: -10.906866073608398
    10. '[V' → logprob: -11.531866073608398

Token 2074: 'Y' (ID: 56)
  Prédit: 'Y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Y' → logprob: -0.0012239166535437107
    2. 'X' → logprob: -6.876224040985107
    3. ']' → logprob: -10.00122356414795
    4. '[' → logprob: -10.37622356414795
    5. 'v' → logprob: -10.50122356414795
    6. ')' → logprob: -10.75122356414795
    7. '3' → logprob: -11.12622356414795
    8. '_vertices' → logprob: -11.62622356414795
    9. 'V' → logprob: -11.75122356414795
    10. 'Z' → logprob: -12.75122356414795

Token 2075: ']

' (ID: 3144)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.47485774755477905
    2. ')' → logprob: -1.9748578071594238
    3. '       ' → logprob: -2.224857807159424
    4. ']
' → logprob: -2.224857807159424
    5. ')
' → logprob: -3.849857807159424
    6. '])' → logprob: -8.224857330322266
    7. '[' → logprob: -8.349857330322266
    8. ')]' → logprob: -8.349857330322266
    9. '   ' → logprob: -8.474857330322266
    10. '<|end|>' → logprob: -9.349857330322266

Token 2076: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3909027874469757
    2. '#' → logprob: -1.1409027576446533
    3. 'self' → logprob: -5.890902996063232
    4. 'u' → logprob: -6.890902996063232
    5. 'XY' → logprob: -10.140902519226074
    6. 'v' → logprob: -10.390902519226074
    7. 'X' → logprob: -10.890902519226074
    8. ' #' → logprob: -10.890902519226074
    9. 'vector' → logprob: -11.015902519226074
    10. '```' → logprob: -11.015902519226074

Token 2077: ' #' (ID: 1069)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' (adapté à ' #') → logprob: -0.581362247467041
    2. 'AX' → logprob: -1.206362247467041
    3. '       ' → logprob: -3.081362247467041
    4. 'self' → logprob: -3.206362247467041
    5. 'u' → logprob: -3.581362247467041
    6. 'vec' → logprob: -4.581362247467041
    7. 'v' → logprob: -5.956362247467041
    8. 'edge' → logprob: -6.206362247467041
    9. 'AB' → logprob: -6.456362247467041
    10. '   ' → logprob: -6.581362247467041

Token 2078: ' Compute' (ID: 45438)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.6079608798027039
    2. 'u' → logprob: -2.1079609394073486
    3. 'self' → logprob: -2.2329609394073486
    4. 'AX' → logprob: -2.4829609394073486
    5. 'vec' → logprob: -2.8579609394073486
    6. 'edge' → logprob: -4.3579607009887695
    7. 'e' → logprob: -4.4829607009887695
    8. 'base' → logprob: -4.7329607009887695
    9. 'w' → logprob: -4.8579607009887695
    10. 'v' → logprob: -5.1079607009887695

Token 2079: ' initial' (ID: 4871)
  Prédit: 'u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'u' → logprob: -0.14254459738731384
    2. '#' → logprob: -3.3925445079803467
    3. 'self' → logprob: -3.3925445079803467
    4. 'ux' → logprob: -3.8925445079803467
    5. 'vec' → logprob: -4.017544746398926
    6. 'AX' → logprob: -5.142544746398926
    7. 'base' → logprob: -5.267544746398926
    8. 'vector' → logprob: -6.017544746398926
    9. 'edge' → logprob: -6.267544746398926
    10. 'basis' → logprob: -6.267544746398926

Token 2080: ' direction' (ID: 9262)
  Prédit: 'direction'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'direction' → logprob: -0.2226313054561615
    2. '_direction' → logprob: -2.3476312160491943
    3. 'dir' → logprob: -3.3476312160491943
    4. 'vector' → logprob: -3.7226312160491943
    5. '_dir' → logprob: -3.7226312160491943
    6. '#' → logprob: -4.847631454467773
    7. 'u' → logprob: -4.847631454467773
    8. 'self' → logprob: -6.722631454467773
    9. 'vec' → logprob: -6.847631454467773
    10. 'origin' → logprob: -7.597631454467773

Token 2081: ' vector' (ID: 9727)
  Prédit: ' u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' u' → logprob: -1.0420570373535156
    2. 'u' → logprob: -1.2920570373535156
    3. '       ' → logprob: -2.1670570373535156
    4. ' vector' → logprob: -2.5420570373535156
    5. ' self' → logprob: -2.7920570373535156
    6. 'self' → logprob: -3.1670570373535156
    7. 'vector' → logprob: -4.042057037353516
    8. ' direction' → logprob: -4.417057037353516
    9. 'origin' → logprob: -5.042057037353516
    10. 'v' → logprob: -5.292057037353516

Token 2082: ' on' (ID: 402)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6837314963340759
    2. 'u' → logprob: -0.8087314963340759
    3. 'self' → logprob: -3.3087315559387207
    4. ' u' → logprob: -5.433731555938721
    5. 'v' → logprob: -5.808731555938721
    6. '#' → logprob: -7.058731555938721
    7. 'vector' → logprob: -7.058731555938721
    8. ' self' → logprob: -7.558731555938721
    9. 'from' → logprob: -7.933731555938721
    10. 'origin' → logprob: -8.308731079101562

Token 2083: ' first' (ID: 1577)
  Prédit: 'the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'the' → logprob: -0.5604809522628784
    2. 'self' → logprob: -1.6854809522628784
    3. 'face' → logprob: -2.060481071472168
    4. 'tet' → logprob: -3.310481071472168
    5. 'first' → logprob: -3.810481071472168
    6. 'plane' → logprob: -4.060481071472168
    7. 't' → logprob: -4.310481071472168
    8. ' the' → logprob: -4.810481071472168
    9. '#' → logprob: -5.185481071472168
    10. '       ' → logprob: -5.560481071472168

Token 2084: ' face' (ID: 4950)
  Prédit: 'face'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'face' → logprob: -0.013257991522550583
    2. '_face' → logprob: -4.38825798034668
    3. ' face' → logprob: -7.26325798034668
    4. 'line' → logprob: -11.38825798034668
    5. '       ' → logprob: -11.76325798034668
    6. '   ' → logprob: -11.88825798034668
    7. '
' → logprob: -12.13825798034668
    8. 'edge' → logprob: -13.01325798034668
    9. 'plane' → logprob: -13.13825798034668
    10. 'Face' → logprob: -13.26325798034668

Token 2085: ':
' (ID: 734)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5163429975509644
    2. 'u' → logprob: -1.0163429975509644
    3. 'self' → logprob: -3.766343116760254
    4. 'v' → logprob: -5.141343116760254
    5. ' u' → logprob: -6.016343116760254
    6. '#' → logprob: -6.391343116760254
    7. 'from' → logprob: -6.766343116760254
    8. 'vector' → logprob: -7.016343116760254
    9. 'origin' → logprob: -7.516343116760254
    10. ' =' → logprob: -7.516343116760254

Token 2086: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.037888843566179276
    2. 'u' → logprob: -4.037889003753662
    3. '#' → logprob: -5.162889003753662
    4. ' u' → logprob: -5.287889003753662
    5. 'self' → logprob: -5.412889003753662
    6. 'XY' → logprob: -6.287889003753662
    7. 'v' → logprob: -6.787889003753662
    8. 'AB' → logprob: -8.787888526916504
    9. ' v' → logprob: -9.037888526916504
    10. ' self' → logprob: -9.037888526916504

Token 2087: ' #' (ID: 1069)
  Prédit: 'u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'u' → logprob: -0.546293318271637
    2. 'AX' → logprob: -1.2962932586669922
    3. '#' (adapté à ' #') → logprob: -2.171293258666992
    4. 'self' → logprob: -4.171293258666992
    5. 'v' → logprob: -5.671293258666992
    6. 'AB' → logprob: -6.171293258666992
    7. 'vec' → logprob: -6.296293258666992
    8. 'edge' → logprob: -6.421293258666992
    9. 'AY' → logprob: -6.421293258666992
    10. 'A' → logprob: -6.546293258666992

Token 2088: ' Reference' (ID: 30716)
  Prédit: 'u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'u' → logprob: -0.583165168762207
    2. '#' → logprob: -1.333165168762207
    3. 'self' → logprob: -2.583165168762207
    4. 'vec' → logprob: -3.333165168762207
    5. 'AX' → logprob: -3.583165168762207
    6. 'edge' → logprob: -5.083165168762207
    7. 'AB' → logprob: -5.208165168762207
    8. 'ux' → logprob: -5.458165168762207
    9. 'vector' → logprob: -5.458165168762207
    10. 'dir' → logprob: -6.083165168762207

Token 2089: ' direction' (ID: 9262)
  Prédit: 'vector'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'vector' → logprob: -0.6367279291152954
    2. 'edge' → logprob: -1.1367279291152954
    3. 'direction' → logprob: -3.261727809906006
    4. 'u' → logprob: -3.386727809906006
    5. 'point' → logprob: -3.386727809906006
    6. '_edge' → logprob: -4.136727809906006
    7. 'axis' → logprob: -4.511727809906006
    8. 'vec' → logprob: -5.886727809906006
    9. '_vector' → logprob: -6.261727809906006
    10. '_direction' → logprob: -6.636727809906006

Token 2090: ' is' (ID: 382)
  Prédit: 'AX'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'AX' → logprob: -0.8795597553253174
    2. 'u' → logprob: -1.3795597553253174
    3. ' =' → logprob: -1.8795597553253174
    4. ' is' → logprob: -3.2545597553253174
    5. ' AX' → logprob: -3.3795597553253174
    6. 'self' → logprob: -3.5045597553253174
    7. ':' → logprob: -4.004559516906738
    8. '#' → logprob: -4.629559516906738
    9. 'from' → logprob: -4.879559516906738
    10. '=' → logprob: -5.004559516906738

Token 2091: ' edge' (ID: 11165)
  Prédit: 'vector'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'vector' → logprob: -0.164017915725708
    2. ' vector' → logprob: -1.914017915725708
    3. '       ' → logprob: -6.664017677307129
    4. 'u' → logprob: -7.039017677307129
    5. '   ' → logprob: -7.414017677307129
    6. 'scalar' → logprob: -8.039017677307129
    7. ' scalar' → logprob: -9.414017677307129
    8. '           ' → logprob: -9.601517677307129
    9. ' u' → logprob: -9.664017677307129
    10. '     ' → logprob: -9.976517677307129

Token 2092: ' A' (ID: 355)
  Prédit: '(Vertex'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(Vertex' → logprob: -1.0194346904754639
    2. 'vector' → logprob: -1.5194346904754639
    3. 'A' → logprob: -1.8944346904754639
    4. '(' → logprob: -3.394434690475464
    5. 'from' → logprob: -3.769434690475464
    6. 's' → logprob: -3.769434690475464
    7. 'u' → logprob: -4.019434928894043
    8. 'AX' → logprob: -4.269434928894043
    9. '_AB' → logprob: -4.269434928894043
    10. 'Vertex' → logprob: -4.519434928894043

Token 2093: ' X' (ID: 2127)
  Prédit: 'X'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'X' → logprob: -0.0007781773456372321
    2. 'B' → logprob: -7.8757781982421875
    3. '_X' → logprob: -8.750778198242188
    4. 'C' → logprob: -9.000778198242188
    5. ' X' → logprob: -10.500778198242188
    6. '
' → logprob: -11.250778198242188
    7. 'Y' → logprob: -11.500778198242188
    8. '_x' → logprob: -11.750778198242188
    9. '

' → logprob: -12.375778198242188
    10. '  ' → logprob: -12.500778198242188

Token 2094: '
' (ID: 198)
  Prédit: 'u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'u' → logprob: -0.6530581712722778
    2. '_ref' → logprob: -1.6530581712722778
    3. 'self' → logprob: -2.5280580520629883
    4. ' =' → logprob: -3.5280580520629883
    5. ' u' → logprob: -3.9030580520629883
    6. '_direction' → logprob: -4.278058052062988
    7. 'direction' → logprob: -4.528058052062988
    8. '_dir' → logprob: -4.528058052062988
    9. 'AX' → logprob: -4.653058052062988
    10. '_raw' → logprob: -4.778058052062988

Token 2095: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.11852997541427612
    2. 'self' → logprob: -2.368530035018921
    3. 'u' → logprob: -4.118529796600342
    4. ' self' → logprob: -6.743529796600342
    5. ' u' → logprob: -8.9935302734375
    6. 'v' → logprob: -8.9935302734375
    7. ' (' → logprob: -9.3685302734375
    8. '(self' → logprob: -9.3685302734375
    9. ',' → logprob: -9.6185302734375
    10. ':' → logprob: -10.8685302734375

Token 2096: ' #' (ID: 1069)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.052998948842287064
    2. 'u' → logprob: -3.5529990196228027
    3. 'AX' → logprob: -4.802999019622803
    4. '       ' → logprob: -4.927999019622803
    5. 'ref' → logprob: -5.427999019622803
    6. 'dir' → logprob: -7.552999019622803
    7. 'edge' → logprob: -7.552999019622803
    8. ' self' → logprob: -7.802999019622803
    9. 'v' → logprob: -8.052998542785645
    10. 'direction' → logprob: -8.427998542785645

Token 2097: ' We' (ID: 1416)
  Prédit: 'ref'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ref' → logprob: -1.222446322441101
    2. 'AX' → logprob: -1.222446322441101
    3. 'self' → logprob: -1.347446322441101
    4. 'dir' → logprob: -2.7224464416503906
    5. 'vec' → logprob: -3.8474464416503906
    6. 'u' → logprob: -4.097446441650391
    7. 'direction' → logprob: -4.597446441650391
    8. 'edge' → logprob: -4.972446441650391
    9. 'ax' → logprob: -4.972446441650391
    10. '#' → logprob: -5.597446441650391

Token 2098: ' rotate' (ID: 31987)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -1.9051499366760254
    2. 'continue' → logprob: -1.9051499366760254
    3. 'compute' → logprob: -1.9051499366760254
    4. ' want' → logprob: -2.4051499366760254
    5. 'want' → logprob: -2.7801499366760254
    6. 'w' → logprob: -2.7801499366760254
    7. 'define' → logprob: -3.1551499366760254
    8. 'need' → logprob: -3.6551499366760254
    9. 're' → logprob: -3.7801499366760254
    10. 'point' → logprob: -4.030149936676025

Token 2099: ' edge' (ID: 11165)
  Prédit: 'X'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'X' → logprob: -0.008348731324076653
    2. 'vector' → logprob: -5.2583489418029785
    3. 'A' → logprob: -7.3833489418029785
    4. ' X' → logprob: -7.5083489418029785
    5. 'self' → logprob: -8.00834846496582
    6. 'around' → logprob: -8.13334846496582
    7. '_vector' → logprob: -8.25834846496582
    8. 'u' → logprob: -8.38334846496582
    9. '(X' → logprob: -8.88334846496582
    10. 'Y' → logprob: -9.13334846496582

Token 2100: ' A' (ID: 355)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.5546533465385437
    2. '_A' → logprob: -2.0546534061431885
    3. '_' → logprob: -2.8046534061431885
    4. '`' → logprob: -2.8046534061431885
    5. '_AX' → logprob: -3.3046534061431885
    6. 'X' → logprob: -3.4296534061431885
    7. '_sub' → logprob: -3.8046534061431885
    8. ' A' → logprob: -4.429653167724609
    9. 'AX' → logprob: -4.679653167724609
    10. '(A' → logprob: -5.054653167724609

Token 2101: ' X' (ID: 2127)
  Prédit: 'X'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'X' → logprob: -0.00016420685278717428
    2. '_X' → logprob: -9.875164031982422
    3. ' X' → logprob: -10.000164031982422
    4. '
' → logprob: -10.750164031982422
    5. '_' → logprob: -11.625164031982422
    6. 'to' → logprob: -11.750164031982422
    7. ',' → logprob: -12.125164031982422
    8. '`' → logprob: -12.250164031982422
    9. 'x' → logprob: -12.875164031982422
    10. ' ' → logprob: -13.250164031982422

Token 2102: ' around' (ID: 2846)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.7657572627067566
    2. ' around' → logprob: -1.6407573223114014
    3. 'around' → logprob: -2.1407573223114014
    4. '_vec' → logprob: -3.1407573223114014
    5. '_vector' → logprob: -3.1407573223114014
    6. '_' → logprob: -4.015757083892822
    7. '```' → logprob: -4.015757083892822
    8. ')' → logprob: -4.015757083892822
    9. 'vector' → logprob: -4.265757083892822
    10. ' by' → logprob: -4.765757083892822

Token 2103: ' axis' (ID: 16300)
  Prédit: 'vector'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'vector' → logprob: -0.3338470160961151
    2. 'cross' → logprob: -1.7088470458984375
    3. 'A' → logprob: -3.5838470458984375
    4. 'self' → logprob: -4.3338470458984375
    5. 't' → logprob: -4.7088470458984375
    6. 'Vertex' → logprob: -4.9588470458984375
    7. 'tet' → logprob: -5.0838470458984375
    8. 'axis' → logprob: -5.3338470458984375
    9. '
' → logprob: -5.4588470458984375
    10. '(vector' → logprob: -5.5838470458984375

Token 2104: ' perpendicular' (ID: 137754)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6872600317001343
    2. 'vector' → logprob: -1.8122600317001343
    3. 'A' → logprob: -2.687260150909424
    4. '(vector' → logprob: -3.437260150909424
    5. '(A' → logprob: -3.437260150909424
    6. 'X' → logprob: -3.687260150909424
    7. '(Vertex' → logprob: -3.687260150909424
    8. ' =' → logprob: -3.812260150909424
    9. '(' → logprob: -4.312260150909424
    10. 'self' → logprob: -4.312260150909424

Token 2105: ' to' (ID: 316)
  Prédit: 'to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'to' → logprob: -0.055991146713495255
    2. ' to' → logprob: -2.9309911727905273
    3. '       ' → logprob: -8.180991172790527
    4. ')' → logprob: -8.430991172790527
    5. '_to' → logprob: -8.680991172790527
    6. '(' → logprob: -8.805991172790527
    7. '#' → logprob: -9.680991172790527
    8. 'face' → logprob: -9.805991172790527
    9. '_face' → logprob: -10.180991172790527
    10. '(face' → logprob: -10.555991172790527

Token 2106: ' face' (ID: 4950)
  Prédit: 'vector'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'vector' → logprob: -0.7274823188781738
    2. 'self' → logprob: -1.7274823188781738
    3. 'first' → logprob: -2.227482318878174
    4. 'the' → logprob: -2.352482318878174
    5. 'face' → logprob: -2.727482318878174
    6. 'tet' → logprob: -3.602482318878174
    7. '#' → logprob: -4.977482318878174
    8. '   ' → logprob: -5.227482318878174
    9. 'f' → logprob: -5.352482318878174
    10. ' vector' → logprob: -5.602482318878174

Token 2107: ' A' (ID: 355)
  Prédit: ' ('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' (' → logprob: -1.354405403137207
    2. '       ' → logprob: -1.854405403137207
    3. ' by' → logprob: -2.104405403137207
    4. '(' → logprob: -2.604405403137207
    5. ',' → logprob: -3.104405403137207
    6. ' =' → logprob: -3.729405403137207
    7. '(A' → logprob: -3.729405403137207
    8. 'face' → logprob: -3.854405403137207
    9. '(self' → logprob: -3.979405403137207
    10. '(face' → logprob: -3.979405403137207

Token 2108: 'XY' (ID: 27825)
  Prédit: 'X'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'X' → logprob: -0.2431047260761261
    2. ',' → logprob: -1.6181046962738037
    3. 'C' → logprob: -5.243104934692383
    4. 'B' → logprob: -5.493104934692383
    5. 'XY' → logprob: -6.243104934692383
    6. ' ,' → logprob: -6.993104934692383
    7. 'A' → logprob: -7.618104934692383
    8. 'Y' → logprob: -7.618104934692383
    9. ' ' → logprob: -7.993104934692383
    10. ',
' → logprob: -8.118104934692383

Token 2109: ' (' (ID: 350)
  Prédit: ' by'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' by' → logprob: -1.0900499820709229
    2. ' (' → logprob: -1.7150499820709229
    3. ',' → logprob: -2.215049982070923
    4. '(' → logprob: -2.465049982070923
    5. '       ' → logprob: -2.965049982070923
    6. 'by' → logprob: -3.215049982070923
    7. '(
' → logprob: -4.090049743652344
    8. '.' → logprob: -4.340049743652344
    9. ' to' → logprob: -4.340049743652344
    10. '```' → logprob: -4.340049743652344

Token 2110: 'vertex' (ID: 25298)
  Prédit: 'cross'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cross' → logprob: -0.4427408277988434
    2. 'vector' → logprob: -1.317740797996521
    3. ')' → logprob: -3.3177409172058105
    4. ' cross' → logprob: -3.5677409172058105
    5. ' vector' → logprob: -5.1927409172058105
    6. 'A' → logprob: -5.6927409172058105
    7. 'plane' → logprob: -5.8177409172058105
    8. ')
' → logprob: -6.0677409172058105
    9. '(' → logprob: -7.0677409172058105
    10. '#' → logprob: -7.3177409172058105

Token 2111: ' order' (ID: 2569)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.06525787711143494
    2. ')' → logprob: -3.5652577877044678
    3. ' A' → logprob: -4.565258026123047
    4. '
' → logprob: -5.690258026123047
    5. '[' → logprob: -5.815258026123047
    6. ',' → logprob: -5.815258026123047
    7. '  ' → logprob: -6.565258026123047
    8. '   ' → logprob: -6.565258026123047
    9. '=A' → logprob: -6.690258026123047
    10. '.A' → logprob: -6.940258026123047

Token 2112: ' A' (ID: 355)
  Prédit: '=('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=(' → logprob: -0.18201804161071777
    2. '=' → logprob: -2.8070180416107178
    3. '=[' → logprob: -2.8070180416107178
    4. '(A' → logprob: -4.057018280029297
    5. '(self' → logprob: -4.807018280029297
    6. '(' → logprob: -5.182018280029297
    7. '[' → logprob: -5.557018280029297
    8. '=self' → logprob: -5.557018280029297
    9. ' =' → logprob: -6.307018280029297
    10. '(Vertex' → logprob: -6.557018280029297

Token 2113: ',X' (ID: 83943)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.004985405132174492
    2. ',
' → logprob: -6.754985332489014
    3. ',X' → logprob: -6.879985332489014
    4. ',v' → logprob: -7.879985332489014
    5. ',A' → logprob: -7.879985332489014
    6. 'X' → logprob: -8.004985809326172
    7. ',V' → logprob: -8.254985809326172
    8. ' ,' → logprob: -8.254985809326172
    9. 'A' → logprob: -8.629985809326172
    10. '[' → logprob: -8.754985809326172

Token 2114: ',Y' (ID: 71464)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.2696689963340759
    2. ',Y' → logprob: -1.5196690559387207
    3. 'Y' → logprob: -4.519669055938721
    4. ',
' → logprob: -5.269669055938721
    5. ',y' → logprob: -6.894669055938721
    6. ' ,' → logprob: -8.394668579101562
    7. 'and' → logprob: -10.144668579101562
    8. ')' → logprob: -10.394668579101562
    9. ',v' → logprob: -10.394668579101562
    10. '),' → logprob: -10.644668579101562

Token 2115: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.07257280498743057
    2. ')
' → logprob: -2.697572708129883
    3. '       ' → logprob: -7.322572708129883
    4. '   ' → logprob: -7.572572708129883
    5. ',' → logprob: -7.697572708129883
    6. '),' → logprob: -8.072572708129883
    7. '#' → logprob: -9.197572708129883
    8. ' )' → logprob: -9.697572708129883
    9. '):
' → logprob: -9.822572708129883
    10. 'to' → logprob: -10.072572708129883

Token 2116: ' by' (ID: 656)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.05857589840888977
    2. 'self' → logprob: -3.3085758686065674
    3. ',' → logprob: -5.5585761070251465
    4. 'v' → logprob: -5.6835761070251465
    5. 'origin' → logprob: -5.8085761070251465
    6. '.' → logprob: -6.0585761070251465
    7. '        
' → logprob: -6.6835761070251465
    8. '
' → logprob: -6.9335761070251465
    9. '.
' → logprob: -7.3085761070251465
    10. ')' → logprob: -7.5585761070251465

Token 2117: ' angle' (ID: 16538)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.2987867593765259
    2. 'angle' → logprob: -1.5487867593765259
    3. 'self' → logprob: -1.9237867593765259
    4. 'vector' → logprob: -2.0487866401672363
    5. '90' → logprob: -2.2987866401672363
    6. '+' → logprob: -3.2987866401672363
    7. ' vector' → logprob: -3.6737866401672363
    8. ' angle' → logprob: -4.048786640167236
    9. 'face' → logprob: -4.423786640167236
    10. ' self' → logprob: -4.673786640167236

Token 2118: '_deg' (ID: 144310)
  Prédit: '_deg'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_deg' → logprob: -0.22456952929496765
    2. ')' → logprob: -2.72456955909729
    3. '(Vertex' → logprob: -2.97456955909729
    4. '_axis' → logprob: -4.724569320678711
    5. '_vertex' → logprob: -5.099569320678711
    6. '       ' → logprob: -5.099569320678711
    7. '_xyz' → logprob: -5.349569320678711
    8. '(
' → logprob: -5.474569320678711
    9. '   ' → logprob: -5.474569320678711
    10. '(' → logprob: -5.849569320678711

Token 2119: ' towards' (ID: 9979)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3449695110321045
    2. 'self' → logprob: -1.7199695110321045
    3. 'origin' → logprob: -3.3449695110321045
    4. 'face' → logprob: -3.4699695110321045
    5. 'axis' → logprob: -3.7199695110321045
    6. '
' → logprob: -4.844969749450684
    7. 'v' → logprob: -6.094969749450684
    8. 'u' → logprob: -6.219969749450684
    9. 'A' → logprob: -6.469969749450684
    10. ',' → logprob: -6.969969749450684

Token 2120: ' edge' (ID: 11165)
  Prédit: 'Y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Y' → logprob: -0.08254703134298325
    2. ' Y' → logprob: -2.5825469493865967
    3. 'Vertex' → logprob: -6.082547187805176
    4. ' Vertex' → logprob: -7.457547187805176
    5. '   ' → logprob: -8.457547187805176
    6. 'YAxis' → logprob: -8.957547187805176
    7. ' ' → logprob: -9.832547187805176
    8. 'y' → logprob: -10.082547187805176
    9. 'X' → logprob: -10.457547187805176
    10. 'vector' → logprob: -10.582547187805176

Token 2121: ' A' (ID: 355)
  Prédit: 'Y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Y' → logprob: -0.027536744251847267
    2. ' Y' → logprob: -3.777536630630493
    3. 'A' → logprob: -5.777536869049072
    4. ' A' → logprob: -8.152536392211914
    5. 'B' → logprob: -8.902536392211914
    6. 'Vertex' → logprob: -8.902536392211914
    7. 'V' → logprob: -9.277536392211914
    8. ' ' → logprob: -9.527536392211914
    9. 'YAxis' → logprob: -9.652536392211914
    10. 'AY' → logprob: -10.152536392211914

Token 2122: ' Y' (ID: 865)
  Prédit: 'Y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Y' → logprob: -0.0409521609544754
    2. 'X' → logprob: -3.790952205657959
    3. 'Z' → logprob: -4.915952205657959
    4. 'C' → logprob: -5.290952205657959
    5. ' Y' → logprob: -5.790952205657959
    6. ' ' → logprob: -6.790952205657959
    7. 'B' → logprob: -8.5409517288208
    8. 'A' → logprob: -8.9159517288208
    9. '  ' → logprob: -9.5409517288208
    10. 'V' → logprob: -9.7909517288208

Token 2123: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.08278804272413254
    2. 'face' → logprob: -3.2077879905700684
    3. 'self' → logprob: -4.082787990570068
    4. 'origin' → logprob: -4.832787990570068
    5. 'axis' → logprob: -5.207787990570068
    6. 'u' → logprob: -6.207787990570068
    7. 'v' → logprob: -6.582787990570068
    8. 'AX' → logprob: -6.582787990570068
    9. '#' → logprob: -7.332787990570068
    10. 'normal' → logprob: -7.832787990570068

Token 2124: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.004545235075056553
    2. 'self' → logprob: -5.629545211791992
    3. ' self' → logprob: -7.504545211791992
    4. 'v' → logprob: -9.004545211791992
    5. ',' → logprob: -9.629545211791992
    6. '        
' → logprob: -10.379545211791992
    7. '           ' → logprob: -11.379545211791992
    8. 'A' → logprob: -11.504545211791992
    9. 'axis' → logprob: -11.504545211791992
    10. ')' → logprob: -11.629545211791992

Token 2125: ' #' (ID: 1069)
  Prédit: 'face'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'face' → logprob: -0.5012558698654175
    2. '       ' → logprob: -1.5012558698654175
    3. 'axis' → logprob: -2.626255989074707
    4. 'self' → logprob: -3.251255989074707
    5. 'origin' → logprob: -3.501255989074707
    6. 'normal' → logprob: -4.751255989074707
    7. 'u' → logprob: -5.251255989074707
    8. 'ax' → logprob: -5.626255989074707
    9. '#' (adapté à ' #') → logprob: -6.001255989074707
    10. 'A' → logprob: -6.501255989074707

Token 2126: ' Find' (ID: 9764)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7584960460662842
    2. 'face' → logprob: -0.8834960460662842
    3. 'self' → logprob: -2.758496046066284
    4. 'origin' → logprob: -3.883496046066284
    5. '#' → logprob: -4.383496284484863
    6. 'axis' → logprob: -4.508496284484863
    7. 'normal' → logprob: -6.008496284484863
    8. 'A' → logprob: -6.508496284484863
    9. 'u' → logprob: -6.508496284484863
    10. 'v' → logprob: -6.883496284484863

Token 2127: ' plane' (ID: 16499)
  Prédit: 'face'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'face' → logprob: -0.19611027836799622
    2. 'axis' → logprob: -2.321110248565674
    3. 'normal' → logprob: -2.946110248565674
    4. 'edge' → logprob: -4.196110248565674
    5. '#' → logprob: -4.696110248565674
    6. 'u' → logprob: -7.446110248565674
    7. '
' → logprob: -7.446110248565674
    8. 'vec' → logprob: -7.571110248565674
    9. 'v' → logprob: -7.946110248565674
    10. 'ab' → logprob: -8.321110725402832

Token 2128: ' normal' (ID: 6078)
  Prédit: 'normal'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'normal' → logprob: -0.0044583664275705814
    2. 'origin' → logprob: -6.379458427429199
    3. ' normal' → logprob: -6.754458427429199
    4. '#' → logprob: -7.379458427429199
    5. 'face' → logprob: -8.7544584274292
    6. 'n' → logprob: -8.7544584274292
    7. 'A' → logprob: -9.3794584274292
    8. 'def' → logprob: -9.5044584274292
    9. 'AB' → logprob: -9.5044584274292
    10. 'u' → logprob: -9.6294584274292

Token 2129: ' via' (ID: 4493)
  Prédit: 'face'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'face' → logprob: -1.1905955076217651
    2. 'self' → logprob: -1.3155955076217651
    3. '       ' → logprob: -1.9405955076217651
    4. 'origin' → logprob: -2.6905956268310547
    5. 'u' → logprob: -3.0655956268310547
    6. 'v' → logprob: -3.0655956268310547
    7. 'A' → logprob: -3.5655956268310547
    8. 'AX' → logprob: -4.065595626831055
    9. 'plane' → logprob: -4.440595626831055
    10. 'axis' → logprob: -4.690595626831055

Token 2130: ' cross' (ID: 8088)
  Prédit: 'cross'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cross' → logprob: -0.0020398679189383984
    2. ' cross' → logprob: -6.502039909362793
    3. 'vector' → logprob: -7.627039909362793
    4. 'self' → logprob: -10.252039909362793
    5. 'normal' → logprob: -12.627039909362793
    6. 'triangle' → logprob: -12.877039909362793
    7. '.cross' → logprob: -13.127039909362793
    8. 'face' → logprob: -13.627039909362793
    9. '   ' → logprob: -13.752039909362793
    10. 'Vector' → logprob: -13.752039909362793

Token 2131: '(A' (ID: 10706)
  Prédit: 'u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'u' → logprob: -1.2400468587875366
    2. 'vector' → logprob: -1.2400468587875366
    3. 'product' → logprob: -2.115046977996826
    4. 'v' → logprob: -2.240046977996826
    5. 'prod' → logprob: -2.865046977996826
    6. '_u' → logprob: -3.490046977996826
    7. 'vec' → logprob: -3.865046977996826
    8. '_prod' → logprob: -3.990046977996826
    9. '_product' → logprob: -4.365046977996826
    10. 'n' → logprob: -4.740046977996826

Token 2132: '->' (ID: 609)
  Prédit: 'vector'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'vector' → logprob: -0.9041987657546997
    2. 'X' → logprob: -1.2791987657546997
    3. ',' → logprob: -2.27919864654541
    4. ')' → logprob: -2.52919864654541
    5. '(X' → logprob: -3.27919864654541
    6. '_sub' → logprob: -3.40419864654541
    7. '(vector' → logprob: -4.27919864654541
    8. '(' → logprob: -4.77919864654541
    9. ',X' → logprob: -5.02919864654541
    10. 'sub' → logprob: -5.15419864654541

Token 2133: 'X' (ID: 55)
  Prédit: 'X'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'X' → logprob: -0.0005075189401395619
    2. 'vector' → logprob: -8.375507354736328
    3. 'Y' → logprob: -8.625507354736328
    4. 'x' → logprob: -10.625507354736328
    5. ' X' → logprob: -10.875507354736328
    6. ')' → logprob: -11.625507354736328
    7. '   ' → logprob: -12.250507354736328
    8. 'B' → logprob: -12.250507354736328
    9. '#' → logprob: -12.500507354736328
    10. '
' → logprob: -12.500507354736328

Token 2134: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.36173123121261597
    2. 'vector' → logprob: -1.3617312908172607
    3. '(' → logprob: -4.611731052398682
    4. ')' → logprob: -4.986731052398682
    5. '(vector' → logprob: -5.236731052398682
    6. ',
' → logprob: -5.361731052398682
    7. '(
' → logprob: -5.486731052398682
    8. '(X' → logprob: -6.486731052398682
    9. ' vector' → logprob: -6.486731052398682
    10. ',X' → logprob: -6.736731052398682

Token 2135: ' A' (ID: 355)
  Prédit: 'vector'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'vector' → logprob: -0.2652691602706909
    2. 'A' → logprob: -1.890269160270691
    3. ' vector' → logprob: -2.6402692794799805
    4. ' A' → logprob: -5.5152692794799805
    5. 'cross' → logprob: -5.5152692794799805
    6. ' cross' → logprob: -7.5152692794799805
    7. 'X' → logprob: -7.8902692794799805
    8. 'Vector' → logprob: -8.51526927947998
    9. '(vector' → logprob: -8.51526927947998
    10. ' ' → logprob: -8.76526927947998

Token 2136: '->' (ID: 609)
  Prédit: 'Y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Y' → logprob: -0.034317463636398315
    2. ',' → logprob: -3.6593174934387207
    3. ',Y' → logprob: -5.534317493438721
    4. '->' → logprob: -6.534317493438721
    5. '3' → logprob: -7.284317493438721
    6. 'to' → logprob: -7.409317493438721
    7. ' Y' → logprob: -8.034317016601562
    8. ')' → logprob: -8.409317016601562
    9. 'vector' → logprob: -8.909317016601562
    10. 'X' → logprob: -8.909317016601562

Token 2137: 'Y' (ID: 56)
  Prédit: 'Y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Y' → logprob: -3.7697225252486533e-06
    2. ' Y' → logprob: -12.625003814697266
    3. '   ' → logprob: -15.625003814697266
    4. ' ' → logprob: -16.125003814697266
    5. 'X' → logprob: -16.375003814697266
    6. '
' → logprob: -16.875003814697266
    7. 'Z' → logprob: -17.375003814697266
    8. 'y' → logprob: -17.500003814697266
    9. 'self' → logprob: -17.875003814697266
    10. '	Y' → logprob: -17.875003814697266

Token 2138: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.20387856662273407
    2. ')
' → logprob: -1.7038785219192505
    3. ')
' → logprob: -6.953878402709961
    4. ')`' → logprob: -8.203878402709961
    5. ')`
' → logprob: -8.328878402709961
    6. '):' → logprob: -8.453878402709961
    7. 'vector' → logprob: -8.578878402709961
    8. '):
' → logprob: -8.703878402709961
    9. 'v' → logprob: -8.953878402709961
    10. '   ' → logprob: -9.453878402709961

Token 2139: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.028694167733192444
    2. 'self' → logprob: -4.403694152832031
    3. 'v' → logprob: -4.653694152832031
    4. 'u' → logprob: -6.153694152832031
    5. 'vector' → logprob: -6.653694152832031
    6. 'n' → logprob: -7.278694152832031
    7. 'origin' → logprob: -7.528694152832031
    8. 'AB' → logprob: -7.653694152832031
    9. 'axis' → logprob: -8.653694152832031
    10. 'A' → logprob: -9.028694152832031

Token 2140: ' vec' (ID: 10563)
  Prédit: 'face'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'face' → logprob: -0.7821103930473328
    2. 'normal' → logprob: -2.0321104526519775
    3. 'self' → logprob: -2.4071104526519775
    4. '       ' → logprob: -2.4071104526519775
    5. 'AX' → logprob: -2.9071104526519775
    6. 'axis' → logprob: -2.9071104526519775
    7. 'plane' → logprob: -3.5321104526519775
    8. 'v' → logprob: -4.032110214233398
    9. 'A' → logprob: -4.282110214233398
    10. 'n' → logprob: -4.407110214233398

Token 2141: 'AX' (ID: 5202)
  Prédit: 'AX'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'AX' → logprob: -1.1050562858581543
    2. '_AX' → logprob: -1.1050562858581543
    3. '_sub' → logprob: -1.3550562858581543
    4. '_ax' → logprob: -2.7300562858581543
    5. '_A' → logprob: -5.480056285858154
    6. 'A' → logprob: -5.855056285858154
    7. 'sub' → logprob: -5.855056285858154
    8. '_a' → logprob: -6.480056285858154
    9. '_AC' → logprob: -7.230056285858154
    10. ' =' → logprob: -8.105056762695312

Token 2142: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.4740878641605377
    2. '=' → logprob: -0.9740878343582153
    3. ')' → logprob: -12.099087715148926
    4. ',' → logprob: -14.099087715148926
    5. '=self' → logprob: -14.349087715148926
    6. ' ' → logprob: -14.349087715148926
    7. '   ' → logprob: -14.599087715148926
    8. '_raw' → logprob: -14.599087715148926
    9. ')=' → logprob: -14.849087715148926
    10. 'vector' → logprob: -15.349087715148926

Token 2143: ' vector' (ID: 9727)
  Prédit: 'vector'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'vector' → logprob: -0.00023476807109545916
    2. ' vector' → logprob: -8.375234603881836
    3. 'tuple' → logprob: -13.125234603881836
    4. '(vector' → logprob: -13.625234603881836
    5. '   ' → logprob: -15.000234603881836
    6. 'normalize' → logprob: -16.000234603881836
    7. 'triangle' → logprob: -16.500234603881836
    8. '.vector' → logprob: -16.625234603881836
    9. '	vector' → logprob: -16.750234603881836
    10. 'subtract' → logprob: -16.875234603881836

Token 2144: '_sub' (ID: 11572)
  Prédit: '_sub'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sub' → logprob: -0.0031806828919798136
    2. 'sub' → logprob: -5.753180503845215
    3. 'subtract' → logprob: -13.003180503845215
    4. '_' → logprob: -15.128180503845215
    5. 'Sub' → logprob: -16.37818145751953
    6. '
' → logprob: -16.50318145751953
    7. ')' → logprob: -17.37818145751953
    8. '```' → logprob: -17.50318145751953
    9. '_SUB' → logprob: -17.62818145751953
    10. ' суб' → logprob: -17.75318145751953

Token 2145: '(X' (ID: 17061)
  Prédit: '(X'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(X' → logprob: -0.0028315072413533926
    2. 'X' → logprob: -5.87783145904541
    3. '(' → logprob: -11.00283145904541
    4. '(A' → logprob: -12.87783145904541
    5. '(
' → logprob: -13.12783145904541
    6. '```' → logprob: -13.87783145904541
    7. '   ' → logprob: -14.00283145904541
    8. 'A' → logprob: -14.37783145904541
    9. '(Y' → logprob: -14.75283145904541
    10. '(x' → logprob: -15.12783145904541

Token 2146: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.1513768434524536
    2. 'A' → logprob: -2.651376724243164
    3. ',' → logprob: -3.776376724243164
    4. 't' → logprob: -4.151376724243164
    5. '(A' → logprob: -4.276376724243164
    6. '(t' → logprob: -5.901376724243164
    7. '(' → logprob: -6.151376724243164
    8. ')' → logprob: -6.151376724243164
    9. 'tet' → logprob: -6.151376724243164
    10. 'self' → logprob: -6.401376724243164

Token 2147: 'd' (ID: 67)
  Prédit: 'd'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.0012258238857612014
    2. '3' → logprob: -6.75122594833374
    3. 't' → logprob: -11.251225471496582
    4. 'tet' → logprob: -11.751225471496582
    5. ' tetra' → logprob: -11.876225471496582
    6. ',' → logprob: -12.751225471496582
    7. '_d' → logprob: -12.751225471496582
    8. 'td' → logprob: -13.251225471496582
    9. '
' → logprob: -13.251225471496582
    10. 'df' → logprob: -13.251225471496582

Token 2148: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0054794372990727425
    2. ',A' → logprob: -5.255479335784912
    3. ' ,' → logprob: -8.63047981262207
    4. ',
' → logprob: -10.75547981262207
    5. 'A' → logprob: -11.25547981262207
    6. ',Y' → logprob: -12.25547981262207
    7. ',X' → logprob: -12.50547981262207
    8. ')' → logprob: -12.88047981262207
    9. ',I' → logprob: -12.88047981262207
    10. '<|end|>' → logprob: -12.88047981262207

Token 2149: ' A' (ID: 355)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -1.2113979209971149e-05
    2. ' A' → logprob: -11.375012397766113
    3. '   ' → logprob: -15.125012397766113
    4. ')' → logprob: -16.125011444091797
    5. '       ' → logprob: -17.500011444091797
    6. '```' → logprob: -17.750011444091797
    7. '           ' → logprob: -18.000011444091797
    8. '         ' → logprob: -18.000011444091797
    9. '	A' → logprob: -18.250011444091797
    10. ' ' → logprob: -18.375011444091797

Token 2150: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -2.696889623621246e-06
    2. '
' → logprob: -14.12500286102295
    3. 'A' → logprob: -14.62500286102295
    4. ')' → logprob: -14.68750286102295
    5. 't' → logprob: -15.62500286102295
    6. '

' → logprob: -15.93750286102295
    7. '```' → logprob: -16.500001907348633
    8. '[' → logprob: -16.562501907348633
    9. '(A' → logprob: -16.875001907348633
    10. '(' → logprob: -17.187501907348633

Token 2151: 'd' (ID: 67)
  Prédit: 'd'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.0010573413455858827
    2. '3' → logprob: -6.876057147979736
    3. ')' → logprob: -10.751057624816895
    4. '
' → logprob: -14.501057624816895
    5. 'A' → logprob: -14.626057624816895
    6. ')
' → logprob: -15.001057624816895
    7. 'v' → logprob: -15.501057624816895
    8. ',' → logprob: -15.751057624816895
    9. 'def' → logprob: -16.126056671142578
    10. 'vec' → logprob: -16.126056671142578

Token 2152: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.47419989109039307
    2. ')
' → logprob: -0.9741998910903931
    3. ')
' → logprob: -9.474200248718262
    4. '       ' → logprob: -10.224200248718262
    5. '   ' → logprob: -12.849200248718262
    6. ')

' → logprob: -13.224200248718262
    7. ')#' → logprob: -14.099200248718262
    8. ',' → logprob: -14.599200248718262
    9. ')`
' → logprob: -14.724200248718262
    10. '),' → logprob: -14.724200248718262

Token 2153: '       ' (ID: 309)
  Prédit: ' vector'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' vector' → logprob: -1.2365282773971558
    2. 'vec' → logprob: -1.4865282773971558
    3. ' vec' → logprob: -1.6115282773971558
    4. '       ' → logprob: -2.1115283966064453
    5. '```' → logprob: -2.6115283966064453
    6. ' v' → logprob: -3.3615283966064453
    7. 'v' → logprob: -4.111528396606445
    8. 'vector' → logprob: -4.736528396606445
    9. '[' → logprob: -5.111528396606445
    10. ',' → logprob: -5.111528396606445

Token 2154: ' vec' (ID: 10563)
  Prédit: 'vec'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'vec' (adapté à ' vec') → logprob: -5.6100132496794686e-05
    2. 'normal' → logprob: -10.625056266784668
    3. '       ' → logprob: -11.125056266784668
    4. 'vector' → logprob: -12.500056266784668
    5. 'plane' → logprob: -12.625056266784668
    6. '   ' → logprob: -12.750056266784668
    7. ' vec' → logprob: -13.125056266784668
    8. 'norm' → logprob: -13.500056266784668
    9. 'n' → logprob: -14.000056266784668
    10. 'face' → logprob: -14.250056266784668

Token 2155: 'AY' (ID: 4751)
  Prédit: 'AY'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'AY' → logprob: -5.438573680294212e-06
    2. ' AY' → logprob: -13.125005722045898
    3. 'ay' → logprob: -13.625005722045898
    4. 'AYA' → logprob: -14.375005722045898
    5. 'Ay' → logprob: -14.625005722045898
    6. 'A' → logprob: -15.125005722045898
    7. 'XY' → logprob: -15.125005722045898
    8. 'AYS' → logprob: -15.375005722045898
    9. 'AZY' → logprob: -16.5000057220459
    10. '   ' → logprob: -16.7500057220459

Token 2156: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.06994009763002396
    2. '=' → logprob: -2.6949400901794434
    3. ')' → logprob: -12.694940567016602
    4. ':' → logprob: -15.444940567016602
    5. ' ' → logprob: -15.569940567016602
    6. ',' → logprob: -16.0699405670166
    7. 's' → logprob: -16.8199405670166
    8. ' vector' → logprob: -17.1949405670166
    9. '   ' → logprob: -17.4449405670166
    10. ' ' → logprob: -17.5699405670166

Token 2157: ' vector' (ID: 9727)
  Prédit: 'vector'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'vector' → logprob: -0.00021962920436635613
    2. ' vector' → logprob: -9.000219345092773
    3. '(vector' → logprob: -9.250219345092773
    4. '<vector' → logprob: -16.375219345092773
    5. '.vector' → logprob: -16.625219345092773
    6. '	vector' → logprob: -16.875219345092773
    7. '   ' → logprob: -19.500219345092773
    8. '/vector' → logprob: -19.625219345092773
    9. 'vectors' → logprob: -20.500219345092773
    10. '_vector' → logprob: -20.625219345092773

Token 2158: '_sub' (ID: 11572)
  Prédit: '_sub'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sub' → logprob: -6.32523515378125e-05
    2. 'sub' → logprob: -9.750062942504883
    3. 'Sub' → logprob: -12.875062942504883
    4. '_' → logprob: -13.750062942504883
    5. '_SUB' → logprob: -15.250062942504883
    6. '(' → logprob: -16.125062942504883
    7. ' суб' → logprob: -16.250062942504883
    8. '=' → logprob: -16.375062942504883
    9. ' =' → logprob: -16.625062942504883
    10. '(
' → logprob: -16.625062942504883

Token 2159: '(Y' (ID: 44341)
  Prédit: '(Y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(Y' → logprob: -0.00020520923135336488
    2. 'Y' → logprob: -8.500205039978027
    3. '(' → logprob: -14.250205039978027
    4. '[Y' → logprob: -15.500205039978027
    5. '
' → logprob: -15.625205039978027
    6. '   ' → logprob: -15.750205039978027
    7. '(
' → logprob: -16.500205993652344
    8. '#' → logprob: -16.500205993652344
    9. '	Y' → logprob: -16.875205993652344
    10. '3' → logprob: -17.500205993652344

Token 2160: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.00025228000595234334
    2. '(A' → logprob: -8.750252723693848
    3. ',' → logprob: -10.250252723693848
    4. '(' → logprob: -10.875252723693848
    5. 'A' → logprob: -11.000252723693848
    6. ')' → logprob: -12.375252723693848
    7. 'Y' → logprob: -12.375252723693848
    8. '[' → logprob: -12.625252723693848
    9. '
' → logprob: -12.750252723693848
    10. '(Y' → logprob: -13.250252723693848

Token 2161: 'd' (ID: 67)
  Prédit: '3'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -4.2987729102605954e-05
    2. ',' → logprob: -10.375042915344238
    3. '[' → logprob: -11.875042915344238
    4. '(A' → logprob: -13.500042915344238
    5. 'A' → logprob: -14.500042915344238
    6. 'd' → logprob: -14.750042915344238
    7. ')' → logprob: -15.250042915344238
    8. ',A' → logprob: -15.375042915344238
    9. '³' → logprob: -15.625042915344238
    10. '۳' → logprob: -15.750042915344238

Token 2162: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0004218554822728038
    2. ' ,' → logprob: -8.375421524047852
    3. ',A' → logprob: -8.625421524047852
    4. 'A' → logprob: -12.625421524047852
    5. '(' → logprob: -12.750421524047852
    6. '(A' → logprob: -13.375421524047852
    7. '   ' → logprob: -13.625421524047852
    8. '       ' → logprob: -14.875421524047852
    9. '[' → logprob: -15.250421524047852
    10. 'from' → logprob: -15.500421524047852

Token 2163: ' A' (ID: 355)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.0004883344518020749
    2. ' A' → logprob: -7.62548828125
    3. '   ' → logprob: -15.75048828125
    4. ' ' → logprob: -16.50048828125
    5. ')' → logprob: -17.75048828125
    6. '  ' → logprob: -18.12548828125
    7. '	A' → logprob: -18.25048828125
    8. '(' → logprob: -19.00048828125
    9. '[' → logprob: -19.00048828125
    10. '     ' → logprob: -19.12548828125

Token 2164: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -1.9361264946837764e-07
    2. 'A' → logprob: -16.125
    3. 'vec' → logprob: -17.9375
    4. '[' → logprob: -18.75
    5. '
' → logprob: -18.75
    6. ')' → logprob: -18.75
    7. '```' → logprob: -18.75
    8. 'v' → logprob: -18.875
    9. '(' → logprob: -19.1875
    10. '(A' → logprob: -19.3125

Token 2165: 'd' (ID: 67)
  Prédit: 'd'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.06994210183620453
    2. '3' → logprob: -2.694941997528076
    3. 'c' → logprob: -14.382442474365234
    4. 'д' → logprob: -14.632442474365234
    5. 'vec' → logprob: -14.694942474365234
    6. 'dre' → logprob: -15.257442474365234
    7. 'def' → logprob: -15.319942474365234
    8. ')' → logprob: -15.444942474365234
    9. ' ' → logprob: -15.569942474365234
    10. 'A' → logprob: -15.569942474365234

Token 2166: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.6994617581367493
    2. ')
' → logprob: -0.6994617581367493
    3. '       ' → logprob: -5.074461936950684
    4. ')
' → logprob: -10.449461936950684
    5. '   ' → logprob: -12.199461936950684
    6. ')`
' → logprob: -13.199461936950684
    7. ')

' → logprob: -14.199461936950684
    8. ' )
' → logprob: -14.449461936950684
    9. ')`' → logprob: -14.699461936950684
    10. ' ' → logprob: -15.074461936950684

Token 2167: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.22149676084518433
    2. 'self' → logprob: -1.721496820449829
    3. 'plane' → logprob: -4.97149658203125
    4. ' self' → logprob: -5.22149658203125
    5. 'norm' → logprob: -6.22149658203125
    6. 'face' → logprob: -6.22149658203125
    7. 'normal' → logprob: -6.59649658203125
    8. 'n' → logprob: -7.47149658203125
    9. '```' → logprob: -7.59649658203125
    10. ' plane' → logprob: -7.84649658203125

Token 2168: ' normal' (ID: 6078)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.11635112762451172
    2. 'normal' (adapté à ' normal') → logprob: -2.7413511276245117
    3. 'face' → logprob: -4.366351127624512
    4. '       ' → logprob: -4.491351127624512
    5. 'norm' → logprob: -4.616351127624512
    6. 'plane' → logprob: -5.116351127624512
    7. 'n' → logprob: -5.366351127624512
    8. 'axis' → logprob: -7.366351127624512
    9. ' self' → logprob: -9.616351127624512
    10. '```' → logprob: -9.616351127624512

Token 2169: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.16023235023021698
    2. ' =' → logprob: -1.9102323055267334
    3. ')' → logprob: -11.785232543945312
    4. ' ' → logprob: -15.660232543945312
    5. ')=' → logprob: -15.785232543945312
    6. ',' → logprob: -16.660232543945312
    7. '(' → logprob: -16.910232543945312
    8. '=
' → logprob: -16.910232543945312
    9. '   ' → logprob: -17.535232543945312
    10. ':' → logprob: -17.660232543945312

Token 2170: ' normalize' (ID: 44464)
  Prédit: 'cross'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cross' → logprob: -0.576065182685852
    2. 'normalize' → logprob: -0.826065182685852
    3. ' cross' → logprob: -9.326065063476562
    4. ' normalize' → logprob: -10.326065063476562
    5. 'vector' → logprob: -12.576065063476562
    6. 'normal' → logprob: -15.076065063476562
    7. 'normalized' → logprob: -16.826065063476562
    8. '(normal' → logprob: -16.826065063476562
    9. 'norm' → logprob: -18.326065063476562
    10. '   ' → logprob: -18.451065063476562

Token 2171: '(c' (ID: 2410)
  Prédit: '(c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(c' → logprob: -0.00043102685594931245
    2. 'cross' → logprob: -7.750431060791016
    3. '(' → logprob: -15.250431060791016
    4. 'c' → logprob: -17.750431060791016
    5. ' cross' → logprob: -18.375431060791016
    6. '(
' → logprob: -18.625431060791016
    7. '.cross' → logprob: -19.750431060791016
    8. '_cross' → logprob: -20.000431060791016
    9. '	c' → logprob: -20.750431060791016
    10. 'vector' → logprob: -20.750431060791016

Token 2172: 'ross' (ID: 2838)
  Prédit: 'ross'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ross' → logprob: -0.00020091790065634996
    2. 'cross' → logprob: -8.625201225280762
    3. 'vec' → logprob: -11.500201225280762
    4. 'vector' → logprob: -11.875201225280762
    5. 'ros' → logprob: -14.125201225280762
    6. '(' → logprob: -14.125201225280762
    7. 'v' → logprob: -14.250201225280762
    8. '#' → logprob: -15.000201225280762
    9. 'loss' → logprob: -15.375201225280762
    10. 'r' → logprob: -15.500201225280762

Token 2173: '(vec' (ID: 57650)
  Prédit: '(vec'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(vec' → logprob: -0.0002036595979006961
    2. 'vec' → logprob: -8.500204086303711
    3. '(' → logprob: -16.12520408630371
    4. '	vec' → logprob: -16.62520408630371
    5. '(vector' → logprob: -18.12520408630371
    6. ' vec' → logprob: -19.75020408630371
    7. '   ' → logprob: -20.00020408630371
    8. '(
' → logprob: -20.00020408630371
    9. ')' → logprob: -20.12520408630371
    10. '.vec' → logprob: -20.37520408630371

Token 2174: 'AX' (ID: 5202)
  Prédit: 'AX'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'AX' → logprob: -0.00028815300902351737
    2. '(' → logprob: -8.250288009643555
    3. '_AX' → logprob: -11.500288009643555
    4. 'AY' → logprob: -11.500288009643555
    5. 'AXB' → logprob: -12.750288009643555
    6. '(ax' → logprob: -13.625288009643555
    7. 'Ax' → logprob: -14.375288009643555
    8. 'A' → logprob: -14.625288009643555
    9. 'ax' → logprob: -15.125288009643555
    10. '(vec' → logprob: -15.125288009643555

Token 2175: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00044032474397681653
    2. ' ,' → logprob: -8.12544059753418
    3. 'vec' → logprob: -9.00044059753418
    4. '(vec' → logprob: -11.00044059753418
    5. ',
' → logprob: -12.87544059753418
    6. ',v' → logprob: -14.75044059753418
    7. '(),' → logprob: -15.37544059753418
    8. ' vec' → logprob: -15.37544059753418
    9. 'vector' → logprob: -15.37544059753418
    10. '(' → logprob: -16.75044059753418

Token 2176: ' vec' (ID: 10563)
  Prédit: 'vec'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'vec' → logprob: -0.0010337610729038715
    2. ' vec' → logprob: -6.876033782958984
    3. '(vec' → logprob: -14.376033782958984
    4. '	vec' → logprob: -15.751033782958984
    5. 'vector' → logprob: -16.001033782958984
    6. '   ' → logprob: -16.751033782958984
    7. ' ' → logprob: -17.876033782958984
    8. 've' → logprob: -18.126033782958984
    9. 'Vec' → logprob: -18.501033782958984
    10. 'v' → logprob: -19.001033782958984

Token 2177: 'AY' (ID: 4751)
  Prédit: 'AY'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'AY' → logprob: -4.36574100604048e-06
    2. 'ay' → logprob: -12.500004768371582
    3. ' AY' → logprob: -14.625004768371582
    4. ')' → logprob: -16.250003814697266
    5. 'AYS' → logprob: -17.375003814697266
    6. 'EY' → logprob: -17.500003814697266
    7. 'A' → logprob: -17.875003814697266
    8. '(' → logprob: -17.875003814697266
    9. 'Ay' → logprob: -17.875003814697266
    10. 'Y' → logprob: -18.250003814697266

Token 2178: '))

' (ID: 9746)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.02057318203151226
    2. '))
' → logprob: -3.895573139190674
    3. ')' → logprob: -11.645573616027832
    4. '       ' → logprob: -11.645573616027832
    5. '))

' → logprob: -12.020573616027832
    6. ' ))' → logprob: -12.770573616027832
    7. '))
' → logprob: -13.270573616027832
    8. ')))' → logprob: -14.020573616027832
    9. '   ' → logprob: -14.520573616027832
    10. '));' → logprob: -14.520573616027832

Token 2179: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6442270874977112
    2. 'self' → logprob: -0.7692270874977112
    3. '#' → logprob: -4.644227027893066
    4. ' self' → logprob: -6.644227027893066
    5. '```' → logprob: -8.519227027893066
    6. 'direction' → logprob: -8.644227027893066
    7. 'initial' → logprob: -9.519227027893066
    8. ')' → logprob: -9.644227027893066
    9. 'v' → logprob: -10.144227027893066
    10. 'theta' → logprob: -11.769227027893066

Token 2180: ' #' (ID: 1069)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.07581742107868195
    2. '       ' → logprob: -2.950817346572876
    3. '#' (adapté à ' #') → logprob: -4.575817584991455
    4. 'direction' → logprob: -5.075817584991455
    5. 'rot' → logprob: -6.450817584991455
    6. 'ref' → logprob: -6.700817584991455
    7. 'dir' → logprob: -6.950817584991455
    8. 'initial' → logprob: -8.950817108154297
    9. 'vec' → logprob: -9.200817108154297
    10. 'reference' → logprob: -9.450817108154297

Token 2181: ' To' (ID: 2514)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.3138841986656189
    2. '#' → logprob: -2.1888842582702637
    3. 'rot' → logprob: -2.6888842582702637
    4. 'ref' → logprob: -3.0638842582702637
    5. 'dir' → logprob: -3.9388842582702637
    6. 'direction' → logprob: -4.188884258270264
    7. 'axis' → logprob: -6.188884258270264
    8. 'vec' → logprob: -6.313884258270264
    9. 'rotation' → logprob: -6.688884258270264
    10. 'initial' → logprob: -7.188884258270264

Token 2182: ' find' (ID: 1646)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -1.4419877529144287
    2. '_rotate' → logprob: -1.9419877529144287
    3. '_angle' → logprob: -2.1919877529144287
    4. '_face' → logprob: -2.4419877529144287
    5. 'face' → logprob: -2.6919877529144287
    6. 'compute' → logprob: -3.4419877529144287
    7. 'define' → logprob: -3.5669877529144287
    8. '_complete' → logprob: -3.8169877529144287
    9. 'get' → logprob: -3.8169877529144287
    10. '_self' → logprob: -4.066987991333008

Token 2183: ' the' (ID: 290)
  Prédit: 'direction'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'direction' → logprob: -1.003067135810852
    2. 'the' → logprob: -1.378067135810852
    3. 'rotation' → logprob: -1.878067135810852
    4. 'initial' → logprob: -2.8780670166015625
    5. 'self' → logprob: -3.0030670166015625
    6. 'reference' → logprob: -3.2530670166015625
    7. '#' → logprob: -3.7530670166015625
    8. 'ref' → logprob: -4.1280670166015625
    9. ' direction' → logprob: -4.8780670166015625
    10. 'dir' → logprob: -4.8780670166015625

Token 2184: ' sign' (ID: 2232)
  Prédit: 'direction'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'direction' → logprob: -0.3211531341075897
    2. 'rotation' → logprob: -1.696153163909912
    3. 'initial' → logprob: -3.321153163909912
    4. '#' → logprob: -3.571153163909912
    5. 'reference' → logprob: -4.696153163909912
    6. 'axis' → logprob: -5.571153163909912
    7. 'rot' → logprob: -5.946153163909912
    8. 'dir' → logprob: -6.071153163909912
    9. 'v' → logprob: -6.071153163909912
    10. 'self' → logprob: -6.571153163909912

Token 2185: ' (' (ID: 350)
  Prédit: ' of'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' of' → logprob: -0.26299747824668884
    2. 's' → logprob: -2.5129973888397217
    3. 'of' → logprob: -2.6379973888397217
    4. ',' → logprob: -3.0129973888397217
    5. '#' → logprob: -4.762997627258301
    6. ' for' → logprob: -5.637997627258301
    7. '   ' → logprob: -6.137997627258301
    8. 'ificance' → logprob: -6.137997627258301
    9. '(' → logprob: -6.387997627258301
    10. 'direction' → logprob: -6.887997627258301

Token 2186: 'direction' (ID: 43278)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.3836180865764618
    2. 'direction' → logprob: -2.508618116378784
    3. '1' → logprob: -2.633618116378784
    4. ')' → logprob: -2.633618116378784
    5. 'normal' → logprob: -3.758618116378784
    6. 'vec' → logprob: -4.258617877960205
    7. ' direction' → logprob: -4.883617877960205
    8. 'self' → logprob: -4.883617877960205
    9. 'angle' → logprob: -5.133617877960205
    10. 'dot' → logprob: -5.258617877960205

Token 2187: ' of' (ID: 328)
  Prédit: ' of'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' of' → logprob: -0.06724591553211212
    2. 'of' → logprob: -3.3172459602355957
    3. ')' → logprob: -4.192245960235596
    4. '#' → logprob: -5.692245960235596
    5. '),' → logprob: -5.692245960235596
    6. '       ' → logprob: -6.442245960235596
    7. '):
' → logprob: -6.942245960235596
    8. '   ' → logprob: -7.192245960235596
    9. '):' → logprob: -7.192245960235596
    10. ' for' → logprob: -7.317245960235596

Token 2188: ' rotation' (ID: 23769)
  Prédit: 'rotation'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rotation' → logprob: -0.5787941813468933
    2. 'normal' → logprob: -0.8287941813468933
    3. ' rotation' → logprob: -6.703794002532959
    4. 'angle' → logprob: -7.203794002532959
    5. ' normal' → logprob: -7.453794002532959
    6. 'the' → logprob: -8.453794479370117
    7. 'cross' → logprob: -10.203794479370117
    8. 'vector' → logprob: -10.453794479370117
    9. '   ' → logprob: -11.703794479370117
    10. '#' → logprob: -12.203794479370117

Token 2189: ')' (ID: 8)
  Prédit: ' around'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' around' → logprob: -0.7285420894622803
    2. '),' → logprob: -0.9785420894622803
    3. ')' → logprob: -2.7285420894622803
    4. ',' → logprob: -3.6035420894622803
    5. 'around' → logprob: -3.7285420894622803
    6. '):
' → logprob: -4.603542327880859
    7. '):' → logprob: -4.853542327880859
    8. ' of' → logprob: -6.228542327880859
    9. ' ),' → logprob: -6.478542327880859
    10. ' for' → logprob: -7.228542327880859

Token 2190: ' toward' (ID: 15256)
  Prédit: 'sign'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sign' → logprob: -0.5288205742835999
    2. '#' → logprob: -2.028820514678955
    3. 'if' → logprob: -2.153820514678955
    4. '       ' → logprob: -2.653820514678955
    5. ' sign' → logprob: -3.528820514678955
    6. ' if' → logprob: -3.778820514678955
    7. 'self' → logprob: -3.778820514678955
    8. ',' → logprob: -5.278820514678955
    9. 'cross' → logprob: -5.778820514678955
    10. ' self' → logprob: -6.528820514678955

Token 2191: ' AY' (ID: 117816)
  Prédit: 'vec'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'vec' → logprob: -0.02493954263627529
    2. 'vector' → logprob: -4.02493953704834
    3. ' vec' → logprob: -5.64993953704834
    4. 'Y' → logprob: -6.77493953704834
    5. ' vector' → logprob: -6.77493953704834
    6. 'AY' → logprob: -7.64993953704834
    7. '   ' → logprob: -9.14993953704834
    8. 'v' → logprob: -9.64993953704834
    9. '	vec' → logprob: -10.14993953704834
    10. ' Y' → logprob: -10.27493953704834

Token 2192: ' from' (ID: 591)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -1.2427669763565063
    2. ',' → logprob: -1.3677669763565063
    3. 'sign' → logprob: -1.4927669763565063
    4. 'vec' → logprob: -3.117766857147217
    5. ' =' → logprob: -3.367766857147217
    6. 'vector' → logprob: -3.367766857147217
    7. '   ' → logprob: -3.867766857147217
    8. '
' → logprob: -4.117766857147217
    9. ':
' → logprob: -4.242766857147217
    10. '#' → logprob: -4.742766857147217

Token 2193: ' AX' (ID: 71084)
  Prédit: 'vec'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'vec' → logprob: -0.10074162483215332
    2. 'AX' → logprob: -2.3507416248321533
    3. 'vector' → logprob: -8.475741386413574
    4. ' vec' → logprob: -8.725741386413574
    5. 'ax' → logprob: -8.850741386413574
    6. ' AX' → logprob: -12.350741386413574
    7. '   ' → logprob: -12.975741386413574
    8. '(vec' → logprob: -12.975741386413574
    9. 'edge' → logprob: -13.225741386413574
    10. '
' → logprob: -13.225741386413574

Token 2194: ',' (ID: 11)
  Prédit: 'sign'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sign' → logprob: -0.35763248801231384
    2. 'self' → logprob: -1.8576325178146362
    3. '       ' → logprob: -2.8576323986053467
    4. '#' → logprob: -3.8576323986053467
    5. 'cross' → logprob: -3.8576323986053467
    6. 'if' → logprob: -4.107632637023926
    7. 'vec' → logprob: -5.232632637023926
    8. 'side' → logprob: -5.607632637023926
    9. 'v' → logprob: -5.732632637023926
    10. ',' → logprob: -5.982632637023926

Token 2195: ' we' (ID: 581)
  Prédit: 'sign'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sign' → logprob: -0.7605546712875366
    2. 'dot' → logprob: -1.0105546712875366
    3. '#' → logprob: -2.510554790496826
    4. '       ' → logprob: -3.385554790496826
    5. 'cross' → logprob: -3.385554790496826
    6. 'self' → logprob: -5.135554790496826
    7. 'if' → logprob: -5.385554790496826
    8. 'd' → logprob: -5.635554790496826
    9. 'prod' → logprob: -7.010554790496826
    10. 'angle' → logprob: -7.510554790496826

Token 2196: ' check' (ID: 2371)
  Prédit: 'check'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'check' → logprob: -0.9612147212028503
    2. 'sign' → logprob: -0.9612147212028503
    3. 'compute' → logprob: -2.336214780807495
    4. '#' → logprob: -3.461214780807495
    5. 'det' → logprob: -3.586214780807495
    6. 'dot' → logprob: -3.961214780807495
    7. 'calculate' → logprob: -4.211214542388916
    8. 'angle' → logprob: -4.336214542388916
    9. 'continue' → logprob: -5.086214542388916
    10. 'need' → logprob: -5.461214542388916

Token 2197: ' if' (ID: 538)
  Prédit: 'dot'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dot' → logprob: -0.775203287601471
    2. 'cross' → logprob: -0.900203287601471
    3. 'vector' → logprob: -2.650203227996826
    4. ' cross' → logprob: -3.150203227996826
    5. ' dot' → logprob: -5.150203227996826
    6. ' vector' → logprob: -5.400203227996826
    7. '           ' → logprob: -5.400203227996826
    8. '   ' → logprob: -6.525203227996826
    9. '       ' → logprob: -7.150203227996826
    10. '                   ' → logprob: -7.525203227996826

Token 2198: ' cross' (ID: 8088)
  Prédit: 'dot'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dot' → logprob: -0.03838914632797241
    2. 'cross' → logprob: -3.663389205932617
    3. 'vector' → logprob: -4.913389205932617
    4. 'angle' → logprob: -5.788389205932617
    5. 'math' → logprob: -7.038389205932617
    6. '(dot' → logprob: -8.288389205932617
    7. ' dot' → logprob: -8.788389205932617
    8. 'normal' → logprob: -9.788389205932617
    9. 'normalize' → logprob: -10.413389205932617
    10. '   ' → logprob: -10.413389205932617

Token 2199: '(' (ID: 7)
  Prédit: '(vec'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(vec' → logprob: -0.0022777693811804056
    2. 'vec' → logprob: -6.252277851104736
    3. '_product' → logprob: -9.127277374267578
    4. 'product' → logprob: -9.377277374267578
    5. '(' → logprob: -9.627277374267578
    6. 'prod' → logprob: -10.252277374267578
    7. 'Product' → logprob: -10.877277374267578
    8. '_vec' → logprob: -11.752277374267578
    9. ' (' → logprob: -11.877277374267578
    10. '(
' → logprob: -12.377277374267578

Token 2200: 'AX' (ID: 5202)
  Prédit: 'vec'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'vec' → logprob: -0.009853952564299107
    2. 'normal' → logprob: -4.634853839874268
    3. '   ' → logprob: -10.884854316711426
    4. ' vec' → logprob: -11.009854316711426
    5. '```' → logprob: -11.134854316711426
    6. 'vector' → logprob: -11.384854316711426
    7. '(vec' → logprob: -11.509854316711426
    8. '           ' → logprob: -12.009854316711426
    9. '(normal' → logprob: -12.384854316711426
    10. '       ' → logprob: -12.634854316711426

Token 2201: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.004871162120252848
    2. ' ,' → logprob: -5.379871368408203
    3. ',
' → logprob: -9.254871368408203
    4. ')' → logprob: -10.129871368408203
    5. 'vec' → logprob: -10.754871368408203
    6. ',v' → logprob: -11.004871368408203
    7. '
' → logprob: -11.379871368408203
    8. '```' → logprob: -11.379871368408203
    9. '),' → logprob: -11.629871368408203
    10. 'vector' → logprob: -12.504871368408203

Token 2202: ' dir' (ID: 5609)
  Prédit: 'AY'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'AY' → logprob: -0.02784564532339573
    2. 'vec' → logprob: -3.652845621109009
    3. ' AY' → logprob: -6.902845859527588
    4. 'normal' → logprob: -8.02784538269043
    5. '   ' → logprob: -9.02784538269043
    6. ' ' → logprob: -10.65284538269043
    7. ' vec' → logprob: -10.65284538269043
    8. ' normal' → logprob: -11.40284538269043
    9. '```' → logprob: -11.65284538269043
    10. 'vector' → logprob: -11.90284538269043

Token 2203: ')' (ID: 8)
  Prédit: 'vec'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'vec' → logprob: -0.9953200817108154
    2. '_vec' → logprob: -1.2453200817108154
    3. ')' → logprob: -1.3703200817108154
    4. '_vector' → logprob: -3.3703200817108154
    5. 'v' → logprob: -3.8703200817108154
    6. 'vector' → logprob: -4.1203203201293945
    7. 'ector' → logprob: -5.3703203201293945
    8. '_vect' → logprob: -6.1203203201293945
    9. 'ect' → logprob: -6.3703203201293945
    10. 'ection' → logprob: -6.3703203201293945

Token 2204: ' has' (ID: 853)
  Prédit: ' is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' is' → logprob: -1.4235190153121948
    2. '=' → logprob: -1.5485190153121948
    3. ')' → logprob: -1.6735190153121948
    4. ' =' → logprob: -1.7985190153121948
    5. 'is' → logprob: -2.2985191345214844
    6. '```' → logprob: -4.548519134521484
    7. '>' → logprob: -4.798519134521484
    8. '_' → logprob: -4.923519134521484
    9. '   ' → logprob: -5.048519134521484
    10. '(' → logprob: -5.173519134521484

Token 2205: ' positive' (ID: 8841)
  Prédit: 'positive'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'positive' → logprob: -0.7889822125434875
    2. 'same' → logprob: -0.9139822125434875
    3. 'the' → logprob: -2.1639821529388428
    4. 'a' → logprob: -4.413982391357422
    5. 'z' → logprob: -4.788982391357422
    6. 'direction' → logprob: -5.663982391357422
    7. 'to' → logprob: -6.163982391357422
    8. 'normal' → logprob: -6.413982391357422
    9. ' positive' → logprob: -7.913982391357422
    10. 'negative' → logprob: -8.163982391357422

Token 2206: ' component' (ID: 6392)
  Prédit: 'normal'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'normal' → logprob: -0.24048949778079987
    2. 'sign' → logprob: -1.7404894828796387
    3. 'z' → logprob: -3.3654894828796387
    4. 'dot' → logprob: -5.865489482879639
    5. 'scalar' → logprob: -8.490489959716797
    6. '.z' → logprob: -8.615489959716797
    7. '(normal' → logprob: -8.740489959716797
    8. 'component' → logprob: -9.365489959716797
    9. 'Z' → logprob: -9.615489959716797
    10. '```' → logprob: -9.990489959716797

Token 2207: ' on' (ID: 402)
  Prédit: 'along'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'along' → logprob: -0.2781464755535126
    2. 'in' → logprob: -2.403146505355835
    3. ' along' → logprob: -2.653146505355835
    4. 'z' → logprob: -3.778146505355835
    5. 'normal' → logprob: -3.903146505355835
    6. '[' → logprob: -4.528146266937256
    7. 'out' → logprob: -5.153146266937256
    8. ' in' → logprob: -5.403146266937256
    9. '_z' → logprob: -5.778146266937256
    10. 'on' → logprob: -6.028146266937256

Token 2208: ' normal' (ID: 6078)
  Prédit: 'normal'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'normal' → logprob: -0.0022224606946110725
    2. ' normal' → logprob: -6.127222537994385
    3. '(normal' → logprob: -10.752222061157227
    4. '`' → logprob: -12.252222061157227
    5. '   ' → logprob: -12.627222061157227
    6. 'the' → logprob: -12.877222061157227
    7. '```' → logprob: -13.877222061157227
    8. 'normalized' → logprob: -14.377222061157227
    9. '
' → logprob: -14.502222061157227
    10. '``' → logprob: -14.627222061157227

Token 2209: '.' (ID: 13)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -1.4755899906158447
    2. '.' → logprob: -2.6005899906158447
    3. 'axis' → logprob: -2.7255899906158447
    4. '#' → logprob: -2.8505899906158447
    5. ':
' → logprob: -2.9755899906158447
    6. '(' → logprob: -2.9755899906158447
    7. ',' → logprob: -3.1005899906158447
    8. '       ' → logprob: -3.3505899906158447
    9. ' side' → logprob: -3.3505899906158447
    10. 'sign' → logprob: -3.6005899906158447

Token 2210: ' Rotate' (ID: 98562)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.5671191811561584
    2. '       ' → logprob: -1.3171191215515137
    3. 'dir' → logprob: -2.9421191215515137
    4. 'sign' → logprob: -3.0671191215515137
    5. 'if' → logprob: -3.9421191215515137
    6. ' self' → logprob: -4.067119121551514
    7. 'direction' → logprob: -4.317119121551514
    8. 'cross' → logprob: -5.942119121551514
    9. '#' → logprob: -6.067119121551514
    10. 'initial' → logprob: -6.067119121551514

Token 2211: ' AX' (ID: 71084)
  Prédit: 'by'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'by' → logprob: -1.2679264545440674
    2. '_direction' → logprob: -1.5179264545440674
    3. 'direction' → logprob: -2.1429264545440674
    4. '_angle' → logprob: -2.1429264545440674
    5. 'around' → logprob: -3.0179264545440674
    6. ' by' → logprob: -3.6429264545440674
    7. '```' → logprob: -3.7679264545440674
    8. 'sign' → logprob: -3.7679264545440674
    9. 'angle' → logprob: -3.8929264545440674
    10. '_sign' → logprob: -4.142926216125488

Token 2212: ' by' (ID: 656)
  Prédit: 'by'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'by' → logprob: -0.7012617588043213
    2. '_' → logprob: -1.3262617588043213
    3. ' by' → logprob: -1.9512617588043213
    4. 'around' → logprob: -3.3262617588043213
    5. '.' → logprob: -4.326261520385742
    6. '```' → logprob: -5.076261520385742
    7. '_direction' → logprob: -5.701261520385742
    8. '+' → logprob: -5.826261520385742
    9. 'tow' → logprob: -5.826261520385742
    10. 'in' → logprob: -6.076261520385742

Token 2213: ' angle' (ID: 16538)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -1.579073429107666
    2. 'angle' → logprob: -1.704073429107666
    3. 'a' → logprob: -1.954073429107666
    4. ' a' → logprob: -1.954073429107666
    5. ' angle' → logprob: -2.079073429107666
    6. ' self' → logprob: -2.454073429107666
    7. '1' → logprob: -2.829073429107666
    8. 'space' → logprob: -4.954073429107666
    9. '<|end|>' → logprob: -4.954073429107666
    10. ' ' → logprob: -4.954073429107666

Token 2214: '_deg' (ID: 144310)
  Prédit: '_deg'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_deg' → logprob: -0.35560736060142517
    2. '_' → logprob: -1.2306073904037476
    3. '```' → logprob: -6.105607509613037
    4. 's' → logprob: -6.730607509613037
    5. '_de' → logprob: -7.480607509613037
    6. '_direction' → logprob: -7.730607509613037
    7. '_in' → logprob: -8.355607032775879
    8. ')' → logprob: -8.605607032775879
    9. '_rad' → logprob: -8.605607032775879
    10. '_sign' → logprob: -8.855607032775879

Token 2215: ' towards' (ID: 9979)
  Prédit: ' around'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' around' → logprob: -1.093470573425293
    2. 'around' → logprob: -1.593470573425293
    3. 'self' → logprob: -2.343470573425293
    4. '       ' → logprob: -2.468470573425293
    5. '.' → logprob: -2.593470573425293
    6. ' in' → logprob: -3.218470573425293
    7. ',' → logprob: -3.718470573425293
    8. ' self' → logprob: -3.843470573425293
    9. ')' → logprob: -3.843470573425293
    10. ' toward' → logprob: -4.343470573425293

Token 2216: ' AY' (ID: 117816)
  Prédit: 'AY'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'AY' → logprob: -0.16404007375240326
    2. 'vec' → logprob: -2.4140400886535645
    3. ' AY' → logprob: -3.0390400886535645
    4. 'vector' → logprob: -4.9140400886535645
    5. ' vector' → logprob: -5.5390400886535645
    6. ' vec' → logprob: -6.1640400886535645
    7. 'Y' → logprob: -9.164039611816406
    8. 'ay' → logprob: -9.414039611816406
    9. '`' → logprob: -9.914039611816406
    10. ' ' → logprob: -10.039039611816406

Token 2217: '.
' (ID: 558)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.40589720010757446
    2. '       ' → logprob: -1.9058971405029297
    3. 'direction' → logprob: -2.5308971405029297
    4. 'sign' → logprob: -4.03089714050293
    5. 'dir' → logprob: -4.28089714050293
    6. ' self' → logprob: -4.28089714050293
    7. ' direction' → logprob: -4.40589714050293
    8. '#' → logprob: -4.78089714050293
    9. 'v' → logprob: -5.15589714050293
    10. 'around' → logprob: -5.53089714050293

Token 2218: '       ' (ID: 309)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.4611847996711731
    2. '       ' → logprob: -1.7111847400665283
    3. ' self' → logprob: -2.4611847400665283
    4. 'direction' → logprob: -3.2111847400665283
    5. 'sign' → logprob: -3.9611847400665283
    6. ' direction' → logprob: -4.711184978485107
    7. 'dir' → logprob: -5.086184978485107
    8. ')' → logprob: -5.086184978485107
    9. '#' → logprob: -5.711184978485107
    10. ' if' → logprob: -5.961184978485107

Token 2219: ' #' (ID: 1069)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -1.1627342700958252
    2. 'dir' → logprob: -1.6627342700958252
    3. 'sign' → logprob: -1.7877342700958252
    4. 'cross' → logprob: -2.037734270095825
    5. 'direction' → logprob: -2.787734270095825
    6. '       ' → logprob: -2.912734270095825
    7. '#' (adapté à ' #') → logprob: -3.412734270095825
    8. 'ref' → logprob: -4.162734031677246
    9. 'rot' → logprob: -4.537734031677246
    10. 'dot' → logprob: -5.912734031677246

Token 2220: ' Angle' (ID: 57919)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -1.113200306892395
    2. 'sign' → logprob: -1.113200306892395
    3. 'dir' → logprob: -2.1132001876831055
    4. 'direction' → logprob: -2.8632001876831055
    5. 'cross' → logprob: -3.1132001876831055
    6. 'ref' → logprob: -3.1132001876831055
    7. '#' → logprob: -3.4882001876831055
    8. '       ' → logprob: -4.2382001876831055
    9. 'rot' → logprob: -4.2382001876831055
    10. 'rotation' → logprob: -5.6132001876831055

Token 2221: ' between' (ID: 2870)
  Prédit: '_between'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_between' → logprob: -0.013665052130818367
    2. 'between' → logprob: -5.388665199279785
    3. ' =' → logprob: -6.263665199279785
    4. ' between' → logprob: -6.388665199279785
    5. '_diff' → logprob: -6.638665199279785
    6. '_to' → logprob: -6.888665199279785
    7. '_direction' → logprob: -7.513665199279785
    8. '_rad' → logprob: -7.763665199279785
    9. '_sign' → logprob: -8.138665199279785
    10. '_dir' → logprob: -8.263665199279785

Token 2222: ' AX' (ID: 71084)
  Prédit: 'vec'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'vec' → logprob: -4.4656579120783135e-05
    2. 'vector' → logprob: -10.500044822692871
    3. '   ' → logprob: -12.875044822692871
    4. 'vectors' → logprob: -13.000044822692871
    5. ' vec' → logprob: -13.125044822692871
    6. '```' → logprob: -13.250044822692871
    7. 'v' → logprob: -13.250044822692871
    8. 'ax' → logprob: -13.375044822692871
    9. 'AX' → logprob: -13.625044822692871
    10. 'normal' → logprob: -14.375044822692871

Token 2223: ' and' (ID: 326)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -1.13713538646698
    2. '_vec' → logprob: -1.38713538646698
    3. 'vec' → logprob: -1.76213538646698
    4. ',' → logprob: -2.0121355056762695
    5. '=' → logprob: -3.1371355056762695
    6. '   ' → logprob: -4.5121355056762695
    7. '_to' → logprob: -4.8871355056762695
    8. ' and' → logprob: -5.0121355056762695
    9. ' is' → logprob: -5.0121355056762695
    10. 'and' → logprob: -5.1371355056762695

Token 2224: ' AY' (ID: 117816)
  Prédit: 'AY'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'AY' → logprob: -0.0031333938241004944
    2. 'vec' → logprob: -5.878133296966553
    3. ' AY' → logprob: -8.628133773803711
    4. 'vector' → logprob: -9.128133773803711
    5. 'AX' → logprob: -11.378133773803711
    6. '   ' → logprob: -11.878133773803711
    7. 'ay' → logprob: -11.878133773803711
    8. ' ' → logprob: -12.503133773803711
    9. '
' → logprob: -12.753133773803711
    10. '```' → logprob: -13.378133773803711

Token 2225: ' <' (ID: 464)
  Prédit: 'between'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'between' → logprob: -0.8056001663208008
    2. 'angle' → logprob: -1.6806001663208008
    3. 'self' → logprob: -2.305600166320801
    4. '_between' → logprob: -2.430600166320801
    5. '=' → logprob: -3.555600166320801
    6. 'vec' → logprob: -3.805600166320801
    7. 'is' → logprob: -4.430600166320801
    8. ' =' → logprob: -4.430600166320801
    9. '#' → logprob: -4.555600166320801
    10. 'ang' → logprob: -4.805600166320801

Token 2226: ' ' (ID: 220)
  Prédit: '90'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '90' → logprob: -0.8000362515449524
    2. '0' → logprob: -2.0500361919403076
    3. ' ' → logprob: -2.0500361919403076
    4. '60' → logprob: -2.6750361919403076
    5. 'angle' → logprob: -2.6750361919403076
    6. 'vector' → logprob: -3.0500361919403076
    7. '180' → logprob: -3.6750361919403076
    8. ' vector' → logprob: -4.175036430358887
    9. ' angle' → logprob: -4.175036430358887
    10. ' math' → logprob: -4.300036430358887

Token 2227: '60' (ID: 1910)
  Prédit: '60'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '60' → logprob: -0.4267321825027466
    2. 'angle' → logprob: -1.5517321825027466
    3. 'self' → logprob: -2.801732063293457
    4. '90' → logprob: -3.176732063293457
    5. 'vector' → logprob: -3.551732063293457
    6. '180' → logprob: -6.551732063293457
    7. '59' → logprob: -7.551732063293457
    8. 'math' → logprob: -7.926732063293457
    9. ' angle' → logprob: -8.301732063293457
    10. ' ' → logprob: -8.676732063293457

Token 2228: '°' (ID: 6793)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.37259289622306824
    2. ':' → logprob: -1.8725929260253906
    3. ':
' → logprob: -3.3725929260253906
    4. ')' → logprob: -3.6225929260253906
    5. ',' → logprob: -3.7475929260253906
    6. '.' → logprob: -4.247592926025391
    7. ' and' → logprob: -4.372592926025391
    8. '#' → logprob: -4.747592926025391
    9. ')
' → logprob: -5.372592926025391
    10. '
' → logprob: -5.497592926025391

Token 2229: ' actually' (ID: 4771)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.14383941888809204
    2. '#' → logprob: -3.5188393592834473
    3. 'self' → logprob: -4.018839359283447
    4. '
' → logprob: -4.018839359283447
    5. ' if' → logprob: -4.268839359283447
    6. 'if' → logprob: -4.268839359283447
    7. ')' → logprob: -4.268839359283447
    8. ')
' → logprob: -5.143839359283447
    9. ',' → logprob: -5.393839359283447
    10. ' self' → logprob: -6.393839359283447

Token 2230: ' (' (ID: 350)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.5245896577835083
    2. '       ' → logprob: -1.0245896577835083
    3. '#' → logprob: -4.024589538574219
    4. ' self' → logprob: -4.399589538574219
    5. 'dir' → logprob: -5.774589538574219
    6. 'direction' → logprob: -5.899589538574219
    7. '
' → logprob: -6.149589538574219
    8. '   ' → logprob: -6.274589538574219
    9. 'v' → logprob: -6.399589538574219
    10. 'if' → logprob: -6.649589538574219

Token 2231: 'equ' (ID: 53097)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.09228827804327011
    2. ')
' → logprob: -3.2172882556915283
    3. ' )' → logprob: -3.5922882556915283
    4. ' )
' → logprob: -5.842288494110107
    5. '),' → logprob: -5.967288494110107
    6. ').' → logprob: -6.342288494110107
    7. 'angle' → logprob: -6.592288494110107
    8. 'vec' → logprob: -6.717288494110107
    9. '):
' → logprob: -6.717288494110107
    10. '#' → logprob: -6.967288494110107

Token 2232: 'ilateral' (ID: 74491)
  Prédit: 'al'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'al' → logprob: -0.8092061281204224
    2. 'ual' → logprob: -1.4342061281204224
    3. 'als' → logprob: -2.059206008911133
    4. 'ality' → logprob: -3.309206008911133
    5. 'angle' → logprob: -3.559206008911133
    6. '=' → logprob: -3.934206008911133
    7. 'val' → logprob: -4.059206008911133
    8. 't' → logprob: -4.809206008911133
    9. 'def' → logprob: -5.184206008911133
    10. ' =' → logprob: -5.309206008911133

Token 2233: ')
' (ID: 446)
  Prédit: 'triangle'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'triangle' → logprob: -0.13269507884979248
    2. ' triangle' → logprob: -2.257695198059082
    3. 'tri' → logprob: -4.382695198059082
    4. ')' → logprob: -5.382695198059082
    5. ' triangles' → logprob: -7.132695198059082
    6. '_triangle' → logprob: -7.132695198059082
    7. 'tet' → logprob: -8.132695198059082
    8. '),' → logprob: -8.757695198059082
    9. ' tetra' → logprob: -9.382695198059082
    10. 'AB' → logprob: -9.507695198059082

Token 2234: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.8915427923202515
    2. 'self' → logprob: -1.2665427923202515
    3. 'direction' → logprob: -2.141542911529541
    4. '#' → logprob: -2.891542911529541
    5. 'dir' → logprob: -3.141542911529541
    6. 'sign' → logprob: -3.391542911529541
    7. 'v' → logprob: -4.516542911529541
    8. ' self' → logprob: -4.516542911529541
    9. ' direction' → logprob: -4.641542911529541
    10. 'if' → logprob: -5.391542911529541

Token 2235: ' #' (ID: 1069)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -1.4392294883728027
    2. 'sign' → logprob: -1.4392294883728027
    3. '#' (adapté à ' #') → logprob: -1.9392294883728027
    4. 'dir' → logprob: -2.1892294883728027
    5. 'direction' → logprob: -2.1892294883728027
    6. '       ' → logprob: -2.3142294883728027
    7. 'cross' → logprob: -3.9392294883728027
    8. 'rot' → logprob: -4.564229488372803
    9. 'if' → logprob: -5.189229488372803
    10. 'rotation' → logprob: -5.939229488372803

Token 2236: ' Since' (ID: 12265)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.7222654223442078
    2. '#' → logprob: -1.7222654819488525
    3. 'sign' → logprob: -2.2222654819488525
    4. 'ref' → logprob: -2.7222654819488525
    5. 'dir' → logprob: -2.8472654819488525
    6. 'direction' → logprob: -3.4722654819488525
    7. 'cross' → logprob: -4.222265243530273
    8. 'sin' → logprob: -4.472265243530273
    9. 'rot' → logprob: -4.472265243530273
    10. 'angle' → logprob: -5.097265243530273

Token 2237: ' worm' (ID: 40598)
  Prédit: 'vec'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'vec' → logprob: -0.9870046973228455
    2. 'angle' → logprob: -1.2370047569274902
    3. 'the' → logprob: -1.7370047569274902
    4. 'normal' → logprob: -3.1120047569274902
    5. 'cross' → logprob: -3.8620047569274902
    6. 'AX' → logprob: -3.9870047569274902
    7. 'both' → logprob: -4.23700475692749
    8. 'we' → logprob: -4.36200475692749
    9. 'vector' → logprob: -4.61200475692749
    10. 'self' → logprob: -4.98700475692749

Token 2238: ''s' (ID: 885)
  Prédit: '_direction'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_direction' → logprob: -0.04303630441427231
    2. '_dir' → logprob: -4.293036460876465
    3. 'direction' → logprob: -4.293036460876465
    4. ' direction' → logprob: -5.043036460876465
    5. 'Direction' → logprob: -6.418036460876465
    6. ''s' → logprob: -6.793036460876465
    7. ' is' → logprob: -7.293036460876465
    8. 'moves' → logprob: -7.668036460876465
    9. '_angle' → logprob: -7.793036460876465
    10. '_path' → logprob: -7.918036460876465

Token 2239: ' angle' (ID: 16538)
  Prédit: 'initial'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'initial' → logprob: -0.49358677864074707
    2. 'direction' → logprob: -0.9935867786407471
    3. '_direction' → logprob: -4.993586540222168
    4. 'path' → logprob: -5.118586540222168
    5. 'first' → logprob: -6.368586540222168
    6. 'starting' → logprob: -6.743586540222168
    7. ' direction' → logprob: -7.368586540222168
    8. 'angle' → logprob: -7.618586540222168
    9. 'start' → logprob: -7.868586540222168
    10. '_initial' → logprob: -7.868586540222168

Token 2240: ' d' (ID: 272)
  Prédit: '_deg'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_deg' → logprob: -0.7975881695747375
    2. 'is' → logprob: -1.2975881099700928
    3. ' is' → logprob: -2.5475881099700928
    4. 'between' → logprob: -2.7975881099700928
    5. 'direction' → logprob: -3.2975881099700928
    6. 'deg' → logprob: -3.9225881099700928
    7. '_direction' → logprob: -4.047588348388672
    8. '_dir' → logprob: -4.172588348388672
    9. ' between' → logprob: -4.547588348388672
    10. '_between' → logprob: -4.922588348388672

Token 2241: ' is' (ID: 382)
  Prédit: 'eg'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'eg' → logprob: -0.14266036450862885
    2. 'e' → logprob: -2.39266037940979
    3. 'egree' → logprob: -3.64266037940979
    4. '_deg' → logprob: -5.142660140991211
    5. '=' → logprob: -5.392660140991211
    6. 'ir' → logprob: -6.392660140991211
    7. 'irection' → logprob: -6.892660140991211
    8. '_e' → logprob: -7.517660140991211
    9. 'ef' → logprob: -7.767660140991211
    10. ' =' → logprob: -8.267660140991211

Token 2242: ' the' (ID: 290)
  Prédit: ' positive'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' positive' → logprob: -0.8106871843338013
    2. 'positive' → logprob: -1.1856871843338013
    3. ' between' → logprob: -2.4356870651245117
    4. 'between' → logprob: -2.5606870651245117
    5. ' always' → logprob: -4.310687065124512
    6. ' given' → logprob: -4.435687065124512
    7. 'given' → logprob: -4.685687065124512
    8. 'always' → logprob: -5.060687065124512
    9. '1' → logprob: -5.310687065124512
    10. ' less' → logprob: -5.435687065124512

Token 2243: ' smaller' (ID: 13679)
  Prédit: 'angle'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'angle' → logprob: -0.3223716914653778
    2. ' angle' → logprob: -1.9473717212677002
    3. 'sm' → logprob: -2.9473717212677
    4. 'direction' → logprob: -4.072371482849121
    5. 'signed' → logprob: -4.447371482849121
    6. 'small' → logprob: -4.572371482849121
    7. 'rotation' → logprob: -5.322371482849121
    8. ' smallest' → logprob: -5.572371482849121
    9. 'counter' → logprob: -5.697371482849121
    10. 'direct' → logprob: -5.697371482849121

Token 2244: ' angle' (ID: 16538)
  Prédit: 'angle'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'angle' → logprob: -0.7192532420158386
    2. ' angle' → logprob: -0.8442532420158386
    3. 'than' → logprob: -3.3442533016204834
    4. ' than' → logprob: -4.344253063201904
    5. '_angle' → logprob: -4.469253063201904
    6. 'rotation' → logprob: -5.719253063201904
    7. ' between' → logprob: -5.969253063201904
    8. ' rotation' → logprob: -6.469253063201904
    9. 'between' → logprob: -6.469253063201904
    10. ' vector' → logprob: -6.719253063201904

Token 2245: ' between' (ID: 2870)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.6518846750259399
    2. ' between' → logprob: -1.40188467502594
    3. ')' → logprob: -2.5268845558166504
    4. 'between' → logprob: -2.9018845558166504
    5. ',
' → logprob: -3.2768845558166504
    6. 'from' → logprob: -4.65188455581665
    7. '_between' → logprob: -4.77688455581665
    8. '=' → logprob: -5.52688455581665
    9. '),' → logprob: -5.52688455581665
    10. '):
' → logprob: -5.77688455581665

Token 2246: ' AX' (ID: 71084)
  Prédit: 'vec'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'vec' → logprob: -0.0003980184264946729
    2. 'vector' → logprob: -8.375397682189941
    3. ' vec' → logprob: -9.000397682189941
    4. 'edge' → logprob: -11.500397682189941
    5. 'ax' → logprob: -11.875397682189941
    6. 'normal' → logprob: -12.500397682189941
    7. 'AX' → logprob: -12.500397682189941
    8. 'the' → logprob: -12.500397682189941
    9. '   ' → logprob: -12.750397682189941
    10. '(vec' → logprob: -13.000397682189941

Token 2247: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.1301172524690628
    2. 'and' → logprob: -2.130117177963257
    3. ',' → logprob: -6.130117416381836
    4. ' ' → logprob: -7.880117416381836
    5. ' to' → logprob: -8.630117416381836
    6. ')' → logprob: -9.255117416381836
    7. ' vector' → logprob: -10.005117416381836
    8. ' ,' → logprob: -10.130117416381836
    9. 'vector' → logprob: -10.255117416381836
    10. 'to' → logprob: -10.255117416381836

Token 2248: ' worm' (ID: 40598)
  Prédit: 'AY'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'AY' → logprob: -5.836499985889532e-05
    2. 'direction' → logprob: -10.3750581741333
    3. ' AY' → logprob: -10.8750581741333
    4. 'dir' → logprob: -13.2500581741333
    5. '   ' → logprob: -13.5000581741333
    6. '
' → logprob: -13.6250581741333
    7. 'vector' → logprob: -14.1250581741333
    8. 'ay' → logprob: -14.2500581741333
    9. 'the' → logprob: -14.3750581741333
    10. ' ' → logprob: -14.5000581741333

Token 2249: ' direction' (ID: 9262)
  Prédit: '_direction'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_direction' → logprob: -0.4018101096153259
    2. '_dir' → logprob: -1.1518101692199707
    3. '_vector' → logprob: -5.776810169219971
    4. 'direction' → logprob: -5.776810169219971
    5. '_vec' → logprob: -6.151810169219971
    6. 'Direction' → logprob: -6.526810169219971
    7. ' direction' → logprob: -6.776810169219971
    8. 'Dir' → logprob: -7.026810169219971
    9. 'dir' → logprob: -7.276810169219971
    10. 'vector' → logprob: -7.776810169219971

Token 2250: ' measured' (ID: 26489)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.31414830684661865
    2. ',
' → logprob: -2.439148426055908
    3. '       ' → logprob: -2.689148426055908
    4. ':' → logprob: -4.064148426055908
    5. '#' → logprob: -4.314148426055908
    6. '):
' → logprob: -4.439148426055908
    7. 'direction' → logprob: -4.689148426055908
    8. ':
' → logprob: -4.939148426055908
    9. '   ' → logprob: -5.189148426055908
    10. ')' → logprob: -5.314148426055908

Token 2251: ' inside' (ID: 6772)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.0773981362581253
    2. 'around' → logprob: -4.077398300170898
    3. 'tow' → logprob: -4.077398300170898
    4. 'in' → logprob: -4.202398300170898
    5. 'counter' → logprob: -5.077398300170898
    6. ' from' → logprob: -5.077398300170898
    7. 'clock' → logprob: -5.452398300170898
    8. 'on' → logprob: -5.827398300170898
    9. 'inside' → logprob: -7.077398300170898
    10. 'within' → logprob: -7.577398300170898

Token 2252: ' face' (ID: 4950)
  Prédit: 'the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'the' → logprob: -0.4783913791179657
    2. 'face' → logprob: -0.9783914089202881
    3. 'AX' → logprob: -6.728391170501709
    4. 'plane' → logprob: -6.728391170501709
    5. 'first' → logprob: -7.603391170501709
    6. 'angle' → logprob: -7.603391170501709
    7. 'triangle' → logprob: -7.853391170501709
    8. ' the' → logprob: -9.103391647338867
    9. '
' → logprob: -9.228391647338867
    10. '   ' → logprob: -9.353391647338867

Token 2253: ' triangle' (ID: 41487)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.2593376040458679
    2. ',
' → logprob: -2.3843376636505127
    3. '       ' → logprob: -2.6343376636505127
    4. '   ' → logprob: -4.759337425231934
    5. '.' → logprob: -4.884337425231934
    6. ')' → logprob: -5.134337425231934
    7. ' ,' → logprob: -5.384337425231934
    8. ' (' → logprob: -5.759337425231934
    9. '):
' → logprob: -5.884337425231934
    10. '),' → logprob: -6.009337425231934

Token 2254: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.6755324006080627
    2. ',
' → logprob: -1.175532341003418
    3. '(self' → logprob: -3.050532341003418
    4. '       ' → logprob: -3.675532341003418
    5. '#' → logprob: -3.925532341003418
    6. 'self' → logprob: -4.050532341003418
    7. '   ' → logprob: -4.300532341003418
    8. '):
' → logprob: -4.800532341003418
    9. '),' → logprob: -5.550532341003418
    10. '.' → logprob: -5.550532341003418

Token 2255: ' rotation' (ID: 23769)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.7267877459526062
    2. 'self' → logprob: -1.351787805557251
    3. '       ' → logprob: -1.726787805557251
    4. 'we' → logprob: -3.226787805557251
    5. ' self' → logprob: -3.726787805557251
    6. 'the' → logprob: -4.851787567138672
    7. ' we' → logprob: -5.851787567138672
    8. ' the' → logprob: -6.351787567138672
    9. ' #' → logprob: -6.851787567138672
    10. 'direction' → logprob: -7.101787567138672

Token 2256: ' is' (ID: 382)
  Prédit: '_direction'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_direction' → logprob: -0.15364252030849457
    2. '_sign' → logprob: -3.278642416000366
    3. 'direction' → logprob: -3.528642416000366
    4. ' direction' → logprob: -3.903642416000366
    5. '_dir' → logprob: -4.278642654418945
    6. '_angle' → logprob: -4.778642654418945
    7. '_' → logprob: -5.028642654418945
    8. ' is' → logprob: -5.028642654418945
    9. 'sign' → logprob: -5.528642654418945
    10. '=' → logprob: -5.903642654418945

Token 2257: ' from' (ID: 591)
  Prédit: 'angle'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'angle' → logprob: -0.3175630569458008
    2. 'positive' → logprob: -2.317563056945801
    3. '+' → logprob: -2.567563056945801
    4. '-' → logprob: -3.567563056945801
    5. ' angle' → logprob: -3.692563056945801
    6. '1' → logprob: -4.067563056945801
    7. ' positive' → logprob: -4.817563056945801
    8. '-angle' → logprob: -5.817563056945801
    9. '   ' → logprob: -6.192563056945801
    10. '(angle' → logprob: -6.317563056945801

Token 2258: ' AX' (ID: 71084)
  Prédit: 'vec'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'vec' → logprob: -0.06882335245609283
    2. 'AX' → logprob: -2.9438233375549316
    3. 'vector' → logprob: -4.568823337554932
    4. 'ax' → logprob: -6.818823337554932
    5. 'A' → logprob: -7.568823337554932
    6. ' vec' → logprob: -7.818823337554932
    7. 'edge' → logprob: -8.19382381439209
    8. 'v' → logprob: -8.44382381439209
    9. '`' → logprob: -8.56882381439209
    10. '```' → logprob: -8.69382381439209

Token 2259: ' towards' (ID: 9979)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -1.122968077659607
    2. ')' → logprob: -1.372968077659607
    3. '_' → logprob: -1.622968077659607
    4. 'tow' → logprob: -2.3729681968688965
    5. ' toward' → logprob: -3.8729681968688965
    6. '_direction' → logprob: -3.9979681968688965
    7. '_t' → logprob: -4.3729681968688965
    8. '+' → logprob: -4.4979681968688965
    9. '```' → logprob: -4.4979681968688965
    10. 'around' → logprob: -4.7479681968688965

Token 2260: ' AY' (ID: 117816)
  Prédit: 'AY'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'AY' → logprob: -0.4475037753582001
    2. 'Y' → logprob: -1.0725038051605225
    3. ' Y' → logprob: -4.572503566741943
    4. ' AY' → logprob: -5.197503566741943
    5. ''' → logprob: -7.072503566741943
    6. ' ' → logprob: -7.572503566741943
    7. '   ' → logprob: -8.072504043579102
    8. 'A' → logprob: -8.072504043579102
    9. '`' → logprob: -9.072504043579102
    10. 'AYS' → logprob: -9.322504043579102

Token 2261: ' inside' (ID: 6772)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.06595518440008163
    2. 'self' → logprob: -2.94095516204834
    3. ',' → logprob: -6.31595516204834
    4. ' around' → logprob: -6.44095516204834
    5. '.' → logprob: -6.56595516204834
    6. ' self' → logprob: -6.81595516204834
    7. 'direction' → logprob: -7.31595516204834
    8. '```' → logprob: -7.56595516204834
    9. '#' → logprob: -7.69095516204834
    10. 'around' → logprob: -7.81595516204834

Token 2262: ' plane' (ID: 16499)
  Prédit: 'face'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'face' → logprob: -0.7245117425918579
    2. 'the' → logprob: -0.7245117425918579
    3. 'plane' → logprob: -3.8495116233825684
    4. 'normal' → logprob: -5.474511623382568
    5. 'vec' → logprob: -5.599511623382568
    6. ')' → logprob: -8.099512100219727
    7. '```' → logprob: -8.099512100219727
    8. ' the' → logprob: -8.349512100219727
    9. 'vector' → logprob: -8.474512100219727
    10. 'v' → logprob: -8.974512100219727

Token 2263: '.

' (ID: 364)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3217622637748718
    2. 'self' → logprob: -1.3217623233795166
    3. 'direction' → logprob: -6.1967620849609375
    4. ' self' → logprob: -6.5717620849609375
    5. '#' → logprob: -6.6967620849609375
    6. 'v' → logprob: -7.0717620849609375
    7. ',' → logprob: -7.8217620849609375
    8. '
' → logprob: -7.9467620849609375
    9. 'dir' → logprob: -7.9467620849609375
    10. '   ' → logprob: -8.071762084960938

Token 2264: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5817403793334961
    2. 'self' → logprob: -0.8317403793334961
    3. '#' → logprob: -5.581740379333496
    4. 'v' → logprob: -6.956740379333496
    5. 'dir' → logprob: -7.831740379333496
    6. 'direction' → logprob: -8.206740379333496
    7. ' self' → logprob: -8.331740379333496
    8. 'rot' → logprob: -10.456740379333496
    9. '   ' → logprob: -10.456740379333496
    10. 'initial' → logprob: -11.206740379333496

Token 2265: ' #' (ID: 1069)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.018627217039465904
    2. '       ' → logprob: -4.393627166748047
    3. '#' (adapté à ' #') → logprob: -6.143627166748047
    4. 'direction' → logprob: -6.768627166748047
    5. 'dir' → logprob: -7.018627166748047
    6. 'rot' → logprob: -7.018627166748047
    7. 'sign' → logprob: -7.768627166748047
    8. 'axis' → logprob: -8.393627166748047
    9. 'ref' → logprob: -9.268627166748047
    10. 'rotation' → logprob: -9.768627166748047

Token 2266: ' Let's' (ID: 41021)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.06682897359132767
    2. '#' → logprob: -2.941828966140747
    3. '       ' → logprob: -5.691829204559326
    4. 'dir' → logprob: -5.816829204559326
    5. 'ref' → logprob: -5.941829204559326
    6. 'rot' → logprob: -6.941829204559326
    7. 'direction' → logprob: -7.066829204559326
    8. 'initial' → logprob: -8.066828727722168
    9. '   ' → logprob: -8.816828727722168
    10. 'u' → logprob: -8.941828727722168

Token 2267: ' compute' (ID: 23864)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'continue' → logprob: -0.8318063020706177
    2. ' continue' → logprob: -2.206806182861328
    3. 'define' → logprob: -2.581806182861328
    4. 'compute' → logprob: -2.706806182861328
    5. ' define' → logprob: -3.456806182861328
    6. 'import' → logprob: -3.581806182861328
    7. 'store' → logprob: -3.581806182861328
    8. '_continue' → logprob: -3.581806182861328
    9. 'calculate' → logprob: -3.956806182861328
    10. ' compute' → logprob: -4.081806182861328

Token 2268: ' base' (ID: 3611)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.44230231642723083
    2. 'axis' → logprob: -2.5673022270202637
    3. '#' → logprob: -2.8173022270202637
    4. 'rot' → logprob: -3.1923022270202637
    5. 'vec' → logprob: -3.3173022270202637
    6. 'rotation' → logprob: -3.6923022270202637
    7. 'angle' → logprob: -3.6923022270202637
    8. 'dir' → logprob: -3.8173022270202637
    9. 'sin' → logprob: -4.442302227020264
    10. 'cos' → logprob: -4.442302227020264

Token 2269: ' angle' (ID: 16538)
  Prédit: '_direction'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_direction' → logprob: -0.6160151362419128
    2. '_dir' → logprob: -1.4910151958465576
    3. 'direction' → logprob: -3.1160151958465576
    4. 'vec' → logprob: -3.1160151958465576
    5. ' direction' → logprob: -3.1160151958465576
    6. 'vector' → logprob: -3.6160151958465576
    7. 'dir' → logprob: -4.1160149574279785
    8. ' vector' → logprob: -4.2410149574279785
    9. '_axis' → logprob: -4.2410149574279785
    10. '_vec' → logprob: -4.7410149574279785

Token 2270: ' AX' (ID: 71084)
  Prédit: 'base'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'base' → logprob: -0.8036836385726929
    2. 'between' → logprob: -1.3036836385726929
    3. '_between' → logprob: -2.4286837577819824
    4. ' =' → logprob: -3.0536837577819824
    5. '_ax' → logprob: -3.1786837577819824
    6. '_base' → logprob: -3.3036837577819824
    7. 'ax' → logprob: -3.4286837577819824
    8. '=' → logprob: -4.553683757781982
    9. 'AX' → logprob: -5.303683757781982
    10. 'face' → logprob: -5.553683757781982

Token 2271: '->' (ID: 609)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.35202810168266296
    2. '_angle' → logprob: -1.9770281314849854
    3. '=' → logprob: -2.3520281314849854
    4. 'angle' → logprob: -2.9770281314849854
    5. '_rad' → logprob: -5.227027893066406
    6. '_deg' → logprob: -6.102027893066406
    7. ' ' → logprob: -7.352027893066406
    8. 'to' → logprob: -7.727027893066406
    9. '_vec' → logprob: -7.852027893066406
    10. '_ang' → logprob: -7.852027893066406

Token 2272: 'AY' (ID: 4751)
  Prédit: 'AY'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'AY' → logprob: -0.012080441229045391
    2. ' AY' → logprob: -4.512080669403076
    3. ' vector' → logprob: -7.762080669403076
    4. 'vector' → logprob: -7.887080669403076
    5. 'vec' → logprob: -9.387080192565918
    6. ' ' → logprob: -9.637080192565918
    7. '   ' → logprob: -10.512080192565918
    8. ' ' → logprob: -11.387080192565918
    9. 'Y' → logprob: -11.637080192565918
    10. 'AYA' → logprob: -12.262080192565918

Token 2273: ' in' (ID: 306)
  Prédit: 'base'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'base' → logprob: -0.4102119207382202
    2. 'self' → logprob: -1.4102119207382202
    3. 'angle' → logprob: -3.7852120399475098
    4. '       ' → logprob: -4.28521203994751
    5. 'between' → logprob: -4.28521203994751
    6. 'ax' → logprob: -4.53521203994751
    7. ' =' → logprob: -4.78521203994751
    8. '=' → logprob: -4.91021203994751
    9. 'vec' → logprob: -6.03521203994751
    10. '_base' → logprob: -6.16021203994751

Token 2274: ' degrees' (ID: 18210)
  Prédit: 'degrees'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'degrees' → logprob: -0.6897818446159363
    2. 'face' → logprob: -1.314781904220581
    3. 'plane' → logprob: -1.689781904220581
    4. '60' → logprob: -4.189781665802002
    5. '3' → logprob: -4.564781665802002
    6. 'degree' → logprob: -5.689781665802002
    7. 'code' → logprob: -5.939781665802002
    8. 'float' → logprob: -6.064781665802002
    9. 'XY' → logprob: -6.189781665802002
    10. 'the' → logprob: -6.439781665802002

Token 2275: ' for' (ID: 395)
  Prédit: 'base'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'base' → logprob: -0.021289395168423653
    2. 'self' → logprob: -4.146289348602295
    3. 'angle' → logprob: -6.146289348602295
    4. ' base' → logprob: -6.896289348602295
    5. '_base' → logprob: -7.146289348602295
    6. 'ax' → logprob: -7.396289348602295
    7. '       ' → logprob: -9.146289825439453
    8. '   ' → logprob: -9.771289825439453
    9. ' self' → logprob: -9.896289825439453
    10. '```' → logprob: -9.896289825439453

Token 2276: ' sanity' (ID: 94610)
  Prédit: 'reference'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'reference' → logprob: -0.12892507016658783
    2. 'face' → logprob: -3.253925085067749
    3. ' reference' → logprob: -3.878925085067749
    4. 'ref' → logprob: -4.12892484664917
    5. 'future' → logprob: -4.50392484664917
    6. 'rotation' → logprob: -4.75392484664917
    7. 'self' → logprob: -5.62892484664917
    8. 'base' → logprob: -6.00392484664917
    9. 'use' → logprob: -6.00392484664917
    10. 'comparison' → logprob: -6.37892484664917

Token 2277: ' (' (ID: 350)
  Prédit: 'base'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'base' → logprob: -0.05286191403865814
    2. 'self' → logprob: -3.1778619289398193
    3. 'angle' → logprob: -4.92786169052124
    4. ' base' → logprob: -7.05286169052124
    5. 'ax' → logprob: -7.55286169052124
    6. '
' → logprob: -7.92786169052124
    7. '   ' → logprob: -8.427862167358398
    8. '       ' → logprob: -9.302862167358398
    9. '```' → logprob: -9.302862167358398
    10. ' self' → logprob: -9.427862167358398

Token 2278: 'should' (ID: 10618)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -1.3271512985229492
    2. 'base' → logprob: -1.5771512985229492
    3. ')
' → logprob: -1.9521512985229492
    4. ')' → logprob: -2.077151298522949
    5. 'self' → logprob: -2.702151298522949
    6. '```' → logprob: -2.702151298522949
    7. '       ' → logprob: -3.077151298522949
    8. ' base' → logprob: -3.702151298522949
    9. '):
' → logprob: -4.452151298522949
    10. 'angle' → logprob: -4.702151298522949

Token 2279: ' be' (ID: 413)
  Prédit: 'be'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'be' → logprob: -0.01652343012392521
    2. ' be' → logprob: -4.141523361206055
    3. '=' → logprob: -8.266523361206055
    4. '#' → logprob: -9.641523361206055
    5. 'not' → logprob: -9.891523361206055
    6. 'always' → logprob: -10.141523361206055
    7. ')' → logprob: -10.891523361206055
    8. 'approx' → logprob: -11.141523361206055
    9. 'approximately' → logprob: -11.391523361206055
    10. '       ' → logprob: -11.891523361206055

Token 2280: ' ' (ID: 220)
  Prédit: '60'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '60' → logprob: -0.0438084751367569
    2. 'close' → logprob: -4.293808460235596
    3. 'about' → logprob: -4.543808460235596
    4. 'approximately' → logprob: -5.043808460235596
    5. '59' → logprob: -5.168808460235596
    6. 'around' → logprob: -6.043808460235596
    7. '~' → logprob: -6.543808460235596
    8. 'exact' → logprob: -7.418808460235596
    9. 'almost' → logprob: -7.793808460235596
    10. 'approx' → logprob: -7.793808460235596

Token 2281: '60' (ID: 1910)
  Prédit: '60'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '60' → logprob: -0.006568183656781912
    2. '59' → logprob: -5.88156795501709
    3. ' ' → logprob: -6.88156795501709
    4. 'approximately' → logprob: -6.88156795501709
    5. 'about' → logprob: -7.50656795501709
    6. 'close' → logprob: -7.88156795501709
    7. '~' → logprob: -8.50656795501709
    8. 'approx' → logprob: -8.88156795501709
    9. '≈' → logprob: -9.50656795501709
    10. 'exact' → logprob: -9.63156795501709

Token 2282: '°' (ID: 6793)
  Prédit: ')
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.5038498044013977
    2. ')' → logprob: -1.003849744796753
    3. '):
' → logprob: -3.753849744796753
    4. '):' → logprob: -5.878849983215332
    5. '       ' → logprob: -6.253849983215332
    6. ' )
' → logprob: -7.628849983215332
    7. '.' → logprob: -9.128849983215332
    8. ')
' → logprob: -9.253849983215332
    9. ' )' → logprob: -9.503849983215332
    10. '   ' → logprob: -9.753849983215332

Token 2283: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.4223712384700775
    2. ')
' → logprob: -1.4223712682724
    3. '       ' → logprob: -2.2973711490631104
    4. '):
' → logprob: -7.0473713874816895
    5. ')
' → logprob: -7.6723713874816895
    6. ',' → logprob: -7.7973713874816895
    7. '):' → logprob: -8.047370910644531
    8. '```' → logprob: -8.547370910644531
    9. '#' → logprob: -8.922370910644531
    10. ').' → logprob: -9.172370910644531

Token 2284: '       ' (ID: 309)
  Prédit: 'base'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'base' → logprob: -0.6681097745895386
    2. '       ' → logprob: -1.2931097745895386
    3. ' base' → logprob: -1.7931097745895386
    4. '```' → logprob: -3.668109893798828
    5. 'self' → logprob: -4.293109893798828
    6. 'angle' → logprob: -6.043109893798828
    7. ' self' → logprob: -6.043109893798828
    8. '``' → logprob: -7.168109893798828
    9. '
' → logprob: -7.418109893798828
    10. '_base' → logprob: -8.668109893798828

Token 2285: ' base' (ID: 3611)
  Prédit: 'base'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'base' (adapté à ' base') → logprob: -0.009401512332260609
    2. 'self' → logprob: -5.259401321411133
    3. 'angle' → logprob: -5.884401321411133
    4. 'ax' → logprob: -7.509401321411133
    5. ' base' → logprob: -7.634401321411133
    6. '       ' → logprob: -8.634401321411133
    7. '   ' → logprob: -10.259401321411133
    8. '```' → logprob: -10.509401321411133
    9. 'ang' → logprob: -10.634401321411133
    10. '
' → logprob: -11.009401321411133

Token 2286: '_angle' (ID: 51505)
  Prédit: '_angle'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_angle' → logprob: -1.4498052223643754e-05
    2. 'Angle' → logprob: -12.000014305114746
    3. 'angle' → logprob: -12.250014305114746
    4. '_' → logprob: -13.750014305114746
    5. '_ang' → logprob: -13.875014305114746
    6. '_vec' → logprob: -14.750014305114746
    7. ' =' → logprob: -15.375014305114746
    8. '_edge' → logprob: -15.750014305114746
    9. '_ax' → logprob: -16.000015258789062
    10. '=_' → logprob: -16.250015258789062

Token 2287: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.15267525613307953
    2. '=' → logprob: -2.027675151824951
    3. '_deg' → logprob: -4.652675151824951
    4. '_' → logprob: -8.15267562866211
    5. '_base' → logprob: -10.27767562866211
    6. '_de' → logprob: -10.77767562866211
    7. '_angle' → logprob: -11.15267562866211
    8. 's' → logprob: -11.90267562866211
    9. '_degree' → logprob: -11.90267562866211
    10. ' ' → logprob: -12.02767562866211

Token 2288: ' angle' (ID: 16538)
  Prédit: '60'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '60' → logprob: -0.004668049514293671
    2. 'self' → logprob: -6.254668235778809
    3. 'angle' → logprob: -6.254668235778809
    4. 'math' → logprob: -7.879668235778809
    5. 'vector' → logprob: -8.379668235778809
    6. '59' → logprob: -9.129668235778809
    7. ' ' → logprob: -10.254668235778809
    8. 'round' → logprob: -10.879668235778809
    9. 'T' → logprob: -11.004668235778809
    10. 't' → logprob: -12.004668235778809

Token 2289: '_between' (ID: 124874)
  Prédit: '_between'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_between' → logprob: -0.030043432489037514
    2. '_deg' → logprob: -3.530043363571167
    3. '_degree' → logprob: -9.405043601989746
    4. 'between' → logprob: -10.155043601989746
    5. 'deg' → logprob: -10.405043601989746
    6. ')' → logprob: -10.905043601989746
    7. 'Between' → logprob: -10.905043601989746
    8. 's' → logprob: -11.280043601989746
    9. '_' → logprob: -11.405043601989746
    10. ' =' → logprob: -11.530043601989746

Token 2290: '_vectors' (ID: 129121)
  Prédit: '_vectors'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_vectors' → logprob: -0.0036670563276857138
    2. 'vectors' → logprob: -5.628666877746582
    3. '_vertices' → logprob: -10.503666877746582
    4. 'Vectors' → logprob: -10.878666877746582
    5. 'deg' → logprob: -11.753666877746582
    6. 'vector' → logprob: -12.503666877746582
    7. 'def' → logprob: -13.378666877746582
    8. 'between' → logprob: -13.628666877746582
    9. ' vectors' → logprob: -14.003666877746582
    10. '
' → logprob: -14.128666877746582

Token 2291: '_deg' (ID: 144310)
  Prédit: '_deg'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_deg' → logprob: -0.004311784170567989
    2. 'deg' → logprob: -5.504311561584473
    3. '(v' → logprob: -8.754311561584473
    4. '(vec' → logprob: -10.629311561584473
    5. 'def' → logprob: -11.504311561584473
    6. '(' → logprob: -11.504311561584473
    7. '((' → logprob: -11.879311561584473
    8. 'v' → logprob: -12.379311561584473
    9. '(vector' → logprob: -12.504311561584473
    10. '_vec' → logprob: -12.879311561584473

Token 2292: '(vec' (ID: 57650)
  Prédit: '(vec'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(vec' → logprob: -0.018163522705435753
    2. 'vec' → logprob: -4.018163681030273
    3. '(' → logprob: -11.643163681030273
    4. '(
' → logprob: -13.768163681030273
    5. '   ' → logprob: -13.768163681030273
    6. ' vec' → logprob: -14.268163681030273
    7. '((' → logprob: -14.518163681030273
    8. '(vector' → logprob: -14.643163681030273
    9. '```' → logprob: -15.393163681030273
    10. '
' → logprob: -15.393163681030273

Token 2293: 'AX' (ID: 5202)
  Prédit: 'AX'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'AX' → logprob: -5.512236498361744e-07
    2. '_AX' → logprob: -15.375000953674316
    3. 'AXB' → logprob: -15.625000953674316
    4. ' AX' → logprob: -16.25
    5. '(' → logprob: -17.0
    6. 'ax' → logprob: -17.25
    7. 'Ax' → logprob: -18.25
    8. 'A' → logprob: -20.25
    9. '   ' → logprob: -20.375
    10. 'AC' → logprob: -20.875

Token 2294: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0003087678924202919
    2. ' ,' → logprob: -8.250308990478516
    3. ',
' → logprob: -10.500308990478516
    4. 'vec' → logprob: -11.500308990478516
    5. ',v' → logprob: -12.000308990478516
    6. '(vec' → logprob: -14.500308990478516
    7. ',

' → logprob: -15.000308990478516
    8. '   ' → logprob: -15.125308990478516
    9. '
' → logprob: -15.125308990478516
    10. '),' → logprob: -15.250308990478516

Token 2295: ' vec' (ID: 10563)
  Prédit: 'vec'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'vec' → logprob: -9.674858301877975e-05
    2. ' vec' → logprob: -9.250096321105957
    3. 'vector' → logprob: -14.875096321105957
    4. '	vec' → logprob: -16.375097274780273
    5. '(vec' → logprob: -16.625097274780273
    6. '   ' → logprob: -16.750097274780273
    7. 'v' → logprob: -17.375097274780273
    8. 've' → logprob: -18.125097274780273
    9. 'vect' → logprob: -19.000097274780273
    10. '           ' → logprob: -19.000097274780273

Token 2296: 'AY' (ID: 4751)
  Prédit: 'AY'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'AY' → logprob: -1.8908587662735954e-05
    2. 'ay' → logprob: -11.500019073486328
    3. 'AX' → logprob: -12.750019073486328
    4. '
' → logprob: -13.875019073486328
    5. ' AY' → logprob: -14.250019073486328
    6. 'Ay' → logprob: -14.500019073486328
    7. '   ' → logprob: -14.625019073486328
    8. ')' → logprob: -14.750019073486328
    9. 'A' → logprob: -15.125019073486328
    10. '\
' → logprob: -15.375019073486328

Token 2297: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0035321286413818598
    2. ')
' → logprob: -5.8785319328308105
    3. '       ' → logprob: -7.2535319328308105
    4. ' )' → logprob: -12.003532409667969
    5. '   ' → logprob: -12.503532409667969
    6. ')#' → logprob: -12.753532409667969
    7. ')
' → logprob: -13.753532409667969
    8. ')<' → logprob: -14.003532409667969
    9. ')`' → logprob: -14.128532409667969
    10. '#' → logprob: -14.378532409667969

Token 2298: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.056452732533216476
    2. '#' → logprob: -3.556452751159668
    3. 'self' → logprob: -4.306452751159668
    4. 'if' → logprob: -5.056452751159668
    5. ' if' → logprob: -6.681452751159668
    6. ')' → logprob: -6.681452751159668
    7. '```' → logprob: -6.806452751159668
    8. ',' → logprob: -7.181452751159668
    9. ' self' → logprob: -7.431452751159668
    10. 'v' → logprob: -8.306452751159668

Token 2299: ' if' (ID: 538)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.5227056741714478
    2. 'if' (adapté à ' if') → logprob: -1.6477056741714478
    3. '#' → logprob: -1.7727056741714478
    4. '       ' → logprob: -3.647705554962158
    5. 'assert' → logprob: -4.147705554962158
    6. 'direction' → logprob: -6.772705554962158
    7. 'v' → logprob: -7.522705554962158
    8. ')' → logprob: -8.272706031799316
    9. 'sign' → logprob: -8.397706031799316
    10. 'token' → logprob: -9.022706031799316

Token 2300: ' not' (ID: 625)
  Prédit: 'angle'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'angle' → logprob: -0.30448463559150696
    2. 'self' → logprob: -1.4294846057891846
    3. 'base' → logprob: -4.429484844207764
    4. 'abs' → logprob: -4.804484844207764
    5. 'not' → logprob: -6.679484844207764
    6. 'True' → logprob: -7.429484844207764
    7. 'False' → logprob: -7.679484844207764
    8. ' angle' → logprob: -8.054484367370605
    9. '0' → logprob: -9.304484367370605
    10. ' self' → logprob: -9.554484367370605

Token 2301: ' (' (ID: 350)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.727175772190094
    2. '(math' → logprob: -0.727175772190094
    3. 'math' → logprob: -3.977175712585449
    4. '(abs' → logprob: -4.727175712585449
    5. ' (' → logprob: -5.352175712585449
    6. ' math' → logprob: -7.352175712585449
    7. 'abs' → logprob: -8.35217571258545
    8. '(base' → logprob: -8.60217571258545
    9. '0' → logprob: -11.10217571258545
    10. '(
' → logprob: -11.47717571258545

Token 2302: '59' (ID: 4621)
  Prédit: '59'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '59' → logprob: -0.03900615870952606
    2. 'base' → logprob: -3.414006233215332
    3. '58' → logprob: -5.664006233215332
    4. 'abs' → logprob: -7.039006233215332
    5. 'math' → logprob: -7.914006233215332
    6. '57' → logprob: -8.539006233215332
    7. '55' → logprob: -8.789006233215332
    8. '56' → logprob: -9.914006233215332
    9. '(base' → logprob: -10.039006233215332
    10. 'angle' → logprob: -10.664006233215332

Token 2303: '.' (ID: 13)
  Prédit: ' <='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <=' → logprob: -0.5364108681678772
    2. '<=' → logprob: -1.0364108085632324
    3. ' <' → logprob: -3.5364108085632324
    4. '.' → logprob: -4.536410808563232
    5. '<' → logprob: -4.786410808563232
    6. '9' → logprob: -5.411410808563232
    7. '5' → logprob: -6.911410808563232
    8. ' and' → logprob: -7.286410808563232
    9. ',' → logprob: -7.411410808563232
    10. '6' → logprob: -7.536410808563232

Token 2304: '9' (ID: 24)
  Prédit: '99'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '99' → logprob: -0.38112953305244446
    2. '9' → logprob: -1.256129503250122
    3. '999' → logprob: -4.006129741668701
    4. '5' → logprob: -4.631129741668701
    5. '95' → logprob: -5.756129741668701
    6. ')' → logprob: -7.631129741668701
    7. '995' → logprob: -8.631129264831543
    8. '98' → logprob: -8.881129264831543
    9. '0' → logprob: -9.756129264831543
    10. '96' → logprob: -11.006129264831543

Token 2305: ' <' (ID: 464)
  Prédit: ' <='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <=' → logprob: -0.6803931593894958
    2. '<=' → logprob: -0.9303931593894958
    3. ' <' → logprob: -2.6803932189941406
    4. '<' → logprob: -3.6803932189941406
    5. ' and' → logprob: -6.180393218994141
    6. '9' → logprob: -7.055393218994141
    7. '5' → logprob: -7.680393218994141
    8. 'and' → logprob: -7.680393218994141
    9. '6' → logprob: -8.05539321899414
    10. '7' → logprob: -8.55539321899414

Token 2306: ' base' (ID: 3611)
  Prédit: 'base'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'base' → logprob: -5.8961017202818766e-05
    2. ' base' → logprob: -9.750059127807617
    3. 'angle' → logprob: -14.625059127807617
    4. '
' → logprob: -16.750059127807617
    5. '60' → logprob: -17.500059127807617
    6. '   ' → logprob: -17.625059127807617
    7. '(base' → logprob: -18.375059127807617
    8. '	base' → logprob: -18.375059127807617
    9. 'self' → logprob: -19.000059127807617
    10. '45' → logprob: -19.500059127807617

Token 2307: '_angle' (ID: 51505)
  Prédit: '_angle'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_angle' → logprob: -0.00012118533049942926
    2. '.' → logprob: -10.625121116638184
    3. '   ' → logprob: -11.250121116638184
    4. 'X' → logprob: -11.250121116638184
    5. 'base' → logprob: -11.375121116638184
    6. '_edge' → logprob: -11.750121116638184
    7. '(base' → logprob: -11.875121116638184
    8. 'angle' → logprob: -12.250121116638184
    9. 'Angle' → logprob: -12.375121116638184
    10. ')' → logprob: -12.750121116638184

Token 2308: ' <' (ID: 464)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<' → logprob: -0.2544100880622864
    2. ' <' → logprob: -1.5044100284576416
    3. '<=' → logprob: -6.629410266876221
    4. '):' → logprob: -7.879410266876221
    5. ' <=' → logprob: -8.129409790039062
    6. ' and' → logprob: -9.004409790039062
    7. ':' → logprob: -9.254409790039062
    8. '):
' → logprob: -9.879409790039062
    9. 'and' → logprob: -10.504409790039062
    10. '<|end|>' → logprob: -10.504409790039062

Token 2309: ' ' (ID: 220)
  Prédit: '60'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '60' → logprob: -0.0001114106344175525
    2. '61' → logprob: -9.12511157989502
    3. '{' → logprob: -14.25011157989502
    4. '=' → logprob: -15.00011157989502
    5. '``' → logprob: -15.12511157989502
    6. '
' → logprob: -15.37511157989502
    7. '6' → logprob: -15.75011157989502
    8. ' ' → logprob: -16.000110626220703
    9. '```' → logprob: -16.125110626220703
    10. '   ' → logprob: -16.250110626220703

Token 2310: '60' (ID: 1910)
  Prédit: '60'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '60' → logprob: -0.00862131267786026
    2. '61' → logprob: -4.7586212158203125
    3. ' ' → logprob: -12.258621215820312
    4. '6' → logprob: -14.758621215820312
    5. '   ' → logprob: -14.883621215820312
    6. '62' → logprob: -15.633621215820312
    7. '{' → logprob: -15.758621215820312
    8. '65' → logprob: -15.883621215820312
    9. '120' → logprob: -16.008621215820312
    10. '0' → logprob: -16.133621215820312

Token 2311: '.' (ID: 13)
  Prédit: '.'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.005927378311753273
    2. '):' → logprob: -5.880927562713623
    3. '):
' → logprob: -5.880927562713623
    4. '0' → logprob: -8.880927085876465
    5. '   ' → logprob: -9.505927085876465
    6. ':' → logprob: -11.255927085876465
    7. ')' → logprob: -11.255927085876465
    8. '1' → logprob: -11.380927085876465
    9. ' or' → logprob: -11.505927085876465
    10. '9' → logprob: -11.630927085876465

Token 2312: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00039254239527508616
    2. '5' → logprob: -8.50039291381836
    3. '2' → logprob: -8.62539291381836
    4. '01' → logprob: -12.87539291381836
    5. '3' → logprob: -13.18789291381836
    6. '```' → logprob: -13.68789291381836
    7. '6' → logprob: -14.31289291381836
    8. '05' → logprob: -14.93789291381836
    9. '4' → logprob: -15.18789291381836
    10. '
' → logprob: -15.25039291381836

Token 2313: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.015580631792545319
    2. '):' → logprob: -4.265580654144287
    3. ' ):
' → logprob: -7.140580654144287
    4. '       ' → logprob: -7.890580654144287
    5. ':' → logprob: -9.015580177307129
    6. '           ' → logprob: -10.140580177307129
    7. ':
' → logprob: -10.765580177307129
    8. '):
' → logprob: -11.015580177307129
    9. ' and' → logprob: -11.015580177307129
    10. '0' → logprob: -11.765580177307129

Token 2314: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0023612596560269594
    2. ':' → logprob: -6.627361297607422
    3. ' raise' → logprob: -7.752361297607422
    4. ':
' → logprob: -8.752361297607422
    5. '       ' → logprob: -8.877361297607422
    6. '):' → logprob: -9.627361297607422
    7. 'raise' → logprob: -9.877361297607422
    8. '):
' → logprob: -10.252361297607422
    9. '   ' → logprob: -10.252361297607422
    10. ',' → logprob: -10.627361297607422

Token 2315: ' #' (ID: 1069)
  Prédit: 'raise'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'raise' → logprob: -0.08169642835855484
    2. ' raise' → logprob: -2.5816965103149414
    3. '           ' → logprob: -5.956696510314941
    4. '#' (adapté à ' #') → logprob: -9.331696510314941
    5. 'pass' → logprob: -9.331696510314941
    6. '	raise' → logprob: -11.456696510314941
    7. '   ' → logprob: -11.831696510314941
    8. ' pass' → logprob: -11.831696510314941
    9. 'continue' → logprob: -12.331696510314941
    10. '       ' → logprob: -12.831696510314941

Token 2316: ' numerical' (ID: 57979)
  Prédit: 'raise'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'raise' → logprob: -0.022303476929664612
    2. '           ' → logprob: -4.522303581237793
    3. ' raise' → logprob: -4.522303581237793
    4. '       ' → logprob: -8.397303581237793
    5. '#' → logprob: -9.397303581237793
    6. 'return' → logprob: -12.272303581237793
    7. '   ' → logprob: -12.897303581237793
    8. 'pass' → logprob: -13.147303581237793
    9. 'self' → logprob: -13.272303581237793
    10. 'Raise' → logprob: -13.397303581237793

Token 2317: ' safety' (ID: 9246)
  Prédit: 'inst'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'inst' → logprob: -0.49866345524787903
    2. ' instability' → logprob: -1.4986634254455566
    3. ' inst' → logprob: -3.3736634254455566
    4. 'error' → logprob: -3.9986634254455566
    5. 'precision' → logprob: -4.248663425445557
    6. ' issues' → logprob: -4.373663425445557
    7. 'issues' → logprob: -4.373663425445557
    8. 'st' → logprob: -4.373663425445557
    9. '_warning' → logprob: -4.748663425445557
    10. '_precision' → logprob: -5.123663425445557

Token 2318: ',' (ID: 11)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.013533944264054298
    2. 'raise' → logprob: -5.638534069061279
    3. ' raise' → logprob: -5.638534069061279
    4. '       ' → logprob: -6.138534069061279
    5. ',' → logprob: -6.763534069061279
    6. '#' → logprob: -7.138534069061279
    7. ':' → logprob: -7.138534069061279
    8. ')' → logprob: -8.263533592224121
    9. ' continue' → logprob: -8.388533592224121
    10. 'continue' → logprob: -9.013533592224121

Token 2319: ' tetra' (ID: 176775)
  Prédit: ' raise'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' raise' → logprob: -0.7679491639137268
    2. ' pass' → logprob: -1.017949104309082
    3. 'raise' → logprob: -1.767949104309082
    4. 'pass' → logprob: -5.642949104309082
    5. '#' → logprob: -8.017949104309082
    6. '           ' → logprob: -9.517949104309082
    7. ' #' → logprob: -9.892949104309082
    8. '...' → logprob: -11.642949104309082
    9. '       ' → logprob: -12.642949104309082
    10. 'assert' → logprob: -13.517949104309082

Token 2320: 'hedron' (ID: 144037)
  Prédit: 'hedron'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'hedron' → logprob: -0.03037363477051258
    2. '#' → logprob: -4.905373573303223
    3. ')' → logprob: -5.405373573303223
    4. '   ' → logprob: -5.655373573303223
    5. ')
' → logprob: -5.905373573303223
    6. ':' → logprob: -6.780373573303223
    7. '}' → logprob: -6.780373573303223
    8. ' is' → logprob: -7.280373573303223
    9. 'def' → logprob: -7.405373573303223
    10. 'hed' → logprob: -7.405373573303223

Token 2321: ' equ' (ID: 2801)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -1.2405710220336914
    2. '       ' → logprob: -1.8655710220336914
    3. ' is' → logprob: -2.1155710220336914
    4. '           ' → logprob: -2.2405710220336914
    5. '#' → logprob: -2.9905710220336914
    6. '):' → logprob: -3.2405710220336914
    7. ' continues' → logprob: -3.7405710220336914
    8. ')' → logprob: -3.8655710220336914
    9. ':
' → logprob: -3.9905710220336914
    10. '.' → logprob: -4.115571022033691

Token 2322: 'ilateral' (ID: 74491)
  Prédit: 'ilateral'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ilateral' → logprob: -0.006220043636858463
    2. 'al' → logprob: -5.506219863891602
    3. 'ality' → logprob: -6.881219863891602
    4. '
' → logprob: -8.381219863891602
    5. 'ivalent' → logprob: -8.631219863891602
    6. 'iangle' → logprob: -9.006219863891602
    7. 'als' → logprob: -9.006219863891602
    8. 'ilibrium' → logprob: -9.381219863891602
    9. '```' → logprob: -9.506219863891602
    10. '#' → logprob: -10.256219863891602

Token 2323: ' edges' (ID: 22569)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.0027562379837036
    2. ')
' → logprob: -1.6277562379837036
    3. '           ' → logprob: -1.6277562379837036
    4. ',' → logprob: -3.127756118774414
    5. ':
' → logprob: -3.502756118774414
    6. ':' → logprob: -3.752756118774414
    7. '#' → logprob: -3.752756118774414
    8. ')' → logprob: -4.002756118774414
    9. '               ' → logprob: -4.127756118774414
    10. ' triangle' → logprob: -4.252756118774414

Token 2324: ' have' (ID: 679)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.28756415843963623
    2. ':
' → logprob: -2.537564277648926
    3. '):
' → logprob: -3.287564277648926
    4. ':' → logprob: -3.287564277648926
    5. ')
' → logprob: -4.037564277648926
    6. ')' → logprob: -4.287564277648926
    7. '           ' → logprob: -4.412564277648926
    8. ',' → logprob: -4.537564277648926
    9. '):' → logprob: -4.787564277648926
    10. '.' → logprob: -4.912564277648926

Token 2325: ' ' (ID: 220)
  Prédit: '60'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '60' → logprob: -0.29699698090553284
    2. 'approximately' → logprob: -1.9219969511032104
    3. 'approx' → logprob: -3.4219970703125
    4. 'exact' → logprob: -3.9219970703125
    5. 'about' → logprob: -3.9219970703125
    6. 'length' → logprob: -4.4219970703125
    7. '~' → logprob: -4.4219970703125
    8. 'almost' → logprob: -5.9219970703125
    9. 'angle' → logprob: -6.5469970703125
    10. 'around' → logprob: -6.6719970703125

Token 2326: '60' (ID: 1910)
  Prédit: '60'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '60' → logprob: -0.9125861525535583
    2. 'approximately' → logprob: -1.0375862121582031
    3. 'about' → logprob: -2.287586212158203
    4. 'approx' → logprob: -2.287586212158203
    5. '~' → logprob: -4.162586212158203
    6. 'exact' → logprob: -4.787586212158203
    7. 'length' → logprob: -5.787586212158203
    8. 'angle' → logprob: -5.787586212158203
    9. 'almost' → logprob: -5.787586212158203
    10. 'around' → logprob: -6.037586212158203

Token 2327: '°' (ID: 6793)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.3526601791381836
    2. ')' → logprob: -1.4776601791381836
    3. '):' → logprob: -3.4776601791381836
    4. '):
' → logprob: -3.9776601791381836
    5. '°' → logprob: -4.477660179138184
    6. ')
' → logprob: -5.852660179138184
    7. '#' → logprob: -6.102660179138184
    8. ':' → logprob: -7.227660179138184
    9. ':
' → logprob: -7.852660179138184
    10. 'deg' → logprob: -8.102660179138184

Token 2328: ' angles' (ID: 43448)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.19718080759048462
    2. ':
' → logprob: -2.57218074798584
    3. ':' → logprob: -2.82218074798584
    4. '       ' → logprob: -4.07218074798584
    5. '):
' → logprob: -4.94718074798584
    6. '               ' → logprob: -5.19718074798584
    7. ',' → logprob: -5.19718074798584
    8. 'raise' → logprob: -6.19718074798584
    9. '):' → logprob: -6.32218074798584
    10. ' and' → logprob: -7.19718074798584

Token 2329: ' on' (ID: 402)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4279552698135376
    2. '           ' → logprob: -1.5529552698135376
    3. ':' → logprob: -2.677955150604248
    4. ':
' → logprob: -3.427955150604248
    5. '):' → logprob: -4.677955150604248
    6. '):
' → logprob: -4.802955150604248
    7. ',' → logprob: -5.677955150604248
    8. ' raise' → logprob: -5.677955150604248
    9. ')' → logprob: -6.052955150604248
    10. 'raise' → logprob: -6.802955150604248

Token 2330: ' faces' (ID: 22060)
  Prédit: 'faces'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'faces' → logprob: -0.2529897689819336
    2. 'face' → logprob: -1.6279897689819336
    3. 'the' → logprob: -4.127989768981934
    4. 'each' → logprob: -5.752989768981934
    5. ' faces' → logprob: -6.127989768981934
    6. 'this' → logprob: -7.252989768981934
    7. 'all' → logprob: -7.377989768981934
    8. 'plane' → logprob: -7.377989768981934
    9. '   ' → logprob: -7.752989768981934
    10. 'vertices' → logprob: -7.877989768981934

Token 2331: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0606762133538723
    2. '
' → logprob: -3.935676097869873
    3. ')' → logprob: -4.560676097869873
    4. '           ' → logprob: -4.560676097869873
    5. ')
' → logprob: -5.560676097869873
    6. '        
' → logprob: -5.810676097869873
    7. ',' → logprob: -5.935676097869873
    8. ':' → logprob: -6.310676097869873
    9. '#' → logprob: -6.685676097869873
    10. ':
' → logprob: -6.935676097869873

Token 2332: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.006594344042241573
    2. '       ' → logprob: -5.506594181060791
    3. ' raise' → logprob: -6.756594181060791
    4. 'raise' → logprob: -7.881594181060791
    5. '               ' → logprob: -8.13159465789795
    6. ')' → logprob: -8.50659465789795
    7. '
' → logprob: -9.38159465789795
    8. '#' → logprob: -9.50659465789795
    9. ',' → logprob: -9.63159465789795
    10. '   ' → logprob: -10.38159465789795

Token 2333: ' pass' (ID: 1853)
  Prédit: ' pass'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' pass' → logprob: -0.7173548340797424
    2. 'raise' → logprob: -1.4673547744750977
    3. ' raise' → logprob: -1.7173547744750977
    4. 'pass' (adapté à ' pass') → logprob: -2.4673547744750977
    5. '           ' → logprob: -4.092354774475098
    6. '#' → logprob: -8.467354774475098
    7. '       ' → logprob: -9.842354774475098
    8. 'import' → logprob: -10.467354774475098
    9. '               ' → logprob: -10.717354774475098
    10. 'assert' → logprob: -11.467354774475098

Token 2334: '

' (ID: 279)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.017671149224042892
    2. ')' → logprob: -4.51767110824585
    3. 'self' → logprob: -6.01767110824585
    4. '#' → logprob: -6.89267110824585
    5. ')
' → logprob: -6.89267110824585
    6. '        
' → logprob: -7.64267110824585
    7. ' self' → logprob: -7.89267110824585
    8. ',' → logprob: -8.142671585083008
    9. '<|end|>' → logprob: -8.267671585083008
    10. '
' → logprob: -8.517671585083008

Token 2335: '       ' (ID: 309)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.6390957236289978
    2. '       ' → logprob: -0.7640957236289978
    3. '#' → logprob: -5.139095783233643
    4. 'v' → logprob: -8.639095306396484
    5. ' self' → logprob: -8.889095306396484
    6. '```' → logprob: -9.389095306396484
    7. 'direction' → logprob: -9.514095306396484
    8. '
' → logprob: -10.639095306396484
    9. 'dir' → logprob: -10.889095306396484
    10. '        
' → logprob: -10.889095306396484

Token 2336: ' #' (ID: 1069)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.07285866886377335
    2. '       ' → logprob: -3.3228585720062256
    3. '#' (adapté à ' #') → logprob: -3.4478585720062256
    4. 'dir' → logprob: -6.697858810424805
    5. 'direction' → logprob: -7.447858810424805
    6. 'rot' → logprob: -7.822858810424805
    7. 'vec' → logprob: -9.572858810424805
    8. ' self' → logprob: -10.697858810424805
    9. 'initial' → logprob: -10.822858810424805
    10. 'v' → logprob: -10.822858810424805

Token 2337: ' Compute' (ID: 45438)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.06737062335014343
    2. '       ' → logprob: -3.192370653152466
    3. '#' → logprob: -3.817370653152466
    4. 'dir' → logprob: -6.567370414733887
    5. 'direction' → logprob: -8.317370414733887
    6. 'initial' → logprob: -8.817370414733887
    7. 'rot' → logprob: -8.942370414733887
    8. 'vec' → logprob: -9.817370414733887
    9. 'ref' → logprob: -10.942370414733887
    10. '   ' → logprob: -11.317370414733887

Token 2338: ' rotation' (ID: 23769)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.02981448359787464
    2. 'dir' → logprob: -4.654814720153809
    3. 'initial' → logprob: -4.779814720153809
    4. '#' → logprob: -5.404814720153809
    5. 'direction' → logprob: -5.654814720153809
    6. 'rot' → logprob: -6.779814720153809
    7. 'rotation' → logprob: -7.279814720153809
    8. 'vec' → logprob: -7.779814720153809
    9. 'v' → logprob: -8.404814720153809
    10. ' self' → logprob: -8.404814720153809

Token 2339: ' direction' (ID: 9262)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.34353122115135193
    2. 'v' → logprob: -2.3435311317443848
    3. 'dir' → logprob: -3.0935311317443848
    4. 'axis' → logprob: -3.0935311317443848
    5. 'direction' → logprob: -3.4685311317443848
    6. '_direction' → logprob: -3.4685311317443848
    7. '_axis' → logprob: -4.218531131744385
    8. '_dir' → logprob: -4.343531131744385
    9. 'vector' → logprob: -5.218531131744385
    10. 'vec' → logprob: -5.718531131744385

Token 2340: ':' (ID: 25)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -1.232389211654663
    2. 'sign' → logprob: -1.607389211654663
    3. 'cross' → logprob: -1.607389211654663
    4. 'axis' → logprob: -2.107389211654663
    5. 'direction' → logprob: -2.607389211654663
    6. 'v' → logprob: -3.857389211654663
    7. 'dir' → logprob: -3.982389211654663
    8. 'around' → logprob: -3.982389211654663
    9. '       ' → logprob: -4.482389450073242
    10. ' self' → logprob: -5.107389450073242

Token 2341: ' positive' (ID: 8841)
  Prédit: 'cross'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cross' → logprob: -0.736778736114502
    2. 'sign' → logprob: -0.861778736114502
    3. 'self' → logprob: -3.736778736114502
    4. 'direction' → logprob: -4.111778736114502
    5. 'rot' → logprob: -4.236778736114502
    6. 'rotation' → logprob: -4.361778736114502
    7. 'axis' → logprob: -4.486778736114502
    8. ' cross' → logprob: -5.611778736114502
    9. '#' → logprob: -5.611778736114502
    10. 'dir' → logprob: -5.861778736114502

Token 2342: ' rotation' (ID: 23769)
  Prédit: '_angle'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_angle' → logprob: -0.3968420922756195
    2. ' =' → logprob: -1.521842122077942
    3. ' around' → logprob: -3.6468420028686523
    4. '_sign' → logprob: -4.271842002868652
    5. '_direction' → logprob: -4.396842002868652
    6. '_deg' → logprob: -4.521842002868652
    7. '_' → logprob: -4.521842002868652
    8. '=' → logprob: -4.521842002868652
    9. 'sign' → logprob: -5.271842002868652
    10. 'around' → logprob: -5.771842002868652

Token 2343: ' around' (ID: 2846)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -1.0372896194458008
    2. '_direction' → logprob: -1.0372896194458008
    3. '_angle' → logprob: -2.162289619445801
    4. '_' → logprob: -3.162289619445801
    5. '=' → logprob: -3.162289619445801
    6. '_sign' → logprob: -3.287289619445801
    7. '_deg' → logprob: -3.787289619445801
    8. '_dir' → logprob: -4.787289619445801
    9. ',' → logprob: -4.912289619445801
    10. ')' → logprob: -5.287289619445801

Token 2344: ' normal' (ID: 6078)
  Prédit: 'normal'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'normal' → logprob: -1.4617256056226324e-05
    2. '
' → logprob: -11.625014305114746
    3. ' normal' → logprob: -12.250014305114746
    4. '(normal' → logprob: -14.625014305114746
    5. '    
' → logprob: -15.875014305114746
    6. '   ' → logprob: -16.000015258789062
    7. '
' → logprob: -16.875015258789062
    8. 'normalized' → logprob: -17.750015258789062
    9. '        
' → logprob: -18.500015258789062
    10. '```' → logprob: -18.625015258789062

Token 2345: ' to' (ID: 316)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.4784262478351593
    2. ' around' → logprob: -2.728426218032837
    3. 'around' → logprob: -2.728426218032837
    4. 'direction' → logprob: -3.228426218032837
    5. ' direction' → logprob: -3.603426218032837
    6. '(self' → logprob: -3.603426218032837
    7. ' self' → logprob: -3.728426218032837
    8. ',' → logprob: -3.978426218032837
    9. ' is' → logprob: -4.103426456451416
    10. '       ' → logprob: -4.353426456451416

Token 2346: ' bring' (ID: 5624)
  Prédit: 'vector'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'vector' → logprob: -0.49297475814819336
    2. 'vec' → logprob: -1.6179747581481934
    3. 'get' → logprob: -2.1179747581481934
    4. 'rotate' → logprob: -3.4929747581481934
    5. 'v' → logprob: -3.6179747581481934
    6. 'face' → logprob: -4.742974758148193
    7. 'align' → logprob: -6.367974758148193
    8. 'go' → logprob: -7.492974758148193
    9. 'normal' → logprob: -7.492974758148193
    10. ' vector' → logprob: -8.117975234985352

Token 2347: ' AX' (ID: 71084)
  Prédit: 'vec'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'vec' → logprob: -0.0006172468420118093
    2. 'vector' → logprob: -7.500617027282715
    3. ' vec' → logprob: -10.500617027282715
    4. 'v' → logprob: -10.625617027282715
    5. '   ' → logprob: -12.750617027282715
    6. '```' → logprob: -12.750617027282715
    7. '`' → logprob: -13.375617027282715
    8. 'vect' → logprob: -14.000617027282715
    9. ' vector' → logprob: -14.250617027282715
    10. '           ' → logprob: -14.500617027282715

Token 2348: ' to' (ID: 316)
  Prédit: 'tow'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tow' → logprob: -0.306700736284256
    2. ',' → logprob: -2.3067007064819336
    3. 'vector' → logprob: -2.5567007064819336
    4. 'vec' → logprob: -4.056700706481934
    5. ' towards' → logprob: -4.056700706481934
    6. ' toward' → logprob: -4.181700706481934
    7. 'to' → logprob: -4.306700706481934
    8. ' vector' → logprob: -4.806700706481934
    9. ' to' → logprob: -5.306700706481934
    10. ')' → logprob: -5.806700706481934

Token 2349: ' AY' (ID: 117816)
  Prédit: 'AY'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'AY' → logprob: -0.05299839377403259
    2. 'vec' → logprob: -3.0529983043670654
    3. 'vector' → logprob: -5.4279985427856445
    4. ' AY' → logprob: -13.052998542785645
    5. 'ay' → logprob: -13.427998542785645
    6. '```' → logprob: -13.552998542785645
    7. '   ' → logprob: -13.927998542785645
    8. '`' → logprob: -14.052998542785645
    9. 'AYS' → logprob: -15.052998542785645
    10. 'XY' → logprob: -15.052998542785645

Token 2350: '
' (ID: 198)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.4557899832725525
    2. '       ' → logprob: -1.5807900428771973
    3. ' self' → logprob: -2.9557900428771973
    4. ',' → logprob: -3.5807900428771973
    5. ' direction' → logprob: -3.9557900428771973
    6. ' (' → logprob: -4.330790042877197
    7. 'direction' → logprob: -4.330790042877197
    8. '(self' → logprob: -5.205790042877197
    9. ' is' → logprob: -5.330790042877197
    10. '.' → logprob: -5.330790042877197

Token 2351: '       ' (ID: 309)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.6740103960037231
    2. '       ' → logprob: -0.9240103960037231
    3. ' self' → logprob: -2.7990102767944336
    4. ' if' → logprob: -4.799010276794434
    5. 'direction' → logprob: -5.049010276794434
    6. ' direction' → logprob: -5.424010276794434
    7. 'if' → logprob: -5.549010276794434
    8. 'sign' → logprob: -6.174010276794434
    9. ',' → logprob: -6.549010276794434
    10. 'v' → logprob: -6.924010276794434

Token 2352: ' #' (ID: 1069)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.20550183951854706
    2. '       ' → logprob: -2.9555017948150635
    3. 'sign' → logprob: -3.2055017948150635
    4. '#' (adapté à ' #') → logprob: -3.4555017948150635
    5. 'rot' → logprob: -3.5805017948150635
    6. 'direction' → logprob: -4.330502033233643
    7. 'rotation' → logprob: -4.830502033233643
    8. 'cross' → logprob: -5.580502033233643
    9. 'if' → logprob: -6.080502033233643
    10. 'dir' → logprob: -6.205502033233643

Token 2353: ' We' (ID: 1416)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.056809037923812866
    2. '       ' → logprob: -3.4318089485168457
    3. '#' → logprob: -4.431808948516846
    4. ' self' → logprob: -5.056808948516846
    5. 'direction' → logprob: -6.431808948516846
    6. 'dir' → logprob: -7.431808948516846
    7. 'rot' → logprob: -7.431808948516846
    8. 'sign' → logprob: -7.556808948516846
    9. 'v' → logprob: -7.681808948516846
    10. 'rotation' → logprob: -8.556809425354004

Token 2354: ' express' (ID: 6101)
  Prédit: 'rotate'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'rotate' → logprob: -0.48445773124694824
    2. 'continue' → logprob: -1.9844577312469482
    3. 'import' → logprob: -3.1094577312469482
    4. 'define' → logprob: -3.2344577312469482
    5. '.rotate' → logprob: -3.8594577312469482
    6. 'will' → logprob: -3.9844577312469482
    7. 'compute' → logprob: -4.234457969665527
    8. '#' → logprob: -4.484457969665527
    9. 'need' → logprob: -4.859457969665527
    10. 'self' → logprob: -4.859457969665527

Token 2355: ' worm' (ID: 40598)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.368775337934494
    2. 'dir' → logprob: -2.4937753677368164
    3. 'v' → logprob: -2.6187753677368164
    4. 'initial' → logprob: -2.8687753677368164
    5. 'vec' → logprob: -3.4937753677368164
    6. 'direction' → logprob: -3.6187753677368164
    7. 'the' → logprob: -4.368775367736816
    8. 'rotation' → logprob: -4.618775367736816
    9. 'axis' → logprob: -5.618775367736816
    10. ' self' → logprob: -5.868775367736816

Token 2356: ' vector' (ID: 9727)
  Prédit: '_direction'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_direction' → logprob: -0.16748592257499695
    2. 'direction' → logprob: -2.2924859523773193
    3. '_dir' → logprob: -3.0424859523773193
    4. ' direction' → logprob: -5.41748571395874
    5. 'dir' → logprob: -7.54248571395874
    6. 'initial' → logprob: -8.667486190795898
    7. '_initial' → logprob: -9.042486190795898
    8. '_angle' → logprob: -9.542486190795898
    9. 'self' → logprob: -10.792486190795898
    10. '   ' → logprob: -10.792486190795898

Token 2357: ' as' (ID: 472)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5888416767120361
    2. 'as' → logprob: -1.7138416767120361
    3. ' =' → logprob: -2.338841676712036
    4. 'self' → logprob: -2.463841676712036
    5. ' as' → logprob: -3.963841676712036
    6. 'v' → logprob: -4.088841438293457
    7. 'on' → logprob: -4.838841438293457
    8. '_as' → logprob: -5.213841438293457
    9. '=self' → logprob: -5.463841438293457
    10. '_direction' → logprob: -5.463841438293457

Token 2358: ' rotating' (ID: 65441)
  Prédit: 'vector'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'vector' → logprob: -0.018598081544041634
    2. 'scalar' → logprob: -4.7685980796813965
    3. ' vector' → logprob: -4.8935980796813965
    4. 'self' → logprob: -6.1435980796813965
    5. ' scalar' → logprob: -8.768598556518555
    6. '   ' → logprob: -10.518598556518555
    7. 'rotate' → logprob: -10.893598556518555
    8. ' self' → logprob: -11.268598556518555
    9. 'v' → logprob: -11.268598556518555
    10. '       ' → logprob: -11.643598556518555

Token 2359: ' AX' (ID: 71084)
  Prédit: 'vec'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'vec' → logprob: -0.001078302855603397
    2. 'around' → logprob: -7.626078128814697
    3. ' vec' → logprob: -8.501078605651855
    4. '(vec' → logprob: -8.501078605651855
    5. 'vector' → logprob: -9.001078605651855
    6. '_vec' → logprob: -10.751078605651855
    7. '   ' → logprob: -11.126078605651855
    8. ' around' → logprob: -11.751078605651855
    9. '```' → logprob: -12.876078605651855
    10. '       ' → logprob: -13.001078605651855

Token 2360: ' by' (ID: 656)
  Prédit: 'around'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'around' → logprob: -0.6391969919204712
    2. '_' → logprob: -1.5141969919204712
    3. 'by' → logprob: -2.5141968727111816
    4. ' around' → logprob: -3.2641968727111816
    5. ',' → logprob: -3.2641968727111816
    6. '(' → logprob: -3.8891968727111816
    7. ' by' → logprob: -4.264196872711182
    8. ')' → logprob: -4.514196872711182
    9. '   ' → logprob: -4.889196872711182
    10. '(
' → logprob: -5.139196872711182

Token 2361: ' +' (ID: 659)
  Prédit: 'angle'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'angle' → logprob: -0.3977120816707611
    2. ' angle' → logprob: -1.5227121114730835
    3. 'self' → logprob: -2.272711992263794
    4. ' self' → logprob: -5.147712230682373
    5. ')' → logprob: -7.897712230682373
    6. '(angle' → logprob: -8.272711753845215
    7. '<|end|>' → logprob: -8.647711753845215
    8. 'the' → logprob: -9.022711753845215
    9. '.angle' → logprob: -10.022711753845215
    10. '1' → logprob: -10.272711753845215

Token 2362: 'd' (ID: 67)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.6543923616409302
    2. 'angle' → logprob: -0.7793923616409302
    3. ' angle' → logprob: -4.154392242431641
    4. ' self' → logprob: -5.154392242431641
    5. '(angle' → logprob: -11.02939224243164
    6. '1' → logprob: -11.02939224243164
    7. '```' → logprob: -11.52939224243164
    8. ')' → logprob: -11.90439224243164
    9. '<|end|>' → logprob: -11.90439224243164
    10. '.angle' → logprob: -12.27939224243164

Token 2363: ' degrees' (ID: 18210)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.251670241355896
    2. '_deg' → logprob: -1.626670241355896
    3. 'self' → logprob: -2.5016703605651855
    4. ' around' → logprob: -2.6266703605651855
    5. '_angle' → logprob: -2.6266703605651855
    6. '(self' → logprob: -2.8766703605651855
    7. ')' → logprob: -3.6266703605651855
    8. '_' → logprob: -4.0016703605651855
    9. ' =' → logprob: -4.1266703605651855
    10. '=' → logprob: -4.1266703605651855

Token 2364: ' toward' (ID: 15256)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.32697874307632446
    2. 'self' → logprob: -2.2019786834716797
    3. ' self' → logprob: -2.4519786834716797
    4. ')' → logprob: -3.2019786834716797
    5. ' around' → logprob: -3.9519786834716797
    6. '.' → logprob: -4.57697868347168
    7. ',' → logprob: -6.32697868347168
    8. '(self' → logprob: -6.45197868347168
    9. '   ' → logprob: -6.70197868347168
    10. 'around' → logprob: -6.70197868347168

Token 2365: ' AY' (ID: 117816)
  Prédit: 'AY'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'AY' → logprob: -0.043151967227458954
    2. 'vec' → logprob: -3.41815185546875
    3. ' AY' → logprob: -5.29315185546875
    4. 'Y' → logprob: -6.04315185546875
    5. 'vector' → logprob: -6.54315185546875
    6. 'normal' → logprob: -8.91815185546875
    7. ' vector' → logprob: -9.29315185546875
    8. ' vec' → logprob: -9.29315185546875
    9. ' Y' → logprob: -9.79315185546875
    10. '   ' → logprob: -10.04315185546875

Token 2366: ' inside' (ID: 6772)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.2104620337486267
    2. '       ' → logprob: -2.3354620933532715
    3. ' self' → logprob: -2.7104620933532715
    4. '.' → logprob: -4.7104620933532715
    5. ')' → logprob: -5.4604620933532715
    6. '(self' → logprob: -5.9604620933532715
    7. ' around' → logprob: -6.3354620933532715
    8. ' =' → logprob: -6.7104620933532715
    9. 'around' → logprob: -6.8354620933532715
    10. 'from' → logprob: -7.0854620933532715

Token 2367: ' the' (ID: 290)
  Prédit: 'the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'the' → logprob: -0.31749746203422546
    2. 'face' → logprob: -2.067497491836548
    3. 'plane' → logprob: -2.067497491836548
    4. 'normal' → logprob: -4.192497253417969
    5. ' the' → logprob: -5.942497253417969
    6. ' plane' → logprob: -7.692497253417969
    7. 'vector' → logprob: -8.442497253417969
    8. ' normal' → logprob: -8.692497253417969
    9. ' face' → logprob: -9.442497253417969
    10. 'first' → logprob: -9.942497253417969

Token 2368: ' face' (ID: 4950)
  Prédit: 'face'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'face' → logprob: -0.39647722244262695
    2. 'plane' → logprob: -1.146477222442627
    3. ' plane' → logprob: -5.271477222442627
    4. ' face' → logprob: -5.896477222442627
    5. 'first' → logprob: -7.271477222442627
    6. '
' → logprob: -7.396477222442627
    7. 'space' → logprob: -8.646476745605469
    8. 'v' → logprob: -9.396476745605469
    9. ' first' → logprob: -11.271476745605469
    10. ')' → logprob: -11.771476745605469

Token 2369: ' plane' (ID: 16499)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5971208810806274
    2. 'self' → logprob: -0.9721208810806274
    3. ' self' → logprob: -3.347120761871338
    4. ' around' → logprob: -4.472120761871338
    5. '.' → logprob: -5.347120761871338
    6. '(self' → logprob: -5.972120761871338
    7. ')' → logprob: -5.972120761871338
    8. 'around' → logprob: -6.097120761871338
    9. ',' → logprob: -6.222120761871338
    10. '.
' → logprob: -6.347120761871338

Token 2370: ',' (ID: 11)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.07449904084205627
    2. 'self' → logprob: -2.6994991302490234
    3. ' self' → logprob: -5.699499130249023
    4. '.' → logprob: -8.324499130249023
    5. ',' → logprob: -8.574499130249023
    6. '   ' → logprob: -9.199499130249023
    7. '        
' → logprob: -9.324499130249023
    8. '```' → logprob: -9.449499130249023
    9. ')' → logprob: -9.574499130249023
    10. '#' → logprob: -9.574499130249023

Token 2371: ' so' (ID: 813)
  Prédit: ' so'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' so' → logprob: -0.7988049983978271
    2. 'self' → logprob: -1.1738049983978271
    3. 'so' → logprob: -1.9238049983978271
    4. ' self' → logprob: -3.548804998397827
    5. '       ' → logprob: -3.673804998397827
    6. ')' → logprob: -4.923805236816406
    7. 'starting' → logprob: -5.048805236816406
    8. ' and' → logprob: -5.548805236816406
    9. 'result' → logprob: -5.923805236816406
    10. ' starting' → logprob: -6.423805236816406

Token 2372: ' rotation' (ID: 23769)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.012432659976184368
    2. ' self' → logprob: -5.13743257522583
    3. '       ' → logprob: -5.51243257522583
    4. 'the' → logprob: -7.13743257522583
    5. 'direction' → logprob: -7.76243257522583
    6. '
' → logprob: -8.387433052062988
    7. 'v' → logprob: -8.512433052062988
    8. 'sign' → logprob: -8.637433052062988
    9. 'angle' → logprob: -9.262433052062988
    10. ' direction' → logprob: -9.512433052062988

Token 2373: ' axis' (ID: 16300)
  Prédit: '_direction'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_direction' → logprob: -0.37487009167671204
    2. '_axis' → logprob: -1.9998700618743896
    3. '_dir' → logprob: -2.3748700618743896
    4. '_angle' → logprob: -2.8748700618743896
    5. '_sign' → logprob: -5.124870300292969
    6. '_deg' → logprob: -5.249870300292969
    7. 'direction' → logprob: -5.624870300292969
    8. '=' → logprob: -5.999870300292969
    9. '_vector' → logprob: -6.249870300292969
    10. 'around' → logprob: -6.624870300292969

Token 2374: ' is' (ID: 382)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.03445638343691826
    2. ' =' → logprob: -3.534456491470337
    3. ' is' → logprob: -5.409456253051758
    4. '=
' → logprob: -9.284456253051758
    5. ')' → logprob: -10.034456253051758
    6. 'is' → logprob: -10.159456253051758
    7. ',' → logprob: -11.534456253051758
    8. '=self' → logprob: -11.909456253051758
    9. ' =
' → logprob: -12.409456253051758
    10. '.' → logprob: -12.409456253051758

Token 2375: ' normal' (ID: 6078)
  Prédit: 'normal'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'normal' → logprob: -0.001171056181192398
    2. ' normal' → logprob: -6.751171112060547
    3. '   ' → logprob: -14.751171112060547
    4. '(normal' → logprob: -15.251171112060547
    5. 'normalized' → logprob: -17.001171112060547
    6. '-normal' → logprob: -17.626171112060547
    7. '_normal' → logprob: -17.876171112060547
    8. '.normal' → logprob: -17.876171112060547
    9. '    
' → logprob: -18.251171112060547
    10. 'ormal' → logprob: -18.501171112060547

Token 2376: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.42190849781036377
    2. ')' → logprob: -1.7969084978103638
    3. '.' → logprob: -1.9219084978103638
    4. ',' → logprob: -4.546908378601074
    5. ':' → logprob: -4.921908378601074
    6. '   ' → logprob: -6.171908378601074
    7. ' around' → logprob: -6.296908378601074
    8. '```' → logprob: -6.296908378601074
    9. '):' → logprob: -6.671908378601074
    10. 'self' → logprob: -6.796908378601074

Token 2377: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.02862999401986599
    2. 'self' → logprob: -3.903630018234253
    3. ')' → logprob: -5.028629779815674
    4. '.' → logprob: -7.403629779815674
    5. ' self' → logprob: -7.778629779815674
    6. ',' → logprob: -8.903630256652832
    7. '   ' → logprob: -9.028630256652832
    8. '#' → logprob: -10.028630256652832
    9. ')
' → logprob: -10.028630256652832
    10. 'v' → logprob: -10.278630256652832

Token 2378: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.030758647248148918
    2. '       ' → logprob: -3.5307586193084717
    3. '#' → logprob: -8.15575885772705
    4. 'rot' → logprob: -8.28075885772705
    5. ' self' → logprob: -8.65575885772705
    6. 'v' → logprob: -9.65575885772705
    7. 'direction' → logprob: -9.78075885772705
    8. 'dir' → logprob: -10.40575885772705
    9. 'import' → logprob: -10.53075885772705
    10. 'vec' → logprob: -10.65575885772705

Token 2379: '.initial' (ID: 58290)
  Prédit: '.initial'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.initial' → logprob: -0.237332284450531
    2. '.direction' → logprob: -1.7373323440551758
    3. '.w' → logprob: -3.737332344055176
    4. '.vector' → logprob: -5.112332344055176
    5. '.dir' → logprob: -6.362332344055176
    6. '.current' → logprob: -6.362332344055176
    7. '.first' → logprob: -7.237332344055176
    8. '.' → logprob: -7.487332344055176
    9. '.start' → logprob: -9.237332344055176
    10. '.v' → logprob: -9.362332344055176

Token 2380: '_direction' (ID: 64332)
  Prédit: '_direction'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_direction' → logprob: -0.000916935910936445
    2. '_dir' → logprob: -7.500916957855225
    3. '_vector' → logprob: -8.000916481018066
    4. 'direction' → logprob: -11.125916481018066
    5. '_angle' → logprob: -12.500916481018066
    6. '_' → logprob: -13.125916481018066
    7. '_d' → logprob: -13.125916481018066
    8. 'Direction' → logprob: -13.250916481018066
    9. '_vec' → logprob: -13.375916481018066
    10. 'vector' → logprob: -14.125916481018066

Token 2381: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.03808223456144333
    2. '=' → logprob: -3.2880821228027344
    3. ')' → logprob: -11.038082122802734
    4. ':' → logprob: -11.788082122802734
    5. '_' → logprob: -12.038082122802734
    6. ' ' → logprob: -12.913082122802734
    7. ',' → logprob: -13.413082122802734
    8. 's' → logprob: -13.413082122802734
    9. '   ' → logprob: -13.913082122802734
    10. '[' → logprob: -14.413082122802734

Token 2382: ' tetra' (ID: 176775)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.028769686818122864
    2. 'vector' → logprob: -3.9037697315216064
    3. ' self' → logprob: -4.903769493103027
    4. ' vector' → logprob: -7.903769493103027
    5. 'T' → logprob: -8.528769493103027
    6. '   ' → logprob: -9.403769493103027
    7. 'tet' → logprob: -9.653769493103027
    8. '       ' → logprob: -10.528769493103027
    9. 't' → logprob: -11.778769493103027
    10. '           ' → logprob: -12.403769493103027

Token 2383: '.vector' (ID: 104563)
  Prédit: '.face'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.face' → logprob: -0.10233963280916214
    2. '.vector' → logprob: -2.352339744567871
    3. '.' → logprob: -7.227339744567871
    4. ' .' → logprob: -7.852339744567871
    5. '   ' → logprob: -8.852339744567871
    6. '.first' → logprob: -9.227339744567871
    7. '.faces' → logprob: -9.477339744567871
    8. '.get' → logprob: -9.477339744567871
    9. '.
' → logprob: -9.602339744567871
    10. '._' → logprob: -9.727339744567871

Token 2384: '_rotate' (ID: 151095)
  Prédit: '_rotate'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_rotate' → logprob: -2.339278580620885e-06
    2. '_rotation' → logprob: -13.875001907348633
    3. 'Rotate' → logprob: -15.125001907348633
    4. '_' → logprob: -15.250001907348633
    5. '_direction' → logprob: -15.875001907348633
    6. 'rotate' → logprob: -16.000001907348633
    7. '_raise' → logprob: -16.125001907348633
    8. '_rot' → logprob: -16.375001907348633
    9. '_continue' → logprob: -16.625001907348633
    10. '```' → logprob: -16.750001907348633

Token 2385: '_' (ID: 62)
  Prédit: '_'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -7.107425062713446e-06
    2. 'around' → logprob: -12.000006675720215
    3. 'Around' → logprob: -14.875006675720215
    4. '`' → logprob: -15.375006675720215
    5. '```' → logprob: -15.875006675720215
    6. '_ar' → logprob: -17.37500762939453
    7. '[' → logprob: -17.50000762939453
    8. 'v' → logprob: -17.75000762939453
    9. '(v' → logprob: -17.75000762939453
    10. '(' → logprob: -17.75000762939453

Token 2386: 'around' (ID: 42235)
  Prédit: 'around'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'around' → logprob: -0.3869575262069702
    2. '_' → logprob: -1.1369575262069702
    3. 'Around' → logprob: -9.636957168579102
    4. '_axis' → logprob: -12.136957168579102
    5. '```' → logprob: -12.511957168579102
    6. ' around' → logprob: -12.636957168579102
    7. '_angle' → logprob: -13.011957168579102
    8. '-around' → logprob: -13.386957168579102
    9. '_about' → logprob: -13.886957168579102
    10. '_vector' → logprob: -13.886957168579102

Token 2387: '_axis' (ID: 50852)
  Prédit: '_axis'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_axis' → logprob: -0.0004897649050690234
    2. '_' → logprob: -8.000490188598633
    3. 'axis' → logprob: -8.875490188598633
    4. '_angle' → logprob: -11.750490188598633
    5. '_vector' → logprob: -12.375490188598633
    6. '(axis' → logprob: -13.750490188598633
    7. '_axes' → logprob: -15.000490188598633
    8. 'vector' → logprob: -15.375490188598633
    9. 'Axis' → logprob: -15.500490188598633
    10. '```' → logprob: -15.875490188598633

Token 2388: '(vec' (ID: 57650)
  Prédit: '(vec'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(vec' → logprob: -0.0015284325927495956
    2. '(' → logprob: -6.626528263092041
    3. '(
' → logprob: -8.7515287399292
    4. '(vector' → logprob: -11.0015287399292
    5. ' (' → logprob: -11.7515287399292
    6. 'vec' → logprob: -11.8765287399292
    7. '(v' → logprob: -12.0015287399292
    8. '(tuple' → logprob: -12.5015287399292
    9. '(Vector' → logprob: -14.2515287399292
    10. '(self' → logprob: -14.3765287399292

Token 2389: 'AX' (ID: 5202)
  Prédit: 'AX'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'AX' → logprob: -5.860340752406046e-05
    2. '(' → logprob: -9.8750581741333
    3. '_AX' → logprob: -12.5000581741333
    4. '(self' → logprob: -13.1250581741333
    5. '   ' → logprob: -15.3750581741333
    6. 'A' → logprob: -15.5000581741333
    7. 'AXB' → logprob: -15.8750581741333
    8. '_ax' → logprob: -16.125059127807617
    9. 'ax' → logprob: -16.250059127807617
    10. '(ax' → logprob: -16.250059127807617

Token 2390: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.000330220878822729
    2. ' ,' → logprob: -8.625329971313477
    3. ',self' → logprob: -9.625329971313477
    4. ',
' → logprob: -10.375329971313477
    5. '           ' → logprob: -11.375329971313477
    6. ',n' → logprob: -11.750329971313477
    7. 'self' → logprob: -12.000329971313477
    8. '(' → logprob: -12.125329971313477
    9. '(normal' → logprob: -12.125329971313477
    10. '       ' → logprob: -12.250329971313477

Token 2391: ' normal' (ID: 6078)
  Prédit: 'normal'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'normal' → logprob: -0.1602325439453125
    2. ' normal' → logprob: -1.9102325439453125
    3. '(normal' → logprob: -11.785232543945312
    4. '_normal' → logprob: -14.660232543945312
    5. '.normal' → logprob: -15.660232543945312
    6. '   ' → logprob: -16.785232543945312
    7. 'normalized' → logprob: -17.410232543945312
    8. 'Normal' → logprob: -17.535232543945312
    9. '    ' → logprob: -17.785232543945312
    10. ')' → logprob: -17.910232543945312

Token 2392: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.3902033970225602e-05
    2. ' ,' → logprob: -11.375014305114746
    3. ')' → logprob: -14.375014305114746
    4. ',
' → logprob: -14.625014305114746
    5. ',self' → logprob: -14.750014305114746
    6. '<|end|>' → logprob: -15.250014305114746
    7. '‌,' → logprob: -15.375014305114746
    8. '   ' → logprob: -16.12501335144043
    9. 'self' → logprob: -16.62501335144043
    10. '(' → logprob: -17.00001335144043

Token 2393: ' angle' (ID: 16538)
  Prédit: ' self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.4953174591064453
    2. 'self' → logprob: -0.9953174591064453
    3. 'angle' → logprob: -4.495317459106445
    4. ' angle' → logprob: -4.620317459106445
    5. ' ' → logprob: -13.120317459106445
    6. '            ' → logprob: -14.620317459106445
    7. '(angle' → logprob: -14.620317459106445
    8. ' ' → logprob: -14.745317459106445
    9. '                    ' → logprob: -14.995317459106445
    10. '                ' → logprob: -15.120317459106445

Token 2394: '_deg' (ID: 144310)
  Prédit: '_deg'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_deg' → logprob: -0.002856470411643386
    2. ')' → logprob: -6.127856254577637
    3. '_' → logprob: -8.127856254577637
    4. ')_' → logprob: -9.252856254577637
    5. ''_' → logprob: -10.002856254577637
    6. '_degree' → logprob: -10.377856254577637
    7. 'self' → logprob: -10.877856254577637
    8. '90' → logprob: -11.002856254577637
    9. '')' → logprob: -11.127856254577637
    10. '[' → logprob: -11.627856254577637

Token 2395: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -4.143808109802194e-05
    2. '       ' → logprob: -10.250041007995605
    3. ')
' → logprob: -12.375041007995605
    4. ' )' → logprob: -13.875041007995605
    5. '   ' → logprob: -14.375041007995605
    6. '           ' → logprob: -16.500041961669922
    7. '),' → logprob: -17.000041961669922
    8. ')return' → logprob: -17.000041961669922
    9. '[' → logprob: -17.125041961669922
    10. ')`' → logprob: -17.250041961669922

Token 2396: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 2397: ' #' (ID: 1069)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 2398: ' Normalize' (ID: 155762)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 2399: ' direction' (ID: 9262)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0033393139019608498
    2. '(self' → logprob: -6.3783392906188965
    3. ' self' → logprob: -6.6283392906188965
    4. '       ' → logprob: -8.128339767456055
    5. '(' → logprob: -12.003339767456055
    6. '=self' → logprob: -12.628339767456055
    7. ' =' → logprob: -12.878339767456055
    8. '=' → logprob: -13.128339767456055
    9. '_self' → logprob: -13.878339767456055
    10. '   ' → logprob: -14.128339767456055

Token 2400: ' projected' (ID: 49179)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.06475385278463364
    2. '=' → logprob: -3.064753770828247
    3. ' self' → logprob: -5.189754009246826
    4. ' =' → logprob: -5.564754009246826
    5. '(self' → logprob: -5.939754009246826
    6. '       ' → logprob: -5.939754009246826
    7. '=self' → logprob: -7.064754009246826
    8. ')' → logprob: -9.189753532409668
    9. '```' → logprob: -9.439753532409668
    10. '<|end|>' → logprob: -9.814753532409668

Token 2401: ' in' (ID: 306)
  Prédit: 'onto'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'onto' → logprob: -0.4939189851284027
    2. 'on' → logprob: -1.618919014930725
    3. '(self' → logprob: -2.6189188957214355
    4. 'self' → logprob: -2.8689188957214355
    5. ' onto' → logprob: -3.1189188957214355
    6. '_on' → logprob: -4.9939188957214355
    7. ' on' → logprob: -5.8689188957214355
    8. 'to' → logprob: -5.9939188957214355
    9. '_' → logprob: -6.3689188957214355
    10. '   ' → logprob: -7.2439188957214355

Token 2402: ' face' (ID: 4950)
  Prédit: 'tet'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'tet' → logprob: -0.22153086960315704
    2. 'self' → logprob: -2.7215309143066406
    3. 'the' → logprob: -2.7215309143066406
    4. 'face' → logprob: -3.3465309143066406
    5. '#' → logprob: -4.846530914306641
    6. 't' → logprob: -4.971530914306641
    7. 'first' → logprob: -5.471530914306641
    8. 'plane' → logprob: -5.471530914306641
    9. ' tetra' → logprob: -5.721530914306641
    10. 'u' → logprob: -6.471530914306641

Token 2403: ' plane' (ID: 16499)
  Prédit: 'plane'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'plane' → logprob: -0.1346026211977005
    2. '_plane' → logprob: -2.5096025466918945
    3. ' plane' → logprob: -3.1346025466918945
    4. '   ' → logprob: -7.6346025466918945
    5. 'plan' → logprob: -8.634602546691895
    6. '
' → logprob: -9.634602546691895
    7. ' (' → logprob: -9.884602546691895
    8. '(' → logprob: -10.009602546691895
    9. '_' → logprob: -10.134602546691895
    10. '_xy' → logprob: -10.259602546691895

Token 2404: ' (' (ID: 350)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.553855299949646
    2. '       ' → logprob: -1.178855299949646
    3. 'v' → logprob: -3.4288554191589355
    4. ' self' → logprob: -3.5538554191589355
    5. 'proj' → logprob: -4.0538554191589355
    6. '#' → logprob: -5.1788554191589355
    7. ',' → logprob: -5.3038554191589355
    8. '
' → logprob: -5.3038554191589355
    9. ' =' → logprob: -5.8038554191589355
    10. 'project' → logprob: -5.9288554191589355

Token 2405: 'should' (ID: 10618)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.2771121561527252
    2. 'self' → logprob: -1.7771121263504028
    3. ')
' → logprob: -4.277112007141113
    4. 'True' → logprob: -4.402112007141113
    5. 'normalize' → logprob: -4.402112007141113
    6. 'u' → logprob: -4.652112007141113
    7. '=' → logprob: -5.527112007141113
    8. ' )' → logprob: -5.652112007141113
    9. 'v' → logprob: -6.527112007141113
    10. 'xy' → logprob: -6.652112007141113

Token 2406: ' be' (ID: 413)
  Prédit: 'be'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'be' → logprob: -0.12905950844287872
    2. ' be' → logprob: -2.6290595531463623
    3. '=' → logprob: -3.5040595531463623
    4. ')' → logprob: -5.004059314727783
    5. 'already' → logprob: -5.004059314727783
    6. 'remain' → logprob: -6.129059314727783
    7. 'have' → logprob: -7.254059314727783
    8. ' already' → logprob: -7.504059314727783
    9. 'not' → logprob: -7.629059314727783
    10. ' =' → logprob: -7.629059314727783

Token 2407: ' unit' (ID: 7670)
  Prédit: 'normalize'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'normalize' → logprob: -0.28419893980026245
    2. 'True' → logprob: -1.7841989994049072
    3. ' True' → logprob: -3.9091989994049072
    4. 'self' → logprob: -4.034198760986328
    5. 'normalized' → logprob: -4.284198760986328
    6. 'length' → logprob: -5.159198760986328
    7. 'already' → logprob: -5.659198760986328
    8. 'normal' → logprob: -5.784198760986328
    9. ' normalize' → logprob: -5.784198760986328
    10. 'close' → logprob: -6.909198760986328

Token 2408: ' vector' (ID: 9727)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.10147105902433395
    2. 'vector' → logprob: -3.101470947265625
    3. ' vector' → logprob: -3.601470947265625
    4. ' )' → logprob: -4.101470947265625
    5. '_vector' → logprob: -6.101470947265625
    6. '       ' → logprob: -6.851470947265625
    7. ')
' → logprob: -7.226470947265625
    8. '_' → logprob: -7.476470947265625
    9. ' (' → logprob: -7.601470947265625
    10. '(' → logprob: -7.976470947265625

Token 2409: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.004247454460710287
    2. ' )' → logprob: -6.629247665405273
    3. ')
' → logprob: -6.754247665405273
    4. ').' → logprob: -7.754247665405273
    5. '       ' → logprob: -8.129247665405273
    6. '()' → logprob: -8.379247665405273
    7. '):
' → logprob: -8.754247665405273
    8. ',' → logprob: -8.879247665405273
    9. '())' → logprob: -9.004247665405273
    10. '):' → logprob: -9.379247665405273

Token 2410: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 2411: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.06273478269577026
    2. ' self' → logprob: -2.812734842300415
    3. '       ' → logprob: -7.312734603881836
    4. ')' → logprob: -10.562734603881836
    5. 'v' → logprob: -10.562734603881836
    6. '#' → logprob: -11.437734603881836
    7. '```' → logprob: -11.812734603881836
    8. '	self' → logprob: -12.062734603881836
    9. '   ' → logprob: -13.062734603881836
    10. ' ' → logprob: -13.562734603881836

Token 2412: '.initial' (ID: 58290)
  Prédit: '.initial'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.initial' → logprob: -0.0033838648814707994
    2. 'initial' → logprob: -5.878383636474609
    3. '=' → logprob: -8.25338363647461
    4. '.' → logprob: -9.25338363647461
    5. ' =' → logprob: -9.37838363647461
    6. '_initial' → logprob: -10.50338363647461
    7. '   ' → logprob: -10.75338363647461
    8. 'self' → logprob: -11.62838363647461
    9. 'Initial' → logprob: -12.00338363647461
    10. 'INITIAL' → logprob: -12.12838363647461

Token 2413: '_direction' (ID: 64332)
  Prédit: '_direction'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_direction' → logprob: -0.00011784763046307489
    2. 'direction' → logprob: -9.500118255615234
    3. 'Direction' → logprob: -10.375118255615234
    4. '_DIRECTION' → logprob: -13.125118255615234
    5. '=' → logprob: -13.250118255615234
    6. '_' → logprob: -13.625118255615234
    7. '
' → logprob: -13.875118255615234
    8. ' =' → logprob: -14.000118255615234
    9. '`' → logprob: -14.125118255615234
    10. '_d' → logprob: -14.375118255615234

Token 2414: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.023246292024850845
    2. ' =' → logprob: -3.7732462882995605
    3. ')' → logprob: -15.023246765136719
    4. '=self' → logprob: -15.773246765136719
    5. ',' → logprob: -15.898246765136719
    6. '   ' → logprob: -15.898246765136719
    7. '.' → logprob: -17.39824676513672
    8. '=
' → logprob: -17.39824676513672
    9. ' ' → logprob: -17.77324676513672
    10. '    ' → logprob: -17.89824676513672

Token 2415: ' normalize' (ID: 44464)
  Prédit: 'normalize'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'normalize' → logprob: -2.15310683415737e-05
    2. ' normalize' → logprob: -10.750021934509277
    3. 'normal' → logprob: -18.00002098083496
    4. 'tuple' → logprob: -18.37502098083496
    5. '   ' → logprob: -18.62502098083496
    6. 'normalized' → logprob: -19.00002098083496
    7. 'self' → logprob: -20.25002098083496
    8. ' ' → logprob: -20.37502098083496
    9. '.normalize' → logprob: -20.87502098083496
    10. '(normal' → logprob: -20.87502098083496

Token 2416: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.00015038289711810648
    2. 'self' → logprob: -8.875150680541992
    3. '(' → logprob: -11.500150680541992
    4. ' self' → logprob: -15.250150680541992
    5. '(tuple' → logprob: -16.875150680541992
    6. '(
' → logprob: -17.000150680541992
    7. '	self' → logprob: -17.125150680541992
    8. ' (' → logprob: -17.125150680541992
    9. 'vector' → logprob: -18.125150680541992
    10. '(vector' → logprob: -18.375150680541992

Token 2417: '.initial' (ID: 58290)
  Prédit: '.initial'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.initial' → logprob: -0.0005667338264174759
    2. 'initial' → logprob: -7.6255669593811035
    3. '.user' → logprob: -10.250566482543945
    4. '.' → logprob: -11.625566482543945
    5. 'self' → logprob: -11.750566482543945
    6. ' .' → logprob: -12.500566482543945
    7. ').' → logprob: -12.625566482543945
    8. '.self' → logprob: -12.625566482543945
    9. '.t' → logprob: -13.125566482543945
    10. 'Initial' → logprob: -13.375566482543945

Token 2418: '_direction' (ID: 64332)
  Prédit: '_direction'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_direction' → logprob: -1.3856492842023727e-06
    2. 'direction' → logprob: -13.750000953674316
    3. 'Direction' → logprob: -15.625000953674316
    4. '_vector' → logprob: -15.625000953674316
    5. '_DIRECTION' → logprob: -17.375001907348633
    6. '_directory' → logprob: -18.375001907348633
    7. '_direct' → logprob: -18.750001907348633
    8. '       ' → logprob: -19.125001907348633
    9. '_position' → logprob: -20.375001907348633
    10. '   ' → logprob: -20.375001907348633

Token 2419: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -2.2127087504486553e-05
    2. ' )' → logprob: -11.000021934509277
    3. '   ' → logprob: -12.750021934509277
    4. '       ' → logprob: -13.750021934509277
    5. ')
' → logprob: -13.750021934509277
    6. ' ' → logprob: -15.625021934509277
    7. '	' → logprob: -16.375022888183594
    8. '  ' → logprob: -17.750022888183594
    9. '())' → logprob: -17.875022888183594
    10. ').' → logprob: -18.125022888183594

Token 2420: '#' (ID: 2)
  Prédit: '#'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.9453447461128235
    2. '<|end|>' → logprob: -0.9453447461128235
    3. 'class' → logprob: -1.9453446865081787
    4. '```' → logprob: -2.8203446865081787
    5. '<|end|>' → logprob: -4.070344924926758
    6. 'def' → logprob: -6.695344924926758
    7. '
' → logprob: -6.945344924926758
    8. ')' → logprob: -7.695344924926758
    9. ' class' → logprob: -8.320344924926758
    10. '``' → logprob: -9.320344924926758

Token 2421: ' Worm' (ID: 119021)
  Prédit: 'class'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'class' → logprob: -0.06221471726894379
    2. '#' → logprob: -2.8122146129608154
    3. '```' → logprob: -8.687214851379395
    4. 'def' → logprob: -9.687214851379395
    5. ' class' → logprob: -11.812214851379395
    6. '
' → logprob: -13.062214851379395
    7. 'import' → logprob: -13.312214851379395
    8. '<|end|>' → logprob: -13.937214851379395
    9. '@dat' → logprob: -14.187214851379395
    10. '``' → logprob: -14.687214851379395

Token 2422: ' crawl' (ID: 73056)
  Prédit: 'class'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'class' → logprob: -0.006728279870003462
    2. 'Path' → logprob: -5.006728172302246
    3. 'Direction' → logprob: -11.631728172302246
    4. 'Class' → logprob: -13.381728172302246
    5. ' class' → logprob: -13.756728172302246
    6. 'path' → logprob: -14.381728172302246
    7. '#' → logprob: -15.381728172302246
    8. '_path' → logprob: -15.506728172302246
    9. '```' → logprob: -15.506728172302246
    10. 'Position' → logprob: -16.506729125976562

Token 2423: ' simulation' (ID: 30937)
  Prédit: 'class'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'class' → logprob: -1.2664456789934775e-06
    2. '#' → logprob: -14.625000953674316
    3. ' class' → logprob: -14.875000953674316
    4. 'import' → logprob: -15.625000953674316
    5. '
' → logprob: -16.000001907348633
    6. 'from' → logprob: -16.375001907348633
    7. '```' → logprob: -17.375001907348633
    8. 'abstract' → logprob: -18.125001907348633
    9. '@dat' → logprob: -18.250001907348633
    10. 'def' → logprob: -18.375001907348633

Token 2424: ' on' (ID: 402)
  Prédit: 'class'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'class' → logprob: -1.5048530030981055e-06
    2. '#' → logprob: -14.250001907348633
    3. '
' → logprob: -14.750001907348633
    4. 'import' → logprob: -15.250001907348633
    5. ' class' → logprob: -15.875001907348633
    6. 'from' → logprob: -16.875001907348633
    7. 'def' → logprob: -17.000001907348633
    8. '@dat' → logprob: -19.000001907348633
    9. '```' → logprob: -19.500001907348633
    10. '<class' → logprob: -19.625001907348633

Token 2425: ' the' (ID: 290)
  Prédit: 'the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'the' → logprob: -0.07689987868070602
    2. 'T' → logprob: -3.951899766921997
    3. 'a' → logprob: -4.201900005340576
    4. 'faces' → logprob: -4.326900005340576
    5. 'class' → logprob: -4.701900005340576
    6. '#' → logprob: -5.576900005340576
    7. 'face' → logprob: -5.826900005340576
    8. ' the' → logprob: -5.951900005340576
    9. 'path' → logprob: -6.201900005340576
    10. 'tet' → logprob: -6.326900005340576

Token 2426: ' tetra' (ID: 176775)
  Prédit: 'tet'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tet' → logprob: -0.36002445220947266
    2. 'T' → logprob: -1.9850244522094727
    3. 'surface' → logprob: -2.7350244522094727
    4. 'class' → logprob: -3.4850244522094727
    5. '#' → logprob: -3.4850244522094727
    6. 'regular' → logprob: -3.7350244522094727
    7. 'face' → logprob: -5.110024452209473
    8. 'faces' → logprob: -5.985024452209473
    9. ' tetra' → logprob: -6.610024452209473
    10. 'edges' → logprob: -6.860024452209473

Token 2427: 'hedron' (ID: 144037)
  Prédit: 'class'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'class' → logprob: -0.3873372972011566
    2. 'hedron' → logprob: -1.137337327003479
    3. '#' → logprob: -8.137337684631348
    4. 'geometry' → logprob: -9.387337684631348
    5. '
' → logprob: -9.887337684631348
    6. 'Geometry' → logprob: -11.262337684631348
    7. '```' → logprob: -11.262337684631348
    8. '#
' → logprob: -12.762337684631348
    9. 'from' → logprob: -13.512337684631348
    10. ' class' → logprob: -13.637337684631348

Token 2428: ' surface' (ID: 9753)
  Prédit: 'class'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'class' → logprob: -1.1279553291387856e-05
    2. '
' → logprob: -11.625011444091797
    3. 'import' → logprob: -13.625011444091797
    4. ' class' → logprob: -14.500011444091797
    5. '#' → logprob: -15.000011444091797
    6. '```' → logprob: -16.000011444091797
    7. 'from' → logprob: -16.250011444091797
    8. '"class' → logprob: -18.375011444091797
    9. '@dat' → logprob: -18.500011444091797
    10. '<class' → logprob: -18.750011444091797

Token 2429: '
' (ID: 198)
  Prédit: 'class'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'class' → logprob: -1.759734732331708e-05
    2. '
' → logprob: -11.625017166137695
    3. '#' → logprob: -12.250017166137695
    4. 'import' → logprob: -12.625017166137695
    5. ' class' → logprob: -15.250017166137695
    6. 'from' → logprob: -15.750017166137695
    7. '```' → logprob: -16.625017166137695
    8. '@dat' → logprob: -18.000017166137695
    9. 'def' → logprob: -18.250017166137695
    10. '    
' → logprob: -18.750017166137695

Token 2430: 'class' (ID: 1444)
  Prédit: 'class'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'class' → logprob: -1.9361264946837764e-07
    2. '#' → logprob: -16.5
    3. ' class' → logprob: -18.0
    4. '
' → logprob: -18.375
    5. '```' → logprob: -18.625
    6. 'from' → logprob: -19.25
    7. 'import' → logprob: -19.625
    8. '@dat' → logprob: -20.875
    9. '"class' → logprob: -21.125
    10. '<class' → logprob: -21.625

Token 2431: ' Worm' (ID: 119021)
  Prédit: 'W'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'W' → logprob: -0.012865711003541946
    2. ' Worm' → logprob: -4.8878655433654785
    3. 'T' → logprob: -5.3878655433654785
    4. 'C' → logprob: -8.012866020202637
    5. 'Crawler' → logprob: -8.887866020202637
    6. 'Path' → logprob: -9.762866020202637
    7. 'Walk' → logprob: -10.262866020202637
    8. '_W' → logprob: -10.762866020202637
    9. 'Simple' → logprob: -10.762866020202637
    10. 'Sim' → logprob: -10.887866020202637

Token 2432: 'Simulator' (ID: 120745)
  Prédit: 'Path'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Path' → logprob: -0.01524103432893753
    2. 'C' → logprob: -4.5152411460876465
    3. ':' → logprob: -6.2652411460876465
    4. 'Crawler' → logprob: -6.5152411460876465
    5. '(' → logprob: -8.515240669250488
    6. 'Trajectory' → logprob: -9.390240669250488
    7. ':
' → logprob: -9.890240669250488
    8. '(
' → logprob: -10.015240669250488
    9. 'Simulation' → logprob: -10.015240669250488
    10. '   ' → logprob: -10.015240669250488

Token 2433: '(W' (ID: 26031)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0022601638920605183
    2. ':
' → logprob: -6.127260208129883
    3. '(W' → logprob: -9.752260208129883
    4. '(' → logprob: -11.627260208129883
    5. '```' → logprob: -13.127260208129883
    6. 'W' → logprob: -13.377260208129883
    7. ':

' → logprob: -13.752260208129883
    8. '):' → logprob: -14.127260208129883
    9. ':def' → logprob: -14.377260208129883
    10. '{' → logprob: -14.627260208129883

Token 2434: 'orm' (ID: 551)
  Prédit: 'orm'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'orm' → logprob: -5.6934557505883276e-05
    2. 'ormat' → logprob: -10.125057220458984
    3. 'o' → logprob: -11.375057220458984
    4. '```' → logprob: -13.375057220458984
    5. 'orma' → logprob: -14.375057220458984
    6. 'W' → logprob: -15.000057220458984
    7. 'ormal' → logprob: -15.000057220458984
    8. 'orld' → logprob: -15.125057220458984
    9. '``' → logprob: -15.125057220458984
    10. 'a' → logprob: -15.375057220458984

Token 2435: 'Path' (ID: 2619)
  Prédit: 'Path'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Path' → logprob: -0.16024331748485565
    2. 'Direction' → logprob: -1.910243272781372
    3. '   ' → logprob: -12.160243034362793
    4. '	Path' → logprob: -12.535243034362793
    5. ' Path' → logprob: -13.410243034362793
    6. 'Simulator' → logprob: -13.785243034362793
    7. '<Path' → logprob: -13.910243034362793
    8. '
' → logprob: -14.160243034362793
    9. ')' → logprob: -14.535243034362793
    10. 'Crawler' → logprob: -14.535243034362793

Token 2436: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.6345548629760742
    2. '):' → logprob: -0.7595548629760742
    3. '):

' → logprob: -7.009554862976074
    4. '):
' → logprob: -7.509554862976074
    5. 'W' → logprob: -8.634554862976074
    6. '   ' → logprob: -9.259554862976074
    7. '(W' → logprob: -9.259554862976074
    8. ',' → logprob: -9.759554862976074
    9. ':' → logprob: -10.884554862976074
    10. ')' → logprob: -11.384554862976074

Token 2437: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00042507401667535305
    2. '```' → logprob: -8.625425338745117
    3. 'class' → logprob: -9.000425338745117
    4. '    
' → logprob: -9.750425338745117
    5. 'def' → logprob: -10.625425338745117
    6. '
' → logprob: -11.000425338745117
    7. ' def' → logprob: -11.125425338745117
    8. ' class' → logprob: -13.250425338745117
    9. 'indent' → logprob: -13.875425338745117
    10. '	def' → logprob: -14.250425338745117

Token 2438: ' def' (ID: 1056)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.13746102154254913
    2. 'def' (adapté à ' def') → logprob: -2.137460947036743
    3. ' def' → logprob: -4.637461185455322
    4. 'class' → logprob: -7.887461185455322
    5. '```' → logprob: -7.887461185455322
    6. '__' → logprob: -10.512460708618164
    7. '
' → logprob: -12.262460708618164
    8. ':' → logprob: -13.012460708618164
    9. ' __' → logprob: -13.012460708618164
    10. '    ' → logprob: -13.262460708618164

Token 2439: ' __' (ID: 2516)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.37673139572143555
    2. ' __' → logprob: -1.2517313957214355
    3. 'init' → logprob: -4.5017313957214355
    4. '```' → logprob: -4.7517313957214355
    5. 'def' → logprob: -5.3767313957214355
    6. '_init' → logprob: -6.0017313957214355
    7. '   ' → logprob: -7.7517313957214355
    8. ' def' → logprob: -8.626731872558594
    9. '
' → logprob: -9.126731872558594
    10. '___' → logprob: -9.376731872558594

Token 2440: 'init' (ID: 3287)
  Prédit: 'init'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: -3.8889261304575484e-06
    2. '   ' → logprob: -13.375003814697266
    3. '_init' → logprob: -13.875003814697266
    4. '```' → logprob: -14.375003814697266
    5. 'def' → logprob: -15.250003814697266
    6. ' init' → logprob: -15.625003814697266
    7. '_' → logprob: -15.875003814697266
    8. '  ' → logprob: -16.500003814697266
    9. '	init' → logprob: -17.250003814697266
    10. '
' → logprob: -17.375003814697266

Token 2441: '__(' (ID: 8241)
  Prédit: '__('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.01058695837855339
    2. '(self' → logprob: -4.760586738586426
    3. '__(
' → logprob: -6.885586738586426
    4. '(' → logprob: -7.385586738586426
    5. '__' → logprob: -8.385586738586426
    6. '_(' → logprob: -10.135586738586426
    7. ' (' → logprob: -10.385586738586426
    8. ',' → logprob: -11.510586738586426
    9. ')(' → logprob: -12.010586738586426
    10. '   ' → logprob: -12.385586738586426

Token 2442: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.00023727134976070374
    2. '       ' → logprob: -9.000237464904785
    3. ' self' → logprob: -9.625237464904785
    4. '   ' → logprob: -10.625237464904785
    5. ',' → logprob: -10.875237464904785
    6. '(self' → logprob: -13.125237464904785
    7. '
' → logprob: -14.125237464904785
    8. ',self' → logprob: -14.375237464904785
    9. '           ' → logprob: -15.125237464904785
    10. '	self' → logprob: -15.250237464904785

Token 2443: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.20514816045761108
    2. '(self' → logprob: -1.9551482200622559
    3. '__(' → logprob: -3.205148220062256
    4. '__,' → logprob: -6.080148220062256
    5. ' (' → logprob: -8.330147743225098
    6. 'self' → logprob: -8.455147743225098
    7. '__' → logprob: -8.955147743225098
    8. ',
' → logprob: -9.205147743225098
    9. '   ' → logprob: -9.580147743225098
    10. '(' → logprob: -9.705147743225098

Token 2444: ' tetra' (ID: 176775)
  Prédit: 'tet'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tet' → logprob: -0.05145203322172165
    2. ' tetra' → logprob: -3.0514519214630127
    3. 'self' → logprob: -6.426452159881592
    4. '   ' → logprob: -7.801452159881592
    5. 't' → logprob: -7.926452159881592
    6. 'geometry' → logprob: -8.676451683044434
    7. '       ' → logprob: -9.051451683044434
    8. 'worm' → logprob: -9.801451683044434
    9. ' self' → logprob: -10.926451683044434
    10. '               ' → logprob: -11.301451683044434

Token 2445: ':' (ID: 25)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.19277335703372955
    2. ':' → logprob: -2.5677733421325684
    3. '   ' → logprob: -2.9427733421325684
    4. '):
' → logprob: -3.6927733421325684
    5. 'hedron' → logprob: -4.692773342132568
    6. '       ' → logprob: -5.317773342132568
    7. '):' → logprob: -5.817773342132568
    8. 'tion' → logprob: -7.192773342132568
    9. 'on' → logprob: -7.942773342132568
    10. '    ' → logprob: -8.067773818969727

Token 2446: ' T' (ID: 353)
  Prédit: 'T'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'T' → logprob: -0.012584768235683441
    2. ' T' → logprob: -4.387584686279297
    3. ')' → logprob: -10.012584686279297
    4. '=T' → logprob: -11.762584686279297
    5. ' ' → logprob: -12.137584686279297
    6. '   ' → logprob: -12.512584686279297
    7. '	T' → logprob: -12.887584686279297
    8. ' ' → logprob: -13.137584686279297
    9. '    ' → logprob: -13.762584686279297
    10. ' )' → logprob: -13.887584686279297

Token 2447: 'etra' (ID: 72836)
  Prédit: 'etra'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'etra' → logprob: -0.00046177039621397853
    2. 'et' → logprob: -7.875461578369141
    3. '   ' → logprob: -10.25046157836914
    4. 'T' → logprob: -11.75046157836914
    5. '
' → logprob: -12.12546157836914
    6. 'etera' → logprob: -12.25046157836914
    7. ' tetra' → logprob: -12.37546157836914
    8. '  ' → logprob: -12.87546157836914
    9. 'eta' → logprob: -13.00046157836914
    10. '```' → logprob: -13.00046157836914

Token 2448: 'hedron' (ID: 144037)
  Prédit: 'hedron'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'hedron' → logprob: -0.0041750334203243256
    2. 'Geometry' → logprob: -5.504175186157227
    3. ',' → logprob: -10.754175186157227
    4. '   ' → logprob: -11.254175186157227
    5. 'geometry' → logprob: -11.379175186157227
    6. '.Geometry' → logprob: -11.379175186157227
    7. 'T' → logprob: -12.129175186157227
    8. 'hed' → logprob: -12.129175186157227
    9. '_geometry' → logprob: -12.129175186157227
    10. 'ion' → logprob: -13.004175186157227

Token 2449: 'Geometry' (ID: 30417)
  Prédit: 'Geometry'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Geometry' → logprob: -3.070975071750581e-05
    2. '   ' → logprob: -10.875030517578125
    3. '.Geometry' → logprob: -12.375030517578125
    4. ')' → logprob: -12.625030517578125
    5. ' Geometry' → logprob: -14.000030517578125
    6. ',' → logprob: -14.125030517578125
    7. '_geometry' → logprob: -14.500030517578125
    8. '       ' → logprob: -14.750030517578125
    9. '):
' → logprob: -15.125030517578125
    10. '  ' → logprob: -15.250030517578125

Token 2450: ',
' (ID: 412)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0029754415154457092
    2. ',
' → logprob: -6.6279754638671875
    3. '):
' → logprob: -6.6279754638671875
    4. '       ' → logprob: -8.627975463867188
    5. '   ' → logprob: -9.752975463867188
    6. ' ,' → logprob: -10.002975463867188
    7. '):' → logprob: -10.252975463867188
    8. '           ' → logprob: -13.877975463867188
    9. '               ' → logprob: -14.002975463867188
    10. '                ' → logprob: -14.002975463867188

Token 2451: '                ' (ID: 408)
  Prédit: '                '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                ' → logprob: -0.10060452669858932
    2. ' first' → logprob: -3.60060453414917
    3. 'first' → logprob: -3.72560453414917
    4. ' initial' → logprob: -4.22560453414917
    5. '                 ' → logprob: -4.85060453414917
    6. '   ' → logprob: -5.35060453414917
    7. 'initial' → logprob: -5.47560453414917
    8. ' start' → logprob: -5.85060453414917
    9. '               ' → logprob: -6.47560453414917
    10. '    ' → logprob: -6.60060453414917

Token 2452: ' first' (ID: 1577)
  Prédit: 'first'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'first' (adapté à ' first') → logprob: -0.764760434627533
    2. 'start' → logprob: -1.1397604942321777
    3. 'initial' → logprob: -2.1397604942321777
    4. 'direction' → logprob: -3.0147604942321777
    5. ' start' → logprob: -4.389760494232178
    6. 'worm' → logprob: -4.639760494232178
    7. ' initial' → logprob: -5.139760494232178
    8. ' first' → logprob: -5.139760494232178
    9. 'starting' → logprob: -5.389760494232178
    10. ' direction' → logprob: -5.514760494232178

Token 2453: '_edge' (ID: 43226)
  Prédit: '_edge'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_edge' → logprob: -0.002435354981571436
    2. '_direction' → logprob: -6.127435207366943
    3. 'Edge' → logprob: -9.252435684204102
    4. '_vertex' → logprob: -10.002435684204102
    5. 'edge' → logprob: -10.377435684204102
    6. '_angle' → logprob: -10.502435684204102
    7. '_face' → logprob: -11.627435684204102
    8. '_edges' → logprob: -11.752435684204102
    9. ')' → logprob: -12.127435684204102
    10. 'direction' → logprob: -12.252435684204102

Token 2454: '_str' (ID: 6182)
  Prédit: '_str'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_str' → logprob: -0.22660167515277863
    2. ':' → logprob: -2.3516016006469727
    3. ',' → logprob: -2.7266016006469727
    4. '=' → logprob: -3.3516016006469727
    5. '   ' → logprob: -6.726601600646973
    6. 'str' → logprob: -6.851601600646973
    7. '='_' → logprob: -6.851601600646973
    8. ':str' → logprob: -7.101601600646973
    9. ')' → logprob: -7.851601600646973
    10. ' =' → logprob: -7.976601600646973

Token 2455: ':' (ID: 25)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.16816990077495575
    2. '=' → logprob: -1.9181698560714722
    3. '=',' → logprob: -5.668169975280762
    4. ':' → logprob: -6.293169975280762
    5. '=",' → logprob: -6.793169975280762
    6. '='' → logprob: -7.043169975280762
    7. '   ' → logprob: -8.793169975280762
    8. '                ' → logprob: -9.668169975280762
    9. '='',' → logprob: -9.793169975280762
    10. ' =' → logprob: -9.793169975280762

Token 2456: ' str' (ID: 989)
  Prédit: ' str'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' str' → logprob: -1.014441967010498
    2. ''' → logprob: -1.264441967010498
    3. 'str' → logprob: -1.764441967010498
    4. ' Vertex' → logprob: -2.639441967010498
    5. 'Vertex' → logprob: -3.139441967010498
    6. ' '' → logprob: -3.139441967010498
    7. 'first' → logprob: -4.889441967010498
    8. ' first' → logprob: -5.014441967010498
    9. ')' → logprob: -6.264441967010498
    10. '                ' → logprob: -6.764441967010498

Token 2457: ',
' (ID: 412)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.016833867877721786
    2. ',
' → logprob: -4.141833782196045
    3. '                ' → logprob: -7.266833782196045
    4. '=' → logprob: -10.141834259033203
    5. ',
' → logprob: -12.016834259033203
    6. '		        ' → logprob: -12.016834259033203
    7. ' ,' → logprob: -12.141834259033203
    8. '):
' → logprob: -12.266834259033203
    9. ':' → logprob: -12.516834259033203
    10. '               ' → logprob: -12.516834259033203

Token 2458: '                ' (ID: 408)
  Prédit: '                '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                ' → logprob: -0.23219533264636993
    2. '                 ' → logprob: -1.7321953773498535
    3. 'angle' → logprob: -3.7321953773498535
    4. '                                 ' → logprob: -6.4821953773498535
    5. '                    ' → logprob: -6.6071953773498535
    6. '                                ' → logprob: -6.9821953773498535
    7. '                     ' → logprob: -7.4821953773498535
    8. '                            ' → logprob: -7.9821953773498535
    9. '               ' → logprob: -8.107194900512695
    10. ' angle' → logprob: -8.107194900512695

Token 2459: ' angle' (ID: 16538)
  Prédit: 'angle'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'angle' (adapté à ' angle') → logprob: -0.015998588874936104
    2. '                ' → logprob: -4.765998363494873
    3. ' angle' → logprob: -5.890998363494873
    4. 'first' → logprob: -6.390998363494873
    5. 'initial' → logprob: -6.390998363494873
    6. '                 ' → logprob: -7.390998363494873
    7. '   ' → logprob: -8.640998840332031
    8. '               ' → logprob: -9.140998840332031
    9. 'start' → logprob: -9.640998840332031
    10. '                   ' → logprob: -10.515998840332031

Token 2460: '_deg' (ID: 144310)
  Prédit: '_deg'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_deg' → logprob: -0.007822033017873764
    2. '=_' → logprob: -6.007822036743164
    3. ')_' → logprob: -6.382822036743164
    4. '=' → logprob: -6.882822036743164
    5. ')' → logprob: -7.507822036743164
    6. '_degree' → logprob: -8.132822036743164
    7. '```' → logprob: -8.257822036743164
    8. ' _' → logprob: -8.507822036743164
    9. '):' → logprob: -8.882822036743164
    10. '_de' → logprob: -8.882822036743164

Token 2461: ':' (ID: 25)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.8442947268486023
    2. '):
' → logprob: -0.9692947268486023
    3. ':' → logprob: -1.844294786453247
    4. '=' → logprob: -3.969294786453247
    5. ',' → logprob: -4.344294548034668
    6. '   ' → logprob: -8.594294548034668
    7. '):
' → logprob: -8.719294548034668
    8. ',
' → logprob: -8.844294548034668
    9. ')' → logprob: -9.219294548034668
    10. ':int' → logprob: -9.844294548034668

Token 2462: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.0315377339720726
    2. ' int' → logprob: -3.6565377712249756
    3. 'float' → logprob: -6.2815375328063965
    4. '45' → logprob: -6.4065375328063965
    5. '30' → logprob: -7.2815375328063965
    6. '60' → logprob: -8.156538009643555
    7. '0' → logprob: -9.156538009643555
    8. '15' → logprob: -9.156538009643555
    9. ')' → logprob: -9.406538009643555
    10. '20' → logprob: -9.531538009643555

Token 2463: ',
' (ID: 412)
  Prédit: '):
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.04199506714940071
    2. ',' → logprob: -3.666995048522949
    3. '       ' → logprob: -4.791995048522949
    4. '   ' → logprob: -5.541995048522949
    5. '                ' → logprob: -6.041995048522949
    6. '):' → logprob: -7.541995048522949
    7. ',
' → logprob: -7.916995048522949
    8. '               ' → logprob: -10.54199504852295
    9. '           ' → logprob: -11.16699504852295
    10. '                    ' → logprob: -11.41699504852295

Token 2464: '                ' (ID: 408)
  Prédit: '                '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                ' → logprob: -0.0059470487758517265
    2. 'distance' → logprob: -6.005947113037109
    3. 'length' → logprob: -6.130947113037109
    4. ' length' → logprob: -7.630947113037109
    5. '               ' → logprob: -8.50594711303711
    6. 'start' → logprob: -8.75594711303711
    7. ' distance' → logprob: -9.13094711303711
    8. 'initial' → logprob: -9.63094711303711
    9. '       ' → logprob: -9.75594711303711
    10. '                 ' → logprob: -10.00594711303711

Token 2465: ' trail' (ID: 12761)
  Prédit: 'length'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'length' → logprob: -1.0388548374176025
    2. 'distance' → logprob: -1.5388548374176025
    3. 'steps' → logprob: -2.2888548374176025
    4. 'path' → logprob: -2.4138548374176025
    5. 'start' → logprob: -2.9138548374176025
    6. 'initial' → logprob: -3.0388548374176025
    7. 'max' → logprob: -3.1638548374176025
    8. ' length' → logprob: -4.038854598999023
    9. 'total' → logprob: -4.163854598999023
    10. 'step' → logprob: -4.288854598999023

Token 2466: '_length' (ID: 11514)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.24362492561340332
    2. '=[]' → logprob: -2.7436249256134033
    3. ':' → logprob: -2.9936249256134033
    4. '_length' → logprob: -3.2436249256134033
    5. ' =' → logprob: -3.9936249256134033
    6. '=[' → logprob: -4.493624687194824
    7. '):' → logprob: -4.993624687194824
    8. '_len' → logprob: -5.118624687194824
    9. ')' → logprob: -5.493624687194824
    10. '_size' → logprob: -6.368624687194824

Token 2467: ':' (ID: 25)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6091932654380798
    2. ':' → logprob: -0.8591932654380798
    3. ',' → logprob: -3.9841933250427246
    4. ')' → logprob: -4.859193325042725
    5. ' :' → logprob: -6.234193325042725
    6. '_:' → logprob: -6.984193325042725
    7. ' =' → logprob: -7.109193325042725
    8. '):' → logprob: -7.234193325042725
    9. ':int' → logprob: -7.859193325042725
    10. '=int' → logprob: -7.859193325042725

Token 2468: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.04784318804740906
    2. 'float' → logprob: -3.5478432178497314
    3. '100' → logprob: -4.672842979431152
    4. ' int' → logprob: -5.422842979431152
    5. '0' → logprob: -7.422842979431152
    6. '10' → logprob: -7.672842979431152
    7. '500' → logprob: -7.922842979431152
    8. '200' → logprob: -8.297842979431152
    9. '50' → logprob: -8.422842979431152
    10. '300' → logprob: -8.422842979431152

Token 2469: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.06007573381066322
    2. '):' → logprob: -3.4350757598876953
    3. '=' → logprob: -4.060075759887695
    4. ',' → logprob: -4.935075759887695
    5. '       ' → logprob: -7.185075759887695
    6. '   ' → logprob: -8.060075759887695
    7. ':' → logprob: -8.310075759887695
    8. '):
' → logprob: -8.310075759887695
    9. ',
' → logprob: -10.435075759887695
    10. ')' → logprob: -11.060075759887695

Token 2470: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00043937109876424074
    2. '   ' → logprob: -8.000439643859863
    3. '```' → logprob: -10.250439643859863
    4. '):
' → logprob: -10.750439643859863
    5. ':' → logprob: -11.250439643859863
    6. 'self' → logprob: -11.750439643859863
    7. ')' → logprob: -12.500439643859863
    8. '        ' → logprob: -12.625439643859863
    9. '(self' → logprob: -12.625439643859863
    10. 'def' → logprob: -13.000439643859863

Token 2471: ' self' (ID: 1051)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.012873944826424122
    2. 'self' (adapté à ' self') → logprob: -4.387874126434326
    3. ' self' → logprob: -8.137873649597168
    4. 'super' → logprob: -10.012873649597168
    5. '   ' → logprob: -11.137873649597168
    6. ' super' → logprob: -12.012873649597168
    7. 'def' → logprob: -13.512873649597168
    8. 't' → logprob: -13.762873649597168
    9. '           ' → logprob: -13.887873649597168
    10. 'tet' → logprob: -14.012873649597168

Token 2472: '.t' (ID: 1370)
  Prédit: '.t'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.t' → logprob: -0.001990255434066057
    2. '.' → logprob: -6.25199031829834
    3. '._' → logprob: -11.12699031829834
    4. '   ' → logprob: -11.37699031829834
    5. ' .' → logprob: -11.37699031829834
    6. '=' → logprob: -11.62699031829834
    7. '       ' → logprob: -12.37699031829834
    8. '=t' → logprob: -13.37699031829834
    9. ' =' → logprob: -13.62699031829834
    10. ' tetra' → logprob: -14.00199031829834

Token 2473: 'etra' (ID: 72836)
  Prédit: 'etra'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'etra' → logprob: -0.0005212200339883566
    2. '   ' → logprob: -8.625521659851074
    3. 'etri' → logprob: -9.875521659851074
    4. '  ' → logprob: -10.250521659851074
    5. '    ' → logprob: -10.375521659851074
    6. '_' → logprob: -10.375521659851074
    7. '__' → logprob: -11.125521659851074
    8. 'et' → logprob: -11.250521659851074
    9. 'heta' → logprob: -11.250521659851074
    10. 'race' → logprob: -11.375521659851074

Token 2474: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.7927275896072388
    2. '.' → logprob: -1.0427275896072388
    3. ',' → logprob: -2.292727470397949
    4. ' =' → logprob: -2.792727470397949
    5. '   ' → logprob: -4.792727470397949
    6. '=self' → logprob: -5.542727470397949
    7. '.t' → logprob: -5.667727470397949
    8. 'self' → logprob: -5.792727470397949
    9. '       ' → logprob: -5.917727470397949
    10. '._' → logprob: -6.292727470397949

Token 2475: ' tetra' (ID: 176775)
  Prédit: 'tet'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tet' → logprob: -0.01043149083852768
    2. ' tetra' → logprob: -4.635431289672852
    3. '   ' → logprob: -8.760431289672852
    4. 'self' → logprob: -8.885431289672852
    5. '       ' → logprob: -9.135431289672852
    6. ' ' → logprob: -10.635431289672852
    7. '           ' → logprob: -10.635431289672852
    8. 't' → logprob: -10.635431289672852
    9. '     ' → logprob: -10.760431289672852
    10. '         ' → logprob: -10.885431289672852

Token 2476: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0006786000449210405
    2. ',' → logprob: -8.250679016113281
    3. 'self' → logprob: -8.250679016113281
    4. '        
' → logprob: -9.625679016113281
    5. '
' → logprob: -10.375679016113281
    6. '   ' → logprob: -11.125679016113281
    7. '      ' → logprob: -11.625679016113281
    8. '        ' → logprob: -12.125679016113281
    9. ' self' → logprob: -12.625679016113281
    10. '               ' → logprob: -12.750679016113281

Token 2477: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.014822274446487427
    2. 'self' → logprob: -4.514822483062744
    3. '                ' → logprob: -6.389822483062744
    4. '	' → logprob: -7.014822483062744
    5. '   ' → logprob: -7.639822483062744
    6. '               ' → logprob: -7.764822483062744
    7. ' self' → logprob: -9.139822006225586
    8. 'first' → logprob: -10.389822006225586
    9. '      ' → logprob: -11.014822006225586
    10. '           ' → logprob: -11.139822006225586

Token 2478: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.018425006419420242
    2. 'first' → logprob: -4.018424987792969
    3. '       ' → logprob: -8.268424987792969
    4. ' self' → logprob: -11.018424987792969
    5. ' first' → logprob: -14.143424987792969
    6. '   ' → logprob: -14.143424987792969
    7. 'First' → logprob: -15.393424987792969
    8. '
' → logprob: -16.01842498779297
    9. '#' → logprob: -16.51842498779297
    10. '        ' → logprob: -17.26842498779297

Token 2479: '.first' (ID: 14272)
  Prédit: '.first'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.first' → logprob: -0.005532792769372463
    2. '.tr' → logprob: -5.380532741546631
    3. '.' → logprob: -8.005533218383789
    4. '.angle' → logprob: -8.380533218383789
    5. 'first' → logprob: -9.255533218383789
    6. '.initial' → logprob: -9.380533218383789
    7. '.t' → logprob: -10.005533218383789
    8. '.w' → logprob: -10.380533218383789
    9. ' .' → logprob: -10.755533218383789
    10. '.position' → logprob: -11.005533218383789

Token 2480: '_edge' (ID: 43226)
  Prédit: '_edge'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_edge' → logprob: -8.888114098226652e-05
    2. '_direction' → logprob: -10.500088691711426
    3. '_face' → logprob: -11.125088691711426
    4. '_' → logprob: -11.625088691711426
    5. 'edge' → logprob: -11.875088691711426
    6. 'Edge' → logprob: -12.000088691711426
    7. '_edges' → logprob: -12.625088691711426
    8. '   ' → logprob: -12.625088691711426
    9. '_line' → logprob: -12.750088691711426
    10. '
' → logprob: -13.000088691711426

Token 2481: '_str' (ID: 6182)
  Prédit: '_str'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_str' → logprob: -0.05227658525109291
    2. '=' → logprob: -3.302276611328125
    3. ' =' → logprob: -4.552276611328125
    4. ',' → logprob: -6.052276611328125
    5. ')' → logprob: -8.177276611328125
    6. '_' → logprob: -8.302276611328125
    7. 'str' → logprob: -8.927276611328125
    8. '       ' → logprob: -9.052276611328125
    9. '._' → logprob: -9.552276611328125
    10. '.' → logprob: -9.677276611328125

Token 2482: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.14951342344284058
    2. ',' → logprob: -2.5245134830474854
    3. ' =' → logprob: -3.0245134830474854
    4. ')' → logprob: -5.649513244628906
    5. ' ' → logprob: -6.774513244628906
    6. '[' → logprob: -6.774513244628906
    7. '_' → logprob: -7.399513244628906
    8. '        ' → logprob: -7.399513244628906
    9. '       ' → logprob: -7.399513244628906
    10. ' ,' → logprob: -7.899513244628906

Token 2483: ' first' (ID: 1577)
  Prédit: 'first'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'first' → logprob: -0.0003819332632701844
    2. ' first' → logprob: -7.875381946563721
    3. 'f' → logprob: -13.250381469726562
    4. '	first' → logprob: -17.625381469726562
    5. '[first' → logprob: -17.750381469726562
    6. '(first' → logprob: -18.250381469726562
    7. '`' → logprob: -18.375381469726562
    8. 'str' → logprob: -18.500381469726562
    9. 'fir' → logprob: -18.750381469726562
    10. '
' → logprob: -19.500381469726562

Token 2484: '_edge' (ID: 43226)
  Prédit: '_edge'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_edge' → logprob: -3.2617008400848135e-05
    2. ''_' → logprob: -11.500032424926758
    3. '"_' → logprob: -12.375032424926758
    4. '_' → logprob: -12.375032424926758
    5. '_edges' → logprob: -12.500032424926758
    6. '_str' → logprob: -12.750032424926758
    7. '_angle' → logprob: -13.125032424926758
    8. 'Edge' → logprob: -13.375032424926758
    9. '_EDGE' → logprob: -14.375032424926758
    10. ''' → logprob: -14.500032424926758

Token 2485: '_str' (ID: 6182)
  Prédit: '_str'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_str' → logprob: -2.9160102712921798e-05
    2. 'str' → logprob: -10.875029563903809
    3. 'Str' → logprob: -12.250029563903809
    4. ''_' → logprob: -13.500029563903809
    5. ''' → logprob: -13.750029563903809
    6. '_' → logprob: -13.875029563903809
    7. '"_' → logprob: -13.875029563903809
    8. '"' → logprob: -14.500029563903809
    9. '_f' → logprob: -15.375029563903809
    10. '_string' → logprob: -16.375028610229492

Token 2486: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.013157992623746395
    2. ',' → logprob: -4.763157844543457
    3. '        ' → logprob: -6.263157844543457
    4. '        
' → logprob: -7.013157844543457
    5. '<|end|>' → logprob: -7.888157844543457
    6. '=' → logprob: -8.013157844543457
    7. 'self' → logprob: -8.888157844543457
    8. ' ' → logprob: -9.013157844543457
    9. ',
' → logprob: -9.138157844543457
    10. '      ' → logprob: -9.263157844543457

Token 2487: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0171586275100708
    2. '                ' → logprob: -4.892158508300781
    3. ',' → logprob: -5.892158508300781
    4. '        ' → logprob: -6.642158508300781
    5. 'self' → logprob: -6.642158508300781
    6. '=' → logprob: -6.892158508300781
    7. '```' → logprob: -7.017158508300781
    8. '(' → logprob: -7.767158508300781
    9. '               ' → logprob: -7.892158508300781
    10. '(self' → logprob: -8.642158508300781

Token 2488: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.05589420720934868
    2. '                ' → logprob: -3.055894136428833
    3. ' self' → logprob: -5.430894374847412
    4. '                 ' → logprob: -6.805894374847412
    5. '               ' → logprob: -8.055893898010254
    6. '       ' → logprob: -8.180893898010254
    7. '	' → logprob: -8.305893898010254
    8. '	self' → logprob: -8.805893898010254
    9. '		        ' → logprob: -9.180893898010254
    10. '                    ' → logprob: -9.555893898010254

Token 2489: '.angle' (ID: 90963)
  Prédit: '.angle'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.angle' → logprob: -0.14097270369529724
    2. '_angle' → logprob: -2.89097261428833
    3. 'angle' → logprob: -3.26597261428833
    4. '._' → logprob: -3.39097261428833
    5. '.' → logprob: -6.14097261428833
    6. '.first' → logprob: -7.39097261428833
    7. '=' → logprob: -7.76597261428833
    8. ' =' → logprob: -8.765973091125488
    9. '_first' → logprob: -8.765973091125488
    10. ' .' → logprob: -8.890973091125488

Token 2490: '_deg' (ID: 144310)
  Prédit: '_deg'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_deg' → logprob: -0.06427261233329773
    2. '_' → logprob: -2.81427264213562
    3. '<|end|>' → logprob: -8.0642728805542
    4. '_=' → logprob: -8.0642728805542
    5. '_d' → logprob: -8.3142728805542
    6. ')' → logprob: -8.6892728805542
    7. '_
' → logprob: -8.6892728805542
    8. ' _' → logprob: -8.9392728805542
    9. ')_' → logprob: -9.1892728805542
    10. '=' → logprob: -9.5642728805542

Token 2491: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.25867846608161926
    2. ' =' → logprob: -1.5086784362792969
    3. '<|end|>' → logprob: -5.383678436279297
    4. ',' → logprob: -7.258678436279297
    5. ' ' → logprob: -7.883678436279297
    6. ')' → logprob: -8.508678436279297
    7. '        ' → logprob: -8.758678436279297
    8. '=self' → logprob: -9.008678436279297
    9. '       ' → logprob: -9.258678436279297
    10. ':' → logprob: -9.508678436279297

Token 2492: ' angle' (ID: 16538)
  Prédit: 'angle'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'angle' → logprob: -0.04858759790658951
    2. ' angle' → logprob: -3.0485875606536865
    3. 'int' → logprob: -15.548587799072266
    4. '(angle' → logprob: -16.423587799072266
    5. '_angle' → logprob: -17.923587799072266
    6. ' ' → logprob: -19.423587799072266
    7. '        ' → logprob: -19.673587799072266
    8. ' int' → logprob: -19.798587799072266
    9. '.angle' → logprob: -19.798587799072266
    10. 'float' → logprob: -19.923587799072266

Token 2493: '_deg' (ID: 144310)
  Prédit: '_deg'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_deg' → logprob: -0.00010425841173855588
    2. '_' → logprob: -10.375103950500488
    3. ')' → logprob: -10.625103950500488
    4. 'deg' → logprob: -11.375103950500488
    5. ',' → logprob: -11.625103950500488
    6. ')_' → logprob: -12.125103950500488
    7. '       ' → logprob: -12.375103950500488
    8. '_degree' → logprob: -12.500103950500488
    9. '```' → logprob: -12.625103950500488
    10. '   ' → logprob: -13.375103950500488

Token 2494: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.01086517795920372
    2. '<|end|>' → logprob: -5.010865211486816
    3. '	' → logprob: -6.135865211486816
    4. '   ' → logprob: -7.385865211486816
    5. ',' → logprob: -8.135865211486816
    6. 'self' → logprob: -8.760865211486816
    7. '
' → logprob: -9.010865211486816
    8. '        ' → logprob: -9.260865211486816
    9. '<|end|>' → logprob: -9.510865211486816
    10. '        
' → logprob: -9.510865211486816

Token 2495: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0007949740393087268
    2. 'self' → logprob: -7.625794887542725
    3. '   ' → logprob: -8.750795364379883
    4. '	' → logprob: -9.625795364379883
    5. ',' → logprob: -10.875795364379883
    6. ' self' → logprob: -11.000795364379883
    7. '```' → logprob: -11.500795364379883
    8. '<|end|>' → logprob: -11.875795364379883
    9. '	self' → logprob: -12.125795364379883
    10. '           ' → logprob: -12.625795364379883

Token 2496: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.00028374246903695166
    2. ' self' → logprob: -8.750284194946289
    3. '       ' → logprob: -9.125284194946289
    4. '   ' → logprob: -11.500284194946289
    5. 'trail' → logprob: -12.250284194946289
    6. '	self' → logprob: -14.125284194946289
    7. '(self' → logprob: -16.00028419494629
    8. ' ' → logprob: -16.25028419494629
    9. '        ' → logprob: -16.37528419494629
    10. '
' → logprob: -16.37528419494629

Token 2497: '.tr' (ID: 8992)
  Prédit: '.tr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.tr' → logprob: -0.15104971826076508
    2. 'trail' → logprob: -2.1510496139526367
    3. '_tr' → logprob: -5.026049613952637
    4. 'first' → logprob: -6.026049613952637
    5. '.first' → logprob: -6.026049613952637
    6. 'Trail' → logprob: -6.276049613952637
    7. 'def' → logprob: -6.651049613952637
    8. '_length' → logprob: -6.651049613952637
    9. 'tr' → logprob: -6.776049613952637
    10. ' trail' → logprob: -6.901049613952637

Token 2498: 'ail' (ID: 663)
  Prédit: 'ail'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ail' → logprob: -2.45848218582978e-06
    2. 'a' → logprob: -13.37500286102295
    3. 'ack' → logprob: -14.12500286102295
    4. '
' → logprob: -17.625001907348633
    5. 'ai' → logprob: -17.750001907348633
    6. '_' → logprob: -18.000001907348633
    7. '#' → logprob: -18.375001907348633
    8. ' ail' → logprob: -18.875001907348633
    9. 'al' → logprob: -19.000001907348633
    10. 'ace' → logprob: -19.125001907348633

Token 2499: '_length' (ID: 11514)
  Prédit: '_length'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_length' → logprob: -2.2842308680992573e-05
    2. '_l' → logprob: -11.625022888183594
    3. 'Length' → logprob: -12.750022888183594
    4. 'length' → logprob: -12.750022888183594
    5. '_len' → logprob: -13.125022888183594
    6. 'ength' → logprob: -13.375022888183594
    7. '   ' → logprob: -13.625022888183594
    8. '_' → logprob: -14.000022888183594
    9. '_lengths' → logprob: -14.625022888183594
    10. ' _' → logprob: -14.750022888183594

Token 2500: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.39205366373062134
    2. ' =' → logprob: -1.1420536041259766
    3. '   ' → logprob: -6.017053604125977
    4. ')' → logprob: -7.142053604125977
    5. ',' → logprob: -7.767053604125977
    6. '       ' → logprob: -8.142053604125977
    7. '_' → logprob: -8.267053604125977
    8. '    ' → logprob: -8.517053604125977
    9. ' ' → logprob: -8.642053604125977
    10. ':' → logprob: -9.642053604125977

Token 2501: ' trail' (ID: 12761)
  Prédit: ' trail'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' trail' → logprob: -0.3132883608341217
    2. 'trail' → logprob: -1.3132883310317993
    3. 'int' → logprob: -11.688288688659668
    4. 'tr' → logprob: -11.688288688659668
    5. 'trial' → logprob: -12.688288688659668
    6. ' int' → logprob: -12.813288688659668
    7. '   ' → logprob: -13.188288688659668
    8. ' ' → logprob: -14.938288688659668
    9. 'trace' → logprob: -15.188288688659668
    10. ' trial' → logprob: -15.438288688659668

Token 2502: '_length' (ID: 11514)
  Prédit: 'g'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'g' → logprob: -0.11719437688589096
    2. '   ' → logprob: -2.492194414138794
    3. '_length' → logprob: -4.867194175720215
    4. 'ght' → logprob: -5.242194175720215
    5. '       ' → logprob: -5.367194175720215
    6. 'ength' → logprob: -5.492194175720215
    7. '```' → logprob: -6.117194175720215
    8. 'ng' → logprob: -6.367194175720215
    9. 'f' → logprob: -7.367194175720215
    10. '_g' → logprob: -7.992194175720215

Token 2503: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.012681395746767521
    2. '   ' → logprob: -4.887681484222412
    3. 'def' → logprob: -6.387681484222412
    4. '
' → logprob: -6.512681484222412
    5. ',' → logprob: -7.387681484222412
    6. '```' → logprob: -7.387681484222412
    7. '        
' → logprob: -8.637681007385254
    8. '<|end|>' → logprob: -9.012681007385254
    9. 'import' → logprob: -9.137681007385254
    10. ' def' → logprob: -10.012681007385254

Token 2504: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.02376411110162735
    2. '   ' → logprob: -3.898764133453369
    3. 'def' → logprob: -6.648764133453369
    4. '```' → logprob: -6.773764133453369
    5. '
' → logprob: -7.273764133453369
    6. ' def' → logprob: -10.648763656616211
    7. '        
' → logprob: -10.648763656616211
    8. ',' → logprob: -11.773763656616211
    9. '           ' → logprob: -12.023763656616211
    10. 'import' → logprob: -12.023763656616211

Token 2505: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.13090170919895172
    2. '       ' → logprob: -2.25590181350708
    3. '#' → logprob: -4.13090181350708
    4. 'def' → logprob: -6.38090181350708
    5. '   ' → logprob: -9.505901336669922
    6. ' self' → logprob: -10.005901336669922
    7. '
' → logprob: -11.755901336669922
    8. 'import' → logprob: -11.755901336669922
    9. 'first' → logprob: -12.255901336669922
    10. 'super' → logprob: -13.130901336669922

Token 2506: '.direction' (ID: 63524)
  Prédit: '.current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.current' → logprob: -1.039865493774414
    2. '.position' → logprob: -1.539865493774414
    3. '.path' → logprob: -1.914865493774414
    4. '._' → logprob: -2.664865493774414
    5. '.positions' → logprob: -2.789865493774414
    6. '.face' → logprob: -3.414865493774414
    7. '.first' → logprob: -3.539865493774414
    8. '.w' → logprob: -3.789865493774414
    9. '.t' → logprob: -4.414865493774414
    10. '_path' → logprob: -4.414865493774414

Token 2507: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.15279024839401245
    2. '=' → logprob: -2.2777903079986572
    3. '_' → logprob: -3.4027903079986572
    4. '.' → logprob: -6.277790069580078
    5. 's' → logprob: -6.652790069580078
    6. '   ' → logprob: -7.027790069580078
    7. ')' → logprob: -7.527790069580078
    8. '<|end|>' → logprob: -8.152790069580078
    9. ' ' → logprob: -8.402790069580078
    10. '    ' → logprob: -8.902790069580078

Token 2508: ' Worm' (ID: 119021)
  Prédit: 'W'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'W' → logprob: -1.676292231422849e-05
    2. ' Worm' → logprob: -11.125017166137695
    3. '   ' → logprob: -14.000017166137695
    4. 'None' → logprob: -14.500017166137695
    5. '       ' → logprob: -15.250017166137695
    6. ' ' → logprob: -16.250017166137695
    7. '     ' → logprob: -16.750017166137695
    8. 'self' → logprob: -17.250017166137695
    9. '  ' → logprob: -17.375017166137695
    10. '"W' → logprob: -17.500017166137695

Token 2509: 'Direction' (ID: 14084)
  Prédit: 'Direction'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Direction' → logprob: -1.6240566083070007e-06
    2. 'direction' → logprob: -15.125001907348633
    3. '_direction' → logprob: -15.375001907348633
    4. '[' → logprob: -15.750001907348633
    5. '(Direction' → logprob: -15.875001907348633
    6. '(' → logprob: -16.250001907348633
    7. 'Direct' → logprob: -16.500001907348633
    8. 'Directions' → logprob: -16.750001907348633
    9. 'Directional' → logprob: -16.750001907348633
    10. 'Angle' → logprob: -16.750001907348633

Token 2510: '(t' (ID: 2025)
  Prédit: '(t'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(t' → logprob: -0.42671436071395874
    2. '(self' → logprob: -1.4267144203186035
    3. '(' → logprob: -2.9267144203186035
    4. '(
' → logprob: -2.9267144203186035
    5. 'self' → logprob: -9.426713943481445
    6. 't' → logprob: -11.801713943481445
    7. '(
' → logprob: -12.301713943481445
    8. '()' → logprob: -12.676713943481445
    9. '```' → logprob: -12.926713943481445
    10. ' (' → logprob: -13.301713943481445

Token 2511: 'etra' (ID: 72836)
  Prédit: 'etra'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'etra' → logprob: -0.0006372620700858533
    2. 'heta' → logprob: -8.00063705444336
    3. 'he' → logprob: -9.37563705444336
    4. 'self' → logprob: -10.12563705444336
    5. 'race' → logprob: -10.87563705444336
    6. 'et' → logprob: -11.00063705444336
    7. '(self' → logprob: -11.12563705444336
    8. 'his' → logprob: -11.75063705444336
    9. 'etri' → logprob: -11.87563705444336
    10. 'h' → logprob: -12.00063705444336

Token 2512: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0007083826349116862
    2. ',
' → logprob: -7.37570858001709
    3. ',self' → logprob: -9.75070858001709
    4. ' ,' → logprob: -11.25070858001709
    5. ',

' → logprob: -12.62570858001709
    6. 'self' → logprob: -13.00070858001709
    7. ')' → logprob: -13.50070858001709
    8. '   ' → logprob: -14.00070858001709
    9. ' ' → logprob: -14.50070858001709
    10. ',
' → logprob: -14.75070858001709

Token 2513: ' first' (ID: 1577)
  Prédit: 'first'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'first' → logprob: -3.547789674485102e-05
    2. ' first' → logprob: -10.375035285949707
    3. 'self' → logprob: -12.750035285949707
    4. '                ' → logprob: -14.250035285949707
    5. '[first' → logprob: -16.125036239624023
    6. '                   ' → logprob: -16.375036239624023
    7. '               ' → logprob: -16.500036239624023
    8. '                 ' → logprob: -16.500036239624023
    9. '                    ' → logprob: -16.625036239624023
    10. '
' → logprob: -17.250036239624023

Token 2514: '_edge' (ID: 43226)
  Prédit: '_edge'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_edge' → logprob: -1.9146995327901095e-05
    2. 'edge' → logprob: -11.250019073486328
    3. 'Edge' → logprob: -12.250019073486328
    4. '_edges' → logprob: -15.000019073486328
    5. '_EDGE' → logprob: -15.500019073486328
    6. ')' → logprob: -16.000019073486328
    7. '
' → logprob: -16.125019073486328
    8. '-edge' → logprob: -16.625019073486328
    9. '_angle' → logprob: -16.625019073486328
    10. '.edge' → logprob: -16.750019073486328

Token 2515: '_str' (ID: 6182)
  Prédit: '_str'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_str' → logprob: -0.0001519325451226905
    2. 'str' → logprob: -9.375151634216309
    3. 'Str' → logprob: -9.750151634216309
    4. ')' → logprob: -12.875151634216309
    5. 'self' → logprob: -14.250151634216309
    6. '._' → logprob: -14.500151634216309
    7. 's' → logprob: -14.750151634216309
    8. '```' → logprob: -14.750151634216309
    9. 'String' → logprob: -15.125151634216309
    10. '
' → logprob: -15.125151634216309

Token 2516: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0003983760252594948
    2. ',self' → logprob: -8.375398635864258
    3. ',
' → logprob: -9.000398635864258
    4. ' ,' → logprob: -11.750398635864258
    5. '                ' → logprob: -12.250398635864258
    6. '           ' → logprob: -12.250398635864258
    7. ')' → logprob: -12.375398635864258
    8. '               ' → logprob: -12.500398635864258
    9. 'self' → logprob: -12.750398635864258
    10. '   ' → logprob: -13.000398635864258

Token 2517: ' angle' (ID: 16538)
  Prédit: 'angle'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'angle' → logprob: -0.0009117019944824278
    2. ' angle' → logprob: -7.000911712646484
    3. 'self' → logprob: -15.500911712646484
    4. '(angle' → logprob: -18.125911712646484
    5. '           ' → logprob: -18.500911712646484
    6. '   ' → logprob: -18.875911712646484
    7. '       ' → logprob: -19.000911712646484
    8. '               ' → logprob: -19.625911712646484
    9. '                   ' → logprob: -20.250911712646484
    10. '_angle' → logprob: -20.500911712646484

Token 2518: '_deg' (ID: 144310)
  Prédit: '_deg'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_deg' → logprob: -0.00011033779446734115
    2. ')' → logprob: -9.875110626220703
    3. '_degree' → logprob: -11.375110626220703
    4. ')_' → logprob: -11.500110626220703
    5. 'deg' → logprob: -11.750110626220703
    6. '_d' → logprob: -11.875110626220703
    7. '_' → logprob: -12.125110626220703
    8. '}_' → logprob: -12.375110626220703
    9. 'Deg' → logprob: -12.750110626220703
    10. '```' → logprob: -13.875110626220703

Token 2519: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00013953536108601838
    2. '       ' → logprob: -9.000139236450195
    3. '   ' → logprob: -11.500139236450195
    4. ')
' → logprob: -12.250139236450195
    5. ' )' → logprob: -13.875139236450195
    6. ' ' → logprob: -16.375139236450195
    7. ').' → logprob: -17.375139236450195
    8. '           ' → logprob: -17.500139236450195
    9. '	' → logprob: -18.375139236450195
    10. '        ' → logprob: -18.500139236450195

Token 2520: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.41534915566444397
    2. '   ' → logprob: -1.2903491258621216
    3. 'def' → logprob: -2.915349245071411
    4. '```' → logprob: -5.040349006652832
    5. 'self' → logprob: -6.040349006652832
    6. ',' → logprob: -7.540349006652832
    7. ' def' → logprob: -7.790349006652832
    8. ')' → logprob: -9.165349006652832
    9. '#' → logprob: -9.290349006652832
    10. '
' → logprob: -9.665349006652832

Token 2521: ' #' (ID: 1069)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.3202878534793854
    2. '       ' → logprob: -1.320287823677063
    3. '#' (adapté à ' #') → logprob: -5.195287704467773
    4. 'def' → logprob: -6.695287704467773
    5. '   ' → logprob: -8.945287704467773
    6. 'face' → logprob: -10.445287704467773
    7. '
' → logprob: -10.945287704467773
    8. ' self' → logprob: -11.195287704467773
    9. 'from' → logprob: -11.445287704467773
    10. 'current' → logprob: -11.570287704467773

Token 2522: ' The' (ID: 623)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.47837790846824646
    2. 'self' → logprob: -1.6033779382705688
    3. '       ' → logprob: -1.7283779382705688
    4. '   ' → logprob: -7.853377819061279
    5. 'def' → logprob: -7.978377819061279
    6. 'current' → logprob: -8.478378295898438
    7. 'face' → logprob: -8.603378295898438
    8. 'import' → logprob: -9.478378295898438
    9. 'class' → logprob: -9.728378295898438
    10. 'from' → logprob: -10.103378295898438

Token 2523: ' worm' (ID: 40598)
  Prédit: 'current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'current' → logprob: -0.10577483475208282
    2. 'position' → logprob: -2.9807748794555664
    3. 'face' → logprob: -3.6057748794555664
    4. '#' → logprob: -3.8557748794555664
    5. 'start' → logprob: -8.105774879455566
    6. '_current' → logprob: -8.480774879455566
    7. 'curr' → logprob: -8.605774879455566
    8. 'pos' → logprob: -8.605774879455566
    9. 'def' → logprob: -9.355774879455566
    10. 'initial' → logprob: -9.480774879455566

Token 2524: ' starts' (ID: 13217)
  Prédit: 'position'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'position' → logprob: -0.5941926836967468
    2. ''s' → logprob: -1.9691927433013916
    3. '#' → logprob: -2.3441927433013916
    4. '_position' → logprob: -2.4691927433013916
    5. 'current' → logprob: -2.8441927433013916
    6. '_current' → logprob: -4.3441925048828125
    7. '       ' → logprob: -4.5941925048828125
    8. 's' → logprob: -4.7191925048828125
    9. 'starts' → logprob: -4.8441925048828125
    10. 'is' → logprob: -4.9691925048828125

Token 2525: ' at' (ID: 540)
  Prédit: 'on'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'on' → logprob: -0.13408932089805603
    2. 'at' → logprob: -2.259089231491089
    3. ' on' → logprob: -4.509089469909668
    4. ' at' → logprob: -5.009089469909668
    5. 'position' → logprob: -6.259089469909668
    6. 'from' → logprob: -7.259089469909668
    7. 'face' → logprob: -8.884089469909668
    8. 'in' → logprob: -9.134089469909668
    9. '   ' → logprob: -9.259089469909668
    10. 'initial' → logprob: -9.384089469909668

Token 2526: ' vertex' (ID: 25363)
  Prédit: 'Vertex'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Vertex' → logprob: -0.9512799382209778
    2. '(self' → logprob: -1.701279878616333
    3. '(Vertex' → logprob: -1.701279878616333
    4. 'Face' → logprob: -1.826279878616333
    5. 'self' → logprob: -2.826279878616333
    6. 'the' → logprob: -5.076280117034912
    7. '#' → logprob: -5.201280117034912
    8. '(' → logprob: -5.326280117034912
    9. '(A' → logprob: -5.826280117034912
    10. 'face' → logprob: -6.076280117034912

Token 2527: ' A' (ID: 355)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.153585284948349
    2. 'Vertex' → logprob: -2.153585195541382
    3. '(Vertex' → logprob: -4.028585433959961
    4. '.Vertex' → logprob: -5.028585433959961
    5. '.A' → logprob: -7.028585433959961
    6. ' Vertex' → logprob: -8.153585433959961
    7. '`' → logprob: -8.278585433959961
    8. '```' → logprob: -8.528585433959961
    9. ' A' → logprob: -9.653585433959961
    10. 'self' → logprob: -10.028585433959961

Token 2528: ' on' (ID: 402)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.036495838314294815
    2. 'self' → logprob: -4.286495685577393
    3. ',' → logprob: -4.536495685577393
    4. ' self' → logprob: -5.411495685577393
    5. '(self' → logprob: -6.161495685577393
    6. '
' → logprob: -6.911495685577393
    7. ' and' → logprob: -7.036495685577393
    8. ' with' → logprob: -7.786495685577393
    9. ':' → logprob: -7.786495685577393
    10. 'A' → logprob: -8.16149616241455

Token 2529: ' face' (ID: 4950)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.5392166376113892
    2. 'the' → logprob: -1.2892166376113892
    3. 'Vertex' → logprob: -2.7892165184020996
    4. 'first' → logprob: -3.2892165184020996
    5. '#' → logprob: -4.2892165184021
    6. 'Face' → logprob: -4.5392165184021
    7. 'face' → logprob: -5.1642165184021
    8. ' the' → logprob: -5.9142165184021
    9. 'tet' → logprob: -6.2892165184021
    10. 't' → logprob: -6.5392165184021

Token 2530: ' Ax' (ID: 34568)
  Prédit: 'Face'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Face' → logprob: -0.4609810709953308
    2. 'self' → logprob: -1.3359811305999756
    3. 'Vertex' → logprob: -2.7109811305999756
    4. '(Vertex' → logprob: -3.8359811305999756
    5. '(self' → logprob: -4.4609808921813965
    6. ' Face' → logprob: -5.8359808921813965
    7. ' self' → logprob: -6.2109808921813965
    8. ' Vertex' → logprob: -7.3359808921813965
    9. 'A' → logprob: -8.460981369018555
    10. 't' → logprob: -8.710981369018555

Token 2531: 'Y' (ID: 56)
  Prédit: 'Y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Y' → logprob: -0.0147737767547369
    2. ',' → logprob: -5.389773845672607
    3. 'X' → logprob: -5.514773845672607
    4. 'y' → logprob: -5.889773845672607
    5. 'Vertex' → logprob: -6.389773845672607
    6. 'x' → logprob: -8.01477336883545
    7. 'A' → logprob: -8.26477336883545
    8. '(Vertex' → logprob: -8.38977336883545
    9. ',y' → logprob: -9.26477336883545
    10. 'V' → logprob: -9.26477336883545

Token 2532: ' (' (ID: 350)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.6873546242713928
    2. '(self' → logprob: -1.687354564666748
    3. '=' → logprob: -1.937354564666748
    4. 'self' → logprob: -3.062354564666748
    5. 'Y' → logprob: -3.187354564666748
    6. '=self' → logprob: -3.312354564666748
    7. ',' → logprob: -4.187354564666748
    8. '(Vertex' → logprob: -5.062354564666748
    9. '       ' → logprob: -6.187354564666748
    10. '```' → logprob: -6.187354564666748

Token 2533: 'A' (ID: 32)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.2088787704706192
    2. 'Vertex' → logprob: -1.958878755569458
    3. 'first' → logprob: -3.583878755569458
    4. 'direction' → logprob: -5.083878993988037
    5. 't' → logprob: -5.708878993988037
    6. 'tet' → logprob: -6.333878993988037
    7. 'f' → logprob: -6.333878993988037
    8. '(Vertex' → logprob: -6.958878993988037
    9. 'Direction' → logprob: -7.083878993988037
    10. '(self' → logprob: -7.458878993988037

Token 2534: ' +' (ID: 659)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.16419728100299835
    2. 'X' → logprob: -2.0391972064971924
    3. 'x' → logprob: -4.7891974449157715
    4. ')' → logprob: -5.9141974449157715
    5. ' ,' → logprob: -6.0391974449157715
    6. '
' → logprob: -6.5391974449157715
    7. 'Y' → logprob: -7.0391974449157715
    8. ',
' → logprob: -7.2891974449157715
    9. '),' → logprob: -7.6641974449157715
    10. ',X' → logprob: -7.8516974449157715

Token 2535: ' edge' (ID: 11165)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.128336101770401
    2. 'tuple' → logprob: -2.128336191177368
    3. '''.' → logprob: -7.503335952758789
    4. 'first' → logprob: -8.003335952758789
    5. '(self' → logprob: -8.253335952758789
    6. '
' → logprob: -9.503335952758789
    7. ' self' → logprob: -9.878335952758789
    8. ' tuple' → logprob: -10.253335952758789
    9. 'direction' → logprob: -10.628335952758789
    10. '(tuple' → logprob: -10.753335952758789

Token 2536: ' vertices' (ID: 38360)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.09636374562978745
    2. '(self' → logprob: -2.8463637828826904
    3. 'str' → logprob: -4.471363544464111
    4. ' self' → logprob: -5.971363544464111
    5. 'direction' → logprob: -6.096363544464111
    6. '(Vertex' → logprob: -6.346363544464111
    7. '_direction' → logprob: -6.471363544464111
    8. '
' → logprob: -6.471363544464111
    9. 'Vertex' → logprob: -6.596363544464111
    10. '_str' → logprob: -6.971363544464111

Token 2537: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.32129794359207153
    2. ')
' → logprob: -2.4462978839874268
    3. ' +' → logprob: -3.3212978839874268
    4. '+' → logprob: -3.4462978839874268
    5. '[' → logprob: -3.6962978839874268
    6. '=' → logprob: -3.8212978839874268
    7. '),' → logprob: -4.321298122406006
    8. ' =' → logprob: -4.696298122406006
    9. ',' → logprob: -4.946298122406006
    10. '(self' → logprob: -5.196298122406006

Token 2538: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0005087109748274088
    2. 'self' → logprob: -7.750508785247803
    3. ' self' → logprob: -10.625508308410645
    4. '   ' → logprob: -10.625508308410645
    5. ',' → logprob: -11.625508308410645
    6. '#' → logprob: -12.250508308410645
    7. '```' → logprob: -12.625508308410645
    8. 'class' → logprob: -12.750508308410645
    9. '           ' → logprob: -13.125508308410645
    10. 'import' → logprob: -13.625508308410645

Token 2539: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.0019946584943681955
    2. '       ' → logprob: -6.376994609832764
    3. '#' → logprob: -8.751995086669922
    4. ' self' → logprob: -9.751995086669922
    5. 'current' → logprob: -10.626995086669922
    6. 'v' → logprob: -11.001995086669922
    7. '```' → logprob: -11.626995086669922
    8. 'face' → logprob: -12.251995086669922
    9. 'import' → logprob: -12.251995086669922
    10. '   ' → logprob: -12.501995086669922

Token 2540: '.current' (ID: 8357)
  Prédit: '.current'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.current' → logprob: -0.08260443061590195
    2. 'current' → logprob: -2.58260440826416
    3. 'start' → logprob: -6.58260440826416
    4. '.position' → logprob: -6.83260440826416
    5. '.start' → logprob: -7.58260440826416
    6. '.face' → logprob: -8.20760440826416
    7. '.first' → logprob: -8.83260440826416
    8. 'position' → logprob: -9.08260440826416
    9. 'face' → logprob: -9.58260440826416
    10. '.curr' → logprob: -9.95760440826416

Token 2541: '_face' (ID: 75619)
  Prédit: '_face'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_face' → logprob: -4.6087021473795176e-05
    2. '_edge' → logprob: -10.625045776367188
    3. '_position' → logprob: -11.750045776367188
    4. '_vertex' → logprob: -12.375045776367188
    5. '_f' → logprob: -12.625045776367188
    6. 'face' → logprob: -13.375045776367188
    7. '_line' → logprob: -14.125045776367188
    8. '_' → logprob: -14.250045776367188
    9. '```' → logprob: -14.500045776367188
    10. '_fac' → logprob: -14.625045776367188

Token 2542: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.11290153115987778
    2. '=' → logprob: -2.237901449203491
    3. ')' → logprob: -10.98790168762207
    4. ',' → logprob: -11.23790168762207
    5. ':' → logprob: -11.36290168762207
    6. '=self' → logprob: -11.36290168762207
    7. '   ' → logprob: -12.11290168762207
    8. '_' → logprob: -12.23790168762207
    9. '=None' → logprob: -12.23790168762207
    10. '<|end|>' → logprob: -13.11290168762207

Token 2543: ' self' (ID: 1051)
  Prédit: 'tet'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tet' → logprob: -0.4300512969493866
    2. 'self' → logprob: -1.055051326751709
    3. 'Face' → logprob: -7.305051326751709
    4. 't' → logprob: -8.18005084991455
    5. ' tetra' → logprob: -8.55505084991455
    6. ' self' → logprob: -9.30505084991455
    7. 'Vertex' → logprob: -10.55505084991455
    8. '(self' → logprob: -11.18005084991455
    9. '   ' → logprob: -11.18005084991455
    10. 'direction' → logprob: -11.93005084991455

Token 2544: '.direction' (ID: 63524)
  Prédit: '.direction'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.direction' → logprob: -0.004606111440807581
    2. '.first' → logprob: -5.504606246948242
    3. 'direction' → logprob: -7.879606246948242
    4. '.t' → logprob: -9.254606246948242
    5. '.current' → logprob: -11.379606246948242
    6. '.face' → logprob: -11.504606246948242
    7. 'first' → logprob: -11.754606246948242
    8. '.geometry' → logprob: -12.129606246948242
    9. ' .' → logprob: -12.504606246948242
    10. '._' → logprob: -12.879606246948242

Token 2545: '.first' (ID: 14272)
  Prédit: '.first'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.first' → logprob: -0.04068391025066376
    2. '.' → logprob: -3.4156839847564697
    3. '.initial' → logprob: -6.040683746337891
    4. ')' → logprob: -6.665683746337891
    5. ' .' → logprob: -7.165683746337891
    6. '
' → logprob: -7.290683746337891
    7. '#' → logprob: -8.79068374633789
    8. '   ' → logprob: -8.79068374633789
    9. '.current' → logprob: -9.04068374633789
    10. ';' → logprob: -9.16568374633789

Token 2546: '_face' (ID: 75619)
  Prédit: '_face'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_face' → logprob: -1.4855663721391466e-05
    2. '_edge' → logprob: -12.000015258789062
    3. '_' → logprob: -12.875015258789062
    4. 'face' → logprob: -13.000015258789062
    5. '_fac' → logprob: -13.750015258789062
    6. '_f' → logprob: -14.000015258789062
    7. '
' → logprob: -15.125015258789062
    8. '__' → logprob: -15.250015258789062
    9. '_faces' → logprob: -15.375015258789062
    10. ' _' → logprob: -15.750015258789062

Token 2547: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00019340807921253145
    2. 'self' → logprob: -8.87519359588623
    3. ',' → logprob: -10.87519359588623
    4. '   ' → logprob: -11.00019359588623
    5. '<|end|>' → logprob: -12.50019359588623
    6. '
' → logprob: -12.62519359588623
    7. '           ' → logprob: -13.12519359588623
    8. '        
' → logprob: -13.50019359588623
    9. ' self' → logprob: -13.62519359588623
    10. '      ' → logprob: -13.75019359588623

Token 2548: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1271233856678009
    2. 'self' → logprob: -2.1271233558654785
    3. '   ' → logprob: -9.127123832702637
    4. '```' → logprob: -9.752123832702637
    5. 'from' → logprob: -11.877123832702637
    6. '           ' → logprob: -11.877123832702637
    7. '#' → logprob: -12.127123832702637
    8. ' self' → logprob: -12.377123832702637
    9. 'import' → logprob: -13.127123832702637
    10. '
' → logprob: -14.127123832702637

Token 2549: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.0012102338951081038
    2. '       ' → logprob: -7.0012102127075195
    3. '#' → logprob: -8.12621021270752
    4. '   ' → logprob: -14.00121021270752
    5. 'A' → logprob: -14.37621021270752
    6. 'from' → logprob: -14.50121021270752
    7. 'origin' → logprob: -14.62621021270752
    8. ' self' → logprob: -14.87621021270752
    9. 'import' → logprob: -16.751211166381836
    10. '
' → logprob: -16.751211166381836

Token 2550: '.position' (ID: 13130)
  Prédit: '.current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.current' → logprob: -0.15313655138015747
    2. '.position' → logprob: -2.0281364917755127
    3. 'current' → logprob: -4.778136730194092
    4. '_position' → logprob: -7.028136730194092
    5. '_current' → logprob: -7.778136730194092
    6. '._' → logprob: -8.403136253356934
    7. 'position' → logprob: -8.778136253356934
    8. '.pos' → logprob: -9.278136253356934
    9. '_pos' → logprob: -9.278136253356934
    10. '.' → logprob: -11.278136253356934

Token 2551: '_on' (ID: 10053)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0700414702296257
    2. '=' → logprob: -2.6950414180755615
    3. '   ' → logprob: -9.94504165649414
    4. '_' → logprob: -11.57004165649414
    5. ')' → logprob: -11.69504165649414
    6. ':' → logprob: -11.94504165649414
    7. '0' → logprob: -12.19504165649414
    8. '  ' → logprob: -12.82004165649414
    9. '_coords' → logprob: -12.82004165649414
    10. ' ' → logprob: -12.94504165649414

Token 2552: '_face' (ID: 75619)
  Prédit: '_face'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_face' → logprob: -0.3888574540615082
    2. 'self' → logprob: -1.7638574838638306
    3. 'face' → logprob: -2.138857364654541
    4. 'current' → logprob: -3.638857364654541
    5. 'the' → logprob: -6.513857364654541
    6. '(self' → logprob: -7.013857364654541
    7. ' face' → logprob: -7.263857364654541
    8. '_current' → logprob: -7.388857364654541
    9. 'Face' → logprob: -7.388857364654541
    10. ' self' → logprob: -7.763857364654541

Token 2553: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0700373575091362
    2. '=' → logprob: -2.695037364959717
    3. ':' → logprob: -9.570036888122559
    4. '   ' → logprob: -11.320036888122559
    5. '=(' → logprob: -11.945036888122559
    6. ' ' → logprob: -12.820036888122559
    7. '<|end|>' → logprob: -13.195036888122559
    8. ' =(' → logprob: -13.320036888122559
    9. ' (' → logprob: -13.945036888122559
    10. '=None' → logprob: -13.945036888122559

Token 2554: ' (' (ID: 350)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -6.32523515378125e-05
    2. '(Vertex' → logprob: -10.250062942504883
    3. ' (' → logprob: -10.625062942504883
    4. '(self' → logprob: -13.375062942504883
    5. '(None' → logprob: -14.125062942504883
    6. '   ' → logprob: -15.000062942504883
    7. '((' → logprob: -15.500062942504883
    8. 'Vertex' → logprob: -16.000062942504883
    9. ' ' → logprob: -16.375062942504883
    10. '(vertex' → logprob: -16.375062942504883

Token 2555: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00013595925702247769
    2. 'Vertex' → logprob: -9.625136375427246
    3. '(' → logprob: -9.750136375427246
    4. ' ' → logprob: -12.250136375427246
    5. '(Vertex' → logprob: -12.875136375427246
    6. 'vertex' → logprob: -14.125136375427246
    7. '1' → logprob: -14.250136375427246
    8. ' Vertex' → logprob: -14.375136375427246
    9. 'A' → logprob: -14.500136375427246
    10. ')' → logprob: -15.125136375427246

Token 2556: '.' (ID: 13)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.039633672684431076
    2. '.' → logprob: -3.2896337509155273
    3. '0' → logprob: -6.539633750915527
    4. ')' → logprob: -9.664633750915527
    5. ',
' → logprob: -10.414633750915527
    6. '<|end|>' → logprob: -10.789633750915527
    7. '.,' → logprob: -11.539633750915527
    8. ' ,' → logprob: -12.039633750915527
    9. '```' → logprob: -12.539633750915527
    10. '<|end|>' → logprob: -12.664633750915527

Token 2557: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: 0.0
    2. ' ' → logprob: -17.25
    3. ',' → logprob: -18.125
    4. '```' → logprob: -18.75
    5. '   ' → logprob: -18.875
    6. ')' → logprob: -18.875
    7. '
' → logprob: -19.625
    8. '  ' → logprob: -20.125
    9. '000' → logprob: -20.375
    10. '00' → logprob: -20.75

Token 2558: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00013333676906768233
    2. ',
' → logprob: -9.125133514404297
    3. ' ,' → logprob: -11.500133514404297
    4. ')' → logprob: -11.875133514404297
    5. '0' → logprob: -12.750133514404297
    6. '<|end|>' → logprob: -13.250133514404297
    7. '.' → logprob: -14.625133514404297
    8. '
' → logprob: -15.250133514404297
    9. '```' → logprob: -15.250133514404297
    10. '‌,' → logprob: -15.375133514404297

Token 2559: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -6.623244553338736e-05
    2. ' ' → logprob: -9.625065803527832
    3. '   ' → logprob: -16.75006675720215
    4. ')' → logprob: -17.62506675720215
    5. '  ' → logprob: -18.00006675720215
    6. '```' → logprob: -19.12506675720215
    7. '    ' → logprob: -19.62506675720215
    8. '00' → logprob: -19.81256675720215
    9. '۰' → logprob: -20.00006675720215
    10. '       ' → logprob: -20.25006675720215

Token 2560: '.' (ID: 13)
  Prédit: '.'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.000605337496381253
    2. ')' → logprob: -7.87560510635376
    3. ',' → logprob: -8.750605583190918
    4. '0' → logprob: -9.625605583190918
    5. '.
' → logprob: -15.250605583190918
    6. '.,' → logprob: -16.3756046295166
    7. '),' → logprob: -16.6256046295166
    8. '```' → logprob: -16.7506046295166
    9. '.)' → logprob: -16.7506046295166
    10. '<|end|>' → logprob: -17.5006046295166

Token 2561: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.3856492842023727e-06
    2. ' ' → logprob: -14.000000953674316
    3. ')' → logprob: -15.250000953674316
    4. '   ' → logprob: -15.750000953674316
    5. '```' → logprob: -16.750001907348633
    6. '  ' → logprob: -18.250001907348633
    7. '    ' → logprob: -18.875001907348633
    8. '
' → logprob: -18.937501907348633
    9. '    
' → logprob: -18.937501907348633
    10. ',' → logprob: -19.187501907348633

Token 2562: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -9.758300438988954e-05
    2. ')
' → logprob: -9.625097274780273
    3. '       ' → logprob: -11.125097274780273
    4. ',' → logprob: -12.000097274780273
    5. ' )' → logprob: -12.125097274780273
    6. '   ' → logprob: -13.875097274780273
    7. '<|end|>' → logprob: -13.875097274780273
    8. '),' → logprob: -14.250097274780273
    9. ')#' → logprob: -14.625097274780273
    10. ')`' → logprob: -14.750097274780273

Token 2563: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3666413724422455
    2. '   ' → logprob: -1.2416414022445679
    3. '<|end|>' → logprob: -4.241641521453857
    4. ')' → logprob: -6.866641521453857
    5. 'self' → logprob: -6.991641521453857
    6. '
' → logprob: -7.741641521453857
    7. '<|end|>' → logprob: -7.991641521453857
    8. 'def' → logprob: -8.3666410446167
    9. ',' → logprob: -8.8666410446167
    10. ' self' → logprob: -9.2416410446167

Token 2564: ' At' (ID: 3604)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.9501405358314514
    2. '(' → logprob: -1.0751404762268066
    3. '0' → logprob: -1.9501404762268066
    4. 'self' → logprob: -2.2001404762268066
    5. ' (' → logprob: -5.200140476226807
    6. '(self' → logprob: -6.200140476226807
    7. 'A' → logprob: -6.200140476226807
    8. '<|end|>' → logprob: -6.575140476226807
    9. '1' → logprob: -6.700140476226807
    10. '
' → logprob: -7.075140476226807

Token 2565: ' vertex' (ID: 25363)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.20840676128864288
    2. 'Vertex' → logprob: -2.333406686782837
    3. 'A' → logprob: -2.583406686782837
    4. 'origin' → logprob: -5.333406925201416
    5. '(Vertex' → logprob: -5.833406925201416
    6. '0' → logprob: -5.833406925201416
    7. ' (' → logprob: -6.708406925201416
    8. '#' → logprob: -6.833406925201416
    9. '(A' → logprob: -7.458406925201416
    10. 'self' → logprob: -7.458406925201416

Token 2566: ' A' (ID: 355)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -1.308154582977295
    2. ',' → logprob: -1.558154582977295
    3. ')' → logprob: -1.558154582977295
    4. 'A' → logprob: -1.558154582977295
    5. 'self' → logprob: -3.058154582977295
    6. '.' → logprob: -4.183154582977295
    7. '<|end|>' → logprob: -4.558154582977295
    8. ' #' → logprob: -5.183154582977295
    9. ' (' → logprob: -5.683154582977295
    10. '       ' → logprob: -5.933154582977295

Token 2567: ' in' (ID: 306)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5596497654914856
    2. '
' → logprob: -1.4346497058868408
    3. '<|end|>' → logprob: -1.9346497058868408
    4. '       ' → logprob: -4.05964994430542
    5. ')' → logprob: -4.43464994430542
    6. '.' → logprob: -5.18464994430542
    7. ',' → logprob: -5.55964994430542
    8. '<|end|>' → logprob: -6.18464994430542
    9. ' ' → logprob: -6.68464994430542
    10. '```' → logprob: -7.30964994430542

Token 2568: ' face' (ID: 4950)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.08561626821756363
    2. 'face' → logprob: -2.83561635017395
    3. 'the' → logprob: -4.335616111755371
    4. 'current' → logprob: -5.460616111755371
    5. 'local' → logprob: -5.960616111755371
    6. '0' → logprob: -6.960616111755371
    7. '(' → logprob: -7.460616111755371
    8. '(self' → logprob: -7.835616111755371
    9. '#' → logprob: -7.960616111755371
    10. ' self' → logprob: -8.085616111755371

Token 2569: ' coords' (ID: 53253)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 2570: ',' (ID: 11)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.47509872913360596
    2. '       ' → logprob: -1.225098729133606
    3. 'def' → logprob: -3.2250986099243164
    4. 'self' → logprob: -3.4750986099243164
    5. '<|end|>' → logprob: -4.975098609924316
    6. '
' → logprob: -5.475098609924316
    7. ')' → logprob: -7.475098609924316
    8. '	self' → logprob: -7.975098609924316
    9. '<|end|>' → logprob: -8.100098609924316
    10. ' self' → logprob: -8.225098609924316

Token 2571: ' we' (ID: 581)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.9266044497489929
    2. '(' → logprob: -1.0516045093536377
    3. ' (' → logprob: -2.0516045093536377
    4. '0' → logprob: -3.1766045093536377
    5. ' self' → logprob: -4.301604270935059
    6. '(self' → logprob: -4.551604270935059
    7. '       ' → logprob: -4.551604270935059
    8. '#' → logprob: -4.676604270935059
    9. 'None' → logprob: -4.676604270935059
    10. ')' → logprob: -4.801604270935059

Token 2572: ' will' (ID: 738)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'continue' → logprob: -0.4629150629043579
    2. '#' → logprob: -1.712915062904358
    3. 'self' → logprob: -3.3379149436950684
    4. 'have' → logprob: -3.7129149436950684
    5. 'start' → logprob: -3.9629149436950684
    6. '       ' → logprob: -4.087914943695068
    7. ')' → logprob: -4.337914943695068
    8. ' continue' → logprob: -4.587914943695068
    9. 'initialize' → logprob: -4.837914943695068
    10. 'need' → logprob: -4.837914943695068

Token 2573: ' param' (ID: 3802)
  Prédit: 'initialize'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'initialize' → logprob: -1.5827276706695557
    2. 'advance' → logprob: -2.0827276706695557
    3. 'set' → logprob: -2.2077276706695557
    4. 'continue' → logprob: -2.5827276706695557
    5. 'replace' → logprob: -2.8327276706695557
    6. 'update' → logprob: -2.8327276706695557
    7. 'implement' → logprob: -2.9577276706695557
    8. 'complete' → logprob: -3.2077276706695557
    9. 'store' → logprob: -3.2077276706695557
    10. 'move' → logprob: -3.3327276706695557

Token 2574: 'etrize' (ID: 132456)
  Prédit: 'etrize'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'etrize' → logprob: -0.012414287775754929
    2. 'er' → logprob: -5.387414455413818
    3. 'eter' → logprob: -5.387414455413818
    4. 'etr' → logprob: -5.762414455413818
    5. 'etric' → logprob: -11.38741397857666
    6. 'eters' → logprob: -11.51241397857666
    7. 'ized' → logprob: -11.51241397857666
    8. 'ize' → logprob: -12.63741397857666
    9. 'et' → logprob: -13.13741397857666
    10. 'ater' → logprob: -13.26241397857666

Token 2575: ' position' (ID: 4010)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 2576: ' as' (ID: 472)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 2577: ' (' (ID: 350)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.022908473387360573
    2. 'self' → logprob: -4.397908687591553
    3. '(self' → logprob: -4.772908687591553
    4. '(u' → logprob: -7.647908687591553
    5. '(float' → logprob: -8.022908210754395
    6. ' (' → logprob: -8.147908210754395
    7. '#' → logprob: -8.772908210754395
    8. 'a' → logprob: -8.897908210754395
    9. '(a' → logprob: -9.022908210754395
    10. 'float' → logprob: -9.147908210754395

Token 2578: 'dist' (ID: 24126)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -1.4617256056226324e-05
    2. ' ' → logprob: -12.125014305114746
    3. ')' → logprob: -12.250014305114746
    4. '(' → logprob: -13.000014305114746
    5. 'A' → logprob: -14.250014305114746
    6. '
' → logprob: -15.125014305114746
    7. '   ' → logprob: -15.625014305114746
    8. '```' → logprob: -15.625014305114746
    9. 'u' → logprob: -16.125015258789062
    10. ',' → logprob: -16.125015258789062

Token 2579: ' to' (ID: 316)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.1624613255262375
    2. '_x' → logprob: -2.537461280822754
    3. 'from' → logprob: -3.412461280822754
    4. '_from' → logprob: -4.412461280822754
    5. '0' → logprob: -5.412461280822754
    6. 'x' → logprob: -5.537461280822754
    7. '=' → logprob: -5.787461280822754
    8. '_u' → logprob: -6.287461280822754
    9. ' ,' → logprob: -6.412461280822754
    10. ')' → logprob: -6.787461280822754

Token 2580: ' A' (ID: 355)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.610162079334259
    2. 'origin' → logprob: -0.985162079334259
    3. '(' → logprob: -3.1101620197296143
    4. 'u' → logprob: -4.485162258148193
    5. 'vertex' → logprob: -4.735162258148193
    6. ')' → logprob: -5.360162258148193
    7. '0' → logprob: -5.860162258148193
    8. 'edge' → logprob: -5.860162258148193
    9. 'Vertex' → logprob: -5.985162258148193
    10. '(origin' → logprob: -7.110162258148193

Token 2581: ' along' (ID: 4251)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.006173605564981699
    2. 'x' → logprob: -5.756173610687256
    3. ')' → logprob: -7.131173610687256
    4. ',u' → logprob: -7.506173610687256
    5. ' ,' → logprob: -7.756173610687256
    6. 'X' → logprob: -8.131173133850098
    7. '),' → logprob: -9.256173133850098
    8. ' along' → logprob: -9.256173133850098
    9. ',
' → logprob: -9.381173133850098
    10. '_x' → logprob: -9.506173133850098

Token 2582: ' base' (ID: 3611)
  Prédit: 'u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'u' → logprob: -0.032927464693784714
    2. 'self' → logprob: -4.157927513122559
    3. '(' → logprob: -5.532927513122559
    4. ')' → logprob: -5.782927513122559
    5. ' u' → logprob: -6.282927513122559
    6. '(u' → logprob: -6.407927513122559
    7. 'edge' → logprob: -6.532927513122559
    8. '(self' → logprob: -7.032927513122559
    9. 'Edge' → logprob: -7.157927513122559
    10. 'vector' → logprob: -7.407927513122559

Token 2583: ' vectors' (ID: 52254)
  Prédit: 'u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'u' → logprob: -0.8846777081489563
    2. 'edge' → logprob: -1.2596776485443115
    3. '_edge' → logprob: -1.8846776485443115
    4. 'vector' → logprob: -3.1346776485443115
    5. ' edge' → logprob: -3.5096776485443115
    6. ',' → logprob: -3.8846776485443115
    7. '_u' → logprob: -4.134677886962891
    8. ' u' → logprob: -5.009677886962891
    9. 'line' → logprob: -5.134677886962891
    10. ',u' → logprob: -5.259677886962891

Token 2584: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.11043894290924072
    2. ',' → logprob: -2.360438823699951
    3. '[' → logprob: -5.735438823699951
    4. ',)' → logprob: -6.235438823699951
    5. '   ' → logprob: -6.985438823699951
    6. ')
' → logprob: -7.110438823699951
    7. 'u' → logprob: -7.610438823699951
    8. '_u' → logprob: -7.735438823699951
    9. ')`' → logprob: -8.36043930053711
    10. '))' → logprob: -8.48543930053711

Token 2585: '       ' (ID: 309)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.6709564924240112
    2. '       ' → logprob: -1.0459564924240112
    3. '   ' → logprob: -2.170956611633301
    4. 'def' → logprob: -3.920956611633301
    5. ' self' → logprob: -6.545956611633301
    6. '```' → logprob: -6.795956611633301
    7. '
' → logprob: -7.795956611633301
    8. '	self' → logprob: -8.9209566116333
    9. '#' → logprob: -9.1709566116333
    10. '(self' → logprob: -10.1709566116333

Token 2586: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.800125002861023
    2. 'self' → logprob: -0.925125002861023
    3. '   ' → logprob: -2.4251251220703125
    4. 'def' → logprob: -2.8001251220703125
    5. ' self' → logprob: -6.0501251220703125
    6. '```' → logprob: -7.3001251220703125
    7. '	self' → logprob: -7.4251251220703125
    8. '
' → logprob: -7.9251251220703125
    9. '#' (adapté à ' #') → logprob: -8.175125122070312
    10. '	' → logprob: -8.675125122070312

Token 2587: ' The' (ID: 623)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.2311447709798813
    2. '#' → logprob: -2.481144666671753
    3. '       ' → logprob: -2.731144666671753
    4. '   ' → logprob: -3.481144666671753
    5. 'def' → logprob: -3.731144666671753
    6. 'import' → logprob: -7.231144905090332
    7. '```' → logprob: -7.481144905090332
    8. ' self' → logprob: -7.606144905090332
    9. 'pass' → logprob: -8.356144905090332
    10. '
' → logprob: -8.356144905090332

Token 2588: ' initial' (ID: 4871)
  Prédit: 'current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'current' → logprob: -0.5362687110900879
    2. 'path' → logprob: -2.036268711090088
    3. '#' → logprob: -2.661268711090088
    4. 'position' → logprob: -3.286268711090088
    5. 'trail' → logprob: -3.411268711090088
    6. 'def' → logprob: -3.661268711090088
    7. 'remaining' → logprob: -3.661268711090088
    8. 'distance' → logprob: -3.911268711090088
    9. 'positions' → logprob: -4.411268711090088
    10. 'visited' → logprob: -4.536268711090088

Token 2589: ' position' (ID: 4010)
  Prédit: 'direction'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'direction' → logprob: -0.09976992011070251
    2. '_direction' → logprob: -2.4747698307037354
    3. 'position' → logprob: -5.2247700691223145
    4. 'vector' → logprob: -5.8497700691223145
    5. 'current' → logprob: -7.2247700691223145
    6. '#' → logprob: -7.8497700691223145
    7. '_position' → logprob: -8.099769592285156
    8. ' direction' → logprob: -8.224769592285156
    9. 'edge' → logprob: -8.724769592285156
    10. '_edge' → logprob: -8.849769592285156

Token 2590: ' in' (ID: 306)
  Prédit: 'is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'is' → logprob: -1.2143123149871826
    2. ' is' → logprob: -1.2143123149871826
    3. ' =' → logprob: -1.3393123149871826
    4. '=' → logprob: -3.3393123149871826
    5. '   ' → logprob: -3.5893123149871826
    6. '#' → logprob: -4.714312553405762
    7. 'self' → logprob: -4.839312553405762
    8. ' of' → logprob: -4.839312553405762
    9. 'in' → logprob: -5.339312553405762
    10. '_is' → logprob: -5.339312553405762

Token 2591: ' ' (ID: 220)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.37836119532585144
    2. 'face' → logprob: -1.2533612251281738
    3. '3' → logprob: -4.628361225128174
    4. '(self' → logprob: -5.003361225128174
    5. '(' → logprob: -5.378361225128174
    6. 'the' → logprob: -5.878361225128174
    7. '(u' → logprob: -6.753361225128174
    8. ' (' → logprob: -7.253361225128174
    9. 'local' → logprob: -7.253361225128174
    10. ' self' → logprob: -7.503361225128174

Token 2592: '2' (ID: 17)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.34221166372299194
    2. '3' → logprob: -1.9672117233276367
    3. 'face' → logprob: -2.0922117233276367
    4. '(' → logprob: -4.467211723327637
    5. '(self' → logprob: -4.467211723327637
    6. 'float' → logprob: -7.342211723327637
    7. ' (' → logprob: -7.967211723327637
    8. 'A' → logprob: -8.342211723327637
    9. 'the' → logprob: -8.467211723327637
    10. '(face' → logprob: -8.592211723327637

Token 2593: 'D' (ID: 35)
  Prédit: 'D'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'D' → logprob: -0.00600961409509182
    2. 'd' → logprob: -5.131009578704834
    3. '#' → logprob: -11.131010055541992
    4. '3' → logprob: -11.381010055541992
    5. '
' → logprob: -11.381010055541992
    6. ',' → logprob: -11.881010055541992
    7. 'face' → logprob: -11.881010055541992
    8. '0' → logprob: -11.881010055541992
    9. '_d' → logprob: -11.881010055541992
    10. ' D' → logprob: -12.381010055541992

Token 2594: ' coords' (ID: 53253)
  Prédit: 'coordinates'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'coordinates' → logprob: -0.46831756830215454
    2. ' coordinates' → logprob: -2.0933175086975098
    3. 'coords' → logprob: -2.9683175086975098
    4. ',' → logprob: -3.2183175086975098
    5. ' is' → logprob: -3.4683175086975098
    6. ' =' → logprob: -3.8433175086975098
    7. 'is' → logprob: -4.34331750869751
    8. ':' → logprob: -4.34331750869751
    9. ')' → logprob: -4.59331750869751
    10. ' on' → logprob: -4.84331750869751

Token 2595: ' of' (ID: 328)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.4483044445514679
    2. ' is' → logprob: -1.6983044147491455
    3. '=' → logprob: -2.3233044147491455
    4. '       ' → logprob: -4.323304653167725
    5. 'self' → logprob: -4.573304653167725
    6. ':' → logprob: -4.823304653167725
    7. ' in' → logprob: -5.073304653167725
    8. 'is' → logprob: -5.073304653167725
    9. ',' → logprob: -5.323304653167725
    10. ' on' → logprob: -5.448304653167725

Token 2596: ' the' (ID: 290)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.23258905112743378
    2. '(' → logprob: -1.6075890064239502
    3. 'the' → logprob: -5.357589244842529
    4. '(self' → logprob: -6.607589244842529
    5. ' self' → logprob: -8.107588768005371
    6. 'vertex' → logprob: -8.232588768005371
    7. ' (' → logprob: -8.482588768005371
    8. 'position' → logprob: -9.482588768005371
    9. 'A' → logprob: -9.482588768005371
    10. '0' → logprob: -9.982588768005371

Token 2597: ' face' (ID: 4950)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -1.034899115562439
    2. 'vertex' → logprob: -1.784899115562439
    3. 'current' → logprob: -1.909899115562439
    4. '(' → logprob: -1.909899115562439
    5. 'position' → logprob: -2.5348992347717285
    6. 'worm' → logprob: -3.5348992347717285
    7. 'A' → logprob: -4.1598992347717285
    8. 'direction' → logprob: -4.4098992347717285
    9. 'Vertex' → logprob: -4.7848992347717285
    10. 'w' → logprob: -5.1598992347717285

Token 2598: ' is' (ID: 382)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 2599: ' origin' (ID: 12839)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.004399259574711323
    2. 'self' → logprob: -5.629399299621582
    3. ' (' → logprob: -7.254399299621582
    4. '(self' → logprob: -9.504399299621582
    5. '   ' → logprob: -11.879399299621582
    6. ' self' → logprob: -12.004399299621582
    7. ' ' → logprob: -13.129399299621582
    8. '  ' → logprob: -14.754399299621582
    9. '0' → logprob: -14.754399299621582
    10. '       ' → logprob: -14.754399299621582

Token 2600: ' at' (ID: 540)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.15594889223575592
    2. '   ' → logprob: -2.6559488773345947
    3. '<|end|>' → logprob: -3.5309488773345947
    4. '       ' → logprob: -3.7809488773345947
    5. '.' → logprob: -5.280949115753174
    6. ')' → logprob: -5.280949115753174
    7. ',' → logprob: -5.655949115753174
    8. 'def' → logprob: -6.905949115753174
    9. '

' → logprob: -7.030949115753174
    10. '    
' → logprob: -7.030949115753174

Token 2601: ' vertex' (ID: 25363)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.45772919058799744
    2. 'self' → logprob: -1.0827292203903198
    3. '0' → logprob: -4.207729339599609
    4. 'Vertex' → logprob: -5.207729339599609
    5. 'A' → logprob: -5.707729339599609
    6. '(self' → logprob: -5.832729339599609
    7. 'vertex' → logprob: -7.207729339599609
    8. ' (' → logprob: -7.457729339599609
    9. 'sorted' → logprob: -8.33272933959961
    10. 'the' → logprob: -8.58272933959961

Token 2602: ' A' (ID: 355)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.0002233245177194476
    2. ''A' → logprob: -8.750223159790039
    3. ' A' → logprob: -10.750223159790039
    4. 'Vertex' → logprob: -10.875223159790039
    5. 'self' → logprob: -12.125223159790039
    6. '
' → logprob: -12.125223159790039
    7. '`' → logprob: -12.500223159790039
    8. '('' → logprob: -12.750223159790039
    9. 'a' → logprob: -13.750223159790039
    10. ''' → logprob: -13.750223159790039

Token 2603: ' (' (ID: 350)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7390523552894592
    2. '<|end|>' → logprob: -1.2390522956848145
    3. '
' → logprob: -1.6140522956848145
    4. '       ' → logprob: -4.1140522956848145
    5. '<|end|>' → logprob: -5.4890522956848145
    6. ')' → logprob: -5.4890522956848145
    7. 'def' → logprob: -6.1140522956848145
    8. ',' → logprob: -6.3640522956848145
    9. '```' → logprob: -6.4890522956848145
    10. '.' → logprob: -6.8640522956848145

Token 2604: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.01591259427368641
    2. ')' → logprob: -4.3909125328063965
    3. '#' → logprob: -6.3909125328063965
    4. 'self' → logprob: -7.3909125328063965
    5. ',' → logprob: -7.8909125328063965
    6. '(' → logprob: -8.015913009643555
    7. '),' → logprob: -9.390913009643555
    8. ').' → logprob: -9.890913009643555
    9. 'which' → logprob: -9.890913009643555
    10. ' ' → logprob: -10.265913009643555

Token 2605: ',' (ID: 11)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.02999923750758171
    2. ',' → logprob: -3.529999256134033
    3. '.,' → logprob: -8.654998779296875
    4. '0' → logprob: -9.779998779296875
    5. ')' → logprob: -11.779998779296875
    6. ' ,' → logprob: -12.904998779296875
    7. '```' → logprob: -13.154998779296875
    8. '[' → logprob: -14.279998779296875
    9. '.
' → logprob: -14.279998779296875
    10. '
' → logprob: -14.404998779296875

Token 2606: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0002614550176076591
    2. ' ' → logprob: -8.250261306762695
    3. '   ' → logprob: -16.500261306762695
    4. ',' → logprob: -17.250261306762695
    5. ')' → logprob: -17.750261306762695
    6. '
' → logprob: -17.875261306762695
    7. '```' → logprob: -17.875261306762695
    8. ' ' → logprob: -18.000261306762695
    9. '  ' → logprob: -18.250261306762695
    10. '       ' → logprob: -18.750261306762695

Token 2607: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0007050448912195861
    2. ',' → logprob: -8.000704765319824
    3. ')
' → logprob: -8.125704765319824
    4. '       ' → logprob: -10.500704765319824
    5. ').' → logprob: -11.250704765319824
    6. ' )' → logprob: -11.625704765319824
    7. '.' → logprob: -11.875704765319824
    8. '),' → logprob: -12.250704765319824
    9. ')

' → logprob: -13.125704765319824
    10. '   ' → logprob: -13.500704765319824

Token 2608: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8211711645126343
    2. 'def' → logprob: -1.4461711645126343
    3. 'self' → logprob: -1.5711711645126343
    4. '       ' → logprob: -2.196171283721924
    5. ' self' → logprob: -6.446171283721924
    6. '```' → logprob: -6.946171283721924
    7. '<|end|>' → logprob: -7.446171283721924
    8. '	self' → logprob: -7.821171283721924
    9. ' def' → logprob: -7.821171283721924
    10. '#' → logprob: -7.946171283721924

Token 2609: ' #' (ID: 1069)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.5075845122337341
    2. '       ' → logprob: -1.632584571838379
    3. '   ' → logprob: -2.257584571838379
    4. 'def' → logprob: -2.507584571838379
    5. ' self' → logprob: -4.882584571838379
    6. '
' → logprob: -5.257584571838379
    7. ')' → logprob: -7.132584571838379
    8. '	self' → logprob: -7.382584571838379
    9. ' def' → logprob: -7.632584571838379
    10. '#' (adapté à ' #') → logprob: -7.632584571838379

Token 2610: ' The' (ID: 623)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.270557165145874
    2. '   ' → logprob: -2.270557165145874
    3. 'self' → logprob: -2.395557165145874
    4. '       ' → logprob: -3.520557165145874
    5. '#' → logprob: -4.645557403564453
    6. ' def' → logprob: -6.270557403564453
    7. '
' → logprob: -7.520557403564453
    8. ' self' → logprob: -8.020557403564453
    9. 'import' → logprob: -8.020557403564453
    10. 'from' → logprob: -9.395557403564453

Token 2611: ' initial' (ID: 4871)
  Prédit: 'current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'current' → logprob: -0.40160372853279114
    2. 'path' → logprob: -2.4016036987304688
    3. 'direction' → logprob: -3.4016036987304688
    4. 'remaining' → logprob: -3.5266036987304688
    5. '#' → logprob: -3.6516036987304688
    6. 'initial' → logprob: -3.7766036987304688
    7. 'position' → logprob: -3.7766036987304688
    8. 'def' → logprob: -4.026603698730469
    9. 'trail' → logprob: -4.276603698730469
    10. 'worm' → logprob: -4.276603698730469

Token 2612: ' direction' (ID: 9262)
  Prédit: 'direction'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'direction' → logprob: -0.10750339180231094
    2. '_direction' → logprob: -2.7325034141540527
    3. ' direction' → logprob: -3.7325034141540527
    4. 'position' → logprob: -4.857503414154053
    5. 'current' → logprob: -6.607503414154053
    6. '#' → logprob: -7.232503414154053
    7. '_position' → logprob: -7.482503414154053
    8. 'vector' → logprob: -7.732503414154053
    9. 'face' → logprob: -8.107502937316895
    10. '_dir' → logprob: -8.107502937316895

Token 2613: ' vector' (ID: 9727)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.10309959203004837
    2. '=' → logprob: -3.1030995845794678
    3. '_vector' → logprob: -3.8530995845794678
    4. ' is' → logprob: -4.478099822998047
    5. 'is' → logprob: -5.353099822998047
    6. ' vector' → logprob: -5.478099822998047
    7. 'vector' → logprob: -5.603099822998047
    8. '_' → logprob: -6.353099822998047
    9. '_vec' → logprob: -6.853099822998047
    10. '   ' → logprob: -6.853099822998047

Token 2614: ' in' (ID: 306)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.15434032678604126
    2. '=' → logprob: -2.1543402671813965
    3. '_' → logprob: -5.0293402671813965
    4. '_in' → logprob: -5.5293402671813965
    5. ' is' → logprob: -5.5293402671813965
    6. '_on' → logprob: -5.9043402671813965
    7. ' in' → logprob: -6.0293402671813965
    8. '3' → logprob: -6.1543402671813965
    9. 'in' → logprob: -6.9043402671813965
    10. '_face' → logprob: -6.9043402671813965

Token 2615: ' ' (ID: 220)
  Prédit: '3'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.6501646041870117
    2. 'face' → logprob: -0.9001646041870117
    3. 'self' → logprob: -2.9001646041870117
    4. 'the' → logprob: -4.775164604187012
    5. ' ' → logprob: -6.025164604187012
    6. ' face' → logprob: -6.400164604187012
    7. '#' → logprob: -7.400164604187012
    8. 'plane' → logprob: -7.650164604187012
    9. ' the' → logprob: -7.775164604187012
    10. '2' → logprob: -7.775164604187012

Token 2616: '3' (ID: 18)
  Prédit: 'face'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'face' → logprob: -0.5319432020187378
    2. 'self' → logprob: -1.1569432020187378
    3. '3' → logprob: -2.4069433212280273
    4. '2' → logprob: -6.031943321228027
    5. 'the' → logprob: -6.406943321228027
    6. 't' → logprob: -7.156943321228027
    7. 'local' → logprob: -7.281943321228027
    8. '#' → logprob: -7.406943321228027
    9. 'current' → logprob: -7.531943321228027
    10. 'first' → logprob: -8.156943321228027

Token 2617: 'D' (ID: 35)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.0042131440714001656
    2. 'D' → logprob: -5.504213333129883
    3. '_d' → logprob: -9.379213333129883
    4. '#' → logprob: -10.629213333129883
    5. 'space' → logprob: -11.754213333129883
    6. '-d' → logprob: -12.629213333129883
    7. '
' → logprob: -12.754213333129883
    8. ' #' → logprob: -12.879213333129883
    9. ' d' → logprob: -13.254213333129883
    10. 'coords' → logprob: -13.254213333129883

Token 2618: ' is' (ID: 382)
  Prédit: ' is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.9097979664802551
    2. '.' → logprob: -2.1597979068756104
    3. ' on' → logprob: -2.2847979068756104
    4. ',' → logprob: -2.7847979068756104
    5. ' in' → logprob: -2.9097979068756104
    6. ' =' → logprob: -3.5347979068756104
    7. '   ' → logprob: -3.5347979068756104
    8. ')' → logprob: -3.7847979068756104
    9. '<|end|>' → logprob: -3.7847979068756104
    10. ' ' → logprob: -3.9097979068756104

Token 2619: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0028254427015781403
    2. 'tet' → logprob: -6.1278252601623535
    3. 'tuple' → logprob: -8.127825736999512
    4. ' self' → logprob: -8.877825736999512
    5. '(self' → logprob: -9.627825736999512
    6. 'normalize' → logprob: -10.002825736999512
    7. 'vector' → logprob: -10.627825736999512
    8. '   ' → logprob: -10.627825736999512
    9. ' ' → logprob: -11.877825736999512
    10. 't' → logprob: -12.127825736999512

Token 2620: '.direction' (ID: 63524)
  Prédit: '.direction'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.direction' → logprob: -0.0032774105202406645
    2. 'direction' → logprob: -6.37827730178833
    3. '.initial' → logprob: -6.50327730178833
    4. 'initial' → logprob: -10.878277778625488
    5. '.' → logprob: -11.753277778625488
    6. '.current' → logprob: -11.753277778625488
    7. 'Direction' → logprob: -12.128277778625488
    8. '.t' → logprob: -12.253277778625488
    9. '.position' → logprob: -12.253277778625488
    10. '
' → logprob: -12.378277778625488

Token 2621: '.initial' (ID: 58290)
  Prédit: '.initial'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.initial' → logprob: -0.47879570722579956
    2. 'initial' → logprob: -1.2287957668304443
    3. '_initial' → logprob: -2.8537957668304443
    4. '_direction' → logprob: -3.8537957668304443
    5. '```' → logprob: -6.353795528411865
    6. '_vector' → logprob: -6.478795528411865
    7. ' =' → logprob: -7.228795528411865
    8. '   ' → logprob: -7.353795528411865
    9. 'vector' → logprob: -7.728795528411865
    10. '.vector' → logprob: -7.728795528411865

Token 2622: '_direction' (ID: 64332)
  Prédit: '_direction'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_direction' → logprob: -0.0019343505846336484
    2. 'direction' → logprob: -6.25193452835083
    3. 'vector' → logprob: -12.751934051513672
    4. '_vector' → logprob: -13.001934051513672
    5. 'def' → logprob: -16.001934051513672
    6. '_d' → logprob: -16.376934051513672
    7. '
' → logprob: -16.751934051513672
    8. '_position' → logprob: -16.876934051513672
    9. '   ' → logprob: -17.126934051513672
    10. 'Direction' → logprob: -17.126934051513672

Token 2623: '

' (ID: 279)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.536860466003418
    2. '   ' → logprob: -1.786860466003418
    3. '
' → logprob: -2.286860466003418
    4. '<|end|>' → logprob: -2.411860466003418
    5. 'def' → logprob: -4.286860466003418
    6. ',' → logprob: -4.786860466003418
    7. '<|end|>' → logprob: -5.161860466003418
    8. 'self' → logprob: -5.411860466003418
    9. '.' → logprob: -5.411860466003418
    10. ')' → logprob: -5.411860466003418

Token 2624: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.20511332154273987
    2. 'def' → logprob: -1.7051132917404175
    3. '       ' → logprob: -6.205113410949707
    4. 'import' → logprob: -7.205113410949707
    5. '```' → logprob: -7.830113410949707
    6. ' def' → logprob: -8.705113410949707
    7. '
' → logprob: -8.955113410949707
    8. '    
' → logprob: -9.455113410949707
    9. 'self' → logprob: -9.705113410949707
    10. '#' → logprob: -10.455113410949707

Token 2625: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.028637990355491638
    2. '   ' → logprob: -3.6536378860473633
    3. ' def' → logprob: -7.028637886047363
    4. '       ' → logprob: -7.153637886047363
    5. 'self' → logprob: -7.403637886047363
    6. '
' → logprob: -10.528637886047363
    7. '#' → logprob: -11.153637886047363
    8. '```' → logprob: -12.278637886047363
    9. 'import' → logprob: -12.653637886047363
    10. ' self' → logprob: -13.403637886047363

Token 2626: ' simulate' (ID: 66687)
  Prédit: 'step'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'step' → logprob: -0.711244523525238
    2. ' step' → logprob: -2.086244583129883
    3. 'move' → logprob: -2.336244583129883
    4. 'advance' → logprob: -2.461244583129883
    5. 'crawl' → logprob: -2.836244583129883
    6. ' move' → logprob: -3.461244583129883
    7. '_step' → logprob: -3.586244583129883
    8. ' crawl' → logprob: -3.586244583129883
    9. ' advance' → logprob: -3.711244583129883
    10. 'simulate' → logprob: -4.086244583129883

Token 2627: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.06418395042419434
    2. '_step' → logprob: -2.8141839504241943
    3. '(' → logprob: -6.689184188842773
    4. '_(' → logprob: -7.689184188842773
    5. '_' → logprob: -8.814184188842773
    6. '_next' → logprob: -9.189184188842773
    7. '_walk' → logprob: -9.439184188842773
    8. '_move' → logprob: -9.564184188842773
    9. '_self' → logprob: -10.689184188842773
    10. '_start' → logprob: -11.064184188842773

Token 2628: ')' (ID: 8)
  Prédit: '_step'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_step' → logprob: -0.04027372971177101
    2. '(self' → logprob: -3.290273666381836
    3. '(' → logprob: -7.665273666381836
    4. '):' → logprob: -7.915273666381836
    5. 'step' → logprob: -8.040273666381836
    6. '_' → logprob: -8.040273666381836
    7. '_next' → logprob: -8.790273666381836
    8. '_steps' → logprob: -9.290273666381836
    9. 'self' → logprob: -9.665273666381836
    10. '_(' → logprob: -9.915273666381836

Token 2629: ' ->' (ID: 2747)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.00341903162188828
    2. '       ' → logprob: -6.128418922424316
    3. '   ' → logprob: -7.253418922424316
    4. ':' → logprob: -8.503418922424316
    5. '(' → logprob: -8.878418922424316
    6. 'self' → logprob: -9.003418922424316
    7. ':
' → logprob: -11.253418922424316
    8. ' (' → logprob: -11.503418922424316
    9. 'def' → logprob: -12.128418922424316
    10. ' self' → logprob: -12.378418922424316

Token 2630: ' Tuple' (ID: 50841)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'None' → logprob: -0.012210815213620663
    2. ' None' → logprob: -4.762210845947266
    3. 'List' → logprob: -6.137210845947266
    4. 'Tuple' → logprob: -7.262210845947266
    5. 'bool' → logprob: -8.512210845947266
    6. 'float' → logprob: -8.512210845947266
    7. 'int' → logprob: -8.887210845947266
    8. 'Optional' → logprob: -9.512210845947266
    9. 'Face' → logprob: -10.137210845947266
    10. '   ' → logprob: -11.012210845947266

Token 2631: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0052650682628154755
    2. '(F' → logprob: -6.255265235900879
    3. '(' → logprob: -7.005265235900879
    4. '[
' → logprob: -7.130265235900879
    5. '(self' → logprob: -7.755265235900879
    6. '[int' → logprob: -7.755265235900879
    7. '(
' → logprob: -8.255265235900879
    8. '[self' → logprob: -8.880265235900879
    9. ':' → logprob: -9.130265235900879
    10. ' (' → logprob: -9.880265235900879

Token 2632: 'Face' (ID: 23402)
  Prédit: 'Face'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Face' → logprob: -9.245724504580721e-05
    2. 'Optional' → logprob: -10.375092506408691
    3. 'float' → logprob: -10.625092506408691
    4. 'W' → logprob: -11.500092506408691
    5. 'List' → logprob: -11.625092506408691
    6. ' Face' → logprob: -11.625092506408691
    7. 'Float' → logprob: -13.125092506408691
    8. 'str' → logprob: -13.375092506408691
    9. 'bool' → logprob: -14.125092506408691
    10. ')' → logprob: -14.125092506408691

Token 2633: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0002681304467841983
    2. ' ,' → logprob: -8.37526798248291
    3. ',float' → logprob: -10.75026798248291
    4. ',
' → logprob: -12.50026798248291
    5. ',int' → logprob: -12.62526798248291
    6. '   ' → logprob: -12.87526798248291
    7. ',self' → logprob: -13.50026798248291
    8. '[' → logprob: -13.50026798248291
    9. 'self' → logprob: -14.25026798248291
    10. '‌,' → logprob: -14.50026798248291

Token 2634: ' Tuple' (ID: 50841)
  Prédit: 'Tuple'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Tuple' → logprob: -0.16030465066432953
    2. ' Tuple' → logprob: -1.9103046655654907
    3. 'float' → logprob: -9.78530502319336
    4. ' float' → logprob: -11.53530502319336
    5. '   ' → logprob: -12.28530502319336
    6. 'Optional' → logprob: -13.03530502319336
    7. ' ' → logprob: -13.03530502319336
    8. 'tuple' → logprob: -13.28530502319336
    9. ' tuple' → logprob: -13.41030502319336
    10. '    ' → logprob: -14.28530502319336

Token 2635: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -1.4378848391061183e-05
    2. '[
' → logprob: -11.500014305114746
    3. '   ' → logprob: -13.000014305114746
    4. ',float' → logprob: -13.875014305114746
    5. 'float' → logprob: -14.500014305114746
    6. '[int' → logprob: -15.875014305114746
    7. ']' → logprob: -16.000015258789062
    8. '
' → logprob: -16.250015258789062
    9. '(float' → logprob: -16.500015258789062
    10. ',' → logprob: -17.125015258789062

Token 2636: 'float' (ID: 7829)
  Prédit: 'float'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'float' → logprob: -1.2664456789934775e-06
    2. ' float' → logprob: -14.000000953674316
    3. '[' → logprob: -16.250001907348633
    4. '(float' → logprob: -16.500001907348633
    5. '   ' → logprob: -16.750001907348633
    6. ',float' → logprob: -17.125001907348633
    7. '```' → logprob: -18.000001907348633
    8. '.float' → logprob: -18.250001907348633
    9. '	float' → logprob: -18.250001907348633
    10. '<float' → logprob: -18.375001907348633

Token 2637: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.03808373212814331
    2. ',float' → logprob: -3.288083791732788
    3. 'float' → logprob: -11.038084030151367
    4. '[' → logprob: -11.413084030151367
    5. ',
' → logprob: -11.788084030151367
    6. ' ,' → logprob: -11.913084030151367
    7. ',int' → logprob: -14.663084030151367
    8. '   ' → logprob: -15.913084030151367
    9. '```' → logprob: -16.288084030151367
    10. ',double' → logprob: -17.038084030151367

Token 2638: ' float' (ID: 4428)
  Prédit: 'float'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'float' → logprob: -0.00033665422233752906
    2. ' float' → logprob: -8.000336647033691
    3. '   ' → logprob: -14.750336647033691
    4. '	float' → logprob: -15.375336647033691
    5. ',float' → logprob: -15.500336647033691
    6. '
' → logprob: -16.250337600708008
    7. '(float' → logprob: -16.375337600708008
    8. '<float' → logprob: -16.750337600708008
    9. '```' → logprob: -17.375337600708008
    10. '...' → logprob: -17.875337600708008

Token 2639: ']]:
' (ID: 183340)
  Prédit: ']:
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']:
' → logprob: -0.013340099714696407
    2. ']]:
' → logprob: -4.513339996337891
    3. ']:' → logprob: -6.138339996337891
    4. ']:
' → logprob: -9.63833999633789
    5. ']:

' → logprob: -10.26333999633789
    6. '):
' → logprob: -11.01333999633789
    7. '>' → logprob: -13.01333999633789
    8. ']' → logprob: -13.13833999633789
    9. ']>' → logprob: -13.13833999633789
    10. ']]' → logprob: -13.26333999633789

Token 2640: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0001017551330733113
    2. '   ' → logprob: -10.500102043151855
    3. '        
' → logprob: -10.750102043151855
    4. '```' → logprob: -10.875102043151855
    5. '
' → logprob: -11.000102043151855
    6. '    
' → logprob: -13.250102043151855
    7. '           ' → logprob: -13.250102043151855
    8. 'n' → logprob: -13.250102043151855
    9. 'def' → logprob: -13.250102043151855
    10. '#' → logprob: -13.625102043151855

Token 2641: ' """
' (ID: 7037)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.013364691287279129
    2. 'pos' → logprob: -4.513364791870117
    3. ' pos' → logprob: -6.888364791870117
    4. 'distance' → logprob: -8.263364791870117
    5. 'current' → logprob: -9.138364791870117
    6. 'face' → logprob: -9.263364791870117
    7. '```' → logprob: -9.388364791870117
    8. 'dist' → logprob: -9.513364791870117
    9. 'p' → logprob: -9.638364791870117
    10. '#' → logprob: -9.763364791870117

Token 2642: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.016988113522529602
    2. 'pos' → logprob: -4.141988277435303
    3. 'distance' → logprob: -8.141987800598145
    4. '   ' → logprob: -9.266987800598145
    5. 'step' → logprob: -9.266987800598145
    6. 'current' → logprob: -9.391987800598145
    7. 'face' → logprob: -9.641987800598145
    8. 'position' → logprob: -10.016987800598145
    9. '#' → logprob: -10.141987800598145
    10. 'p' → logprob: -10.266987800598145

Token 2643: ' Sim' (ID: 7973)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.806911289691925
    2. 'pos' → logprob: -0.931911289691925
    3. ' pos' → logprob: -1.9319112300872803
    4. ' current' → logprob: -5.806911468505859
    5. 'current' → logprob: -6.056911468505859
    6. '#' → logprob: -6.306911468505859
    7. ' position' → logprob: -6.556911468505859
    8. 'position' → logprob: -6.681911468505859
    9. 'distance' → logprob: -7.056911468505859
    10. 'p' → logprob: -7.306911468505859

Token 2644: 'ulate' (ID: 10111)
  Prédit: 'ulate'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ulate' → logprob: -0.0015051016816869378
    2. 'ulates' → logprob: -6.501504898071289
    3. 'ul' → logprob: -13.626504898071289
    4. 'ulating' → logprob: -14.251504898071289
    5. 'ulation' → logprob: -15.376504898071289
    6. '   ' → logprob: -15.501504898071289
    7. 'ult' → logprob: -16.00150489807129
    8. 'plement' → logprob: -16.62650489807129
    9. 'ulated' → logprob: -16.62650489807129
    10. '       ' → logprob: -17.00150489807129

Token 2645: ' the' (ID: 290)
  Prédit: 'the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'the' → logprob: -0.30110979080200195
    2. ' the' → logprob: -1.676109790802002
    3. 'self' → logprob: -3.551109790802002
    4. '(self' → logprob: -3.926109790802002
    5. '       ' → logprob: -4.051109790802002
    6. '   ' → logprob: -5.801109790802002
    7. 'step' → logprob: -6.676109790802002
    8. ' self' → logprob: -7.301109790802002
    9. 'steps' → logprob: -7.426109790802002
    10. 'def' → logprob: -8.301109313964844

Token 2646: ' worm' (ID: 40598)
  Prédit: 'worm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'worm' → logprob: -0.021556954830884933
    2. ' worm' → logprob: -4.396556854248047
    3. 'crawl' → logprob: -5.396556854248047
    4. 'path' → logprob: -6.271556854248047
    5. 'movement' → logprob: -7.271556854248047
    6. 'walk' → logprob: -7.396556854248047
    7. ' movement' → logprob: -8.771556854248047
    8. 'position' → logprob: -9.146556854248047
    9. ' path' → logprob: -9.146556854248047
    10. 'current' → logprob: -9.146556854248047

Token 2647: ' crawling' (ID: 132227)
  Prédit: ''s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''s' → logprob: -0.7861150503158569
    2. '   ' → logprob: -1.411115050315857
    3. ' movement' → logprob: -2.0361151695251465
    4. 'crawl' → logprob: -2.9111151695251465
    5. ' path' → logprob: -3.4111151695251465
    6. ' crawl' → logprob: -3.4111151695251465
    7. 'movement' → logprob: -4.1611151695251465
    8. '_path' → logprob: -4.6611151695251465
    9. 'path' → logprob: -4.9111151695251465
    10. ' crawling' → logprob: -5.5361151695251465

Token 2648: ' on' (ID: 402)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.7325611710548401
    2. '       ' → logprob: -1.2325611114501953
    3. ' on' → logprob: -2.6075611114501953
    4. 'self' → logprob: -2.9825611114501953
    5. ' step' → logprob: -3.9825611114501953
    6. '   ' → logprob: -4.607561111450195
    7. 'ac' → logprob: -4.857561111450195
    8. ' along' → logprob: -4.857561111450195
    9. 'on' → logprob: -4.982561111450195
    10. 'step' → logprob: -5.232561111450195

Token 2649: ' the' (ID: 290)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.4381735324859619
    2. 'the' → logprob: -1.313173532485962
    3. ' the' → logprob: -2.563173532485962
    4. ' self' → logprob: -5.063173294067383
    5. '       ' → logprob: -6.938173294067383
    6. ')' → logprob: -6.938173294067383
    7. '(self' → logprob: -8.438173294067383
    8. 'surface' → logprob: -9.313173294067383
    9. '#' → logprob: -9.563173294067383
    10. ' surface' → logprob: -10.563173294067383

Token 2650: ' tetra' (ID: 176775)
  Prédit: 'tet'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tet' → logprob: -0.6846194267272949
    2. 'surface' → logprob: -1.684619426727295
    3. ' tetra' → logprob: -1.934619426727295
    4. ' surface' → logprob: -2.059619426727295
    5. 'self' → logprob: -3.434619426727295
    6. ' self' → logprob: -5.934619426727295
    7. 'face' → logprob: -6.434619426727295
    8. ' face' → logprob: -7.684619426727295
    9. '   ' → logprob: -8.872119903564453
    10. ' regular' → logprob: -9.309619903564453

Token 2651: 'hedron' (ID: 144037)
  Prédit: 'hedron'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'hedron' → logprob: -1.4974866644479334e-05
    2. 'hed' → logprob: -11.625015258789062
    3. '   ' → logprob: -12.500015258789062
    4. 'ed' → logprob: -14.125015258789062
    5. '#' → logprob: -15.125015258789062
    6. 'h' → logprob: -15.375015258789062
    7. 'her' → logprob: -15.500015258789062
    8. '
' → logprob: -15.625015258789062
    9. 'hedral' → logprob: -15.625015258789062
    10. ')' → logprob: -15.875015258789062

Token 2652: ' surface' (ID: 9753)
  Prédit: ' surface'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' surface' → logprob: -0.06451649963855743
    2. 'surface' → logprob: -2.939516544342041
    3. '   ' → logprob: -4.939516544342041
    4. '       ' → logprob: -6.564516544342041
    5. ' for' → logprob: -8.439516067504883
    6. ' starting' → logprob: -8.689516067504883
    7. ',' → logprob: -9.064516067504883
    8. '_surface' → logprob: -9.564516067504883
    9. ''s' → logprob: -9.689516067504883
    10. '(surface' → logprob: -10.064516067504883

Token 2653: ' starting' (ID: 8601)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.08271560817956924
    2. ',' → logprob: -2.7077155113220215
    3. '(self' → logprob: -5.4577155113220215
    4. ' until' → logprob: -5.5827155113220215
    5. ' for' → logprob: -6.4577155113220215
    6. '.' → logprob: -7.2077155113220215
    7. '   ' → logprob: -7.4577155113220215
    8. ':
' → logprob: -8.58271598815918
    9. '.
' → logprob: -8.83271598815918
    10. ' starting' → logprob: -8.83271598815918

Token 2654: ' at' (ID: 540)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.011952287517488003
    2. '       ' → logprob: -5.0119524002075195
    3. 'with' → logprob: -6.2619524002075195
    4. '   ' → logprob: -6.6369524002075195
    5. 'at' → logprob: -7.6369524002075195
    6. '=' → logprob: -7.7619524002075195
    7. '_' → logprob: -8.38695240020752
    8. 'self' → logprob: -8.51195240020752
    9. ' from' → logprob: -8.76195240020752
    10. '```' → logprob: -9.01195240020752

Token 2655: ' vertex' (ID: 25363)
  Prédit: 'vertex'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'vertex' → logprob: -0.004269169643521309
    2. ' vertex' → logprob: -5.504269123077393
    3. 'self' → logprob: -9.12926959991455
    4. 'Vertex' → logprob: -10.62926959991455
    5. 'the' → logprob: -11.12926959991455
    6. '(vertex' → logprob: -11.12926959991455
    7. 'position' → logprob: -11.50426959991455
    8. '   ' → logprob: -12.50426959991455
    9. '_vertex' → logprob: -12.75426959991455
    10. 'A' → logprob: -12.75426959991455

Token 2656: ' A' (ID: 355)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.0011858227662742138
    2. ' A' → logprob: -6.751185894012451
    3. 'self' → logprob: -12.126185417175293
    4. ')' → logprob: -12.626185417175293
    5. '(self' → logprob: -12.626185417175293
    6. '   ' → logprob: -13.626185417175293
    7. '       ' → logprob: -14.001185417175293
    8. ',' → logprob: -14.876185417175293
    9. '
' → logprob: -15.251185417175293
    10. '```' → logprob: -15.876185417175293

Token 2657: ' on' (ID: 402)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4982309341430664
    2. ',' → logprob: -1.3732309341430664
    3. ' and' → logprob: -2.3732309341430664
    4. ' with' → logprob: -3.3732309341430664
    5. 'and' → logprob: -5.373230934143066
    6. '.' → logprob: -6.248230934143066
    7. 'with' → logprob: -6.248230934143066
    8. '
' → logprob: -7.873230934143066
    9. ' on' → logprob: -7.998230934143066
    10. ' in' → logprob: -7.998230934143066

Token 2658: ' initial' (ID: 4871)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0773729756474495
    2. ' self' → logprob: -2.9523730278015137
    3. ' the' → logprob: -4.452373027801514
    4. 'the' → logprob: -4.577373027801514
    5. ' its' → logprob: -8.952372550964355
    6. ' a' → logprob: -10.202372550964355
    7. '(self' → logprob: -10.702372550964355
    8. ')' → logprob: -10.952372550964355
    9. 'face' → logprob: -10.952372550964355
    10. 'a' → logprob: -11.077372550964355

Token 2659: ' face' (ID: 4950)
  Prédit: 'face'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'face' → logprob: -0.038766514509916306
    2. '_face' → logprob: -3.913766622543335
    3. ' face' → logprob: -4.038766384124756
    4. 'edge' → logprob: -8.538766860961914
    5. '   ' → logprob: -9.038766860961914
    6. 'self' → logprob: -10.038766860961914
    7. '       ' → logprob: -10.788766860961914
    8. ' edge' → logprob: -11.038766860961914
    9. '
' → logprob: -11.413766860961914
    10. '_edge' → logprob: -11.538766860961914

Token 2660: ',
' (ID: 412)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4941689968109131
    2. ' and' → logprob: -1.994168996810913
    3. ' with' → logprob: -2.119168996810913
    4. ',' → logprob: -2.369168996810913
    5. '(self' → logprob: -4.744169235229492
    6. 'and' → logprob: -4.744169235229492
    7. '(' → logprob: -5.119169235229492
    8. ' (' → logprob: -5.119169235229492
    9. 'with' → logprob: -5.119169235229492
    10. '.' → logprob: -6.619169235229492

Token 2661: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0022712242789566517
    2. '        ' → logprob: -7.1272711753845215
    3. '#' → logprob: -8.50227165222168
    4. '           ' → logprob: -8.87727165222168
    5. ' and' → logprob: -9.00227165222168
    6. '   ' → logprob: -9.00227165222168
    7. ' continuing' → logprob: -9.00227165222168
    8. ' with' → logprob: -9.37727165222168
    9. '```' → logprob: -9.50227165222168
    10. 'continu' → logprob: -9.62727165222168

Token 2662: ' with' (ID: 483)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.010595095343887806
    2. ' moving' → logprob: -5.635595321655273
    3. 'moving' → logprob: -5.760595321655273
    4. '        ' → logprob: -7.135595321655273
    5. '   ' → logprob: -7.385595321655273
    6. 'continu' → logprob: -7.510595321655273
    7. ' continuing' → logprob: -8.135595321655273
    8. ' until' → logprob: -8.635595321655273
    9. '           ' → logprob: -8.760595321655273
    10. '#' → logprob: -9.010595321655273

Token 2663: ' initial' (ID: 4871)
  Prédit: 'trail'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'trail' → logprob: -1.0723809003829956
    2. 'self' → logprob: -1.6973809003829956
    3. 'initial' → logprob: -2.197381019592285
    4. 'the' → logprob: -2.447381019592285
    5. 'given' → logprob: -2.697381019592285
    6. 'a' → logprob: -3.072381019592285
    7. 'length' → logprob: -3.197381019592285
    8. 'direction' → logprob: -3.322381019592285
    9. 'distance' → logprob: -3.447381019592285
    10. 'unit' → logprob: -3.447381019592285

Token 2664: ' ' (ID: 220)
  Prédit: 'direction'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'direction' → logprob: -0.6134033799171448
    2. '_direction' → logprob: -1.3634033203125
    3. ' direction' → logprob: -1.6134033203125
    4. 'position' → logprob: -5.8634033203125
    5. '_position' → logprob: -7.9884033203125
    6. ' position' → logprob: -9.2384033203125
    7. '   ' → logprob: -10.2384033203125
    8. 'velocity' → logprob: -10.6134033203125
    9. ')' → logprob: -10.8634033203125
    10. 'def' → logprob: -10.8634033203125

Token 2665: '3' (ID: 18)
  Prédit: 'direction'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'direction' → logprob: -0.004030314274132252
    2. '_direction' → logprob: -5.629030227661133
    3. 'position' → logprob: -8.004030227661133
    4. ' direction' → logprob: -9.504030227661133
    5. '
' → logprob: -12.004030227661133
    6. '#' → logprob: -12.504030227661133
    7. 'self' → logprob: -13.129030227661133
    8. '   ' → logprob: -13.129030227661133
    9. '_position' → logprob: -13.379030227661133
    10. 'def' → logprob: -13.754030227661133

Token 2666: 'D' (ID: 35)
  Prédit: 'D'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'D' → logprob: -0.6925792694091797
    2. '_d' → logprob: -1.0675792694091797
    3. '_direction' → logprob: -2.8175792694091797
    4. 'd' → logprob: -3.0675792694091797
    5. '   ' → logprob: -3.3175792694091797
    6. '_' → logprob: -5.56757926940918
    7. '       ' → logprob: -5.81757926940918
    8. '#' → logprob: -6.06757926940918
    9. '_dim' → logprob: -7.31757926940918
    10. 'def' → logprob: -7.56757926940918

Token 2667: ' direction' (ID: 9262)
  Prédit: 'direction'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'direction' → logprob: -0.04668465629220009
    2. ' direction' → logprob: -3.296684741973877
    3. '_direction' → logprob: -4.796684741973877
    4. 'vector' → logprob: -8.296684265136719
    5. 'position' → logprob: -9.921684265136719
    6. ' vector' → logprob: -11.421684265136719
    7. '_vector' → logprob: -11.671684265136719
    8. 'velocity' → logprob: -12.171684265136719
    9. 'movement' → logprob: -12.171684265136719
    10. '
' → logprob: -12.671684265136719

Token 2668: ' vector' (ID: 9727)
  Prédit: 'vector'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'vector' → logprob: -1.222581148147583
    2. ' vector' → logprob: -1.597581148147583
    3. '       ' → logprob: -1.847581148147583
    4. ' and' → logprob: -2.472581148147583
    5. 'and' → logprob: -2.597581148147583
    6. ',' → logprob: -2.722581148147583
    7. '   ' → logprob: -3.847581148147583
    8. '.' → logprob: -3.972581148147583
    9. ' along' → logprob: -4.347580909729004
    10. ' as' → logprob: -4.722580909729004

Token 2669: '.

' (ID: 364)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.9487212300300598
    2. ' and' → logprob: -1.698721170425415
    3. '       ' → logprob: -1.948721170425415
    4. ' that' → logprob: -2.823721170425415
    5. '.' → logprob: -3.073721170425415
    6. ' until' → logprob: -3.448721170425415
    7. ' pointing' → logprob: -3.948721170425415
    8. '(self' → logprob: -3.948721170425415
    9. ',
' → logprob: -4.073721408843994
    10. ' self' → logprob: -4.573721408843994

Token 2670: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0005803157109767199
    2. ' current' → logprob: -8.000580787658691
    3. '```' → logprob: -9.250580787658691
    4. ' direction' → logprob: -10.125580787658691
    5. '   ' → logprob: -10.625580787658691
    6. 'current' → logprob: -10.750580787658691
    7. '        
' → logprob: -11.375580787658691
    8. 'pos' → logprob: -11.500580787658691
    9. ' pos' → logprob: -11.500580787658691
    10. ' position' → logprob: -12.000580787658691

Token 2671: ' The' (ID: 623)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pos' → logprob: -0.5357165336608887
    2. '       ' → logprob: -0.9107165336608887
    3. '#' → logprob: -6.160716533660889
    4. 'distance' → logprob: -6.160716533660889
    5. 'direction' → logprob: -6.285716533660889
    6. 'current' → logprob: -6.410716533660889
    7. 'position' → logprob: -7.035716533660889
    8. '   ' → logprob: -7.285716533660889
    9. 'd' → logprob: -7.535716533660889
    10. 'step' → logprob: -7.535716533660889

Token 2672: ' worm' (ID: 40598)
  Prédit: ' worm'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' worm' → logprob: -0.22889697551727295
    2. 'worm' → logprob: -2.6038970947265625
    3. ' simulate' → logprob: -3.3538970947265625
    4. ' current' → logprob: -3.7288970947265625
    5. 'simulate' → logprob: -4.2288970947265625
    6. ' def' → logprob: -4.3538970947265625
    7. ' code' → logprob: -4.3538970947265625
    8. ' ' → logprob: -5.3538970947265625
    9. '
' → logprob: -5.3538970947265625
    10. 'def' → logprob: -5.6038970947265625

Token 2673: ' moves' (ID: 19523)
  Prédit: ' moves'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' moves' → logprob: -0.15845757722854614
    2. ' continues' → logprob: -2.2834575176239014
    3. '_moves' → logprob: -4.7834577560424805
    4. '_position' → logprob: -5.2834577560424805
    5. '   ' → logprob: -5.5334577560424805
    6. '       ' → logprob: -5.7834577560424805
    7. 'moves' → logprob: -5.7834577560424805
    8. ' steps' → logprob: -6.5334577560424805
    9. ' travels' → logprob: -6.5334577560424805
    10. ' starts' → logprob: -6.5334577560424805

Token 2674: ' straight' (ID: 10230)
  Prédit: ' forward'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' forward' → logprob: -0.5672309994697571
    2. ' along' → logprob: -1.8172309398651123
    3. 'forward' → logprob: -2.3172309398651123
    4. ' in' → logprob: -2.9422309398651123
    5. ' by' → logprob: -3.4422309398651123
    6. 'along' → logprob: -3.8172309398651123
    7. 'in' → logprob: -4.067231178283691
    8. '_forward' → logprob: -4.442231178283691
    9. 'by' → logprob: -4.692231178283691
    10. 'self' → logprob: -5.317231178283691

Token 2675: ' ahead' (ID: 12207)
  Prédit: ' by'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' by' → logprob: -0.8424233198165894
    2. '       ' → logprob: -1.8424233198165894
    3. ' on' → logprob: -2.717423439025879
    4. 'forward' → logprob: -2.842423439025879
    5. '_forward' → logprob: -3.092423439025879
    6. ' forward' → logprob: -3.092423439025879
    7. ' along' → logprob: -3.342423439025879
    8. ',' → logprob: -3.967423439025879
    9. '_line' → logprob: -3.967423439025879
    10. 'by' → logprob: -4.217423439025879

Token 2676: ' on' (ID: 402)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -1.0512789487838745
    2. ' by' → logprob: -1.4262789487838745
    3. ' until' → logprob: -1.8012789487838745
    4. ',' → logprob: -2.051279067993164
    5. '.' → logprob: -3.426279067993164
    6. '       ' → logprob: -3.926279067993164
    7. 'for' → logprob: -4.176279067993164
    8. ' on' → logprob: -4.551279067993164
    9. ' in' → logprob: -4.926279067993164
    10. ' while' → logprob: -5.426279067993164

Token 2677: ' the' (ID: 290)
  Prédit: 'the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'the' → logprob: -0.4361487329006195
    2. ' the' → logprob: -1.186148762702942
    3. 'self' → logprob: -3.1861486434936523
    4. ' its' → logprob: -5.686148643493652
    5. ' self' → logprob: -5.936148643493652
    6. 'its' → logprob: -8.311148643493652
    7. ')' → logprob: -9.436148643493652
    8. ' each' → logprob: -9.436148643493652
    9. 'each' → logprob: -9.436148643493652
    10. 'face' → logprob: -9.686148643493652

Token 2678: ' current' (ID: 2208)
  Prédit: ' current'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' current' → logprob: -1.1308940649032593
    2. 'current' → logprob: -1.7558940649032593
    3. 'face' → logprob: -1.7558940649032593
    4. 'self' → logprob: -2.005894184112549
    5. ' face' → logprob: -2.005894184112549
    6. ' surface' → logprob: -3.630894184112549
    7. 'surface' → logprob: -3.755894184112549
    8. ' self' → logprob: -4.880894184112549
    9. '_face' → logprob: -6.880894184112549
    10. ' tetra' → logprob: -7.130894184112549

Token 2679: ' face' (ID: 4950)
  Prédit: ' face'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' face' → logprob: -0.32344311475753784
    2. '_face' → logprob: -1.6984431743621826
    3. ' line' → logprob: -2.9484431743621826
    4. 'face' → logprob: -3.3234431743621826
    5. '   ' → logprob: -6.1984429359436035
    6. 'line' → logprob: -6.9484429359436035
    7. ' _' → logprob: -7.1984429359436035
    8. '_line' → logprob: -7.4484429359436035
    9. '_' → logprob: -8.198443412780762
    10. ' ' → logprob: -9.323443412780762

Token 2680: ' until' (ID: 4609)
  Prédit: ' until'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' until' → logprob: -0.20770172774791718
    2. ',' → logprob: -2.3327016830444336
    3. '       ' → logprob: -3.3327016830444336
    4. ' for' → logprob: -3.5827016830444336
    5. 'until' → logprob: -4.707701683044434
    6. '.' → logprob: -4.832701683044434
    7. ' by' → logprob: -5.457701683044434
    8. 'for' → logprob: -6.832701683044434
    9. ' with' → logprob: -6.832701683044434
    10. ' while' → logprob: -7.207701683044434

Token 2681: ' it' (ID: 480)
  Prédit: 'it'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'it' → logprob: -0.07951369136571884
    2. ' it' → logprob: -3.0795137882232666
    3. 'the' → logprob: -4.9545135498046875
    4. 're' → logprob: -4.9545135498046875
    5. 'an' → logprob: -5.2045135498046875
    6. '   ' → logprob: -5.4545135498046875
    7. 'either' → logprob: -6.2045135498046875
    8. 'enc' → logprob: -7.2045135498046875
    9. ' the' → logprob: -7.4545135498046875
    10. 'edge' → logprob: -7.7045135498046875

Token 2682: ' hits' (ID: 21571)
  Prédit: 're'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 're' → logprob: -0.2744262218475342
    2. 'hits' → logprob: -1.6494262218475342
    3. 'cross' → logprob: -3.649426221847534
    4. 'enc' → logprob: -4.899426460266113
    5. ' reaches' → logprob: -5.024426460266113
    6. ' hits' → logprob: -6.149426460266113
    7. 'touch' → logprob: -6.774426460266113
    8. ' crosses' → logprob: -6.774426460266113
    9. 'inter' → logprob: -7.274426460266113
    10. 'me' → logprob: -7.524426460266113

Token 2683: ' an' (ID: 448)
  Prédit: ' an'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' an' → logprob: -0.36278244853019714
    2. 'an' → logprob: -1.3627824783325195
    3. ' the' → logprob: -3.2377824783325195
    4. 'the' → logprob: -4.7377824783325195
    5. '   ' → logprob: -8.98778247833252
    6. ' one' → logprob: -9.86278247833252
    7. 'a' → logprob: -9.98778247833252
    8. ' a' → logprob: -10.86278247833252
    9. '	an' → logprob: -10.86278247833252
    10. ' ' → logprob: -11.98778247833252

Token 2684: ' edge' (ID: 11165)
  Prédit: ' edge'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' edge' → logprob: -0.06252393871545792
    2. 'edge' → logprob: -2.81252384185791
    3. '_edge' → logprob: -8.06252384185791
    4. ' edges' → logprob: -9.43752384185791
    5. ' Edge' → logprob: -9.93752384185791
    6. 'Edge' → logprob: -10.06252384185791
    7. 'edges' → logprob: -11.31252384185791
    8. 'e' → logprob: -11.43752384185791
    9. '=edge' → logprob: -11.68752384185791
    10. '(edge' → logprob: -11.93752384185791

Token 2685: ',
' (ID: 412)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.3784732520580292
    2. '.' → logprob: -1.6284732818603516
    3. ' or' → logprob: -2.6284732818603516
    4. ',
' → logprob: -4.503473281860352
    5. ' and' → logprob: -4.753473281860352
    6. ' (' → logprob: -5.253473281860352
    7. '       ' → logprob: -5.378473281860352
    8. ' ,' → logprob: -5.628473281860352
    9. ' of' → logprob: -6.128473281860352
    10. '   ' → logprob: -6.378473281860352

Token 2686: '       ' (ID: 309)
  Prédit: ' then'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' then' → logprob: -0.0666763186454773
    2. '       ' → logprob: -3.191676378250122
    3. '#' → logprob: -4.066676139831543
    4. 'then' → logprob: -5.441676139831543
    5. ' and' → logprob: -8.066676139831543
    6. '           ' → logprob: -8.066676139831543
    7. ',' → logprob: -8.191676139831543
    8. '.' → logprob: -8.691676139831543
    9. ' #' → logprob: -9.191676139831543
    10. '   ' → logprob: -9.191676139831543

Token 2687: ' then' (ID: 1815)
  Prédit: ' then'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' then' → logprob: -0.3268560767173767
    2. '       ' → logprob: -1.3268561363220215
    3. '#' → logprob: -5.5768561363220215
    4. 'then' (adapté à ' then') → logprob: -5.7018561363220215
    5. ' continuing' → logprob: -6.7018561363220215
    6. ',' → logprob: -6.8268561363220215
    7. ' and' → logprob: -6.9518561363220215
    8. '   ' → logprob: -7.2018561363220215
    9. ' continues' → logprob: -7.3268561363220215
    10. '           ' → logprob: -7.8268561363220215

Token 2688: ' crosses' (ID: 95853)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -1.724269151687622
    2. ' it' → logprob: -1.724269151687622
    3. '       ' → logprob: -2.099269151687622
    4. ' the' → logprob: -2.349269151687622
    5. ' crosses' → logprob: -2.599269151687622
    6. '   ' → logprob: -2.974269151687622
    7. 'the' → logprob: -3.099269151687622
    8. ' turns' → logprob: -3.474269151687622
    9. ' def' → logprob: -3.724269151687622
    10. 'it' → logprob: -3.974269151687622

Token 2689: ' to' (ID: 316)
  Prédit: ' that'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' that' → logprob: -0.6460670828819275
    2. ' the' → logprob: -0.8960670828819275
    3. 'that' → logprob: -3.2710671424865723
    4. 'the' → logprob: -4.021067142486572
    5. ' to' → logprob: -4.896067142486572
    6. ' over' → logprob: -6.521067142486572
    7. 'to' → logprob: -7.146067142486572
    8. ' an' → logprob: -7.146067142486572
    9. ' it' → logprob: -7.396067142486572
    10. ' into' → logprob: -8.646066665649414

Token 2690: ' the' (ID: 290)
  Prédit: 'the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'the' → logprob: -0.044242627918720245
    2. ' the' → logprob: -3.2942426204681396
    3. 'another' → logprob: -5.419242858886719
    4. 'adj' → logprob: -6.794242858886719
    5. 'next' → logprob: -8.294242858886719
    6. ' another' → logprob: -9.044242858886719
    7. 'an' → logprob: -9.294242858886719
    8. ' adjacent' → logprob: -9.544242858886719
    9. 'neighbor' → logprob: -10.044242858886719
    10. 'a' → logprob: -10.794242858886719

Token 2691: ' adjacent' (ID: 39069)
  Prédit: 'adj'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'adj' → logprob: -0.2591790556907654
    2. ' adjacent' → logprob: -2.25917911529541
    3. 'next' → logprob: -2.75917911529541
    4. ' next' → logprob: -3.13417911529541
    5. 'neighbor' → logprob: -4.50917911529541
    6. 'other' → logprob: -5.50917911529541
    7. ' neighboring' → logprob: -6.75917911529541
    8. ' other' → logprob: -7.50917911529541
    9. ' neighbor' → logprob: -10.25917911529541
    10. 'new' → logprob: -10.75917911529541

Token 2692: ' face' (ID: 4950)
  Prédit: ' face'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' face' → logprob: -0.4890459477901459
    2. 'face' → logprob: -0.9890459775924683
    3. ' edge' → logprob: -4.989046096801758
    4. '_face' → logprob: -5.114046096801758
    5. 'edge' → logprob: -6.239046096801758
    6. '_edge' → logprob: -9.739046096801758
    7. '_' → logprob: -11.614046096801758
    8. '(face' → logprob: -12.989046096801758
    9. '```' → logprob: -13.114046096801758
    10. '   ' → logprob: -13.489046096801758

Token 2693: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.2661338448524475
    2. ' and' → logprob: -1.7661337852478027
    3. '       ' → logprob: -3.2661337852478027
    4. 'and' → logprob: -4.641133785247803
    5. '.' → logprob: -5.391133785247803
    6. ' by' → logprob: -6.016133785247803
    7. ',
' → logprob: -6.141133785247803
    8. ' while' → logprob: -6.516133785247803
    9. ' in' → logprob: -6.766133785247803
    10. ' with' → logprob: -7.016133785247803

Token 2694: ' preserving' (ID: 74564)
  Prédit: ' continuing'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' continuing' → logprob: -0.35896092653274536
    2. ' updates' → logprob: -2.9839608669281006
    3. ' continues' → logprob: -2.9839608669281006
    4. ' and' → logprob: -3.1089608669281006
    5. '#' → logprob: -3.2339608669281006
    6. 'continu' → logprob: -3.9839608669281006
    7. ' calculates' → logprob: -4.10896110534668
    8. ' updating' → logprob: -4.23396110534668
    9. '       ' → logprob: -4.35896110534668
    10. '           ' → logprob: -4.98396110534668

Token 2695: ' the' (ID: 290)
  Prédit: 'the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'the' → logprob: -0.27781787514686584
    2. 'direction' → logprob: -2.027817964553833
    3. 'its' → logprob: -2.652817964553833
    4. 'angle' → logprob: -3.777817964553833
    5. ' the' → logprob: -5.527817726135254
    6. ' its' → logprob: -5.652817726135254
    7. 't' → logprob: -6.152817726135254
    8. 'continu' → logprob: -6.652817726135254
    9. 'orientation' → logprob: -6.902817726135254
    10. '   ' → logprob: -6.902817726135254

Token 2696: ' angle' (ID: 16538)
  Prédit: 'direction'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'direction' → logprob: -0.16418100893497467
    2. 'same' → logprob: -3.0391809940338135
    3. 'angle' → logprob: -3.5391809940338135
    4. ' direction' → logprob: -3.9141809940338135
    5. 'vector' → logprob: -4.289181232452393
    6. 'worm' → logprob: -5.039181232452393
    7. 'component' → logprob: -5.289181232452393
    8. 'face' → logprob: -5.539181232452393
    9. '#' → logprob: -5.664181232452393
    10. 'orientation' → logprob: -6.039181232452393

Token 2697: ' of' (ID: 328)
  Prédit: '_between'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_between' → logprob: -1.429397702217102
    2. '_with' → logprob: -1.929397702217102
    3. '       ' → logprob: -2.0543975830078125
    4. ' between' → logprob: -2.8043975830078125
    5. '_to' → logprob: -2.8043975830078125
    6. '    ' → logprob: -2.8043975830078125
    7. '_deg' → logprob: -2.9293975830078125
    8. ' of' → logprob: -3.1793975830078125
    9. '   ' → logprob: -3.1793975830078125
    10. '        ' → logprob: -3.6793975830078125

Token 2698: ' crossing' (ID: 50946)
  Prédit: 'inc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'inc' → logprob: -0.004711595829576254
    2. ' incidence' → logprob: -5.504711627960205
    3. 'movement' → logprob: -7.879711627960205
    4. 'direction' → logprob: -9.504711151123047
    5. 'incident' → logprob: -10.004711151123047
    6. 'intersection' → logprob: -10.129711151123047
    7. 'reflection' → logprob: -10.754711151123047
    8. 'departure' → logprob: -11.504711151123047
    9. 'incoming' → logprob: -11.754711151123047
    10. '#' → logprob: -11.879711151123047

Token 2699: ' relative' (ID: 15001)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.005539781413972378
    2. ',' → logprob: -5.880539894104004
    3. ':' → logprob: -6.755539894104004
    4. '   ' → logprob: -7.755539894104004
    5. '.' → logprob: -8.130539894104004
    6. ' and' → logprob: -8.380539894104004
    7. ' at' → logprob: -9.130539894104004
    8. ' with' → logprob: -9.380539894104004
    9. '```' → logprob: -9.755539894104004
    10. '(' → logprob: -10.005539894104004

Token 2700: ' to' (ID: 316)
  Prédit: 'to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'to' → logprob: -0.029124397784471512
    2. ' to' → logprob: -3.9041244983673096
    3. 'the' → logprob: -4.7791242599487305
    4. ' the' → logprob: -9.40412425994873
    5. '#' → logprob: -10.77912425994873
    6. '_to' → logprob: -11.77912425994873
    7. '   ' → logprob: -11.90412425994873
    8. '<|end|>' → logprob: -11.90412425994873
    9. '```' → logprob: -12.52912425994873
    10. 'edge' → logprob: -13.15412425994873

Token 2701: ' the' (ID: 290)
  Prédit: 'the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'the' → logprob: -0.04994218796491623
    2. ' the' → logprob: -3.1749422550201416
    3. 'that' → logprob: -5.1749420166015625
    4. ' that' → logprob: -7.2999420166015625
    5. 'edge' → logprob: -7.7999420166015625
    6. ' edge' → logprob: -9.674942016601562
    7. 'edges' → logprob: -10.049942016601562
    8. 'current' → logprob: -10.924942016601562
    9. '<|end|>' → logprob: -11.299942016601562
    10. ' edges' → logprob: -11.299942016601562

Token 2702: ' crossed' (ID: 47928)
  Prédit: 'edge'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'edge' → logprob: -0.049924612045288086
    2. ' edge' → logprob: -3.049924612045288
    3. 'current' → logprob: -7.924924850463867
    4. 'previous' → logprob: -8.549924850463867
    5. 'new' → logprob: -9.049924850463867
    6. 'boundary' → logprob: -9.174924850463867
    7. 'incoming' → logprob: -9.174924850463867
    8. 'cross' → logprob: -9.424924850463867
    9. 'edges' → logprob: -9.549924850463867
    10. 'normal' → logprob: -9.674924850463867

Token 2703: ' edge' (ID: 11165)
  Prédit: ' edge'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' edge' → logprob: -0.3869914412498474
    2. 'edge' → logprob: -1.1369915008544922
    3. '_edge' → logprob: -9.886991500854492
    4. 'Edge' → logprob: -10.386991500854492
    5. 'edges' → logprob: -11.136991500854492
    6. ' edges' → logprob: -11.761991500854492
    7. '(edge' → logprob: -12.511991500854492
    8. '-edge' → logprob: -12.761991500854492
    9. 'face' → logprob: -13.011991500854492
    10. '   ' → logprob: -13.136991500854492

Token 2704: '.

' (ID: 364)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.15848200023174286
    2. ',' → logprob: -2.158482074737549
    3. ' and' → logprob: -4.283482074737549
    4. '.' → logprob: -4.783482074737549
    5. ' with' → logprob: -5.158482074737549
    6. ' in' → logprob: -7.533482074737549
    7. ':' → logprob: -7.658482074737549
    8. 'and' → logprob: -7.908482074737549
    9. '   ' → logprob: -8.53348159790039
    10. 'with' → logprob: -8.53348159790039

Token 2705: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00011474833445390686
    2. '   ' → logprob: -10.375114440917969
    3. '        
' → logprob: -10.500114440917969
    4. '           ' → logprob: -11.625114440917969
    5. '```' → logprob: -11.625114440917969
    6. ',' → logprob: -11.750114440917969
    7. '        ' → logprob: -12.500114440917969
    8. '#' → logprob: -12.625114440917969
    9. ')' → logprob: -12.875114440917969
    10. '
' → logprob: -13.125114440917969

Token 2706: ' The' (ID: 623)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.17910738289356232
    2. ' current' → logprob: -3.429107427597046
    3. ' pos' → logprob: -3.429107427597046
    4. 'pos' → logprob: -3.679107427597046
    5. 'current' → logprob: -4.054107189178467
    6. ' position' → logprob: -4.304107189178467
    7. '#' → logprob: -4.804107189178467
    8. 'position' → logprob: -5.304107189178467
    9. ' direction' → logprob: -5.429107189178467
    10. '
' → logprob: -5.429107189178467

Token 2707: ' worm' (ID: 40598)
  Prédit: ' def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' def' → logprob: -2.0652360916137695
    2. '   ' → logprob: -2.3152360916137695
    3. 'def' → logprob: -2.3152360916137695
    4. ' current' → logprob: -2.4402360916137695
    5. 'distance' → logprob: -2.5652360916137695
    6. 'worm' → logprob: -2.5652360916137695
    7. ' worm' → logprob: -2.8152360916137695
    8. 'current' → logprob: -3.0652360916137695
    9. '       ' → logprob: -3.3152360916137695
    10. 'position' → logprob: -3.3152360916137695

Token 2708: ' stops' (ID: 29924)
  Prédit: ' moves'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' moves' → logprob: -0.5539350509643555
    2. ' continues' → logprob: -1.4289350509643555
    3. '   ' → logprob: -2.6789350509643555
    4. ''s' → logprob: -3.4289350509643555
    5. '_moves' → logprob: -3.5539350509643555
    6. 'moves' → logprob: -5.0539350509643555
    7. '       ' → logprob: -5.1789350509643555
    8. '_position' → logprob: -5.3039350509643555
    9. '```' → logprob: -5.4289350509643555
    10. 's' → logprob: -5.5539350509643555

Token 2709: ' after' (ID: 1934)
  Prédit: ' when'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' when' → logprob: -0.7414706945419312
    2. '.' → logprob: -1.4914706945419312
    3. ' at' → logprob: -2.6164708137512207
    4. '(' → logprob: -3.3664708137512207
    5. ' after' → logprob: -3.3664708137512207
    6. 'when' → logprob: -3.3664708137512207
    7. '_' → logprob: -3.6164708137512207
    8. '()' → logprob: -3.7414708137512207
    9. '   ' → logprob: -3.8664708137512207
    10. ' upon' → logprob: -4.741470813751221

Token 2710: ' travelling' (ID: 42305)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.07922650873661041
    2. ' self' → logprob: -2.579226493835449
    3. ' completing' → logprob: -8.95422649383545
    4. ' reaching' → logprob: -9.20422649383545
    5. 're' → logprob: -9.82922649383545
    6. '(self' → logprob: -10.82922649383545
    7. '   ' → logprob: -11.70422649383545
    8. ' crossing' → logprob: -12.45422649383545
    9. '	self' → logprob: -12.57922649383545
    10. 'tr' → logprob: -12.57922649383545

Token 2711: ' trail' (ID: 12761)
  Prédit: ' the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' the' → logprob: -0.6021901369094849
    2. ' self' → logprob: -1.1021901369094849
    3. 'self' → logprob: -2.3521900177001953
    4. 'the' → logprob: -4.102190017700195
    5. ' one' → logprob: -5.352190017700195
    6. ' exactly' → logprob: -6.852190017700195
    7. ' a' → logprob: -7.102190017700195
    8. ' ' → logprob: -7.977190017700195
    9. '   ' → logprob: -8.102190017700195
    10. '<|end|>' → logprob: -8.602190017700195

Token 2712: '_length' (ID: 11514)
  Prédit: '_length'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_length' → logprob: -0.0013360745506361127
    2. '_' → logprob: -6.751336097717285
    3. '_l' → logprob: -9.126336097717285
    4. ' _' → logprob: -10.876336097717285
    5. '   ' → logprob: -11.251336097717285
    6. '_len' → logprob: -11.501336097717285
    7. '       ' → logprob: -12.376336097717285
    8. '_
' → logprob: -13.126336097717285
    9. 'length' → logprob: -13.376336097717285
    10. '_le' → logprob: -13.501336097717285

Token 2713: ' units' (ID: 13306)
  Prédit: 'units'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'units' → logprob: -0.7757514715194702
    2. ' units' → logprob: -1.6507514715194702
    3. 'steps' → logprob: -2.6507515907287598
    4. ' steps' → logprob: -2.9007515907287598
    5. '_units' → logprob: -3.2757515907287598
    6. '```' → logprob: -3.4007515907287598
    7. '
' → logprob: -3.7757515907287598
    8. '_steps' → logprob: -4.02575159072876
    9. ' *' → logprob: -4.15075159072876
    10. ')' → logprob: -4.40075159072876

Token 2714: ' along' (ID: 4251)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.9172197580337524
    2. ':' → logprob: -1.1672197580337524
    3. '       ' → logprob: -1.7922197580337524
    4. ',' → logprob: -3.292219638824463
    5. ' or' → logprob: -3.792219638824463
    6. ' on' → logprob: -4.042219638824463
    7. '   ' → logprob: -4.167219638824463
    8. ' along' → logprob: -5.292219638824463
    9. ' of' → logprob: -5.542219638824463
    10. ' and' → logprob: -5.667219638824463

Token 2715: ' the' (ID: 290)
  Prédit: 'the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'the' → logprob: -0.1343366801738739
    2. ' the' → logprob: -2.3843367099761963
    3. ' its' → logprob: -3.8843367099761963
    4. 'its' → logprob: -4.884336471557617
    5. 'self' → logprob: -5.259336471557617
    6. '   ' → logprob: -9.634336471557617
    7. ' self' → logprob: -9.634336471557617
    8. '       ' → logprob: -10.509336471557617
    9. 'each' → logprob: -11.009336471557617
    10. 'edges' → logprob: -11.384336471557617

Token 2716: ' surface' (ID: 9753)
  Prédit: 'surface'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'surface' → logprob: -0.49570226669311523
    2. ' surface' → logprob: -1.4957022666931152
    3. 'path' → logprob: -2.8707022666931152
    4. ' path' → logprob: -2.8707022666931152
    5. 'worm' → logprob: -3.8707022666931152
    6. ' current' → logprob: -4.370702266693115
    7. 'current' → logprob: -4.620702266693115
    8. 'face' → logprob: -5.245702266693115
    9. ' worm' → logprob: -7.245702266693115
    10. ' face' → logprob: -7.620702266693115

Token 2717: ' (' (ID: 350)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.034779731184244156
    2. ',' → logprob: -3.9097797870635986
    3. ' or' → logprob: -4.9097795486450195
    4. '.' → logprob: -5.6597795486450195
    5. '   ' → logprob: -7.6597795486450195
    6. 'import' → logprob: -7.7847795486450195
    7. ' (' → logprob: -8.03477954864502
    8. 'from' → logprob: -8.15977954864502
    9. ' in' → logprob: -8.28477954864502
    10. ':' → logprob: -8.40977954864502

Token 2718: 'edges' (ID: 39127)
  Prédit: ' the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' the' → logprob: -0.46566644310951233
    2. ')' → logprob: -1.59066641330719
    3. ' or' → logprob: -3.2156665325164795
    4. 'the' → logprob: -3.3406665325164795
    5. ' )' → logprob: -4.0906662940979
    6. ')
' → logprob: -4.2156662940979
    7. ').' → logprob: -4.3406662940979
    8. ' a' → logprob: -5.2156662940979
    9. '),' → logprob: -5.2156662940979
    10. '.' → logprob: -5.4656662940979

Token 2719: ' have' (ID: 679)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.6012234687805176
    2. '_' → logprob: -1.7262234687805176
    3. ',' → logprob: -1.9762234687805176
    4. '):
' → logprob: -3.9762234687805176
    5. '+' → logprob: -4.101223468780518
    6. '       ' → logprob: -4.476223468780518
    7. '_length' → logprob: -4.476223468780518
    8. '   ' → logprob: -4.726223468780518
    9. ' and' → logprob: -4.976223468780518
    10. ')
' → logprob: -5.101223468780518

Token 2720: ' unit' (ID: 7670)
  Prédit: ' length'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' length' → logprob: -0.34546786546707153
    2. 'length' → logprob: -2.2204678058624268
    3. '1' → logprob: -2.3454678058624268
    4. ' unit' → logprob: -2.4704678058624268
    5. 'unit' → logprob: -5.845468044281006
    6. ' ' → logprob: -9.220467567443848
    7. ' lengths' → logprob: -10.095467567443848
    8. '```' → logprob: -10.220467567443848
    9. ' a' → logprob: -10.595467567443848
    10. '   ' → logprob: -10.720467567443848

Token 2721: ' length' (ID: 5517)
  Prédit: ' length'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' length' → logprob: -0.47734004259109497
    2. 'length' → logprob: -0.977340042591095
    3. '_length' → logprob: -5.852340221405029
    4. ' lengths' → logprob: -7.977340221405029
    5. '-length' → logprob: -10.852339744567871
    6. ' edges' → logprob: -11.852339744567871
    7. ')' → logprob: -12.352339744567871
    8. '_lengths' → logprob: -13.102339744567871
    9. 'distance' → logprob: -13.852339744567871
    10. 'edges' → logprob: -13.852339744567871

Token 2722: ').
' (ID: 6294)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.05965053290128708
    2. ').' → logprob: -2.934650421142578
    3. '),' → logprob: -6.684650421142578
    4. ',' → logprob: -6.809650421142578
    5. '.' → logprob: -7.184650421142578
    6. ' or' → logprob: -7.184650421142578
    7. ')
' → logprob: -7.934650421142578
    8. ' )' → logprob: -8.934650421142578
    9. '.)' → logprob: -9.059650421142578
    10. ' each' → logprob: -9.434650421142578

Token 2723: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0004598631348926574
    2. '```' → logprob: -9.000459671020508
    3. '   ' → logprob: -9.250459671020508
    4. '	' → logprob: -9.500459671020508
    5. ',' → logprob: -10.250459671020508
    6. '`' → logprob: -10.500459671020508
    7. '
' → logprob: -10.875459671020508
    8. '           ' → logprob: -11.125459671020508
    9. ')' → logprob: -11.375459671020508
    10. '        
' → logprob: -11.625459671020508

Token 2724: ' Because' (ID: 13602)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0002600245934445411
    2. '```' → logprob: -8.375260353088379
    3. '   ' → logprob: -11.625260353088379
    4. '        
' → logprob: -11.750260353088379
    5. '
' → logprob: -13.125260353088379
    6. 'import' → logprob: -13.500260353088379
    7. '           ' → logprob: -13.750260353088379
    8. 'def' → logprob: -13.875260353088379
    9. '#' → logprob: -14.125260353088379
    10. ')' → logprob: -14.750260353088379

Token 2725: ' the' (ID: 290)
  Prédit: ' the'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' the' → logprob: -0.2171316295862198
    2. ' self' → logprob: -3.0921316146850586
    3. 'the' → logprob: -3.2171316146850586
    4. ' it' → logprob: -3.3421316146850586
    5. ' of' → logprob: -3.4671316146850586
    6. ' there' → logprob: -4.467131614685059
    7. 'self' → logprob: -4.717131614685059
    8. '    ' → logprob: -5.467131614685059
    9. '   ' → logprob: -5.842131614685059
    10. '       ' → logprob: -5.967131614685059

Token 2726: ' trail' (ID: 12761)
  Prédit: ' worm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' worm' → logprob: -0.6666271090507507
    2. 'worm' → logprob: -1.0416271686553955
    3. ' code' → logprob: -3.1666271686553955
    4. 'w' → logprob: -3.2916271686553955
    5. ' ' → logprob: -4.541626930236816
    6. ' position' → logprob: -5.291626930236816
    7. ' trail' → logprob: -5.291626930236816
    8. ' direction' → logprob: -5.416626930236816
    9. ' current' → logprob: -5.541626930236816
    10. 't' → logprob: -5.791626930236816

Token 2727: ' length' (ID: 5517)
  Prédit: '_length'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_length' → logprob: -0.005217039957642555
    2. 'length' → logprob: -5.7552170753479
    3. '_' → logprob: -7.6302170753479
    4. ' length' → logprob: -7.6302170753479
    5. '       ' → logprob: -7.8802170753479
    6. '   ' → logprob: -8.255216598510742
    7. ' continues' → logprob: -8.755216598510742
    8. '_lengths' → logprob: -9.880216598510742
    9. '_len' → logprob: -10.005216598510742
    10. 's' → logprob: -10.255216598510742

Token 2728: ' is' (ID: 382)
  Prédit: ' is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.07193059474229813
    2. ' may' → logprob: -4.321930408477783
    3. ' continues' → logprob: -4.571930408477783
    4. '>' → logprob: -4.821930408477783
    5. '=' → logprob: -5.321930408477783
    6. '
' → logprob: -5.446930408477783
    7. ' exceeds' → logprob: -5.571930408477783
    8. ',' → logprob: -5.946930408477783
    9. '.' → logprob: -6.071930408477783
    10. ' consists' → logprob: -6.321930408477783

Token 2729: ' an' (ID: 448)
  Prédit: 'limited'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'limited' → logprob: -1.4923776388168335
    2. ' limited' → logprob: -1.7423776388168335
    3. 'finite' → logprob: -2.117377758026123
    4. 'not' → logprob: -2.492377758026123
    5. 'less' → logprob: -2.742377758026123
    6. 'a' → logprob: -2.742377758026123
    7. ' less' → logprob: -3.742377758026123
    8. 'greater' → logprob: -3.867377758026123
    9. 'float' → logprob: -3.992377758026123
    10. 'always' → logprob: -3.992377758026123

Token 2730: ' integer' (ID: 16336)
  Prédit: 'integer'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'integer' → logprob: -0.07953900843858719
    2. 'int' → logprob: -3.0795390605926514
    3. ' integer' → logprob: -3.7045390605926514
    4. 'edge' → logprob: -5.704538822174072
    5. 'float' → logprob: -7.204538822174072
    6. 'internal' → logprob: -7.329538822174072
    7. 'exact' → logprob: -8.07953929901123
    8. ' edge' → logprob: -8.70453929901123
    9. ' int' → logprob: -8.82953929901123
    10. 'unit' → logprob: -9.07953929901123

Token 2731: ' and' (ID: 326)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.6342530846595764
    2. ':' → logprob: -1.0092530250549316
    3. ':
' → logprob: -3.6342530250549316
    4. ',
' → logprob: -3.7592530250549316
    5. ' ,' → logprob: -4.509253025054932
    6. '.' → logprob: -4.759253025054932
    7. '
' → logprob: -4.759253025054932
    8. ' and' → logprob: -5.134253025054932
    9. '):' → logprob: -5.509253025054932
    10. '   ' → logprob: -5.759253025054932

Token 2732: ' the' (ID: 290)
  Prédit: ' the'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' the' → logprob: -0.4016730487346649
    2. 'the' → logprob: -1.5266730785369873
    3. ' edges' → logprob: -3.2766730785369873
    4. ' self' → logprob: -3.4016730785369873
    5. 'self' → logprob: -4.026672840118408
    6. 'edges' → logprob: -5.026672840118408
    7. ' may' → logprob: -5.776672840118408
    8. ' all' → logprob: -6.151672840118408
    9. ' can' → logprob: -6.401672840118408
    10. ' float' → logprob: -7.151672840118408

Token 2733: ' problem' (ID: 4792)
  Prédit: ' worm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' worm' → logprob: -0.9658029675483704
    2. ' current' → logprob: -1.9658029079437256
    3. ' direction' → logprob: -1.9658029079437256
    4. ' code' → logprob: -2.5908029079437256
    5. 'worm' → logprob: -2.7158029079437256
    6. ' initial' → logprob: -2.9658029079437256
    7. ' first' → logprob: -3.3408029079437256
    8. ' position' → logprob: -3.7158029079437256
    9. ' path' → logprob: -4.465803146362305
    10. 'current' → logprob: -4.715803146362305

Token 2734: ' introduces' (ID: 58636)
  Prédit: ' continues'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' continues' → logprob: -0.16207170486450195
    2. ' is' → logprob: -3.037071704864502
    3. '   ' → logprob: -3.787071704864502
    4. ' length' → logprob: -5.037071704864502
    5. ' has' → logprob: -5.162071704864502
    6. ' will' → logprob: -5.287071704864502
    7. ' remains' → logprob: -5.412071704864502
    8. ':' → logprob: -5.787071704864502
    9. ''s' → logprob: -5.912071704864502
    10. ' completes' → logprob: -5.912071704864502

Token 2735: ' toler' (ID: 22473)
  Prédit: ' the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' the' → logprob: -0.8409538269042969
    2. ' floating' → logprob: -1.7159538269042969
    3. 'the' → logprob: -2.340953826904297
    4. ' a' → logprob: -2.965953826904297
    5. 'floating' → logprob: -3.215953826904297
    6. ' unit' → logprob: -3.340953826904297
    7. ' fractional' → logprob: -3.465953826904297
    8. 'a' → logprob: -3.965953826904297
    9. ' code' → logprob: -4.215953826904297
    10. 'unit' → logprob: -4.215953826904297

Token 2736: 'ances' (ID: 3528)
  Prédit: 'ance'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ance' → logprob: -0.01624632440507412
    2. 'ances' → logprob: -4.141246318817139
    3. 'ation' → logprob: -9.141246795654297
    4. '   ' → logprob: -9.641246795654297
    5. '```' → logprob: -10.891246795654297
    6. 'ANCE' → logprob: -12.891246795654297
    7. 'ated' → logprob: -13.016246795654297
    8. '#' → logprob: -13.016246795654297
    9. 'anced' → logprob: -13.391246795654297
    10. ' an' → logprob: -13.516246795654297

Token 2737: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.028779421001672745
    2. ':' → logprob: -4.52877950668335
    3. '       ' → logprob: -4.90377950668335
    4. '   ' → logprob: -5.40377950668335
    5. ',
' → logprob: -5.77877950668335
    6. ' ,' → logprob: -7.65377950668335
    7. '=' → logprob: -7.77877950668335
    8. '.' → logprob: -7.77877950668335
    9. '...' → logprob: -8.528779029846191
    10. ' for' → logprob: -8.528779029846191

Token 2738: ' we' (ID: 581)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.24061159789562225
    2. '#' → logprob: -3.2406115531921387
    3. ' current' → logprob: -3.3656115531921387
    4. ' pos' → logprob: -3.6156115531921387
    5. ' self' → logprob: -4.115611553192139
    6. '   ' → logprob: -4.115611553192139
    7. ' #' → logprob: -4.240611553192139
    8. ' position' → logprob: -4.490611553192139
    9. ' step' → logprob: -5.115611553192139
    10. '    ' → logprob: -5.365611553192139

Token 2739: ' can' (ID: 665)
  Prédit: ' continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' continue' → logprob: -0.13277065753936768
    2. ' def' → logprob: -3.007770538330078
    3. ' assume' → logprob: -3.757770538330078
    4. ' can' → logprob: -4.882770538330078
    5. ' return' → logprob: -5.132770538330078
    6. ' will' → logprob: -5.382770538330078
    7. 'continue' → logprob: -5.882770538330078
    8. '_' → logprob: -5.882770538330078
    9. '_continue' → logprob: -5.882770538330078
    10. '```' → logprob: -6.007770538330078

Token 2740: ' simulate' (ID: 66687)
  Prédit: 'ass'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ass' → logprob: -0.4199468493461609
    2. ' assume' → logprob: -1.6699469089508057
    3. '       ' → logprob: -3.6699469089508057
    4. 'simulate' → logprob: -3.6699469089508057
    5. 'continue' → logprob: -3.9199469089508057
    6. '```' → logprob: -4.294946670532227
    7. 'indent' → logprob: -4.419946670532227
    8. ' continue' → logprob: -4.669946670532227
    9. ' indent' → logprob: -4.794946670532227
    10. '   ' → logprob: -4.919946670532227

Token 2741: ' step' (ID: 5983)
  Prédit: ' step'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' step' → logprob: -0.4349140226840973
    2. 'step' → logprob: -1.559913992881775
    3. ' the' → logprob: -2.5599141120910645
    4. 'the' → logprob: -3.0599141120910645
    5. ' by' → logprob: -5.4349141120910645
    6. ' one' → logprob: -6.6849141120910645
    7. 'by' → logprob: -6.8099141120910645
    8. '_step' → logprob: -7.0599141120910645
    9. '   ' → logprob: -7.1849141120910645
    10. 'steps' → logprob: -7.3099141120910645

Token 2742: 'wise' (ID: 7480)
  Prédit: ' by'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' by' → logprob: -0.866665780544281
    2. '_' → logprob: -0.991665780544281
    3. 's' → logprob: -2.491665840148926
    4. 'by' → logprob: -2.741665840148926
    5. '_by' → logprob: -4.241665840148926
    6. ')' → logprob: -4.866665840148926
    7. '       ' → logprob: -4.866665840148926
    8. '   ' → logprob: -5.116665840148926
    9. '-by' → logprob: -5.241665840148926
    10. 'wise' → logprob: -5.741665840148926

Token 2743: '.

' (ID: 364)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.8551665544509888
    2. '       ' → logprob: -1.6051665544509888
    3. '(' → logprob: -2.355166435241699
    4. ' by' → logprob: -2.480166435241699
    5. '(
' → logprob: -3.230166435241699
    6. '.' → logprob: -3.480166435241699
    7. '   ' → logprob: -3.605166435241699
    8. 'self' → logprob: -3.730166435241699
    9. ',' → logprob: -4.605166435241699
    10. '_' → logprob: -5.355166435241699

Token 2744: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0013654737267643213
    2. '```' → logprob: -7.001365661621094
    3. '
' → logprob: -8.626365661621094
    4. '        
' → logprob: -8.876365661621094
    5. '   ' → logprob: -10.376365661621094
    6. '           ' → logprob: -10.751365661621094
    7. ' line' → logprob: -11.751365661621094
    8. ')' → logprob: -11.751365661621094
    9. ',' → logprob: -11.876365661621094
    10. ' current' → logprob: -12.001365661621094

Token 2745: ' Returns' (ID: 9609)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3111814558506012
    2. 'pos' → logprob: -1.6861814260482788
    3. 'distance' → logprob: -3.4361815452575684
    4. 'step' → logprob: -4.186181545257568
    5. '   ' → logprob: -4.436181545257568
    6. '#' → logprob: -5.186181545257568
    7. 'current' → logprob: -5.811181545257568
    8. ' pos' → logprob: -5.936181545257568
    9. 'position' → logprob: -5.936181545257568
    10. 'face' → logprob: -6.561181545257568

Token 2746: ' the' (ID: 290)
  Prédit: ' ('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.2589898109436035
    2. ' self' → logprob: -1.6339898109436035
    3. '        ' → logprob: -4.2589898109436035
    4. '(self' → logprob: -5.0089898109436035
    5. '       ' → logprob: -5.1339898109436035
    6. 'self' → logprob: -5.7589898109436035
    7. '(' → logprob: -6.5089898109436035
    8. ' Tuple' → logprob: -7.0089898109436035
    9. ' None' → logprob: -8.758989334106445
    10. ')' → logprob: -8.758989334106445

Token 2747: ' final' (ID: 1721)
  Prédit: ' current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' current' → logprob: -0.34216660261154175
    2. 'current' → logprob: -1.3421666622161865
    3. 'self' → logprob: -4.467166423797607
    4. ' final' → logprob: -5.092166423797607
    5. 'final' → logprob: -5.592166423797607
    6. ' position' → logprob: -5.967166423797607
    7. 'position' → logprob: -5.967166423797607
    8. ' self' → logprob: -6.717166423797607
    9. '.current' → logprob: -8.842166900634766
    10. ' (' → logprob: -9.092166900634766

Token 2748: ' face' (ID: 4950)
  Prédit: ' position'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' position' → logprob: -0.4510630667209625
    2. 'position' → logprob: -1.7010630369186401
    3. '_face' → logprob: -2.2010631561279297
    4. ' face' → logprob: -3.0760631561279297
    5. ' (' → logprob: -4.95106315612793
    6. 'face' → logprob: -5.20106315612793
    7. '_position' → logprob: -5.57606315612793
    8. '       ' → logprob: -6.45106315612793
    9. '(face' → logprob: -6.45106315612793
    10. '(position' → logprob: -6.82606315612793

Token 2749: ' and' (ID: 326)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.004326264373958111
    2. '       ' → logprob: -6.629326343536377
    3. ',
' → logprob: -6.754326343536377
    4. ' ,' → logprob: -7.129326343536377
    5. '   ' → logprob: -7.629326343536377
    6. ')' → logprob: -9.254325866699219
    7. ',self' → logprob: -9.379325866699219
    8. '.' → logprob: -9.629325866699219
    9. '(self' → logprob: -9.629325866699219
    10. ' and' → logprob: -9.754325866699219

Token 2750: ' ' (ID: 220)
  Prédit: 'final'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'final' → logprob: -0.6197939515113831
    2. 'position' → logprob: -0.9947939515113831
    3. ' final' → logprob: -2.9947938919067383
    4. '(' → logprob: -4.119793891906738
    5. ' position' → logprob: -4.369793891906738
    6. 'self' → logprob: -5.369793891906738
    7. '(final' → logprob: -5.619793891906738
    8. 'the' → logprob: -6.119793891906738
    9. ' (' → logprob: -7.369793891906738
    10. ' the' → logprob: -7.494793891906738

Token 2751: '2' (ID: 17)
  Prédit: 'position'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'position' → logprob: -0.5107625722885132
    2. 'self' → logprob: -1.1357625722885132
    3. '(' → logprob: -2.8857626914978027
    4. 'final' → logprob: -4.260762691497803
    5. '(self' → logprob: -6.260762691497803
    6. 'local' → logprob: -6.885762691497803
    7. 'tuple' → logprob: -6.885762691497803
    8. 'the' → logprob: -7.260762691497803
    9. ' position' → logprob: -7.260762691497803
    10. '(
' → logprob: -7.385762691497803

Token 2752: 'D' (ID: 35)
  Prédit: 'D'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'D' → logprob: -0.07319498062133789
    2. 'd' → logprob: -3.573194980621338
    3. 'uple' → logprob: -3.823194980621338
    4. '0' → logprob: -4.948194980621338
    5. '_d' → logprob: -5.573194980621338
    6. 'ype' → logprob: -6.698194980621338
    7. '_tuple' → logprob: -7.073194980621338
    8. '_D' → logprob: -7.198194980621338
    9. '```' → logprob: -7.323194980621338
    10. 'Tuple' → logprob: -7.448194980621338

Token 2753: ' position' (ID: 4010)
  Prédit: '_coords'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_coords' → logprob: -1.018032193183899
    2. '_coordinates' → logprob: -1.393032193183899
    3. ' position' → logprob: -2.0180320739746094
    4. '_position' → logprob: -2.1430320739746094
    5. ' coordinates' → logprob: -2.6430320739746094
    6. ',' → logprob: -3.1430320739746094
    7. 'coordinates' → logprob: -5.018032073974609
    8. '_coord' → logprob: -5.268032073974609
    9. '_coordinate' → logprob: -5.768032073974609
    10. 'position' → logprob: -5.893032073974609

Token 2754: ' (' (ID: 350)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3444473445415497
    2. ':' → logprob: -1.969447374343872
    3. ':
' → logprob: -3.844447374343872
    4. ')' → logprob: -4.094447135925293
    5. '(self' → logprob: -4.219447135925293
    6. '        
' → logprob: -4.219447135925293
    7. ' on' → logprob: -4.469447135925293
    8. '):' → logprob: -4.594447135925293
    9. '_on' → logprob: -4.594447135925293
    10. '   ' → logprob: -4.719447135925293

Token 2755: 'local' (ID: 5818)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.023766323924064636
    2. 'on' → logprob: -4.52376651763916
    3. ' on' → logprob: -5.02376651763916
    4. ' )' → logprob: -6.39876651763916
    5. '):
' → logprob: -7.14876651763916
    6. ')
' → logprob: -7.52376651763916
    7. ' (' → logprob: -7.52376651763916
    8. '(' → logprob: -7.64876651763916
    9. '       ' → logprob: -7.77376651763916
    10. '           ' → logprob: -8.27376651763916

Token 2756: ' face' (ID: 4950)
  Prédit: '_coords'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_coords' → logprob: -0.6284821629524231
    2. ')' → logprob: -1.3784821033477783
    3. '_coordinates' → logprob: -2.3784821033477783
    4. ' coordinates' → logprob: -2.7534821033477783
    5. ',' → logprob: -4.128482341766357
    6. '   ' → logprob: -4.628482341766357
    7. '_coord' → logprob: -5.128482341766357
    8. '_face' → logprob: -5.253482341766357
    9. '       ' → logprob: -5.503482341766357
    10. '_' → logprob: -6.378482341766357

Token 2757: ' coordinates' (ID: 27933)
  Prédit: '_coords'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_coords' → logprob: -0.018918879330158234
    2. '_coordinates' → logprob: -4.268918991088867
    3. ')' → logprob: -5.643918991088867
    4. '_coord' → logprob: -7.268918991088867
    5. ' coordinates' → logprob: -9.393918991088867
    6. ',' → logprob: -9.768918991088867
    7. ')_' → logprob: -9.768918991088867
    8. '_)' → logprob: -10.018918991088867
    9. '_' → logprob: -10.018918991088867
    10. 'coords' → logprob: -10.018918991088867

Token 2758: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.02078932896256447
    2. ')
' → logprob: -4.14578914642334
    3. '       ' → logprob: -5.77078914642334
    4. '):
' → logprob: -6.64578914642334
    5. '   ' → logprob: -8.64578914642334
    6. '):' → logprob: -9.77078914642334
    7. ').' → logprob: -10.14578914642334
    8. ' )' → logprob: -11.39578914642334
    9. '```' → logprob: -12.14578914642334
    10. ')`' → logprob: -12.27078914642334

Token 2759: ' of' (ID: 328)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.021815814077854156
    2. ':' → logprob: -4.271815776824951
    3. '.' → logprob: -5.521815776824951
    4. ',' → logprob: -6.271815776824951
    5. '):' → logprob: -7.896815776824951
    6. '   ' → logprob: -8.02181625366211
    7. '(self' → logprob: -8.27181625366211
    8. ':
' → logprob: -8.52181625366211
    9. ' at' → logprob: -8.77181625366211
    10. '```' → logprob: -9.64681625366211

Token 2760: ' the' (ID: 290)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.42059648036956787
    2. ' self' → logprob: -1.6705964803695679
    3. 'the' → logprob: -2.2955965995788574
    4. ' the' → logprob: -3.0455965995788574
    5. ')' → logprob: -5.045596599578857
    6. ' )' → logprob: -8.1705961227417
    7. '   ' → logprob: -9.2955961227417
    8. '       ' → logprob: -10.0455961227417
    9. '    ' → logprob: -11.0455961227417
    10. '	self' → logprob: -11.2955961227417

Token 2761: ' worm' (ID: 40598)
  Prédit: 'worm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'worm' → logprob: -0.026738321408629417
    2. ' worm' → logprob: -3.651738405227661
    3. 'position' → logprob: -8.401738166809082
    4. '   ' → logprob: -9.526738166809082
    5. 'worms' → logprob: -10.651738166809082
    6. 'final' → logprob: -10.651738166809082
    7. '       ' → logprob: -11.276738166809082
    8. 'self' → logprob: -11.401738166809082
    9. ' position' → logprob: -11.526738166809082
    10. 'stop' → logprob: -11.776738166809082

Token 2762: ''s' (ID: 885)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.04845381900668144
    2. ':' → logprob: -3.9234538078308105
    3. '.' → logprob: -4.5484538078308105
    4. ',' → logprob: -5.4234538078308105
    5. ' after' → logprob: -6.2984538078308105
    6. '   ' → logprob: -6.5484538078308105
    7. ' on' → logprob: -6.6734538078308105
    8. ' at' → logprob: -6.7984538078308105
    9. ':
' → logprob: -6.9234538078308105
    10. ' =' → logprob: -7.6734538078308105

Token 2763: ' stop' (ID: 5666)
  Prédit: 'position'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'position' → logprob: -0.44597917795181274
    2. ' position' → logprob: -1.695979118347168
    3. 'final' → logprob: -2.695979118347168
    4. ' final' → logprob: -2.695979118347168
    5. ' current' → logprob: -3.820979118347168
    6. 'current' → logprob: -4.820979118347168
    7. 'stop' → logprob: -5.320979118347168
    8. ' last' → logprob: -6.195979118347168
    9. 'last' → logprob: -7.070979118347168
    10. '_position' → logprob: -7.195979118347168

Token 2764: ' point' (ID: 2438)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.462632417678833
    2. 'point' → logprob: -2.087632417678833
    3. '   ' → logprob: -2.462632417678833
    4. ':
' → logprob: -3.087632417678833
    5. '):
' → logprob: -3.587632417678833
    6. '_point' → logprob: -3.962632417678833
    7. 'ed' → logprob: -4.462632179260254
    8. ':' → logprob: -4.462632179260254
    9. 'ping' → logprob: -5.087632179260254
    10. '(self' → logprob: -5.087632179260254

Token 2765: '.
' (ID: 558)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.003748060204088688
    2. ':' → logprob: -5.878747940063477
    3. ',' → logprob: -7.753747940063477
    4. '.' → logprob: -8.628747940063477
    5. ':
' → logprob: -9.378747940063477
    6. '        
' → logprob: -9.503747940063477
    7. '):
' → logprob: -10.128747940063477
    8. '):' → logprob: -10.753747940063477
    9. '   ' → logprob: -10.753747940063477
    10. '```' → logprob: -11.003747940063477

Token 2766: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0001777960715116933
    2. '
' → logprob: -9.125177383422852
    3. '        
' → logprob: -10.625177383422852
    4. '```' → logprob: -11.000177383422852
    5. '   ' → logprob: -11.375177383422852
    6. '           ' → logprob: -12.375177383422852
    7. '#' → logprob: -13.125177383422852
    8. '`' → logprob: -13.375177383422852
    9. ')' → logprob: -13.500177383422852
    10. 'n' → logprob: -13.625177383422852

Token 2767: ' """
' (ID: 7037)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0024041931610554457
    2. '```' → logprob: -6.12740421295166
    3. '        
' → logprob: -9.00240421295166
    4. '
' → logprob: -10.12740421295166
    5. '`' → logprob: -10.87740421295166
    6. '``' → logprob: -11.50240421295166
    7. '   ' → logprob: -12.62740421295166
    8. ',' → logprob: -12.75240421295166
    9. '):
' → logprob: -12.87740421295166
    10. ' 
' → logprob: -13.12740421295166

Token 2768: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.1398757123970427e-05
    2. '```' → logprob: -12.375011444091797
    3. '   ' → logprob: -12.625011444091797
    4. '#' → logprob: -13.375011444091797
    5. '        
' → logprob: -14.875011444091797
    6. 'pos' → logprob: -15.000011444091797
    7. 'direction' → logprob: -15.375011444091797
    8. '
' → logprob: -15.625011444091797
    9. ' direction' → logprob: -15.875011444091797
    10. '           ' → logprob: -16.000011444091797

Token 2769: ' total' (ID: 3609)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pos' → logprob: -0.45761778950691223
    2. '       ' → logprob: -1.0826177597045898
    3. 'distance' → logprob: -5.33261775970459
    4. '#' → logprob: -5.58261775970459
    5. 'step' → logprob: -5.70761775970459
    6. 'position' → logprob: -5.70761775970459
    7. 'face' → logprob: -5.70761775970459
    8. 'direction' → logprob: -5.70761775970459
    9. 'import' → logprob: -6.45761775970459
    10. 'current' → logprob: -6.95761775970459

Token 2770: '_len' (ID: 13683)
  Prédit: '_distance'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_distance' → logprob: -0.33157119154930115
    2. '_length' → logprob: -1.3315712213516235
    3. '_dist' → logprob: -4.081571102142334
    4. '_step' → logprob: -7.956571102142334
    5. '_' → logprob: -8.206571578979492
    6. '_pos' → logprob: -8.706571578979492
    7. 'dist' → logprob: -9.081571578979492
    8. 'distance' → logprob: -9.331571578979492
    9. '_tr' → logprob: -9.581571578979492
    10. '_len' → logprob: -9.956571578979492

Token 2771: ' =' (ID: 314)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.313533216714859
    2. '=' → logprob: -2.313533306121826
    3. ' =' → logprob: -2.438533306121826
    4. '       ' → logprob: -3.313533306121826
    5. 'g' → logprob: -3.438533306121826
    6. '   ' → logprob: -5.313533306121826
    7. ' ' → logprob: -5.688533306121826
    8. '_g' → logprob: -7.188533306121826
    9. '        ' → logprob: -7.563533306121826
    10. ' _' → logprob: -7.688533306121826

Token 2772: ' self' (ID: 1051)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0009203928639180958
    2. ' ' → logprob: -7.000920295715332
    3. 'self' → logprob: -11.750920295715332
    4. ' self' → logprob: -14.500920295715332
    5. '   ' → logprob: -15.250920295715332
    6. ' ' → logprob: -16.00092124938965
    7. '.' → logprob: -17.50092124938965
    8. '```' → logprob: -17.75092124938965
    9. 'float' → logprob: -17.87592124938965
    10. '       ' → logprob: -18.00092124938965

Token 2773: '.tr' (ID: 8992)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.5710691213607788
    2. '.position' → logprob: -1.5710691213607788
    3. 'position' → logprob: -1.8210691213607788
    4. '0' → logprob: -2.1960692405700684
    5. '.' → logprob: -3.0710692405700684
    6. 'tr' → logprob: -3.0710692405700684
    7. '_position' → logprob: -3.3210692405700684
    8. '.tr' → logprob: -3.4460692405700684
    9. '_' → logprob: -3.5710692405700684
    10. 'trail' → logprob: -4.071069240570068

Token 2774: 'ail' (ID: 663)
  Prédit: 'ail'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ail' → logprob: -0.0013240495463833213
    2. 'a' → logprob: -6.75132417678833
    3. 'avel' → logprob: -9.876323699951172
    4. '   ' → logprob: -10.626323699951172
    5. 'ack' → logprob: -10.876323699951172
    6. '```' → logprob: -11.126323699951172
    7. '
' → logprob: -11.876323699951172
    8. 'ai' → logprob: -11.876323699951172
    9. 'ace' → logprob: -12.126323699951172
    10. '       ' → logprob: -12.126323699951172

Token 2775: '_length' (ID: 11514)
  Prédit: '_length'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_length' → logprob: -0.005808989983052015
    2. 'h' → logprob: -6.1308088302612305
    3. '_' → logprob: -6.5058088302612305
    4. 'ength' → logprob: -7.0058088302612305
    5. 'th' → logprob: -7.7558088302612305
    6. '       ' → logprob: -8.13080883026123
    7. '   ' → logprob: -9.13080883026123
    8. 'ght' → logprob: -9.63080883026123
    9. '_l' → logprob: -9.63080883026123
    10. 'ht' → logprob: -9.75580883026123

Token 2776: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.5105780363082886
    2. '       ' → logprob: -1.0105780363082886
    3. ',' → logprob: -3.760578155517578
    4. '        
' → logprob: -5.385578155517578
    5. 'current' → logprob: -6.635578155517578
    6. ',
' → logprob: -6.885578155517578
    7. ' 
' → logprob: -7.260578155517578
    8. ')' → logprob: -7.385578155517578
    9. '#' → logprob: -7.385578155517578
    10. '.' → logprob: -8.260578155517578

Token 2777: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.004850888159126043
    2. 'pos' → logprob: -5.6298508644104
    3. 'current' → logprob: -7.2548508644104
    4. ' pos' → logprob: -9.004851341247559
    5. 'u' → logprob: -9.129851341247559
    6. 'direction' → logprob: -9.379851341247559
    7. '#' → logprob: -10.004851341247559
    8. ' current' → logprob: -10.254851341247559
    9. ' direction' → logprob: -11.004851341247559
    10. '   ' → logprob: -11.129851341247559

Token 2778: ' pos' (ID: 1253)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pos' (adapté à ' pos') → logprob: -0.0358840674161911
    2. '       ' → logprob: -4.660883903503418
    3. 'u' → logprob: -4.785883903503418
    4. 'current' → logprob: -5.035883903503418
    5. 'curr' → logprob: -5.535883903503418
    6. 'face' → logprob: -5.660883903503418
    7. 'cur' → logprob: -6.785883903503418
    8. '#' → logprob: -7.285883903503418
    9. 'eps' → logprob: -8.160883903503418
    10. 'position' → logprob: -8.535883903503418

Token 2779: '2' (ID: 17)
  Prédit: '_on'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_on' → logprob: -0.6382359266281128
    2. '_' → logprob: -1.7632359266281128
    3. '_x' → logprob: -1.7632359266281128
    4. ' =' → logprob: -2.2632360458374023
    5. '_u' → logprob: -4.513236045837402
    6. '_token' → logprob: -6.138236045837402
    7. '   ' → logprob: -6.638236045837402
    8. '=' → logprob: -6.638236045837402
    9. '_pos' → logprob: -7.013236045837402
    10. '_curr' → logprob: -7.013236045837402

Token 2780: 'd' (ID: 67)
  Prédit: '_on'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_on' → logprob: -0.0013261953135952353
    2. ' =' → logprob: -6.876326084136963
    3. '_' → logprob: -8.876326560974121
    4. ' _' → logprob: -10.251326560974121
    5. '       ' → logprob: -10.251326560974121
    6. '=' → logprob: -10.751326560974121
    7. ',' → logprob: -11.626326560974121
    8. '   ' → logprob: -11.751326560974121
    9. ' on' → logprob: -12.001326560974121
    10. 'on' → logprob: -12.126326560974121

Token 2781: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.06252237409353256
    2. '=' → logprob: -2.8125224113464355
    3. ',' → logprob: -8.187521934509277
    4. '_x' → logprob: -8.937521934509277
    5. 'x' → logprob: -10.687521934509277
    6. ' ' → logprob: -10.687521934509277
    7. '_' → logprob: -10.937521934509277
    8. ')' → logprob: -11.312521934509277
    9. ' ,' → logprob: -11.437521934509277
    10. '        ' → logprob: -11.562521934509277

Token 2782: ' (' (ID: 350)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.47537460923194885
    2. '(' → logprob: -0.9753745794296265
    3. ' self' → logprob: -7.600374698638916
    4. ' (' → logprob: -7.725374698638916
    5. '(self' → logprob: -8.600374221801758
    6. '0' → logprob: -8.725374221801758
    7. '[' → logprob: -12.475374221801758
    8. ' ' → logprob: -13.225374221801758
    9. '   ' → logprob: -14.225374221801758
    10. 'list' → logprob: -14.475374221801758

Token 2783: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.8193366486229934e-05
    2. ' ' → logprob: -11.000018119812012
    3. '.' → logprob: -15.000018119812012
    4. ')' → logprob: -15.250018119812012
    5. '   ' → logprob: -15.250018119812012
    6. '(' → logprob: -16.750019073486328
    7. '```' → logprob: -16.750019073486328
    8. 'pos' → logprob: -16.875019073486328
    9. 'self' → logprob: -17.125019073486328
    10. '       ' → logprob: -17.250019073486328

Token 2784: '.' (ID: 13)
  Prédit: '.'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.0006895594415254891
    2. ',' → logprob: -7.375689506530762
    3. '.,' → logprob: -9.750689506530762
    4. '.
' → logprob: -12.750689506530762
    5. ')' → logprob: -14.625689506530762
    6. '[' → logprob: -15.125689506530762
    7. ' .' → logprob: -15.375689506530762
    8. ',
' → logprob: -16.125690460205078
    9. '
' → logprob: -16.500690460205078
    10. ' ' → logprob: -16.625690460205078

Token 2785: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.001355475396849215
    2. '.' → logprob: -7.1263556480407715
    3. ',' → logprob: -8.001355171203613
    4. ' ' → logprob: -8.501355171203613
    5. ')' → logprob: -12.376355171203613
    6. 'float' → logprob: -13.126355171203613
    7. ' ,' → logprob: -13.501355171203613
    8. '   ' → logprob: -13.876355171203613
    9. '    ' → logprob: -13.876355171203613
    10. '        ' → logprob: -14.001355171203613

Token 2786: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00034893216798081994
    2. ',
' → logprob: -8.250349044799805
    3. ' ,' → logprob: -9.375349044799805
    4. '0' → logprob: -14.250349044799805
    5. ',float' → logprob: -14.625349044799805
    6. ')' → logprob: -14.750349044799805
    7. '
' → logprob: -15.125349044799805
    8. '<|end|>' → logprob: -16.000349044799805
    9. ',

' → logprob: -16.250349044799805
    10. ',\
' → logprob: -16.250349044799805

Token 2787: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0004306692280806601
    2. ' ' → logprob: -7.750430583953857
    3. '   ' → logprob: -19.125431060791016
    4. '```' → logprob: -19.375431060791016
    5. ')' → logprob: -19.500431060791016
    6. '  ' → logprob: -20.000431060791016
    7. '00' → logprob: -20.125431060791016
    8. '    
' → logprob: -21.375431060791016
    9. '
' → logprob: -21.500431060791016
    10. '       ' → logprob: -21.625431060791016

Token 2788: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -5.157039049663581e-05
    2. ' ' → logprob: -9.875051498413086
    3. '   ' → logprob: -17.250051498413086
    4. '
' → logprob: -18.500051498413086
    5. '  ' → logprob: -19.375051498413086
    6. '00' → logprob: -19.750051498413086
    7. '       ' → logprob: -19.750051498413086
    8. '```' → logprob: -20.000051498413086
    9. ',' → logprob: -20.187551498413086
    10. ')' → logprob: -20.562551498413086

Token 2789: '.' (ID: 13)
  Prédit: '.'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.0432298369705677
    2. ',' → logprob: -3.418229818344116
    3. ')' → logprob: -4.668230056762695
    4. '0' → logprob: -9.668230056762695
    5. '),' → logprob: -10.418230056762695
    6. ' ,' → logprob: -11.668230056762695
    7. '.,' → logprob: -12.043230056762695
    8. '   ' → logprob: -12.293230056762695
    9. ')
' → logprob: -12.293230056762695
    10. '[' → logprob: -12.293230056762695

Token 2790: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.9361264946837764e-07
    2. ')' → logprob: -17.0
    3. '```' → logprob: -17.75
    4. '5' → logprob: -18.25
    5. '   ' → logprob: -18.5
    6. ' ' → logprob: -18.625
    7. 'float' → logprob: -19.5
    8. '       ' → logprob: -20.125
    9. '...' → logprob: -20.375
    10. '``' → logprob: -20.75

Token 2791: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.01657760515809059
    2. ')
' → logprob: -4.14157772064209
    3. '       ' → logprob: -7.64157772064209
    4. ',' → logprob: -9.76657772064209
    5. ',)' → logprob: -13.76657772064209
    6. ')#' → logprob: -14.26657772064209
    7. '),' → logprob: -14.39157772064209
    8. ' )' → logprob: -14.39157772064209
    9. ')

' → logprob: -14.39157772064209
    10. ')\
' → logprob: -15.01657772064209

Token 2792: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.009838256053626537
    2. ' dir' → logprob: -5.634838104248047
    3. 'dir' → logprob: -6.134838104248047
    4. 'direction' → logprob: -6.759838104248047
    5. ' direction' → logprob: -6.884838104248047
    6. 'current' → logprob: -7.884838104248047
    7. ',' → logprob: -8.134838104248047
    8. 'd' → logprob: -8.384838104248047
    9. '
' → logprob: -8.759838104248047
    10. ' current' → logprob: -9.134838104248047

Token 2793: ' face' (ID: 4950)
  Prédit: 'dir'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dir' → logprob: -0.0866340771317482
    2. '       ' → logprob: -3.2116341590881348
    3. 'face' (adapté à ' face') → logprob: -3.9616341590881348
    4. 'current' → logprob: -5.211634159088135
    5. 'curr' → logprob: -5.211634159088135
    6. 'direction' → logprob: -5.211634159088135
    7. '#' → logprob: -6.336634159088135
    8. 'cur' → logprob: -6.461634159088135
    9. 'u' → logprob: -7.211634159088135
    10. 'd' → logprob: -7.211634159088135

Token 2794: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.6376685500144958
    2. '_dir' → logprob: -1.5126686096191406
    3. '_vector' → logprob: -2.5126686096191406
    4. '_normal' → logprob: -2.8876686096191406
    5. '_vec' → logprob: -3.0126686096191406
    6. '_direction' → logprob: -3.1376686096191406
    7. 'normal' → logprob: -5.262668609619141
    8. '   ' → logprob: -5.262668609619141
    9. '_plane' → logprob: -5.887668609619141
    10. '_basis' → logprob: -6.637668609619141

Token 2795: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.00043126524542458355
    2. ' self' → logprob: -7.750431060791016
    3. '       ' → logprob: -14.375431060791016
    4. '(self' → logprob: -19.000431060791016
    5. '   ' → logprob: -19.625431060791016
    6. '	self' → logprob: -20.250431060791016
    7. '           ' → logprob: -20.750431060791016
    8. '        ' → logprob: -21.375431060791016
    9. '         ' → logprob: -21.625431060791016
    10. '=self' → logprob: -21.750431060791016

Token 2796: '.current' (ID: 8357)
  Prédit: '.current'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.current' → logprob: -0.0006952775875106454
    2. 'current' → logprob: -7.37569522857666
    3. '.direction' → logprob: -9.87569522857666
    4. '.' → logprob: -11.75069522857666
    5. '
' → logprob: -13.12569522857666
    6. ' .' → logprob: -13.37569522857666
    7. 'direction' → logprob: -13.75069522857666
    8. 'urrent' → logprob: -14.12569522857666
    9. '.
' → logprob: -14.12569522857666
    10. '.cur' → logprob: -14.25069522857666

Token 2797: '_face' (ID: 75619)
  Prédit: '_face'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_face' → logprob: -0.0002112886286340654
    2. '_' → logprob: -8.875211715698242
    3. ' _' → logprob: -10.250211715698242
    4. '_
' → logprob: -11.000211715698242
    5. '_f' → logprob: -12.375211715698242
    6. '
' → logprob: -12.500211715698242
    7. '_fac' → logprob: -12.750211715698242
    8. '\' → logprob: -13.500211715698242
    9. ')_' → logprob: -13.500211715698242
    10. '_faces' → logprob: -13.625211715698242

Token 2798: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.10451361536979675
    2. '
' → logprob: -2.479513645172119
    3. ',' → logprob: -4.729513645172119
    4. '        
' → logprob: -5.354513645172119
    5. '#' → logprob: -8.104513168334961
    6. '```' → logprob: -8.104513168334961
    7. ',
' → logprob: -8.479513168334961
    8. ' direction' → logprob: -8.604513168334961
    9. ')' → logprob: -8.979513168334961
    10. 'direction' → logprob: -9.354513168334961

Token 2799: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.02456807903945446
    2. 'dir' → logprob: -4.2745680809021
    3. 'direction' → logprob: -5.0245680809021
    4. ' dir' → logprob: -6.5245680809021
    5. ' direction' → logprob: -7.3995680809021
    6. 'd' → logprob: -7.7745680809021
    7. 'u' → logprob: -7.8995680809021
    8. '
' → logprob: -8.399567604064941
    9. '        
' → logprob: -8.899567604064941
    10. 'current' → logprob: -9.524567604064941

Token 2800: ' dir' (ID: 5609)
  Prédit: 'dir'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dir' (adapté à ' dir') → logprob: -0.1504363864660263
    2. '       ' → logprob: -2.6504364013671875
    3. 'direction' → logprob: -3.4004364013671875
    4. 'u' → logprob: -3.5254364013671875
    5. 'vec' → logprob: -6.5254364013671875
    6. 'd' → logprob: -6.6504364013671875
    7. 'current' → logprob: -7.5254364013671875
    8. 'face' → logprob: -7.6504364013671875
    9. '#' → logprob: -7.6504364013671875
    10. 'pos' → logprob: -8.025436401367188

Token 2801: '3' (ID: 18)
  Prédit: '_vector'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_vector' → logprob: -0.8555198311805725
    2. '3' → logprob: -1.3555197715759277
    3. '_' → logprob: -1.4805197715759277
    4. '_vec' → logprob: -3.2305197715759277
    5. ' =' → logprob: -3.4805197715759277
    6. 'ector' → logprob: -4.730519771575928
    7. 'ection' → logprob: -4.855519771575928
    8. '_vect' → logprob: -6.605519771575928
    9. '=' → logprob: -7.355519771575928
    10. 'vector' → logprob: -8.980520248413086

Token 2802: 'd' (ID: 67)
  Prédit: 'ection'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ection' → logprob: -0.03188580647110939
    2. 'rection' → logprob: -4.031885623931885
    3. 'ector' → logprob: -5.156885623931885
    4. '_' → logprob: -5.656885623931885
    5. '_vector' → logprob: -6.656885623931885
    6. '_e' → logprob: -6.906885623931885
    7. ' =' → logprob: -6.906885623931885
    8. '=' → logprob: -7.656885623931885
    9. 'vector' → logprob: -9.156886100769043
    10. 'iction' → logprob: -9.531886100769043

Token 2803: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.12693282961845398
    2. '=' → logprob: -2.1269328594207764
    3. ' ' → logprob: -13.251933097839355
    4. ')' → logprob: -13.501933097839355
    5. ',' → logprob: -14.126933097839355
    6. '   ' → logprob: -15.626933097839355
    7. '=self' → logprob: -15.876933097839355
    8. ':' → logprob: -16.00193214416504
    9. ' =
' → logprob: -16.12693214416504
    10. 's' → logprob: -16.87693214416504

Token 2804: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0005545823951251805
    2. ' self' → logprob: -7.50055456161499
    3. '       ' → logprob: -13.625555038452148
    4. '   ' → logprob: -15.250555038452148
    5. '           ' → logprob: -16.50055503845215
    6. '(self' → logprob: -17.00055503845215
    7. '	self' → logprob: -18.25055503845215
    8. '         ' → logprob: -18.50055503845215
    9. '
' → logprob: -18.50055503845215
    10. ' ' → logprob: -19.00055503845215

Token 2805: '.direction' (ID: 63524)
  Prédit: '.direction'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.direction' → logprob: -0.00021271906734909862
    2. 'direction' → logprob: -8.625212669372559
    3. '.' → logprob: -11.125212669372559
    4. ' .' → logprob: -11.875212669372559
    5. '.initial' → logprob: -12.000212669372559
    6. '   ' → logprob: -14.125212669372559
    7. '.direct' → logprob: -14.250212669372559
    8. ' direction' → logprob: -14.250212669372559
    9. 'irection' → logprob: -14.500212669372559
    10. '
' → logprob: -14.625212669372559

Token 2806: '.initial' (ID: 58290)
  Prédit: '.initial'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.initial' → logprob: -0.001414996455423534
    2. '.' → logprob: -6.626414775848389
    3. ' .' → logprob: -9.751415252685547
    4. '.
' → logprob: -11.876415252685547
    5. '
' → logprob: -12.251415252685547
    6. '.current' → logprob: -12.501415252685547
    7. 'initial' → logprob: -12.751415252685547
    8. '`.' → logprob: -13.501415252685547
    9. ' ' → logprob: -14.001415252685547
    10. '(initial' → logprob: -14.001415252685547

Token 2807: '_direction' (ID: 64332)
  Prédit: '_direction'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_direction' → logprob: -0.0008814498432911932
    2. '_' → logprob: -7.125881671905518
    3. 'direction' → logprob: -9.62588119506836
    4. '_direct' → logprob: -12.62588119506836
    5. '_
' → logprob: -12.87588119506836
    6. '_d' → logprob: -13.37588119506836
    7. '_vector' → logprob: -14.12588119506836
    8. '`' → logprob: -14.50088119506836
    9. '_DIRECTION' → logprob: -14.75088119506836
    10. '_dir' → logprob: -14.87588119506836

Token 2808: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.09149696677923203
    2. '
' → logprob: -2.5914969444274902
    3. '        
' → logprob: -4.84149694442749
    4. ',' → logprob: -6.34149694442749
    5. ' while' → logprob: -7.34149694442749
    6. 'while' → logprob: -7.46649694442749
    7. '```' → logprob: -7.59149694442749
    8. '#' → logprob: -8.591497421264648
    9. '<|end|>' → logprob: -8.591497421264648
    10. 'import' → logprob: -8.841497421264648

Token 2809: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00019662656995933503
    2. '```' → logprob: -9.50019645690918
    3. '        
' → logprob: -10.00019645690918
    4. '
' → logprob: -10.00019645690918
    5. 'while' → logprob: -10.87519645690918
    6. ' while' → logprob: -11.62519645690918
    7. 'import' → logprob: -13.75019645690918
    8. '           ' → logprob: -14.25019645690918
    9. '   ' → logprob: -14.87519645690918
    10. '    
' → logprob: -15.37519645690918

Token 2810: ' traveled' (ID: 52741)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.011717147193849087
    2. '       ' → logprob: -4.511717319488525
    3. 'for' → logprob: -7.636717319488525
    4. 'step' → logprob: -9.386716842651367
    5. 'import' → logprob: -9.636716842651367
    6. 'steps' → logprob: -11.011716842651367
    7. '   ' → logprob: -11.886716842651367
    8. 'epsilon' → logprob: -12.386716842651367
    9. 'distance' → logprob: -13.136716842651367
    10. ' while' → logprob: -13.136716842651367

Token 2811: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.6807443499565125
    2. '_length' → logprob: -1.5557444095611572
    3. '_len' → logprob: -1.9307444095611572
    4. '_' → logprob: -2.4307444095611572
    5. '=' → logprob: -3.1807444095611572
    6. '_distance' → logprob: -5.430744171142578
    7. ' ' → logprob: -6.430744171142578
    8. '_l' → logprob: -6.680744171142578
    9. '_dist' → logprob: -8.055744171142578
    10. '_=' → logprob: -9.305744171142578

Token 2812: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0008045066497288644
    2. ' ' → logprob: -7.125804424285889
    3. ' ' → logprob: -19.375804901123047
    4. '.' → logprob: -19.750804901123047
    5. '   ' → logprob: -19.750804901123047
    6. '۰' → logprob: -20.250804901123047
    7. '```' → logprob: -20.375804901123047
    8. '1' → logprob: -20.875804901123047
    9. '`' → logprob: -21.500804901123047
    10. '(' → logprob: -21.625804901123047

Token 2813: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.3856492842023727e-06
    2. ' ' → logprob: -13.625000953674316
    3. '.' → logprob: -16.625001907348633
    4. '   ' → logprob: -19.000001907348633
    5. 'float' → logprob: -19.875001907348633
    6. '```' → logprob: -19.875001907348633
    7. '
' → logprob: -20.375001907348633
    8. '۰' → logprob: -20.750001907348633
    9. '`' → logprob: -21.125001907348633
    10. ' ' → logprob: -21.312501907348633

Token 2814: '.' (ID: 13)
  Prédit: '.'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.009346130304038525
    2. '
' → logprob: -5.259346008300781
    3. '       ' → logprob: -5.634346008300781
    4. '        
' → logprob: -9.009346008300781
    5. 'def' → logprob: -9.259346008300781
    6. '   ' → logprob: -10.009346008300781
    7. ')' → logprob: -10.259346008300781
    8. '  
' → logprob: -10.509346008300781
    9. 'while' → logprob: -10.509346008300781
    10. '.
' → logprob: -10.634346008300781

Token 2815: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -7.896309739408025e-07
    2. '.' → logprob: -14.625000953674316
    3. '```' → logprob: -15.625000953674316
    4. ' ' → logprob: -16.5
    5. '
' → logprob: -18.0
    6. '   ' → logprob: -19.125
    7. ')' → logprob: -19.625
    8. '       ' → logprob: -20.0
    9. 'float' → logprob: -20.0
    10. 'def' → logprob: -20.125

Token 2816: '

' (ID: 279)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.02284718118607998
    2. '
' → logprob: -4.1478471755981445
    3. '        
' → logprob: -5.1478471755981445
    4. '```' → logprob: -8.147847175598145
    5. '<|end|>' → logprob: -8.772847175598145
    6. ' while' → logprob: -8.897847175598145
    7. '    
' → logprob: -9.772847175598145
    8. ' 
' → logprob: -10.022847175598145
    9. ',' → logprob: -10.272847175598145
    10. '	' → logprob: -10.397847175598145

Token 2817: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0028244927525520325
    2. 'while' → logprob: -5.877824306488037
    3. ' while' → logprob: -11.877824783325195
    4. '```' → logprob: -11.877824783325195
    5. '   ' → logprob: -13.252824783325195
    6. '
' → logprob: -13.252824783325195
    7. 'import' → logprob: -13.877824783325195
    8. '        
' → logprob: -15.002824783325195
    9. '           ' → logprob: -15.127824783325195
    10. '#' → logprob: -15.252824783325195

Token 2818: ' #' (ID: 1069)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.0007168424781411886
    2. '       ' → logprob: -7.250716686248779
    3. 'import' → logprob: -12.000717163085938
    4. ' while' → logprob: -14.875717163085938
    5. 'from' → logprob: -15.750717163085938
    6. '#' (adapté à ' #') → logprob: -16.125717163085938
    7. '```' → logprob: -16.125717163085938
    8. 'for' → logprob: -16.375717163085938
    9. '   ' → logprob: -17.750717163085938
    10. 'While' → logprob: -17.875717163085938

Token 2819: ' Utility' (ID: 47715)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.00044532763422466815
    2. '       ' → logprob: -7.750445365905762
    3. 'import' → logprob: -11.375445365905762
    4. ' while' → logprob: -13.000445365905762
    5. '   ' → logprob: -15.500445365905762
    6. '```' → logprob: -15.500445365905762
    7. 'from' → logprob: -15.750445365905762
    8. 'def' → logprob: -16.125444412231445
    9. 'step' → logprob: -16.250444412231445
    10. '#' → logprob: -16.250444412231445

Token 2820: ' to' (ID: 316)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.08786267042160034
    2. ' def' → logprob: -2.837862730026245
    3. '
' → logprob: -4.212862491607666
    4. '   ' → logprob: -4.837862491607666
    5. '       ' → logprob: -7.212862491607666
    6. '    ' → logprob: -7.337862491607666
    7. '_indent' → logprob: -7.712862491607666
    8. '        
' → logprob: -8.462862968444824
    9. '    
' → logprob: -8.712862968444824
    10. '	def' → logprob: -9.337862968444824

Token 2821: ' get' (ID: 717)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.46091336011886597
    2. 'dot' → logprob: -2.2109134197235107
    3. 'vector' → logprob: -2.4609134197235107
    4. ' def' → logprob: -3.0859134197235107
    5. 'advance' → logprob: -3.4609134197235107
    6. 'normalize' → logprob: -4.210913181304932
    7. 'find' → logprob: -4.460913181304932
    8. ' vector' → logprob: -4.835913181304932
    9. 'compute' → logprob: -4.835913181304932
    10. 'scalar' → logprob: -4.960913181304932

Token 2822: ' ' (ID: 220)
  Prédit: '_edge'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_edge' → logprob: -0.3692252039909363
    2. 'edge' → logprob: -2.744225263595581
    3. 'def' → logprob: -2.869225263595581
    4. ' edge' → logprob: -2.994225263595581
    5. 'next' → logprob: -4.369225025177002
    6. 'vector' → logprob: -4.619225025177002
    7. ' edges' → logprob: -4.869225025177002
    8. '#' → logprob: -4.869225025177002
    9. 'the' → logprob: -4.994225025177002
    10. '_next' → logprob: -4.994225025177002

Token 2823: '2' (ID: 17)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -1.1082265377044678
    2. 'closest' → logprob: -1.6082265377044678
    3. 'edge' → logprob: -1.6082265377044678
    4. 'next' → logprob: -1.8582265377044678
    5. 'edges' → logprob: -3.4832265377044678
    6. '#' → logprob: -4.108226776123047
    7. 'face' → logprob: -4.358226776123047
    8. 'nearest' → logprob: -4.733226776123047
    9. 'intersection' → logprob: -4.983226776123047
    10. '_edge' → logprob: -5.233226776123047

Token 2824: 'D' (ID: 35)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.04847732558846474
    2. 'def' → logprob: -3.1734774112701416
    3. 'D' → logprob: -5.4234771728515625
    4. '_d' → logprob: -7.6734771728515625
    5. '#' → logprob: -8.923477172851562
    6. ' def' → logprob: -9.423477172851562
    7. 'vector' → logprob: -9.798477172851562
    8. '   ' → logprob: -9.923477172851562
    9. '       ' → logprob: -10.048477172851562
    10. '3' → logprob: -10.173477172851562

Token 2825: ' direction' (ID: 9262)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.22988386452198029
    2. ' def' → logprob: -1.9798839092254639
    3. 'coords' → logprob: -4.104883670806885
    4. 'vector' → logprob: -4.479883670806885
    5. 'pos' → logprob: -4.854883670806885
    6. '_coords' → logprob: -5.229883670806885
    7. '_to' → logprob: -5.604883670806885
    8. 'coord' → logprob: -5.854883670806885
    9. '_vector' → logprob: -5.854883670806885
    10. 'point' → logprob: -5.979883670806885

Token 2826: ' vector' (ID: 9727)
  Prédit: ' vector'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' vector' → logprob: -0.2203914225101471
    2. '_vector' → logprob: -2.4703915119171143
    3. 'vector' → logprob: -3.8453915119171143
    4. '_on' → logprob: -4.095391273498535
    5. '_in' → logprob: -4.220391273498535
    6. ' on' → logprob: -4.345391273498535
    7. '       ' → logprob: -4.470391273498535
    8. ' in' → logprob: -4.845391273498535
    9. ' =' → logprob: -5.220391273498535
    10. ':' → logprob: -5.470391273498535

Token 2827: ' on' (ID: 402)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.9057545065879822
    2. 'def' → logprob: -1.780754566192627
    3. ' in' → logprob: -2.030754566192627
    4. '
' → logprob: -2.655754566192627
    5. ' on' → logprob: -3.280754566192627
    6. ' =' → logprob: -3.405754566192627
    7. ' def' → logprob: -3.530754566192627
    8. ' (' → logprob: -3.530754566192627
    9. ':' → logprob: -3.780754566192627
    10. '(self' → logprob: -4.655754566192627

Token 2828: ' face' (ID: 4950)
  Prédit: 'face'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'face' → logprob: -0.0010301886359229684
    2. ' face' → logprob: -7.626029968261719
    3. 'the' → logprob: -8.251029968261719
    4. 'current' → logprob: -9.126029968261719
    5. '   ' → logprob: -10.376029968261719
    6. '(face' → logprob: -10.376029968261719
    7. '       ' → logprob: -10.501029968261719
    8. '
' → logprob: -11.001029968261719
    9. 'def' → logprob: -11.251029968261719
    10. 'plane' → logprob: -11.626029968261719

Token 2829: ' plane' (ID: 16499)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.054202500730752945
    2. '
' → logprob: -3.0542025566101074
    3. 'def' → logprob: -6.429202556610107
    4. '        
' → logprob: -7.054202556610107
    5. '   ' → logprob: -7.429202556610107
    6. ':' → logprob: -7.554202556610107
    7. ',' → logprob: -7.679202556610107
    8. ':
' → logprob: -8.05420207977295
    9. ' (' → logprob: -8.05420207977295
    10. ' in' → logprob: -8.42920207977295

Token 2830: ' from' (ID: 591)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1722842901945114
    2. '
' → logprob: -1.9222842454910278
    3. 'def' → logprob: -5.172284126281738
    4. '   ' → logprob: -5.297284126281738
    5. '        
' → logprob: -7.297284126281738
    6. ',' → logprob: -9.047284126281738
    7. '```' → logprob: -9.172284126281738
    8. '    
' → logprob: -9.672284126281738
    9. '           ' → logprob: -10.047284126281738
    10. ' (' → logprob: -10.297284126281738

Token 2831: ' ' (ID: 220)
  Prédit: 'face'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'face' → logprob: -0.707140326499939
    2. 'dir' → logprob: -1.082140326499939
    3. 'self' → logprob: -2.8321404457092285
    4. 'pos' → logprob: -3.0821404457092285
    5. 'origin' → logprob: -3.2071404457092285
    6. 'u' → logprob: -5.0821404457092285
    7. 'def' → logprob: -5.7071404457092285
    8. '3' → logprob: -6.2071404457092285
    9. 'direction' → logprob: -6.2071404457092285
    10. '(self' → logprob: -6.5821404457092285

Token 2832: '3' (ID: 18)
  Prédit: 'dir'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dir' → logprob: -0.19353565573692322
    2. 'pos' → logprob: -2.318535566329956
    3. 'face' → logprob: -3.443535566329956
    4. '(' → logprob: -3.818535566329956
    5. 'self' → logprob: -4.943535804748535
    6. '(pos' → logprob: -5.943535804748535
    7. '
' → logprob: -6.318535804748535
    8. '(dir' → logprob: -6.443535804748535
    9. 'origin' → logprob: -6.568535804748535
    10. '(self' → logprob: -6.568535804748535

Token 2833: 'D' (ID: 35)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.038140181452035904
    2. 'D' → logprob: -4.163140296936035
    3. 'def' → logprob: -4.163140296936035
    4. '_d' → logprob: -5.913140296936035
    5. '_tuple' → logprob: -6.788140296936035
    6. 'tuple' → logprob: -7.038140296936035
    7. 'tokens' → logprob: -7.663140296936035
    8. '_float' → logprob: -8.163140296936035
    9. 'coords' → logprob: -8.663140296936035
    10. 'float' → logprob: -8.788140296936035

Token 2834: ' direction' (ID: 9262)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.6356121301651001
    2. ' def' → logprob: -1.6356121301651
    3. '
' → logprob: -2.2606120109558105
    4. '       ' → logprob: -2.2606120109558105
    5. '   ' → logprob: -4.1356120109558105
    6. ' direction' → logprob: -4.2606120109558105
    7. ' vector' → logprob: -4.3856120109558105
    8. 'direction' → logprob: -4.6356120109558105
    9. 'vector' → logprob: -5.2606120109558105
    10. 'coords' → logprob: -6.2606120109558105

Token 2835: ' vector' (ID: 9727)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.2487744837999344
    2. '       ' → logprob: -2.623774528503418
    3. ':' → logprob: -3.373774528503418
    4. '   ' → logprob: -3.623774528503418
    5. ' def' → logprob: -3.748774528503418
    6. ':
' → logprob: -4.498774528503418
    7. ' =' → logprob: -4.498774528503418
    8. '
' → logprob: -4.623774528503418
    9. 'vector' → logprob: -5.248774528503418
    10. '(
' → logprob: -5.748774528503418

Token 2836: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.056414876133203506
    2. '
' → logprob: -3.056414842605591
    3. 'def' → logprob: -5.30641508102417
    4. '   ' → logprob: -6.30641508102417
    5. '        
' → logprob: -7.30641508102417
    6. ',' → logprob: -9.056414604187012
    7. '#' → logprob: -9.931414604187012
    8. ' def' → logprob: -10.681414604187012
    9. '    
' → logprob: -10.681414604187012
    10. '           ' → logprob: -11.056414604187012

Token 2837: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0074264188297092915
    2. '
' → logprob: -5.6324262619018555
    3. 'def' → logprob: -6.6324262619018555
    4. '        
' → logprob: -7.2574262619018555
    5. ' (' → logprob: -7.7574262619018555
    6. ' def' → logprob: -8.007426261901855
    7. ':' → logprob: -8.632426261901855
    8. '   ' → logprob: -8.882426261901855
    9. ',' → logprob: -8.882426261901855
    10. ' for' → logprob: -9.257426261901855

Token 2838: ' def' (ID: 1056)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5893263220787048
    2. 'def' (adapté à ' def') → logprob: -0.8393263220787048
    3. ' def' → logprob: -4.96432638168335
    4. '
' → logprob: -5.46432638168335
    5. '   ' → logprob: -6.83932638168335
    6. '```' → logprob: -7.21432638168335
    7. '        
' → logprob: -9.214325904846191
    8. 'indent' → logprob: -10.339325904846191
    9. '           ' → logprob: -10.964325904846191
    10. '    
' → logprob: -11.089325904846191

Token 2839: ' project' (ID: 2993)
  Prédit: 'get'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'get' → logprob: -0.15826009213924408
    2. 'project' → logprob: -2.7832601070404053
    3. 'face' → logprob: -3.2832601070404053
    4. 'vector' → logprob: -3.9082601070404053
    5. 'to' → logprob: -4.033259868621826
    6. 'direction' → logprob: -6.408259868621826
    7. 'extract' → logprob: -6.533259868621826
    8. 'world' → logprob: -6.658259868621826
    9. 'vec' → logprob: -6.658259868621826
    10. ' get' → logprob: -7.408259868621826

Token 2840: '_dir' (ID: 9526)
  Prédit: '_to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_to' → logprob: -0.9130941033363342
    2. '_' → logprob: -1.1630940437316895
    3. '_dir' → logprob: -2.4130940437316895
    4. '_direction' → logprob: -2.9130940437316895
    5. '_on' → logprob: -3.1630940437316895
    6. '_face' → logprob: -3.2880940437316895
    7. '3' → logprob: -3.6630940437316895
    8. '_vector' → logprob: -4.4130940437316895
    9. '(dir' → logprob: -4.5380940437316895
    10. '_point' → logprob: -5.4130940437316895

Token 2841: '_to' (ID: 5089)
  Prédit: '3'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.13642846047878265
    2. '_on' → logprob: -3.1364283561706543
    3. ' =' → logprob: -3.5114283561706543
    4. '_' → logprob: -3.7614283561706543
    5. ':' → logprob: -4.511428356170654
    6. '_to' → logprob: -4.886428356170654
    7. '=' → logprob: -5.386428356170654
    8. ' :' → logprob: -6.511428356170654
    9. '2' → logprob: -7.261428356170654
    10. ' onto' → logprob: -7.261428356170654

Token 2842: '_face' (ID: 75619)
  Prédit: 'face'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'face' → logprob: -0.0021010141354054213
    2. '2' → logprob: -6.377100944519043
    3. '_face' → logprob: -8.752100944519043
    4. 'plane' → logprob: -9.002100944519043
    5. 'def' → logprob: -9.127100944519043
    6. 'local' → logprob: -13.377100944519043
    7. '       ' → logprob: -13.752100944519043
    8. '
' → logprob: -13.877100944519043
    9. ' face' → logprob: -14.002100944519043
    10. '_' → logprob: -14.002100944519043

Token 2843: '_' (ID: 62)
  Prédit: '(face'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(face' → logprob: -0.17015375196933746
    2. '_plane' → logprob: -2.295153856277466
    3. '_vector' → logprob: -3.795153856277466
    4. '3' → logprob: -4.170153617858887
    5. '_' → logprob: -5.295153617858887
    6. '_vec' → logprob: -5.545153617858887
    7. '(' → logprob: -5.670153617858887
    8. '2' → logprob: -6.295153617858887
    9. '(
' → logprob: -7.045153617858887
    10. '   ' → logprob: -7.170153617858887

Token 2844: '2' (ID: 17)
  Prédit: 'plane'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'plane' → logprob: -0.0007123126997612417
    2. '_plane' → logprob: -7.3757123947143555
    3. '3' → logprob: -10.500712394714355
    4. 'vector' → logprob: -10.625712394714355
    5. ' plane' → logprob: -10.750712394714355
    6. 'plan' → logprob: -12.125712394714355
    7. 'space' → logprob: -13.000712394714355
    8. '2' → logprob: -13.375712394714355
    9. '-plane' → logprob: -14.500712394714355
    10. 'face' → logprob: -14.625712394714355

Token 2845: 'd' (ID: 67)
  Prédit: 'd'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -9.448370838072151e-05
    2. '_d' → logprob: -9.875094413757324
    3. 'D' → logprob: -10.125094413757324
    4. 'def' → logprob: -14.125094413757324
    5. '   ' → logprob: -14.500094413757324
    6. '       ' → logprob: -14.500094413757324
    7. ' d' → logprob: -14.875094413757324
    8. 'dtype' → logprob: -15.375094413757324
    9. 'df' → logprob: -15.875094413757324
    10. 'float' → logprob: -16.00009536743164

Token 2846: '(face' (ID: 127535)
  Prédit: '(face'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(face' → logprob: -0.023953499272465706
    2. '(self' → logprob: -4.398953437805176
    3. '(' → logprob: -4.773953437805176
    4. '(dir' → logprob: -6.023953437805176
    5. '(v' → logprob: -9.398953437805176
    6. '(def' → logprob: -9.523953437805176
    7. '(pos' → logprob: -9.523953437805176
    8. '(
' → logprob: -9.648953437805176
    9. '(f' → logprob: -9.773953437805176
    10. '(direction' → logprob: -9.898953437805176

Token 2847: ':' (ID: 25)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.6099335551261902
    2. ',' → logprob: -1.109933614730835
    3. '):
' → logprob: -2.109933614730835
    4. ':' → logprob: -5.609933376312256
    5. ')' → logprob: -7.359933376312256
    6. ' ,' → logprob: -7.359933376312256
    7. ' ):' → logprob: -7.859933376312256
    8. '   ' → logprob: -8.984933853149414
    9. '):
' → logprob: -9.609933853149414
    10. ' ):
' → logprob: -9.734933853149414

Token 2848: ' Face' (ID: 29049)
  Prédit: 'Face'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Face' → logprob: -0.03381270915269852
    2. 'lambda' → logprob: -3.5338127613067627
    3. 'face' → logprob: -6.408812522888184
    4. ' Face' → logprob: -6.783812522888184
    5. ')' → logprob: -7.408812522888184
    6. ' lambda' → logprob: -8.033812522888184
    7. '(lambda' → logprob: -10.033812522888184
    8. '):
' → logprob: -10.158812522888184
    9. 'Callable' → logprob: -10.158812522888184
    10. '_face' → logprob: -10.158812522888184

Token 2849: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00507590314373374
    2. '):
' → logprob: -6.005075931549072
    3. '):' → logprob: -6.130075931549072
    4. ')' → logprob: -8.505075454711914
    5. '   ' → logprob: -9.380075454711914
    6. '       ' → logprob: -10.130075454711914
    7. ' ,' → logprob: -10.880075454711914
    8. '(face' → logprob: -10.880075454711914
    9. ',line' → logprob: -11.505075454711914
    10. ',
' → logprob: -11.505075454711914

Token 2850: ' dir' (ID: 5609)
  Prédit: 'dir'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dir' → logprob: -0.03645215556025505
    2. 'u' → logprob: -3.911452054977417
    3. '       ' → logprob: -5.036452293395996
    4. 'origin' → logprob: -5.411452293395996
    5. '   ' → logprob: -7.036452293395996
    6. 'direction' → logprob: -7.286452293395996
    7. ' dir' → logprob: -7.411452293395996
    8. 'v' → logprob: -7.661452293395996
    9. 'vector' → logprob: -7.786452293395996
    10. 'vec' → logprob: -7.786452293395996

Token 2851: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.004411482252180576
    2. '):' → logprob: -5.754411697387695
    3. '):
' → logprob: -7.254411697387695
    4. '_' → logprob: -8.504411697387695
    5. ')' → logprob: -8.629411697387695
    6. ',' → logprob: -10.129411697387695
    7. '   ' → logprob: -10.379411697387695
    8. ')_' → logprob: -10.879411697387695
    9. '       ' → logprob: -11.754411697387695
    10. ' ):' → logprob: -12.129411697387695

Token 2852: 'd' (ID: 67)
  Prédit: 'd'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.22761066257953644
    2. '3' → logprob: -1.60261070728302
    3. ',' → logprob: -7.4776105880737305
    4. '_d' → logprob: -7.4776105880737305
    5. ')' → logprob: -8.10261058807373
    6. '):
' → logprob: -8.60261058807373
    7. '):' → logprob: -8.72761058807373
    8. '_' → logprob: -9.72761058807373
    9. '
' → logprob: -9.72761058807373
    10. '   ' → logprob: -10.10261058807373

Token 2853: ':' (ID: 25)
  Prédit: '):
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.31646791100502014
    2. ')' → logprob: -1.9414678812026978
    3. '):' → logprob: -2.0664680004119873
    4. '):
' → logprob: -7.941467761993408
    5. ' ):
' → logprob: -8.191468238830566
    6. ' )' → logprob: -8.691468238830566
    7. '):

' → logprob: -8.816468238830566
    8. ' ):' → logprob: -9.441468238830566
    9. ')->' → logprob: -10.066468238830566
    10. '   ' → logprob: -10.316468238830566

Token 2854: ' Tuple' (ID: 50841)
  Prédit: 'Tuple'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Tuple' → logprob: -0.0895199403166771
    2. 'dir' → logprob: -2.58951997756958
    3. ' Tuple' → logprob: -5.08951997756958
    4. ')' → logprob: -6.71451997756958
    5. 'tuple' → logprob: -6.96451997756958
    6. 'float' → logprob: -7.08951997756958
    7. 'Vector' → logprob: -7.83951997756958
    8. ' dir' → logprob: -8.089519500732422
    9. 'face' → logprob: -8.589519500732422
    10. '   ' → logprob: -9.464519500732422

Token 2855: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.000283265660982579
    2. '(float' → logprob: -8.750283241271973
    3. ',float' → logprob: -9.250283241271973
    4. 'float' → logprob: -11.500283241271973
    5. '=float' → logprob: -12.625283241271973
    6. '       ' → logprob: -12.625283241271973
    7. '   ' → logprob: -13.000283241271973
    8. '           ' → logprob: -13.250283241271973
    9. ',' → logprob: -13.250283241271973
    10. '```' → logprob: -13.250283241271973

Token 2856: 'float' (ID: 7829)
  Prédit: 'float'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'float' → logprob: -5.347765181795694e-05
    2. ' float' → logprob: -10.125053405761719
    3. ',float' → logprob: -11.875053405761719
    4. '(float' → logprob: -12.500053405761719
    5. '   ' → logprob: -14.000053405761719
    6. '[' → logprob: -14.500053405761719
    7. '<float' → logprob: -15.375053405761719
    8. '=float' → logprob: -15.625053405761719
    9. '	float' → logprob: -15.750053405761719
    10. '.float' → logprob: -15.750053405761719

Token 2857: ',float' (ID: 119642)
  Prédit: ',float'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',float' → logprob: -0.0002707529056351632
    2. ',' → logprob: -8.37527084350586
    3. '[' → logprob: -10.87527084350586
    4. 'float' → logprob: -11.00027084350586
    5. ',
' → logprob: -12.62527084350586
    6. '(float' → logprob: -14.87527084350586
    7. '=float' → logprob: -15.75027084350586
    8. '3' → logprob: -15.75027084350586
    9. '   ' → logprob: -15.75027084350586
    10. ',int' → logprob: -16.12527084350586

Token 2858: ',float' (ID: 119642)
  Prédit: ',float'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',float' → logprob: -0.005956052802503109
    2. ',' → logprob: -5.130956172943115
    3. ' ,' → logprob: -11.255955696105957
    4. ',
' → logprob: -11.630955696105957
    5. ',int' → logprob: -13.630955696105957
    6. 'float' → logprob: -14.630955696105957
    7. ',const' → logprob: -14.630955696105957
    8. ',f' → logprob: -14.880955696105957
    9. '```' → logprob: -15.005955696105957
    10. '3' → logprob: -15.005955696105957

Token 2859: '])' (ID: 4636)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.044039372354745865
    2. '):
' → logprob: -3.169039487838745
    3. '):' → logprob: -7.169039249420166
    4. '   ' → logprob: -9.294039726257324
    5. ' )' → logprob: -9.419039726257324
    6. '       ' → logprob: -9.919039726257324
    7. '):

' → logprob: -10.669039726257324
    8. ')->' → logprob: -12.794039726257324
    9. '])' → logprob: -12.794039726257324
    10. ' ):
' → logprob: -12.919039726257324

Token 2860: ' ->' (ID: 2747)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.049538504332304
    2. ':
' → logprob: -3.1745386123657227
    3. '       ' → logprob: -5.424538612365723
    4. '):' → logprob: -7.424538612365723
    5. '():' → logprob: -8.174538612365723
    6. '           ' → logprob: -8.174538612365723
    7. '():
' → logprob: -8.424538612365723
    8. '):
' → logprob: -8.424538612365723
    9. ':return' → logprob: -8.549538612365723
    10. '   ' → logprob: -9.049538612365723

Token 2861: ' Tuple' (ID: 50841)
  Prédit: 'Tuple'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Tuple' → logprob: -0.04554669186472893
    2. 'Optional' → logprob: -3.170546770095825
    3. 'float' → logprob: -6.170546531677246
    4. 'None' → logprob: -8.295546531677246
    5. 'Callable' → logprob: -10.045546531677246
    6. 'Vector' → logprob: -10.295546531677246
    7. ' Tuple' → logprob: -10.545546531677246
    8. 'tuple' → logprob: -10.670546531677246
    9. 'lambda' → logprob: -10.920546531677246
    10. 'optional' → logprob: -11.295546531677246

Token 2862: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.030236482620239258
    2. '(float' → logprob: -3.6552364826202393
    3. '(' → logprob: -6.53023624420166
    4. '(
' → logprob: -6.65523624420166
    5. '[
' → logprob: -7.40523624420166
    6. ' (' → logprob: -7.65523624420166
    7. 'float' → logprob: -10.65523624420166
    8. '<float' → logprob: -10.65523624420166
    9. ':' → logprob: -11.40523624420166
    10. '   ' → logprob: -11.90523624420166

Token 2863: 'float' (ID: 7829)
  Prédit: 'float'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'float' → logprob: -0.00028493450372479856
    2. ' float' → logprob: -8.500285148620605
    3. '0' → logprob: -10.000285148620605
    4. '1' → logprob: -11.125285148620605
    5. '(float' → logprob: -11.250285148620605
    6. '   ' → logprob: -13.000285148620605
    7. ',float' → logprob: -13.375285148620605
    8. ' ' → logprob: -14.125285148620605
    9. 'flo' → logprob: -14.250285148620605
    10. '	float' → logprob: -14.375285148620605

Token 2864: ',float' (ID: 119642)
  Prédit: ',float'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',float' → logprob: -0.3135950565338135
    2. ',' → logprob: -1.3135950565338135
    3. ' ,' → logprob: -8.563594818115234
    4. 'float' → logprob: -9.813594818115234
    5. '[' → logprob: -9.938594818115234
    6. ',
' → logprob: -10.938594818115234
    7. '(float' → logprob: -12.063594818115234
    8. ',int' → logprob: -12.688594818115234
    9. '_float' → logprob: -12.813594818115234
    10. '
' → logprob: -12.813594818115234

Token 2865: ']:
' (ID: 22152)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.2881554961204529
    2. ']:
' → logprob: -1.4131555557250977
    3. '   ' → logprob: -6.413155555725098
    4. ']:' → logprob: -6.538155555725098
    5. '):
' → logprob: -6.788155555725098
    6. ']>' → logprob: -7.038155555725098
    7. ']:
' → logprob: -8.538155555725098
    8. '       ' → logprob: -8.663155555725098
    9. '']:
' → logprob: -8.663155555725098
    10. ']' → logprob: -8.663155555725098

Token 2866: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4214499890804291
    2. '           ' → logprob: -1.5464500188827515
    3. '
' → logprob: -2.421449899673462
    4. '        
' → logprob: -4.171450138092041
    5. ' 
' → logprob: -5.296450138092041
    6. '        ' → logprob: -5.421450138092041
    7. '               ' → logprob: -5.546450138092041
    8. '    
' → logprob: -5.921450138092041
    9. '\n' → logprob: -6.296450138092041
    10. '  
' → logprob: -6.671450138092041

Token 2867: ' origin' (ID: 12839)
  Prédit: 'origin'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'origin' (adapté à ' origin') → logprob: -0.11650285869836807
    2. ' origin' → logprob: -2.3665027618408203
    3. '           ' → logprob: -4.61650276184082
    4. 'u' → logprob: -6.11650276184082
    5. 'o' → logprob: -6.86650276184082
    6. '(origin' → logprob: -7.11650276184082
    7. '   ' → logprob: -7.36650276184082
    8. ' u' → logprob: -7.61650276184082
    9. '       ' → logprob: -7.61650276184082
    10. ' o' → logprob: -9.24150276184082

Token 2868: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.009571913629770279
    2. '=' → logprob: -5.3845720291137695
    3. '_,' → logprob: -6.2595720291137695
    4. ',
' → logprob: -6.8845720291137695
    5. 'def' → logprob: -7.0095720291137695
    6. ' =' → logprob: -8.00957202911377
    7. ' ,' → logprob: -8.38457202911377
    8. ')' → logprob: -9.13457202911377
    9. '
' → logprob: -9.38457202911377
    10. 'return' → logprob: -10.13457202911377

Token 2869: ' u' (ID: 337)
  Prédit: 'u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'u' → logprob: -0.0009498104336671531
    2. ' u' → logprob: -7.000949859619141
    3. '           ' → logprob: -11.00094985961914
    4. '(u' → logprob: -12.25094985961914
    5. '   ' → logprob: -12.75094985961914
    6. '_u' → logprob: -13.50094985961914
    7. '            ' → logprob: -13.62594985961914
    8. '       ' → logprob: -13.62594985961914
    9. 'self' → logprob: -13.62594985961914
    10. '	u' → logprob: -13.75094985961914

Token 2870: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0025445125065743923
    2. '_vec' → logprob: -7.127544403076172
    3. ' ,' → logprob: -7.252544403076172
    4. ',v' → logprob: -7.752544403076172
    5. '_vector' → logprob: -8.127544403076172
    6. ',u' → logprob: -9.377544403076172
    7. 'vec' → logprob: -9.627544403076172
    8. '_,' → logprob: -10.627544403076172
    9. '_vect' → logprob: -10.877544403076172
    10. '=' → logprob: -11.002544403076172

Token 2871: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.008614808320999146
    2. ' v' → logprob: -4.758615016937256
    3. '	v' → logprob: -15.508614540100098
    4. '_v' → logprob: -18.383615493774414
    5. '   ' → logprob: -18.508615493774414
    6. '(v' → logprob: -18.633615493774414
    7. '           ' → logprob: -18.883615493774414
    8. '    ' → logprob: -19.633615493774414
    9. ' ' → logprob: -20.133615493774414
    10. ')v' → logprob: -20.383615493774414

Token 2872: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.08160996437072754
    2. ' =' → logprob: -2.5816099643707275
    3. '           ' → logprob: -6.081609725952148
    4. '   ' → logprob: -8.581609725952148
    5. ',' → logprob: -9.331609725952148
    6. ' ' → logprob: -10.206609725952148
    7. '       ' → logprob: -10.331609725952148
    8. 'def' → logprob: -10.831609725952148
    9. ')' → logprob: -11.331609725952148
    10. '               ' → logprob: -11.581609725952148

Token 2873: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.008646479807794094
    2. ' self' → logprob: -4.758646488189697
    3. '           ' → logprob: -10.383646011352539
    4. '               ' → logprob: -15.133646011352539
    5. 't' → logprob: -15.383646011352539
    6. '	self' → logprob: -15.758646011352539
    7. '(self' → logprob: -16.13364601135254
    8. '   ' → logprob: -16.38364601135254
    9. '                   ' → logprob: -17.00864601135254
    10. '[self' → logprob: -17.50864601135254

Token 2874: '.t' (ID: 1370)
  Prédit: '.t'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.t' → logprob: -0.0014940340770408511
    2. 'face' → logprob: -7.25149393081665
    3. '.face' → logprob: -7.62649393081665
    4. 't' → logprob: -8.501494407653809
    5. 'tet' → logprob: -10.126494407653809
    6. '.' → logprob: -10.626494407653809
    7. ' .' → logprob: -11.501494407653809
    8. '   ' → logprob: -12.251494407653809
    9. 'self' → logprob: -12.876494407653809
    10. '	t' → logprob: -13.376494407653809

Token 2875: 'etra' (ID: 72836)
  Prédit: 'etra'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'etra' → logprob: -0.013776871375739574
    2. 'face' → logprob: -4.513776779174805
    3. '.face' → logprob: -7.888776779174805
    4. 'et' → logprob: -8.513776779174805
    5. 'etri' → logprob: -8.638776779174805
    6. 'tet' → logprob: -8.888776779174805
    7. 'race' → logprob: -9.013776779174805
    8. 'def' → logprob: -9.013776779174805
    9. '_face' → logprob: -9.138776779174805
    10. 'etras' → logprob: -9.388776779174805

Token 2876: '.face' (ID: 92193)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.24392658472061157
    2. 'face' → logprob: -1.6189265251159668
    3. '.face' → logprob: -4.368926525115967
    4. '_face' → logprob: -5.743926525115967
    5. '(face' → logprob: -6.368926525115967
    6. '
' → logprob: -8.118927001953125
    7. '   ' → logprob: -9.618927001953125
    8. '[f' → logprob: -9.743927001953125
    9. ' face' → logprob: -9.993927001953125
    10. ' ' → logprob: -10.243927001953125

Token 2877: '_b' (ID: 1535)
  Prédit: '_b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_b' → logprob: -1.5048530030981055e-06
    2. '_basis' → logprob: -13.875001907348633
    3. 'bases' → logprob: -15.000001907348633
    4. '   ' → logprob: -15.875001907348633
    5. '_bas' → logprob: -17.500001907348633
    6. ' _' → logprob: -17.625001907348633
    7. '       ' → logprob: -18.250001907348633
    8. '_faces' → logprob: -18.500001907348633
    9. 'Bases' → logprob: -18.750001907348633
    10. 'basis' → logprob: -19.125001907348633

Token 2878: 'ases' (ID: 4324)
  Prédit: 'ases'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ases' → logprob: -0.0008546437602490187
    2. 'bases' → logprob: -7.1258544921875
    3. '_b' → logprob: -10.0008544921875
    4. 'ase' → logprob: -13.6258544921875
    5. 'asis' → logprob: -14.1258544921875
    6. '#' → logprob: -14.6258544921875
    7. '_' → logprob: -14.7508544921875
    8. 'ses' → logprob: -14.7508544921875
    9. 'Bases' → logprob: -14.7508544921875
    10. '[' → logprob: -15.6258544921875

Token 2879: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -2.5776860184123507e-06
    2. 'face' → logprob: -13.00000286102295
    3. '(face' → logprob: -15.12500286102295
    4. '[f' → logprob: -17.000001907348633
    5. '```' → logprob: -17.750001907348633
    6. ' face' → logprob: -18.625001907348633
    7. '
' → logprob: -18.750001907348633
    8. '_face' → logprob: -19.000001907348633
    9. '[
' → logprob: -19.000001907348633
    10. '.face' → logprob: -19.500001907348633

Token 2880: 'face' (ID: 2300)
  Prédit: 'face'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'face' → logprob: -8.180258191714529e-06
    2. ' face' → logprob: -12.125008583068848
    3. '[' → logprob: -13.500008583068848
    4. '(face' → logprob: -13.750008583068848
    5. '
' → logprob: -16.75000762939453
    6. ']' → logprob: -16.75000762939453
    7. '```' → logprob: -17.00000762939453
    8. 'f' → logprob: -17.12500762939453
    9. ')' → logprob: -17.50000762939453
    10. '.face' → logprob: -17.87500762939453

Token 2881: ']
' (ID: 1592)
  Prédit: ']
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']
' → logprob: -0.03535420447587967
    2. '           ' → logprob: -3.9103541374206543
    3. '][' → logprob: -5.035354137420654
    4. ']' → logprob: -5.035354137420654
    5. '
' → logprob: -7.285354137420654
    6. '[' → logprob: -8.285354614257812
    7. '   ' → logprob: -8.535354614257812
    8. '       ' → logprob: -8.535354614257812
    9. ',' → logprob: -9.410354614257812
    10. '               ' → logprob: -9.785354614257812

Token 2882: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0020824549719691277
    2. 'return' → logprob: -6.627082347869873
    3. '
' → logprob: -7.627082347869873
    4. ' return' → logprob: -8.627082824707031
    5. '   ' → logprob: -11.127082824707031
    6. 'x' → logprob: -11.377082824707031
    7. '            
' → logprob: -11.377082824707031
    8. '		' → logprob: -11.877082824707031
    9. '	       ' → logprob: -12.002082824707031
    10. 'u' → logprob: -12.002082824707031

Token 2883: ' #' (ID: 1069)
  Prédit: 'u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'u' → logprob: -0.14183582365512848
    2. 'du' → logprob: -2.766835927963257
    3. 'dot' → logprob: -4.141835689544678
    4. '   ' → logprob: -4.516835689544678
    5. '#' (adapté à ' #') → logprob: -4.641835689544678
    6. '           ' → logprob: -4.766835689544678
    7. 'x' → logprob: -5.391835689544678
    8. 'return' → logprob: -5.641835689544678
    9. 'ux' → logprob: -5.641835689544678
    10. 'proj' → logprob: -6.141835689544678

Token 2884: ' dir' (ID: 5609)
  Prédit: 'u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'u' → logprob: -1.6848869323730469
    2. 'w' → logprob: -1.6848869323730469
    3. 'du' → logprob: -1.8098869323730469
    4. 'dot' → logprob: -1.8098869323730469
    5. '#' → logprob: -2.059886932373047
    6. 'vec' → logprob: -2.684886932373047
    7. 'proj' → logprob: -3.684886932373047
    8. '   ' → logprob: -3.809886932373047
    9. 'd' → logprob: -4.559886932373047
    10. 'ux' → logprob: -4.809886932373047

Token 2885: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.08599470555782318
    2. '_' → logprob: -3.7109947204589844
    3. '_x' → logprob: -4.085994720458984
    4. '_proj' → logprob: -4.085994720458984
    5. '_u' → logprob: -4.460994720458984
    6. '           ' → logprob: -5.210994720458984
    7. ' =' → logprob: -6.335994720458984
    8. '   ' → logprob: -6.835994720458984
    9. '_dot' → logprob: -7.085994720458984
    10. '_components' → logprob: -7.460994720458984

Token 2886: 'd' (ID: 67)
  Prédit: '3'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.3915546238422394
    2. 'd' → logprob: -1.141554594039917
    3. '_dir' → logprob: -6.141554832458496
    4. ' =' → logprob: -7.391554832458496
    5. '_d' → logprob: -7.641554832458496
    6. '   ' → logprob: -7.641554832458496
    7. 'dir' → logprob: -7.891554832458496
    8. '           ' → logprob: -8.391554832458496
    9. '=' → logprob: -9.391554832458496
    10. '       ' → logprob: -9.516554832458496

Token 2887: ' projected' (ID: 49179)
  Prédit: '_proj'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_proj' → logprob: -0.6350843906402588
    2. '_dot' → logprob: -1.0100843906402588
    3. ' =' → logprob: -3.635084390640259
    4. '=' → logprob: -4.01008415222168
    5. '_vector' → logprob: -4.76008415222168
    6. '_vec' → logprob: -4.76008415222168
    7. '_u' → logprob: -4.76008415222168
    8. '_on' → logprob: -5.01008415222168
    9. '_in' → logprob: -5.13508415222168
    10. '_rel' → logprob: -5.38508415222168

Token 2888: ' onto' (ID: 13291)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.7640212178230286
    2. '_on' → logprob: -1.6390211582183838
    3. '_' → logprob: -2.139021158218384
    4. '=' → logprob: -2.139021158218384
    5. '_proj' → logprob: -2.639021158218384
    6. '_u' → logprob: -5.014021396636963
    7. '_dir' → logprob: -5.139021396636963
    8. ' onto' → logprob: -5.764021396636963
    9. 'onto' → logprob: -5.889021396636963
    10. '_dot' → logprob: -6.264021396636963

Token 2889: ' plane' (ID: 16499)
  Prédit: 'u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'u' → logprob: -0.013788052834570408
    2. '(u' → logprob: -4.638788223266602
    3. ' u' → logprob: -6.013788223266602
    4. ' (' → logprob: -7.263788223266602
    5. '(' → logprob: -8.138788223266602
    6. 'plane' → logprob: -8.638788223266602
    7. 'face' → logprob: -9.388788223266602
    8. 'vector' → logprob: -9.388788223266602
    9. 'the' → logprob: -9.763788223266602
    10. '(
' → logprob: -10.013788223266602

Token 2890: '(u' (ID: 17057)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.08293145895004272
    2. '=' → logprob: -2.8329315185546875
    3. ':' → logprob: -5.0829315185546875
    4. '           ' → logprob: -5.5829315185546875
    5. '_proj' → logprob: -5.7079315185546875
    6. ',' → logprob: -7.3329315185546875
    7. '_u' → logprob: -7.4579315185546875
    8. ':
' → logprob: -7.5829315185546875
    9. ' is' → logprob: -7.7079315185546875
    10. ' =
' → logprob: -7.7079315185546875

Token 2891: ',v' (ID: 30680)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.09228688478469849
    2. ',u' → logprob: -2.4672868251800537
    3. ',v' → logprob: -6.592287063598633
    4. ' ,' → logprob: -6.717287063598633
    5. '_,' → logprob: -8.217287063598633
    6. ')' → logprob: -8.592287063598633
    7. ',
' → logprob: -9.342287063598633
    8. '_vector' → logprob: -10.592287063598633
    9. 'u' → logprob: -10.717287063598633
    10. ',w' → logprob: -10.717287063598633

Token 2892: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.2640863060951233
    2. ')
' → logprob: -2.0140862464904785
    3. ',' → logprob: -3.1390862464904785
    4. '):
' → logprob: -3.6390862464904785
    5. '):' → logprob: -3.7640862464904785
    6. '),' → logprob: -6.5140862464904785
    7. ')[' → logprob: -7.0140862464904785
    8. '):

' → logprob: -7.6390862464904785
    9. ' ,' → logprob: -7.7640862464904785
    10. ')

' → logprob: -7.8890862464904785

Token 2893: ' basis' (ID: 9571)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.6279147863388062
    2. '_u' → logprob: -2.0029149055480957
    3. '_proj' → logprob: -2.1279149055480957
    4. '=' → logprob: -2.8779149055480957
    5. '
' → logprob: -3.2529149055480957
    6. '           ' → logprob: -3.2529149055480957
    7. 'u' → logprob: -3.8779149055480957
    8. '_x' → logprob: -4.252914905548096
    9. '_projection' → logprob: -4.377914905548096
    10. 'proj' → logprob: -4.752914905548096

Token 2894: ':' (ID: 25)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.548464834690094
    2. '=' → logprob: -1.7984647750854492
    3. '
' → logprob: -2.298464775085449
    4. '           ' → logprob: -2.798464775085449
    5. ':' → logprob: -3.173464775085449
    6. ':
' → logprob: -4.298464775085449
    7. '=
' → logprob: -4.423464775085449
    8. ',' → logprob: -5.173464775085449
    9. '\n' → logprob: -5.673464775085449
    10. ' =
' → logprob: -5.798464775085449

Token 2895: ' (' (ID: 350)
  Prédit: 'u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'u' → logprob: -0.7257657647132874
    2. '(
' → logprob: -1.6007657051086426
    3. '(u' → logprob: -2.2257657051086426
    4. 'du' → logprob: -2.7257657051086426
    5. 'dot' → logprob: -3.1007657051086426
    6. '(' → logprob: -3.3507657051086426
    7. '(dot' → logprob: -4.600765705108643
    8. '   ' → logprob: -4.600765705108643
    9. 'x' → logprob: -4.725765705108643
    10. 'ux' → logprob: -4.850765705108643

Token 2896: 'u' (ID: 84)
  Prédit: 'dot'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dot' → logprob: -0.01070455089211464
    2. '(dot' → logprob: -4.885704517364502
    3. ' dot' → logprob: -6.260704517364502
    4. 'dir' → logprob: -7.510704517364502
    5. ')' → logprob: -8.76070499420166
    6. 'round' → logprob: -9.01070499420166
    7. '   ' → logprob: -9.76070499420166
    8. '(
' → logprob: -10.13570499420166
    9. 'tuple' → logprob: -10.38570499420166
    10. 'project' → logprob: -10.38570499420166

Token 2897: '·' (ID: 5366)
  Prédit: '_dot'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_dot' → logprob: -0.9399436712265015
    2. 'dot' → logprob: -1.9399436712265015
    3. '_component' → logprob: -2.314943790435791
    4. '_coord' → logprob: -2.439943790435791
    5. 'component' → logprob: -2.939943790435791
    6. '_proj' → logprob: -3.314943790435791
    7. ',' → logprob: -3.314943790435791
    8. '_dir' → logprob: -3.314943790435791
    9. '_comp' → logprob: -3.939943790435791
    10. '.' → logprob: -3.939943790435791

Token 2898: 'dir' (ID: 6457)
  Prédit: 'dir'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dir' → logprob: -0.00021319588995538652
    2. ' dir' → logprob: -8.500213623046875
    3. '   ' → logprob: -12.750213623046875
    4. '	dir' → logprob: -13.000213623046875
    5. ')' → logprob: -13.375213623046875
    6. '(dir' → logprob: -13.625213623046875
    7. ' ' → logprob: -14.500213623046875
    8. 'direction' → logprob: -14.875213623046875
    9. '  ' → logprob: -16.000213623046875
    10. ' ' → logprob: -16.250213623046875

Token 2899: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.0011178308632224798
    2. ',' → logprob: -7.501117706298828
    3. ')' → logprob: -8.001117706298828
    4. '   ' → logprob: -10.001117706298828
    5. ')
' → logprob: -10.376117706298828
    6. '),' → logprob: -10.376117706298828
    7. ' ,' → logprob: -10.501117706298828
    8. '(u' → logprob: -11.376117706298828
    9. '
' → logprob: -11.751117706298828
    10. 'dir' → logprob: -12.001117706298828

Token 2900: 'd' (ID: 67)
  Prédit: 'd'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.3872123956680298
    2. '3' → logprob: -1.1372123956680298
    3. '   ' → logprob: -8.512212753295898
    4. ')' → logprob: -9.262212753295898
    5. ',' → logprob: -11.012212753295898
    6. ' ' → logprob: -12.012212753295898
    7. '),' → logprob: -12.512212753295898
    8. '
' → logprob: -12.637212753295898
    9. '  ' → logprob: -12.762212753295898
    10. '       ' → logprob: -13.012212753295898

Token 2901: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0016053172294050455
    2. ' ,' → logprob: -7.00160551071167
    3. ',
' → logprob: -7.87660551071167
    4. '),' → logprob: -8.376605033874512
    5. ')' → logprob: -10.126605033874512
    6. 'dir' → logprob: -11.876605033874512
    7. 'def' → logprob: -12.001605033874512
    8. ',u' → logprob: -12.501605033874512
    9. ')*' → logprob: -12.751605033874512
    10. '```' → logprob: -12.751605033874512

Token 2902: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.38687264919281006
    2. ' v' → logprob: -1.13687264919281
    3. '	v' → logprob: -14.386872291564941
    4. ' ' → logprob: -14.886872291564941
    5. '    ' → logprob: -15.261872291564941
    6. '   ' → logprob: -15.761872291564941
    7. ')' → logprob: -15.761872291564941
    8. ' ' → logprob: -16.511873245239258
    9. ')v' → logprob: -16.886873245239258
    10. '  ' → logprob: -17.136873245239258

Token 2903: '·' (ID: 5366)
  Prédit: '·'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '·' → logprob: -0.0483388788998127
    2. '.' → logprob: -3.6733388900756836
    3. '\xe2\x8b' → logprob: -5.173338890075684
    4. '_dot' → logprob: -5.298338890075684
    5. '.dot' → logprob: -5.673338890075684
    6. ')' → logprob: -6.048338890075684
    7. ' ·' → logprob: -6.173338890075684
    8. '_dir' → logprob: -7.298338890075684
    9. ',' → logprob: -7.798338890075684
    10. '-dot' → logprob: -7.798338890075684

Token 2904: 'dir' (ID: 6457)
  Prédit: 'dir'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dir' → logprob: -5.5577775128767826e-06
    2. ' dir' → logprob: -12.125005722045898
    3. '	dir' → logprob: -17.5000057220459
    4. '   ' → logprob: -18.3750057220459
    5. '(dir' → logprob: -18.5000057220459
    6. '
' → logprob: -18.6250057220459
    7. ' ' → logprob: -18.7500057220459
    8. ')' → logprob: -19.1250057220459
    9. 'direction' → logprob: -19.2500057220459
    10. '  ' → logprob: -19.5000057220459

Token 2905: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -3.774276774493046e-05
    2. 'dir' → logprob: -10.250038146972656
    3. 'face' → logprob: -13.500038146972656
    4. 'self' → logprob: -15.750038146972656
    5. '_dir' → logprob: -16.312538146972656
    6. ')' → logprob: -16.687538146972656
    7. 'd' → logprob: -16.687538146972656
    8. '
' → logprob: -16.812538146972656
    9. ' dir' → logprob: -17.250038146972656
    10. ' ' → logprob: -17.562538146972656

Token 2906: 'd' (ID: 67)
  Prédit: '3'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.032914772629737854
    2. 'd' → logprob: -3.532914876937866
    3. 'dir' → logprob: -5.782914638519287
    4. ')' → logprob: -10.157915115356445
    5. '   ' → logprob: -11.782915115356445
    6. 'ir' → logprob: -11.907915115356445
    7. ' ' → logprob: -11.907915115356445
    8. ',' → logprob: -12.282915115356445
    9. 'direction' → logprob: -12.782915115356445
    10. ' dir' → logprob: -13.157915115356445

Token 2907: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.004321402870118618
    2. ')
' → logprob: -6.004321575164795
    3. '           ' → logprob: -6.379321575164795
    4. ' )' → logprob: -9.504321098327637
    5. ')`' → logprob: -10.254321098327637
    6. ',' → logprob: -11.754321098327637
    7. '),' → logprob: -12.379321098327637
    8. '[' → logprob: -12.754321098327637
    9. ')
' → logprob: -13.004321098327637
    10. '       ' → logprob: -13.004321098327637

Token 2908: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0014269021339714527
    2. ' return' → logprob: -7.501426696777344
    3. 'return' → logprob: -8.251426696777344
    4. '   ' → logprob: -9.376426696777344
    5. '            ' → logprob: -9.376426696777344
    6. '       ' → logprob: -9.626426696777344
    7. ' ' → logprob: -9.626426696777344
    8. '(' → logprob: -10.001426696777344
    9. '               ' → logprob: -10.251426696777344
    10. '            
' → logprob: -10.501426696777344

Token 2909: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.20703527331352234
    2. 'u' → logprob: -2.7070353031158447
    3. '           ' → logprob: -3.3320353031158447
    4. '(u' → logprob: -3.8320353031158447
    5. ' return' → logprob: -3.9570353031158447
    6. 'dot' → logprob: -4.082035064697266
    7. '(' → logprob: -4.582035064697266
    8. '(
' → logprob: -5.457035064697266
    9. ' (' → logprob: -5.582035064697266
    10. 'du' → logprob: -6.457035064697266

Token 2910: ' (' (ID: 350)
  Prédit: '(dot'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(dot' → logprob: -0.0037905771750956774
    2. ' (' → logprob: -6.003790378570557
    3. 'dot' → logprob: -7.128790378570557
    4. '(' → logprob: -8.003790855407715
    5. '(tuple' → logprob: -9.503790855407715
    6. '(
' → logprob: -11.003790855407715
    7. '(vector' → logprob: -11.003790855407715
    8. '(float' → logprob: -11.378790855407715
    9. ' dot' → logprob: -11.503790855407715
    10. '(d' → logprob: -11.503790855407715

Token 2911: 'dot' (ID: 29155)
  Prédit: 'dot'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dot' → logprob: -8.125210297293961e-05
    2. ' dot' → logprob: -10.000081062316895
    3. '(dot' → logprob: -10.250081062316895
    4. 'round' → logprob: -15.375081062316895
    5. '   ' → logprob: -16.50008201599121
    6. '           ' → logprob: -16.87508201599121
    7. '-dot' → logprob: -17.87508201599121
    8. '.dot' → logprob: -18.12508201599121
    9. ')' → logprob: -18.25008201599121
    10. 'dir' → logprob: -18.25008201599121

Token 2912: '(dir' (ID: 32000)
  Prédit: '(u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(u' → logprob: -0.17614784836769104
    2. 'u' → logprob: -2.051147937774658
    3. '(' → logprob: -3.801147937774658
    4. '(dir' → logprob: -5.426147937774658
    5. 'dir' → logprob: -5.926147937774658
    6. '(
' → logprob: -6.176147937774658
    7. ' u' → logprob: -7.426147937774658
    8. ' (' → logprob: -7.426147937774658
    9. ')' → logprob: -9.1761474609375
    10. '(v' → logprob: -11.3011474609375

Token 2913: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.0032100381795316935
    2. '(u' → logprob: -5.753210067749023
    3. 'u' → logprob: -11.878210067749023
    4. '(v' → logprob: -12.003210067749023
    5. 'self' → logprob: -12.628210067749023
    6. '(t' → logprob: -12.628210067749023
    7. '(dir' → logprob: -13.003210067749023
    8. '(' → logprob: -13.253210067749023
    9. '(face' → logprob: -13.378210067749023
    10. 'face' → logprob: -14.003210067749023

Token 2914: 'd' (ID: 67)
  Prédit: '3'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.0004647504829335958
    2. 'd' → logprob: -7.750464916229248
    3. 'self' → logprob: -11.87546443939209
    4. '_dir' → logprob: -12.25046443939209
    5. 'dir' → logprob: -12.50046443939209
    6. '(self' → logprob: -12.62546443939209
    7. '(u' → logprob: -13.37546443939209
    8. '_d' → logprob: -13.50046443939209
    9. '(' → logprob: -13.75046443939209
    10. '=' → logprob: -14.00046443939209

Token 2915: ',u' (ID: 80698)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.006860651075839996
    2. ',u' → logprob: -5.381860733032227
    3. ' ,' → logprob: -6.131860733032227
    4. ',
' → logprob: -10.381860733032227
    5. '(u' → logprob: -12.006860733032227
    6. '   ' → logprob: -12.506860733032227
    7. '           ' → logprob: -12.506860733032227
    8. ',user' → logprob: -12.631860733032227
    9. ',v' → logprob: -13.131860733032227
    10. '    ' → logprob: -13.381860733032227

Token 2916: '),' (ID: 936)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.013916903175413609
    2. '),' → logprob: -4.388916969299316
    3. ')' → logprob: -6.638916969299316
    4. ' ,' → logprob: -10.138916969299316
    5. ',
' → logprob: -11.013916969299316
    6. '),
' → logprob: -11.013916969299316
    7. '),(' → logprob: -12.638916969299316
    8. '   ' → logprob: -12.638916969299316
    9. '           ' → logprob: -13.138916969299316
    10. ' ),' → logprob: -13.513916969299316

Token 2917: ' dot' (ID: 16579)
  Prédit: 'dot'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dot' → logprob: -0.004078997299075127
    2. ' dot' → logprob: -5.5040788650512695
    3. '(dot' → logprob: -14.50407886505127
    4. '-dot' → logprob: -17.629079818725586
    5. '.dot' → logprob: -18.504079818725586
    6. '_dot' → logprob: -19.754079818725586
    7. '   ' → logprob: -20.379079818725586
    8. 'Dot' → logprob: -21.004079818725586
    9. '    ' → logprob: -21.504079818725586
    10. '           ' → logprob: -22.004079818725586

Token 2918: '(dir' (ID: 32000)
  Prédit: '(dir'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(dir' → logprob: -0.01008540391921997
    2. 'dir' → logprob: -4.635085582733154
    3. '(' → logprob: -8.260085105895996
    4. ' dir' → logprob: -10.135085105895996
    5. ' (' → logprob: -11.135085105895996
    6. '(
' → logprob: -12.135085105895996
    7. '	dir' → logprob: -13.135085105895996
    8. '3' → logprob: -13.260085105895996
    9. 'face' → logprob: -13.510085105895996
    10. '_dir' → logprob: -13.635085105895996

Token 2919: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.576619029045105
    2. 'dir' → logprob: -0.826619029045105
    3. '(dir' → logprob: -7.3266191482543945
    4. ' dir' → logprob: -11.701619148254395
    5. ')' → logprob: -12.201619148254395
    6. 'direction' → logprob: -12.951619148254395
    7. 'doc' → logprob: -13.951619148254395
    8. 'd' → logprob: -14.076619148254395
    9. '	dir' → logprob: -14.201619148254395
    10. 'director' → logprob: -14.451619148254395

Token 2920: 'd' (ID: 67)
  Prédit: '3'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.0193264652043581
    2. 'dir' → logprob: -4.019326686859131
    3. '_dir' → logprob: -7.644326686859131
    4. '(dir' → logprob: -8.144326210021973
    5. 'ir' → logprob: -8.644326210021973
    6. ')' → logprob: -9.894326210021973
    7. 'd' → logprob: -9.894326210021973
    8. ' dir' → logprob: -10.269326210021973
    9. 'v' → logprob: -11.394326210021973
    10. ',' → logprob: -11.831826210021973

Token 2921: ',v' (ID: 30680)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.42896798253059387
    2. ',v' → logprob: -1.0539679527282715
    3. ' ,' → logprob: -8.30396842956543
    4. ',
' → logprob: -12.30396842956543
    5. ',u' → logprob: -12.30396842956543
    6. ',d' → logprob: -12.92896842956543
    7. 'v' → logprob: -13.05396842956543
    8. ',w' → logprob: -13.42896842956543
    9. '(v' → logprob: -14.80396842956543
    10. ',y' → logprob: -14.92896842956543

Token 2922: '))

' (ID: 9746)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -6.869017852295656e-06
    2. ')
' → logprob: -12.250006675720215
    3. ' )' → logprob: -13.875006675720215
    4. '       ' → logprob: -15.000006675720215
    5. ')}' → logprob: -15.625006675720215
    6. '),' → logprob: -15.875006675720215
    7. '           ' → logprob: -16.25000762939453
    8. '   ' → logprob: -16.25000762939453
    9. '))' → logprob: -16.25000762939453
    10. ')#' → logprob: -16.62500762939453

Token 2923: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0145559785887599
    2. '_' → logprob: -5.764555931091309
    3. '           ' → logprob: -5.764555931091309
    4. '        
' → logprob: -6.014555931091309
    5. '```' → logprob: -6.514555931091309
    6. '\' → logprob: -7.139555931091309
    7. '\n' → logprob: -7.639555931091309
    8. ')' → logprob: -8.014555931091309
    9. ' 
' → logprob: -8.139555931091309
    10. ',' → logprob: -8.139555931091309

Token 2924: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.147750124335289
    2. 'while' → logprob: -2.02275013923645
    3. ' while' → logprob: -6.022749900817871
    4. 'step' → logprob: -6.897749900817871
    5. '           ' → logprob: -7.022749900817871
    6. '```' → logprob: -8.397749900817871
    7. '
' → logprob: -8.647749900817871
    8. '        
' → logprob: -9.147749900817871
    9. 'face' → logprob: -9.897749900817871
    10. 'pos' → logprob: -10.272749900817871

Token 2925: ' Utility' (ID: 47715)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.0033211270347237587
    2. '       ' → logprob: -5.753321170806885
    3. ' while' → logprob: -9.003320693969727
    4. 'import' → logprob: -12.003320693969727
    5. '#' → logprob: -12.128320693969727
    6. '   ' → logprob: -13.003320693969727
    7. 'step' → logprob: -13.003320693969727
    8. 'current' → logprob: -14.003320693969727
    9. 'direction' → logprob: -14.253320693969727
    10. '           ' → logprob: -14.253320693969727

Token 2926: ' to' (ID: 316)
  Prédit: ' def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' def' → logprob: -0.7998237013816833
    2. 'def' → logprob: -0.7998237013816833
    3. '   ' → logprob: -2.924823760986328
    4. '       ' → logprob: -4.549823760986328
    5. '
' → logprob: -4.799823760986328
    6. '           ' → logprob: -5.299823760986328
    7. '(
' → logprob: -5.424823760986328
    8. ' to' → logprob: -6.174823760986328
    9. ' =' → logprob: -6.299823760986328
    10. '_' → logprob: -6.299823760986328

Token 2927: ' find' (ID: 1646)
  Prédit: 'normalize'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'normalize' → logprob: -0.5677261352539062
    2. 'find' → logprob: -1.6927261352539062
    3. 'project' → logprob: -2.0677261352539062
    4. 'while' → logprob: -3.0677261352539062
    5. ' find' → logprob: -3.8177261352539062
    6. ' project' → logprob: -4.692726135253906
    7. 'vector' → logprob: -4.692726135253906
    8. 'length' → logprob: -4.942726135253906
    9. 'continue' → logprob: -5.192726135253906
    10. 'import' → logprob: -5.567726135253906

Token 2928: ' intersection' (ID: 42002)
  Prédit: 'next'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'next' → logprob: -0.5203130841255188
    2. 'the' → logprob: -1.895313024520874
    3. ' next' → logprob: -2.145313024520874
    4. 'edge' → logprob: -3.270313024520874
    5. ' the' → logprob: -3.395313024520874
    6. ' edge' → logprob: -3.895313024520874
    7. 'closest' → logprob: -4.520313262939453
    8. '(
' → logprob: -4.645313262939453
    9. '_edge' → logprob: -5.270313262939453
    10. 'intersection' → logprob: -5.645313262939453

Token 2929: ' distance' (ID: 9324)
  Prédit: '_point'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_point' → logprob: -0.08291467279195786
    2. '_with' → logprob: -2.7079145908355713
    3. 'point' → logprob: -5.08291482925415
    4. '_' → logprob: -5.83291482925415
    5. 'with' → logprob: -6.33291482925415
    6. '(
' → logprob: -7.83291482925415
    7. '_line' → logprob: -7.83291482925415
    8. '_points' → logprob: -7.95791482925415
    9. ' point' → logprob: -8.207914352416992
    10. ' with' → logprob: -8.832914352416992

Token 2930: ' along' (ID: 4251)
  Prédit: '_to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_to' → logprob: -0.35999760031700134
    2. '_with' → logprob: -2.109997510910034
    3. '_on' → logprob: -2.734997510910034
    4. 'with' → logprob: -3.609997510910034
    5. 'def' → logprob: -3.734997510910034
    6. 'to' → logprob: -4.234997749328613
    7. '   ' → logprob: -4.734997749328613
    8. '       ' → logprob: -5.359997749328613
    9. '_point' → logprob: -5.359997749328613
    10. '_lambda' → logprob: -5.609997749328613

Token 2931: ' direction' (ID: 9262)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pos' → logprob: -0.3264164626598358
    2. 'dir' → logprob: -1.4514164924621582
    3. 'face' → logprob: -4.701416492462158
    4. 'ray' → logprob: -5.326416492462158
    5. 'the' → logprob: -5.451416492462158
    6. '(pos' → logprob: -5.701416492462158
    7. 'u' → logprob: -5.701416492462158
    8. 'x' → logprob: -5.826416492462158
    9. 'direction' → logprob: -5.826416492462158
    10. '(u' → logprob: -6.076416492462158

Token 2932: ' until' (ID: 4609)
  Prédit: '_to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_to' → logprob: -0.08328437805175781
    2. '_on' → logprob: -3.458284378051758
    3. '(pos' → logprob: -4.458284378051758
    4. '_pos' → logprob: -4.958284378051758
    5. 'pos' → logprob: -5.083284378051758
    6. 'to' → logprob: -5.458284378051758
    7. ' on' → logprob: -5.958284378051758
    8. '(
' → logprob: -6.208284378051758
    9. '_with' → logprob: -6.333284378051758
    10. '(' → logprob: -6.333284378051758

Token 2933: ' edge' (ID: 11165)
  Prédit: 'edge'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'edge' → logprob: -0.04214993491768837
    2. ' edge' → logprob: -3.2921500205993652
    3. 'an' → logprob: -6.542150020599365
    4. 'ray' → logprob: -7.042150020599365
    5. 'the' → logprob: -7.417150020599365
    6. 'pos' → logprob: -8.292149543762207
    7. ' an' → logprob: -8.667149543762207
    8. 'line' → logprob: -9.042149543762207
    9. 'segment' → logprob: -9.167149543762207
    10. ' the' → logprob: -9.542149543762207

Token 2934: ' is' (ID: 382)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.8812506794929504
    2. '(
' → logprob: -1.3812506198883057
    3. '(face' → logprob: -2.3812506198883057
    4. '_to' → logprob: -2.6312506198883057
    5. ' on' → logprob: -3.5062506198883057
    6. '(' → logprob: -3.5062506198883057
    7. ':' → logprob: -3.8812506198883057
    8. ' =' → logprob: -4.006250858306885
    9. '_on' → logprob: -4.131250858306885
    10. '=' → logprob: -5.006250858306885

Token 2935: ' hit' (ID: 7103)
  Prédit: 'found'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'found' → logprob: -0.11731544882059097
    2. 'hit' → logprob: -2.7423155307769775
    3. '(' → logprob: -4.117315292358398
    4. '1' → logprob: -4.992315292358398
    5. 'inter' → logprob: -4.992315292358398
    6. 'enc' → logprob: -5.867315292358398
    7. 're' → logprob: -5.992315292358398
    8. ' found' → logprob: -6.367315292358398
    9. 'face' → logprob: -6.367315292358398
    10. ' hit' → logprob: -6.742315292358398

Token 2936: ' on' (ID: 402)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.16371159255504608
    2. '       ' → logprob: -2.0387115478515625
    3. '

' → logprob: -5.5387115478515625
    4. '(' → logprob: -5.9137115478515625
    5. '
' → logprob: -6.0387115478515625
    6. ':
' → logprob: -6.1637115478515625
    7. ':' → logprob: -6.5387115478515625
    8. '           ' → logprob: -6.5387115478515625
    9. '(line' → logprob: -6.9137115478515625
    10. '```' → logprob: -6.9137115478515625

Token 2937: ' current' (ID: 2208)
  Prédit: 'face'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'face' → logprob: -0.029949724674224854
    2. 'pos' → logprob: -4.52994966506958
    3. 'current' → logprob: -4.65494966506958
    4. 'the' → logprob: -5.02994966506958
    5. '(face' → logprob: -6.90494966506958
    6. 'edge' → logprob: -7.77994966506958
    7. ' face' → logprob: -8.029950141906738
    8. 'unit' → logprob: -8.279950141906738
    9. '(' → logprob: -8.654950141906738
    10. 'point' → logprob: -9.029950141906738

Token 2938: ' face' (ID: 4950)
  Prédit: ' face'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' face' → logprob: -0.1271539330482483
    2. '_face' → logprob: -2.3771538734436035
    3. 'face' → logprob: -4.2521538734436035
    4. ' line' → logprob: -4.5021538734436035
    5. '_line' → logprob: -8.127154350280762
    6. '(face' → logprob: -8.502154350280762
    7. '_' → logprob: -8.627154350280762
    8. ' ' → logprob: -8.877154350280762
    9. '   ' → logprob: -9.252154350280762
    10. ' 
' → logprob: -9.627154350280762

Token 2939: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.1266360580921173
    2. '       ' → logprob: -2.376636028289795
    3. '(' → logprob: -4.751636028289795
    4. 'def' → logprob: -5.501636028289795
    5. ':
' → logprob: -5.876636028289795
    6. ':' → logprob: -6.001636028289795
    7. '        
' → logprob: -6.626636028289795
    8. '```' → logprob: -6.626636028289795
    9. '(
' → logprob: -7.126636028289795
    10. '
' → logprob: -7.126636028289795

Token 2940: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0218439232558012
    2. '        
' → logprob: -4.646843910217285
    3. '
' → logprob: -4.771843910217285
    4. '```' → logprob: -6.396843910217285
    5. '           ' → logprob: -7.771843910217285
    6. '(' → logprob: -9.021843910217285
    7. '\n' → logprob: -9.146843910217285
    8. ' 
' → logprob: -9.396843910217285
    9. '       
' → logprob: -9.521843910217285
    10. '\
' → logprob: -9.521843910217285

Token 2941: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0773421972990036
    2. '
' → logprob: -3.0773422718048096
    3. 'def' → logprob: -4.8273420333862305
    4. '        
' → logprob: -5.0773420333862305
    5. '```' → logprob: -5.3273420333862305
    6. ' def' → logprob: -6.0773420333862305
    7. ' 
' → logprob: -6.0773420333862305
    8. '   ' → logprob: -6.9523420333862305
    9. '    
' → logprob: -7.4523420333862305
    10. '           ' → logprob: -7.5773420333862305

Token 2942: ' The' (ID: 623)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.4039685130119324
    2. '       ' → logprob: -1.1539685726165771
    3. '        
' → logprob: -4.528968334197998
    4. 'def' → logprob: -6.153968334197998
    5. ' 
' → logprob: -7.153968334197998
    6. '```' → logprob: -7.153968334197998
    7. '#' → logprob: -7.403968334197998
    8. '    
' → logprob: -7.903968334197998
    9. '           ' → logprob: -8.028968811035156
    10. ' def' → logprob: -8.528968811035156

Token 2943: ' face' (ID: 4950)
  Prédit: ' def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' def' → logprob: -0.47029489278793335
    2. 'def' → logprob: -2.220294952392578
    3. ' current' → logprob: -2.720294952392578
    4. ' next' → logprob: -3.470294952392578
    5. ' epsilon' → logprob: -3.470294952392578
    6. 'current' → logprob: -4.220294952392578
    7. ' eps' → logprob: -4.220294952392578
    8. ' #' → logprob: -4.220294952392578
    9. '#' → logprob: -4.470294952392578
    10. '       ' → logprob: -4.970294952392578

Token 2944: ' is' (ID: 382)
  Prédit: '_vertices'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_vertices' → logprob: -0.4512633681297302
    2. '_edges' → logprob: -1.576263427734375
    3. '   ' → logprob: -3.576263427734375
    4. '#' → logprob: -3.576263427734375
    5. 'def' → logprob: -4.326263427734375
    6. '_' → logprob: -4.451263427734375
    7. 's' → logprob: -4.826263427734375
    8. '_coords' → logprob: -4.951263427734375
    9. '
' → logprob: -5.076263427734375
    10. 'vertices' → logprob: -5.076263427734375

Token 2945: ' triangle' (ID: 41487)
  Prédit: 'Face'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Face' → logprob: -0.2920876145362854
    2. '   ' → logprob: -3.1670875549316406
    3. '#' → logprob: -3.4170875549316406
    4. '(
' → logprob: -3.5420875549316406
    5. 'a' → logprob: -3.9170875549316406
    6. ' Face' → logprob: -3.9170875549316406
    7. 'face' → logprob: -4.042087554931641
    8. '(' → logprob: -4.667087554931641
    9. ' (' → logprob: -4.792087554931641
    10. 'Triangle' → logprob: -4.792087554931641

Token 2946: ' (' (ID: 350)
  Prédit: '(Vertex'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(Vertex' → logprob: -0.7836716175079346
    2. '(' → logprob: -2.0336716175079346
    3. '(
' → logprob: -2.4086716175079346
    4. '   ' → logprob: -2.7836716175079346
    5. ' with' → logprob: -2.9086716175079346
    6. ' of' → logprob: -3.2836716175079346
    7. 'with' → logprob: -3.4086716175079346
    8. '#' → logprob: -3.9086716175079346
    9. '(vertices' → logprob: -4.1586713790893555
    10. ' (' → logprob: -4.1586713790893555

Token 2947: 'A' (ID: 32)
  Prédit: 'face'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'face' → logprob: -0.10941397398710251
    2. ')' → logprob: -3.3594138622283936
    3. 'pos' → logprob: -3.4844138622283936
    4. '*' → logprob: -3.8594138622283936
    5. '
' → logprob: -5.984414100646973
    6. 'sorted' → logprob: -5.984414100646973
    7. 'Vertex' → logprob: -6.484414100646973
    8. ')*' → logprob: -6.609414100646973
    9. 'vertex' → logprob: -6.984414100646973
    10. 'f' → logprob: -6.984414100646973

Token 2948: ',X' (ID: 83943)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.011150871403515339
    2. ' ,' → logprob: -6.01115083694458
    3. ',v' → logprob: -6.01115083694458
    4. 'B' → logprob: -6.26115083694458
    5. ',B' → logprob: -6.26115083694458
    6. ',b' → logprob: -7.63615083694458
    7. '_,' → logprob: -7.88615083694458
    8. ',
' → logprob: -8.261151313781738
    9. 'v' → logprob: -8.636151313781738
    10. '
' → logprob: -8.636151313781738

Token 2949: ',Y' (ID: 71464)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.04113762825727463
    2. ',Y' → logprob: -3.2911376953125
    3. ',y' → logprob: -6.7911376953125
    4. 'Y' → logprob: -6.7911376953125
    5. ',
' → logprob: -8.1661376953125
    6. '),' → logprob: -8.4161376953125
    7. ' ,' → logprob: -8.9161376953125
    8. ',B' → logprob: -9.6661376953125
    9. ')' → logprob: -10.9161376953125
    10. ',),' → logprob: -11.0411376953125

Token 2950: ')' (ID: 8)
  Prédit: '):
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -1.0789190530776978
    2. ',' → logprob: -1.5789190530776978
    3. '):' → logprob: -1.7039190530776978
    4. ')' → logprob: -1.9539190530776978
    5. ')
' → logprob: -2.828918933868408
    6. '),' → logprob: -3.078918933868408
    7. '):

' → logprob: -4.453918933868408
    8. '   ' → logprob: -5.453918933868408
    9. 'vertices' → logprob: -6.203918933868408
    10. '_vertices' → logprob: -6.453918933868408

Token 2951: ' with' (ID: 483)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.62163245677948
    2. '       ' → logprob: -0.87163245677948
    3. ':' → logprob: -4.4966325759887695
    4. '#' → logprob: -4.7466325759887695
    5. '        
' → logprob: -5.1216325759887695
    6. ',' → logprob: -5.6216325759887695
    7. '   ' → logprob: -6.1216325759887695
    8. ' (' → logprob: -6.2466325759887695
    9. ' with' → logprob: -6.2466325759887695
    10. ':
' → logprob: -6.2466325759887695

Token 2952: ' local' (ID: 2698)
  Prédit: 'vertices'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'vertices' → logprob: -0.04028311371803284
    2. '(' → logprob: -4.915283203125
    3. 'three' → logprob: -5.415283203125
    4. 'origin' → logprob: -5.665283203125
    5. 'vs' → logprob: -5.665283203125
    6. 'u' → logprob: -5.790283203125
    7. ' vertices' → logprob: -5.915283203125
    8. '#' → logprob: -6.165283203125
    9. 'def' → logprob: -6.290283203125
    10. 'sorted' → logprob: -6.290283203125

Token 2953: ' ' (ID: 220)
  Prédit: 'coords'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'coords' → logprob: -0.5554578900337219
    2. 'coordinates' → logprob: -0.9304578900337219
    3. ' coordinates' → logprob: -4.680458068847656
    4. ' coords' → logprob: -4.930458068847656
    5. '_coords' → logprob: -5.055458068847656
    6. 'vertices' → logprob: -5.555458068847656
    7. 'coord' → logprob: -6.680458068847656
    8. 'coordinate' → logprob: -7.430458068847656
    9. ' ' → logprob: -7.805458068847656
    10. '   ' → logprob: -8.180458068847656

Token 2954: '2' (ID: 17)
  Prédit: 'coords'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'coords' → logprob: -0.3991032838821411
    2. 'coordinates' → logprob: -1.3991032838821411
    3. 'vertices' → logprob: -3.0241031646728516
    4. 'origin' → logprob: -4.149103164672852
    5. 'basis' → logprob: -5.899103164672852
    6. 'u' → logprob: -6.024103164672852
    7. '(u' → logprob: -6.399103164672852
    8. '```' → logprob: -6.399103164672852
    9. '#' → logprob: -6.649103164672852
    10. '(' → logprob: -6.774103164672852

Token 2955: 'D' (ID: 35)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.009380022063851357
    2. 'coords' → logprob: -5.384379863739014
    3. 'D' → logprob: -5.759379863739014
    4. 'coordinates' → logprob: -7.384379863739014
    5. '_coords' → logprob: -8.134380340576172
    6. 'coord' → logprob: -8.884380340576172
    7. 'vec' → logprob: -9.009380340576172
    8. ' coords' → logprob: -9.509380340576172
    9. ',' → logprob: -10.009380340576172
    10. ' coordinates' → logprob: -10.259380340576172

Token 2956: ' coords' (ID: 53253)
  Prédit: 'coords'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'coords' → logprob: -0.6112608313560486
    2. ' coordinates' → logprob: -1.7362608909606934
    3. 'coordinates' → logprob: -1.8612608909606934
    4. ' coords' → logprob: -2.3612608909606934
    5. '_coords' → logprob: -3.8612608909606934
    6. ' basis' → logprob: -5.736260890960693
    7. 'coord' → logprob: -6.361260890960693
    8. 'basis' → logprob: -6.486260890960693
    9. ' coordinate' → logprob: -7.236260890960693
    10. '
' → logprob: -7.361260890960693

Token 2957: '
' (ID: 198)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.7782841324806213
    2. '(' → logprob: -1.9032840728759766
    3. '=' → logprob: -2.9032840728759766
    4. ' =' → logprob: -3.4032840728759766
    5. ':' → logprob: -3.5282840728759766
    6. 'with' → logprob: -3.5282840728759766
    7. ' of' → logprob: -3.7782840728759766
    8. '(vertices' → logprob: -3.7782840728759766
    9. '=(' → logprob: -3.9032840728759766
    10. 'of' → logprob: -3.9032840728759766

Token 2958: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.43992850184440613
    2. '       ' → logprob: -1.1899285316467285
    3. '#' → logprob: -4.1899285316467285
    4. ':' → logprob: -4.3149285316467285
    5. '(' → logprob: -5.0649285316467285
    6. ',' → logprob: -5.4399285316467285
    7. 'def' → logprob: -5.6899285316467285
    8. ' (' → logprob: -6.1899285316467285
    9. '```' → logprob: -6.3149285316467285
    10. '
' → logprob: -6.8149285316467285

Token 2959: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0067639220505952835
    2. '#' (adapté à ' #') → logprob: -5.881763935089111
    3. 'def' → logprob: -6.506763935089111
    4. 'A' → logprob: -7.131763935089111
    5. ' A' → logprob: -8.006763458251953
    6. '           ' → logprob: -8.756763458251953
    7. ' def' → logprob: -8.881763458251953
    8. '
' → logprob: -9.256763458251953
    9. '```' → logprob: -9.256763458251953
    10. '   ' → logprob: -9.381763458251953

Token 2960: ' Current' (ID: 14536)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.5345776081085205
    2. '#' → logprob: -1.9095776081085205
    3. '       ' → logprob: -2.7845776081085205
    4. '   ' → logprob: -3.0345776081085205
    5. 'def' → logprob: -3.1595776081085205
    6. 'v' → logprob: -3.2845776081085205
    7. ' A' → logprob: -3.7845776081085205
    8. 'vertices' → logprob: -3.9095776081085205
    9. '
' → logprob: -4.659577369689941
    10. 'face' → logprob: -5.659577369689941

Token 2961: ' position' (ID: 4010)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pos' → logprob: -0.5823141932487488
    2. '_pos' → logprob: -1.4573142528533936
    3. 'position' → logprob: -2.5823142528533936
    4. '_position' → logprob: -2.9573142528533936
    5. 'point' → logprob: -3.8323142528533936
    6. '_face' → logprob: -4.2073140144348145
    7. '_point' → logprob: -4.4573140144348145
    8. ' position' → logprob: -4.8323140144348145
    9. 'face' → logprob: -5.8323140144348145
    10. '_edge' → logprob: -5.9573140144348145

Token 2962: ' pos' (ID: 1253)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.6185475587844849
    2. '=' → logprob: -1.8685475587844849
    3. ',' → logprob: -1.9935475587844849
    4. '_on' → logprob: -2.3685474395751953
    5. '
' → logprob: -4.868547439575195
    6. ' is' → logprob: -4.993547439575195
    7. '_x' → logprob: -4.993547439575195
    8. 'x' → logprob: -4.993547439575195
    9. ':' → logprob: -5.243547439575195
    10. '_,' → logprob: -5.243547439575195

Token 2963: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0040635596960783005
    2. '_on' → logprob: -5.879063606262207
    3. ' =' → logprob: -8.004063606262207
    4. 'on' → logprob: -8.629063606262207
    5. '_' → logprob: -8.879063606262207
    6. '           ' → logprob: -9.004063606262207
    7. '       ' → logprob: -9.129063606262207
    8. '   ' → logprob: -9.254063606262207
    9. '=' → logprob: -9.629063606262207
    10. '```' → logprob: -9.754063606262207

Token 2964: 'd' (ID: 67)
  Prédit: 'd'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.032416123896837234
    2. '2' → logprob: -3.5324161052703857
    3. '_d' → logprob: -6.407416343688965
    4. '   ' → logprob: -7.657416343688965
    5. ',' → logprob: -8.907416343688965
    6. ' =' → logprob: -9.282416343688965
    7. '_on' → logprob: -9.282416343688965
    8. '=' → logprob: -9.407416343688965
    9. 'dx' → logprob: -10.032416343688965
    10. '[' → logprob: -11.157416343688965

Token 2965: ',' (ID: 11)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.19697917997837067
    2. '=' → logprob: -2.321979284286499
    3. ':' → logprob: -3.696979284286499
    4. '
' → logprob: -3.821979284286499
    5. ' is' → logprob: -4.57197904586792
    6. ',' → logprob: -4.69697904586792
    7. '=(' → logprob: -5.44697904586792
    8. ')' → logprob: -5.82197904586792
    9. ' (' → logprob: -6.94697904586792
    10. 'x' → logprob: -7.07197904586792

Token 2966: ' direction' (ID: 9262)
  Prédit: 'dir'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dir' → logprob: -0.8679954409599304
    2. 'direction' → logprob: -1.1179955005645752
    3. '       ' → logprob: -2.242995500564575
    4. ' direction' → logprob: -3.117995500564575
    5. ' dir' → logprob: -3.492995500564575
    6. 'def' → logprob: -3.867995500564575
    7. 'pos' → logprob: -4.367995262145996
    8. '#' → logprob: -4.992995262145996
    9. '   ' → logprob: -4.992995262145996
    10. 'current' → logprob: -5.242995262145996

Token 2967: ' vector' (ID: 9727)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -1.0912442207336426
    2. '=(' → logprob: -1.4662442207336426
    3. 'vec' → logprob: -1.9662442207336426
    4. '2' → logprob: -2.2162442207336426
    5. '=' → logprob: -2.4662442207336426
    6. 'dx' → logprob: -3.5912442207336426
    7. 'dir' → logprob: -4.216244220733643
    8. '(dx' → logprob: -4.466244220733643
    9. '_vec' → logprob: -4.591244220733643
    10. ' (' → logprob: -5.466244220733643

Token 2968: ' ' (ID: 220)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.6084015965461731
    2. '(u' → logprob: -2.1084015369415283
    3. '2' → logprob: -2.2334015369415283
    4. 'dir' → logprob: -3.1084015369415283
    5. '=' → logprob: -3.2334015369415283
    6. '=(' → logprob: -3.8584015369415283
    7. ' (' → logprob: -3.8584015369415283
    8. 'dx' → logprob: -4.358401775360107
    9. '_dir' → logprob: -4.358401775360107
    10. '(dir' → logprob: -4.483401775360107

Token 2969: '2' (ID: 17)
  Prédit: 'dir'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dir' → logprob: -1.0929956436157227
    2. '=' → logprob: -1.4679956436157227
    3. '(u' → logprob: -1.8429956436157227
    4. ' =' → logprob: -2.7179956436157227
    5. 'dx' → logprob: -3.0929956436157227
    6. 'd' → logprob: -3.5929956436157227
    7. '=(' → logprob: -3.7179956436157227
    8. '(dir' → logprob: -4.092995643615723
    9. '(dx' → logprob: -4.217995643615723
    10. '(' → logprob: -4.342995643615723

Token 2970: 'dd' (ID: 1183)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.06360030919313431
    2. ',' → logprob: -3.5636003017425537
    3. '_d' → logprob: -3.6886003017425537
    4. 'D' → logprob: -6.063600540161133
    5. ',
' → logprob: -6.563600540161133
    6. '-d' → logprob: -6.813600540161133
    7. '
' → logprob: -7.563600540161133
    8. ' =' → logprob: -7.813600540161133
    9. '   ' → logprob: -7.938600540161133
    10. ',d' → logprob: -8.313600540161133

Token 2971: 'ir' (ID: 380)
  Prédit: 'ir'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ir' → logprob: -0.4801305830478668
    2. ',' → logprob: -1.9801305532455444
    3. 'irection' → logprob: -2.230130672454834
    4. ' =' → logprob: -2.355130672454834
    5. '_vec' → logprob: -4.230130672454834
    6. '2' → logprob: -5.230130672454834
    7. ',
' → logprob: -5.355130672454834
    8. '   ' → logprob: -5.855130672454834
    9. 'vec' → logprob: -6.480130672454834
    10. ')' → logprob: -6.480130672454834

Token 2972: '
' (ID: 198)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.18281057476997375
    2. '2' → logprob: -1.9328105449676514
    3. '=' → logprob: -5.0578107833862305
    4. '_' → logprob: -5.1828107833862305
    5. ':' → logprob: -6.3078107833862305
    6. '3' → logprob: -6.5578107833862305
    7. '_x' → logprob: -6.5578107833862305
    8. ',' → logprob: -6.9328107833862305
    9. '
' → logprob: -7.3078107833862305
    10. '=(' → logprob: -7.3078107833862305

Token 2973: '       ' (ID: 309)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.5542491674423218
    2. '       ' → logprob: -2.0542492866516113
    3. '
' → logprob: -2.4292492866516113
    4. ',' → logprob: -2.5542492866516113
    5. ' (' → logprob: -3.3042492866516113
    6. ':
' → logprob: -3.5542492866516113
    7. ' =' → logprob: -3.8042492866516113
    8. '   ' → logprob: -5.179249286651611
    9. '```' → logprob: -5.179249286651611
    10. '[' → logprob: -5.179249286651611

Token 2974: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.014428974129259586
    2. '
' → logprob: -5.264429092407227
    3. '```' → logprob: -5.514429092407227
    4. '        
' → logprob: -6.514429092407227
    5. 'def' → logprob: -6.639429092407227
    6. ' def' → logprob: -7.514429092407227
    7. '   ' → logprob: -8.139429092407227
    8. '           ' → logprob: -8.389429092407227
    9. '#' (adapté à ' #') → logprob: -8.639429092407227
    10. ',' → logprob: -8.764429092407227

Token 2975: ' Need' (ID: 19792)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.09936287999153137
    2. 'def' → logprob: -2.974362850189209
    3. '
' → logprob: -4.099362850189209
    4. '#' → logprob: -4.474362850189209
    5. 'A' → logprob: -5.724362850189209
    6. 'vertices' → logprob: -5.974362850189209
    7. 'face' → logprob: -6.224362850189209
    8. '   ' → logprob: -6.974362850189209
    9. 'while' → logprob: -6.974362850189209
    10. 'import' → logprob: -6.974362850189209

Token 2976: ' to' (ID: 316)
  Prédit: ' to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' to' → logprob: -0.25412052869796753
    2. 'to' → logprob: -1.7541205883026123
    3. '       ' → logprob: -3.5041205883026123
    4. 'def' → logprob: -5.254120349884033
    5. '_to' → logprob: -5.379120349884033
    6. '   ' → logprob: -5.754120349884033
    7. '      ' → logprob: -6.629120349884033
    8. '  ' → logprob: -6.879120349884033
    9. '        ' → logprob: -6.879120349884033
    10. '    ' → logprob: -7.129120349884033

Token 2977: ' find' (ID: 1646)
  Prédit: 'find'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'find' → logprob: -0.05553396791219711
    2. ' find' → logprob: -3.4305338859558105
    3. 'check' → logprob: -4.4305338859558105
    4. 'inter' → logprob: -5.8055338859558105
    5. 'compute' → logprob: -6.5555338859558105
    6. 'continue' → logprob: -6.6805338859558105
    7. 'def' → logprob: -6.9305338859558105
    8. 'import' → logprob: -7.8055338859558105
    9. 'next' → logprob: -7.9305338859558105
    10. '
' → logprob: -8.055534362792969

Token 2978: ' minimal' (ID: 19957)
  Prédit: ' minimal'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' minimal' → logprob: -1.455689549446106
    2. ' the' → logprob: -1.830689549446106
    3. 'the' → logprob: -2.0806894302368164
    4. ' next' → logprob: -2.2056894302368164
    5. 'min' → logprob: -2.7056894302368164
    6. 'minimal' → logprob: -2.8306894302368164
    7. 'distance' → logprob: -3.2056894302368164
    8. 'next' → logprob: -3.2056894302368164
    9. 'minimum' → logprob: -3.2056894302368164
    10. ' min' → logprob: -3.2056894302368164

Token 2979: ' positive' (ID: 8841)
  Prédit: 'positive'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'positive' → logprob: -0.7730985879898071
    2. 't' → logprob: -1.3980985879898071
    3. 'distance' → logprob: -1.7730985879898071
    4. ' positive' → logprob: -2.2730984687805176
    5. 'dist' → logprob: -5.273098468780518
    6. ' t' → logprob: -5.273098468780518
    7. ' distance' → logprob: -5.648098468780518
    8. 'pos' → logprob: -5.773098468780518
    9. '>' → logprob: -7.773098468780518
    10. 's' → logprob: -8.523098945617676

Token 2980: ' t' (ID: 260)
  Prédit: 'distance'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'distance' → logprob: -0.6768712997436523
    2. ' distance' → logprob: -1.3018712997436523
    3. ' t' → logprob: -1.9268712997436523
    4. 't' → logprob: -2.8018712997436523
    5. '_distance' → logprob: -5.301871299743652
    6. '_t' → logprob: -5.926871299743652
    7. ' edge' → logprob: -6.926871299743652
    8. 'dist' → logprob: -6.926871299743652
    9. '```' → logprob: -7.176871299743652
    10. ' positive' → logprob: -7.801871299743652

Token 2981: '>' (ID: 29)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.19511792063713074
    2. ' _' → logprob: -2.570117950439453
    3. ',' → logprob: -4.195117950439453
    4. ')' → logprob: -4.445117950439453
    5. '_token' → logprob: -4.570117950439453
    6. '_x' → logprob: -5.070117950439453
    7. ' for' → logprob: -5.195117950439453
    8. ' (' → logprob: -5.320117950439453
    9. '_
' → logprob: -5.695117950439453
    10. ' ' → logprob: -5.945117950439453

Token 2982: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.6598032712936401
    2. '1' → logprob: -0.9098032712936401
    3. ' ' → logprob: -2.5348033905029297
    4. '=' → logprob: -6.90980339050293
    5. '   ' → logprob: -9.78480339050293
    6. ',' → logprob: -11.03480339050293
    7. '-' → logprob: -11.40980339050293
    8. '
' → logprob: -11.53480339050293
    9. 'eps' → logprob: -11.53480339050293
    10. '>' → logprob: -11.65980339050293

Token 2983: ' such' (ID: 2238)
  Prédit: ' such'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' such' → logprob: -0.045881807804107666
    2. ' on' → logprob: -4.170881748199463
    3. ' to' → logprob: -4.920881748199463
    4. 'such' → logprob: -5.045881748199463
    5. ' for' → logprob: -5.170881748199463
    6. ' along' → logprob: -5.295881748199463
    7. ' that' → logprob: -6.420881748199463
    8. ' at' → logprob: -7.420881748199463
    9. ',' → logprob: -7.545881748199463
    10. ' in' → logprob: -7.795881748199463

Token 2984: ' that' (ID: 484)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -1.0106176137924194
    2. ' to' → logprob: -1.7606176137924194
    3. ' =' → logprob: -2.510617733001709
    4. ')' → logprob: -2.760617733001709
    5. 'to' → logprob: -2.760617733001709
    6. '_to' → logprob: -3.010617733001709
    7. '        ' → logprob: -3.885617733001709
    8. ',' → logprob: -3.885617733001709
    9. '_' → logprob: -4.010617733001709
    10. 'o' → logprob: -4.385617733001709

Token 2985: ' pos' (ID: 1253)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pos' → logprob: -0.2700748145580292
    2. '(pos' → logprob: -1.6450748443603516
    3. ' pos' → logprob: -4.770074844360352
    4. '(' → logprob: -4.895074844360352
    5. '(
' → logprob: -5.020074844360352
    6. 'the' → logprob: -5.270074844360352
    7. '#' → logprob: -5.520074844360352
    8. 'either' → logprob: -6.270074844360352
    9. 'any' → logprob: -6.520074844360352
    10. ' (' → logprob: -6.520074844360352

Token 2986: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.007299921475350857
    2. ' +' → logprob: -5.757299900054932
    3. '_' → logprob: -6.132299900054932
    4. '+' → logprob: -7.882299900054932
    5. '       ' → logprob: -8.25730037689209
    6. ' _' → logprob: -8.88230037689209
    7. '[' → logprob: -9.00730037689209
    8. '           ' → logprob: -9.00730037689209
    9. ' ' → logprob: -9.13230037689209
    10. ',' → logprob: -9.13230037689209

Token 2987: 'd' (ID: 67)
  Prédit: 'd'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.00280379899777472
    2. '2' → logprob: -6.002803802490234
    3. '   ' → logprob: -9.502803802490234
    4. '+' → logprob: -10.002803802490234
    5. ' +' → logprob: -10.127803802490234
    6. ',' → logprob: -10.252803802490234
    7. '_d' → logprob: -10.502803802490234
    8. '       ' → logprob: -10.627803802490234
    9. ' d' → logprob: -11.377803802490234
    10. '[' → logprob: -11.627803802490234

Token 2988: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.6355681419372559
    2. '+' → logprob: -0.7605681419372559
    3. '[' → logprob: -7.385568141937256
    4. ')' → logprob: -7.385568141937256
    5. ' plus' → logprob: -7.510568141937256
    6. '+
' → logprob: -8.760568618774414
    7. ' ' → logprob: -8.885568618774414
    8. '```' → logprob: -9.260568618774414
    9. '+x' → logprob: -9.260568618774414
    10. ' +
' → logprob: -9.385568618774414

Token 2989: ' t' (ID: 260)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.2786313593387604
    2. '(' → logprob: -2.0286314487457275
    3. 'dir' → logprob: -2.4036314487457275
    4. ' (' → logprob: -5.278631210327148
    5. 't' → logprob: -5.403631210327148
    6. '(t' → logprob: -5.403631210327148
    7. '(dir' → logprob: -6.028631210327148
    8. ' dir' → logprob: -6.528631210327148
    9. ' ' → logprob: -6.528631210327148
    10. ' t' → logprob: -8.028631210327148

Token 2990: '*' (ID: 9)
  Prédit: '*'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.562599778175354
    2. ' *' → logprob: -0.937599778175354
    3. '_dir' → logprob: -4.1875996589660645
    4. '*(' → logprob: -5.1875996589660645
    5. 'dir' → logprob: -5.4375996589660645
    6. '_' → logprob: -6.1875996589660645
    7. '2' → logprob: -6.5625996589660645
    8. ' (' → logprob: -6.8125996589660645
    9. ',' → logprob: -7.1875996589660645
    10. ' dir' → logprob: -7.1875996589660645

Token 2991: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.05421842262148857
    2. 'dir' → logprob: -3.0542185306549072
    3. '(' → logprob: -5.429218292236328
    4. ' dir' → logprob: -7.679218292236328
    5. ' ' → logprob: -8.554218292236328
    6. '(dir' → logprob: -8.554218292236328
    7. ' (' → logprob: -9.304218292236328
    8. '(
' → logprob: -9.554218292236328
    9. 'direction' → logprob: -9.679218292236328
    10. '_' → logprob: -10.804218292236328

Token 2992: 'dd' (ID: 1183)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.27681952714920044
    2. 'dir' → logprob: -1.6518194675445557
    3. 'dd' → logprob: -3.6518194675445557
    4. ',' → logprob: -4.901819705963135
    5. '_dir' → logprob: -5.276819705963135
    6. '_d' → logprob: -5.776819705963135
    7. ' d' → logprob: -6.151819705963135
    8. ' dir' → logprob: -6.401819705963135
    9. ' ' → logprob: -7.526819705963135
    10. ',d' → logprob: -7.526819705963135

Token 2993: 'ir' (ID: 380)
  Prédit: 'ir'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ir' → logprob: -0.0036173006519675255
    2. 'dir' → logprob: -5.628617286682129
    3. ' dir' → logprob: -11.503617286682129
    4. '_dir' → logprob: -12.128617286682129
    5. 'irection' → logprob: -14.253617286682129
    6. '
' → logprob: -15.378617286682129
    7. '(dir' → logprob: -15.378617286682129
    8. ' ir' → logprob: -15.753617286682129
    9. 'irr' → logprob: -16.503618240356445
    10. 'Dir' → logprob: -16.753618240356445

Token 2994: ' intersects' (ID: 198484)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.3221205472946167
    2. ':' → logprob: -3.4471206665039062
    3. '.x' → logprob: -3.5721206665039062
    4. '```' → logprob: -3.5721206665039062
    5. '_x' → logprob: -3.8221206665039062
    6. '==' → logprob: -4.197120666503906
    7. ')' → logprob: -4.322120666503906
    8. ' ==' → logprob: -4.572120666503906
    9. ':
' → logprob: -4.572120666503906
    10. '>=' → logprob: -4.697120666503906

Token 2995: ' triangle' (ID: 41487)
  Prédit: 'one'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'one' → logprob: -0.40086084604263306
    2. ' one' → logprob: -1.9008607864379883
    3. 'any' → logprob: -2.2758607864379883
    4. 'an' → logprob: -3.1508607864379883
    5. ' any' → logprob: -4.400860786437988
    6. 'a' → logprob: -4.525860786437988
    7. ' an' → logprob: -5.025860786437988
    8. 'the' → logprob: -6.650860786437988
    9. ' the' → logprob: -6.900860786437988
    10. 'edge' → logprob: -7.150860786437988

Token 2996: ' edge' (ID: 11165)
  Prédit: ' edges'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' edges' → logprob: -0.7919830083847046
    2. '_edges' → logprob: -1.1669830083847046
    3. '_edge' → logprob: -2.666983127593994
    4. 'edges' → logprob: -3.291983127593994
    5. '_boundary' → logprob: -3.416983127593994
    6. '
' → logprob: -3.541983127593994
    7. '_vertices' → logprob: -4.541983127593994
    8. '_side' → logprob: -4.541983127593994
    9. ' boundary' → logprob: -5.041983127593994
    10. ' sides' → logprob: -5.041983127593994

Token 2997: ' (' (ID: 350)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.4957016110420227
    2. ':' → logprob: -2.370701551437378
    3. ' (' → logprob: -2.995701551437378
    4. '_' → logprob: -3.370701551437378
    5. '(
' → logprob: -3.620701551437378
    6. ':
' → logprob: -3.870701551437378
    7. '(' → logprob: -3.870701551437378
    8. ',' → logprob: -4.120701789855957
    9. '
' → logprob: -4.245701789855957
    10. ' with' → logprob: -4.620701789855957

Token 2998: 'except' (ID: 25035)
  Prédit: 'Edge'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Edge' → logprob: -1.4609041213989258
    2. '#' → logprob: -1.7109041213989258
    3. 'Vertex' → logprob: -1.8359041213989258
    4. '(' → logprob: -1.9609041213989258
    5. '(Vertex' → logprob: -2.460904121398926
    6. 'edge' → logprob: -3.085904121398926
    7. ')' → logprob: -3.460904121398926
    8. '
' → logprob: -3.960904121398926
    9. 'e' → logprob: -3.960904121398926
    10. 'self' → logprob: -4.460904121398926

Token 2999: ' the' (ID: 290)
  Prédit: 'the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'the' → logprob: -0.6777737140655518
    2. 'pos' → logprob: -1.5527737140655518
    3. 'origin' → logprob: -2.9277737140655518
    4. ' the' → logprob: -3.0527737140655518
    5. '(pos' → logprob: -3.3027737140655518
    6. '(' → logprob: -3.5527737140655518
    7. 'starting' → logprob: -4.052773475646973
    8. 'at' → logprob: -4.177773475646973
    9. 'vertex' → logprob: -4.177773475646973
    10. ' (' → logprob: -4.802773475646973

Token 3000: ' one' (ID: 1001)
  Prédit: 'current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'current' → logprob: -1.4624751806259155
    2. 'point' → logprob: -1.5874751806259155
    3. 'vertex' → logprob: -1.9624751806259155
    4. 'origin' → logprob: -2.587475299835205
    5. ' current' → logprob: -2.837475299835205
    6. 'vertices' → logprob: -3.212475299835205
    7. 'edge' → logprob: -3.337475299835205
    8. 'pos' → logprob: -3.837475299835205
    9. 'start' → logprob: -3.962475299835205
    10. ' edge' → logprob: -3.962475299835205

Token 3001: ' facing' (ID: 20511)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.0600954294204712
    2. 's' → logprob: -1.5600954294204712
    3. ' not' → logprob: -1.6850954294204712
    4. ' that' → logprob: -2.9350953102111816
    5. ' opposite' → logprob: -2.9350953102111816
    6. 'not' → logprob: -4.185095310211182
    7. ' s' → logprob: -4.310095310211182
    8. ' between' → logprob: -4.435095310211182
    9. ' of' → logprob: -4.810095310211182
    10. ' ' → logprob: -4.935095310211182

Token 3002: ' back' (ID: 1602)
  Prédit: 'the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'the' → logprob: -0.4344747066497803
    2. 'pos' → logprob: -1.9344747066497803
    3. ')' → logprob: -2.5594747066497803
    4. ' the' → logprob: -2.5594747066497803
    5. 'A' → logprob: -4.309474945068359
    6. '```' → logprob: -4.934474945068359
    7. 'away' → logprob: -5.309474945068359
    8. 'vertex' → logprob: -5.434474945068359
    9. ' away' → logprob: -5.684474945068359
    10. 'current' → logprob: -5.809474945068359

Token 3003: ' to' (ID: 316)
  Prédit: 'ward'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ward' → logprob: -0.2930075228214264
    2. ')' → logprob: -1.418007493019104
    3. '),' → logprob: -5.9180073738098145
    4. ')
' → logprob: -6.1680073738098145
    5. 'wards' → logprob: -6.2930073738098145
    6. ',' → logprob: -6.2930073738098145
    7. 'edge' → logprob: -7.0430073738098145
    8. 'w' → logprob: -7.4180073738098145
    9. '_' → logprob: -7.9180073738098145
    10. '),
' → logprob: -8.668007850646973

Token 3004: ' starting' (ID: 8601)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pos' → logprob: -0.2690613269805908
    2. 'A' → logprob: -1.8940613269805908
    3. 'self' → logprob: -3.644061326980591
    4. 'Vertex' → logprob: -4.269061088562012
    5. 'the' → logprob: -5.019061088562012
    6. '0' → logprob: -5.019061088562012
    7. ')' → logprob: -5.269061088562012
    8. 'start' → logprob: -5.394061088562012
    9. 'position' → logprob: -5.769061088562012
    10. '(' → logprob: -5.894061088562012

Token 3005: ' vertex' (ID: 25363)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.2475998401641846
    2. 'point' → logprob: -1.7475998401641846
    3. '_edge' → logprob: -1.9975998401641846
    4. '_point' → logprob: -2.2475998401641846
    5. ' point' → logprob: -2.3725998401641846
    6. ' edge' → logprob: -2.8725998401641846
    7. '_' → logprob: -2.9975998401641846
    8. 'edge' → logprob: -4.1225996017456055
    9. ' ' → logprob: -4.4975996017456055
    10. ')
' → logprob: -4.8725996017456055

Token 3006: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.12694281339645386
    2. ')
' → logprob: -2.5019428730010986
    3. '):
' → logprob: -3.7519428730010986
    4. '):' → logprob: -5.0019426345825195
    5. ' )' → logprob: -5.7519426345825195
    6. 's' → logprob: -6.8769426345825195
    7. ' )
' → logprob: -6.8769426345825195
    8. ',' → logprob: -8.62694263458252
    9. ').' → logprob: -8.75194263458252
    10. '1' → logprob: -8.75194263458252

Token 3007: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.48259875178337097
    2. '
' → logprob: -1.1075987815856934
    3. '        
' → logprob: -3.3575987815856934
    4. '           ' → logprob: -5.732598781585693
    5. '    
' → logprob: -5.982598781585693
    6. ' 
' → logprob: -6.232598781585693
    7. '  
' → logprob: -6.732598781585693
    8. '(' → logprob: -6.982598781585693
    9. '\' → logprob: -7.107598781585693
    10. '#' → logprob: -7.107598781585693

Token 3008: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1610172986984253
    2. '
' → logprob: -2.786017417907715
    3. '           ' → logprob: -3.286017417907715
    4. '#' (adapté à ' #') → logprob: -3.911017417907715
    5. 'edges' → logprob: -4.536017417907715
    6. 'def' → logprob: -5.161017417907715
    7. 'pos' → logprob: -5.786017417907715
    8. 'import' → logprob: -6.036017417907715
    9. ' edges' → logprob: -6.036017417907715
    10. 'from' → logprob: -7.411017417907715

Token 3009: ' We' (ID: 1416)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6013817191123962
    2. '
' → logprob: -0.8513817191123962
    3. '           ' → logprob: -4.726381778717041
    4. '#' → logprob: -4.851381778717041
    5. '        
' → logprob: -5.101381778717041
    6. 'import' → logprob: -7.851381778717041
    7. '    
' → logprob: -7.976381778717041
    8. 'A' → logprob: -8.601381301879883
    9. '            
' → logprob: -8.601381301879883
    10. ' 
' → logprob: -8.726381301879883

Token 3010: ' exclude' (ID: 39566)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.839394748210907
    2. '   ' → logprob: -1.0893948078155518
    3. 'def' → logprob: -2.5893948078155518
    4. 'continue' → logprob: -2.8393948078155518
    5. ' =' → logprob: -3.9643948078155518
    6. '
' → logprob: -4.339394569396973
    7. '#' → logprob: -4.464394569396973
    8. ' continue' → logprob: -4.714394569396973
    9. '```' → logprob: -5.089394569396973
    10. ' def' → logprob: -5.214394569396973

Token 3011: ' the' (ID: 290)
  Prédit: ' edges'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' edges' → logprob: -0.8905981779098511
    2. 'edges' → logprob: -1.265598177909851
    3. 'the' → logprob: -1.515598177909851
    4. ' the' → logprob: -2.6405982971191406
    5. 'pos' → logprob: -5.890598297119141
    6. ' any' → logprob: -6.890598297119141
    7. 'checking' → logprob: -7.265598297119141
    8. 'edge' → logprob: -7.265598297119141
    9. ' vertices' → logprob: -7.390598297119141
    10. 'vertices' → logprob: -7.390598297119141

Token 3012: ' vertex' (ID: 25363)
  Prédit: 'edges'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'edges' → logprob: -1.3033740520477295
    2. '#' → logprob: -1.8033740520477295
    3. ' edges' → logprob: -2.3033740520477295
    4. 'first' → logprob: -3.3033740520477295
    5. 'rest' → logprob: -3.5533740520477295
    6. 'three' → logprob: -3.5533740520477295
    7. 'current' → logprob: -3.5533740520477295
    8. '```' → logprob: -3.5533740520477295
    9. 'closest' → logprob: -3.6783740520477295
    10. 'other' → logprob: -3.8033740520477295

Token 3013: ' A' (ID: 355)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.9036955237388611
    2. '1' → logprob: -1.7786955833435059
    3. 'def' → logprob: -2.778695583343506
    4. ' to' → logprob: -3.528695583343506
    5. 'A' → logprob: -3.903695583343506
    6. '0' → logprob: -4.028695583343506
    7. 'es' → logprob: -4.028695583343506
    8. '
' → logprob: -4.028695583343506
    9. ' =' → logprob: -4.028695583343506
    10. ')' → logprob: -4.028695583343506

Token 3014: ' from' (ID: 591)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.036171093583106995
    2. '
' → logprob: -3.6611711978912354
    3. '        
' → logprob: -5.411170959472656
    4. '#' → logprob: -6.286170959472656
    5. '           ' → logprob: -7.786170959472656
    6. '```' → logprob: -7.786170959472656
    7. ' edges' → logprob: -8.036170959472656
    8. ',' → logprob: -8.286170959472656
    9. ' 
' → logprob: -8.286170959472656
    10. 'import' → logprob: -8.411170959472656

Token 3015: ' intersections' (ID: 143513)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pos' → logprob: -0.6475698947906494
    2. 'consider' → logprob: -2.1475698947906494
    3. '(' → logprob: -2.2725698947906494
    4. 'the' → logprob: -2.7725698947906494
    5. '(pos' → logprob: -2.8975698947906494
    6. 'edges' → logprob: -3.5225698947906494
    7. '#' → logprob: -3.8975698947906494
    8. '[' → logprob: -3.8975698947906494
    9. 'face' → logprob: -4.02256965637207
    10. '{' → logprob: -4.27256965637207

Token 3016: ' since' (ID: 3630)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.3655052185058594
    2. '       ' → logprob: -1.4905052185058594
    3. '        
' → logprob: -2.9905052185058594
    4. ' 
' → logprob: -4.865505218505859
    5. '
' → logprob: -5.865505218505859
    6. '    
' → logprob: -6.115505218505859
    7. '#' → logprob: -6.490505218505859
    8. '\n' → logprob: -6.740505218505859
    9. ':
' → logprob: -6.740505218505859
    10. '  
' → logprob: -6.865505218505859

Token 3017: ' worm' (ID: 40598)
  Prédit: 'the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'the' → logprob: -0.886321485042572
    2. ' the' → logprob: -1.8863215446472168
    3. 'pos' → logprob: -1.8863215446472168
    4. 't' → logprob: -2.136321544647217
    5. ' t' → logprob: -2.386321544647217
    6. ' pos' → logprob: -3.511321544647217
    7. ' we' → logprob: -4.511321544647217
    8. ' not' → logprob: -4.761321544647217
    9. 'self' → logprob: -5.511321544647217
    10. 'we' → logprob: -5.636321544647217

Token 3018: ' never' (ID: 3779)
  Prédit: ' cannot'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' cannot' → logprob: -1.2182754278182983
    2. ' must' → logprob: -2.343275547027588
    3. ' is' → logprob: -2.468275547027588
    4. ' does' → logprob: -2.593275547027588
    5. ' should' → logprob: -2.968275547027588
    6. ' can' → logprob: -3.093275547027588
    7. ' can't' → logprob: -3.218275547027588
    8. ' will' → logprob: -3.343275547027588
    9. ' may' → logprob: -3.593275547027588
    10. ' ' → logprob: -3.593275547027588

Token 3019: ' stops' (ID: 29924)
  Prédit: 'moves'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'moves' → logprob: -0.5480416417121887
    2. ' moves' → logprob: -2.173041582107544
    3. 'turn' → logprob: -2.548041582107544
    4. 'go' → logprob: -2.923041582107544
    5. 'st' → logprob: -2.923041582107544
    6. '```' → logprob: -3.548041582107544
    7. 'starts' → logprob: -4.548041820526123
    8. 'will' → logprob: -4.548041820526123
    9. 'backs' → logprob: -4.798041820526123
    10. ' goes' → logprob: -4.798041820526123

Token 3020: ' near' (ID: 5862)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.6533902287483215
    2. '       ' → logprob: -0.7783902287483215
    3. '        
' → logprob: -4.528390407562256
    4. '
' → logprob: -6.278390407562256
    5. '#' → logprob: -6.403390407562256
    6. '```' → logprob: -6.903390407562256
    7. '           ' → logprob: -7.153390407562256
    8. ',' → logprob: -7.653390407562256
    9. 'import' → logprob: -7.778390407562256
    10. '    
' → logprob: -7.778390407562256

Token 3021: ' vertices' (ID: 38360)
  Prédit: 'edges'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'edges' → logprob: -1.3763668537139893
    2. 'the' → logprob: -2.0013668537139893
    3. 'that' → logprob: -2.0013668537139893
    4. '(' → logprob: -2.1263668537139893
    5. ' edges' → logprob: -2.5013668537139893
    6. 'vertex' → logprob: -2.7513668537139893
    7. 'A' → logprob: -3.0013668537139893
    8. 'edge' → logprob: -3.7513668537139893
    9. 'pos' → logprob: -3.8763668537139893
    10. 'an' → logprob: -4.00136661529541

Token 3022: ' except' (ID: 6384)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.08822344243526459
    2. '
' → logprob: -2.588223457336426
    3. '#' → logprob: -5.713223457336426
    4. '        
' → logprob: -5.963223457336426
    5. '```' → logprob: -7.213223457336426
    6. '           ' → logprob: -7.463223457336426
    7. ' edges' → logprob: -7.838223457336426
    8. 'def' → logprob: -8.588223457336426
    9. ' (' → logprob: -8.713223457336426
    10. ',' → logprob: -8.838223457336426

Token 3023: ' start' (ID: 1604)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.8884541988372803
    2. 'A' → logprob: -1.5134541988372803
    3. 'the' → logprob: -2.6384541988372803
    4. 'start' → logprob: -3.0134541988372803
    5. 'at' → logprob: -3.2634541988372803
    6. '(pos' → logprob: -3.5134541988372803
    7. 'pos' → logprob: -3.6384541988372803
    8. 'starting' → logprob: -3.6384541988372803
    9. 'exact' → logprob: -4.263454437255859
    10. 'current' → logprob: -4.388454437255859

Token 3024: '.
' (ID: 558)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.21428978443145752
    2. '
' → logprob: -1.7142897844314575
    3. '        
' → logprob: -5.089289665222168
    4. '           ' → logprob: -6.214289665222168
    5. '```' → logprob: -6.214289665222168
    6. 'import' → logprob: -7.339289665222168
    7. '#' → logprob: -7.714289665222168
    8. '    
' → logprob: -8.589289665222168
    9. 'def' → logprob: -8.964289665222168
    10. ',' → logprob: -8.964289665222168

Token 3025: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03171560540795326
    2. '
' → logprob: -3.7817156314849854
    3. '```' → logprob: -5.781715393066406
    4. '        
' → logprob: -6.281715393066406
    5. '#' → logprob: -6.906715393066406
    6. 'def' → logprob: -7.781715393066406
    7. 'import' → logprob: -8.406715393066406
    8. 'Here' → logprob: -8.406715393066406
    9. '           ' → logprob: -8.781715393066406
    10. '``' → logprob: -8.906715393066406

Token 3026: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.07538515329360962
    2. '
' → logprob: -3.075385093688965
    3. '#' (adapté à ' #') → logprob: -5.200385093688965
    4. 'def' → logprob: -5.200385093688965
    5. 'pos' → logprob: -5.450385093688965
    6. 'edges' → logprob: -5.575385093688965
    7. '           ' → logprob: -6.825385093688965
    8. '        
' → logprob: -7.075385093688965
    9. ' edges' → logprob: -7.075385093688965
    10. '   ' → logprob: -7.575385093688965

Token 3027: ' The' (ID: 623)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6524798274040222
    2. '
' → logprob: -0.9024798274040222
    3. '        
' → logprob: -3.027479887008667
    4. '#' → logprob: -4.277479648590088
    5. ' 
' → logprob: -5.652479648590088
    6. '  
' → logprob: -6.527479648590088
    7. '    
' → logprob: -6.652479648590088
    8. '#
' → logprob: -7.152479648590088
    9. '       
' → logprob: -8.027480125427246
    10. '\n' → logprob: -8.027480125427246

Token 3028: ' problem' (ID: 4792)
  Prédit: 'edges'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'edges' → logprob: -0.5800567865371704
    2. '#' → logprob: -2.205056667327881
    3. ' edges' → logprob: -2.330056667327881
    4. 'def' → logprob: -2.330056667327881
    5. 'A' → logprob: -4.205056667327881
    6. 'vertices' → logprob: -4.205056667327881
    7. 'faces' → logprob: -4.330056667327881
    8. 'edge' → logprob: -4.580056667327881
    9. 'face' → logprob: -4.705056667327881
    10. 'v' → logprob: -4.955056667327881

Token 3029: ' states' (ID: 9407)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -1.0090066194534302
    2. ' is' → logprob: -1.7590066194534302
    3. '```' → logprob: -1.7590066194534302
    4. ' continues' → logprob: -2.3840065002441406
    5. '#' → logprob: -2.8840065002441406
    6. 'is' → logprob: -3.7590065002441406
    7. ':' → logprob: -3.8840065002441406
    8. '       ' → logprob: -4.009006500244141
    9. ' has' → logprob: -4.759006500244141
    10. '``' → logprob: -4.759006500244141

Token 3030: ' worms' (ID: 109127)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.6918351054191589
    2. '       ' → logprob: -0.8168351054191589
    3. '```' → logprob: -3.8168351650238037
    4. '"""' → logprob: -4.441834926605225
    5. '"""
' → logprob: -4.816834926605225
    6. ' that' → logprob: -5.691834926605225
    7. 'that' → logprob: -5.941834926605225
    8. 'import' → logprob: -5.941834926605225
    9. ' #' → logprob: -6.441834926605225
    10. '   ' → logprob: -6.566834926605225

Token 3031: ' are' (ID: 553)
  Prédit: ' continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' continue' → logprob: -2.0236520767211914
    2. ' stops' → logprob: -2.2736520767211914
    3. ' never' → logprob: -2.6486520767211914
    4. ' always' → logprob: -2.6486520767211914
    5. ' can' → logprob: -2.7736520767211914
    6. 'continue' → logprob: -3.0236520767211914
    7. ''s' → logprob: -3.1486520767211914
    8. ''' → logprob: -3.1486520767211914
    9. 'moves' → logprob: -3.1486520767211914
    10. '#' → logprob: -3.3986520767211914

Token 3032: ' always' (ID: 3324)
  Prédit: ' guaranteed'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' guaranteed' → logprob: -1.9629790782928467
    2. 'gu' → logprob: -2.0879790782928467
    3. 'always' → logprob: -2.0879790782928467
    4. 'not' → logprob: -2.3379790782928467
    5. 'allowed' → logprob: -2.4629790782928467
    6. 'unlikely' → logprob: -2.4629790782928467
    7. ' always' → logprob: -3.0879790782928467
    8. ' unlikely' → logprob: -3.2129790782928467
    9. 'expected' → logprob: -3.4629790782928467
    10. 'likely' → logprob: -3.5879790782928467

Token 3033: ' more' (ID: 945)
  Prédit: 'inside'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'inside' → logprob: -1.2605739831924438
    2. 'strict' → logprob: -1.3855739831924438
    3. 'moving' → logprob: -2.1355738639831543
    4. ' guaranteed' → logprob: -2.2605738639831543
    5. 'gu' → logprob: -2.6355738639831543
    6. 'always' → logprob: -3.3855738639831543
    7. 'away' → logprob: -3.6355738639831543
    8. ' strictly' → logprob: -4.010573863983154
    9. ' inside' → logprob: -4.135573863983154
    10. 'not' → logprob: -4.135573863983154

Token 3034: ' than' (ID: 1572)
  Prédit: ' than'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' than' → logprob: -0.5652945637702942
    2. 'than' → logprob: -1.1902945041656494
    3. '```' → logprob: -3.5652945041656494
    4. '   ' → logprob: -4.3152947425842285
    5. ' precise' → logprob: -4.5652947425842285
    6. 'likely' → logprob: -4.6902947425842285
    7. '_than' → logprob: -4.8152947425842285
    8. 't' → logprob: -4.9402947425842285
    9. 'def' → logprob: -5.5652947425842285
    10. ' or' → logprob: -5.8152947425842285

Token 3035: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.07844308018684387
    2. '1' → logprob: -3.3284430503845215
    3. ' ' → logprob: -3.3284430503845215
    4. 'zero' → logprob: -6.3284430503845215
    5. ' zero' → logprob: -7.4534430503845215
    6. 'epsilon' → logprob: -7.4534430503845215
    7. ' epsilon' → logprob: -8.45344352722168
    8. ' unit' → logprob: -9.07844352722168
    9. 'unit' → logprob: -9.57844352722168
    10. 'eps' → logprob: -9.95344352722168

Token 3036: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.017658744007349014
    2. '1' → logprob: -4.142658710479736
    3. 'zero' → logprob: -7.267658710479736
    4. ' ' → logprob: -8.142659187316895
    5. 'epsilon' → logprob: -8.142659187316895
    6. 'eps' → logprob: -9.267659187316895
    7. 'EPS' → logprob: -10.142659187316895
    8. '```' → logprob: -10.517659187316895
    9. 't' → logprob: -11.017659187316895
    10. 'close' → logprob: -11.267659187316895

Token 3037: '.' (ID: 13)
  Prédit: '.'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.06880076229572296
    2. 'def' → logprob: -4.068800926208496
    3. '```' → logprob: -4.818800926208496
    4. '       ' → logprob: -5.318800926208496
    5. 'and' → logprob: -5.568800926208496
    6. ' and' → logprob: -5.568800926208496
    7. '.
' → logprob: -6.068800926208496
    8. '0' → logprob: -6.068800926208496
    9. ')' → logprob: -6.193800926208496
    10. '   ' → logprob: -6.318800926208496

Token 3038: '001' (ID: 7659)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.37620410323143005
    2. '
' → logprob: -1.6262041330337524
    3. '        
' → logprob: -3.001204013824463
    4. 'def' → logprob: -3.751204013824463
    5. '5' → logprob: -4.876204013824463
    6. '0' → logprob: -5.001204013824463
    7. '   ' → logprob: -5.126204013824463
    8. '2' → logprob: -5.751204013824463
    9. '           ' → logprob: -5.751204013824463
    10. '1' → logprob: -5.876204013824463

Token 3039: ' distant' (ID: 51041)
  Prédit: '5'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '5' → logprob: -1.418215036392212
    2. 'def' → logprob: -1.418215036392212
    3. '1' → logprob: -1.668215036392212
    4. '4' → logprob: -2.543215036392212
    5. '05' → logprob: -3.043215036392212
    6. '3' → logprob: -3.043215036392212
    7. '2' → logprob: -3.918215036392212
    8. '   ' → logprob: -4.043214797973633
    9. '
' → logprob: -4.168214797973633
    10. '.' → logprob: -4.168214797973633

Token 3040: ' from' (ID: 591)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.6669235825538635
    2. '       ' → logprob: -1.9169235229492188
    3. 'from' → logprob: -2.1669235229492188
    4. '   ' → logprob: -3.4169235229492188
    5. ' def' → logprob: -3.6669235229492188
    6. '```' → logprob: -3.7919235229492188
    7. ' from' → logprob: -3.7919235229492188
    8. ')' → logprob: -4.291923522949219
    9. '=' → logprob: -4.291923522949219
    10. ',' → logprob: -4.291923522949219

Token 3041: ' edges' (ID: 22569)
  Prédit: 'edges'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'edges' → logprob: -0.04700816050171852
    2. 'vertices' → logprob: -4.172008037567139
    3. ' edges' → logprob: -4.422008037567139
    4. 'all' → logprob: -4.797008037567139
    5. 'any' → logprob: -5.547008037567139
    6. 'edge' → logprob: -5.672008037567139
    7. 'vertex' → logprob: -6.922008037567139
    8. 'the' → logprob: -7.297008037567139
    9. 'triangle' → logprob: -8.297008514404297
    10. 'each' → logprob: -9.297008514404297

Token 3042: ' and' (ID: 326)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.49301406741142273
    2. '       ' → logprob: -0.9930140972137451
    3. '        
' → logprob: -4.493013858795166
    4. '#' → logprob: -6.618013858795166
    5. '           ' → logprob: -6.743013858795166
    6. '    
' → logprob: -6.993013858795166
    7. 'def' → logprob: -7.368013858795166
    8. '
' → logprob: -7.493013858795166
    9. ',' → logprob: -7.743013858795166
    10. ' 
' → logprob: -7.993013858795166

Token 3043: ' vertices' (ID: 38360)
  Prédit: 'vertices'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'vertices' → logprob: -0.17305472493171692
    2. '#' → logprob: -2.5480546951293945
    3. 'corn' → logprob: -3.4230546951293945
    4. 'faces' → logprob: -4.2980546951293945
    5. 'cannot' → logprob: -4.6730546951293945
    6. ' vertices' → logprob: -5.7980546951293945
    7. 'continue' → logprob: -6.1730546951293945
    8. 'inside' → logprob: -6.2980546951293945
    9. 'inter' → logprob: -6.4230546951293945
    10. 'not' → logprob: -6.4230546951293945

Token 3044: ' at' (ID: 540)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.08382003754377365
    2. '
' → logprob: -2.583820104598999
    3. '        
' → logprob: -6.20881986618042
    4. '           ' → logprob: -6.70881986618042
    5. 'def' → logprob: -7.58381986618042
    6. '```' → logprob: -7.95881986618042
    7. '#' → logprob: -8.208820343017578
    8. 'import' → logprob: -8.833820343017578
    9. '    
' → logprob: -9.708820343017578
    10. ',' → logprob: -10.208820343017578

Token 3045: ' stop' (ID: 5666)
  Prédit: 'all'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'all' → logprob: -0.7788257002830505
    2. 'each' → logprob: -1.6538257598876953
    3. 'end' → logprob: -2.4038257598876953
    4. 'which' → logprob: -2.5288257598876953
    5. 'least' → logprob: -2.5288257598876953
    6. 'any' → logprob: -3.9038257598876953
    7. 'the' → logprob: -4.278825759887695
    8. 'intersection' → logprob: -4.653825759887695
    9. 'rest' → logprob: -4.903825759887695
    10. 'every' → logprob: -5.153825759887695

Token 3046: '.
' (ID: 558)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6423872709274292
    2. '
' → logprob: -0.7673872709274292
    3. '        
' → logprob: -5.142387390136719
    4. 'def' → logprob: -6.642387390136719
    5. '           ' → logprob: -7.142387390136719
    6. '```' → logprob: -7.767387390136719
    7. '    
' → logprob: -8.517387390136719
    8. '
' → logprob: -8.642387390136719
    9. '#' → logprob: -8.767387390136719
    10. '

' → logprob: -9.517387390136719

Token 3047: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.04601535573601723
    2. '
' → logprob: -3.2960152626037598
    3. 'def' → logprob: -6.04601526260376
    4. '```' → logprob: -6.04601526260376
    5. '        
' → logprob: -6.54601526260376
    6. '#' → logprob: -7.29601526260376
    7. '           ' → logprob: -8.546015739440918
    8. '    
' → logprob: -9.546015739440918
    9. '``' → logprob: -9.546015739440918
    10. '(' → logprob: -9.546015739440918

Token 3048: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7542304396629333
    2. '
' → logprob: -1.3792304992675781
    3. '           ' → logprob: -1.7542304992675781
    4. 'def' → logprob: -2.379230499267578
    5. '#' (adapté à ' #') → logprob: -5.129230499267578
    6. 'while' → logprob: -6.629230499267578
    7. '            
' → logprob: -6.879230499267578
    8. '        
' → logprob: -7.004230499267578
    9. 'edges' → logprob: -7.629230499267578
    10. 'import' → logprob: -7.879230499267578

Token 3049: ' The' (ID: 623)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.34168434143066406
    2. '
' → logprob: -1.341684341430664
    3. '           ' → logprob: -4.466684341430664
    4. '#' → logprob: -4.841684341430664
    5. 'def' → logprob: -5.591684341430664
    6. '        
' → logprob: -6.341684341430664
    7. 'import' → logprob: -7.591684341430664
    8. '    
' → logprob: -7.841684341430664
    9. '```' → logprob: -8.091684341430664
    10. 'pos' → logprob: -8.216684341430664

Token 3050: ' method' (ID: 2595)
  Prédit: 'edges'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'edges' → logprob: -0.896513044834137
    2. 'def' → logprob: -1.1465129852294922
    3. '#' → logprob: -2.271512985229492
    4. ' edges' → logprob: -3.771512985229492
    5. 'face' → logprob: -4.021512985229492
    6. 'faces' → logprob: -4.021512985229492
    7. 'vertices' → logprob: -4.396512985229492
    8. '       ' → logprob: -4.646512985229492
    9. 'edge' → logprob: -4.646512985229492
    10. 'epsilon' → logprob: -4.771512985229492

Token 3051: ' is' (ID: 382)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.4154242277145386
    2. '       ' → logprob: -2.040424346923828
    3. ':' → logprob: -2.915424346923828
    4. '#' → logprob: -3.290424346923828
    5. '   ' → logprob: -3.540424346923828
    6. ' def' → logprob: -3.790424346923828
    7. '```' → logprob: -4.040424346923828
    8. '           ' → logprob: -4.165424346923828
    9. ':
' → logprob: -4.415424346923828
    10. 'is' → logprob: -6.165424346923828

Token 3052: ' to' (ID: 316)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.15881086885929108
    2. '       ' → logprob: -2.40881085395813
    3. '   ' → logprob: -3.90881085395813
    4. '"""' → logprob: -4.533811092376709
    5. '"""
' → logprob: -5.158811092376709
    6. '...' → logprob: -5.158811092376709
    7. '           ' → logprob: -5.158811092376709
    8. '#' → logprob: -6.033811092376709
    9. '```' → logprob: -6.158811092376709
    10. ' def' → logprob: -7.283811092376709

Token 3053: ' compute' (ID: 23864)
  Prédit: 'check'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'check' → logprob: -0.8685504794120789
    2. 'def' → logprob: -1.3685505390167236
    3. 'find' → logprob: -1.3685505390167236
    4. 'inter' → logprob: -3.4935505390167236
    5. '#' → logprob: -4.6185503005981445
    6. 'import' → logprob: -5.3685503005981445
    7. ' check' → logprob: -5.3685503005981445
    8. '   ' → logprob: -5.3685503005981445
    9. 'compute' → logprob: -5.8685503005981445
    10. 'continue' → logprob: -6.1185503005981445

Token 3054: ' intersection' (ID: 42002)
  Prédit: 'edges'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'edges' → logprob: -0.8784109950065613
    2. 'inter' → logprob: -1.253411054611206
    3. '#' → logprob: -2.628411054611206
    4. 't' → logprob: -3.253411054611206
    5. 'dist' → logprob: -3.378411054611206
    6. 'def' → logprob: -3.628411054611206
    7. 'for' → logprob: -4.003410816192627
    8. 'the' → logprob: -4.253410816192627
    9. ' intersections' → logprob: -4.253410816192627
    10. 'edge' → logprob: -4.378410816192627

Token 3055: ' with' (ID: 483)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.5794380307197571
    2. 'with' → logprob: -1.2044379711151123
    3. '_with' → logprob: -3.2044379711151123
    4. 'points' → logprob: -3.7044379711151123
    5. '_point' → logprob: -4.204438209533691
    6. 'point' → logprob: -4.329438209533691
    7. 't' → logprob: -4.454438209533691
    8. ' with' → logprob: -4.954438209533691
    9. '(s' → logprob: -5.454438209533691
    10. '_points' → logprob: -5.454438209533691

Token 3056: ' each' (ID: 2454)
  Prédit: 'each'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'each' → logprob: -0.06843099743127823
    2. 'all' → logprob: -3.4434309005737305
    3. 'edges' → logprob: -3.5684309005737305
    4. 'the' → logprob: -5.3184309005737305
    5. ' each' → logprob: -7.6934309005737305
    6. ' edges' → logprob: -8.94343090057373
    7. 'three' → logprob: -9.44343090057373
    8. 'faces' → logprob: -9.56843090057373
    9. 'any' → logprob: -9.56843090057373
    10. 'segments' → logprob: -9.94343090057373

Token 3057: ' edge' (ID: 11165)
  Prédit: ' edge'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' edge' → logprob: -0.6396985054016113
    2. 'edge' → logprob: -0.7646985054016113
    3. ' of' → logprob: -5.389698505401611
    4. 'of' → logprob: -6.889698505401611
    5. ' triangle' → logprob: -7.764698505401611
    6. '(edge' → logprob: -8.514698028564453
    7. ' ' → logprob: -8.639698028564453
    8. 'triangle' → logprob: -8.889698028564453
    9. '_edge' → logprob: -9.014698028564453
    10. 'face' → logprob: -9.889698028564453

Token 3058: ' segment' (ID: 14806)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.2292228937149048
    2. 'except' → logprob: -1.6042228937149048
    3. '2' → logprob: -2.8542227745056152
    4. '           ' → logprob: -2.9792227745056152
    5. '(
' → logprob: -3.1042227745056152
    6. 'pos' → logprob: -3.2292227745056152
    7. 's' → logprob: -3.4792227745056152
    8. '_pos' → logprob: -3.6042227745056152
    9. ',' → logprob: -3.7292227745056152
    10. ' except' → logprob: -3.7292227745056152

Token 3059: '.
' (ID: 558)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.9212425351142883
    2. '       ' → logprob: -1.4212424755096436
    3. '           ' → logprob: -2.2962424755096436
    4. 'def' → logprob: -3.0462424755096436
    5. ',' → logprob: -3.4212424755096436
    6. ' (' → logprob: -3.4212424755096436
    7. '(' → logprob: -3.5462424755096436
    8. ':
' → logprob: -3.6712424755096436
    9. '(
' → logprob: -3.6712424755096436
    10. ' with' → logprob: -4.546242713928223

Token 3060: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.22852769494056702
    2. '           ' → logprob: -2.103527784347534
    3. '
' → logprob: -2.978527784347534
    4. 'def' → logprob: -3.603527784347534
    5. '```' → logprob: -6.978527545928955
    6. 'edges' → logprob: -7.353527545928955
    7. '#' → logprob: -7.478527545928955
    8. ' def' → logprob: -7.978527545928955
    9. '        
' → logprob: -8.353528022766113
    10. ' edges' → logprob: -8.728528022766113

Token 3061: ' def' (ID: 1056)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.24171966314315796
    2. '
' → logprob: -2.1167197227478027
    3. '       ' → logprob: -2.4917197227478027
    4. 'def' (adapté à ' def') → logprob: -4.741719722747803
    5. '            
' → logprob: -7.366719722747803
    6. '#' → logprob: -7.741719722747803
    7. '        
' → logprob: -7.866719722747803
    8. '```' → logprob: -8.241719245910645
    9. 'edges' → logprob: -8.491719245910645
    10. '    
' → logprob: -9.116719245910645

Token 3062: ' find' (ID: 1646)
  Prédit: 'find'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'find' → logprob: -0.07997104525566101
    2. 'inter' → logprob: -3.3299710750579834
    3. 'distance' → logprob: -4.329970836639404
    4. 'compute' → logprob: -4.579970836639404
    5. 'intersection' → logprob: -5.329970836639404
    6. ' find' → logprob: -5.579970836639404
    7. 'next' → logprob: -5.579970836639404
    8. 'edge' → logprob: -6.204970836639404
    9. 'segment' → logprob: -7.079970836639404
    10. 'line' → logprob: -7.454970836639404

Token 3063: '_edge' (ID: 43226)
  Prédit: '_edge'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_edge' → logprob: -0.5601089000701904
    2. '_next' → logprob: -1.3101089000701904
    3. '_inter' → logprob: -2.0601089000701904
    4. 'next' → logprob: -4.4351091384887695
    5. 'intersection' → logprob: -4.4351091384887695
    6. 'edge' → logprob: -6.0601091384887695
    7. 'inter' → logprob: -6.0601091384887695
    8. '_distance' → logprob: -6.9351091384887695
    9. '_cl' → logprob: -8.31010913848877
    10. '_boundary' → logprob: -8.43510913848877

Token 3064: '_inter' (ID: 16818)
  Prédit: '_inter'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_inter' → logprob: -0.30501261353492737
    2. '_distance' → logprob: -1.430012583732605
    3. '_dist' → logprob: -3.9300127029418945
    4. '_t' → logprob: -6.1800127029418945
    5. '_to' → logprob: -6.6800127029418945
    6. '_' → logprob: -9.555012702941895
    7. '_hit' → logprob: -9.680012702941895
    8. '_length' → logprob: -9.805012702941895
    9. '_point' → logprob: -10.055012702941895
    10. '_line' → logprob: -10.305012702941895

Token 3065: 'section' (ID: 6471)
  Prédit: 'section'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'section' → logprob: -0.0381748341023922
    2. 'sect' → logprob: -3.288174867630005
    3. 'sections' → logprob: -10.038174629211426
    4. 's' → logprob: -10.538174629211426
    5. 'sec' → logprob: -10.538174629211426
    6. '```' → logprob: -11.413174629211426
    7. 'ection' → logprob: -11.913174629211426
    8. 'cept' → logprob: -12.288174629211426
    9. 'se' → logprob: -12.663174629211426
    10. 'sects' → logprob: -13.163174629211426

Token 3066: '(face' (ID: 127535)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.22813773155212402
    2. '(pos' → logprob: -1.978137731552124
    3. '(' → logprob: -3.103137731552124
    4. '_pos' → logprob: -5.103137969970703
    5. '(face' → logprob: -5.103137969970703
    6. '(
' → logprob: -5.228137969970703
    7. '_distance' → logprob: -6.603137969970703
    8. '(point' → logprob: -7.978137969970703
    9. '_(' → logprob: -8.353137969970703
    10. 'self' → logprob: -8.603137969970703

Token 3067: ':' (ID: 25)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.04561445116996765
    2. ':' → logprob: -3.29561448097229
    3. '       ' → logprob: -5.920614242553711
    4. '):' → logprob: -6.420614242553711
    5. '(face' → logprob: -6.670614242553711
    6. '           ' → logprob: -7.295614242553711
    7. '):
' → logprob: -7.920614242553711
    8. '   ' → logprob: -8.170614242553711
    9. ' ,' → logprob: -8.795614242553711
    10. '_,' → logprob: -9.920614242553711

Token 3068: ' Face' (ID: 29049)
  Prédit: 'Face'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Face' → logprob: -0.01131011825054884
    2. ' Face' → logprob: -4.51131010055542
    3. 'face' → logprob: -9.386310577392578
    4. ')' → logprob: -9.511310577392578
    5. ' face' → logprob: -10.011310577392578
    6. '.Face' → logprob: -11.011310577392578
    7. '_face' → logprob: -11.261310577392578
    8. 'Tuple' → logprob: -11.761310577392578
    9. '):
' → logprob: -12.636310577392578
    10. '
' → logprob: -12.761310577392578

Token 3069: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -4.429896944202483e-05
    2. '       ' → logprob: -10.750043869018555
    3. ' ,' → logprob: -11.500043869018555
    4. '           ' → logprob: -12.250043869018555
    5. '   ' → logprob: -12.875043869018555
    6. ',
' → logprob: -13.000043869018555
    7. ',pos' → logprob: -14.500043869018555
    8. '):' → logprob: -14.500043869018555
    9. ':' → logprob: -15.125043869018555
    10. '_,' → logprob: -15.250043869018555

Token 3070: ' pos' (ID: 1253)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pos' → logprob: -0.01238249521702528
    2. ' pos' → logprob: -4.887382507324219
    3. '           ' → logprob: -5.887382507324219
    4. '       ' → logprob: -7.762382507324219
    5. '               ' → logprob: -8.012382507324219
    6. '                   ' → logprob: -8.137382507324219
    7. '                       ' → logprob: -9.262382507324219
    8. 'p' → logprob: -9.762382507324219
    9. 'position' → logprob: -9.762382507324219
    10. '                    ' → logprob: -9.762382507324219

Token 3071: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0004343645414337516
    2. ',' → logprob: -8.375433921813965
    3. '       ' → logprob: -9.750433921813965
    4. ':' → logprob: -10.375433921813965
    5. '   ' → logprob: -10.750433921813965
    6. '           ' → logprob: -11.000433921813965
    7. '```' → logprob: -11.000433921813965
    8. '):' → logprob: -11.250433921813965
    9. ')' → logprob: -11.625433921813965
    10. '):
' → logprob: -11.875433921813965

Token 3072: 'd' (ID: 67)
  Prédit: 'd'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.00011534435179783031
    2. '2' → logprob: -9.125115394592285
    3. ',' → logprob: -13.500115394592285
    4. '
' → logprob: -14.250115394592285
    5. '_d' → logprob: -14.250115394592285
    6. '[' → logprob: -14.625115394592285
    7. '```' → logprob: -14.625115394592285
    8. '   ' → logprob: -14.625115394592285
    9. 'д' → logprob: -14.750115394592285
    10. ' d' → logprob: -14.750115394592285

Token 3073: ':' (ID: 25)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0013961880467832088
    2. ':' → logprob: -6.876396179199219
    3. ' ,' → logprob: -8.126396179199219
    4. '       ' → logprob: -10.626396179199219
    5. '   ' → logprob: -11.876396179199219
    6. '           ' → logprob: -12.001396179199219
    7. ',
' → logprob: -12.001396179199219
    8. '):' → logprob: -12.626396179199219
    9. ')' → logprob: -13.251396179199219
    10. '):
' → logprob: -13.376396179199219

Token 3074: ' Tuple' (ID: 50841)
  Prédit: 'Tuple'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Tuple' → logprob: -0.01435083243995905
    2. ' Tuple' → logprob: -4.264350891113281
    3. 'tuple' → logprob: -8.889350891113281
    4. 'float' → logprob: -11.389350891113281
    5. '_tuple' → logprob: -11.889350891113281
    6. ' tuple' → logprob: -12.264350891113281
    7. '   ' → logprob: -12.389350891113281
    8. '           ' → logprob: -12.639350891113281
    9. '.Tuple' → logprob: -13.014350891113281
    10. ' ' → logprob: -13.014350891113281

Token 3075: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.15813492238521576
    2. ',' → logprob: -2.283134937286377
    3. ',float' → logprob: -4.283134937286377
    4. '(float' → logprob: -4.408134937286377
    5. '<float' → logprob: -4.408134937286377
    6. '(' → logprob: -6.658134937286377
    7. '2' → logprob: -6.908134937286377
    8. ',
' → logprob: -7.283134937286377
    9. '=float' → logprob: -7.783134937286377
    10. 'float' → logprob: -7.783134937286377

Token 3076: 'float' (ID: 7829)
  Prédit: 'float'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'float' → logprob: -2.816093228830141e-06
    2. ' float' → logprob: -13.12500286102295
    3. ',float' → logprob: -15.12500286102295
    4. '(float' → logprob: -15.87500286102295
    5. '<float' → logprob: -16.000001907348633
    6. 'flo' → logprob: -16.375001907348633
    7. '=float' → logprob: -16.625001907348633
    8. '.float' → logprob: -16.750001907348633
    9. '[' → logprob: -17.125001907348633
    10. '```' → logprob: -17.375001907348633

Token 3077: ',float' (ID: 119642)
  Prédit: ',float'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',float' → logprob: -0.014960985630750656
    2. ',' → logprob: -4.264960765838623
    3. 'float' → logprob: -7.389960765838623
    4. '[' → logprob: -8.764961242675781
    5. ' ,' → logprob: -11.764961242675781
    6. ',int' → logprob: -12.014961242675781
    7. ',
' → logprob: -12.389961242675781
    8. '```' → logprob: -13.514961242675781
    9. '=float' → logprob: -13.889961242675781
    10. '(float' → logprob: -14.264961242675781

Token 3078: '],' (ID: 2155)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0007778270519338548
    2. ' ,' → logprob: -8.375778198242188
    3. '),' → logprob: -8.375778198242188
    4. '       ' → logprob: -8.625778198242188
    5. '   ' → logprob: -10.500778198242188
    6. '],' → logprob: -10.625778198242188
    7. '           ' → logprob: -10.625778198242188
    8. '>,' → logprob: -11.375778198242188
    9. '               ' → logprob: -11.750778198242188
    10. ',
' → logprob: -12.000778198242188

Token 3079: ' dir' (ID: 5609)
  Prédit: 'dir'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dir' → logprob: -0.15949629247188568
    2. '2' → logprob: -2.784496307373047
    3. '       ' → logprob: -3.534496307373047
    4. ' dir' → logprob: -4.034496307373047
    5. '           ' → logprob: -4.784496307373047
    6. ' ' → logprob: -5.284496307373047
    7. 'direction' → logprob: -5.409496307373047
    8. '   ' → logprob: -5.534496307373047
    9. '               ' → logprob: -6.034496307373047
    10. '        ' → logprob: -6.034496307373047

Token 3080: '2' (ID: 17)
  Prédit: '3'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.00013738969573751092
    2. '2' → logprob: -10.500137329101562
    3. '(' → logprob: -10.875137329101562
    4. '[' → logprob: -11.000137329101562
    5. ',' → logprob: -11.125137329101562
    6. '_' → logprob: -11.750137329101562
    7. '   ' → logprob: -11.875137329101562
    8. ' ' → logprob: -12.000137329101562
    9. '
' → logprob: -12.125137329101562
    10. '       ' → logprob: -12.250137329101562

Token 3081: 'd' (ID: 67)
  Prédit: 'd'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -1.3306015716807451e-05
    2. '_d' → logprob: -12.00001335144043
    3. ',' → logprob: -12.12501335144043
    4. '3' → logprob: -14.25001335144043
    5. '2' → logprob: -14.37501335144043
    6. ',d' → logprob: -15.25001335144043
    7. 'д' → logprob: -15.62501335144043
    8. '
' → logprob: -17.50001335144043
    9. ' d' → logprob: -17.50001335144043
    10. ',
' → logprob: -17.62501335144043

Token 3082: ':' (ID: 25)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.7276347279548645
    2. ',' → logprob: -0.8526347279548645
    3. ')' → logprob: -3.2276346683502197
    4. '):
' → logprob: -3.6026346683502197
    5. ':' → logprob: -3.8526346683502197
    6. ' ,' → logprob: -7.602634906768799
    7. ' ):' → logprob: -8.10263442993164
    8. '=' → logprob: -8.47763442993164
    9. ')=' → logprob: -8.47763442993164
    10. '   ' → logprob: -8.60263442993164

Token 3083: ' Tuple' (ID: 50841)
  Prédit: 'Tuple'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Tuple' → logprob: -0.0013895198935642838
    2. ' Tuple' → logprob: -7.126389503479004
    3. 'float' → logprob: -7.501389503479004
    4. 'Face' → logprob: -11.126389503479004
    5. 'tuple' → logprob: -11.501389503479004
    6. '(float' → logprob: -13.001389503479004
    7. 'face' → logprob: -13.251389503479004
    8. '_tuple' → logprob: -14.376389503479004
    9. '(' → logprob: -14.501389503479004
    10. ' float' → logprob: -14.501389503479004

Token 3084: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0001475220051361248
    2. '(float' → logprob: -9.125147819519043
    3. 'float' → logprob: -11.125147819519043
    4. '[
' → logprob: -11.750147819519043
    5. '
' → logprob: -12.500147819519043
    6. '   ' → logprob: -13.000147819519043
    7. ',float' → logprob: -13.375147819519043
    8. '```' → logprob: -13.375147819519043
    9. '<float' → logprob: -13.375147819519043
    10. '2' → logprob: -13.500147819519043

Token 3085: 'float' (ID: 7829)
  Prédit: 'float'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'float' → logprob: -4.0126840758603066e-05
    2. ',float' → logprob: -10.875040054321289
    3. ' float' → logprob: -11.250040054321289
    4. '(float' → logprob: -12.000040054321289
    5. '<float' → logprob: -13.500040054321289
    6. '	float' → logprob: -15.750040054321289
    7. '```' → logprob: -16.00004005432129
    8. '=float' → logprob: -16.12504005432129
    9. '.float' → logprob: -16.37504005432129
    10. 'flo' → logprob: -17.00004005432129

Token 3086: ',float' (ID: 119642)
  Prédit: ',float'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',float' → logprob: -0.00043805985478684306
    2. 'float' → logprob: -7.750438213348389
    3. ',' → logprob: -12.75043773651123
    4. '(float' → logprob: -13.37543773651123
    5. '[' → logprob: -13.37543773651123
    6. '<float' → logprob: -14.25043773651123
    7. '2' → logprob: -14.87543773651123
    8. '=float' → logprob: -15.87543773651123
    9. '```' → logprob: -16.500438690185547
    10. '_float' → logprob: -17.250438690185547

Token 3087: '])' (ID: 4636)
  Prédit: '])'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '])' → logprob: -0.2585381269454956
    2. ')' → logprob: -1.6335381269454956
    3. '):
' → logprob: -4.008538246154785
    4. ']):
' → logprob: -4.383538246154785
    5. ']):' → logprob: -7.508538246154785
    6. '   ' → logprob: -8.008538246154785
    7. ']' → logprob: -8.133538246154785
    8. ',' → logprob: -8.383538246154785
    9. '):' → logprob: -8.758538246154785
    10. '       ' → logprob: -9.508538246154785

Token 3088: ' ->' (ID: 2747)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.021079199388623238
    2. ':
' → logprob: -3.8960793018341064
    3. '   ' → logprob: -8.646079063415527
    4. '       ' → logprob: -9.021079063415527
    5. ',' → logprob: -9.271079063415527
    6. '():
' → logprob: -9.771079063415527
    7. '):
' → logprob: -10.521079063415527
    8. '):' → logprob: -10.771079063415527
    9. '():' → logprob: -11.146079063415527
    10. 'def' → logprob: -12.521079063415527

Token 3089: ' Tuple' (ID: 50841)
  Prédit: 'Optional'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Optional' → logprob: -0.12444114685058594
    2. 'float' → logprob: -2.374441146850586
    3. 'Tuple' → logprob: -3.749441146850586
    4. ' Optional' → logprob: -8.749441146850586
    5. 'optional' → logprob: -9.124441146850586
    6. 'None' → logprob: -9.874441146850586
    7. 'List' → logprob: -10.624441146850586
    8. ' float' → logprob: -11.249441146850586
    9. '[' → logprob: -11.374441146850586
    10. '(Optional' → logprob: -11.374441146850586

Token 3090: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0016968417912721634
    2. '[str' → logprob: -7.251697063446045
    3. '[
' → logprob: -7.251697063446045
    4. '[int' → logprob: -9.126696586608887
    5. '(float' → logprob: -9.626696586608887
    6. 'float' → logprob: -9.876696586608887
    7. 'Optional' → logprob: -10.376696586608887
    8. '(Optional' → logprob: -11.876696586608887
    9. ',float' → logprob: -12.126696586608887
    10. '[List' → logprob: -12.501696586608887

Token 3091: 'float' (ID: 7829)
  Prédit: 'float'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'float' → logprob: -0.710300862789154
    2. 'Optional' → logprob: -0.710300862789154
    3. 'Edge' → logprob: -4.835300922393799
    4. 'str' → logprob: -5.585300922393799
    5. 'bool' → logprob: -5.710300922393799
    6. '[' → logprob: -7.335300922393799
    7. 'List' → logprob: -7.335300922393799
    8. 'Face' → logprob: -9.08530044555664
    9. 'optional' → logprob: -9.33530044555664
    10. ' Optional' → logprob: -9.46030044555664

Token 3092: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.005559351295232773
    2. ',float' → logprob: -5.38055944442749
    3. '[' → logprob: -7.13055944442749
    4. ' ,' → logprob: -9.880558967590332
    5. ',int' → logprob: -10.130558967590332
    6. ',bool' → logprob: -11.380558967590332
    7. ',
' → logprob: -11.880558967590332
    8. 'float' → logprob: -12.005558967590332
    9. ',None' → logprob: -12.505558967590332
    10. ',[' → logprob: -12.880558967590332

Token 3093: ' Edge' (ID: 16396)
  Prédit: 'Optional'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Optional' → logprob: -0.7550874948501587
    2. 'float' → logprob: -1.1300874948501587
    3. 'Edge' → logprob: -1.8800874948501587
    4. 'str' → logprob: -3.505087375640869
    5. 'List' → logprob: -4.880087375640869
    6. 'int' → logprob: -5.005087375640869
    7. 'Face' → logprob: -5.005087375640869
    8. 'bool' → logprob: -6.130087375640869
    9. 'Vertex' → logprob: -8.630087852478027
    10. '...' → logprob: -8.755087852478027

Token 3094: ']:
' (ID: 22152)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0002545448951423168
    2. '   ' → logprob: -9.00025463104248
    3. ' ,' → logprob: -9.87525463104248
    4. ']:
' → logprob: -10.87525463104248
    5. '):
' → logprob: -11.12525463104248
    6. ',
' → logprob: -11.50025463104248
    7. '       ' → logprob: -11.50025463104248
    8. '):' → logprob: -12.12525463104248
    9. ']:' → logprob: -12.62525463104248
    10. '           ' → logprob: -13.12525463104248

Token 3095: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0007885443628765643
    2. '   ' → logprob: -8.875788688659668
    3. '        
' → logprob: -9.000788688659668
    4. ',' → logprob: -9.625788688659668
    5. '
' → logprob: -9.750788688659668
    6. '(' → logprob: -9.875788688659668
    7. '```' → logprob: -9.875788688659668
    8. '[' → logprob: -10.000788688659668
    9. '           ' → logprob: -10.375788688659668
    10. '"' → logprob: -10.500788688659668

Token 3096: ' #' (ID: 1069)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.357805460691452
    2. '   ' → logprob: -2.7328054904937744
    3. '           ' → logprob: -2.8578054904937744
    4. '       ' → logprob: -2.9828054904937744
    5. 'min' → logprob: -4.107805252075195
    6. ' min' → logprob: -4.232805252075195
    7. '```' → logprob: -4.232805252075195
    8. '#' (adapté à ' #') → logprob: -4.482805252075195
    9. ' ' → logprob: -4.857805252075195
    10. ' (' → logprob: -4.857805252075195

Token 3097: ' face' (ID: 4950)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.7460741400718689
    2. 'edges' → logprob: -1.2460741996765137
    3. 'min' → logprob: -2.1210741996765137
    4. 'best' → logprob: -3.3710741996765137
    5. ' edges' → logprob: -3.6210741996765137
    6. '#' → logprob: -4.496074199676514
    7. 'edge' → logprob: -4.871074199676514
    8. ' min' → logprob: -4.996074199676514
    9. '   ' → logprob: -5.246074199676514
    10. 'vertices' → logprob: -5.621074199676514

Token 3098: ' vertices' (ID: 38360)
  Prédit: '_vs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_vs' → logprob: -0.24887430667877197
    2. '_vertices' → logprob: -1.873874306678772
    3. ' =' → logprob: -2.9988741874694824
    4. 'vs' → logprob: -5.248874187469482
    5. '   ' → logprob: -5.373874187469482
    6. '_edges' → logprob: -6.248874187469482
    7. '_v' → logprob: -6.498874187469482
    8. 'vertices' → logprob: -7.123874187469482
    9. '=' → logprob: -7.498874187469482
    10. ':' → logprob: -7.748874187469482

Token 3099: ' in' (ID: 306)
  Prédit: '_coords'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_coords' → logprob: -0.0780482143163681
    2. ' =' → logprob: -3.5780482292175293
    3. '_vs' → logprob: -4.328048229217529
    4. 'coords' → logprob: -5.078048229217529
    5. '_' → logprob: -5.578048229217529
    6. 'A' → logprob: -5.578048229217529
    7. '0' → logprob: -5.703048229217529
    8. '_coord' → logprob: -6.078048229217529
    9. '_v' → logprob: -6.203048229217529
    10. '3' → logprob: -6.453048229217529

Token 3100: ' ' (ID: 220)
  Prédit: 'face'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'face' → logprob: -0.1051710918545723
    2. 'local' → logprob: -3.4801712036132812
    3. '[(' → logprob: -3.6051712036132812
    4. '2' → logprob: -3.7301712036132812
    5. '[
' → logprob: -4.980171203613281
    6. '#' → logprob: -5.480171203613281
    7. '[' → logprob: -5.480171203613281
    8. 'def' → logprob: -7.105171203613281
    9. '0' → logprob: -8.355171203613281
    10. '3' → logprob: -8.730171203613281

Token 3101: '2' (ID: 17)
  Prédit: 'face'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'face' → logprob: -0.3958038091659546
    2. '[(' → logprob: -2.020803928375244
    3. 'self' → logprob: -3.395803928375244
    4. 'local' → logprob: -3.520803928375244
    5. '[' → logprob: -3.770803928375244
    6. '2' → logprob: -3.770803928375244
    7. 'def' → logprob: -4.020803928375244
    8. '[
' → logprob: -4.020803928375244
    9. '#' → logprob: -4.145803928375244
    10. 'u' → logprob: -5.270803928375244

Token 3102: 'D' (ID: 35)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.029963841661810875
    2. '2' → logprob: -4.154963970184326
    3. '_d' → logprob: -5.154963970184326
    4. 'D' → logprob: -5.654963970184326
    5. '   ' → logprob: -6.529963970184326
    6. '_coords' → logprob: -7.154963970184326
    7. ',' → logprob: -7.779963970184326
    8. '(' → logprob: -8.029963493347168
    9. ' (' → logprob: -8.029963493347168
    10. ')' → logprob: -8.529963493347168

Token 3103: ' coords' (ID: 53253)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.34328457713127136
    2. ' =' → logprob: -2.3432846069335938
    3. ':' → logprob: -3.2182846069335938
    4. ',' → logprob: -3.5932846069335938
    5. ':
' → logprob: -3.5932846069335938
    6. ' vs' → logprob: -4.218284606933594
    7. '_vertices' → logprob: -4.468284606933594
    8. 'vs' → logprob: -4.593284606933594
    9. ' vertices' → logprob: -4.718284606933594
    10. '
' → logprob: -5.218284606933594

Token 3104: ':' (ID: 25)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.18693356215953827
    2. ':' → logprob: -2.9369335174560547
    3. ',' → logprob: -3.5619335174560547
    4. ':
' → logprob: -3.8119335174560547
    5. ' =' → logprob: -4.561933517456055
    6. '
' → logprob: -4.811933517456055
    7. 'A' → logprob: -4.811933517456055
    8. '(
' → logprob: -5.061933517456055
    9. '(A' → logprob: -5.061933517456055
    10. ' (' → logprob: -5.186933517456055

Token 3105: ' A' (ID: 355)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.054361145943403244
    2. 'v' → logprob: -4.054361343383789
    3. 'origin' → logprob: -4.304361343383789
    4. 'A' → logprob: -4.554361343383789
    5. '#' → logprob: -5.929361343383789
    6. 'f' → logprob: -6.429361343383789
    7. 'vertices' → logprob: -6.679361343383789
    8. 'face' → logprob: -6.804361343383789
    9. 'vertex' → logprob: -6.929361343383789
    10. 'sorted' → logprob: -7.179361343383789

Token 3106: '(' (ID: 7)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.06250087171792984
    2. '=' → logprob: -3.1875009536743164
    3. ',' → logprob: -4.437500953674316
    4. '0' → logprob: -6.312500953674316
    5. '_coords' → logprob: -6.812500953674316
    6. '=(' → logprob: -7.312500953674316
    7. '   ' → logprob: -7.437500953674316
    8. '_coord' → logprob: -7.812500953674316
    9. 'A' → logprob: -8.187500953674316
    10. '_face' → logprob: -8.312500953674316

Token 3107: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.002158945193514228
    2. '(' → logprob: -6.252159118652344
    3. ')' → logprob: -9.002159118652344
    4. ' ' → logprob: -10.252159118652344
    5. '
' → logprob: -11.127159118652344
    6. '   ' → logprob: -11.377159118652344
    7. ' (' → logprob: -11.752159118652344
    8. '```' → logprob: -11.877159118652344
    9. ')
' → logprob: -12.377159118652344
    10. '           ' → logprob: -12.877159118652344

Token 3108: ',' (ID: 11)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.3871246874332428
    2. ',' → logprob: -1.1371246576309204
    3. '0' → logprob: -9.012125015258789
    4. ' ,' → logprob: -9.637125015258789
    5. '.,' → logprob: -10.012125015258789
    6. '```' → logprob: -12.012125015258789
    7. ')' → logprob: -12.262125015258789
    8. '),' → logprob: -12.512125015258789
    9. '   ' → logprob: -13.512125015258789
    10. ' .' → logprob: -13.762125015258789

Token 3109: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.546478935983032e-05
    2. ',' → logprob: -10.750025749206543
    3. ' ' → logprob: -12.500025749206543
    4. ')' → logprob: -15.875025749206543
    5. '),' → logprob: -17.125024795532227
    6. '           ' → logprob: -17.375024795532227
    7. '```' → logprob: -17.375024795532227
    8. '   ' → logprob: -18.125024795532227
    9. '
' → logprob: -18.375024795532227
    10. ' ,' → logprob: -18.875024795532227

Token 3110: '),' (ID: 936)
  Prédit: '),'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),' → logprob: -0.002521084388718009
    2. '),
' → logprob: -6.12752103805542
    3. ')' → logprob: -9.252521514892578
    4. '),(' → logprob: -9.627521514892578
    5. ')
' → logprob: -9.877521514892578
    6. ',' → logprob: -10.002521514892578
    7. '           ' → logprob: -10.127521514892578
    8. ' ),' → logprob: -11.627521514892578
    9. '),
' → logprob: -12.752521514892578
    10. ',),' → logprob: -12.752521514892578

Token 3111: ' B' (ID: 418)
  Prédit: 'X'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'X' → logprob: -0.21270471811294556
    2. '           ' → logprob: -2.712704658508301
    3. ' X' → logprob: -3.837704658508301
    4. 'u' → logprob: -3.962704658508301
    5. ' (' → logprob: -4.587704658508301
    6. 'self' → logprob: -4.712704658508301
    7. 'x' → logprob: -5.087704658508301
    8. '(u' → logprob: -5.087704658508301
    9. 'sorted' → logprob: -5.087704658508301
    10. 'v' → logprob: -5.212704658508301

Token 3112: ' at' (ID: 540)
  Prédit: '=('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=(' → logprob: -0.39374083280563354
    2. ' =' → logprob: -1.6437408924102783
    3. '(' → logprob: -2.5187408924102783
    4. '=' → logprob: -3.5187408924102783
    5. ' (' → logprob: -4.768740653991699
    6. '_pos' → logprob: -5.643740653991699
    7. ',' → logprob: -6.018740653991699
    8. 'pos' → logprob: -6.268740653991699
    9. '2' → logprob: -6.518740653991699
    10. '   ' → logprob: -6.893740653991699

Token 3113: ' u' (ID: 337)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.013928300701081753
    2. '1' → logprob: -4.513928413391113
    3. ' (' → logprob: -6.513928413391113
    4. 'self' → logprob: -7.138928413391113
    5. '(self' → logprob: -8.013928413391113
    6. '(
' → logprob: -9.138928413391113
    7. '0' → logprob: -9.888928413391113
    8. '   ' → logprob: -11.013928413391113
    9. ' ' → logprob: -11.263928413391113
    10. 'face' → logprob: -11.388928413391113

Token 3114: '=' (ID: 28)
  Prédit: '_coord'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_coord' → logprob: -1.161731481552124
    2. ',' → logprob: -1.286731481552124
    3. ' =' → logprob: -2.286731481552124
    4. '=' → logprob: -3.036731481552124
    5. 'n' → logprob: -3.286731481552124
    6. '=(' → logprob: -3.411731481552124
    7. '   ' → logprob: -3.536731481552124
    8. '(' → logprob: -3.786731481552124
    9. ',v' → logprob: -4.411731719970703
    10. '_basis' → logprob: -4.661731719970703

Token 3115: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0016551829176023602
    2. '0' → logprob: -6.751655101776123
    3. '(' → logprob: -8.001655578613281
    4. ' ' → logprob: -9.751655578613281
    5. 'math' → logprob: -10.001655578613281
    6. '   ' → logprob: -11.626655578613281
    7. '```' → logprob: -12.251655578613281
    8. '
' → logprob: -12.751655578613281
    9. '-' → logprob: -13.064155578613281
    10. '{' → logprob: -13.251655578613281

Token 3116: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.018258459866046906
    2. ')' → logprob: -6.018258571624756
    3. '),' → logprob: -6.018258571624756
    4. '(' → logprob: -6.268258571624756
    5. ' ,' → logprob: -6.643258571624756
    6. '
' → logprob: -6.893258571624756
    7. ',
' → logprob: -6.893258571624756
    8. '```' → logprob: -7.018258571624756
    9. '0' → logprob: -7.143258571624756
    10. '+' → logprob: -7.143258571624756

Token 3117: '0' (ID: 15)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.007199682295322418
    2. '0' → logprob: -5.132199764251709
    3. ' v' → logprob: -6.757199764251709
    4. '(' → logprob: -10.38219928741455
    5. ' ' → logprob: -10.75719928741455
    6. '   ' → logprob: -10.75719928741455
    7. 'B' → logprob: -11.13219928741455
    8. '1' → logprob: -13.00719928741455
    9. '           ' → logprob: -13.00719928741455
    10. '
' → logprob: -13.25719928741455

Token 3118: ' or' (ID: 503)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.14891281723976135
    2. '           ' → logprob: -2.5239129066467285
    3. '),' → logprob: -3.5239129066467285
    4. '(' → logprob: -5.0239129066467285
    5. ' (' → logprob: -5.5239129066467285
    6. ',
' → logprob: -5.5239129066467285
    7. '               ' → logprob: -5.5239129066467285
    8. ' =' → logprob: -6.2739129066467285
    9. ' ,' → logprob: -6.2739129066467285
    10. '=' → logprob: -7.1489129066467285

Token 3119: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.3271729052066803
    2. '(' → logprob: -1.327172875404358
    3. '0' → logprob: -5.452172756195068
    4. '1' → logprob: -5.827172756195068
    5. ' v' → logprob: -6.327172756195068
    6. '   ' → logprob: -6.827172756195068
    7. ' (' → logprob: -7.327172756195068
    8. 'B' → logprob: -7.327172756195068
    9. 'u' → logprob: -7.452172756195068
    10. ' ' → logprob: -7.452172756195068

Token 3120: '=' (ID: 28)
  Prédit: '='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.005281546153128147
    2. '1' → logprob: -6.005281448364258
    3. ',' → logprob: -6.630281448364258
    4. '0' → logprob: -7.255281448364258
    5. ')=' → logprob: -8.880281448364258
    6. '(' → logprob: -9.005281448364258
    7. '=(' → logprob: -9.255281448364258
    8. ')' → logprob: -9.380281448364258
    9. ' =' → logprob: -10.130281448364258
    10. '=None' → logprob: -10.130281448364258

Token 3121: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.002807963639497757
    2. '0' → logprob: -6.002808094024658
    3. '-' → logprob: -8.5028076171875
    4. '(' → logprob: -9.5028076171875
    5. '```' → logprob: -10.8778076171875
    6. ' ' → logprob: -11.2528076171875
    7. ' -' → logprob: -13.5028076171875
    8. '=' → logprob: -13.5028076171875
    9. '``' → logprob: -13.5028076171875
    10. '<|end|>' → logprob: -13.6903076171875

Token 3122: '?' (ID: 30)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.6800569295883179
    2. '),' → logprob: -0.9300569295883179
    3. '(' → logprob: -3.1800570487976074
    4. ')' → logprob: -3.3050570487976074
    5. ',
' → logprob: -5.805057048797607
    6. '),
' → logprob: -5.930057048797607
    7. '```' → logprob: -6.055057048797607
    8. '),(' → logprob: -6.805057048797607
    9. 'def' → logprob: -6.930057048797607
    10. '<|end|>' → logprob: -6.930057048797607

Token 3123: ' The' (ID: 623)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.11702726781368256
    2. '#' → logprob: -2.9920272827148438
    3. '
' → logprob: -3.7420272827148438
    4. 'A' → logprob: -4.992027282714844
    5. '            
' → logprob: -4.992027282714844
    6. 'v' → logprob: -5.492027282714844
    7. '       ' → logprob: -5.617027282714844
    8. ' #' → logprob: -5.992027282714844
    9. 'B' → logprob: -6.117027282714844
    10. ' 
' → logprob: -6.742027282714844

Token 3124: ' base' (ID: 3611)
  Prédit: 'face'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'face' → logprob: -1.066066861152649
    2. '#' → logprob: -1.941066861152649
    3. 'faces' → logprob: -2.6910667419433594
    4. 'code' → logprob: -2.8160667419433594
    5. 'vertices' → logprob: -2.8160667419433594
    6. 'first' → logprob: -2.9410667419433594
    7. 'v' → logprob: -3.0660667419433594
    8. 'def' → logprob: -3.3160667419433594
    9. 'coordinates' → logprob: -3.9410667419433594
    10. ' code' → logprob: -4.191066741943359

Token 3125: ' is' (ID: 382)
  Prédit: ' vectors'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' vectors' → logprob: -0.8748011589050293
    2. '_vectors' → logprob: -2.2498011589050293
    3. '_u' → logprob: -2.3748011589050293
    4. '_' → logprob: -2.6248011589050293
    5. 'vectors' → logprob: -2.6248011589050293
    6. '   ' → logprob: -3.4998011589050293
    7. 'u' → logprob: -3.7498011589050293
    8. ' =' → logprob: -3.8748011589050293
    9. '_coords' → logprob: -3.9998011589050293
    10. 's' → logprob: -4.249801158905029

Token 3126: ' arbitrary' (ID: 56424)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.623957097530365
    2. 'Vertex' → logprob: -1.3739571571350098
    3. 'vector' → logprob: -3.2489571571350098
    4. 'self' → logprob: -3.3739571571350098
    5. '(self' → logprob: -3.3739571571350098
    6. 'Edge' → logprob: -3.8739571571350098
    7. '(
' → logprob: -3.9989571571350098
    8. 'sorted' → logprob: -3.9989571571350098
    9. '(Vertex' → logprob: -4.49895715713501
    10. '(sorted' → logprob: -5.24895715713501

Token 3127: ' but' (ID: 889)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.8697452545166016
    2. ',' → logprob: -1.1197452545166016
    3. '
' → logprob: -2.7447452545166016
    4. '       ' → logprob: -3.8697452545166016
    5. ' (' → logprob: -3.9947452545166016
    6. ':
' → logprob: -3.9947452545166016
    7. ' but' → logprob: -4.244745254516602
    8. '#' → logprob: -4.244745254516602
    9. ':' → logprob: -4.369745254516602
    10. '(' → logprob: -4.369745254516602

Token 3128: ' unit' (ID: 7670)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -1.295960545539856
    2. 'the' → logprob: -1.670960545539856
    3. '           ' → logprob: -2.6709604263305664
    4. 'we' → logprob: -2.7959604263305664
    5. 'A' → logprob: -2.7959604263305664
    6. 'Vertex' → logprob: -3.5459604263305664
    7. 'face' → logprob: -3.7959604263305664
    8. 'B' → logprob: -3.9209604263305664
    9. 'self' → logprob: -4.045960426330566
    10. 'here' → logprob: -4.045960426330566

Token 3129: ' length' (ID: 5517)
  Prédit: 'length'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'length' → logprob: -0.5350639820098877
    2. ' vector' → logprob: -1.5350639820098877
    3. 'vector' → logprob: -2.2850639820098877
    4. ' length' → logprob: -2.7850639820098877
    5. ' vectors' → logprob: -4.535063743591309
    6. 'vectors' → logprob: -5.535063743591309
    7. '_vector' → logprob: -5.785063743591309
    8. '_length' → logprob: -5.785063743591309
    9. ')' → logprob: -5.910063743591309
    10. '           ' → logprob: -6.410063743591309

Token 3130: ' edges' (ID: 22569)
  Prédit: 'vectors'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'vectors' → logprob: -0.8851590156555176
    2. ' vectors' → logprob: -1.6351590156555176
    3. ' along' → logprob: -2.3851590156555176
    4. '           ' → logprob: -3.2601590156555176
    5. ',' → logprob: -3.6351590156555176
    6. '(' → logprob: -3.6351590156555176
    7. 'vertices' → logprob: -3.8851590156555176
    8. 'along' → logprob: -3.8851590156555176
    9. '#' → logprob: -4.260159015655518
    10. 'vertex' → logprob: -4.635159015655518

Token 3131: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.1350630670785904
    2. '#' → logprob: -4.010063171386719
    3. ' are' → logprob: -4.010063171386719
    4. 'are' → logprob: -4.135063171386719
    5. ',' → logprob: -4.260063171386719
    6. ':' → logprob: -4.385063171386719
    7. '
' → logprob: -4.885063171386719
    8. ':
' → logprob: -5.385063171386719
    9. '       ' → logprob: -5.760063171386719
    10. '=' → logprob: -6.135063171386719

Token 3132: '           ' (ID: 352)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.3300285339355469
    2. ',' → logprob: -1.4550285339355469
    3. ':' → logprob: -1.7050285339355469
    4. '           ' → logprob: -2.580028533935547
    5. '               ' → logprob: -3.205028533935547
    6. '       ' → logprob: -3.830028533935547
    7. '(' → logprob: -4.080028533935547
    8. ':
' → logprob: -4.080028533935547
    9. '
' → logprob: -4.205028533935547
    10. ' ' → logprob: -4.330028533935547

Token 3133: ' #' (ID: 1069)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' (adapté à ' #') → logprob: -0.2912505567073822
    2. '           ' → logprob: -2.291250467300415
    3. 'A' → logprob: -3.041250467300415
    4. '       ' → logprob: -3.166250467300415
    5. 'v' → logprob: -3.291250467300415
    6. 'face' → logprob: -4.541250705718994
    7. 'def' → logprob: -6.291250705718994
    8. 'edges' → logprob: -6.416250705718994
    9. 'vertices' → logprob: -6.666250705718994
    10. 'f' → logprob: -6.791250705718994

Token 3134: ' Actually' (ID: 50557)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.7325836420059204
    2. '           ' → logprob: -1.2325836420059204
    3. 'v' → logprob: -2.857583522796631
    4. 'face' → logprob: -3.232583522796631
    5. 'vs' → logprob: -3.482583522796631
    6. 'vertices' → logprob: -3.732583522796631
    7. '       ' → logprob: -3.982583522796631
    8. 'A' → logprob: -4.357583522796631
    9. 'sorted' → logprob: -4.732583522796631
    10. ' #' → logprob: -4.732583522796631

Token 3135: ',' (ID: 11)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.16121241450309753
    2. '           ' → logprob: -2.28621244430542
    3. ' #' → logprob: -3.91121244430542
    4. 'face' → logprob: -4.41121244430542
    5. ' face' → logprob: -5.16121244430542
    6. 'A' → logprob: -5.66121244430542
    7. '       ' → logprob: -6.78621244430542
    8. ' A' → logprob: -6.91121244430542
    9. 'v' → logprob: -7.03621244430542
    10. ' v' → logprob: -7.91121244430542

Token 3136: ' on' (ID: 402)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.035645741969347
    2. '           ' → logprob: -3.7856457233428955
    3. 'A' → logprob: -5.410645961761475
    4. 'face' → logprob: -6.160645961761475
    5. ' #' → logprob: -6.535645961761475
    6. 'v' → logprob: -6.910645961761475
    7. 'f' → logprob: -7.035645961761475
    8. 'sorted' → logprob: -7.285645961761475
    9. 'def' → logprob: -8.410645484924316
    10. '       ' → logprob: -8.535645484924316

Token 3137: ' face' (ID: 4950)
  Prédit: 'face'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'face' → logprob: -0.44454893469810486
    2. 'the' → logprob: -1.4445489645004272
    3. ' face' → logprob: -3.6945488452911377
    4. 'self' → logprob: -4.194549083709717
    5. 'current' → logprob: -4.194549083709717
    6. 'first' → logprob: -4.319549083709717
    7. 'each' → logprob: -4.569549083709717
    8. ' the' → logprob: -4.694549083709717
    9. 'this' → logprob: -4.819549083709717
    10. 'faces' → logprob: -5.569549083709717

Token 3138: '_AX' (ID: 59886)
  Prédit: 'vertices'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'vertices' → logprob: -1.5792667865753174
    2. ',' → logprob: -1.8292667865753174
    3. ' vertices' → logprob: -1.9542667865753174
    4. '_vertices' → logprob: -2.4542667865753174
    5. '   ' → logprob: -2.8292667865753174
    6. 'A' → logprob: -2.8292667865753174
    7. 'vs' → logprob: -3.0792667865753174
    8. ' plane' → logprob: -3.7042667865753174
    9. '_vs' → logprob: -4.079266548156738
    10. 'def' → logprob: -4.204266548156738

Token 3139: 'Y' (ID: 56)
  Prédit: 'Y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Y' → logprob: -0.007434824015945196
    2. ',' → logprob: -5.507434844970703
    3. '
' → logprob: -6.632434844970703
    4. 'v' → logprob: -7.757434844970703
    5. 'def' → logprob: -8.132434844970703
    6. '   ' → logprob: -8.757434844970703
    7. ' Y' → logprob: -8.757434844970703
    8. ',
' → logprob: -9.007434844970703
    9. '#' → logprob: -9.132434844970703
    10. '```' → logprob: -9.132434844970703

Token 3140: ',' (ID: 11)
  Prédit: ':
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.8707107901573181
    2. ':' → logprob: -1.495710849761963
    3. ',' → logprob: -2.120710849761963
    4. '):
' → logprob: -2.870710849761963
    5. ' =' → logprob: -3.870710849761963
    6. '_' → logprob: -3.870710849761963
    7. '   ' → logprob: -4.120710849761963
    8. '
' → logprob: -4.495710849761963
    9. ',
' → logprob: -4.495710849761963
    10. '#' → logprob: -4.745710849761963

Token 3141: ' the' (ID: 290)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.781062662601471
    2. '           ' → logprob: -0.781062662601471
    3. 'A' → logprob: -3.406062602996826
    4. '       ' → logprob: -4.031062602996826
    5. 'v' → logprob: -4.656062602996826
    6. 'u' → logprob: -5.281062602996826
    7. ' #' → logprob: -5.656062602996826
    8. 'def' → logprob: -5.906062602996826
    9. '   ' → logprob: -6.156062602996826
    10. 'pos' → logprob: -6.281062602996826

Token 3142: ' edge' (ID: 11165)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.42468446493148804
    2. 'A' → logprob: -1.9246845245361328
    3. 'origin' → logprob: -3.174684524536133
    4. 'u' → logprob: -3.674684524536133
    5. 'base' → logprob: -3.674684524536133
    6. 'edge' → logprob: -3.799684524536133
    7. 'face' → logprob: -4.174684524536133
    8. 'first' → logprob: -4.299684524536133
    9. 'def' → logprob: -4.299684524536133
    10. 'v' → logprob: -4.424684524536133

Token 3143: ' lengths' (ID: 51957)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.5898839831352234
    2. 'A' → logprob: -1.5898840427398682
    3. 'points' → logprob: -2.464884042739868
    4. 'AB' → logprob: -2.964884042739868
    5. ' A' → logprob: -4.964883804321289
    6. ' points' → logprob: -5.089883804321289
    7. '_end' → logprob: -5.214883804321289
    8. '#' → logprob: -5.214883804321289
    9. 'v' → logprob: -5.339883804321289
    10. '_AB' → logprob: -5.464883804321289

Token 3144: ' are' (ID: 553)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -1.4478206634521484
    2. ' =' → logprob: -1.4478206634521484
    3. '=' → logprob: -2.1978206634521484
    4. ' are' → logprob: -2.5728206634521484
    5. 'def' → logprob: -2.9478206634521484
    6. '2' → logprob: -3.0728206634521484
    7. 'are' → logprob: -3.0728206634521484
    8. '```' → logprob: -4.322820663452148
    9. 'A' → logprob: -4.447820663452148
    10. ' between' → logprob: -4.572820663452148

Token 3145: ' unit' (ID: 7670)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.7338544130325317
    2. '1' → logprob: -0.9838544130325317
    3. ' (' → logprob: -3.483854293823242
    4. 'Edge' → logprob: -3.733854293823242
    5. 'Vertex' → logprob: -3.983854293823242
    6. '   ' → logprob: -4.233854293823242
    7. '#' → logprob: -4.608854293823242
    8. '(Vertex' → logprob: -4.983854293823242
    9. '```' → logprob: -5.358854293823242
    10. ' Vertex' → logprob: -5.358854293823242

Token 3146: '.
' (ID: 558)
  Prédit: 'length'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'length' → logprob: -1.1500886678695679
    2. ' length' → logprob: -1.2750886678695679
    3. '_length' → logprob: -1.7750886678695679
    4. '(' → logprob: -3.4000887870788574
    5. ' vectors' → logprob: -3.4000887870788574
    6. ')' → logprob: -3.6500887870788574
    7. ' (' → logprob: -4.150088787078857
    8. ' lengths' → logprob: -4.275088787078857
    9. '(
' → logprob: -4.400088787078857
    10. ')
' → logprob: -4.525088787078857

Token 3147: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.02896738238632679
    2. '       ' → logprob: -4.028967380523682
    3. 'A' → logprob: -5.778967380523682
    4. '#' → logprob: -5.903967380523682
    5. ' A' → logprob: -6.778967380523682
    6. '
' → logprob: -7.403967380523682
    7. 'v' → logprob: -7.778967380523682
    8. '            
' → logprob: -8.02896785736084
    9. '               ' → logprob: -8.27896785736084
    10. ',' → logprob: -8.40396785736084

Token 3148: ' #' (ID: 1069)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.09320680797100067
    2. '#' (adapté à ' #') → logprob: -2.7182068824768066
    3. 'v' → logprob: -4.343206882476807
    4. '       ' → logprob: -6.218206882476807
    5. 'face' → logprob: -6.343206882476807
    6. 'A' → logprob: -6.968206882476807
    7. 'vertices' → logprob: -7.218206882476807
    8. 'f' → logprob: -7.593206882476807
    9. ' #' → logprob: -7.593206882476807
    10. 'vs' → logprob: -7.843206882476807

Token 3149: ' The' (ID: 623)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.08853106200695038
    2. '#' → logprob: -2.838531017303467
    3. 'A' → logprob: -4.963531017303467
    4. 'v' → logprob: -5.088531017303467
    5. '
' → logprob: -5.838531017303467
    6. ' #' → logprob: -6.088531017303467
    7. '       ' → logprob: -6.338531017303467
    8. ' A' → logprob: -6.588531017303467
    9. ' v' → logprob: -7.213531017303467
    10. 'def' → logprob: -7.588531017303467

Token 3150: ' base' (ID: 3611)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'A' → logprob: -1.059926152229309
    2. '#' → logprob: -1.309926152229309
    3. 'def' → logprob: -1.684926152229309
    4. 'v' → logprob: -2.6849260330200195
    5. 'face' → logprob: -2.9349260330200195
    6. 'vs' → logprob: -4.4349260330200195
    7. 'vertices' → logprob: -4.5599260330200195
    8. ' #' → logprob: -5.1849260330200195
    9. ' A' → logprob: -5.4349260330200195
    10. 'u' → logprob: -5.5599260330200195

Token 3151: ' is' (ID: 382)
  Prédit: ' vectors'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' vectors' → logprob: -0.6571987271308899
    2. 'vectors' → logprob: -1.2821986675262451
    3. '   ' → logprob: -3.407198667526245
    4. 'def' → logprob: -3.907198667526245
    5. '2' → logprob: -4.157198905944824
    6. 'u' → logprob: -4.282198905944824
    7. '_u' → logprob: -4.657198905944824
    8. '_vectors' → logprob: -4.657198905944824
    9. '#' → logprob: -4.782198905944824
    10. ' =' → logprob: -4.782198905944824

Token 3152: ' set' (ID: 920)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.013964036479592323
    2. ' (' → logprob: -5.6389641761779785
    3. '((' → logprob: -5.7639641761779785
    4. 'vector' → logprob: -6.1389641761779785
    5. '(
' → logprob: -7.0139641761779785
    6. 'self' → logprob: -7.0139641761779785
    7. 'Vertex' → logprob: -7.2639641761779785
    8. 'Edge' → logprob: -7.7639641761779785
    9. '(self' → logprob: -8.76396369934082
    10. 'Vector' → logprob: -8.76396369934082

Token 3153: ' such' (ID: 2238)
  Prédit: ' as'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' as' → logprob: -0.7269402742385864
    2. ' at' → logprob: -1.4769402742385864
    3. ' to' → logprob: -2.601940155029297
    4. 'to' → logprob: -2.976940155029297
    5. '(' → logprob: -3.601940155029297
    6. '           ' → logprob: -3.726940155029297
    7. 'as' → logprob: -3.976940155029297
    8. 'at' → logprob: -4.226940155029297
    9. '   ' → logprob: -4.601940155029297
    10. '```' → logprob: -4.726940155029297

Token 3154: ' that' (ID: 484)
  Prédit: 'to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'to' → logprob: -0.21027269959449768
    2. 'that' → logprob: -2.210272789001465
    3. '           ' → logprob: -3.210272789001465
    4. 'def' → logprob: -4.335272789001465
    5. 'on' → logprob: -4.460272789001465
    6. 'at' → logprob: -5.460272789001465
    7. '```' → logprob: -5.960272789001465
    8. ' to' → logprob: -6.085272789001465
    9. '#' → logprob: -6.460272789001465
    10. 'u' → logprob: -7.585272789001465

Token 3155: ' origin' (ID: 12839)
  Prédit: 'face'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'face' → logprob: -1.3611266613006592
    2. 'Vertex' → logprob: -1.3611266613006592
    3. 'sorted' → logprob: -1.3611266613006592
    4. '#' → logprob: -2.486126661300659
    5. 'u' → logprob: -3.236126661300659
    6. '(' → logprob: -3.861126661300659
    7. 'v' → logprob: -4.111126899719238
    8. '
' → logprob: -4.986126899719238
    9. 'Vector' → logprob: -4.986126899719238
    10. 'A' → logprob: -4.986126899719238

Token 3156: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.15421578288078308
    2. ' =' → logprob: -2.9042158126831055
    3. ' is' → logprob: -3.4042158126831055
    4. ')' → logprob: -3.7792158126831055
    5. ',' → logprob: -4.5292158126831055
    6. '=u' → logprob: -5.2792158126831055
    7. 'is' → logprob: -6.4042158126831055
    8. ':' → logprob: -6.4042158126831055
    9. '=(' → logprob: -6.5292158126831055
    10. '_' → logprob: -6.6542158126831055

Token 3157: ' A' (ID: 355)
  Prédit: 'sorted'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sorted' → logprob: -0.16690830886363983
    2. 'face' → logprob: -2.5419082641601562
    3. '(sorted' → logprob: -3.1669082641601562
    4. 'vertex' → logprob: -4.416908264160156
    5. 'Vertex' → logprob: -4.541908264160156
    6. 'f' → logprob: -5.541908264160156
    7. ' sorted' → logprob: -6.666908264160156
    8. '(face' → logprob: -6.666908264160156
    9. '(' → logprob: -7.291908264160156
    10. 'tuple' → logprob: -7.541908264160156

Token 3158: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.09098967164754868
    2. '
' → logprob: -2.965989589691162
    3. '(' → logprob: -4.715989589691162
    4. ',
' → logprob: -5.215989589691162
    5. ' (' → logprob: -5.590989589691162
    6. '   ' → logprob: -6.090989589691162
    7. ' =' → logprob: -6.215989589691162
    8. ' and' → logprob: -6.340989589691162
    9. '),' → logprob: -6.715989589691162
    10. '#' → logprob: -6.840989589691162

Token 3159: ' u' (ID: 337)
  Prédit: 'u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'u' → logprob: -0.07132970541715622
    2. 'vector' → logprob: -3.3213295936584473
    3. '   ' → logprob: -4.821329593658447
    4. '(' → logprob: -4.821329593658447
    5. ' u' → logprob: -4.821329593658447
    6. ' vector' → logprob: -5.571329593658447
    7. ' (' → logprob: -7.196329593658447
    8. '(u' → logprob: -7.196329593658447
    9. 'v' → logprob: -7.321329593658447
    10. '           ' → logprob: -7.946329593658447

Token 3160: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5541666150093079
    2. '=' → logprob: -0.9291666150093079
    3. '=(' → logprob: -3.679166555404663
    4. ',' → logprob: -6.554166793823242
    5. '_coord' → logprob: -6.929166793823242
    6. '_vec' → logprob: -7.554166793823242
    7. '_vector' → logprob: -8.054166793823242
    8. ' =(' → logprob: -8.304166793823242
    9. '_coords' → logprob: -8.304166793823242
    10. ')' → logprob: -8.554166793823242

Token 3161: ' vector' (ID: 9727)
  Prédit: 'vector'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'vector' → logprob: -0.21298116445541382
    2. 'normalize' → logprob: -1.7129812240600586
    3. '(vector' → logprob: -5.962981224060059
    4. 'u' → logprob: -6.087981224060059
    5. 'tuple' → logprob: -6.462981224060059
    6. '(' → logprob: -6.587981224060059
    7. '(u' → logprob: -6.587981224060059
    8. 'scalar' → logprob: -7.462981224060059
    9. '(s' → logprob: -7.962981224060059
    10. '(normal' → logprob: -8.087981224060059

Token 3162: ' to' (ID: 316)
  Prédit: '_sub'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_sub' → logprob: -0.0160356592386961
    2. '(' → logprob: -5.641035556793213
    3. 'from' → logprob: -5.766035556793213
    4. '_raw' → logprob: -6.016035556793213
    5. '_add' → logprob: -6.766035556793213
    6. '(
' → logprob: -7.141035556793213
    7. '1' → logprob: -7.391035556793213
    8. '_to' → logprob: -7.641035556793213
    9. '(X' → logprob: -7.641035556793213
    10. '_from' → logprob: -7.891035556793213

Token 3163: ' first' (ID: 1577)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.5591655373573303
    2. 'tet' → logprob: -1.3091654777526855
    3. 'X' → logprob: -2.4341654777526855
    4. '(self' → logprob: -3.1841654777526855
    5. 'face' → logprob: -4.8091654777526855
    6. 'sorted' → logprob: -5.1841654777526855
    7. 'vector' → logprob: -5.6841654777526855
    8. 'v' → logprob: -5.9341654777526855
    9. 'vertex' → logprob: -6.9341654777526855
    10. ' tetra' → logprob: -6.9341654777526855

Token 3164: ' other' (ID: 1273)
  Prédit: 'vertex'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'vertex' → logprob: -0.04440832883119583
    2. 'sorted' → logprob: -3.7944083213806152
    3. 'neighbor' → logprob: -4.044408321380615
    4. ' vertex' → logprob: -6.669408321380615
    5. 'edge' → logprob: -7.044408321380615
    6. 'v' → logprob: -7.544408321380615
    7. 'adj' → logprob: -7.919408321380615
    8. ')' → logprob: -9.544408798217773
    9. '_vertex' → logprob: -9.794408798217773
    10. '(vertex' → logprob: -9.794408798217773

Token 3165: ' vertex' (ID: 25363)
  Prédit: 'vertex'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'vertex' → logprob: -0.007880822755396366
    2. ' vertex' → logprob: -5.382880687713623
    3. '_vertex' → logprob: -6.132880687713623
    4. 'vertices' → logprob: -7.882880687713623
    5. 'Vertex' → logprob: -8.007881164550781
    6. 'v' → logprob: -9.382881164550781
    7. 'neighbor' → logprob: -9.632881164550781
    8. 'sorted' → logprob: -9.882881164550781
    9. 'face' → logprob: -10.507881164550781
    10. 'vert' → logprob: -10.632881164550781

Token 3166: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.4683992564678192
    2. ')' → logprob: -2.9683992862701416
    3. '
' → logprob: -2.9683992862701416
    4. '(' → logprob: -3.2183992862701416
    5. '   ' → logprob: -3.2183992862701416
    6. '[' → logprob: -3.7183992862701416
    7. ',
' → logprob: -3.8433992862701416
    8. '           ' → logprob: -4.2183990478515625
    9. ')
' → logprob: -4.2183990478515625
    10. '1' → logprob: -4.7183990478515625

Token 3167: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.3016386032104492
    2. ' v' → logprob: -1.4266386032104492
    3. '   ' → logprob: -4.676638603210449
    4. ',' → logprob: -5.426638603210449
    5. '           ' → logprob: -6.426638603210449
    6. '#' → logprob: -6.426638603210449
    7. '       ' → logprob: -7.926638603210449
    8. 'and' → logprob: -7.926638603210449
    9. 'second' → logprob: -7.926638603210449
    10. ' and' → logprob: -8.17663860321045

Token 3168: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.05974328890442848
    2. ' =' → logprob: -3.1847434043884277
    3. ',' → logprob: -5.309743404388428
    4. '=(' → logprob: -5.309743404388428
    5. ')' → logprob: -5.809743404388428
    6. '2' → logprob: -7.059743404388428
    7. '=
' → logprob: -7.059743404388428
    8. '),' → logprob: -7.684743404388428
    9. '   ' → logprob: -8.68474292755127
    10. ')=' → logprob: -9.05974292755127

Token 3169: ' vector' (ID: 9727)
  Prédit: 'vector'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'vector' → logprob: -0.008339744992554188
    2. ' vector' → logprob: -5.383339881896973
    3. 'second' → logprob: -5.633339881896973
    4. '(vector' → logprob: -10.633339881896973
    5. ' second' → logprob: -10.883339881896973
    6. '   ' → logprob: -10.883339881896973
    7. 'normalized' → logprob: -11.258339881896973
    8. 'the' → logprob: -11.258339881896973
    9. '
' → logprob: -11.883339881896973
    10. '(' → logprob: -12.133339881896973

Token 3170: ' to' (ID: 316)
  Prédit: 'to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'to' → logprob: -0.12873110175132751
    2. ' to' → logprob: -2.1287310123443604
    3. '   ' → logprob: -7.8787312507629395
    4. '=' → logprob: -8.753730773925781
    5. ' ' → logprob: -8.753730773925781
    6. 'tow' → logprob: -8.753730773925781
    7. '_raw' → logprob: -9.003730773925781
    8. 'per' → logprob: -9.753730773925781
    9. ')' → logprob: -9.878730773925781
    10. 'raw' → logprob: -10.128730773925781

Token 3171: ' second' (ID: 3099)
  Prédit: 'second'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'second' → logprob: -0.0010531729785725474
    2. ' second' → logprob: -6.876053333282471
    3. '(second' → logprob: -11.626052856445312
    4. 'the' → logprob: -12.251052856445312
    5. '
' → logprob: -13.126052856445312
    6. '(' → logprob: -13.501052856445312
    7. 'first' → logprob: -14.126052856445312
    8. 'last' → logprob: -14.251052856445312
    9. 'third' → logprob: -15.001052856445312
    10. '0' → logprob: -15.376052856445312

Token 3172: ' other' (ID: 1273)
  Prédit: 'vertex'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'vertex' → logprob: -0.2549315392971039
    2. 'vs' → logprob: -2.6299314498901367
    3. ',' → logprob: -3.0049314498901367
    4. 'other' → logprob: -3.3799314498901367
    5. 'v' → logprob: -3.7549314498901367
    6. ' vertex' → logprob: -3.8799314498901367
    7. '_vertex' → logprob: -5.504931449890137
    8. ')' → logprob: -6.004931449890137
    9. '_vs' → logprob: -6.004931449890137
    10. '),' → logprob: -6.379931449890137

Token 3173: ' vertex' (ID: 25363)
  Prédit: 'vertex'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'vertex' → logprob: -0.032253384590148926
    2. 'v' → logprob: -4.282253265380859
    3. ' vertex' → logprob: -4.282253265380859
    4. 'vertices' → logprob: -6.782253265380859
    5. '_vertex' → logprob: -7.407253265380859
    6. 'vs' → logprob: -7.407253265380859
    7. ',' → logprob: -8.28225326538086
    8. ')' → logprob: -8.28225326538086
    9. ' ' → logprob: -8.53225326538086
    10. '
' → logprob: -8.65725326538086

Token 3174: ' orth' (ID: 35656)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.01982981711626053
    2. '
' → logprob: -4.144829750061035
    3. '#' → logprob: -6.269829750061035
    4. ',' → logprob: -7.769829750061035
    5. '            
' → logprob: -7.769829750061035
    6. '       ' → logprob: -8.519829750061035
    7. ' (' → logprob: -9.269829750061035
    8. 'A' → logprob: -9.394829750061035
    9. '```' → logprob: -9.394829750061035
    10. 'v' → logprob: -9.769829750061035

Token 3175: 'ogonal' (ID: 127861)
  Prédit: 'ogonal'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ogonal' → logprob: -0.0005312294815666974
    2. 'g' → logprob: -7.875531196594238
    3. 'org' → logprob: -10.375531196594238
    4. '           ' → logprob: -10.750531196594238
    5. '(' → logprob: -10.750531196594238
    6. 'normal' → logprob: -11.375531196594238
    7. '#' → logprob: -11.500531196594238
    8. 'og' → logprob: -11.750531196594238
    9. '       ' → logprob: -12.000531196594238
    10. 'on' → logprob: -12.125531196594238

Token 3176: ' in' (ID: 306)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -1.8145865201950073
    2. 'to' → logprob: -1.9395865201950073
    3. ')' → logprob: -2.064586639404297
    4. ')
' → logprob: -2.314586639404297
    5. '   ' → logprob: -2.564586639404297
    6. '```' → logprob: -2.564586639404297
    7. ' to' → logprob: -2.814586639404297
    8. ',
' → logprob: -2.814586639404297
    9. '):
' → logprob: -3.064586639404297
    10. '2' → logprob: -3.314586639404297

Token 3177: ' plane' (ID: 16499)
  Prédit: 'plane'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'plane' → logprob: -0.16105523705482483
    2. 'face' → logprob: -1.9110552072525024
    3. 'the' → logprob: -7.786055088043213
    4. '2' → logprob: -8.911055564880371
    5. ' plane' → logprob: -9.286055564880371
    6. 'unit' → logprob: -9.661055564880371
    7. '
' → logprob: -10.411055564880371
    8. 'length' → logprob: -10.911055564880371
    9. '-plane' → logprob: -10.911055564880371
    10. '#' → logprob: -11.536055564880371

Token 3178: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.03802221268415451
    2. '
' → logprob: -3.53802227973938
    3. ',' → logprob: -5.788022041320801
    4. ':
' → logprob: -7.413022041320801
    5. '       ' → logprob: -7.413022041320801
    6. '```' → logprob: -7.538022041320801
    7. '):
' → logprob: -7.913022041320801
    8. ':' → logprob: -8.0380220413208
    9. '#' → logprob: -8.0380220413208
    10. '(' → logprob: -8.4130220413208

Token 3179: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.035239700227975845
    2. '       ' → logprob: -4.4102396965026855
    3. ',' → logprob: -5.2852396965026855
    4. '               ' → logprob: -5.4102396965026855
    5. ':' → logprob: -6.1602396965026855
    6. '(' → logprob: -6.9102396965026855
    7. '   ' → logprob: -6.9102396965026855
    8. ' ' → logprob: -7.0352396965026855
    9. ' (' → logprob: -7.2852396965026855
    10. '            
' → logprob: -7.2852396965026855

Token 3180: ' #' (ID: 1069)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.018885426223278046
    2. '#' (adapté à ' #') → logprob: -5.143885612487793
    3. 'v' → logprob: -5.143885612487793
    4. '       ' → logprob: -6.018885612487793
    5. 'A' → logprob: -6.768885612487793
    6. '
' → logprob: -7.268885612487793
    7. 'f' → logprob: -7.768885612487793
    8. 'vertices' → logprob: -8.143885612487793
    9. ' #' → logprob: -8.768885612487793
    10. 'vs' → logprob: -8.768885612487793

Token 3181: ' The' (ID: 623)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.06398113071918488
    2. '#' → logprob: -3.313981056213379
    3. 'v' → logprob: -4.688981056213379
    4. 'A' → logprob: -4.938981056213379
    5. '       ' → logprob: -6.313981056213379
    6. ' #' → logprob: -6.563981056213379
    7. '
' → logprob: -6.813981056213379
    8. ' A' → logprob: -7.063981056213379
    9. ' v' → logprob: -7.188981056213379
    10. 'f' → logprob: -7.938981056213379

Token 3182: ' vertices' (ID: 38360)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -1.5110520124435425
    2. 'face' → logprob: -1.6360520124435425
    3. 'other' → logprob: -2.136052131652832
    4. 'vertices' → logprob: -2.386052131652832
    5. 'v' → logprob: -2.636052131652832
    6. 'B' → logprob: -2.886052131652832
    7. 'edge' → logprob: -3.136052131652832
    8. 'def' → logprob: -3.136052131652832
    9. 'edges' → logprob: -3.136052131652832
    10. 'A' → logprob: -3.886052131652832

Token 3183: ' in' (ID: 306)
  Prédit: '_coords'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_coords' → logprob: -0.05422012135386467
    2. 'coords' → logprob: -4.179220199584961
    3. 'A' → logprob: -4.679220199584961
    4. '_order' → logprob: -5.429220199584961
    5. ' =' → logprob: -5.679220199584961
    6. '_positions' → logprob: -6.179220199584961
    7. '_A' → logprob: -6.304220199584961
    8. '_map' → logprob: -6.429220199584961
    9. '_list' → logprob: -6.429220199584961
    10. '_in' → logprob: -6.554220199584961

Token 3184: ' ' (ID: 220)
  Prédit: 'face'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'face' → logprob: -0.18356391787528992
    2. '2' → logprob: -1.8085639476776123
    3. 'local' → logprob: -7.183563709259033
    4. 'the' → logprob: -7.183563709259033
    5. '
' → logprob: -7.558563709259033
    6. '#' → logprob: -7.683563709259033
    7. '   ' → logprob: -8.308564186096191
    8. '```' → logprob: -8.433564186096191
    9. ' ' → logprob: -8.683564186096191
    10. ' face' → logprob: -8.933564186096191

Token 3185: '2' (ID: 17)
  Prédit: 'face'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'face' → logprob: -0.02106507681310177
    2. '2' → logprob: -4.2710652351379395
    3. '{
' → logprob: -5.8960652351379395
    4. '#' → logprob: -6.6460652351379395
    5. '
' → logprob: -7.0210652351379395
    6. '{' → logprob: -7.7710652351379395
    7. '(face' → logprob: -8.271064758300781
    8. '   ' → logprob: -8.521064758300781
    9. '```' → logprob: -8.646064758300781
    10. 'f' → logprob: -9.146064758300781

Token 3186: 'D' (ID: 35)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -7.898723561083898e-05
    2. 'D' → logprob: -9.750079154968262
    3. '2' → logprob: -11.750079154968262
    4. '
' → logprob: -12.875079154968262
    5. '(' → logprob: -13.250079154968262
    6. '#' → logprob: -13.750079154968262
    7. ',' → logprob: -13.875079154968262
    8. '3' → logprob: -14.250079154968262
    9. '0' → logprob: -14.500079154968262
    10. '(d' → logprob: -14.500079154968262

Token 3187: ' coordinates' (ID: 27933)
  Prédit: 'coords'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'coords' → logprob: -0.5154228210449219
    2. '_coords' → logprob: -1.2654228210449219
    3. ' =' → logprob: -3.015422821044922
    4. 'are' → logprob: -4.265422821044922
    5. ' are' → logprob: -4.640422821044922
    6. '#' → logprob: -4.640422821044922
    7. '   ' → logprob: -4.640422821044922
    8. '=' → logprob: -4.890422821044922
    9. ' coords' → logprob: -6.015422821044922
    10. 'A' → logprob: -6.390422821044922

Token 3188: ' are' (ID: 553)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.9974712133407593
    2. '=' → logprob: -2.122471332550049
    3. 'are' → logprob: -2.497471332550049
    4. '#' → logprob: -2.747471332550049
    5. ':
' → logprob: -3.122471332550049
    6. ' are' → logprob: -3.247471332550049
    7. '           ' → logprob: -3.372471332550049
    8. 'face' → logprob: -3.372471332550049
    9. '   ' → logprob: -3.497471332550049
    10. '       ' → logprob: -4.122471332550049

Token 3189: ':
' (ID: 734)
  Prédit: '{
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '{
' → logprob: -0.04123590141534805
    2. '{' → logprob: -3.91623592376709
    3. '{'' → logprob: -4.91623592376709
    4. '[(' → logprob: -5.16623592376709
    5. '(' → logprob: -5.41623592376709
    6. ' {
' → logprob: -7.04123592376709
    7. '[
' → logprob: -7.54123592376709
    8. '{"' → logprob: -7.66623592376709
    9. '   ' → logprob: -8.29123592376709
    10. '           ' → logprob: -8.91623592376709

Token 3190: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.01268339529633522
    2. 'A' → logprob: -5.012683391571045
    3. '       ' → logprob: -6.637683391571045
    4. '{
' → logprob: -7.137683391571045
    5. '{' → logprob: -7.762683391571045
    6. '            
' → logprob: -7.887683391571045
    7. '0' → logprob: -8.012683868408203
    8. 'v' → logprob: -8.012683868408203
    9. '#' → logprob: -8.012683868408203
    10. '
' → logprob: -8.137683868408203

Token 3191: ' origin' (ID: 12839)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.955211341381073
    2. '           ' → logprob: -1.7052114009857178
    3. 'face' → logprob: -1.8302114009857178
    4. '{
' → logprob: -2.4552114009857178
    5. 'v' → logprob: -2.7052114009857178
    6. 'vertex' → logprob: -3.5802114009857178
    7. '#' → logprob: -3.7052114009857178
    8. 'vertices' → logprob: -4.080211162567139
    9. 'f' → logprob: -4.205211162567139
    10. '{' → logprob: -4.580211162567139

Token 3192: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.7316946387290955
    2. ' =' → logprob: -0.9816946387290955
    3. '=' → logprob: -1.9816946983337402
    4. 'A' → logprob: -6.35669469833374
    5. '=(' → logprob: -6.85669469833374
    6. '   ' → logprob: -7.10669469833374
    7. ' ,' → logprob: -7.85669469833374
    8. ')' → logprob: -8.106694221496582
    9. '           ' → logprob: -8.356694221496582
    10. '0' → logprob: -8.356694221496582

Token 3193: ' u' (ID: 337)
  Prédit: 'u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'u' → logprob: -0.019202042371034622
    2. '(u' → logprob: -4.39420223236084
    3. 'self' → logprob: -5.89420223236084
    4. ' u' → logprob: -6.14420223236084
    5. '(' → logprob: -7.89420223236084
    6. ' (' → logprob: -8.01920223236084
    7. '(_,' → logprob: -8.26920223236084
    8. '(self' → logprob: -8.51920223236084
    9. '_u' → logprob: -9.14420223236084
    10. '   ' → logprob: -9.39420223236084

Token 3194: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.021627653390169144
    2. ',v' → logprob: -3.89662766456604
    3. '_raw' → logprob: -7.896627426147461
    4. '_,' → logprob: -8.771627426147461
    5. 'v' → logprob: -8.771627426147461
    6. ' ,' → logprob: -8.896627426147461
    7. 'vec' → logprob: -10.021627426147461
    8. '_vec' → logprob: -10.146627426147461
    9. 'vector' → logprob: -10.396627426147461
    10. ',u' → logprob: -10.521627426147461

Token 3195: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.005234002135694027
    2. ' v' → logprob: -5.2552337646484375
    3. '(v' → logprob: -16.255233764648438
    4. '	v' → logprob: -16.380233764648438
    5. '   ' → logprob: -16.755233764648438
    6. ' ' → logprob: -17.630233764648438
    7. 'u' → logprob: -17.755233764648438
    8. '(' → logprob: -17.880233764648438
    9. ' ' → logprob: -17.880233764648438
    10. '_v' → logprob: -18.880233764648438

Token 3196: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.01682753674685955
    2. ' =' → logprob: -4.141827583312988
    3. '           ' → logprob: -7.266827583312988
    4. '   ' → logprob: -10.141827583312988
    5. '       ' → logprob: -10.516827583312988
    6. '               ' → logprob: -11.891827583312988
    7. '=(' → logprob: -12.641827583312988
    8. ' ' → logprob: -12.766827583312988
    9. '=
' → logprob: -13.391827583312988
    10. '=f' → logprob: -13.516827583312988

Token 3197: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0012720199301838875
    2. ' self' → logprob: -6.751272201538086
    3. '           ' → logprob: -9.251272201538086
    4. '   ' → logprob: -12.751272201538086
    5. 'face' → logprob: -14.626272201538086
    6. '         ' → logprob: -14.751272201538086
    7. ' ' → logprob: -14.751272201538086
    8. '               ' → logprob: -14.876272201538086
    9. '       ' → logprob: -14.876272201538086
    10. '(self' → logprob: -15.376272201538086

Token 3198: '.t' (ID: 1370)
  Prédit: 'tet'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tet' → logprob: -0.4079837203025818
    2. '.t' → logprob: -1.4079837799072266
    3. 't' → logprob: -2.4079837799072266
    4. '
' → logprob: -9.282983779907227
    5. '	t' → logprob: -9.657983779907227
    6. ' tetra' → logprob: -9.782983779907227
    7. '   ' → logprob: -10.032983779907227
    8. '  ' → logprob: -11.282983779907227
    9. ' ' → logprob: -11.407983779907227
    10. '_t' → logprob: -11.782983779907227

Token 3199: 'etra' (ID: 72836)
  Prédit: 'etra'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'etra' → logprob: -0.0009242036612704396
    2. ' tetra' → logprob: -8.500924110412598
    3. 'eta' → logprob: -9.125924110412598
    4. 'tet' → logprob: -9.750924110412598
    5. '   ' → logprob: -10.125924110412598
    6. 'etras' → logprob: -10.313424110412598
    7. 'etri' → logprob: -10.438424110412598
    8. 'def' → logprob: -10.438424110412598
    9. 'heta' → logprob: -10.563424110412598
    10. 'et' → logprob: -10.875924110412598

Token 3200: '.face' (ID: 92193)
  Prédit: 'face'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'face' → logprob: -0.009809567593038082
    2. '.face' → logprob: -4.634809494018555
    3. '
' → logprob: -10.259809494018555
    4. ' face' → logprob: -11.634809494018555
    5. '_face' → logprob: -12.759809494018555
    6. '(face' → logprob: -13.384809494018555
    7. '   ' → logprob: -13.384809494018555
    8. 'faces' → logprob: -14.509809494018555
    9. ' ' → logprob: -14.884809494018555
    10. 'import' → logprob: -14.884809494018555

Token 3201: '_b' (ID: 1535)
  Prédit: '_b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_b' → logprob: -2.7133641196996905e-05
    2. 'bases' → logprob: -10.75002670288086
    3. '_basis' → logprob: -12.62502670288086
    4. '_bas' → logprob: -14.62502670288086
    5. 'Bases' → logprob: -15.12502670288086
    6. '   ' → logprob: -15.25002670288086
    7. 'basis' → logprob: -15.62502670288086
    8. '
' → logprob: -15.62502670288086
    9. '       ' → logprob: -16.00002670288086
    10. '_faces' → logprob: -16.25002670288086

Token 3202: 'ases' (ID: 4324)
  Prédit: 'ases'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ases' → logprob: -0.010847139172255993
    2. 'bases' → logprob: -5.010847091674805
    3. '_b' → logprob: -5.510847091674805
    4. 'ase' → logprob: -11.385847091674805
    5. 'faces' → logprob: -11.385847091674805
    6. 'b' → logprob: -11.635847091674805
    7. '```' → logprob: -11.885847091674805
    8. 'aces' → logprob: -12.260847091674805
    9. '#' → logprob: -12.510847091674805
    10. 'Bases' → logprob: -12.635847091674805

Token 3203: '[' (ID: 58)
  Prédit: 'face'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'face' → logprob: -0.24656172096729279
    2. '(face' → logprob: -1.9965617656707764
    3. '[' → logprob: -2.4965617656707764
    4. ' face' → logprob: -8.496562004089355
    5. '{' → logprob: -10.246562004089355
    6. '
' → logprob: -11.121562004089355
    7. '_face' → logprob: -11.246562004089355
    8. '[
' → logprob: -11.621562004089355
    9. '           ' → logprob: -11.621562004089355
    10. ')' → logprob: -11.621562004089355

Token 3204: 'face' (ID: 2300)
  Prédit: 'face'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'face' → logprob: -2.2200749754119897e-06
    2. ' face' → logprob: -13.500001907348633
    3. '(face' → logprob: -14.500001907348633
    4. 'f' → logprob: -15.375001907348633
    5. 'Face' → logprob: -17.500001907348633
    6. '   ' → logprob: -18.625001907348633
    7. '```' → logprob: -19.625001907348633
    8. '.face' → logprob: -19.625001907348633
    9. '_face' → logprob: -20.125001907348633
    10. '
' → logprob: -20.375001907348633

Token 3205: ']
' (ID: 1592)
  Prédit: ']
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']
' → logprob: -0.16487471759319305
    2. '       ' → logprob: -2.664874792098999
    3. ')
' → logprob: -3.414874792098999
    4. '           ' → logprob: -3.414874792098999
    5. ']' → logprob: -4.91487455368042
    6. '[' → logprob: -5.16487455368042
    7. '   ' → logprob: -6.53987455368042
    8. ')' → logprob: -7.41487455368042
    9. '
' → logprob: -7.91487455368042
    10. ']

' → logprob: -7.91487455368042

Token 3206: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.18341825902462006
    2. '       ' → logprob: -2.4334182739257812
    3. '
' → logprob: -3.0584182739257812
    4. 'v' → logprob: -4.558418273925781
    5. '```' → logprob: -4.683418273925781
    6. '   ' → logprob: -5.433418273925781
    7. 'A' → logprob: -5.433418273925781
    8. '#' → logprob: -6.308418273925781
    9. '``' → logprob: -7.808418273925781
    10. '            
' → logprob: -8.058418273925781

Token 3207: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' (adapté à ' v') → logprob: -1.3236416578292847
    2. 'A' → logprob: -1.4486416578292847
    3. '           ' → logprob: -1.4486416578292847
    4. '#' → logprob: -2.698641777038574
    5. '       ' → logprob: -3.323641777038574
    6. 'pos' → logprob: -3.323641777038574
    7. 'u' → logprob: -3.573641777038574
    8. 'face' → logprob: -3.698641777038574
    9. 'vs' → logprob: -4.448641777038574
    10. 'B' → logprob: -4.573641777038574

Token 3208: 'A' (ID: 32)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.4433981478214264
    2. '_coords' → logprob: -1.943398118019104
    3. '1' → logprob: -2.5683982372283936
    4. 'A' → logprob: -2.9433982372283936
    5. 'erts' → logprob: -3.4433982372283936
    6. '0' → logprob: -4.3183979988098145
    7. 'coords' → logprob: -4.3183979988098145
    8. 'B' → logprob: -5.6933979988098145
    9. 'tx' → logprob: -5.6933979988098145
    10. '_list' → logprob: -6.1933979988098145

Token 3209: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.25486722588539124
    2. '=' → logprob: -1.5048671960830688
    3. 'A' → logprob: -7.254867076873779
    4. '=(' → logprob: -8.004867553710938
    5. '_coords' → logprob: -8.129867553710938
    6. '_pos' → logprob: -8.254867553710938
    7. ',' → logprob: -8.504867553710938
    8. '2' → logprob: -8.629867553710938
    9. 's' → logprob: -8.629867553710938
    10. '_coord' → logprob: -8.754867553710938

Token 3210: ' (' (ID: 350)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -1.8624639324116288e-06
    2. ' (' → logprob: -13.375001907348633
    3. '0' → logprob: -15.250001907348633
    4. '   ' → logprob: -17.875001907348633
    5. '(
' → logprob: -19.000001907348633
    6. '(Vertex' → logprob: -19.375001907348633
    7. '((' → logprob: -19.500001907348633
    8. ' ' → logprob: -19.625001907348633
    9. '  ' → logprob: -21.000001907348633
    10. '('' → logprob: -21.250001907348633

Token 3211: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.1994775377388578e-05
    2. '(' → logprob: -11.375012397766113
    3. ' ' → logprob: -15.125012397766113
    4. ')' → logprob: -16.875011444091797
    5. '   ' → logprob: -17.625011444091797
    6. '```' → logprob: -17.750011444091797
    7. '.' → logprob: -17.875011444091797
    8. '۰' → logprob: -18.375011444091797
    9. '`' → logprob: -19.250011444091797
    10. ' (' → logprob: -19.437511444091797

Token 3212: '.' (ID: 13)
  Prédit: '.'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.01616961695253849
    2. ',' → logprob: -4.141169548034668
    3. '0' → logprob: -9.016169548034668
    4. '.,' → logprob: -11.641169548034668
    5. '```' → logprob: -13.516169548034668
    6. ' ,' → logprob: -14.391169548034668
    7. ')' → logprob: -14.516169548034668
    8. '   ' → logprob: -14.641169548034668
    9. ',
' → logprob: -14.766169548034668
    10. '[' → logprob: -15.516169548034668

Token 3213: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -5.438573680294212e-06
    2. ',' → logprob: -12.250005722045898
    3. ' ' → logprob: -14.875005722045898
    4. '.' → logprob: -16.2500057220459
    5. ')' → logprob: -16.8750057220459
    6. '```' → logprob: -17.3750057220459
    7. '
' → logprob: -17.6250057220459
    8. 'float' → logprob: -17.7500057220459
    9. '   ' → logprob: -18.6250057220459
    10. 'def' → logprob: -19.2500057220459

Token 3214: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00018816311785485595
    2. '0' → logprob: -9.125187873840332
    3. ' ,' → logprob: -9.750187873840332
    4. ',
' → logprob: -11.000187873840332
    5. ')' → logprob: -13.875187873840332
    6. '),' → logprob: -14.250187873840332
    7. '   ' → logprob: -14.500187873840332
    8. '  ' → logprob: -14.750187873840332
    9. '    ' → logprob: -15.375187873840332
    10. '        ' → logprob: -15.875187873840332

Token 3215: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.7610454708337784e-05
    2. ' ' → logprob: -10.500027656555176
    3. '   ' → logprob: -17.87502670288086
    4. '  ' → logprob: -18.50002670288086
    5. ')' → logprob: -19.00002670288086
    6. ',' → logprob: -19.75002670288086
    7. '00' → logprob: -20.06252670288086
    8. '    ' → logprob: -20.18752670288086
    9. '```' → logprob: -20.43752670288086
    10. ' ' → logprob: -20.50002670288086

Token 3216: '.' (ID: 13)
  Prédit: '.'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.018514415249228477
    2. ',' → logprob: -4.643514633178711
    3. ')' → logprob: -4.893514633178711
    4. '0' → logprob: -7.018514633178711
    5. '),' → logprob: -8.518514633178711
    6. ')
' → logprob: -9.143514633178711
    7. '),
' → logprob: -11.518514633178711
    8. '```' → logprob: -12.393514633178711
    9. '),(' → logprob: -12.768514633178711
    10. ',
' → logprob: -13.393514633178711

Token 3217: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -16.375
    3. ')' → logprob: -18.375
    4. '   ' → logprob: -18.875
    5. '```' → logprob: -19.625
    6. '00' → logprob: -19.875
    7. '
' → logprob: -19.875
    8. '       ' → logprob: -20.125
    9. '           ' → logprob: -20.25
    10. '        ' → logprob: -21.875

Token 3218: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.044678643345832825
    2. ')' → logprob: -3.1696786880493164
    3. '           ' → logprob: -6.419678688049316
    4. ')
' → logprob: -10.794678688049316
    5. ',' → logprob: -11.544678688049316
    6. '       ' → logprob: -12.544678688049316
    7. '   ' → logprob: -13.044678688049316
    8. ' )
' → logprob: -13.169678688049316
    9. '),' → logprob: -13.169678688049316
    10. ',)
' → logprob: -13.169678688049316

Token 3219: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.056169454008340836
    2. 'v' → logprob: -2.9311695098876953
    3. '       ' → logprob: -7.431169509887695
    4. ',' → logprob: -8.556169509887695
    5. '   ' → logprob: -8.806169509887695
    6. '```' → logprob: -8.806169509887695
    7. ' v' → logprob: -10.306169509887695
    8. '
' → logprob: -10.556169509887695
    9. '            
' → logprob: -10.681169509887695
    10. '#' → logprob: -10.806169509887695

Token 3220: ' #' (ID: 1069)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.016846295446157455
    2. '           ' → logprob: -5.516846179962158
    3. 'u' → logprob: -5.641846179962158
    4. 'sorted' → logprob: -5.891846179962158
    5. '#' (adapté à ' #') → logprob: -6.016846179962158
    6. '(v' → logprob: -7.266846179962158
    7. 'face' → logprob: -7.766846179962158
    8. 'if' → logprob: -8.016846656799316
    9. '(sorted' → logprob: -8.266846656799316
    10. '(' → logprob: -8.266846656799316

Token 3221: ' Vert' (ID: 30601)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.11601735651493073
    2. '#' → logprob: -3.3660173416137695
    3. 'sorted' → logprob: -3.3660173416137695
    4. '           ' → logprob: -3.8660173416137695
    5. 'u' → logprob: -5.3660173416137695
    6. '       ' → logprob: -6.6160173416137695
    7. 'vs' → logprob: -6.7410173416137695
    8. 'f' → logprob: -6.8660173416137695
    9. 'face' → logprob: -6.8660173416137695
    10. 'e' → logprob: -6.8660173416137695

Token 3222: 'ices' (ID: 1386)
  Prédit: 'ices'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ices' → logprob: -0.13416500389575958
    2. 'ex' → logprob: -2.134165048599243
    3. 's' → logprob: -6.759164810180664
    4. 'tex' → logprob: -6.759164810180664
    5. 'v' → logprob: -7.009164810180664
    6. '(' → logprob: -7.384164810180664
    7. 'ice' → logprob: -8.259164810180664
    8. '```' → logprob: -8.259164810180664
    9. 'vertices' → logprob: -8.259164810180664
    10. '#' → logprob: -8.384164810180664

Token 3223: ' in' (ID: 306)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.26738911867141724
    2. 'v' → logprob: -2.3923890590667725
    3. ' =' → logprob: -3.2673890590667725
    4. '_coords' → logprob: -3.5173890590667725
    5. '2' → logprob: -4.892389297485352
    6. 'u' → logprob: -5.142389297485352
    7. 'AX' → logprob: -5.392389297485352
    8. '_map' → logprob: -5.517389297485352
    9. '_names' → logprob: -5.642389297485352
    10. '_v' → logprob: -5.642389297485352

Token 3224: ' face' (ID: 4950)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '2' → logprob: -0.9173983335494995
    2. 'face' → logprob: -1.1673983335494995
    3. '(' → logprob: -1.9173983335494995
    4. '{
' → logprob: -3.167398452758789
    5. 'u' → logprob: -3.292398452758789
    6. '(u' → logprob: -4.292398452758789
    7. '{' → logprob: -4.417398452758789
    8. '[(' → logprob: -4.792398452758789
    9. '1' → logprob: -5.292398452758789
    10. '#' → logprob: -5.667398452758789

Token 3225: '.v' (ID: 5520)
  Prédit: 'coords'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'coords' → logprob: -0.7937711477279663
    2. '_coords' → logprob: -1.2937711477279663
    3. '2' → logprob: -1.7937711477279663
    4. 'vs' → logprob: -2.918771266937256
    5. '_vs' → logprob: -3.543771266937256
    6. '_' → logprob: -5.293771266937256
    7. 'coordinates' → logprob: -6.043771266937256
    8. '   ' → logprob: -6.293771266937256
    9. '3' → logprob: -6.543771266937256
    10. 'co' → logprob: -6.918771266937256

Token 3226: 's' (ID: 82)
  Prédit: 's'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.013395384885370731
    2. '2' → logprob: -4.763395309448242
    3. 'vs' → logprob: -6.763395309448242
    4. 'coords' → logprob: -6.763395309448242
    5. '
' → logprob: -7.513395309448242
    6. 'cs' → logprob: -7.638395309448242
    7. '   ' → logprob: -8.013395309448242
    8. '```' → logprob: -8.888395309448242
    9. '_coords' → logprob: -9.263395309448242
    10. 'sd' → logprob: -9.388395309448242

Token 3227: ' sorted' (ID: 20099)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -1.0647004842758179
    2. ' =' → logprob: -1.1897004842758179
    3. '_coords' → logprob: -1.4397004842758179
    4. '2' → logprob: -3.1897006034851074
    5. 'coords' → logprob: -3.8147006034851074
    6. 'v' → logprob: -4.564700603485107
    7. '0' → logprob: -5.064700603485107
    8. '[' → logprob: -5.439700603485107
    9. '_vertices' → logprob: -5.689700603485107
    10. '   ' → logprob: -5.814700603485107

Token 3228: ':' (ID: 25)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.7943475246429443
    2. '_coords' → logprob: -1.7943475246429443
    3. 'coords' → logprob: -2.0443475246429443
    4. '=' → logprob: -2.4193475246429443
    5. '_' → logprob: -3.6693475246429443
    6. '2' → logprob: -3.6693475246429443
    7. 'v' → logprob: -4.169347763061523
    8. '_vertices' → logprob: -4.294347763061523
    9. '_face' → logprob: -4.419347763061523
    10. '_sorted' → logprob: -4.669347763061523

Token 3229: ' e' (ID: 319)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -1.4701703786849976
    2. 'v' → logprob: -1.7201703786849976
    3. 'A' → logprob: -2.345170497894287
    4. 'sorted' → logprob: -2.720170497894287
    5. ' (' → logprob: -2.970170497894287
    6. '{
' → logprob: -3.220170497894287
    7. ' =' → logprob: -3.345170497894287
    8. '(' → logprob: -3.595170497894287
    9. '[(' → logprob: -3.720170497894287
    10. '0' → logprob: -3.845170497894287

Token 3230: '.g' (ID: 1940)
  Prédit: '(''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '('' → logprob: -0.873781144618988
    2. '(' → logprob: -1.3737812042236328
    3. '[' → logprob: -1.6237812042236328
    4. '['' → logprob: -2.498781204223633
    5. 'A' → logprob: -4.623781204223633
    6. '(['' → logprob: -5.248781204223633
    7. '0' → logprob: -5.248781204223633
    8. '(
' → logprob: -5.623781204223633
    9. 'v' → logprob: -5.748781204223633
    10. '(v' → logprob: -5.748781204223633

Token 3231: '.,' (ID: 4213)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.7900573015213013
    2. '('' → logprob: -0.9150573015213013
    3. '(v' → logprob: -2.5400571823120117
    4. '(
' → logprob: -3.5400571823120117
    5. ' (' → logprob: -5.540057182312012
    6. '(self' → logprob: -5.665057182312012
    7. '('',' → logprob: -5.790057182312012
    8. 'v' → logprob: -5.915057182312012
    9. '   ' → logprob: -6.165057182312012
    10. 'self' → logprob: -6.415057182312012

Token 3232: ' (' (ID: 350)
  Prédit: '(v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(v' → logprob: -0.665611982345581
    2. '(face' → logprob: -2.040611982345581
    3. '(f' → logprob: -2.290611982345581
    4. '(' → logprob: -2.665611982345581
    5. 'face' → logprob: -3.415611982345581
    6. '[v' → logprob: -3.915611982345581
    7. '[' → logprob: -4.04061222076416
    8. '(A' → logprob: -4.16561222076416
    9. '(
' → logprob: -4.16561222076416
    10. '(u' → logprob: -4.29061222076416

Token 3233: 'A' (ID: 32)
  Prédit: 'face'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'face' → logprob: -0.6196406483650208
    2. 'Vertex' → logprob: -0.9946406483650208
    3. '0' → logprob: -2.869640588760376
    4. ''' → logprob: -4.494640827178955
    5. 'f' → logprob: -4.619640827178955
    6. 'A' → logprob: -5.494640827178955
    7. 'sorted' → logprob: -5.744640827178955
    8. ''A' → logprob: -6.869640827178955
    9. '(Vertex' → logprob: -6.869640827178955
    10. '('' → logprob: -7.369640827178955

Token 3234: ',B' (ID: 19853)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0034420802257955074
    2. ',B' → logprob: -6.128442287445068
    3. '),' → logprob: -7.878442287445068
    4. ')' → logprob: -8.62844181060791
    5. ' ,' → logprob: -9.25344181060791
    6. ',
' → logprob: -9.37844181060791
    7. 'B' → logprob: -9.37844181060791
    8. ',v' → logprob: -9.87844181060791
    9. ',A' → logprob: -9.87844181060791
    10. '0' → logprob: -10.00344181060791

Token 3235: ',C' (ID: 26924)
  Prédit: '),'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),' → logprob: -0.18187512457370758
    2. ',' → logprob: -2.056875228881836
    3. ')' → logprob: -3.931875228881836
    4. 'C' → logprob: -5.056875228881836
    5. '),(' → logprob: -5.556875228881836
    6. ',C' → logprob: -5.931875228881836
    7. ''),' → logprob: -6.431875228881836
    8. '),
' → logprob: -6.681875228881836
    9. '),'' → logprob: -7.056875228881836
    10. '',' → logprob: -7.556875228881836

Token 3236: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5028432607650757
    2. ')
' → logprob: -1.0028432607650757
    3. '),' → logprob: -3.6278433799743652
    4. '),
' → logprob: -7.877843379974365
    5. '[' → logprob: -8.502842903137207
    6. ')

' → logprob: -8.752842903137207
    7. ',' → logprob: -9.002842903137207
    8. '),(' → logprob: -9.127842903137207
    9. ')
' → logprob: -9.127842903137207
    10. '):' → logprob: -9.252842903137207

Token 3237: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.4923465847969055
    2. 'v' → logprob: -0.9923465847969055
    3. '
' → logprob: -5.11734676361084
    4. ',' → logprob: -5.99234676361084
    5. 'if' → logprob: -6.61734676361084
    6. '       ' → logprob: -6.61734676361084
    7. ' v' → logprob: -7.11734676361084
    8. '(v' → logprob: -7.36734676361084
    9. 'vertex' → logprob: -7.49234676361084
    10. 'A' → logprob: -7.49234676361084

Token 3238: ' sorted' (ID: 20099)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.17157329618930817
    2. 'sorted' (adapté à ' sorted') → logprob: -3.1715734004974365
    3. '           ' → logprob: -3.5465734004974365
    4. 'face' → logprob: -3.7965734004974365
    5. 'vs' → logprob: -4.171573162078857
    6. 'if' → logprob: -4.296573162078857
    7. 'idx' → logprob: -5.046573162078857
    8. 'u' → logprob: -5.421573162078857
    9. '#' → logprob: -5.671573162078857
    10. '       ' → logprob: -5.796573162078857

Token 3239: '_vs' (ID: 106451)
  Prédit: '_vs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_vs' → logprob: -0.5238255858421326
    2. 'vs' → logprob: -0.8988255858421326
    3. '_vertices' → logprob: -8.648825645446777
    4. 'face' → logprob: -8.648825645446777
    5. 'vertices' → logprob: -9.023825645446777
    6. '_v' → logprob: -9.773825645446777
    7. 'v' → logprob: -9.898825645446777
    8. '_face' → logprob: -10.148825645446777
    9. 'Vs' → logprob: -10.273825645446777
    10. '(face' → logprob: -11.273825645446777

Token 3240: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.142829030752182
    2. '=' → logprob: -2.017828941345215
    3. ')' → logprob: -10.017828941345215
    4. '   ' → logprob: -10.392828941345215
    5. '_sorted' → logprob: -11.642828941345215
    6. '_face' → logprob: -11.767828941345215
    7. '=[' → logprob: -12.017828941345215
    8. '           ' → logprob: -12.017828941345215
    9. 's' → logprob: -12.142828941345215
    10. '       ' → logprob: -12.267828941345215

Token 3241: ' sorted' (ID: 20099)
  Prédit: 'sorted'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sorted' → logprob: -0.08905910700559616
    2. 'list' → logprob: -3.3390591144561768
    3. 'face' → logprob: -4.339058876037598
    4. '['' → logprob: -4.464058876037598
    5. 'tuple' → logprob: -4.464058876037598
    6. '('' → logprob: -4.714058876037598
    7. '[' → logprob: -6.214058876037598
    8. '(sorted' → logprob: -6.714058876037598
    9. '(face' → logprob: -7.214058876037598
    10. '(f' → logprob: -9.089058876037598

Token 3242: '(face' (ID: 127535)
  Prédit: '(face'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(face' → logprob: -0.3884502947330475
    2. 'face' → logprob: -1.138450264930725
    3. 'list' → logprob: -6.8884501457214355
    4. '(list' → logprob: -7.5134501457214355
    5. '(f' → logprob: -12.888450622558594
    6. '([' → logprob: -13.388450622558594
    7. '(' → logprob: -13.388450622558594
    8. '((' → logprob: -13.513450622558594
    9. '_face' → logprob: -13.513450622558594
    10. '```' → logprob: -14.513450622558594

Token 3243: '.v' (ID: 5520)
  Prédit: '.v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.v' → logprob: -0.0003864630125463009
    2. 'vs' → logprob: -9.125386238098145
    3. '.face' → logprob: -9.125386238098145
    4. '(face' → logprob: -9.125386238098145
    5. '(v' → logprob: -10.125386238098145
    6. '(' → logprob: -12.250386238098145
    7. '(f' → logprob: -13.125386238098145
    8. '.f' → logprob: -13.250386238098145
    9. '(.' → logprob: -13.250386238098145
    10. '().' → logprob: -13.625386238098145

Token 3244: 's' (ID: 82)
  Prédit: 's'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.0001475220051361248
    2. '
' → logprob: -9.375147819519043
    3. '   ' → logprob: -11.500147819519043
    4. '.s' → logprob: -12.250147819519043
    5. 'vs' → logprob: -12.250147819519043
    6. '#' → logprob: -12.375147819519043
    7. '1' → logprob: -12.750147819519043
    8. '``' → logprob: -13.000147819519043
    9. ')
' → logprob: -13.062647819519043
    10. '```' → logprob: -13.125147819519043

Token 3245: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.007794470991939306
    2. ')' → logprob: -5.007794380187988
    3. '       ' → logprob: -7.132794380187988
    4. '())
' → logprob: -8.632794380187988
    5. ')

' → logprob: -10.882794380187988
    6. '   ' → logprob: -10.882794380187988
    7. '           ' → logprob: -11.132794380187988
    8. ' )
' → logprob: -11.757794380187988
    9. ')[' → logprob: -11.757794380187988
    10. ')
' → logprob: -11.882794380187988

Token 3246: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.5400422215461731
    2. 'v' → logprob: -0.9150422215461731
    3. 'if' → logprob: -4.790042400360107
    4. 'vertex' → logprob: -6.415042400360107
    5. '#' → logprob: -6.665042400360107
    6. 'u' → logprob: -6.915042400360107
    7. 'vertices' → logprob: -6.915042400360107
    8. 'A' → logprob: -7.415042400360107
    9. '       ' → logprob: -7.665042400360107
    10. '
' → logprob: -7.915042400360107

Token 3247: ' #' (ID: 1069)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.24881397187709808
    2. 'if' → logprob: -2.1238138675689697
    3. '           ' → logprob: -2.7488138675689697
    4. 'u' → logprob: -4.498814105987549
    5. '#' (adapté à ' #') → logprob: -4.623814105987549
    6. 'vertex' → logprob: -4.998814105987549
    7. 'pos' → logprob: -6.123814105987549
    8. 'idx' → logprob: -6.623814105987549
    9. 'vertices' → logprob: -6.873814105987549
    10. '       ' → logprob: -7.123814105987549

Token 3248: ' The' (ID: 623)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.8144831657409668
    2. 'v' → logprob: -1.3144831657409668
    3. '#' → logprob: -1.5644831657409668
    4. 'pos' → logprob: -4.189483165740967
    5. 'idx' → logprob: -4.439483165740967
    6. 'vertex' → logprob: -4.439483165740967
    7. 'A' → logprob: -5.189483165740967
    8. 'vs' → logprob: -5.689483165740967
    9. 'edge' → logprob: -5.689483165740967
    10. 'index' → logprob: -5.689483165740967

Token 3249: ' base' (ID: 3611)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -1.1376633644104004
    2. 'v' → logprob: -2.1376633644104004
    3. 'A' → logprob: -2.3876633644104004
    4. 'other' → logprob: -2.5126633644104004
    5. 'B' → logprob: -2.6376633644104004
    6. 'positions' → logprob: -2.6376633644104004
    7. 'first' → logprob: -3.2626633644104004
    8. 'vertex' → logprob: -3.6376633644104004
    9. 'def' → logprob: -3.7626633644104004
    10. 'coords' → logprob: -3.7626633644104004

Token 3250: ' origin' (ID: 12839)
  Prédit: 'u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'u' → logprob: -0.29123637080192566
    2. '_u' → logprob: -2.291236400604248
    3. 'A' → logprob: -3.541236400604248
    4. '#' → logprob: -3.916236400604248
    5. 'vectors' → logprob: -3.916236400604248
    6. ' is' → logprob: -4.291236400604248
    7. 'vector' → logprob: -4.666236400604248
    8. ' vectors' → logprob: -4.916236400604248
    9. 'point' → logprob: -5.291236400604248
    10. 'is' → logprob: -5.291236400604248

Token 3251: ' is' (ID: 382)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5890679955482483
    2. ' =' → logprob: -1.5890679359436035
    3. 'is' → logprob: -2.0890679359436035
    4. ' is' → logprob: -2.5890679359436035
    5. ',' → logprob: -3.7140679359436035
    6. '```' → logprob: -5.8390679359436035
    7. 'v' → logprob: -6.5890679359436035
    8. '
' → logprob: -6.7140679359436035
    9. 'point' → logprob: -6.8390679359436035
    10. 'coords' → logprob: -6.9640679359436035

Token 3252: ' sorted' (ID: 20099)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.24263916909694672
    2. 'sorted' → logprob: -1.742639183998108
    3. 'tet' → logprob: -3.2426390647888184
    4. ' self' → logprob: -8.367639541625977
    5. 'tuple' → logprob: -8.367639541625977
    6. '(sorted' → logprob: -8.367639541625977
    7. 't' → logprob: -9.117639541625977
    8. '(self' → logprob: -9.117639541625977
    9. ' tetra' → logprob: -9.742639541625977
    10. ' sorted' → logprob: -10.117639541625977

Token 3253: '_vs' (ID: 106451)
  Prédit: '_vs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_vs' → logprob: -0.035591330379247665
    2. 'vs' → logprob: -3.4105913639068604
    3. '_vertices' → logprob: -7.035591125488281
    4. 'vertices' → logprob: -8.035591125488281
    5. 'face' → logprob: -9.035591125488281
    6. '(face' → logprob: -9.160591125488281
    7. 'vertex' → logprob: -9.410591125488281
    8. 'Vs' → logprob: -9.785591125488281
    9. '_v' → logprob: -9.910591125488281
    10. '=' → logprob: -9.910591125488281

Token 3254: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.010103817097842693
    2. '0' → logprob: -5.135103702545166
    3. '=' → logprob: -7.135103702545166
    4. '```' → logprob: -7.260103702545166
    5. ' =' → logprob: -7.760103702545166
    6. '1' → logprob: -7.885103702545166
    7. '(' → logprob: -8.260104179382324
    8. '=[' → logprob: -8.635104179382324
    9. '_index' → logprob: -8.635104179382324
    10. 'index' → logprob: -8.635104179382324

Token 3255: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.021429896354675293
    2. '1' → logprob: -3.896430015563965
    3. '2' → logprob: -7.396430015563965
    4. '[' → logprob: -9.021430015563965
    5. '```' → logprob: -9.271430015563965
    6. '   ' → logprob: -11.271430015563965
    7. ' ' → logprob: -11.771430015563965
    8. '-' → logprob: -12.021430015563965
    9. '
' → logprob: -12.146430015563965
    10. '#' → logprob: -12.271430015563965

Token 3256: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.6547918319702148
    2. ']
' → logprob: -0.7797918319702148
    3. '],' → logprob: -4.279791831970215
    4. '])' → logprob: -5.154791831970215
    5. '])
' → logprob: -6.904791831970215
    6. '[' → logprob: -8.154791831970215
    7. '][' → logprob: -8.779791831970215
    8. ']==' → logprob: -8.904791831970215
    9. ']

' → logprob: -9.279791831970215
    10. '```' → logprob: -9.654791831970215

Token 3257: '           ' (ID: 352)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.7357401847839355
    2. '
' → logprob: -1.4857401847839355
    3. ',' → logprob: -2.4857401847839355
    4. '```' → logprob: -2.9857401847839355
    5. '``' → logprob: -3.1107401847839355
    6. '[' → logprob: -3.8607401847839355
    7. ':' → logprob: -4.1107401847839355
    8. ' and' → logprob: -4.3607401847839355
    9. ' ' → logprob: -5.2357401847839355
    10. 'v' → logprob: -5.2357401847839355

Token 3258: ' #' (ID: 1069)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.4573271870613098
    2. 'if' → logprob: -1.207327127456665
    3. 'A' → logprob: -4.207327365875244
    4. 'first' → logprob: -4.207327365875244
    5. 'second' → logprob: -4.832327365875244
    6. 'u' → logprob: -4.832327365875244
    7. '#' (adapté à ' #') → logprob: -5.207327365875244
    8. 'base' → logprob: -5.707327365875244
    9. 'other' → logprob: -5.832327365875244
    10. 'idx' → logprob: -6.082327365875244

Token 3259: ' We' (ID: 1416)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.6102461814880371
    2. 'v' → logprob: -1.235246181488037
    3. '#' → logprob: -2.485246181488037
    4. '           ' → logprob: -3.860246181488037
    5. 'first' → logprob: -3.860246181488037
    6. '   ' → logprob: -4.735246181488037
    7. 'second' → logprob: -4.860246181488037
    8. 'A' → logprob: -4.985246181488037
    9. 'idx' → logprob: -5.610246181488037
    10. 'pos' → logprob: -5.985246181488037

Token 3260: ' know' (ID: 1761)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.8927851319313049
    2. 'continue' → logprob: -1.8927850723266602
    3. '```' → logprob: -2.39278507232666
    4. 'need' → logprob: -2.76778507232666
    5. 'v' → logprob: -2.76778507232666
    6. 'vs' → logprob: -3.64278507232666
    7. 'def' → logprob: -4.01778507232666
    8. 'have' → logprob: -4.01778507232666
    9. ' #' → logprob: -4.14278507232666
    10. 'get' → logprob: -4.26778507232666

Token 3261: ' that' (ID: 484)
  Prédit: 'the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'the' → logprob: -1.0632858276367188
    2. 'that' → logprob: -1.8132858276367188
    3. 'first' → logprob: -2.5632858276367188
    4. 'sorted' → logprob: -2.5632858276367188
    5. ' that' → logprob: -2.8132858276367188
    6. 'other' → logprob: -3.0632858276367188
    7. 'second' → logprob: -3.3132858276367188
    8. '#' → logprob: -3.3132858276367188
    9. ' the' → logprob: -3.4382858276367188
    10. 'v' → logprob: -3.4382858276367188

Token 3262: ' face' (ID: 4950)
  Prédit: 'sorted'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sorted' → logprob: -1.3603371381759644
    2. 'if' → logprob: -1.6103371381759644
    3. '#' → logprob: -1.9853371381759644
    4. 'first' → logprob: -2.235337257385254
    5. 'v' → logprob: -2.985337257385254
    6. '           ' → logprob: -3.110337257385254
    7. 'second' → logprob: -3.360337257385254
    8. 'u' → logprob: -3.735337257385254
    9. 'pos' → logprob: -3.735337257385254
    10. 'other' → logprob: -3.860337257385254

Token 3263: '.v' (ID: 5520)
  Prédit: '_vertices'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_vertices' → logprob: -0.30095621943473816
    2. '_vs' → logprob: -1.6759562492370605
    3. '_coords' → logprob: -3.6759562492370605
    4. '_v' → logprob: -4.3009562492370605
    5. '_vertex' → logprob: -5.0509562492370605
    6. '   ' → logprob: -5.4259562492370605
    7. 'vs' → logprob: -5.5509562492370605
    8. '_u' → logprob: -5.8009562492370605
    9. 'vertices' → logprob: -6.1759562492370605
    10. '_' → logprob: -6.1759562492370605

Token 3264: 's' (ID: 82)
  Prédit: 's'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.00028088156250305474
    2. '
' → logprob: -9.37528133392334
    3. '```' → logprob: -10.00028133392334
    4. 'vs' → logprob: -10.50028133392334
    5. '``' → logprob: -11.25028133392334
    6. '   ' → logprob: -11.75028133392334
    7. '`s' → logprob: -11.81278133392334
    8. ''s' → logprob: -11.87528133392334
    9. 'с' → logprob: -11.87528133392334
    10. '.s' → logprob: -12.25028133392334

Token 3265: ' contains' (ID: 8895)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '==' → logprob: -0.9880563020706177
    2. 'contains' → logprob: -2.363056182861328
    3. 'are' → logprob: -2.613056182861328
    4. '=' → logprob: -2.738056182861328
    5. 'is' → logprob: -2.738056182861328
    6. 'includes' → logprob: -2.988056182861328
    7. ' are' → logprob: -2.988056182861328
    8. '```' → logprob: -2.988056182861328
    9. ' ==' → logprob: -3.238056182861328
    10. '[' → logprob: -3.363056182861328

Token 3266: ' A' (ID: 355)
  Prédit: 'Vertex'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Vertex' → logprob: -0.11728598177433014
    2. 'self' → logprob: -3.367285966873169
    3. '(Vertex' → logprob: -3.492285966873169
    4. 'A' → logprob: -4.242286205291748
    5. '('' → logprob: -4.867286205291748
    6. 'face' → logprob: -5.117286205291748
    7. '(' → logprob: -5.492286205291748
    8. '(self' → logprob: -5.492286205291748
    9. '(face' → logprob: -6.367286205291748
    10. 'sorted' → logprob: -6.492286205291748

Token 3267: ' always' (ID: 3324)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.8695575594902039
    2. ' if' → logprob: -1.8695576190948486
    3. ' (' → logprob: -1.8695576190948486
    4. '
' → logprob: -2.7445576190948486
    5. ' and' → logprob: -2.9945576190948486
    6. 'if' → logprob: -3.3695576190948486
    7. '(' → logprob: -3.6195576190948486
    8. ':' → logprob: -4.2445573806762695
    9. ' =' → logprob: -4.2445573806762695
    10. 'and' → logprob: -4.7445573806762695

Token 3268: ' except' (ID: 6384)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -1.3744310140609741
    2. ' (' → logprob: -1.3744310140609741
    3. ' if' → logprob: -1.6244310140609741
    4. ',' → logprob: -1.6244310140609741
    5. '   ' → logprob: -4.499431133270264
    6. '(' → logprob: -4.499431133270264
    7. ' and' → logprob: -4.624431133270264
    8. '           ' → logprob: -4.749431133270264
    9. '       ' → logprob: -4.874431133270264
    10. ' since' → logprob: -4.874431133270264

Token 3269: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.9528996348381042
    2. 'first' → logprob: -1.702899694442749
    3. 'when' → logprob: -1.952899694442749
    4. 'Vertex' → logprob: -2.577899694442749
    5. 'self' → logprob: -2.827899694442749
    6. 'if' → logprob: -3.702899694442749
    7. 'the' → logprob: -3.827899694442749
    8. 'in' → logprob: -3.952899694442749
    9. 'face' → logprob: -4.32789945602417
    10. '#' → logprob: -4.32789945602417

Token 3270: ' the' (ID: 290)
  Prédit: 'Vertex'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Vertex' → logprob: -0.682720422744751
    2. 'the' → logprob: -1.932720422744751
    3. 'first' → logprob: -2.182720422744751
    4. 'self' → logprob: -3.057720422744751
    5. 'Edge' → logprob: -3.057720422744751
    6. 'face' → logprob: -3.432720422744751
    7. 'some' → logprob: -3.557720422744751
    8. 'edge' → logprob: -4.057720184326172
    9. '#' → logprob: -4.182720184326172
    10. 'other' → logprob: -4.307720184326172

Token 3271: ' last' (ID: 2174)
  Prédit: 'first'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'first' → logprob: -0.2518010139465332
    2. 'initial' → logprob: -1.8768010139465332
    3. 'last' → logprob: -4.126801013946533
    4. 'starting' → logprob: -4.626801013946533
    5. 'case' → logprob: -4.751801013946533
    6. 'worm' → logprob: -4.876801013946533
    7. 'other' → logprob: -5.251801013946533
    8. ' initial' → logprob: -5.751801013946533
    9. ' first' → logprob: -5.876801013946533
    10. 'rest' → logprob: -6.376801013946533

Token 3272: ' face' (ID: 4950)
  Prédit: 'two'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'two' → logprob: -1.014585018157959
    2. 'vertex' → logprob: -1.139585018157959
    3. 'edge' → logprob: -3.014585018157959
    4. 'one' → logprob: -3.014585018157959
    5. 'face' → logprob: -3.389585018157959
    6. '#' → logprob: -4.014585018157959
    7. 'sorted' → logprob: -4.139585018157959
    8. 's' → logprob: -4.389585018157959
    9. 'element' → logprob: -4.514585018157959
    10. ' two' → logprob: -4.639585018157959

Token 3273: '
' (ID: 198)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.4801537990570068
    2. ' (' → logprob: -1.6051537990570068
    3. ' if' → logprob: -1.7301537990570068
    4. ' and' → logprob: -2.105153799057007
    5. ':' → logprob: -3.480153799057007
    6. '
' → logprob: -3.605153799057007
    7. '.' → logprob: -3.605153799057007
    8. '(' → logprob: -3.730153799057007
    9. '   ' → logprob: -3.730153799057007
    10. '#' → logprob: -4.480154037475586

Token 3274: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -1.1322952508926392
    2. ' if' → logprob: -1.1322952508926392
    3. '
' → logprob: -2.2572951316833496
    4. '       ' → logprob: -2.2572951316833496
    5. 'if' → logprob: -3.5072951316833496
    6. ',' → logprob: -3.7572951316833496
    7. ' (' → logprob: -3.8822951316833496
    8. '#' → logprob: -4.50729513168335
    9. '```' → logprob: -4.50729513168335
    10. ' and' → logprob: -4.88229513168335

Token 3275: ' #' (ID: 1069)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.038902971893548965
    2. '       ' → logprob: -4.538902759552002
    3. '#' (adapté à ' #') → logprob: -4.788902759552002
    4. '           ' → logprob: -4.913902759552002
    5. 'v' → logprob: -5.413902759552002
    6. '   ' → logprob: -6.038902759552002
    7. 'first' → logprob: -6.163902759552002
    8. 'pos' → logprob: -7.663902759552002
    9. '```' → logprob: -7.788902759552002
    10. 'A' → logprob: -7.913902759552002

Token 3276: ' For' (ID: 2214)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.12588240206241608
    2. '#' → logprob: -2.375882387161255
    3. '   ' → logprob: -4.500882625579834
    4. 'v' → logprob: -5.250882625579834
    5. ' if' → logprob: -6.000882625579834
    6. 'B' → logprob: -6.875882625579834
    7. 'If' → logprob: -7.125882625579834
    8. 'first' → logprob: -7.125882625579834
    9. 'for' → logprob: -7.125882625579834
    10. '
' → logprob: -7.625882625579834

Token 3277: ' faces' (ID: 22060)
  Prédit: 'face'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'face' → logprob: -0.35563260316848755
    2. 'Vertex' → logprob: -2.6056325435638428
    3. 'v' → logprob: -2.8556325435638428
    4. 'the' → logprob: -3.1056325435638428
    5. 'first' → logprob: -3.4806325435638428
    6. 'self' → logprob: -4.105632781982422
    7. 'edge' → logprob: -4.105632781982422
    8. 'sorted' → logprob: -4.855632781982422
    9. ' face' → logprob: -4.980632781982422
    10. 'vertex' → logprob: -5.230632781982422

Token 3278: ' containing' (ID: 15683)
  Prédit: 'with'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'with' → logprob: -1.9835920333862305
    2. '   ' → logprob: -2.1085920333862305
    3. ' that' → logprob: -2.1085920333862305
    4. '=' → logprob: -2.4835920333862305
    5. 'that' → logprob: -2.9835920333862305
    6. ' =' → logprob: -3.1085920333862305
    7. ' with' → logprob: -3.1085920333862305
    8. 'cont' → logprob: -3.1085920333862305
    9. ' not' → logprob: -3.2335920333862305
    10. ' containing' → logprob: -3.3585920333862305

Token 3279: ' A' (ID: 355)
  Prédit: 'Vertex'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Vertex' → logprob: -0.027387363836169243
    2. 'A' → logprob: -3.7773873805999756
    3. ' Vertex' → logprob: -5.7773871421813965
    4. ''' → logprob: -8.152387619018555
    5. ''A' → logprob: -8.277387619018555
    6. '(Vertex' → logprob: -8.652387619018555
    7. '
' → logprob: -9.402387619018555
    8. 'self' → logprob: -9.527387619018555
    9. '#' → logprob: -9.902387619018555
    10. '   ' → logprob: -10.777387619018555

Token 3280: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.0919759273529053
    2. ':' → logprob: -1.4669759273529053
    3. ':
' → logprob: -1.5919759273529053
    4. ' and' → logprob: -3.0919759273529053
    5. ' (' → logprob: -3.3419759273529053
    6. ' if' → logprob: -3.5919759273529053
    7. 'and' → logprob: -3.9669759273529053
    8. 'if' → logprob: -4.091976165771484
    9. '   ' → logprob: -4.341976165771484
    10. '
' → logprob: -4.341976165771484

Token 3281: ' origin' (ID: 12839)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.7616819739341736
    2. ' if' → logprob: -1.1366820335388184
    3. '#' → logprob: -2.3866820335388184
    4. '           ' → logprob: -3.1366820335388184
    5. 'pos' → logprob: -3.1366820335388184
    6. 'the' → logprob: -4.761682033538818
    7. ' the' → logprob: -4.761682033538818
    8. '       ' → logprob: -6.136682033538818
    9. 'v' → logprob: -6.136682033538818
    10. ' #' → logprob: -6.261682033538818

Token 3282: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6341378688812256
    2. ' =' → logprob: -1.0091378688812256
    3. ' is' → logprob: -3.0091378688812256
    4. 'is' → logprob: -4.009138107299805
    5. ',' → logprob: -4.634138107299805
    6. ')' → logprob: -4.634138107299805
    7. '==' → logprob: -5.009138107299805
    8. ' ==' → logprob: -5.384138107299805
    9. '=self' → logprob: -6.634138107299805
    10. '),' → logprob: -7.134138107299805

Token 3283: ' A' (ID: 355)
  Prédit: 'sorted'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sorted' → logprob: -1.1576998233795166
    2. 'face' → logprob: -1.2826998233795166
    3. 'self' → logprob: -1.6576998233795166
    4. 'Vertex' → logprob: -2.5326998233795166
    5. 'tet' → logprob: -3.1576998233795166
    6. '(' → logprob: -3.6576998233795166
    7. '(sorted' → logprob: -4.1576995849609375
    8. '(face' → logprob: -4.5326995849609375
    9. 'tuple' → logprob: -4.6576995849609375
    10. '(self' → logprob: -4.6576995849609375

Token 3284: ',' (ID: 11)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.3940108120441437
    2. '
' → logprob: -1.3940107822418213
    3. ',' → logprob: -3.3940107822418213
    4. ' if' → logprob: -4.2690110206604
    5. 'if' → logprob: -4.8940110206604
    6. '       ' → logprob: -5.0190110206604
    7. ' (' → logprob: -5.8940110206604
    8. '#' → logprob: -5.8940110206604
    9. 'v' → logprob: -6.2690110206604
    10. '            
' → logprob: -6.2690110206604

Token 3285: ' u' (ID: 337)
  Prédit: 'u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'u' → logprob: -0.5910748243331909
    2. '#' → logprob: -1.966074824333191
    3. 'v' → logprob: -2.5910749435424805
    4. '           ' → logprob: -2.8410749435424805
    5. 'but' → logprob: -3.4660749435424805
    6. 'sorted' → logprob: -3.5910749435424805
    7. 'and' → logprob: -3.7160749435424805
    8. '       ' → logprob: -3.8410749435424805
    9. 'if' → logprob: -4.5910749435424805
    10. '   ' → logprob: -4.5910749435424805

Token 3286: ' points' (ID: 5571)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.39588963985443115
    2. '=' → logprob: -1.3958896398544312
    3. '_coord' → logprob: -3.6458897590637207
    4. ',' → logprob: -3.7708897590637207
    5. '_raw' → logprob: -4.020889759063721
    6. '_coords' → logprob: -6.270889759063721
    7. ')' → logprob: -6.520889759063721
    8. '=(' → logprob: -6.520889759063721
    9. '3' → logprob: -6.895889759063721
    10. '_vec' → logprob: -7.020889759063721

Token 3287: ' toward' (ID: 15256)
  Prédit: 'tow'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tow' → logprob: -0.24162575602531433
    2. 'to' → logprob: -2.1166257858276367
    3. 'from' → logprob: -2.3666257858276367
    4. 'along' → logprob: -8.991625785827637
    5. ' towards' → logprob: -9.116625785827637
    6. ' toward' → logprob: -9.116625785827637
    7. ' to' → logprob: -10.491625785827637
    8. ' from' → logprob: -10.991625785827637
    9. '   ' → logprob: -11.116625785827637
    10. 'at' → logprob: -12.616625785827637

Token 3288: ' second' (ID: 3099)
  Prédit: 'sorted'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sorted' → logprob: -0.021006368100643158
    2. 'v' → logprob: -4.2710065841674805
    3. ' sorted' → logprob: -6.6460065841674805
    4. '(sorted' → logprob: -6.6460065841674805
    5. 'u' → logprob: -7.0210065841674805
    6. '   ' → logprob: -7.1460065841674805
    7. 'Vertex' → logprob: -7.6460065841674805
    8. '           ' → logprob: -8.02100658416748
    9. 'X' → logprob: -8.14600658416748
    10. 'the' → logprob: -8.39600658416748

Token 3289: ' vertex' (ID: 25363)
  Prédit: 'vertex'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'vertex' → logprob: -0.38787707686424255
    2. 'sorted' → logprob: -1.887877106666565
    3. '_vs' → logprob: -1.887877106666565
    4. ' vertex' → logprob: -5.137876987457275
    5. 'vs' → logprob: -5.637876987457275
    6. '_sorted' → logprob: -5.887876987457275
    7. '_vertex' → logprob: -6.512876987457275
    8. 'token' → logprob: -6.637876987457275
    9. 'and' → logprob: -7.012876987457275
    10. ' vs' → logprob: -7.762876987457275

Token 3290: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.5603146553039551
    2. ' (' → logprob: -2.310314655303955
    3. ' =' → logprob: -2.310314655303955
    4. '(' → logprob: -3.310314655303955
    5. '(sorted' → logprob: -3.435314655303955
    6. '           ' → logprob: -3.560314655303955
    7. '```' → logprob: -3.935314655303955
    8. '   ' → logprob: -4.060314655303955
    9. '#' → logprob: -4.310314655303955
    10. '=' → logprob: -4.435314655303955

Token 3291: ' v' (ID: 323)
  Prédit: ' v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' v' → logprob: -0.5306034684181213
    2. 'v' → logprob: -0.9056034684181213
    3. '#' → logprob: -5.905603408813477
    4. '           ' → logprob: -6.030603408813477
    5. 'and' → logprob: -7.405603408813477
    6. ' #' → logprob: -7.530603408813477
    7. ' and' → logprob: -8.155603408813477
    8. '               ' → logprob: -8.780603408813477
    9. '   ' → logprob: -9.405603408813477
    10. ' u' → logprob: -9.655603408813477

Token 3292: ' points' (ID: 5571)
  Prédit: 'points'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'points' → logprob: -0.524929940700531
    2. '=' → logprob: -1.1499300003051758
    3. ' =' → logprob: -3.524930000305176
    4. '_points' → logprob: -3.649930000305176
    5. ' points' → logprob: -4.149930000305176
    6. ',' → logprob: -5.149930000305176
    7. '=(' → logprob: -6.149930000305176
    8. ')' → logprob: -6.524930000305176
    9. '(points' → logprob: -6.649930000305176
    10. '#' → logprob: -6.774930000305176

Token 3293: ' toward' (ID: 15256)
  Prédit: 'tow'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tow' → logprob: -0.014381974935531616
    2. ' toward' → logprob: -4.2643818855285645
    3. '(' → logprob: -9.139382362365723
    4. ' towards' → logprob: -9.389382362365723
    5. 'to' → logprob: -11.264382362365723
    6. 'Tow' → logprob: -12.764382362365723
    7. '   ' → logprob: -12.889382362365723
    8. '(
' → logprob: -14.139382362365723
    9. '```' → logprob: -14.264382362365723
    10. ' ' → logprob: -14.389382362365723

Token 3294: ' third' (ID: 6914)
  Prédit: 'third'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'third' → logprob: -0.000766148732509464
    2. ' third' → logprob: -7.375766277313232
    3. 'the' → logprob: -9.125765800476074
    4. '(' → logprob: -11.375765800476074
    5. 'sorted' → logprob: -11.500765800476074
    6. 'second' → logprob: -12.625765800476074
    7. '(sorted' → logprob: -13.375765800476074
    8. '(th' → logprob: -13.500765800476074
    9. 'last' → logprob: -14.000765800476074
    10. '   ' → logprob: -14.625765800476074

Token 3295: ' vertex' (ID: 25363)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.3450182676315308
    2. 'vertex' → logprob: -1.5950182676315308
    3. '#' → logprob: -1.8450182676315308
    4. '
' → logprob: -1.8450182676315308
    5. '```' → logprob: -3.0950183868408203
    6. ',' → logprob: -3.4700183868408203
    7. ' ' → logprob: -3.9700183868408203
    8. ' (' → logprob: -4.34501838684082
    9. '"""
' → logprob: -4.47001838684082
    10. 'face' → logprob: -4.72001838684082

Token 3296: ' orth' (ID: 35656)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.041768256574869156
    2. '
' → logprob: -3.9167683124542236
    3. '       ' → logprob: -5.4167680740356445
    4. '```' → logprob: -5.4167680740356445
    5. 'v' → logprob: -5.5417680740356445
    6. '#' → logprob: -6.0417680740356445
    7. ',' → logprob: -6.6667680740356445
    8. '   ' → logprob: -7.2917680740356445
    9. '            
' → logprob: -7.2917680740356445
    10. '``' → logprob: -7.5417680740356445

Token 3297: 'ogonal' (ID: 127861)
  Prédit: 'ogonal'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ogonal' → logprob: -0.0006635877070948482
    2. 'on' → logprob: -7.625663757324219
    3. 'ogon' → logprob: -9.750663757324219
    4. 'og' → logprob: -10.750663757324219
    5. 'agonal' → logprob: -10.875663757324219
    6. '
' → logprob: -11.125663757324219
    7. 'g' → logprob: -11.375663757324219
    8. '```' → logprob: -11.750663757324219
    9. '   ' → logprob: -11.875663757324219
    10. 'normal' → logprob: -12.375663757324219

Token 3298: 'ized' (ID: 2110)
  Prédit: ' to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' to' → logprob: -1.3299189805984497
    2. 'vector' → logprob: -1.8299189805984497
    3. 'to' → logprob: -2.07991886138916
    4. '(' → logprob: -2.32991886138916
    5. ')' → logprob: -2.57991886138916
    6. ' vector' → logprob: -2.82991886138916
    7. ')
' → logprob: -3.07991886138916
    8. ',' → logprob: -3.32991886138916
    9. '
' → logprob: -3.82991886138916
    10. ' (' → logprob: -4.07991886138916

Token 3299: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.07878445833921432
    2. '
' → logprob: -3.578784465789795
    3. ',' → logprob: -4.078784465789795
    4. '#' → logprob: -4.078784465789795
    5. ' (' → logprob: -5.828784465789795
    6. '       ' → logprob: -6.203784465789795
    7. '```' → logprob: -6.328784465789795
    8. '(' → logprob: -6.828784465789795
    9. '.' → logprob: -7.328784465789795
    10. '            
' → logprob: -7.703784465789795

Token 3300: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.09598596394062042
    2. '
' → logprob: -3.5959858894348145
    3. 'v' → logprob: -4.2209858894348145
    4. '       ' → logprob: -4.3459858894348145
    5. '#' → logprob: -4.4709858894348145
    6. '```' → logprob: -4.5959858894348145
    7. ',' → logprob: -5.5959858894348145
    8. '   ' → logprob: -6.3459858894348145
    9. '``' → logprob: -6.4709858894348145
    10. '            
' → logprob: -6.8459858894348145

Token 3301: ' #' (ID: 1069)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.6505125761032104
    2. 'if' → logprob: -1.1505125761032104
    3. 'v' → logprob: -2.0255126953125
    4. '#' (adapté à ' #') → logprob: -4.4005126953125
    5. '       ' → logprob: -4.5255126953125
    6. 'vertex' → logprob: -6.0255126953125
    7. '
' → logprob: -7.0255126953125
    8. 'elif' → logprob: -7.5255126953125
    9. ' if' → logprob: -7.6505126953125
    10. 'second' → logprob: -8.0255126953125

Token 3302: ' We' (ID: 1416)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.4695352613925934
    2. 'if' → logprob: -1.219535231590271
    3. '#' → logprob: -3.7195353507995605
    4. '       ' → logprob: -3.7195353507995605
    5. ' if' → logprob: -3.9695353507995605
    6. 'v' → logprob: -4.9695353507995605
    7. '```' → logprob: -6.3445353507995605
    8. '   ' → logprob: -7.7195353507995605
    9. 'second' → logprob: -7.8445353507995605
    10. '
' → logprob: -8.344534873962402

Token 3303: ' identify' (ID: 11410)
  Prédit: 'need'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'need' → logprob: -0.6483907699584961
    2. 'know' → logprob: -1.898390769958496
    3. '#' → logprob: -2.023390769958496
    4. 'continue' → logprob: -2.773390769958496
    5. 'have' → logprob: -3.273390769958496
    6. 'can' → logprob: -4.273390769958496
    7. 'def' → logprob: -4.398390769958496
    8. '```' → logprob: -4.398390769958496
    9. '   ' → logprob: -4.773390769958496
    10. ' need' → logprob: -4.773390769958496

Token 3304: ' B' (ID: 418)
  Prédit: 'the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'the' → logprob: -0.44312649965286255
    2. '#' → logprob: -2.6931264400482178
    3. 'which' → logprob: -2.6931264400482178
    4. 'other' → logprob: -3.0681264400482178
    5. 'second' → logprob: -3.3181264400482178
    6. 'v' → logprob: -3.9431264400482178
    7. ' the' → logprob: -4.068126678466797
    8. 'face' → logprob: -4.318126678466797
    9. 'edge' → logprob: -4.318126678466797
    10. 'def' → logprob: -4.443126678466797

Token 3305: ' and' (ID: 326)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.8810758590698242
    2. ' =' → logprob: -1.2560758590698242
    3. 'v' → logprob: -2.131075859069824
    4. '=' → logprob: -2.506075859069824
    5. '2' → logprob: -4.006075859069824
    6. 'and' → logprob: -4.006075859069824
    7. ',v' → logprob: -4.631075859069824
    8. '_vertex' → logprob: -5.006075859069824
    9. '_face' → logprob: -5.381075859069824
    10. '_coords' → logprob: -5.381075859069824

Token 3306: ' C' (ID: 363)
  Prédit: 'C'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'C' → logprob: -0.0009961293544620275
    2. ' C' → logprob: -7.125996112823486
    3. 'Y' → logprob: -9.500996589660645
    4. '   ' → logprob: -10.000996589660645
    5. 'third' → logprob: -10.125996589660645
    6. '
' → logprob: -11.500996589660645
    7. 'v' → logprob: -12.250996589660645
    8. ' ' → logprob: -12.375996589660645
    9. '  ' → logprob: -12.500996589660645
    10. 'second' → logprob: -13.250996589660645

Token 3307: ':
' (ID: 734)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.653714656829834
    2. ',' → logprob: -2.028714656829834
    3. 'v' → logprob: -2.903714656829834
    4. '=' → logprob: -2.903714656829834
    5. '   ' → logprob: -2.903714656829834
    6. '_idx' → logprob: -3.778714656829834
    7. '_sorted' → logprob: -4.028714656829834
    8. '
' → logprob: -4.153714656829834
    9. '```' → logprob: -4.278714656829834
    10. 'and' → logprob: -4.403714656829834

Token 3308: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.039297670125961304
    2. 'v' → logprob: -3.414297580718994
    3. 'if' → logprob: -6.789297580718994
    4. '#' → logprob: -6.914297580718994
    5. '
' → logprob: -7.164297580718994
    6. 'vertex' → logprob: -7.289297580718994
    7. '       ' → logprob: -7.789297580718994
    8. 'b' → logprob: -8.789298057556152
    9. '            
' → logprob: -8.789298057556152
    10. ' v' → logprob: -8.789298057556152

Token 3309: ' #' (ID: 1069)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.2711738049983978
    2. 'if' → logprob: -2.7711737155914307
    3. '           ' → logprob: -3.0211737155914307
    4. 'pos' → logprob: -3.2711737155914307
    5. 'vertex' → logprob: -3.7711737155914307
    6. 'idx' → logprob: -4.52117395401001
    7. 'second' → logprob: -4.52117395401001
    8. '#' (adapté à ' #') → logprob: -5.02117395401001
    9. 'vertices' → logprob: -5.27117395401001
    10. 'def' → logprob: -5.39617395401001

Token 3310: ' Get' (ID: 2942)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.5561527609825134
    2. 'if' → logprob: -1.1811528205871582
    3. '#' → logprob: -3.056152820587158
    4. '           ' → logprob: -3.431152820587158
    5. '   ' → logprob: -4.931152820587158
    6. 'second' → logprob: -4.931152820587158
    7. '       ' → logprob: -5.306152820587158
    8. 'pos' → logprob: -5.431152820587158
    9. 'idx' → logprob: -5.681152820587158
    10. 'def' → logprob: -5.681152820587158

Token 3311: ' the' (ID: 290)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'v' → logprob: -1.6561110019683838
    2. 'second' → logprob: -1.6561110019683838
    3. 'other' → logprob: -2.656111001968384
    4. '#' → logprob: -2.656111001968384
    5. 'vertex' → logprob: -2.906111001968384
    6. 'coords' → logprob: -2.906111001968384
    7. 'the' → logprob: -3.156111001968384
    8. 'vertices' → logprob: -3.281111001968384
    9. 'pos' → logprob: -3.531111001968384
    10. 'vs' → logprob: -3.531111001968384

Token 3312: ' ' (ID: 220)
  Prédit: 'other'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'other' → logprob: -1.6731812953948975
    2. 'second' → logprob: -1.6731812953948975
    3. 'coords' → logprob: -1.6731812953948975
    4. 'positions' → logprob: -2.2981812953948975
    5. 'coordinates' → logprob: -2.6731812953948975
    6. 'remaining' → logprob: -3.1731812953948975
    7. 'vertices' → logprob: -3.2981812953948975
    8. '#' → logprob: -3.2981812953948975
    9. 'u' → logprob: -3.7981812953948975
    10. 'vertex' → logprob: -3.9231812953948975

Token 3313: '2' (ID: 17)
  Prédit: 'second'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'second' → logprob: -1.458827257156372
    2. 'u' → logprob: -2.083827257156372
    3. 'v' → logprob: -2.333827257156372
    4. '#' → logprob: -2.458827257156372
    5. 'coords' → logprob: -2.458827257156372
    6. 'other' → logprob: -2.708827257156372
    7. 'positions' → logprob: -2.833827257156372
    8. 'vertices' → logprob: -2.958827257156372
    9. 'face' → logprob: -3.833827257156372
    10. 'vs' → logprob: -4.083827018737793

Token 3314: ' other' (ID: 1273)
  Prédit: 'nd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'nd' → logprob: -0.08777172863483429
    2. 'd' → logprob: -2.9627716541290283
    3. 'other' → logprob: -4.712771892547607
    4. 'second' → logprob: -5.337771892547607
    5. '0' → logprob: -5.462771892547607
    6. '#' → logprob: -5.962771892547607
    7. 'first' → logprob: -6.087771892547607
    8. 'v' → logprob: -6.587771892547607
    9. 'def' → logprob: -7.212771892547607
    10. 'sorted' → logprob: -7.337771892547607

Token 3315: ' vertices' (ID: 38360)
  Prédit: 'vertices'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'vertices' → logprob: -0.2812298834323883
    2. 'tokens' → logprob: -2.9062299728393555
    3. ' vertices' → logprob: -3.1562299728393555
    4. 'v' → logprob: -3.7812299728393555
    5. 'vs' → logprob: -3.7812299728393555
    6. '_vertices' → logprob: -4.1562299728393555
    7. 'vertex' → logprob: -4.5312299728393555
    8. '(' → logprob: -4.6562299728393555
    9. '
' → logprob: -4.9062299728393555
    10. '(
' → logprob: -5.2812299728393555

Token 3316: ' in' (ID: 306)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.6842615604400635
    2. 'v' → logprob: -2.1842615604400635
    3. '```' → logprob: -2.3092615604400635
    4. ',' → logprob: -2.8092615604400635
    5. '``' → logprob: -3.1842615604400635
    6. ' (' → logprob: -3.4342615604400635
    7. '(' → logprob: -3.5592615604400635
    8. 's' → logprob: -4.059261322021484
    9. '=' → logprob: -4.184261322021484
    10. '(v' → logprob: -4.309261322021484

Token 3317: ' face' (ID: 4950)
  Prédit: 'face'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'face' → logprob: -0.0021403860300779343
    2. 'sorted' → logprob: -7.002140522003174
    3. 'v' → logprob: -7.627140522003174
    4. '2' → logprob: -8.502140045166016
    5. '[' → logprob: -9.002140045166016
    6. 'the' → logprob: -9.252140045166016
    7. 'list' → logprob: -10.127140045166016
    8. '(face' → logprob: -10.377140045166016
    9. '#' → logprob: -10.627140045166016
    10. 'tuple' → logprob: -10.627140045166016

Token 3318: ' besides' (ID: 43595)
  Prédit: 'other'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'other' → logprob: -1.427253007888794
    2. 'v' → logprob: -1.927253007888794
    3. '           ' → logprob: -2.052253007888794
    4. 'vs' → logprob: -2.552253007888794
    5. '(v' → logprob: -2.802253007888794
    6. ' =' → logprob: -2.802253007888794
    7. ',' → logprob: -3.052253007888794
    8. '(other' → logprob: -3.052253007888794
    9. '=' → logprob: -3.677253007888794
    10. '2' → logprob: -4.052252769470215

Token 3319: ' origin' (ID: 12839)
  Prédit: 'face'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'face' → logprob: -0.4571533799171448
    2. 'sorted' → logprob: -1.3321533203125
    3. 'origin' → logprob: -2.4571533203125
    4. 'A' → logprob: -4.9571533203125
    5. '(sorted' → logprob: -5.7071533203125
    6. '(face' → logprob: -6.0821533203125
    7. ''' → logprob: -6.9571533203125
    8. '(' → logprob: -7.2071533203125
    9. '(origin' → logprob: -7.2071533203125
    10. 'Vertex' → logprob: -7.9571533203125

Token 3320: ':
' (ID: 734)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.4943236708641052
    2. 'v' → logprob: -1.86932373046875
    3. ' =' → logprob: -1.99432373046875
    4. '(v' → logprob: -4.24432373046875
    5. 'other' → logprob: -4.61932373046875
    6. '=' → logprob: -4.74432373046875
    7. '[' → logprob: -4.86932373046875
    8. ',' → logprob: -4.86932373046875
    9. '(' → logprob: -5.36932373046875
    10. 'second' → logprob: -5.49432373046875

Token 3321: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.04019483923912048
    2. 'v' → logprob: -3.2901947498321533
    3. ' v' → logprob: -7.415194988250732
    4. '```' → logprob: -7.790194988250732
    5. '(v' → logprob: -8.165194511413574
    6. 'second' → logprob: -9.040194511413574
    7. '               ' → logprob: -9.040194511413574
    8. 'first' → logprob: -9.665194511413574
    9. 'x' → logprob: -10.165194511413574
    10. '(' → logprob: -10.165194511413574

Token 3322: ' other' (ID: 1273)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.09402402490377426
    2. '           ' → logprob: -3.0940239429473877
    3. 'other' (adapté à ' other') → logprob: -3.8440239429473877
    4. 'second' → logprob: -4.844024181365967
    5. '[v' → logprob: -4.969024181365967
    6. '       ' → logprob: -6.969024181365967
    7. 'others' → logprob: -6.969024181365967
    8. 'idx' → logprob: -7.094024181365967
    9. ' v' → logprob: -7.344024181365967
    10. 'vertices' → logprob: -7.344024181365967

Token 3323: '_vertices' (ID: 96842)
  Prédit: '_vs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_vs' → logprob: -0.2577146589756012
    2. '_vertices' → logprob: -1.6327146291732788
    3. '1' → logprob: -4.757714748382568
    4. '_' → logprob: -4.882714748382568
    5. 'vs' → logprob: -5.257714748382568
    6. ' =' → logprob: -5.632714748382568
    7. '0' → logprob: -6.632714748382568
    8. 's' → logprob: -7.007714748382568
    9. 'vertices' → logprob: -7.132714748382568
    10. '_coords' → logprob: -7.382714748382568

Token 3324: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.25196003913879395
    2. '=' → logprob: -1.501960039138794
    3. '   ' → logprob: -11.501959800720215
    4. ':' → logprob: -12.251959800720215
    5. 's' → logprob: -12.376959800720215
    6. ' ' → logprob: -13.376959800720215
    7. '=set' → logprob: -13.751959800720215
    8. '=(' → logprob: -14.001959800720215
    9. '=[' → logprob: -14.251959800720215
    10. '_idx' → logprob: -14.251959800720215

Token 3325: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.23032550513744354
    2. '[v' → logprob: -2.60532546043396
    3. ' [' → logprob: -2.85532546043396
    4. '[s' → logprob: -4.230325698852539
    5. 'sorted' → logprob: -4.355325698852539
    6. '(sorted' → logprob: -4.355325698852539
    7. '[f' → logprob: -4.605325698852539
    8. 'tuple' → logprob: -4.730325698852539
    9. '(tuple' → logprob: -5.480325698852539
    10. ' tuple' → logprob: -5.855325698852539

Token 3326: 'v' (ID: 85)
  Prédit: 'v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.07173033058643341
    2. 'sorted' → logprob: -2.946730375289917
    3. 'self' → logprob: -4.321730136871338
    4. 'vertex' → logprob: -7.196730136871338
    5. 'Vertex' → logprob: -8.071730613708496
    6. '   ' → logprob: -8.196730613708496
    7. 'x' → logprob: -8.196730613708496
    8. 'face' → logprob: -8.571730613708496
    9. 'tet' → logprob: -8.571730613708496
    10. '(sorted' → logprob: -8.696730613708496

Token 3327: 'tx' (ID: 6874)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.10045929998159409
    2. 'for' → logprob: -2.350459337234497
    3. 'tx' → logprob: -9.475459098815918
    4. 'x' → logprob: -10.350459098815918
    5. '[' → logprob: -10.725459098815918
    6. '2' → logprob: -10.850459098815918
    7. '_' → logprob: -10.975459098815918
    8. 's' → logprob: -11.350459098815918
    9. 'v' → logprob: -11.350459098815918
    10. '3' → logprob: -11.350459098815918

Token 3328: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.2520217299461365
    2. ' for' → logprob: -1.5020217895507812
    3. 'v' → logprob: -10.127021789550781
    4. '[' → logprob: -10.752021789550781
    5. ' ' → logprob: -11.877021789550781
    6. '
' → logprob: -12.127021789550781
    7. '(v' → logprob: -12.877021789550781
    8. '   ' → logprob: -13.002021789550781
    9. 'x' → logprob: -13.252021789550781
    10. ']' → logprob: -13.752021789550781

Token 3329: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.12607283890247345
    2. 'face' → logprob: -2.251072883605957
    3. 'sorted' → logprob: -5.376072883605957
    4. 'vs' → logprob: -6.376072883605957
    5. 'vertex' → logprob: -6.626072883605957
    6. ' face' → logprob: -6.876072883605957
    7. 'x' → logprob: -7.126072883605957
    8. '(face' → logprob: -7.126072883605957
    9. 'f' → logprob: -7.501072883605957
    10. '(sorted' → logprob: -8.001072883605957

Token 3330: 'tx' (ID: 6874)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.21728941798210144
    2. ' in' → logprob: -2.342289447784424
    3. 'tx' → logprob: -2.467289447784424
    4. 'v' → logprob: -4.967289447784424
    5. 'face' → logprob: -5.967289447784424
    6. 'x' → logprob: -6.217289447784424
    7. 's' → logprob: -6.842289447784424
    8. 'f' → logprob: -7.592289447784424
    9. 'ex' → logprob: -8.592288970947266
    10. 't' → logprob: -9.342288970947266

Token 3331: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.502277135848999
    2. ' in' → logprob: -1.252277135848999
    3. 'v' → logprob: -2.252277135848999
    4. 'face' → logprob: -6.252277374267578
    5. ' v' → logprob: -7.127277374267578
    6. ' face' → logprob: -7.252277374267578
    7. 'vs' → logprob: -8.752277374267578
    8. ' ' → logprob: -10.502277374267578
    9. 'f' → logprob: -10.502277374267578
    10. ',v' → logprob: -10.877277374267578

Token 3332: ' sorted' (ID: 20099)
  Prédit: 'face'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'face' → logprob: -0.0019627707079052925
    2. 'sorted' → logprob: -6.251962661743164
    3. ' face' → logprob: -11.126962661743164
    4. '(face' → logprob: -11.251962661743164
    5. '[' → logprob: -12.626962661743164
    6. '(sorted' → logprob: -14.376962661743164
    7. 'faces' → logprob: -15.376962661743164
    8. 'list' → logprob: -15.501962661743164
    9. '   ' → logprob: -15.501962661743164
    10. 'frame' → logprob: -15.876962661743164

Token 3333: '_vs' (ID: 106451)
  Prédit: '_vs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_vs' → logprob: -0.5371306538581848
    2. 'vs' → logprob: -1.28713059425354
    3. '(face' → logprob: -2.41213059425354
    4. 'face' → logprob: -3.03713059425354
    5. 'Vs' → logprob: -7.037130832672119
    6. '(' → logprob: -8.287130355834961
    7. 'v' → logprob: -8.287130355834961
    8. '[' → logprob: -9.287130355834961
    9. '_v' → logprob: -10.537130355834961
    10. '(v' → logprob: -10.787130355834961

Token 3334: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.12696076929569244
    2. ' if' → logprob: -2.1269607543945312
    3. '[' → logprob: -10.876960754394531
    4. '           ' → logprob: -11.501960754394531
    5. '   ' → logprob: -13.751960754394531
    6. '       ' → logprob: -14.251960754394531
    7. '          ' → logprob: -14.626960754394531
    8. '1' → logprob: -15.126960754394531
    9. '            ' → logprob: -15.501960754394531
    10. '               ' → logprob: -15.501960754394531

Token 3335: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -2.7848862373502925e-05
    2. ' v' → logprob: -10.500027656555176
    3. '   ' → logprob: -16.125028610229492
    4. '(v' → logprob: -16.750028610229492
    5. '	v' → logprob: -17.375028610229492
    6. ' ' → logprob: -17.750028610229492
    7. '
' → logprob: -18.500028610229492
    8. '$v' → logprob: -18.750028610229492
    9. 'vtk' → logprob: -19.000028610229492
    10. '    ' → logprob: -19.125028610229492

Token 3336: 'tx' (ID: 6874)
  Prédit: 'tx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tx' → logprob: -0.007582374382764101
    2. 'v' → logprob: -5.132582187652588
    3. ' !=' → logprob: -7.507582187652588
    4. '!=' → logprob: -7.632582187652588
    5. 'x' → logprob: -8.632582664489746
    6. 'txt' → logprob: -9.632582664489746
    7. ' v' → logprob: -9.757582664489746
    8. '(tx' → logprob: -10.132582664489746
    9. 'txn' → logprob: -10.132582664489746
    10. '_tx' → logprob: -10.382582664489746

Token 3337: ' !=' (ID: 1666)
  Prédit: '!='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '!=' → logprob: -0.38917675614356995
    2. ' !=' → logprob: -1.1391767263412476
    3. '[' → logprob: -6.389176845550537
    4. '()!=' → logprob: -8.139176368713379
    5. ']!=' → logprob: -9.389176368713379
    6. ' not' → logprob: -9.639176368713379
    7. 'not' → logprob: -10.014176368713379
    8. '!="' → logprob: -10.264176368713379
    9. ')!=' → logprob: -10.639176368713379
    10. '!='' → logprob: -10.889176368713379

Token 3338: ' origin' (ID: 12839)
  Prédit: 'origin'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'origin' → logprob: -0.18623383343219757
    2. 'face' → logprob: -1.8112338781356812
    3. 'sorted' → logprob: -5.311233997344971
    4. '(origin' → logprob: -7.186233997344971
    5. ' origin' → logprob: -8.436233520507812
    6. '(face' → logprob: -8.561233520507812
    7. 'orig' → logprob: -9.311233520507812
    8. ' face' → logprob: -10.061233520507812
    9. '(sorted' → logprob: -10.436233520507812
    10. 'Origin' → logprob: -10.561233520507812

Token 3339: ']
' (ID: 1592)
  Prédit: ']
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']
' → logprob: -0.09394123405218124
    2. ']' → logprob: -2.8439412117004395
    3. '[' → logprob: -3.5939412117004395
    4. ']

' → logprob: -6.8439412117004395
    5. ' and' → logprob: -7.0939412117004395
    6. '           ' → logprob: -7.0939412117004395
    7. '()]
' → logprob: -7.8439412117004395
    8. ' ]
' → logprob: -8.593941688537598
    9. ':]
' → logprob: -8.843941688537598
    10. ']
' → logprob: -8.843941688537598

Token 3340: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.16041339933872223
    2. '[' → logprob: -3.1604135036468506
    3. ',' → logprob: -3.2854135036468506
    4. ')' → logprob: -4.9104132652282715
    5. ' (' → logprob: -4.9104132652282715
    6. ':' → logprob: -5.0354132652282715
    7. ' =' → logprob: -5.2854132652282715
    8. '```' → logprob: -5.2854132652282715
    9. '(' → logprob: -5.4104132652282715
    10. '
' → logprob: -5.4104132652282715

Token 3341: ' B' (ID: 418)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.4025897979736328
    2. '#' → logprob: -1.6525897979736328
    3. 'v' → logprob: -2.402589797973633
    4. 'A' → logprob: -4.402589797973633
    5. 'def' → logprob: -5.027589797973633
    6. 'pos' → logprob: -5.527589797973633
    7. '
' → logprob: -5.527589797973633
    8. '   ' → logprob: -5.902589797973633
    9. ' #' → logprob: -6.277589797973633
    10. ' v' → logprob: -6.277589797973633

Token 3342: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.06196465715765953
    2. '=' → logprob: -3.561964750289917
    3. ',' → logprob: -4.561964511871338
    4. '_coords' → logprob: -4.686964511871338
    5. '_coord' → logprob: -5.686964511871338
    6. '_pos' → logprob: -5.811964511871338
    7. '_idx' → logprob: -6.186964511871338
    8. '2' → logprob: -6.686964511871338
    9. '3' → logprob: -7.186964511871338
    10. 'v' → logprob: -7.936964511871338

Token 3343: ' other' (ID: 1273)
  Prédit: 'other'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'other' → logprob: -0.01618158258497715
    2. ' other' → logprob: -4.141181468963623
    3. '(other' → logprob: -9.766181945800781
    4. 'sorted' → logprob: -9.766181945800781
    5. 'v' → logprob: -12.391181945800781
    6. ' sorted' → logprob: -12.391181945800781
    7. 'vector' → logprob: -12.516181945800781
    8. 'face' → logprob: -13.016181945800781
    9. 'original' → logprob: -13.516181945800781
    10. 'tuple' → logprob: -13.516181945800781

Token 3344: '_vertices' (ID: 96842)
  Prédit: '_vertices'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_vertices' → logprob: -0.11732255667448044
    2. '_vs' → logprob: -3.3673224449157715
    3. '_vertex' → logprob: -3.9923224449157715
    4. 'vs' → logprob: -4.2423224449157715
    5. ' =' → logprob: -5.2423224449157715
    6. '3' → logprob: -5.2423224449157715
    7. '2' → logprob: -5.8673224449157715
    8. 'vertex' → logprob: -5.9923224449157715
    9. '=' → logprob: -6.1173224449157715
    10. 'vertices' → logprob: -6.1173224449157715

Token 3345: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.001774307806044817
    2. ' =' → logprob: -7.001774311065674
    3. '=' → logprob: -7.251774311065674
    4. '0' → logprob: -9.376773834228516
    5. ',' → logprob: -11.376773834228516
    6. '1' → logprob: -11.751773834228516
    7. '   ' → logprob: -12.001773834228516
    8. 'B' → logprob: -12.126773834228516
    9. ':' → logprob: -12.251773834228516
    10. '2' → logprob: -12.751773834228516

Token 3346: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.009818188846111298
    2. '1' → logprob: -4.634818077087402
    3. '[' → logprob: -10.509818077087402
    4. ' ' → logprob: -10.884818077087402
    5. '...' → logprob: -12.509818077087402
    6. '   ' → logprob: -13.009818077087402
    7. '(' → logprob: -13.384818077087402
    8. ':' → logprob: -13.509818077087402
    9. '-' → logprob: -13.884818077087402
    10. ',' → logprob: -14.009818077087402

Token 3347: ']
' (ID: 1592)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.16131000220775604
    2. ']' → logprob: -2.6613099575042725
    3. ')' → logprob: -3.1613099575042725
    4. ')
' → logprob: -4.286310195922852
    5. ']
' → logprob: -4.536310195922852
    6. '
' → logprob: -5.661310195922852
    7. '           ' → logprob: -5.786310195922852
    8. 'B' → logprob: -6.536310195922852
    9. '       ' → logprob: -7.161310195922852
    10. '<|end|>' → logprob: -7.661310195922852

Token 3348: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.2545655369758606
    2. ' C' → logprob: -2.129565477371216
    3. 'C' → logprob: -2.254565477371216
    4. '   ' → logprob: -7.629565715789795
    5. ',' → logprob: -9.004565238952637
    6. ' ' → logprob: -9.129565238952637
    7. '
' → logprob: -9.504565238952637
    8. '       ' → logprob: -9.879565238952637
    9. '```' → logprob: -10.754565238952637
    10. '               ' → logprob: -11.004565238952637

Token 3349: ' C' (ID: 363)
  Prédit: 'C'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'C' (adapté à ' C') → logprob: -0.0006805036100558937
    2. ' C' → logprob: -7.375680446624756
    3. '           ' → logprob: -9.875680923461914
    4. '   ' → logprob: -13.500680923461914
    5. '       ' → logprob: -14.750680923461914
    6. '               ' → logprob: -15.125680923461914
    7. ' ' → logprob: -15.875680923461914
    8. '#' → logprob: -15.875680923461914
    9. 'v' → logprob: -16.000680923461914
    10. 'A' → logprob: -17.000680923461914

Token 3350: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.28573980927467346
    2. '=' → logprob: -1.535739779472351
    3. ',' → logprob: -3.4107398986816406
    4. ':' → logprob: -9.41073989868164
    5. ')' → logprob: -10.41073989868164
    6. ' ,' → logprob: -11.03573989868164
    7. 'def' → logprob: -11.28573989868164
    8. ' ' → logprob: -11.41073989868164
    9. '<|end|>' → logprob: -11.53573989868164
    10. '   ' → logprob: -11.78573989868164

Token 3351: ' other' (ID: 1273)
  Prédit: 'other'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'other' → logprob: -0.0019289902411401272
    2. ' other' → logprob: -6.251928806304932
    3. '(other' → logprob: -15.25192928314209
    4. 'original' → logprob: -16.376928329467773
    5. '   ' → logprob: -17.626928329467773
    6. '...' → logprob: -18.751928329467773
    7. '.other' → logprob: -18.751928329467773
    8. 'another' → logprob: -18.876928329467773
    9. ' ' → logprob: -19.001928329467773
    10. 'Other' → logprob: -19.501928329467773

Token 3352: '_vertices' (ID: 96842)
  Prédit: '_vertices'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_vertices' → logprob: -0.3484961688518524
    2. '[' → logprob: -1.5984961986541748
    3. '0' → logprob: -3.348496198654175
    4. '1' → logprob: -4.223495960235596
    5. ')' → logprob: -4.848495960235596
    6. ']' → logprob: -4.973495960235596
    7. '_tokens' → logprob: -4.973495960235596
    8. '(' → logprob: -5.973495960235596
    9. 'vertices' → logprob: -5.973495960235596
    10. '2' → logprob: -6.223495960235596

Token 3353: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.35392245650291443
    2. '1' → logprob: -1.3539224863052368
    3. '(' → logprob: -3.4789223670959473
    4. '=' → logprob: -5.978922367095947
    5. ' =' → logprob: -6.228922367095947
    6. ' (' → logprob: -6.603922367095947
    7. 'def' → logprob: -7.353922367095947
    8. ':' → logprob: -7.728922367095947
    9. '#' → logprob: -8.103922843933105
    10. ']' → logprob: -8.103922843933105

Token 3354: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.319370302458992e-06
    2. ' ' → logprob: -13.750005722045898
    3. '[' → logprob: -13.937505722045898
    4. '0' → logprob: -14.312505722045898
    5. '-' → logprob: -14.812505722045898
    6. '```' → logprob: -14.812505722045898
    7. '#' → logprob: -14.875005722045898
    8. '   ' → logprob: -15.062505722045898
    9. '...' → logprob: -15.562505722045898
    10. '2' → logprob: -16.3750057220459

Token 3355: ']
' (ID: 1592)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.933052659034729
    2. ']' → logprob: -1.433052659034729
    3. '           ' → logprob: -1.433052659034729
    4. ')
' → logprob: -2.5580525398254395
    5. ']
' → logprob: -3.0580525398254395
    6. '       ' → logprob: -6.1830525398254395
    7. '   ' → logprob: -7.9330525398254395
    8. '
' → logprob: -8.058053016662598
    9. '])' → logprob: -8.058053016662598
    10. 'def' → logprob: -8.183053016662598

Token 3356: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.008527222089469433
    2. '
' → logprob: -5.0085272789001465
    3. '            
' → logprob: -7.0085272789001465
    4. 'def' → logprob: -8.133526802062988
    5. '#' → logprob: -8.133526802062988
    6. 'v' → logprob: -9.383526802062988
    7. '       ' → logprob: -10.133526802062988
    8. ',' → logprob: -10.383526802062988
    9. 'A' → logprob: -10.508526802062988
    10. '        
' → logprob: -10.883526802062988

Token 3357: ' #' (ID: 1069)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.3907267451286316
    2. '#' (adapté à ' #') → logprob: -2.0157268047332764
    3. 'v' → logprob: -2.5157268047332764
    4. 'pos' → logprob: -3.6407268047332764
    5. 'B' → logprob: -3.7657268047332764
    6. 'def' → logprob: -3.7657268047332764
    7. 'A' → logprob: -4.515726566314697
    8. '
' → logprob: -4.765726566314697
    9. '       ' → logprob: -5.765726566314697
    10. 'u' → logprob: -6.015726566314697

Token 3358: ' Positions' (ID: 138312)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.21773242950439453
    2. 'B' → logprob: -2.4677324295043945
    3. '#' → logprob: -3.4677324295043945
    4. ' B' → logprob: -3.8427324295043945
    5. 'def' → logprob: -4.7177324295043945
    6. ' (' → logprob: -5.0927324295043945
    7. 'v' → logprob: -5.2177324295043945
    8. ' v' → logprob: -5.4677324295043945
    9. ' #' → logprob: -5.4677324295043945
    10. 'A' → logprob: -5.4677324295043945

Token 3359: ' ' (ID: 220)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.7482492923736572
    2. '2' → logprob: -1.6232492923736572
    3. 'in' → logprob: -2.4982492923736572
    4. ' =' → logprob: -2.6232492923736572
    5. 'A' → logprob: -2.7482492923736572
    6. '   ' → logprob: -3.3732492923736572
    7. '           ' → logprob: -4.498249053955078
    8. '3' → logprob: -4.623249053955078
    9. 'v' → logprob: -4.623249053955078
    10. '=' → logprob: -4.873249053955078

Token 3360: '3' (ID: 18)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.17865721881389618
    2. '2' → logprob: -2.928657293319702
    3. 'in' → logprob: -3.053657293319702
    4. '_B' → logprob: -4.053657054901123
    5. 'of' → logprob: -4.928657054901123
    6. 'A' → logprob: -5.303657054901123
    7. '3' → logprob: -5.303657054901123
    8. '   ' → logprob: -5.553657054901123
    9. ' =' → logprob: -5.678657054901123
    10. '=' → logprob: -6.053657054901123

Token 3361: 'd' (ID: 67)
  Prédit: 'd'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.0023829033598303795
    2. '2' → logprob: -7.002382755279541
    3. '   ' → logprob: -7.752382755279541
    4. ' =' → logprob: -8.1273832321167
    5. '=' → logprob: -8.7523832321167
    6. 'B' → logprob: -8.7523832321167
    7. 'A' → logprob: -9.5023832321167
    8. '#' → logprob: -10.0023832321167
    9. 'b' → logprob: -10.0023832321167
    10. '           ' → logprob: -10.1273832321167

Token 3362: ':
' (ID: 734)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.0368441604077816
    2. ' =' → logprob: -3.661844253540039
    3. '=' → logprob: -5.036844253540039
    4. '   ' → logprob: -6.536844253540039
    5. '           ' → logprob: -6.911844253540039
    6. ' B' → logprob: -7.911844253540039
    7. 'for' → logprob: -8.286844253540039
    8. ' of' → logprob: -8.911844253540039
    9. 'of' → logprob: -9.036844253540039
    10. ' ' → logprob: -9.161844253540039

Token 3363: '           ' (ID: 352)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.1557498723268509
    2. '           ' → logprob: -2.030749797821045
    3. 'v' → logprob: -5.405749797821045
    4. ' B' → logprob: -5.530749797821045
    5. 'A' → logprob: -7.280749797821045
    6. '(v' → logprob: -7.905749797821045
    7. '(' → logprob: -8.030750274658203
    8. '(B' → logprob: -8.155750274658203
    9. '   ' → logprob: -8.280750274658203
    10. 'V' → logprob: -8.405750274658203

Token 3364: ' p' (ID: 275)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.10225557535886765
    2. 'pos' → logprob: -3.3522555828094482
    3. 'PB' → logprob: -3.3522555828094482
    4. 'p' (adapté à ' p') → logprob: -3.9772555828094482
    5. 'P' → logprob: -5.477255344390869
    6. '           ' → logprob: -6.852255344390869
    7. 'pb' → logprob: -7.102255344390869
    8. 'v' → logprob: -7.852255344390869
    9. 'point' → logprob: -7.852255344390869
    10. 'A' → logprob: -7.852255344390869

Token 3365: 'B' (ID: 33)
  Prédit: 'B'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.0030231066048145294
    2. 'A' → logprob: -6.503023147583008
    3. 'r' → logprob: -7.753023147583008
    4. '=' → logprob: -8.628023147583008
    5. '_B' → logprob: -8.753023147583008
    6. '1' → logprob: -9.253023147583008
    7. '=B' → logprob: -9.253023147583008
    8. 'oints' → logprob: -9.378023147583008
    9. ' =' → logprob: -9.628023147583008
    10. 'b' → logprob: -9.628023147583008

Token 3366: '3' (ID: 18)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.3134942948818207
    2. ' =' → logprob: -1.313494324684143
    3. '3' → logprob: -8.438494682312012
    4. '=p' → logprob: -12.063494682312012
    5. 'p' → logprob: -12.563494682312012
    6. ',' → logprob: -12.813494682312012
    7. '=self' → logprob: -14.313494682312012
    8. ' ' → logprob: -14.688494682312012
    9. '_' → logprob: -14.813494682312012
    10. 's' → logprob: -15.063494682312012

Token 3367: 'd' (ID: 67)
  Prédit: 'd'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.006613653153181076
    2. ' =' → logprob: -5.381613731384277
    3. '=' → logprob: -6.256613731384277
    4. '3' → logprob: -9.631613731384277
    5. 'D' → logprob: -12.381613731384277
    6. '   ' → logprob: -14.256613731384277
    7. '=(' → logprob: -14.381613731384277
    8. '_d' → logprob: -14.881613731384277
    9. '=
' → logprob: -15.006613731384277
    10. '=d' → logprob: -15.131613731384277

Token 3368: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.20146137475967407
    2. ' =' → logprob: -1.7014613151550293
    3. '=self' → logprob: -10.701461791992188
    4. ')' → logprob: -11.326461791992188
    5. '=p' → logprob: -12.826461791992188
    6. '           ' → logprob: -13.076461791992188
    7. 'self' → logprob: -13.076461791992188
    8. '   ' → logprob: -13.451461791992188
    9. ',' → logprob: -13.576461791992188
    10. '=
' → logprob: -14.076461791992188

Token 3369: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0009469495271332562
    2. ' self' → logprob: -7.125946998596191
    3. '           ' → logprob: -8.875946998596191
    4. '   ' → logprob: -13.875946998596191
    5. 'vector' → logprob: -15.000946998596191
    6. '               ' → logprob: -15.500946998596191
    7. '          ' → logprob: -15.500946998596191
    8. '(self' → logprob: -15.750946998596191
    9. ' ' → logprob: -15.750946998596191
    10. '       ' → logprob: -15.875946998596191

Token 3370: '.t' (ID: 1370)
  Prédit: 'tet'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tet' → logprob: -0.6478871703147888
    2. 't' → logprob: -1.0228872299194336
    3. '.t' → logprob: -2.1478872299194336
    4. ' tetra' → logprob: -8.397887229919434
    5. 'vertices' → logprob: -9.647887229919434
    6. '_t' → logprob: -9.772887229919434
    7. '```' → logprob: -10.022887229919434
    8. '	t' → logprob: -10.522887229919434
    9. '           ' → logprob: -10.647887229919434
    10. '
' → logprob: -10.897887229919434

Token 3371: 'etra' (ID: 72836)
  Prédit: 'etra'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'etra' → logprob: -0.006699739024043083
    2. 'tet' → logprob: -5.381699562072754
    3. 'vertices' → logprob: -7.381699562072754
    4. ' tetra' → logprob: -7.756699562072754
    5. 'et' → logprob: -9.131699562072754
    6. 't' → logprob: -9.131699562072754
    7. '.t' → logprob: -9.194199562072754
    8. 'etri' → logprob: -9.569199562072754
    9. '.vertices' → logprob: -9.819199562072754
    10. 'Vertices' → logprob: -10.069199562072754

Token 3372: '.vertices' (ID: 47509)
  Prédit: 'vertices'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'vertices' → logprob: -0.023662708699703217
    2. '.vertices' → logprob: -3.773662805557251
    3. 'vector' → logprob: -8.773662567138672
    4. 'vectors' → logprob: -9.023662567138672
    5. ' vertices' → logprob: -9.648662567138672
    6. '.vector' → logprob: -10.148662567138672
    7. '   ' → logprob: -10.898662567138672
    8. '
' → logprob: -11.898662567138672
    9. '.' → logprob: -12.273662567138672
    10. '(vertices' → logprob: -12.648662567138672

Token 3373: '_' (ID: 62)
  Prédit: '_'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.011055603623390198
    2. '3' → logprob: -4.5110554695129395
    3. 'B' → logprob: -13.511055946350098
    4. 'p' → logprob: -13.636055946350098
    5. '   ' → logprob: -14.136055946350098
    6. '
' → logprob: -14.261055946350098
    7. '_p' → logprob: -14.386055946350098
    8. '           ' → logprob: -14.636055946350098
    9. '[B' → logprob: -14.636055946350098
    10. '#' → logprob: -14.761055946350098

Token 3374: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.010698067955672741
    2. '_' → logprob: -4.635697841644287
    3. 'B' → logprob: -7.135697841644287
    4. 'p' → logprob: -10.260698318481445
    5. ' ' → logprob: -10.510698318481445
    6. '[B' → logprob: -11.135698318481445
    7. '   ' → logprob: -11.385698318481445
    8. '  ' → logprob: -11.635698318481445
    9. '
' → logprob: -11.760698318481445
    10. '_B' → logprob: -11.885698318481445

Token 3375: 'd' (ID: 67)
  Prédit: 'd'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -6.0868278524139896e-05
    2. '3' → logprob: -10.50006103515625
    3. 'B' → logprob: -10.75006103515625
    4. 'D' → logprob: -11.62506103515625
    5. '_d' → logprob: -13.75006103515625
    6. '[B' → logprob: -14.62506103515625
    7. ' B' → logprob: -15.62506103515625
    8. 'C' → logprob: -15.87506103515625
    9. 'p' → logprob: -15.87506103515625
    10. '   ' → logprob: -16.12506103515625

Token 3376: '[B' (ID: 95385)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.5807297229766846
    2. '[B' → logprob: -0.8307297229766846
    3. '[' → logprob: -6.3307294845581055
    4. '           ' → logprob: -6.4557294845581055
    5. 'sorted' → logprob: -7.9557294845581055
    6. '       ' → logprob: -8.205729484558105
    7. '   ' → logprob: -8.705729484558105
    8. 'p' → logprob: -9.330729484558105
    9. '(B' → logprob: -9.455729484558105
    10. '[p' → logprob: -9.455729484558105

Token 3377: ']
' (ID: 1592)
  Prédit: ')
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.21188662946224213
    2. ']
' → logprob: -1.8368866443634033
    3. '           ' → logprob: -4.086886405944824
    4. ')' → logprob: -4.711886405944824
    5. ']' → logprob: -5.461886405944824
    6. '       ' → logprob: -7.086886405944824
    7. '])
' → logprob: -7.711886405944824
    8. ')
' → logprob: -10.336886405944824
    9. '          ' → logprob: -10.461886405944824
    10. '   ' → logprob: -10.461886405944824

Token 3378: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.007664121221750975
    2. 'p' → logprob: -4.882664203643799
    3. '       ' → logprob: -10.50766372680664
    4. ' p' → logprob: -11.00766372680664
    5. '          ' → logprob: -12.38266372680664
    6. '               ' → logprob: -12.88266372680664
    7. '            ' → logprob: -13.25766372680664
    8. '   ' → logprob: -13.50766372680664
    9. '```' → logprob: -13.75766372680664
    10. '         ' → logprob: -14.13266372680664

Token 3379: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' (adapté à ' p') → logprob: -0.22060275077819824
    2. '           ' → logprob: -1.8456027507781982
    3. ' p' → logprob: -3.2206027507781982
    4. '       ' → logprob: -10.220602989196777
    5. '   ' → logprob: -11.720602989196777
    6. ' ' → logprob: -11.720602989196777
    7. '          ' → logprob: -11.970602989196777
    8. '            ' → logprob: -11.970602989196777
    9. '               ' → logprob: -11.970602989196777
    10. 'P' → logprob: -12.095602989196777

Token 3380: 'C' (ID: 34)
  Prédit: 'C'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'C' → logprob: -0.008914722129702568
    2. 'self' → logprob: -5.383914947509766
    3. 'p' → logprob: -6.133914947509766
    4. 'A' → logprob: -7.383914947509766
    5. 't' → logprob: -8.008914947509766
    6. '#' → logprob: -8.258914947509766
    7. '3' → logprob: -8.383914947509766
    8. 'tet' → logprob: -9.133914947509766
    9. 'B' → logprob: -9.258914947509766
    10. '_C' → logprob: -9.883914947509766

Token 3381: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -4.751746746478602e-05
    2. ' =' → logprob: -10.87504768371582
    3. '=' → logprob: -11.50004768371582
    4. '_' → logprob: -11.50004768371582
    5. '[' → logprob: -12.12504768371582
    6. ' ' → logprob: -14.12504768371582
    7. ':' → logprob: -14.62504768371582
    8. ',' → logprob: -14.62504768371582
    9. '   ' → logprob: -15.75004768371582
    10. '_three' → logprob: -15.87504768371582

Token 3382: 'd' (ID: 67)
  Prédit: 'd'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -5.080963092041202e-06
    2. '3' → logprob: -12.250004768371582
    3. '_d' → logprob: -16.2500057220459
    4. ' d' → logprob: -17.1250057220459
    5. 'д' → logprob: -17.2500057220459
    6. ' =' → logprob: -18.6250057220459
    7. ' ' → logprob: -18.7500057220459
    8. 'dtype' → logprob: -18.8750057220459
    9. '[' → logprob: -19.1250057220459
    10. '   ' → logprob: -19.1250057220459

Token 3383: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.3869284391403198
    2. ' =' → logprob: -1.1369284391403198
    3. 'p' → logprob: -10.88692855834961
    4. '=p' → logprob: -11.88692855834961
    5. '   ' → logprob: -12.26192855834961
    6. ')' → logprob: -12.38692855834961
    7. ' ' → logprob: -12.76192855834961
    8. ',' → logprob: -12.76192855834961
    9. 'def' → logprob: -13.26192855834961
    10. ':' → logprob: -13.38692855834961

Token 3384: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0017187348566949368
    2. ' self' → logprob: -6.376718521118164
    3. '(self' → logprob: -11.876718521118164
    4. '=self' → logprob: -12.501718521118164
    5. '           ' → logprob: -13.251718521118164
    6. '	self' → logprob: -14.126718521118164
    7. '[self' → logprob: -14.126718521118164
    8. '   ' → logprob: -14.501718521118164
    9. ' ' → logprob: -15.001718521118164
    10. 'the' → logprob: -15.501718521118164

Token 3385: '.t' (ID: 1370)
  Prédit: 'tet'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'tet' → logprob: -0.0013786869822070003
    2. 't' → logprob: -7.126378536224365
    3. 'vertices' → logprob: -8.251379013061523
    4. 'self' → logprob: -9.751379013061523
    5. ' tetra' → logprob: -9.751379013061523
    6. 'tuple' → logprob: -10.126379013061523
    7. '
' → logprob: -10.376379013061523
    8. 'vector' → logprob: -10.626379013061523
    9. '   ' → logprob: -11.501379013061523
    10. '#' → logprob: -11.938879013061523

Token 3386: 'etra' (ID: 72836)
  Prédit: 'etra'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'etra' → logprob: -0.00883910246193409
    2. '3' → logprob: -5.008839130401611
    3. 'self' → logprob: -7.508839130401611
    4. 'tet' → logprob: -8.633838653564453
    5. 'eta' → logprob: -9.008838653564453
    6. 'etri' → logprob: -9.008838653564453
    7. 'et' → logprob: -9.196338653564453
    8. 'vertices' → logprob: -9.508838653564453
    9. 'e' → logprob: -9.571338653564453
    10. 'riangle' → logprob: -9.758838653564453

Token 3387: '.vertices' (ID: 47509)
  Prédit: '3'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.02600974217057228
    2. '_' → logprob: -3.9010097980499268
    3. 'vertices' → logprob: -5.276009559631348
    4. 'C' → logprob: -9.526009559631348
    5. '
' → logprob: -9.901009559631348
    6. '(vertices' → logprob: -9.901009559631348
    7. '#' → logprob: -10.401009559631348
    8. '[' → logprob: -10.651009559631348
    9. '.vertices' → logprob: -11.901009559631348
    10. '   ' → logprob: -12.026009559631348

Token 3388: '_' (ID: 62)
  Prédit: '_'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.5766368508338928
    2. '3' → logprob: -0.8266368508338928
    3. 'd' → logprob: -7.326636791229248
    4. '[' → logprob: -10.576637268066406
    5. '_d' → logprob: -12.826637268066406
    6. '   ' → logprob: -12.951637268066406
    7. '
' → logprob: -13.201637268066406
    8. '```' → logprob: -13.701637268066406
    9. '#' → logprob: -14.076637268066406
    10. '[
' → logprob: -14.576637268066406

Token 3389: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -4.727905979962088e-05
    2. 'd' → logprob: -10.12504768371582
    3. 'p' → logprob: -13.12504768371582
    4. 'float' → logprob: -13.37504768371582
    5. 'c' → logprob: -14.37504768371582
    6. '{' → logprob: -14.87504768371582
    7. '```' → logprob: -15.00004768371582
    8. 'b' → logprob: -15.12504768371582
    9. '{
' → logprob: -15.12504768371582
    10. 'B' → logprob: -15.25004768371582

Token 3390: 'd' (ID: 67)
  Prédit: 'd'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.2520105540752411
    2. '3' → logprob: -1.5020105838775635
    3. 'f' → logprob: -9.877010345458984
    4. '_' → logprob: -11.502010345458984
    5. 'float' → logprob: -12.752010345458984
    6. 'def' → logprob: -13.127010345458984
    7. '_d' → logprob: -13.377010345458984
    8. 'b' → logprob: -13.502010345458984
    9. 'df' → logprob: -13.752010345458984
    10. '
' → logprob: -13.877010345458984

Token 3391: '[C' (ID: 107876)
  Prédit: 'origin'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'origin' → logprob: -0.8140527009963989
    2. 'C' → logprob: -0.9390527009963989
    3. 'self' → logprob: -2.0640525817871094
    4. 'p' → logprob: -4.064052581787109
    5. '[' → logprob: -4.939052581787109
    6. '[self' → logprob: -5.689052581787109
    7. 'face' → logprob: -6.189052581787109
    8. '[C' → logprob: -6.314052581787109
    9. 'sorted' → logprob: -6.689052581787109
    10. '(origin' → logprob: -6.939052581787109

Token 3392: ']
' (ID: 1592)
  Prédit: ']
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']
' → logprob: -0.7769517302513123
    2. ']' → logprob: -1.026951789855957
    3. '           ' → logprob: -1.776951789855957
    4. '       ' → logprob: -5.151951789855957
    5. ')
' → logprob: -5.776951789855957
    6. ')' → logprob: -6.276951789855957
    7. ']
' → logprob: -7.151951789855957
    8. 'def' → logprob: -8.651951789855957
    9. '               ' → logprob: -8.776951789855957
    10. '
' → logprob: -8.776951789855957

Token 3393: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00178429891820997
    2. '```' → logprob: -7.126784324645996
    3. '#' → logprob: -7.876784324645996
    4. 'v' → logprob: -8.126784324645996
    5. 'p' → logprob: -9.001784324645996
    6. 'def' → logprob: -10.001784324645996
    7. '``' → logprob: -10.001784324645996
    8. '       ' → logprob: -10.501784324645996
    9. '
' → logprob: -11.001784324645996
    10. '            
' → logprob: -11.251784324645996

Token 3394: ' #' (ID: 1069)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.10887772589921951
    2. 'p' → logprob: -2.483877658843994
    3. '#' (adapté à ' #') → logprob: -4.358877658843994
    4. 'pos' → logprob: -5.858877658843994
    5. 'v' → logprob: -6.358877658843994
    6. 'u' → logprob: -6.733877658843994
    7. 'def' → logprob: -7.608877658843994
    8. '```' → logprob: -8.108878135681152
    9. 'B' → logprob: -9.483878135681152
    10. '       ' → logprob: -9.608878135681152

Token 3395: ' ' (ID: 220)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.9533560276031494
    2. '#' → logprob: -1.0783560276031494
    3. 'v' → logprob: -2.4533560276031494
    4. 'def' → logprob: -2.4533560276031494
    5. '           ' → logprob: -3.0783560276031494
    6. 'pos' → logprob: -3.3283560276031494
    7. 'import' → logprob: -5.20335578918457
    8. 'B' → logprob: -5.57835578918457
    9. '       ' → logprob: -6.20335578918457
    10. '   ' → logprob: -6.32835578918457

Token 3396: '2' (ID: 17)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.38470932841300964
    2. '#' → logprob: -1.759709358215332
    3. 'def' → logprob: -2.509709358215332
    4. 'v' → logprob: -3.759709358215332
    5. 'pos' → logprob: -3.759709358215332
    6. 'B' → logprob: -5.259709358215332
    7. '   ' → logprob: -5.634709358215332
    8. 'u' → logprob: -5.884709358215332
    9. 'import' → logprob: -6.634709358215332
    10. 'face' → logprob: -6.884709358215332

Token 3397: 'D' (ID: 35)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.0005027544684708118
    2. '#' → logprob: -8.125502586364746
    3. 'B' → logprob: -9.875502586364746
    4. 'D' → logprob: -10.125502586364746
    5. '3' → logprob: -10.250502586364746
    6. '0' → logprob: -10.625502586364746
    7. '2' → logprob: -11.625502586364746
    8. 'xd' → logprob: -11.750502586364746
    9. '```' → logprob: -12.000502586364746
    10. '
' → logprob: -12.250502586364746

Token 3398: ' coords' (ID: 53253)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'B' → logprob: -1.038804054260254
    2. 'coords' → logprob: -1.038804054260254
    3. 'p' → logprob: -2.538804054260254
    4. 'pos' → logprob: -2.788804054260254
    5. '_coords' → logprob: -3.038804054260254
    6. 'def' → logprob: -3.163804054260254
    7. 'v' → logprob: -3.663804054260254
    8. '#' → logprob: -4.788804054260254
    9. 'positions' → logprob: -5.163804054260254
    10. ' =' → logprob: -5.663804054260254

Token 3399: ' of' (ID: 328)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.8009825944900513
    2. ' =' → logprob: -1.4259825944900513
    3. '           ' → logprob: -1.6759825944900513
    4. 'p' → logprob: -2.4259824752807617
    5. '=' → logprob: -5.175982475280762
    6. '   ' → logprob: -5.300982475280762
    7. '       ' → logprob: -5.675982475280762
    8. '=(' → logprob: -5.800982475280762
    9. '_B' → logprob: -5.925982475280762
    10. 'b' → logprob: -6.425982475280762

Token 3400: ' B' (ID: 418)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.03428049758076668
    2. 'p' → logprob: -3.40928053855896
    3. 'C' → logprob: -8.534280776977539
    4. 'self' → logprob: -9.284280776977539
    5. ' B' → logprob: -9.534280776977539
    6. 'Vertex' → logprob: -10.284280776977539
    7. '#' → logprob: -10.534280776977539
    8. 'b' → logprob: -10.784280776977539
    9. 'the' → logprob: -11.034280776977539
    10. 'v' → logprob: -11.034280776977539

Token 3401: ' and' (ID: 326)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.25186440348625183
    2. ' =' → logprob: -1.6268644332885742
    3. '=(' → logprob: -4.251864433288574
    4. '(' → logprob: -4.751864433288574
    5. ' (' → logprob: -6.626864433288574
    6. ',' → logprob: -7.251864433288574
    7. 'B' → logprob: -8.251864433288574
    8. ')' → logprob: -8.751864433288574
    9. '```' → logprob: -8.751864433288574
    10. '1' → logprob: -9.376864433288574

Token 3402: ' C' (ID: 363)
  Prédit: 'C'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'C' → logprob: -0.2680622339248657
    2. '(' → logprob: -2.143062114715576
    3. 'p' → logprob: -2.143062114715576
    4. '   ' → logprob: -9.268062591552734
    5. 'v' → logprob: -9.393062591552734
    6. ' (' → logprob: -9.518062591552734
    7. '           ' → logprob: -9.518062591552734
    8. '```' → logprob: -9.643062591552734
    9. 'u' → logprob: -10.768062591552734
    10. 'origin' → logprob: -10.893062591552734

Token 3403: ':
' (ID: 734)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.12815405428409576
    2. '=' → logprob: -2.1281540393829346
    3. '           ' → logprob: -7.878154277801514
    4. 'B' → logprob: -8.503153800964355
    5. ' (' → logprob: -8.753153800964355
    6. '=(' → logprob: -8.753153800964355
    7. ',' → logprob: -9.003153800964355
    8. 'b' → logprob: -9.628153800964355
    9. '(' → logprob: -10.128153800964355
    10. ':' → logprob: -10.128153800964355

Token 3404: '           ' (ID: 352)
  Prédit: ' ('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -1.0127475261688232
    2. '           ' → logprob: -1.1377475261688232
    3. '(' → logprob: -1.7627475261688232
    4. '(u' → logprob: -3.0127475261688232
    5. ' u' → logprob: -3.7627475261688232
    6. ' vector' → logprob: -4.262747764587402
    7. 'u' → logprob: -4.887747764587402
    8. '```' → logprob: -5.012747764587402
    9. 'v' → logprob: -5.137747764587402
    10. 'vector' → logprob: -5.137747764587402

Token 3405: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' (adapté à ' p') → logprob: -0.5343683958053589
    2. 'u' → logprob: -2.2843685150146484
    3. 'def' → logprob: -2.7843685150146484
    4. 'vec' → logprob: -2.7843685150146484
    5. '#' → logprob: -3.1593685150146484
    6. '(' → logprob: -3.1593685150146484
    7. 'v' → logprob: -3.5343685150146484
    8. '(u' → logprob: -4.159368515014648
    9. 'pos' → logprob: -4.284368515014648
    10. 'b' → logprob: -4.534368515014648

Token 3406: 'B' (ID: 33)
  Prédit: 'B'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -8.518582762917504e-05
    2. '_B' → logprob: -9.87508487701416
    3. '2' → logprob: -11.25008487701416
    4. ' =' → logprob: -12.62508487701416
    5. 'b' → logprob: -13.00008487701416
    6. 'Bx' → logprob: -13.00008487701416
    7. '=' → logprob: -13.12508487701416
    8. '(' → logprob: -13.12508487701416
    9. 'x' → logprob: -13.62508487701416
    10. ' B' → logprob: -14.25008487701416

Token 3407: '_' (ID: 62)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.6505473256111145
    2. '=' → logprob: -0.7755473256111145
    3. '2' → logprob: -4.150547504425049
    4. '3' → logprob: -6.400547504425049
    5. '=(' → logprob: -9.27554702758789
    6. '_' → logprob: -9.40054702758789
    7. '   ' → logprob: -9.90054702758789
    8. '_coords' → logprob: -10.40054702758789
    9. ',' → logprob: -10.52554702758789
    10. ' ' → logprob: -11.27554702758789

Token 3408: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.1470327079296112
    2. '=' → logprob: -2.3970327377319336
    3. '3' → logprob: -3.3970327377319336
    4. ' =' → logprob: -5.147032737731934
    5. 'face' → logprob: -6.397032737731934
    6. '0' → logprob: -6.522032737731934
    7. 'x' → logprob: -7.397032737731934
    8. '_' → logprob: -7.522032737731934
    9. '[' → logprob: -8.147032737731934
    10. '=(' → logprob: -8.272032737731934

Token 3409: 'd' (ID: 67)
  Prédit: 'd'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -4.990154047845863e-05
    2. ',' → logprob: -10.750049591064453
    3. ' =' → logprob: -11.125049591064453
    4. '(' → logprob: -12.875049591064453
    5. '0' → logprob: -13.125049591064453
    6. '=' → logprob: -13.375049591064453
    7. '(float' → logprob: -13.625049591064453
    8. '2' → logprob: -13.750049591064453
    9. '(
' → logprob: -13.750049591064453
    10. '   ' → logprob: -14.000049591064453

Token 3410: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.38689476251602173
    2. ' =' → logprob: -1.136894702911377
    3. ',' → logprob: -11.386895179748535
    4. '=(' → logprob: -12.261895179748535
    5. ')' → logprob: -12.761895179748535
    6. 'p' → logprob: -13.511895179748535
    7. '=
' → logprob: -13.886895179748535
    8. '   ' → logprob: -14.636895179748535
    9. '=p' → logprob: -15.011895179748535
    10. ' ' → logprob: -15.136895179748535

Token 3411: ' (' (ID: 350)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.024763476103544235
    2. '(u' → logprob: -4.399763584136963
    3. ' (' → logprob: -5.149763584136963
    4. 'vector' → logprob: -5.774763584136963
    5. '(vector' → logprob: -6.024763584136963
    6. '(s' → logprob: -7.899763584136963
    7. 'u' → logprob: -9.399763107299805
    8. '(
' → logprob: -9.774763107299805
    9. '(p' → logprob: -10.274763107299805
    10. ' vector' → logprob: -10.274763107299805

Token 3412: 'dot' (ID: 29155)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00023560250701848418
    2. '(' → logprob: -8.500235557556152
    3. '(u' → logprob: -11.125235557556152
    4. 'vector' → logprob: -11.750235557556152
    5. ')' → logprob: -13.375235557556152
    6. 'u' → logprob: -13.875235557556152
    7. '(p' → logprob: -14.000235557556152
    8. '(vector' → logprob: -14.000235557556152
    9. 'self' → logprob: -14.250235557556152
    10. '
' → logprob: -14.750235557556152

Token 3413: '(vector' (ID: 43296)
  Prédit: 'vector'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'vector' → logprob: -0.5351461172103882
    2. '(vector' → logprob: -1.6601461172103882
    3. '(u' → logprob: -2.1601462364196777
    4. 'u' → logprob: -2.4101462364196777
    5. '(p' → logprob: -4.535146236419678
    6. 'p' → logprob: -5.410146236419678
    7. '(' → logprob: -6.910146236419678
    8. ')' → logprob: -7.410146236419678
    9. 'self' → logprob: -7.535146236419678
    10. '(self' → logprob: -8.16014575958252

Token 3414: '_sub' (ID: 11572)
  Prédit: 'sub'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sub' → logprob: -0.8416006565093994
    2. '_sub' → logprob: -0.8416006565093994
    3. 'u' → logprob: -2.5916006565093994
    4. '(u' → logprob: -3.2166006565093994
    5. '(p' → logprob: -4.71660041809082
    6. 'p' → logprob: -5.21660041809082
    7. '(vector' → logprob: -6.21660041809082
    8. 'vector' → logprob: -6.21660041809082
    9. 'subtract' → logprob: -6.21660041809082
    10. '(sub' → logprob: -6.96660041809082

Token 3415: '(p' (ID: 2407)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.7927395701408386
    2. 'self' → logprob: -1.1677396297454834
    3. '(p' → logprob: -1.7927396297454834
    4. '(self' → logprob: -2.6677396297454834
    5. 'v' → logprob: -9.042739868164062
    6. '(' → logprob: -9.667739868164062
    7. 'vector' → logprob: -9.917739868164062
    8. '(v' → logprob: -10.417739868164062
    9. ' self' → logprob: -10.667739868164062
    10. '(t' → logprob: -11.042739868164062

Token 3416: 'B' (ID: 33)
  Prédit: 'B'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.0020226165652275085
    2. 'p' → logprob: -6.877022743225098
    3. 'self' → logprob: -7.877022743225098
    4. 'C' → logprob: -7.877022743225098
    5. 'vector' → logprob: -9.627022743225098
    6. 'b' → logprob: -9.752022743225098
    7. '(p' → logprob: -10.502022743225098
    8. '(' → logprob: -11.502022743225098
    9. '(B' → logprob: -11.627022743225098
    10. ' B' → logprob: -11.627022743225098

Token 3417: '3' (ID: 18)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.12211016565561295
    2. 'p' → logprob: -2.74711012840271
    3. '3' → logprob: -4.497110366821289
    4. '(p' → logprob: -4.747110366821289
    5. 'C' → logprob: -4.997110366821289
    6. 'vector' → logprob: -5.497110366821289
    7. 'b' → logprob: -5.747110366821289
    8. 'self' → logprob: -5.747110366821289
    9. '(v' → logprob: -5.872110366821289
    10. '[' → logprob: -5.872110366821289

Token 3418: 'd' (ID: 67)
  Prédit: 'd'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.002854447579011321
    2. '3' → logprob: -5.877854347229004
    3. 'D' → logprob: -10.502854347229004
    4. '_' → logprob: -11.877854347229004
    5. '_d' → logprob: -12.252854347229004
    6. 'f' → logprob: -13.752854347229004
    7. 'д' → logprob: -13.877854347229004
    8. 'df' → logprob: -14.127854347229004
    9. '(self' → logprob: -14.190354347229004
    10. '{' → logprob: -14.690354347229004

Token 3419: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.6116681098937988
    2. '(u' → logprob: -1.7366681098937988
    3. '(p' → logprob: -1.8616681098937988
    4. 'u' → logprob: -3.736668109893799
    5. '(origin' → logprob: -3.861668109893799
    6. 'self' → logprob: -4.361668109893799
    7. '(vector' → logprob: -4.611668109893799
    8. '(self' → logprob: -4.611668109893799
    9. 'p' → logprob: -4.861668109893799
    10. 'origin' → logprob: -5.236668109893799

Token 3420: ' origin' (ID: 12839)
  Prédit: 'origin'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'origin' → logprob: -0.00016420685278717428
    2. ' origin' → logprob: -8.750164031982422
    3. '           ' → logprob: -12.625164031982422
    4. '(origin' → logprob: -13.750164031982422
    5. '   ' → logprob: -14.875164031982422
    6. '                   ' → logprob: -15.375164031982422
    7. '               ' → logprob: -15.375164031982422
    8. 'Origin' → logprob: -15.875164031982422
    9. ')' → logprob: -16.125164031982422
    10. '       ' → logprob: -16.375164031982422

Token 3421: '),' (ID: 936)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.1159738302230835
    2. '),' → logprob: -2.365973949432373
    3. ',u' → logprob: -4.240973949432373
    4. ' ,' → logprob: -7.365973949432373
    5. ',v' → logprob: -8.240973472595215
    6. ',),' → logprob: -8.740973472595215
    7. ' ),' → logprob: -9.490973472595215
    8. ',p' → logprob: -9.990973472595215
    9. '           ' → logprob: -11.740973472595215
    10. '   ' → logprob: -11.865973472595215

Token 3422: ' u' (ID: 337)
  Prédit: 'u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'u' → logprob: -7.040457421680912e-05
    2. ' u' → logprob: -9.875070571899414
    3. '   ' → logprob: -11.750070571899414
    4. '(u' → logprob: -11.750070571899414
    5. '           ' → logprob: -13.375070571899414
    6. '(' → logprob: -15.000070571899414
    7. '       ' → logprob: -15.000070571899414
    8. ')' → logprob: -16.000070571899414
    9. '               ' → logprob: -16.250070571899414
    10. '	u' → logprob: -16.375070571899414

Token 3423: '),' (ID: 936)
  Prédit: '),'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),' → logprob: -0.0008259449969045818
    2. '),
' → logprob: -7.500825881958008
    3. ' ),' → logprob: -9.125825881958008
    4. ',' → logprob: -9.375825881958008
    5. ')' → logprob: -9.875825881958008
    6. ',),' → logprob: -11.375825881958008
    7. '),(' → logprob: -11.875825881958008
    8. '   ' → logprob: -12.500825881958008
    9. '),

' → logprob: -13.625825881958008
    10. '           ' → logprob: -14.375825881958008

Token 3424: ' dot' (ID: 16579)
  Prédit: 'dot'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dot' → logprob: -0.0011730826226994395
    2. ' dot' → logprob: -6.75117301940918
    3. '0' → logprob: -13.25117301940918
    4. '(dot' → logprob: -14.25117301940918
    5. '               ' → logprob: -15.87617301940918
    6. '           ' → logprob: -16.50117301940918
    7. '.dot' → logprob: -16.87617301940918
    8. '   ' → logprob: -17.00117301940918
    9. '          ' → logprob: -18.00117301940918
    10. '                ' → logprob: -18.00117301940918

Token 3425: '(vector' (ID: 43296)
  Prédit: 'vector'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'vector' → logprob: -0.0009846967877820134
    2. ' vector' → logprob: -7.5009846687316895
    3. '(vector' → logprob: -7.7509846687316895
    4. 'v' → logprob: -14.875985145568848
    5. '<vector' → logprob: -15.375985145568848
    6. '.vector' → logprob: -15.500985145568848
    7. '   ' → logprob: -16.00098419189453
    8. ' ' → logprob: -16.50098419189453
    9. '                   ' → logprob: -16.75098419189453
    10. '  ' → logprob: -17.00098419189453

Token 3426: '_sub' (ID: 11572)
  Prédit: '_sub'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sub' → logprob: -0.05139937624335289
    2. 'vector' → logprob: -3.0513994693756104
    3. '(vector' → logprob: -5.926399230957031
    4. 'sub' → logprob: -9.051399230957031
    5. '(p' → logprob: -11.551399230957031
    6. 'Sub' → logprob: -13.176399230957031
    7. '   ' → logprob: -13.301399230957031
    8. 'subtract' → logprob: -13.426399230957031
    9. ' vector' → logprob: -13.926399230957031
    10. ')' → logprob: -13.926399230957031

Token 3427: '(p' (ID: 2407)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.039998769760131836
    2. '(p' → logprob: -3.789998769760132
    3. 'vector' → logprob: -4.164999008178711
    4. '(vector' → logprob: -7.664999008178711
    5. 'v' → logprob: -8.289999008178711
    6. '(v' → logprob: -8.414999008178711
    7. ' p' → logprob: -9.789999008178711
    8. '   ' → logprob: -10.664999008178711
    9. '           ' → logprob: -11.789999008178711
    10. '  ' → logprob: -11.789999008178711

Token 3428: 'B' (ID: 33)
  Prédit: 'C'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'C' → logprob: -0.09381762146949768
    2. 'p' → logprob: -3.093817710876465
    3. 'B' → logprob: -3.218817710876465
    4. 'v' → logprob: -5.968817710876465
    5. '3' → logprob: -7.468817710876465
    6. 'c' → logprob: -8.843817710876465
    7. 't' → logprob: -9.156317710876465
    8. 'u' → logprob: -9.218817710876465
    9. 'ector' → logprob: -9.531317710876465
    10. ' p' → logprob: -9.906317710876465

Token 3429: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.01063779927790165
    2. 'v' → logprob: -4.8856377601623535
    3. 'p' → logprob: -6.6356377601623535
    4. 'C' → logprob: -6.7606377601623535
    5. '_' → logprob: -8.635638236999512
    6. 'B' → logprob: -9.260638236999512
    7. 'raw' → logprob: -10.385638236999512
    8. '_raw' → logprob: -10.885638236999512
    9. ',v' → logprob: -11.010638236999512
    10. ')' → logprob: -11.010638236999512

Token 3430: 'd' (ID: 67)
  Prédit: '3'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.524186909198761
    2. 'd' → logprob: -0.899186909198761
    3. 'v' → logprob: -7.774187088012695
    4. 'u' → logprob: -8.149187088012695
    5. 'p' → logprob: -9.399187088012695
    6. ')' → logprob: -9.774187088012695
    7. 'f' → logprob: -10.024187088012695
    8. '_' → logprob: -10.274187088012695
    9. ',' → logprob: -10.399187088012695
    10. '_d' → logprob: -10.899187088012695

Token 3431: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0002979240380227566
    2. ',v' → logprob: -8.875297546386719
    3. ',p' → logprob: -9.125297546386719
    4. ' ,' → logprob: -10.125297546386719
    5. '(' → logprob: -12.625297546386719
    6. '(p' → logprob: -12.875297546386719
    7. ',
' → logprob: -14.125297546386719
    8. '(v' → logprob: -14.500297546386719
    9. ',(' → logprob: -14.625297546386719
    10. ',u' → logprob: -15.000297546386719

Token 3432: ' origin' (ID: 12839)
  Prédit: 'origin'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'origin' → logprob: -0.0047130221500992775
    2. ' origin' → logprob: -5.50471305847168
    3. 'v' → logprob: -7.37971305847168
    4. '(origin' → logprob: -12.12971305847168
    5. ' v' → logprob: -12.62971305847168
    6. ' ' → logprob: -14.50471305847168
    7. '   ' → logprob: -14.87971305847168
    8. '
' → logprob: -15.62971305847168
    9. '(' → logprob: -16.00471305847168
    10. ')' → logprob: -16.12971305847168

Token 3433: '),' (ID: 936)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.016340505331754684
    2. '),' → logprob: -4.141340732574463
    3. ',),' → logprob: -8.766340255737305
    4. ',v' → logprob: -9.016340255737305
    5. ' ,' → logprob: -11.141340255737305
    6. ',u' → logprob: -12.266340255737305
    7. '           ' → logprob: -13.016340255737305
    8. '   ' → logprob: -13.516340255737305
    9. ' ),' → logprob: -13.766340255737305
    10. ',p' → logprob: -14.516340255737305

Token 3434: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.0005530327325686812
    2. ' v' → logprob: -7.500553131103516
    3. '	v' → logprob: -16.875553131103516
    4. ')v' → logprob: -18.875553131103516
    5. '   ' → logprob: -19.000553131103516
    6. 'u' → logprob: -19.250553131103516
    7. '(v' → logprob: -20.375553131103516
    8. '$v' → logprob: -20.500553131103516
    9. '_v' → logprob: -20.750553131103516
    10. '           ' → logprob: -21.250553131103516

Token 3435: '))
' (ID: 2210)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.04369904845952988
    2. ')' → logprob: -3.168699026107788
    3. '),' → logprob: -7.793699264526367
    4. '))
' → logprob: -8.293699264526367
    5. ')),' → logprob: -12.043699264526367
    6. '           ' → logprob: -12.043699264526367
    7. ')
' → logprob: -12.293699264526367
    8. ' ))' → logprob: -12.293699264526367
    9. '       ' → logprob: -12.418699264526367
    10. '   ' → logprob: -12.793699264526367

Token 3436: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.452767938375473
    2. ',' → logprob: -1.8277679681777954
    3. '```' → logprob: -2.702767848968506
    4. ')' → logprob: -2.952767848968506
    5. '``' → logprob: -4.577767848968506
    6. '<|end|>' → logprob: -4.702767848968506
    7. ',
' → logprob: -4.702767848968506
    8. '...' → logprob: -4.952767848968506
    9. '[' → logprob: -5.077767848968506
    10. '(' → logprob: -5.202767848968506

Token 3437: ' p' (ID: 275)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.003592590568587184
    2. '```' → logprob: -6.628592491149902
    3. 'p' (adapté à ' p') → logprob: -7.128592491149902
    4. '       ' → logprob: -7.253592491149902
    5. ' p' → logprob: -8.628592491149902
    6. '
' → logprob: -8.878592491149902
    7. ',' → logprob: -9.003592491149902
    8. '            ' → logprob: -9.378592491149902
    9. '`' → logprob: -9.878592491149902
    10. '               ' → logprob: -10.003592491149902

Token 3438: 'C' (ID: 34)
  Prédit: 'C'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'C' → logprob: -0.016059475019574165
    2. 'B' → logprob: -4.141059398651123
    3. 'A' → logprob: -11.891059875488281
    4. '=' → logprob: -12.141059875488281
    5. '_C' → logprob: -12.516059875488281
    6. '
' → logprob: -13.516059875488281
    7. ' =' → logprob: -13.641059875488281
    8. '[' → logprob: -13.766059875488281
    9. '#' → logprob: -13.891059875488281
    10. ')' → logprob: -14.016059875488281

Token 3439: '_' (ID: 62)
  Prédit: '_'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.000902884581591934
    2. '_sub' → logprob: -7.8759026527404785
    3. ' =' → logprob: -8.875903129577637
    4. '=' → logprob: -9.500903129577637
    5. '```' → logprob: -9.500903129577637
    6. '(' → logprob: -9.750903129577637
    7. ',' → logprob: -10.375903129577637
    8. ')' → logprob: -10.500903129577637
    9. '_,' → logprob: -10.875903129577637
    10. ':' → logprob: -11.000903129577637

Token 3440: '2' (ID: 17)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.01874784380197525
    2. '2' → logprob: -4.768747806549072
    3. '_' → logprob: -5.143747806549072
    4. ' (' → logprob: -5.518747806549072
    5. '[' → logprob: -9.64374828338623
    6. '0' → logprob: -10.26874828338623
    7. '_(' → logprob: -10.76874828338623
    8. '   ' → logprob: -11.01874828338623
    9. ' ' → logprob: -11.14374828338623
    10. '(_' → logprob: -11.51874828338623

Token 3441: 'd' (ID: 67)
  Prédit: 'd'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.00014025058771949261
    2. '(' → logprob: -9.250140190124512
    3. '2' → logprob: -11.000140190124512
    4. '(p' → logprob: -11.875140190124512
    5. ' (' → logprob: -12.500140190124512
    6. '_d' → logprob: -12.750140190124512
    7. 'p' → logprob: -13.000140190124512
    8. '_' → logprob: -13.250140190124512
    9. '=' → logprob: -13.375140190124512
    10. '(C' → logprob: -13.375140190124512

Token 3442: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.4741014838218689
    2. '=' → logprob: -0.9741014838218689
    3. ')' → logprob: -11.224101066589355
    4. '=(' → logprob: -12.349101066589355
    5. '=
' → logprob: -12.849101066589355
    6. ',' → logprob: -13.474101066589355
    7. ':' → logprob: -14.474101066589355
    8. ' ' → logprob: -15.224101066589355
    9. ' =
' → logprob: -15.224101066589355
    10. ' (' → logprob: -15.599101066589355

Token 3443: ' (' (ID: 350)
  Prédit: '(dot'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(dot' → logprob: -0.000555416801944375
    2. ' (' → logprob: -7.500555515289307
    3. '(' → logprob: -13.250555038452148
    4. '(tuple' → logprob: -14.875555038452148
    5. '(drop' → logprob: -16.75055503845215
    6. '   ' → logprob: -17.12555503845215
    7. '(draw' → logprob: -17.12555503845215
    8. '(
' → logprob: -17.50055503845215
    9. '(def' → logprob: -17.75055503845215
    10. '((' → logprob: -17.75055503845215

Token 3444: 'dot' (ID: 29155)
  Prédit: 'dot'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dot' → logprob: -2.045823566731997e-05
    2. '(dot' → logprob: -11.000020027160645
    3. ' dot' → logprob: -12.500020027160645
    4. '.dot' → logprob: -19.12502098083496
    5. '
' → logprob: -19.62502098083496
    6. '  ' → logprob: -20.37502098083496
    7. '-dot' → logprob: -20.50002098083496
    8. '   ' → logprob: -20.50002098083496
    9. '           ' → logprob: -21.12502098083496
    10. '(' → logprob: -21.75002098083496

Token 3445: '(vector' (ID: 43296)
  Prédit: 'vector'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'vector' → logprob: -0.008644355461001396
    2. '(vector' → logprob: -4.7586445808410645
    3. ' vector' → logprob: -10.633644104003906
    4. 'p' → logprob: -12.883644104003906
    5. '           ' → logprob: -13.883644104003906
    6. '                   ' → logprob: -14.383644104003906
    7. '<vector' → logprob: -14.633644104003906
    8. '(p' → logprob: -15.008644104003906
    9. '.vector' → logprob: -15.008644104003906
    10. '
' → logprob: -15.383644104003906

Token 3446: '_sub' (ID: 11572)
  Prédit: '_sub'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sub' → logprob: -0.00019364648323971778
    2. 'sub' → logprob: -9.00019359588623
    3. '(vector' → logprob: -10.12519359588623
    4. '(p' → logprob: -11.37519359588623
    5. 'vector' → logprob: -12.12519359588623
    6. 'Sub' → logprob: -12.12519359588623
    7. '(Sub' → logprob: -13.50019359588623
    8. 'p' → logprob: -14.00019359588623
    9. '(sub' → logprob: -14.12519359588623
    10. '_SUB' → logprob: -14.25019359588623

Token 3447: '(p' (ID: 2407)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.007707415614277124
    2. 'vector' → logprob: -4.882707595825195
    3. '(vector' → logprob: -10.132707595825195
    4. '(p' → logprob: -10.382707595825195
    5. 'origin' → logprob: -11.132707595825195
    6. '           ' → logprob: -11.757707595825195
    7. '                   ' → logprob: -13.382707595825195
    8. ' p' → logprob: -13.757707595825195
    9. '               ' → logprob: -14.132707595825195
    10. 'pos' → logprob: -14.382707595825195

Token 3448: 'C' (ID: 34)
  Prédit: 'C'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'C' → logprob: -0.08179859071969986
    2. 'p' → logprob: -2.581798553466797
    3. 'c' → logprob: -6.206798553466797
    4. 'B' → logprob: -8.081798553466797
    5. '(p' → logprob: -8.456798553466797
    6. '(' → logprob: -10.081798553466797
    7. ')' → logprob: -10.331798553466797
    8. 'b' → logprob: -10.581798553466797
    9. ' p' → logprob: -10.581798553466797
    10. '3' → logprob: -10.706798553466797

Token 3449: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.010748310014605522
    2. 'p' → logprob: -4.635748386383057
    3. 'C' → logprob: -7.760748386383057
    4. '_' → logprob: -8.510747909545898
    5. 'B' → logprob: -8.635747909545898
    6. '(p' → logprob: -9.010747909545898
    7. ' p' → logprob: -10.260747909545898
    8. ')' → logprob: -12.010747909545898
    9. '[p' → logprob: -12.260747909545898
    10. 's' → logprob: -13.385747909545898

Token 3450: 'd' (ID: 67)
  Prédit: 'd'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.005303012207150459
    2. '3' → logprob: -5.255302906036377
    3. '_' → logprob: -10.630303382873535
    4. 'C' → logprob: -10.630303382873535
    5. 'p' → logprob: -11.880303382873535
    6. ',' → logprob: -12.255303382873535
    7. '_d' → logprob: -12.880303382873535
    8. ')' → logprob: -13.755303382873535
    9. 'B' → logprob: -13.880303382873535
    10. '
' → logprob: -14.380303382873535

Token 3451: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0014911731705069542
    2. '(p' → logprob: -7.376491069793701
    3. ',p' → logprob: -7.626491069793701
    4. '(' → logprob: -8.62649154663086
    5. 'p' → logprob: -8.75149154663086
    6. ' ,' → logprob: -10.62649154663086
    7. ' p' → logprob: -12.12649154663086
    8. ')' → logprob: -13.50149154663086
    9. '           ' → logprob: -13.62649154663086
    10. '[' → logprob: -13.75149154663086

Token 3452: ' origin' (ID: 12839)
  Prédit: 'origin'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'origin' → logprob: -0.0006351164192892611
    2. ' origin' → logprob: -7.375635147094727
    3. '(origin' → logprob: -12.250635147094727
    4. 'p' → logprob: -12.875635147094727
    5. 'v' → logprob: -15.750635147094727
    6. '(' → logprob: -15.750635147094727
    7. '...' → logprob: -15.875635147094727
    8. ' p' → logprob: -16.125635147094727
    9. ')' → logprob: -16.500635147094727
    10. 'orig' → logprob: -16.625635147094727

Token 3453: '),' (ID: 936)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -6.253713218029588e-05
    2. ' ,' → logprob: -10.500062942504883
    3. ',p' → logprob: -11.125062942504883
    4. ',v' → logprob: -11.875062942504883
    5. '),' → logprob: -12.000062942504883
    6. ',
' → logprob: -12.625062942504883
    7. '           ' → logprob: -13.250062942504883
    8. ',),' → logprob: -14.625062942504883
    9. 'p' → logprob: -14.750062942504883
    10. '[' → logprob: -15.250062942504883

Token 3454: ' u' (ID: 337)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.3334747850894928
    2. 'v' → logprob: -1.4584747552871704
    3. 'u' → logprob: -4.208474636077881
    4. ' p' → logprob: -4.208474636077881
    5. 'vector' → logprob: -4.208474636077881
    6. ' v' → logprob: -5.333474636077881
    7. ' u' → logprob: -7.083474636077881
    8. ' vector' → logprob: -7.958474636077881
    9. 'c' → logprob: -8.583475112915039
    10. 'w' → logprob: -10.208475112915039

Token 3455: '),' (ID: 936)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00286918506026268
    2. '),' → logprob: -5.877869129180908
    3. ',
' → logprob: -10.127869606018066
    4. ',),' → logprob: -11.502869606018066
    5. '           ' → logprob: -12.502869606018066
    6. ' ,' → logprob: -12.877869606018066
    7. ',p' → logprob: -13.002869606018066
    8. 'p' → logprob: -14.002869606018066
    9. ')' → logprob: -14.252869606018066
    10. '[' → logprob: -14.502869606018066

Token 3456: ' dot' (ID: 16579)
  Prédit: 'dot'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dot' → logprob: -0.31327712535858154
    2. ' dot' → logprob: -1.3132771253585815
    3. '(dot' → logprob: -11.188277244567871
    4. '0' → logprob: -14.063277244567871
    5. '.dot' → logprob: -14.938277244567871
    6. '-dot' → logprob: -15.563277244567871
    7. '_dot' → logprob: -16.438276290893555
    8. '
' → logprob: -16.563276290893555
    9. ' ' → logprob: -17.188276290893555
    10. ' ' → logprob: -17.688276290893555

Token 3457: '(vector' (ID: 43296)
  Prédit: 'vector'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'vector' → logprob: -0.16098979115486145
    2. '(vector' → logprob: -1.910989761352539
    3. ' vector' → logprob: -7.285989761352539
    4. '<vector' → logprob: -9.785989761352539
    5. '_vector' → logprob: -12.285989761352539
    6. '.vector' → logprob: -12.660989761352539
    7. '           ' → logprob: -12.910989761352539
    8. 'p' → logprob: -13.035989761352539
    9. '	vector' → logprob: -13.285989761352539
    10. '-vector' → logprob: -13.410989761352539

Token 3458: '_sub' (ID: 11572)
  Prédit: '_sub'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sub' → logprob: -0.0005200279993005097
    2. '(p' → logprob: -7.7505202293396
    3. '(' → logprob: -10.500519752502441
    4. 'vector' → logprob: -10.750519752502441
    5. 'sub' → logprob: -11.125519752502441
    6. '(vector' → logprob: -11.375519752502441
    7. '_add' → logprob: -12.750519752502441
    8. 'Sub' → logprob: -13.500519752502441
    9. '
' → logprob: -13.625519752502441
    10. '((' → logprob: -14.125519752502441

Token 3459: '(p' (ID: 2407)
  Prédit: 'vector'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'vector' → logprob: -0.0001025895617203787
    2. '(vector' → logprob: -9.750102996826172
    3. 'p' → logprob: -10.125102996826172
    4. ' vector' → logprob: -12.625102996826172
    5. '(p' → logprob: -15.000102996826172
    6. '
' → logprob: -16.000102996826172
    7. '           ' → logprob: -16.000102996826172
    8. '<vector' → logprob: -16.250102996826172
    9. '               ' → logprob: -17.250102996826172
    10. '                   ' → logprob: -17.375102996826172

Token 3460: 'C' (ID: 34)
  Prédit: 'C'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'C' → logprob: -0.008250371553003788
    2. '3' → logprob: -5.1332502365112305
    3. 'p' → logprob: -6.1332502365112305
    4. 'B' → logprob: -9.75825023651123
    5. 'c' → logprob: -10.00825023651123
    6. '_' → logprob: -10.88325023651123
    7. '
' → logprob: -12.25825023651123
    8. '_c' → logprob: -12.63325023651123
    9. '_C' → logprob: -12.88325023651123
    10. ')' → logprob: -12.88325023651123

Token 3461: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.0012032082304358482
    2. 'd' → logprob: -7.1262030601501465
    3. '_' → logprob: -8.251203536987305
    4. 'p' → logprob: -9.501203536987305
    5. 'C' → logprob: -11.001203536987305
    6. ')' → logprob: -11.001203536987305
    7. 'v' → logprob: -11.876203536987305
    8. 'B' → logprob: -12.626203536987305
    9. '_d' → logprob: -12.626203536987305
    10. '_C' → logprob: -13.126203536987305

Token 3462: 'd' (ID: 67)
  Prédit: 'd'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.006696303840726614
    2. '3' → logprob: -5.1316962242126465
    3. 'p' → logprob: -8.256696701049805
    4. '_' → logprob: -8.631696701049805
    5. '_d' → logprob: -8.756696701049805
    6. ',' → logprob: -9.631696701049805
    7. ',p' → logprob: -10.631696701049805
    8. 'C' → logprob: -11.131696701049805
    9. '(p' → logprob: -11.131696701049805
    10. ')' → logprob: -12.006696701049805

Token 3463: ',' (ID: 11)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.14433875679969788
    2. '(p' → logprob: -2.144338846206665
    3. ',' → logprob: -4.144338607788086
    4. ',p' → logprob: -6.644338607788086
    5. '(' → logprob: -10.019338607788086
    6. ' p' → logprob: -10.769338607788086
    7. ')' → logprob: -12.144338607788086
    8. '...' → logprob: -12.644338607788086
    9. 'The' → logprob: -12.644338607788086
    10. '),' → logprob: -12.894338607788086

Token 3464: ' origin' (ID: 12839)
  Prédit: 'origin'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'origin' → logprob: -0.011137770488858223
    2. 'p' → logprob: -4.511137962341309
    3. ' origin' → logprob: -9.511137962341309
    4. '(origin' → logprob: -11.636137962341309
    5. '0' → logprob: -12.761137962341309
    6. '(' → logprob: -13.636137962341309
    7. 'orig' → logprob: -14.136137962341309
    8. '(p' → logprob: -14.511137962341309
    9. ' p' → logprob: -14.636137962341309
    10. 'v' → logprob: -14.761137962341309

Token 3465: '),' (ID: 936)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.011196834966540337
    2. '),' → logprob: -4.636196613311768
    3. '[' → logprob: -7.011196613311768
    4. ',p' → logprob: -8.386197090148926
    5. '(p' → logprob: -9.261197090148926
    6. ' ,' → logprob: -10.011197090148926
    7. ',),' → logprob: -10.011197090148926
    8. '           ' → logprob: -11.136197090148926
    9. ',v' → logprob: -11.386197090148926
    10. '(' → logprob: -11.636197090148926

Token 3466: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.0006987344822846353
    2. ' v' → logprob: -7.375698566436768
    3. 'p' → logprob: -9.625699043273926
    4. 'vector' → logprob: -12.500699043273926
    5. '(v' → logprob: -13.500699043273926
    6. ')v' → logprob: -15.000699043273926
    7. ')' → logprob: -15.250699043273926
    8. '	v' → logprob: -16.00069808959961
    9. ' p' → logprob: -16.37569808959961
    10. '
' → logprob: -17.00069808959961

Token 3467: '))

' (ID: 9746)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5257477164268494
    2. '))' → logprob: -0.9007477164268494
    3. '           ' → logprob: -6.275747776031494
    4. '))
' → logprob: -7.900747776031494
    5. '[' → logprob: -9.900747299194336
    6. '       ' → logprob: -9.900747299194336
    7. ')[' → logprob: -10.025747299194336
    8. ')
' → logprob: -10.150747299194336
    9. '          ' → logprob: -10.650747299194336
    10. '         ' → logprob: -11.025747299194336

Token 3468: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.03924540802836418
    2. '
' → logprob: -4.16424560546875
    3. '```' → logprob: -4.16424560546875
    4. '       ' → logprob: -5.41424560546875
    5. ',' → logprob: -7.28924560546875
    6. ')' → logprob: -7.53924560546875
    7. '``' → logprob: -7.78924560546875
    8. '`' → logprob: -8.28924560546875
    9. '#' → logprob: -8.66424560546875
    10. '            
' → logprob: -9.03924560546875

Token 3469: ' vertices' (ID: 38360)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.31920918822288513
    2. 'edges' → logprob: -1.4442092180252075
    3. ' edges' → logprob: -4.194209098815918
    4. '#' → logprob: -4.319209098815918
    5. '
' → logprob: -5.319209098815918
    6. 'import' → logprob: -6.694209098815918
    7. 'def' → logprob: -7.444209098815918
    8. 'edge' → logprob: -7.569209098815918
    9. '       ' → logprob: -7.694209098815918
    10. '   ' → logprob: -8.694209098815918

Token 3470: '_' (ID: 62)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.11385931819677353
    2. '_coords' → logprob: -2.8638594150543213
    3. '=' → logprob: -3.7388594150543213
    4. '_' → logprob: -4.113859176635742
    5. '_positions' → logprob: -5.738859176635742
    6. '2' → logprob: -5.863859176635742
    7. '_pos' → logprob: -6.613859176635742
    8. '_list' → logprob: -7.238859176635742
    9. '_in' → logprob: -7.363859176635742
    10. '   ' → logprob: -8.113859176635742

Token 3471: '2' (ID: 17)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -1.16169011592865
    2. '_coords' → logprob: -1.41169011592865
    3. '_' → logprob: -1.53669011592865
    4. '2' → logprob: -1.66169011592865
    5. ' =' → logprob: -4.0366902351379395
    6. 'coords' → logprob: -5.2866902351379395
    7. '_positions' → logprob: -5.5366902351379395
    8. '_pos' → logprob: -5.9116902351379395
    9. '_in' → logprob: -6.2866902351379395
    10. '=[' → logprob: -6.5366902351379395

Token 3472: 'd' (ID: 67)
  Prédit: 'd'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.006200615782290697
    2. ' =' → logprob: -5.631200790405273
    3. '_coords' → logprob: -6.631200790405273
    4. '_d' → logprob: -7.631200790405273
    5. '2' → logprob: -8.756200790405273
    6. '=' → logprob: -9.006200790405273
    7. '   ' → logprob: -9.381200790405273
    8. '=[
' → logprob: -10.006200790405273
    9. '[
' → logprob: -10.131200790405273
    10. 's' → logprob: -10.131200790405273

Token 3473: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2519555985927582
    2. '=' → logprob: -1.5019556283950806
    3. '=[' → logprob: -11.75195598602295
    4. ':' → logprob: -12.50195598602295
    5. '_vertices' → logprob: -12.87695598602295
    6. ')' → logprob: -13.00195598602295
    7. 's' → logprob: -13.12695598602295
    8. '_' → logprob: -13.75195598602295
    9. '=[]' → logprob: -13.75195598602295
    10. '   ' → logprob: -13.75195598602295

Token 3474: ' [' (ID: 723)
  Prédit: '[('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[(' → logprob: -0.7947012782096863
    2. '[' → logprob: -1.294701337814331
    3. '[v' → logprob: -1.544701337814331
    4. '[
' → logprob: -2.919701337814331
    5. '{
' → logprob: -5.544701099395752
    6. ' [' → logprob: -6.919701099395752
    7. '{' → logprob: -7.169701099395752
    8. '[p' → logprob: -7.294701099395752
    9. '(' → logprob: -8.29470157623291
    10. '(v' → logprob: -9.29470157623291

Token 3475: 'v' (ID: 85)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.22626233100891113
    2. 'v' → logprob: -1.6012623310089111
    3. '(v' → logprob: -7.351262092590332
    4. 'p' → logprob: -9.226262092590332
    5. ' (' → logprob: -10.226262092590332
    6. '0' → logprob: -10.851262092590332
    7. 'pos' → logprob: -11.351262092590332
    8. ' v' → logprob: -11.476262092590332
    9. '   ' → logprob: -11.476262092590332
    10. '((' → logprob: -11.976262092590332

Token 3476: 'A' (ID: 32)
  Prédit: 'A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.06324385106563568
    2. '(' → logprob: -2.813243865966797
    3. '(p' → logprob: -8.188243865966797
    4. 'B' → logprob: -8.938243865966797
    5. ' (' → logprob: -9.063243865966797
    6. 'p' → logprob: -9.063243865966797
    7. '[' → logprob: -9.438243865966797
    8. '(
' → logprob: -9.438243865966797
    9. ')' → logprob: -9.563243865966797
    10. '('' → logprob: -10.063243865966797

Token 3477: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.012728370726108551
    2. ',
' → logprob: -4.512728214263916
    3. ',p' → logprob: -7.262728214263916
    4. ' ,' → logprob: -7.387728214263916
    5. ',v' → logprob: -8.512728691101074
    6. ',(' → logprob: -9.137728691101074
    7. ')' → logprob: -12.012728691101074
    8. ',

' → logprob: -12.262728691101074
    9. ',
' → logprob: -12.262728691101074
    10. ',)' → logprob: -12.387728691101074

Token 3478: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.04914363473653793
    2. ' p' → logprob: -3.0491435527801514
    3. '           ' → logprob: -7.7991437911987305
    4. '(p' → logprob: -10.54914379119873
    5. '            ' → logprob: -10.92414379119873
    6. '                   ' → logprob: -11.04914379119873
    7. '          ' → logprob: -11.17414379119873
    8. '(' → logprob: -11.42414379119873
    9. '               ' → logprob: -11.54914379119873
    10. '   ' → logprob: -11.92414379119873

Token 3479: 'B' (ID: 33)
  Prédit: 'B'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -1.9027791495318525e-05
    2. 'C' → logprob: -10.875019073486328
    3. '_B' → logprob: -17.375019073486328
    4. ' B' → logprob: -17.625019073486328
    5. '
' → logprob: -17.750019073486328
    6. 'A' → logprob: -18.500019073486328
    7. '```' → logprob: -18.875019073486328
    8. '#' → logprob: -19.125019073486328
    9. ')' → logprob: -19.625019073486328
    10. '<|end|>' → logprob: -19.750019073486328

Token 3480: '_' (ID: 62)
  Prédit: '_'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -5.157039049663581e-05
    2. ',' → logprob: -10.250051498413086
    3. '2' → logprob: -11.875051498413086
    4. ')' → logprob: -13.000051498413086
    5. '
' → logprob: -13.375051498413086
    6. '```' → logprob: -13.375051498413086
    7. '(' → logprob: -14.250051498413086
    8. ' _' → logprob: -14.375051498413086
    9. '),' → logprob: -15.000051498413086
    10. '_,' → logprob: -15.000051498413086

Token 3481: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -9.73446003627032e-05
    2. '_' → logprob: -9.250097274780273
    3. ' ' → logprob: -14.375097274780273
    4. '0' → logprob: -14.875097274780273
    5. '
' → logprob: -15.375097274780273
    6. '(' → logprob: -17.875097274780273
    7. ',' → logprob: -17.875097274780273
    8. '```' → logprob: -17.875097274780273
    9. '[' → logprob: -18.000097274780273
    10. ')' → logprob: -18.000097274780273

Token 3482: 'd' (ID: 67)
  Prédit: 'd'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -3.4121114822482923e-06
    2. 'д' → logprob: -13.250003814697266
    3. '_d' → logprob: -14.125003814697266
    4. '0' → logprob: -14.875003814697266
    5. ',' → logprob: -15.750003814697266
    6. ')' → logprob: -15.875003814697266
    7. '2' → logprob: -16.000003814697266
    8. '
' → logprob: -16.250003814697266
    9. '[' → logprob: -17.250003814697266
    10. '   ' → logprob: -17.500003814697266

Token 3483: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.000933017407078296
    2. ',p' → logprob: -7.5009331703186035
    3. ' ,' → logprob: -8.250932693481445
    4. ',
' → logprob: -9.125932693481445
    5. '           ' → logprob: -12.875932693481445
    6. ',v' → logprob: -12.875932693481445
    7. '   ' → logprob: -13.500932693481445
    8. '(p' → logprob: -14.875932693481445
    9. '       ' → logprob: -15.125932693481445
    10. 'p' → logprob: -15.125932693481445

Token 3484: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.6326309442520142
    2. ' p' → logprob: -0.7576309442520142
    3. '           ' → logprob: -11.132631301879883
    4. '(p' → logprob: -12.257631301879883
    5. ' ' → logprob: -13.007631301879883
    6. '            ' → logprob: -13.382631301879883
    7. ' (' → logprob: -13.882631301879883
    8. '(' → logprob: -14.007631301879883
    9. '          ' → logprob: -14.007631301879883
    10. ' ' → logprob: -14.007631301879883

Token 3485: 'C' (ID: 34)
  Prédit: 'C'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'C' → logprob: -2.7729658540920354e-05
    2. 'B' → logprob: -11.250027656555176
    3. 'A' → logprob: -12.375027656555176
    4. '_C' → logprob: -12.375027656555176
    5. '
' → logprob: -13.250027656555176
    6. '(' → logprob: -14.125027656555176
    7. 'c' → logprob: -14.375027656555176
    8. ')' → logprob: -14.500027656555176
    9. '[' → logprob: -14.500027656555176
    10. ' C' → logprob: -14.750027656555176

Token 3486: '_' (ID: 62)
  Prédit: '_'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.0002798087371047586
    2. ')' → logprob: -8.625279426574707
    3. '[' → logprob: -10.375279426574707
    4. '2' → logprob: -10.750279426574707
    5. ')_' → logprob: -10.750279426574707
    6. ',' → logprob: -12.125279426574707
    7. ')]' → logprob: -12.750279426574707
    8. '```' → logprob: -12.875279426574707
    9. ' _' → logprob: -13.000279426574707
    10. '_d' → logprob: -13.000279426574707

Token 3487: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0010041086934506893
    2. '_' → logprob: -7.501004219055176
    3. '0' → logprob: -7.751004219055176
    4. ')' → logprob: -12.001004219055176
    5. '[' → logprob: -12.501004219055176
    6. '1' → logprob: -12.626004219055176
    7. ' ' → logprob: -13.251004219055176
    8. '   ' → logprob: -13.751004219055176
    9. '
' → logprob: -13.751004219055176
    10. '3' → logprob: -14.001004219055176

Token 3488: 'd' (ID: 67)
  Prédit: 'd'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -4.842555426876061e-06
    2. '2' → logprob: -13.500004768371582
    3. '0' → logprob: -13.625004768371582
    4. '_d' → logprob: -13.875004768371582
    5. 'д' → logprob: -14.500004768371582
    6. ' d' → logprob: -14.875004768371582
    7. '(' → logprob: -16.2500057220459
    8. '[' → logprob: -16.6250057220459
    9. '
' → logprob: -17.0000057220459
    10. '(d' → logprob: -17.2500057220459

Token 3489: ']
' (ID: 1592)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.7186158299446106
    2. ']' → logprob: -0.7186158299446106
    3. ']
' → logprob: -4.218616008758545
    4. ',
' → logprob: -4.718616008758545
    5. '[' → logprob: -7.468616008758545
    6. ' ]' → logprob: -8.593615531921387
    7. ' ,' → logprob: -8.593615531921387
    8. '           ' → logprob: -9.718615531921387
    9. '[
' → logprob: -9.843615531921387
    10. '   ' → logprob: -10.093615531921387

Token 3490: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.015040358528494835
    2. 'edges' → logprob: -5.390040397644043
    3. '
' → logprob: -5.515040397644043
    4. '```' → logprob: -6.515040397644043
    5. 'for' → logprob: -6.640040397644043
    6. '       ' → logprob: -6.890040397644043
    7. ' edges' → logprob: -6.890040397644043
    8. ' for' → logprob: -7.640040397644043
    9. ',' → logprob: -8.515040397644043
    10. '#' → logprob: -8.765040397644043

Token 3491: ' edges' (ID: 22569)
  Prédit: 'edges'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'edges' (adapté à ' edges') → logprob: -1.101179838180542
    2. '           ' → logprob: -1.226179838180542
    3. 'for' → logprob: -1.476179838180542
    4. ' for' → logprob: -2.726179838180542
    5. ' edges' → logprob: -3.101179838180542
    6. '#' → logprob: -4.476180076599121
    7. '   ' → logprob: -5.101180076599121
    8. '
' → logprob: -5.976180076599121
    9. 'edge' → logprob: -6.101180076599121
    10. 'i' → logprob: -6.226180076599121

Token 3492: '_' (ID: 62)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.048829782754182816
    2. '=' → logprob: -3.0488297939300537
    3. '_indices' → logprob: -9.923830032348633
    4. '_edges' → logprob: -9.923830032348633
    5. '=[' → logprob: -10.673830032348633
    6. '_idx' → logprob: -11.048830032348633
    7. 's' → logprob: -11.048830032348633
    8. '_' → logprob: -11.173830032348633
    9. ':' → logprob: -11.173830032348633
    10. '   ' → logprob: -11.423830032348633

Token 3493: '2' (ID: 17)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.24251532554626465
    2. '=' → logprob: -2.6175153255462646
    3. '2' → logprob: -2.8675153255462646
    4. '[
' → logprob: -3.2425153255462646
    5. '[(' → logprob: -5.117515563964844
    6. '_indices' → logprob: -5.367515563964844
    7. '=[
' → logprob: -5.367515563964844
    8. '_' → logprob: -5.492515563964844
    9. '[' → logprob: -5.492515563964844
    10. '_edges' → logprob: -5.867515563964844

Token 3494: 'd' (ID: 67)
  Prédit: 'd'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.00012332366895861924
    2. '_d' → logprob: -9.250123023986816
    3. '2' → logprob: -11.750123023986816
    4. '[' → logprob: -12.000123023986816
    5. '[
' → logprob: -12.500123023986816
    6. '   ' → logprob: -13.250123023986816
    7. '[]' → logprob: -13.375123023986816
    8. 'dx' → logprob: -13.625123023986816
    9. '[]
' → logprob: -13.875123023986816
    10. 'D' → logprob: -14.375123023986816

Token 3495: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.030264243483543396
    2. '=' → logprob: -3.530264139175415
    3. '=[' → logprob: -8.030263900756836
    4. '=[
' → logprob: -9.905263900756836
    5. 's' → logprob: -10.280263900756836
    6. '=[]' → logprob: -10.655263900756836
    7. ':' → logprob: -10.905263900756836
    8. '_edges' → logprob: -11.405263900756836
    9. ' =[' → logprob: -11.905263900756836
    10. ' ' → logprob: -12.030263900756836

Token 3496: ' [
' (ID: 4240)
  Prédit: '[('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[(' → logprob: -0.20179474353790283
    2. '[
' → logprob: -1.7017947435379028
    3. '[' → logprob: -8.451794624328613
    4. '[((' → logprob: -8.701794624328613
    5. ' [(' → logprob: -13.701794624328613
    6. ' [
' → logprob: -15.201794624328613
    7. '[v' → logprob: -17.70179557800293
    8. '[]
' → logprob: -17.70179557800293
    9. '[p' → logprob: -18.20179557800293
    10. '   ' → logprob: -18.70179557800293

Token 3497: '               ' (ID: 506)
  Prédit: '(v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(v' → logprob: -0.2657254934310913
    2. ' (' → logprob: -2.640725612640381
    3. '((' → logprob: -2.640725612640381
    4. '           ' → logprob: -3.265725612640381
    5. '               ' → logprob: -3.515725612640381
    6. '(' → logprob: -4.265725612640381
    7. '   ' → logprob: -5.265725612640381
    8. '(p' → logprob: -6.390725612640381
    9. '[(' → logprob: -6.890725612640381
    10. ' ((' → logprob: -8.390725135803223

Token 3498: ' (' (ID: 350)
  Prédit: '(v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(v' → logprob: -0.0072126989252865314
    2. '(' (adapté à ' (') → logprob: -5.3822126388549805
    3. ' (' → logprob: -6.5072126388549805
    4. '((' → logprob: -7.1322126388549805
    5. '   ' → logprob: -9.00721263885498
    6. '(p' → logprob: -9.13221263885498
    7. '[(' → logprob: -10.88221263885498
    8. '           ' → logprob: -11.25721263885498
    9. '(vertices' → logprob: -11.38221263885498
    10. '(vertex' → logprob: -11.88221263885498

Token 3499: 'v' (ID: 85)
  Prédit: '(vertices'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(vertices' → logprob: -0.4839428663253784
    2. 'vertices' → logprob: -1.7339428663253784
    3. '(v' → logprob: -1.8589428663253784
    4. '(' → logprob: -3.108942985534668
    5. '(p' → logprob: -5.733942985534668
    6. ' (' → logprob: -6.358942985534668
    7. 'v' → logprob: -7.108942985534668
    8. ' vertices' → logprob: -8.608942985534668
    9. '((' → logprob: -8.608942985534668
    10. 'p' → logprob: -8.733942985534668

Token 3500: 'A' (ID: 32)
  Prédit: 'A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.0037940195761621
    2. '(' → logprob: -6.628794193267822
    3. '0' → logprob: -6.628794193267822
    4. '[' → logprob: -7.503794193267822
    5. 'vertices' → logprob: -8.003793716430664
    6. '(vertices' → logprob: -9.253793716430664
    7. 'B' → logprob: -9.628793716430664
    8. '1' → logprob: -10.253793716430664
    9. '
' → logprob: -10.753793716430664
    10. ')' → logprob: -12.128793716430664

Token 3501: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0037034007254987955
    2. ',p' → logprob: -5.878703594207764
    3. ',v' → logprob: -7.753703594207764
    4. ' ,' → logprob: -8.003703117370605
    5. ',
' → logprob: -9.253703117370605
    6. '   ' → logprob: -10.878703117370605
    7. ',n' → logprob: -12.253703117370605
    8. ',(' → logprob: -13.378703117370605
    9. ' ' → logprob: -13.378703117370605
    10. ',e' → logprob: -13.628703117370605

Token 3502: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.0030428392346948385
    2. ' p' → logprob: -6.628042697906494
    3. 'vertices' → logprob: -6.628042697906494
    4. '           ' → logprob: -8.128043174743652
    5. '   ' → logprob: -10.878043174743652
    6. ' vertices' → logprob: -11.003043174743652
    7. '(p' → logprob: -11.128043174743652
    8. '(' → logprob: -11.378043174743652
    9. '       ' → logprob: -12.503043174743652
    10. '         ' → logprob: -12.503043174743652

Token 3503: 'B' (ID: 33)
  Prédit: 'B'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -4.246537173457909e-06
    2. 'C' → logprob: -12.625003814697266
    3. '(' → logprob: -14.875003814697266
    4. '
' → logprob: -15.875003814697266
    5. ')' → logprob: -16.375003814697266
    6. '#' → logprob: -16.500003814697266
    7. ' B' → logprob: -16.750003814697266
    8. '(B' → logprob: -16.875003814697266
    9. '[' → logprob: -17.125003814697266
    10. '_B' → logprob: -17.375003814697266

Token 3504: '_' (ID: 62)
  Prédit: '_'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -9.662937372922897e-05
    2. '[' → logprob: -9.875096321105957
    3. ')' → logprob: -10.750096321105957
    4. '```' → logprob: -11.625096321105957
    5. ')_' → logprob: -12.000096321105957
    6. '),' → logprob: -13.125096321105957
    7. '2' → logprob: -13.250096321105957
    8. '   ' → logprob: -14.125096321105957
    9. '(' → logprob: -14.500096321105957
    10. ' _' → logprob: -14.875096321105957

Token 3505: '2' (ID: 17)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.6333449482917786
    2. '2' → logprob: -0.7583449482917786
    3. '[' → logprob: -8.008344650268555
    4. ')' → logprob: -8.258344650268555
    5. '```' → logprob: -10.133344650268555
    6. '(' → logprob: -10.383344650268555
    7. '
' → logprob: -11.133344650268555
    8. '0' → logprob: -11.258344650268555
    9. '),' → logprob: -11.883344650268555
    10. '((' → logprob: -12.508344650268555

Token 3506: 'd' (ID: 67)
  Prédit: 'd'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.0025915890000760555
    2. '_' → logprob: -6.877591609954834
    3. '_d' → logprob: -6.877591609954834
    4. '2' → logprob: -7.877591609954834
    5. ')' → logprob: -9.752591133117676
    6. '0' → logprob: -9.877591133117676
    7. '),' → logprob: -11.252591133117676
    8. '),
' → logprob: -12.252591133117676
    9. ')
' → logprob: -12.502591133117676
    10. 'д' → logprob: -12.627591133117676

Token 3507: ',' (ID: 11)
  Prédit: '),
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),
' → logprob: -0.1614430993795395
    2. '),' → logprob: -1.9114431142807007
    3. '   ' → logprob: -7.91144323348999
    4. '),(' → logprob: -8.036442756652832
    5. '       ' → logprob: -8.911442756652832
    6. '           ' → logprob: -9.036442756652832
    7. '),
' → logprob: -9.661442756652832
    8. '),

' → logprob: -9.786442756652832
    9. ')' → logprob: -9.911442756652832
    10. ',' → logprob: -10.536442756652832

Token 3508: ' Edge' (ID: 16396)
  Prédit: 'Edge'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Edge' → logprob: -0.03832845762372017
    2. ' Edge' → logprob: -3.2883284091949463
    3. '   ' → logprob: -9.038328170776367
    4. ')' → logprob: -10.163328170776367
    5. 'self' → logprob: -10.163328170776367
    6. '       ' → logprob: -11.163328170776367
    7. '    ' → logprob: -11.163328170776367
    8. '(' → logprob: -11.663328170776367
    9. '0' → logprob: -12.038328170776367
    10. 'Vertex' → logprob: -12.163328170776367

Token 3509: '(origin' (ID: 96705)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.7225140929222107
    2. '(sorted' → logprob: -1.0975141525268555
    3. 'sorted' → logprob: -2.5975141525268555
    4. '(Vertex' → logprob: -2.8475141525268555
    5. '(B' → logprob: -3.5975141525268555
    6. 'Vertex' → logprob: -4.4725141525268555
    7. 'origin' → logprob: -5.8475141525268555
    8. '(origin' → logprob: -6.0975141525268555
    9. '(vertices' → logprob: -6.5975141525268555
    10. 'A' → logprob: -7.0975141525268555

Token 3510: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.005203640088438988
    2. ',v' → logprob: -6.130203723907471
    3. ',B' → logprob: -6.130203723907471
    4. ',
' → logprob: -8.505203247070312
    5. ',p' → logprob: -8.630203247070312
    6. ' ,' → logprob: -9.005203247070312
    7. 'B' → logprob: -9.755203247070312
    8. '   ' → logprob: -10.505203247070312
    9. '(' → logprob: -10.755203247070312
    10. '[' → logprob: -10.755203247070312

Token 3511: ' B' (ID: 418)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.002158114453777671
    2. 'other' → logprob: -6.252158164978027
    3. ' B' → logprob: -8.627158164978027
    4. 'sorted' → logprob: -10.252158164978027
    5. ' other' → logprob: -12.627158164978027
    6. '   ' → logprob: -12.627158164978027
    7. ' ' → logprob: -13.002158164978027
    8. 'Other' → logprob: -14.439658164978027
    9. '  ' → logprob: -14.627158164978027
    10. 'others' → logprob: -15.002158164978027

Token 3512: ')),
' (ID: 13846)
  Prédit: ')),
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')),
' → logprob: -0.02208101376891136
    2. ')),' → logprob: -3.897080898284912
    3. '))' → logprob: -7.147080898284912
    4. ')' → logprob: -7.522080898284912
    5. '))
' → logprob: -10.02208137512207
    6. '   ' → logprob: -10.39708137512207
    7. ' )),
' → logprob: -10.39708137512207
    8. '),
' → logprob: -10.64708137512207
    9. '),' → logprob: -10.77208137512207
    10. ')
' → logprob: -11.14708137512207

Token 3513: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0234107356518507
    2. '           ' → logprob: -4.523410797119141
    3. '(' → logprob: -5.398410797119141
    4. '(p' → logprob: -6.023410797119141
    5. '(v' → logprob: -6.023410797119141
    6. '                ' → logprob: -7.023410797119141
    7. ' (' → logprob: -7.398410797119141
    8. '       ' → logprob: -7.898410797119141
    9. '   ' → logprob: -8.02341079711914
    10. '                   ' → logprob: -8.27341079711914

Token 3514: ' (' (ID: 350)
  Prédit: '(p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(p' → logprob: -0.03904123976826668
    2. '           ' → logprob: -4.039041042327881
    3. ' (' → logprob: -4.664041042327881
    4. '               ' → logprob: -4.914041042327881
    5. '(v' → logprob: -5.789041042327881
    6. '(' (adapté à ' (') → logprob: -7.414041042327881
    7. '   ' → logprob: -9.039041519165039
    8. ' ' → logprob: -10.039041519165039
    9. '(P' → logprob: -10.789041519165039
    10. '                   ' → logprob: -11.039041519165039

Token 3515: 'v' (ID: 85)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.0029927976429462433
    2. 'v' → logprob: -6.502992630004883
    3. ' p' → logprob: -7.377992630004883
    4. '           ' → logprob: -7.377992630004883
    5. '(p' → logprob: -9.377992630004883
    6. '               ' → logprob: -10.127992630004883
    7. '                   ' → logprob: -10.377992630004883
    8. '   ' → logprob: -10.377992630004883
    9. '(' → logprob: -11.627992630004883
    10. 'vertices' → logprob: -12.127992630004883

Token 3516: 'A' (ID: 32)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.09119721502065659
    2. 'A' → logprob: -2.4661972522735596
    3. 'C' → logprob: -6.2161970138549805
    4. 'p' → logprob: -8.96619701385498
    5. '[' → logprob: -9.59119701385498
    6. '(' → logprob: -11.09119701385498
    7. '   ' → logprob: -11.71619701385498
    8. '(p' → logprob: -12.09119701385498
    9. 'b' → logprob: -12.21619701385498
    10. ')' → logprob: -12.27869701385498

Token 3517: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.004264539107680321
    2. ',p' → logprob: -5.5042643547058105
    3. ' ,' → logprob: -8.629264831542969
    4. ',
' → logprob: -12.629264831542969
    5. ',v' → logprob: -14.004264831542969
    6. '   ' → logprob: -14.504264831542969
    7. 'p' → logprob: -15.004264831542969
    8. ',(' → logprob: -15.254264831542969
    9. '(p' → logprob: -15.629264831542969
    10. ',P' → logprob: -15.754264831542969

Token 3518: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.17984122037887573
    2. ' p' → logprob: -1.8048412799835205
    3. '           ' → logprob: -10.304841041564941
    4. '   ' → logprob: -10.929841041564941
    5. '(p' → logprob: -12.054841041564941
    6. '    ' → logprob: -12.054841041564941
    7. ' ' → logprob: -12.429841041564941
    8. ' ' → logprob: -12.679841041564941
    9. '            ' → logprob: -12.679841041564941
    10. '	p' → logprob: -13.054841041564941

Token 3519: 'C' (ID: 34)
  Prédit: 'C'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'C' → logprob: -0.00017112065688706934
    2. 'B' → logprob: -8.750170707702637
    3. 'p' → logprob: -12.750170707702637
    4. ' C' → logprob: -13.000170707702637
    5. '[' → logprob: -13.125170707702637
    6. '
' → logprob: -13.500170707702637
    7. '(p' → logprob: -14.375170707702637
    8. '#' → logprob: -14.500170707702637
    9. ' ' → logprob: -14.500170707702637
    10. '   ' → logprob: -15.250170707702637

Token 3520: '_' (ID: 62)
  Prédit: '_'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -4.842555426876061e-06
    2. '(' → logprob: -13.000004768371582
    3. '[' → logprob: -14.125004768371582
    4. '```' → logprob: -14.875004768371582
    5. ')' → logprob: -15.500004768371582
    6. '(None' → logprob: -15.875004768371582
    7. '(_' → logprob: -16.0000057220459
    8. ''_' → logprob: -16.1250057220459
    9. ',' → logprob: -16.2500057220459
    10. '0' → logprob: -16.2500057220459

Token 3521: '2' (ID: 17)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -2.534558552724775e-05
    2. '2' → logprob: -11.375025749206543
    3. '(' → logprob: -12.000025749206543
    4. ' (' → logprob: -13.500025749206543
    5. ' _' → logprob: -13.875025749206543
    6. '0' → logprob: -13.875025749206543
    7. ')' → logprob: -14.125025749206543
    8. '[' → logprob: -14.375025749206543
    9. '```' → logprob: -14.625025749206543
    10. 'v' → logprob: -14.750025749206543

Token 3522: 'd' (ID: 67)
  Prédit: 'd'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.005093818064779043
    2. '_' → logprob: -5.505094051361084
    3. '2' → logprob: -7.005094051361084
    4. '_d' → logprob: -9.255093574523926
    5. '3' → logprob: -12.255093574523926
    6. 'A' → logprob: -13.005093574523926
    7. 'д' → logprob: -13.880093574523926
    8. 'ed' → logprob: -14.130093574523926
    9. 'D' → logprob: -14.630093574523926
    10. '(d' → logprob: -14.630093574523926

Token 3523: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0005140714929439127
    2. ' ,' → logprob: -7.875514030456543
    3. '[' → logprob: -10.250514030456543
    4. '           ' → logprob: -10.750514030456543
    5. '(' → logprob: -11.250514030456543
    6. ',p' → logprob: -11.375514030456543
    7. ',(' → logprob: -11.500514030456543
    8. ',v' → logprob: -12.000514030456543
    9. ',
' → logprob: -12.125514030456543
    10. '   ' → logprob: -12.125514030456543

Token 3524: ' Edge' (ID: 16396)
  Prédit: 'Edge'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Edge' → logprob: -0.0025899310130625963
    2. ' Edge' → logprob: -6.127589702606201
    3. 'B' → logprob: -8.12759017944336
    4. 'C' → logprob: -10.37759017944336
    5. 'Origin' → logprob: -10.87759017944336
    6. '   ' → logprob: -11.00259017944336
    7. 'p' → logprob: -11.62759017944336
    8. 'Face' → logprob: -11.75259017944336
    9. 'origin' → logprob: -11.75259017944336
    10. ' ' → logprob: -12.12759017944336

Token 3525: '(origin' (ID: 96705)
  Prédit: 'origin'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'origin' → logprob: -0.575655996799469
    2. 'B' → logprob: -1.2006559371948242
    3. '(origin' → logprob: -2.325655937194824
    4. '(B' → logprob: -3.325655937194824
    5. 'Origin' → logprob: -6.700655937194824
    6. '(' → logprob: -7.575655937194824
    7. ' origin' → logprob: -7.950655937194824
    8. 'C' → logprob: -8.700655937194824
    9. 'orig' → logprob: -8.700655937194824
    10. '(C' → logprob: -9.075655937194824

Token 3526: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0023212952073663473
    2. ',C' → logprob: -6.627321243286133
    3. ',B' → logprob: -7.502321243286133
    4. ' ,' → logprob: -8.252321243286133
    5. ',
' → logprob: -9.502321243286133
    6. 'C' → logprob: -10.002321243286133
    7. 'B' → logprob: -11.252321243286133
    8. ',c' → logprob: -11.877321243286133
    9. ',b' → logprob: -12.127321243286133
    10. '   ' → logprob: -12.502321243286133

Token 3527: ' C' (ID: 363)
  Prédit: 'C'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'C' → logprob: -0.0013458272442221642
    2. 'B' → logprob: -6.626345634460449
    3. ' C' → logprob: -10.87634563446045
    4. ' ' → logprob: -14.62634563446045
    5. '   ' → logprob: -15.12634563446045
    6. '
' → logprob: -16.001346588134766
    7. 'sorted' → logprob: -17.626346588134766
    8. '  ' → logprob: -17.751346588134766
    9. ' B' → logprob: -17.751346588134766
    10. '
' → logprob: -18.126346588134766

Token 3528: ')),
' (ID: 13846)
  Prédit: '),
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),
' → logprob: -0.7202627658843994
    2. ')),
' → logprob: -0.7202627658843994
    3. '),' → logprob: -4.59526252746582
    4. '               ' → logprob: -4.72026252746582
    5. ')),' → logprob: -5.22026252746582
    6. ')' → logprob: -6.59526252746582
    7. '))' → logprob: -7.97026252746582
    8. ')],
' → logprob: -8.47026252746582
    9. '           ' → logprob: -8.59526252746582
    10. '),

' → logprob: -10.59526252746582

Token 3529: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.7872885465621948
    2. '(p' → logprob: -1.0372885465621948
    3. ' (' → logprob: -2.2872886657714844
    4. '(' → logprob: -2.5372886657714844
    5. '           ' → logprob: -5.162288665771484
    6. '   ' → logprob: -5.787288665771484
    7. '(v' → logprob: -7.162288665771484
    8. ' ' → logprob: -9.662288665771484
    9. '                ' → logprob: -9.912288665771484
    10. '                   ' → logprob: -10.037288665771484

Token 3530: ' (' (ID: 350)
  Prédit: '(p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(p' → logprob: -0.010931206867098808
    2. '           ' → logprob: -5.135931015014648
    3. ' (' → logprob: -5.510931015014648
    4. '(' (adapté à ' (') → logprob: -7.135931015014648
    5. '   ' → logprob: -9.635931015014648
    6. '               ' → logprob: -9.760931015014648
    7. ' ' → logprob: -11.635931015014648
    8. '       ' → logprob: -12.260931015014648
    9. '(P' → logprob: -12.260931015014648
    10. '                   ' → logprob: -13.135931015014648

Token 3531: 'p' (ID: 79)
  Prédit: 'p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.0017383632948622108
    2. '(p' → logprob: -6.501738548278809
    3. ' p' → logprob: -9.251738548278809
    4. '   ' → logprob: -9.501738548278809
    5. '           ' → logprob: -10.501738548278809
    6. ' (' → logprob: -11.501738548278809
    7. '(' → logprob: -11.876738548278809
    8. '       ' → logprob: -12.001738548278809
    9. ' ' → logprob: -13.001738548278809
    10. '  ' → logprob: -13.751738548278809

Token 3532: 'B' (ID: 33)
  Prédit: 'B'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.0002991160727106035
    2. 'C' → logprob: -8.125299453735352
    3. '[' → logprob: -13.500299453735352
    4. ' B' → logprob: -14.375299453735352
    5. '
' → logprob: -15.125299453735352
    6. '(' → logprob: -15.625299453735352
    7. '#' → logprob: -16.12529945373535
    8. 'A' → logprob: -16.50029945373535
    9. 'vertices' → logprob: -16.62529945373535
    10. '(B' → logprob: -17.00029945373535

Token 3533: '_' (ID: 62)
  Prédit: '_'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.0007443527574650943
    2. ',' → logprob: -7.500744342803955
    3. '[' → logprob: -9.000744819641113
    4. '_,' → logprob: -11.125744819641113
    5. ',p' → logprob: -11.250744819641113
    6. '
' → logprob: -11.750744819641113
    7. 'p' → logprob: -12.250744819641113
    8. '```' → logprob: -12.250744819641113
    9. ' ,' → logprob: -12.750744819641113
    10. 'C' → logprob: -13.125744819641113

Token 3534: '2' (ID: 17)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.10233963280916214
    2. '2' → logprob: -2.352339744567871
    3. '0' → logprob: -6.602339744567871
    4. '[' → logprob: -8.102339744567871
    5. ',' → logprob: -9.102339744567871
    6. '
' → logprob: -9.477339744567871
    7. 'C' → logprob: -9.977339744567871
    8. '1' → logprob: -10.102339744567871
    9. 'p' → logprob: -10.227339744567871
    10. '```' → logprob: -10.477339744567871

Token 3535: 'd' (ID: 67)
  Prédit: 'd'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.03118687868118286
    2. '2' → logprob: -3.781186819076538
    3. '_' → logprob: -5.031187057495117
    4. '_d' → logprob: -6.656187057495117
    5. 'p' → logprob: -9.906187057495117
    6. '(' → logprob: -11.281187057495117
    7. '[' → logprob: -11.656187057495117
    8. 'ed' → logprob: -12.656187057495117
    9. ',' → logprob: -12.781187057495117
    10. 'c' → logprob: -12.781187057495117

Token 3536: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00018863992590922862
    2. ' ,' → logprob: -9.250188827514648
    3. ',p' → logprob: -9.500188827514648
    4. ',v' → logprob: -12.125188827514648
    5. '',' → logprob: -12.375188827514648
    6. ',
' → logprob: -12.750188827514648
    7. ',(' → logprob: -13.875188827514648
    8. '(' → logprob: -14.625188827514648
    9. '`,' → logprob: -14.625188827514648
    10. '[' → logprob: -14.750188827514648

Token 3537: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.2256796807050705
    2. ' p' → logprob: -1.600679636001587
    3. ' (' → logprob: -9.100679397583008
    4. '(p' → logprob: -9.225679397583008
    5. '(' → logprob: -10.225679397583008
    6. 'v' → logprob: -11.850679397583008
    7. '           ' → logprob: -12.350679397583008
    8. ' ' → logprob: -13.100679397583008
    9. '            ' → logprob: -13.725679397583008
    10. ' v' → logprob: -13.975679397583008

Token 3538: 'C' (ID: 34)
  Prédit: 'C'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'C' → logprob: -4.60414821645827e-06
    2. '(' → logprob: -13.250004768371582
    3. 'A' → logprob: -13.875004768371582
    4. 'B' → logprob: -14.375004768371582
    5. '[' → logprob: -14.375004768371582
    6. '_C' → logprob: -15.875004768371582
    7. 'c' → logprob: -16.000003814697266
    8. ' C' → logprob: -16.625003814697266
    9. '_c' → logprob: -17.000003814697266
    10. '(
' → logprob: -17.250003814697266

Token 3539: '_' (ID: 62)
  Prédit: '_'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.00016504127415828407
    2. '[' → logprob: -9.000164985656738
    3. '```' → logprob: -10.625164985656738
    4. ')_' → logprob: -11.875164985656738
    5. ')' → logprob: -12.000164985656738
    6. '   ' → logprob: -14.125164985656738
    7. '[
' → logprob: -14.875164985656738
    8. ')[' → logprob: -15.000164985656738
    9. ''_' → logprob: -15.125164985656738
    10. '``' → logprob: -15.375164985656738

Token 3540: '2' (ID: 17)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.021044179797172546
    2. '2' → logprob: -3.8960442543029785
    3. '[' → logprob: -7.8960442543029785
    4. '```' → logprob: -9.77104377746582
    5. '0' → logprob: -10.39604377746582
    6. '_d' → logprob: -11.27104377746582
    7. ')' → logprob: -11.39604377746582
    8. '(' → logprob: -11.89604377746582
    9. ',' → logprob: -13.14604377746582
    10. 'd' → logprob: -13.77104377746582

Token 3541: 'd' (ID: 67)
  Prédit: 'd'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.0038629011251032352
    2. '_d' → logprob: -6.1288628578186035
    3. '_' → logprob: -6.6288628578186035
    4. '2' → logprob: -8.003863334655762
    5. '[' → logprob: -11.253863334655762
    6. 'д' → logprob: -13.003863334655762
    7. '```' → logprob: -14.003863334655762
    8. '   ' → logprob: -14.003863334655762
    9. ')' → logprob: -14.753863334655762
    10. ' ' → logprob: -14.878863334655762

Token 3542: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.03902507200837135
    2. ')' → logprob: -3.289025068283081
    3. '):' → logprob: -8.16402530670166
    4. ',)' → logprob: -8.28902530670166
    5. '),' → logprob: -9.16402530670166
    6. '):
' → logprob: -9.16402530670166
    7. ')]' → logprob: -9.78902530670166
    8. ' ,' → logprob: -10.53902530670166
    9. '   ' → logprob: -10.66402530670166
    10. '[' → logprob: -10.78902530670166

Token 3543: ' Edge' (ID: 16396)
  Prédit: 'Edge'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Edge' → logprob: -0.07896899431943893
    2. ' Edge' → logprob: -2.5789690017700195
    3. 'Face' → logprob: -10.20396900177002
    4. ')' → logprob: -11.20396900177002
    5. '(' → logprob: -12.07896900177002
    6. '<Edge' → logprob: -12.20396900177002
    7. '   ' → logprob: -12.45396900177002
    8. 'edge' → logprob: -12.82896900177002
    9. ' ' → logprob: -13.32896900177002
    10. '       ' → logprob: -13.45396900177002

Token 3544: '(B' (ID: 8409)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.5762035846710205
    2. '(B' → logprob: -0.8262035846710205
    3. '(p' → logprob: -9.201203346252441
    4. ' B' → logprob: -9.826203346252441
    5. '(' → logprob: -11.076203346252441
    6. 'origin' → logprob: -11.201203346252441
    7. 'p' → logprob: -11.326203346252441
    8. 'Origin' → logprob: -11.326203346252441
    9. '[B' → logprob: -11.576203346252441
    10. 'C' → logprob: -12.701203346252441

Token 3545: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.001326433615759015
    2. ',p' → logprob: -7.126326560974121
    3. ',C' → logprob: -8.126326560974121
    4. ' ,' → logprob: -8.501326560974121
    5. ',
' → logprob: -11.626326560974121
    6. 'p' → logprob: -12.126326560974121
    7. 'C' → logprob: -13.751326560974121
    8. ',c' → logprob: -13.876326560974121
    9. ',P' → logprob: -14.126326560974121
    10. '',' → logprob: -14.376326560974121

Token 3546: ' C' (ID: 363)
  Prédit: 'C'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'C' → logprob: -0.00011367550177965313
    2. ' C' → logprob: -9.125113487243652
    3. '   ' → logprob: -12.375113487243652
    4. ' ' → logprob: -16.00011444091797
    5. '           ' → logprob: -16.00011444091797
    6. '               ' → logprob: -16.00011444091797
    7. '  ' → logprob: -16.50011444091797
    8. ')' → logprob: -16.62511444091797
    9. '>C' → logprob: -17.62511444091797
    10. '	C' → logprob: -17.87511444091797

Token 3547: '))
' (ID: 2210)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -1.1250169277191162
    2. '))' → logprob: -1.2500169277191162
    3. ')]
' → logprob: -1.3750169277191162
    4. ')' → logprob: -2.750016927719116
    5. '))]
' → logprob: -2.875016927719116
    6. '))
' → logprob: -4.625017166137695
    7. ')])' → logprob: -6.625017166137695
    8. ')
' → logprob: -6.875017166137695
    9. '               ' → logprob: -7.125017166137695
    10. ')]
' → logprob: -7.250017166137695

Token 3548: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.005907226819545031
    2. ']
' → logprob: -6.00590705871582
    3. ',
' → logprob: -6.88090705871582
    4. ']' → logprob: -7.63090705871582
    5. '               ' → logprob: -7.75590705871582
    6. ',' → logprob: -8.00590705871582
    7. '       ' → logprob: -8.13090705871582
    8. ')
' → logprob: -8.13090705871582
    9. ')' → logprob: -8.50590705871582
    10. '```' → logprob: -9.00590705871582

Token 3549: ' ]

' (ID: 32229)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.12823522090911865
    2. ']
' → logprob: -2.378235340118408
    3. ']' → logprob: -4.378235340118408
    4. '       ' → logprob: -5.128235340118408
    5. ')
' → logprob: -5.878235340118408
    6. ':
' → logprob: -6.503235340118408
    7. '
' → logprob: -6.503235340118408
    8. ')' → logprob: -7.003235340118408
    9. ',
' → logprob: -7.378235340118408
    10. '):
' → logprob: -7.753235340118408

Token 3550: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.002337235491722822
    2. '
' → logprob: -6.877337455749512
    3. '```' → logprob: -7.127337455749512
    4. '       ' → logprob: -7.627337455749512
    5. 'def' → logprob: -12.377337455749512
    6. '            
' → logprob: -12.877337455749512
    7. '   ' → logprob: -13.752337455749512
    8. '               ' → logprob: -14.002337455749512
    9. '``' → logprob: -14.127337455749512
    10. '        
' → logprob: -14.252337455749512

Token 3551: ' t' (ID: 260)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.5186516642570496
    2. 'min' → logprob: -1.6436517238616943
    3. 't' (adapté à ' t') → logprob: -2.1436517238616943
    4. 'best' → logprob: -3.1436517238616943
    5. 'def' → logprob: -3.3936517238616943
    6. 'for' → logprob: -5.018651485443115
    7. '```' → logprob: -6.018651485443115
    8. 'inf' → logprob: -6.143651485443115
    9. '#' → logprob: -6.893651485443115
    10. '   ' → logprob: -7.143651485443115

Token 3552: '_candidates' (ID: 186937)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.2213740050792694
    2. '_candidates' → logprob: -2.471374034881592
    3. 's' → logprob: -3.096374034881592
    4. ' =' → logprob: -3.346374034881592
    5. '_values' → logprob: -4.221374034881592
    6. '_list' → logprob: -4.721374034881592
    7. '_min' → logprob: -5.346374034881592
    8. '_found' → logprob: -6.971374034881592
    9. '_' → logprob: -7.096374034881592
    10. 'min' → logprob: -7.471374034881592

Token 3553: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.3134784996509552
    2. ' =' → logprob: -1.3134784698486328
    3. '=[]' → logprob: -8.688478469848633
    4. ':' → logprob: -10.688478469848633
    5. '=[]
' → logprob: -11.313478469848633
    6. '.append' → logprob: -11.688478469848633
    7. '           ' → logprob: -13.813478469848633
    8. '[' → logprob: -14.438478469848633
    9. '   ' → logprob: -14.563478469848633
    10. '[]' → logprob: -14.938478469848633

Token 3554: ' []
' (ID: 8911)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -3.368984107510187e-05
    2. '[' → logprob: -10.875033378601074
    3. ' []' → logprob: -11.375033378601074
    4. '[]}' → logprob: -13.250033378601074
    5. '[]
' → logprob: -13.875033378601074
    6. '[]>' → logprob: -15.375033378601074
    7. '[])' → logprob: -15.500033378601074
    8. '[]"' → logprob: -16.87503433227539
    9. '[],' → logprob: -17.12503433227539
    10. '[]

' → logprob: -17.25003433227539

Token 3555: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.016637396067380905
    2. 'for' → logprob: -4.141637325286865
    3. '   ' → logprob: -8.516637802124023
    4. '       ' → logprob: -8.641637802124023
    5. ' for' → logprob: -8.641637802124023
    6. '
' → logprob: -10.641637802124023
    7. '               ' → logprob: -11.516637802124023
    8. '                   ' → logprob: -12.391637802124023
    9. '            
' → logprob: -12.641637802124023
    10. '```' → logprob: -13.266637802124023

Token 3556: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.06382949650287628
    2. '           ' → logprob: -2.8138294219970703
    3. ' for' → logprob: -6.43882942199707
    4. '       ' → logprob: -8.68882942199707
    5. '   ' → logprob: -9.68882942199707
    6. '
' → logprob: -11.06382942199707
    7. '```' → logprob: -11.81382942199707
    8. 'def' → logprob: -12.43882942199707
    9. 'import' → logprob: -13.31382942199707
    10. '               ' → logprob: -14.43882942199707

Token 3557: ' (' (ID: 350)
  Prédit: '(v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(v' → logprob: -0.6085054874420166
    2. '(p' → logprob: -1.4835054874420166
    3. '(start' → logprob: -2.2335054874420166
    4. 'start' → logprob: -2.9835054874420166
    5. '(a' → logprob: -3.8585054874420166
    6. 'p' → logprob: -4.2335052490234375
    7. '(seg' → logprob: -4.7335052490234375
    8. '(edge' → logprob: -4.8585052490234375
    9. '((' → logprob: -5.3585052490234375
    10. 'edge' → logprob: -5.6085052490234375

Token 3558: 'p' (ID: 79)
  Prédit: 'p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.01751185581088066
    2. '(p' → logprob: -4.39251184463501
    3. 'start' → logprob: -5.64251184463501
    4. 'a' → logprob: -7.64251184463501
    5. 'v' → logprob: -7.76751184463501
    6. 's' → logprob: -8.517512321472168
    7. '(v' → logprob: -9.017512321472168
    8. '(a' → logprob: -9.517512321472168
    9. 'pa' → logprob: -10.267512321472168
    10. '(start' → logprob: -10.267512321472168

Token 3559: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.1851949840784073
    2. '0' → logprob: -2.185194969177246
    3. 's' → logprob: -4.185194969177246
    4. '_start' → logprob: -4.185194969177246
    5. 'A' → logprob: -4.310194969177246
    6. 'i' → logprob: -5.435194969177246
    7. ',' → logprob: -5.935194969177246
    8. 'start' → logprob: -6.060194969177246
    9. 'a' → logprob: -6.310194969177246
    10. '_i' → logprob: -7.560194969177246

Token 3560: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.11047225445508957
    2. ',p' → logprob: -2.3604722023010254
    3. ' ,' → logprob: -4.610472202301025
    4. '_,' → logprob: -9.610472679138184
    5. ',v' → logprob: -9.985472679138184
    6. ',t' → logprob: -10.360472679138184
    7. 'p' → logprob: -10.735472679138184
    8. ',q' → logprob: -11.360472679138184
    9. ',w' → logprob: -11.610472679138184
    10. '(p' → logprob: -11.860472679138184

Token 3561: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.0008045066497288644
    2. ' p' → logprob: -7.125804424285889
    3. '_p' → logprob: -17.750804901123047
    4. '   ' → logprob: -18.125804901123047
    5. '	p' → logprob: -18.750804901123047
    6. '
' → logprob: -19.000804901123047
    7. ')p' → logprob: -19.000804901123047
    8. ',p' → logprob: -19.125804901123047
    9. '(p' → logprob: -19.625804901123047
    10. ' ' → logprob: -19.875804901123047

Token 3562: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: 0.0
    2. 'p' → logprob: -18.875
    3. '0' → logprob: -19.125
    4. '
' → logprob: -19.75
    5. '２' → logprob: -20.625
    6. ',' → logprob: -20.875
    7. '```' → logprob: -20.875
    8. '₂' → logprob: -21.25
    9. '_' → logprob: -21.375
    10. ' ' → logprob: -21.625

Token 3563: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0034406499471515417
    2. ',p' → logprob: -6.378440856933594
    3. ')' → logprob: -7.378440856933594
    4. ' ,' → logprob: -7.503440856933594
    5. ',(' → logprob: -8.378440856933594
    6. '_,' → logprob: -9.253440856933594
    7. '),' → logprob: -9.753440856933594
    8. '),(' → logprob: -10.253440856933594
    9. ' in' → logprob: -10.378440856933594
    10. 'p' → logprob: -11.628440856933594

Token 3564: ' edge' (ID: 11165)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.2015257030725479
    2. 'edge' → logprob: -1.7015256881713867
    3. 'ed' → logprob: -9.701525688171387
    4. ' e' → logprob: -10.951525688171387
    5. ' edge' → logprob: -11.076525688171387
    6. '
' → logprob: -11.951525688171387
    7. 'E' → logprob: -13.076525688171387
    8. '   ' → logprob: -13.076525688171387
    9. 'Edge' → logprob: -13.576525688171387
    10. '    
' → logprob: -13.951525688171387

Token 3565: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.004067359026521444
    2. '):
' → logprob: -6.254067420959473
    3. ')=' → logprob: -6.754067420959473
    4. '):' → logprob: -7.004067420959473
    5. '   ' → logprob: -11.129067420959473
    6. ')
' → logprob: -11.129067420959473
    7. ' )' → logprob: -12.129067420959473
    8. '_)' → logprob: -12.254067420959473
    9. ')_' → logprob: -12.254067420959473
    10. '):

' → logprob: -12.504067420959473

Token 3566: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.058639414608478546
    2. 'in' → logprob: -2.9336395263671875
    3. ',' → logprob: -5.6836395263671875
    4. '   ' → logprob: -9.058639526367188
    5. ':
' → logprob: -9.433639526367188
    6. ' ' → logprob: -10.308639526367188
    7. ':' → logprob: -11.183639526367188
    8. '  ' → logprob: -11.308639526367188
    9. '):
' → logprob: -11.308639526367188
    10. '	in' → logprob: -11.433639526367188

Token 3567: ' edges' (ID: 22569)
  Prédit: 'edges'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'edges' → logprob: -0.0015128388768061996
    2. ' edges' → logprob: -6.5015130043029785
    3. '(edges' → logprob: -12.12651252746582
    4. '[' → logprob: -13.37651252746582
    5. '   ' → logprob: -13.62651252746582
    6. '[(' → logprob: -14.00151252746582
    7. '
' → logprob: -14.87651252746582
    8. 'vertices' → logprob: -15.12651252746582
    9. '[
' → logprob: -15.12651252746582
    10. '.edges' → logprob: -15.87651252746582

Token 3568: '_' (ID: 62)
  Prédit: '_'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.0009226576657965779
    2. '2' → logprob: -8.250922203063965
    3. '           ' → logprob: -8.250922203063965
    4. ',' → logprob: -9.500922203063965
    5. '               ' → logprob: -9.625922203063965
    6. '   ' → logprob: -9.750922203063965
    7. '[' → logprob: -10.750922203063965
    8. '_,' → logprob: -10.750922203063965
    9. '       ' → logprob: -10.875922203063965
    10. ':
' → logprob: -11.000922203063965

Token 3569: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0017029138980433345
    2. '_' → logprob: -6.501702785491943
    3. '[' → logprob: -8.751703262329102
    4. '```' → logprob: -11.001703262329102
    5. '0' → logprob: -11.626703262329102
    6. '   ' → logprob: -12.876703262329102
    7. '[
' → logprob: -13.251703262329102
    8. '₂' → logprob: -13.376703262329102
    9. '
' → logprob: -13.626703262329102
    10. ',' → logprob: -13.876703262329102

Token 3570: 'd' (ID: 67)
  Prédit: 'd'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.00030185774085111916
    2. '2' → logprob: -8.1253023147583
    3. '[' → logprob: -12.8753023147583
    4. '_d' → logprob: -13.3753023147583
    5. '_' → logprob: -14.5003023147583
    6. 'д' → logprob: -14.7503023147583
    7. '[
' → logprob: -14.8753023147583
    8. '```' → logprob: -16.000301361083984
    9. ',' → logprob: -16.750301361083984
    10. '   ' → logprob: -17.250301361083984

Token 3571: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.05694068968296051
    2. ':' → logprob: -2.931940793991089
    3. ',' → logprob: -6.80694055557251
    4. '):
' → logprob: -8.306941032409668
    5. '           ' → logprob: -8.556941032409668
    6. '():
' → logprob: -8.556941032409668
    7. '       ' → logprob: -9.431941032409668
    8. '   ' → logprob: -9.806941032409668
    9. '[' → logprob: -10.181941032409668
    10. ' :
' → logprob: -10.431941032409668

Token 3572: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0002680112374946475
    2. '	           ' → logprob: -9.12526798248291
    3. '           ' → logprob: -10.00026798248291
    4. '   ' → logprob: -10.12526798248291
    5. ' if' → logprob: -10.50026798248291
    6. 'if' → logprob: -11.62526798248291
    7. '[' → logprob: -11.87526798248291
    8. '```' → logprob: -12.12526798248291
    9. ' (' → logprob: -12.50026798248291
    10. '                   ' → logprob: -12.62526798248291

Token 3573: ' #' (ID: 1069)
  Prédit: 'dx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dx' → logprob: -0.1871321052312851
    2. 'if' → logprob: -2.4371321201324463
    3. 'd' → logprob: -3.9371321201324463
    4. 'dp' → logprob: -4.312131881713867
    5. 'delta' → logprob: -4.312131881713867
    6. '#' (adapté à ' #') → logprob: -4.437131881713867
    7. 'x' → logprob: -5.187131881713867
    8. '   ' → logprob: -5.312131881713867
    9. 'dir' → logprob: -5.812131881713867
    10. '       ' → logprob: -6.187131881713867

Token 3574: ' Skip' (ID: 47626)
  Prédit: 'dx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dx' → logprob: -0.41447722911834717
    2. 'if' → logprob: -1.2894772291183472
    3. '           ' → logprob: -3.7894773483276367
    4. '#' → logprob: -4.664477348327637
    5. 'd' → logprob: -4.789477348327637
    6. 'dp' → logprob: -4.914477348327637
    7. 'delta' → logprob: -5.164477348327637
    8. '   ' → logprob: -6.164477348327637
    9. 'px' → logprob: -6.539477348327637
    10. 'dir' → logprob: -6.789477348327637

Token 3575: ' if' (ID: 538)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.6457255482673645
    2. '(p' → logprob: -1.7707254886627197
    3. 'if' → logprob: -1.7707254886627197
    4. 'edge' → logprob: -3.2707254886627197
    5. ' p' → logprob: -3.6457254886627197
    6. ' if' → logprob: -3.7707254886627197
    7. '#' → logprob: -4.145725727081299
    8. 'abs' → logprob: -4.145725727081299
    9. ' (' → logprob: -5.520725727081299
    10. ' edge' → logprob: -5.770725727081299

Token 3576: ' edge' (ID: 11165)
  Prédit: 'edge'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'edge' → logprob: -0.5732515454292297
    2. 'p' → logprob: -0.9482515454292297
    3. 'dot' → logprob: -4.323251724243164
    4. 'origin' → logprob: -4.948251724243164
    5. ' edge' → logprob: -4.948251724243164
    6. '(edge' → logprob: -5.323251724243164
    7. '(p' → logprob: -5.448251724243164
    8. ' p' → logprob: -5.698251724243164
    9. 'pos' → logprob: -6.198251724243164
    10. 'not' → logprob: -7.198251724243164

Token 3577: ' contains' (ID: 8895)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '==' → logprob: -0.26026198267936707
    2. ' ==' → logprob: -1.5102620124816895
    3. '==(' → logprob: -5.5102620124816895
    4. '[' → logprob: -6.7602620124816895
    5. 'is' → logprob: -6.7602620124816895
    6. ' is' → logprob: -7.0102620124816895
    7. 'p' → logprob: -7.2602620124816895
    8. ' p' → logprob: -9.135261535644531
    9. '==
' → logprob: -9.760261535644531
    10. ' !=' → logprob: -10.385261535644531

Token 3578: ' origin' (ID: 12839)
  Prédit: 'origin'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'origin' → logprob: -0.1977534145116806
    2. 'pos' → logprob: -2.947753429412842
    3. ' origin' → logprob: -3.072753429412842
    4. '(origin' → logprob: -3.072753429412842
    5. 'Vertex' → logprob: -4.822753429412842
    6. 'p' → logprob: -5.322753429412842
    7. 'position' → logprob: -5.572753429412842
    8. '(Vertex' → logprob: -6.197753429412842
    9. ' pos' → logprob: -6.322753429412842
    10. ' (' → logprob: -6.322753429412842

Token 3579: ' and' (ID: 326)
  Prédit: ' or'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' or' → logprob: -0.7801466584205627
    2. ' if' → logprob: -1.905146598815918
    3. ' and' → logprob: -2.405146598815918
    4. 'or' → logprob: -2.530146598815918
    5. 'and' → logprob: -2.530146598815918
    6. 'if' → logprob: -2.780146598815918
    7. '               ' → logprob: -3.155146598815918
    8. ' (' → logprob: -3.655146598815918
    9. ' not' → logprob: -5.155146598815918
    10. '                   ' → logprob: -6.030146598815918

Token 3580: ' pos' (ID: 1253)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pos' → logprob: -0.0414191409945488
    2. 'p' → logprob: -3.41641902923584
    3. '(pos' → logprob: -5.79141902923584
    4. 'origin' → logprob: -5.79141902923584
    5. '(p' → logprob: -7.91641902923584
    6. '(origin' → logprob: -8.16641902923584
    7. 'edge' → logprob: -8.54141902923584
    8. '(' → logprob: -8.66641902923584
    9. 'face' → logprob: -9.04141902923584
    10. 'dir' → logprob: -9.29141902923584

Token 3581: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.022836582735180855
    2. '_' → logprob: -4.897836685180664
    3. '   ' → logprob: -5.897836685180664
    4. ')' → logprob: -6.147836685180664
    5. ' ' → logprob: -6.772836685180664
    6. '_on' → logprob: -6.772836685180664
    7. ' !=' → logprob: -6.897836685180664
    8. ',' → logprob: -6.897836685180664
    9. '3' → logprob: -7.147836685180664
    10. ' not' → logprob: -7.522836685180664

Token 3582: 'd' (ID: 67)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.8247400522232056
    2. 'd' → logprob: -1.3247400522232056
    3. '_' → logprob: -1.9497400522232056
    4. '   ' → logprob: -2.949739933013916
    5. '               ' → logprob: -3.824739933013916
    6. ')' → logprob: -4.199739933013916
    7. '_d' → logprob: -4.199739933013916
    8. '                   ' → logprob: -4.574739933013916
    9. ' ' → logprob: -5.074739933013916
    10. '  ' → logprob: -5.199739933013916

Token 3583: ' is' (ID: 382)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.510037899017334
    2. '==' → logprob: -1.010037899017334
    3. ' !=' → logprob: -4.635037899017334
    4. ' and' → logprob: -4.760037899017334
    5. '!=' → logprob: -5.635037899017334
    6. 'and' → logprob: -5.760037899017334
    7. ')' → logprob: -5.885037899017334
    8. ',' → logprob: -6.510037899017334
    9. ')==' → logprob: -6.510037899017334
    10. ' is' → logprob: -7.385037899017334

Token 3584: ' at' (ID: 540)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.10672315955162048
    2. '(p' → logprob: -2.8567230701446533
    3. 'close' → logprob: -4.481723308563232
    4. 'near' → logprob: -4.981723308563232
    5. 'inside' → logprob: -5.481723308563232
    6. '(' → logprob: -5.606723308563232
    7. 'on' → logprob: -5.856723308563232
    8. 'very' → logprob: -5.981723308563232
    9. 'not' → logprob: -6.231723308563232
    10. ' p' → logprob: -6.356723308563232

Token 3585: ' origin' (ID: 12839)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.003883439116179943
    2. '(' → logprob: -6.628883361816406
    3. 'origin' → logprob: -6.628883361816406
    4. 'edge' → logprob: -7.628883361816406
    5. '(p' → logprob: -8.253883361816406
    6. ' p' → logprob: -8.503883361816406
    7. 'vertex' → logprob: -9.003883361816406
    8. '   ' → logprob: -10.003883361816406
    9. '(
' → logprob: -10.878883361816406
    10. 'v' → logprob: -11.253883361816406

Token 3586: ' =>' (ID: 871)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.22418749332427979
    2. 'and' → logprob: -1.7241874933242798
    3. ' or' → logprob: -4.59918737411499
    4. '               ' → logprob: -5.09918737411499
    5. '                   ' → logprob: -5.22418737411499
    6. ' (' → logprob: -7.97418737411499
    7. 'or' → logprob: -8.474187850952148
    8. ' ' → logprob: -9.974187850952148
    9. '                       ' → logprob: -9.974187850952148
    10. ':
' → logprob: -9.974187850952148

Token 3587: ' to' (ID: 316)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.8635528683662415
    2. 'pos' → logprob: -1.3635528087615967
    3. '(p' → logprob: -1.7385528087615967
    4. '(pos' → logprob: -2.6135528087615967
    5. 'abs' → logprob: -3.9885528087615967
    6. 'distance' → logprob: -4.488553047180176
    7. '(abs' → logprob: -4.738553047180176
    8. '(distance' → logprob: -5.238553047180176
    9. 'math' → logprob: -5.488553047180176
    10. '(math' → logprob: -5.863553047180176

Token 3588: ' avoid' (ID: 8397)
  Prédit: 'o'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'o' → logprob: -0.7611861228942871
    2. 'avoid' → logprob: -0.8861861228942871
    3. 'continue' → logprob: -2.511186122894287
    4. 'ol' → logprob: -4.261186122894287
    5. ' avoid' → logprob: -5.761186122894287
    6. '_continue' → logprob: -5.761186122894287
    7. '           ' → logprob: -5.886186122894287
    8. 'prevent' → logprob: -6.261186122894287
    9. 'check' → logprob: -6.511186122894287
    10. 'ler' → logprob: -6.511186122894287

Token 3589: ' immediate' (ID: 22158)
  Prédit: '(pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(pos' → logprob: -1.043149471282959
    2. 'pos' → logprob: -1.418149471282959
    3. '(p' → logprob: -1.918149471282959
    4. 'p' → logprob: -1.918149471282959
    5. 'abs' → logprob: -3.418149471282959
    6. 'division' → logprob: -3.918149471282959
    7. '(' → logprob: -4.168149471282959
    8. 't' → logprob: -4.543149471282959
    9. '0' → logprob: -5.168149471282959
    10. 'zero' → logprob: -5.418149471282959

Token 3590: ' edge' (ID: 11165)
  Prédit: 'intersection'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'intersection' → logprob: -0.6155432462692261
    2. 'collision' → logprob: -1.865543246269226
    3. 'st' → logprob: -2.7405433654785156
    4. 'return' → logprob: -2.7405433654785156
    5. 'stop' → logprob: -2.7405433654785156
    6. 'pro' → logprob: -3.8655433654785156
    7. 'continu' → logprob: -4.365543365478516
    8. 'inter' → logprob: -4.490543365478516
    9. '0' → logprob: -4.865543365478516
    10. 'self' → logprob: -4.990543365478516

Token 3591: ' intersection' (ID: 42002)
  Prédit: 'intersection'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'intersection' → logprob: -0.37654945254325867
    2. 'inter' → logprob: -2.251549482345581
    3. 'hit' → logprob: -2.501549482345581
    4. ' intersection' → logprob: -3.001549482345581
    5. ' proximity' → logprob: -4.501549243927002
    6. ' hit' → logprob: -4.501549243927002
    7. ' crossing' → logprob: -5.126549243927002
    8. 'hits' → logprob: -5.751549243927002
    9. 'collision' → logprob: -5.751549243927002
    10. ' on' → logprob: -6.001549243927002

Token 3592: ' at' (ID: 540)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.29492542147636414
    2. ' or' → logprob: -1.6699254512786865
    3. 'and' → logprob: -3.6699254512786865
    4. ' and' → logprob: -3.7949254512786865
    5. 'or' → logprob: -4.919925212860107
    6. '                   ' → logprob: -5.544925212860107
    7. ':
' → logprob: -6.169925212860107
    8. '(' → logprob: -7.044925212860107
    9. ':' → logprob: -7.044925212860107
    10. ',' → logprob: -7.294925212860107

Token 3593: ' start' (ID: 1604)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.13132548332214355
    2. 'start' → logprob: -3.1313254833221436
    3. '0' → logprob: -3.7563254833221436
    4. 'pos' → logprob: -3.8813254833221436
    5. 'origin' → logprob: -3.8813254833221436
    6. 'position' → logprob: -5.506325721740723
    7. 'vertex' → logprob: -5.506325721740723
    8. 'p' → logprob: -6.006325721740723
    9. ' (' → logprob: -7.006325721740723
    10. 'current' → logprob: -7.256325721740723

Token 3594: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.26088422536849976
    2. ' or' → logprob: -2.1358842849731445
    3. 'and' → logprob: -3.1358842849731445
    4. ' and' → logprob: -3.3858842849731445
    5. '                   ' → logprob: -4.2608842849731445
    6. 'or' → logprob: -4.7608842849731445
    7. ':
' → logprob: -5.6358842849731445
    8. ' (' → logprob: -6.1358842849731445
    9. '(' → logprob: -6.6358842849731445
    10. ':' → logprob: -6.7608842849731445

Token 3595: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0017968006432056427
    2. '                   ' → logprob: -7.001796722412109
    3. ' if' → logprob: -7.501796722412109
    4. '```' → logprob: -9.12679672241211
    5. '                ' → logprob: -9.87679672241211
    6. '                
' → logprob: -10.25179672241211
    7. 'if' → logprob: -10.50179672241211
    8. '           ' → logprob: -10.87679672241211
    9. ' continue' → logprob: -11.00179672241211
    10. '                       ' → logprob: -11.50179672241211

Token 3596: ' #' (ID: 1069)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.06689208745956421
    2. 'if' → logprob: -3.316892147064209
    3. ' if' → logprob: -3.566892147064209
    4. '                   ' → logprob: -9.44189167022705
    5. '           ' → logprob: -9.56689167022705
    6. ' (' → logprob: -11.31689167022705
    7. 'continue' → logprob: -11.81689167022705
    8. ' continue' → logprob: -12.19189167022705
    9. '   ' → logprob: -12.56689167022705
    10. '                ' → logprob: -12.69189167022705

Token 3597: ' But' (ID: 3072)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.6944459676742554
    2. '               ' → logprob: -0.9444459676742554
    3. ' if' → logprob: -2.194446086883545
    4. '                   ' → logprob: -8.444445610046387
    5. '           ' → logprob: -9.694445610046387
    6. '   ' → logprob: -11.319445610046387
    7. ' ' → logprob: -11.569445610046387
    8. 'continue' → logprob: -11.569445610046387
    9. '```' → logprob: -11.694445610046387
    10. '                       ' → logprob: -12.569445610046387

Token 3598: ' simpler' (ID: 48697)
  Prédit: ' not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' not' → logprob: -1.5303311347961426
    2. 'pos' → logprob: -1.5303311347961426
    3. '(pos' → logprob: -1.9053311347961426
    4. 'not' → logprob: -2.2803311347961426
    5. '(p' → logprob: -2.4053311347961426
    6. 'p' → logprob: -2.7803311347961426
    7. ' True' → logprob: -3.4053311347961426
    8. 'True' → logprob: -3.4053311347961426
    9. ' pos' → logprob: -3.6553311347961426
    10. ' p' → logprob: -3.9053311347961426

Token 3599: ':' (ID: 25)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.03790445253252983
    2. '               ' → logprob: -3.9129045009613037
    3. ' if' → logprob: -4.287904262542725
    4. 'for' → logprob: -5.912904262542725
    5. 'continue' → logprob: -8.037904739379883
    6. '           ' → logprob: -9.037904739379883
    7. '```' → logprob: -9.537904739379883
    8. 'to' → logprob: -9.787904739379883
    9. '                   ' → logprob: -9.787904739379883
    10. ' for' → logprob: -10.037904739379883

Token 3600: ' calculate' (ID: 17950)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.02411038614809513
    2. 'continue' → logprob: -4.649110317230225
    3. 'dx' → logprob: -5.149110317230225
    4. ' if' → logprob: -5.774110317230225
    5. '#' → logprob: -5.899110317230225
    6. '                   ' → logprob: -6.774110317230225
    7. '               ' → logprob: -8.524110794067383
    8. 't' → logprob: -8.524110794067383
    9. ' continue' → logprob: -8.649110794067383
    10. 'vec' → logprob: -8.649110794067383

Token 3601: ' intersection' (ID: 42002)
  Prédit: 'the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'the' → logprob: -1.0821528434753418
    2. 'intersection' → logprob: -2.082152843475342
    3. '                   ' → logprob: -2.332152843475342
    4. '               ' → logprob: -2.332152843475342
    5. 'if' → logprob: -2.457152843475342
    6. 't' → logprob: -2.707152843475342
    7. '#' → logprob: -3.207152843475342
    8. 'inter' → logprob: -3.707152843475342
    9. 'whether' → logprob: -3.832152843475342
    10. ' the' → logprob: -3.832152843475342

Token 3602: ' anyway' (ID: 22332)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.346075177192688
    2. ' if' → logprob: -2.2210750579833984
    3. 'if' → logprob: -2.8460750579833984
    4. ' with' → logprob: -3.3460750579833984
    5. 'with' → logprob: -3.5960750579833984
    6. '                   ' → logprob: -3.7210750579833984
    7. '           ' → logprob: -4.096075057983398
    8. '(
' → logprob: -4.721075057983398
    9. ':
' → logprob: -5.221075057983398
    10. ',' → logprob: -6.346075057983398

Token 3603: ',' (ID: 11)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.012108709663152695
    2. '           ' → logprob: -5.01210880279541
    3. '
' → logprob: -6.38710880279541
    4. '                   ' → logprob: -7.01210880279541
    5. ',' → logprob: -7.51210880279541
    6. ' with' → logprob: -7.51210880279541
    7. '```' → logprob: -7.51210880279541
    8. 'with' → logprob: -8.51210880279541
    9. '                
' → logprob: -8.63710880279541
    10. ':
' → logprob: -8.76210880279541

Token 3604: ' limit' (ID: 5967)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.4106467664241791
    2. 'if' → logprob: -1.4106467962265015
    3. 'continue' → logprob: -3.285646677017212
    4. ' if' → logprob: -3.785646677017212
    5. ' continue' → logprob: -4.410646915435791
    6. '                   ' → logprob: -4.660646915435791
    7. '#' → logprob: -5.785646915435791
    8. 'ignore' → logprob: -6.285646915435791
    9. '
' → logprob: -6.535646915435791
    10. 't' → logprob: -6.535646915435791

Token 3605: ' to' (ID: 316)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.42397454380989075
    2. 'to' → logprob: -1.9239745140075684
    3. 'distance' → logprob: -3.1739745140075684
    4. ' to' → logprob: -3.4239745140075684
    5. 's' → logprob: -3.7989745140075684
    6. 'on' → logprob: -4.298974514007568
    7. ' t' → logprob: -4.548974514007568
    8. ' on' → logprob: -4.798974514007568
    9. '               ' → logprob: -4.798974514007568
    10. '                   ' → logprob: -5.048974514007568

Token 3606: ' t' (ID: 260)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.08998969942331314
    2. ' t' → logprob: -2.46498966217041
    3. '1' → logprob: -7.58998966217041
    4. '0' → logprob: -8.83998966217041
    5. ' positive' → logprob: -9.46498966217041
    6. 'positive' → logprob: -9.58998966217041
    7. '>' → logprob: -10.33998966217041
    8. ' ' → logprob: -10.71498966217041
    9. 'lambda' → logprob: -10.83998966217041
    10. 'max' → logprob: -11.33998966217041

Token 3607: ' >' (ID: 1424)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.00627394812181592
    2. ' >' → logprob: -5.1312737464904785
    3. '=' → logprob: -8.631274223327637
    4. '>
' → logprob: -9.006274223327637
    5. ' =' → logprob: -11.506274223327637
    6. 's' → logprob: -12.256274223327637
    7. '>=' → logprob: -12.256274223327637
    8. ':' → logprob: -13.006274223327637
    9. ' >
' → logprob: -13.131274223327637
    10. '_candidates' → logprob: -13.131274223327637

Token 3608: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.5231428742408752
    2. '1' → logprob: -0.8981428742408752
    3. ' ' → logprob: -11.39814281463623
    4. '   ' → logprob: -12.52314281463623
    5. '+' → logprob: -13.14814281463623
    6. '
' → logprob: -14.77314281463623
    7. '```' → logprob: -14.89814281463623
    8. '>' → logprob: -15.02314281463623
    9. '       ' → logprob: -15.14814281463623
    10. '  ' → logprob: -15.27314281463623

Token 3609: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.1269451230764389
    2. '0' → logprob: -2.1269450187683105
    3. ' ' → logprob: -11.251945495605469
    4. '   ' → logprob: -13.751945495605469
    5. '+' → logprob: -14.751945495605469
    6. '```' → logprob: -14.751945495605469
    7. '-' → logprob: -14.876945495605469
    8. '`' → logprob: -15.251945495605469
    9. '10' → logprob: -15.501945495605469
    10. '(' → logprob: -15.689445495605469

Token 3610: 'e' (ID: 68)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.45658260583877563
    2. 'e' → logprob: -1.0815825462341309
    3. '000' → logprob: -4.456582546234131
    4. ' and' → logprob: -5.331582546234131
    5. '               ' → logprob: -6.081582546234131
    6. '```' → logprob: -6.331582546234131
    7. 'and' → logprob: -6.831582546234131
    8. '.e' → logprob: -6.956582546234131
    9. '
' → logprob: -7.081582546234131
    10. '+' → logprob: -7.331582546234131

Token 3611: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: 0.0
    2. '```' → logprob: -18.25
    3. 'e' → logprob: -19.0
    4. '−' → logprob: -19.25
    5. '{-' → logprob: -19.5
    6. ' -' → logprob: -19.875
    7. '   ' → logprob: -20.375
    8. '``' → logprob: -20.5
    9. '       ' → logprob: -20.875
    10. '-
' → logprob: -21.25

Token 3612: '9' (ID: 24)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '-' → logprob: -1.0683535037969705e-05
    2. '3' → logprob: -12.62501049041748
    3. '6' → logprob: -12.62501049041748
    4. '4' → logprob: -13.50001049041748
    5. '```' → logprob: -14.00001049041748
    6. '5' → logprob: -14.12501049041748
    7. '
' → logprob: -15.50001049041748
    8. '−' → logprob: -15.50001049041748
    9. '8' → logprob: -15.75001049041748
    10. ' -' → logprob: -15.87501049041748

Token 3613: ' to' (ID: 316)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.05207371711730957
    2. ' and' → logprob: -4.0520734786987305
    3. '```' → logprob: -4.3020734786987305
    4. '           ' → logprob: -4.9270734786987305
    5. '                   ' → logprob: -5.5520734786987305
    6. '
' → logprob: -5.6770734786987305
    7. 'and' → logprob: -6.4270734786987305
    8. ',' → logprob: -6.6770734786987305
    9. ' for' → logprob: -7.5520734786987305
    10. 'for' → logprob: -7.9270734786987305

Token 3614: ' avoid' (ID: 8397)
  Prédit: 'avoid'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'avoid' → logprob: -0.2003488689661026
    2. ' avoid' → logprob: -2.5753488540649414
    3. '1' → logprob: -2.7003488540649414
    4. '0' → logprob: -3.7003488540649414
    5. 'continue' → logprob: -4.575348854064941
    6. 'prevent' → logprob: -7.075348854064941
    7. 'ignore' → logprob: -7.325348854064941
    8. 'skip' → logprob: -7.450348854064941
    9. 'exclude' → logprob: -7.700348854064941
    10. 'Avoid' → logprob: -8.950348854064941

Token 3615: ' zero' (ID: 12421)
  Prédit: 'floating'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'floating' → logprob: -0.6637243628501892
    2. 'division' → logprob: -1.663724422454834
    3. 'zero' → logprob: -2.038724422454834
    4. 'precision' → logprob: -2.788724422454834
    5. 'numer' → logprob: -3.413724422454834
    6. 'float' → logprob: -3.788724422454834
    7. 'self' → logprob: -4.038724422454834
    8. 'pos' → logprob: -5.038724422454834
    9. 'div' → logprob: -5.288724422454834
    10. '0' → logprob: -5.413724422454834

Token 3616: ' or' (ID: 503)
  Prédit: 'and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'and' → logprob: -0.7539895176887512
    2. 't' → logprob: -2.0039894580841064
    3. ' and' → logprob: -2.5039894580841064
    4. '+' → logprob: -2.8789894580841064
    5. '               ' → logprob: -3.3789894580841064
    6. '
' → logprob: -3.5039894580841064
    7. ' tolerance' → logprob: -3.5039894580841064
    8. 'threshold' → logprob: -3.7539894580841064
    9. '           ' → logprob: -3.8789894580841064
    10. '+
' → logprob: -4.0039896965026855

Token 3617: ' negative' (ID: 12626)
  Prédit: 'negative'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'negative' → logprob: -0.09443704783916473
    2. 'near' → logprob: -2.9694371223449707
    3. 'very' → logprob: -3.5944371223449707
    4. 'neg' → logprob: -5.719437122344971
    5. 'close' → logprob: -6.094437122344971
    6. ' negative' → logprob: -7.219437122344971
    7. 't' → logprob: -7.344437122344971
    8. ' near' → logprob: -7.469437122344971
    9. '-' → logprob: -7.594437122344971
    10. ' very' → logprob: -7.844437122344971

Token 3618: '

' (ID: 279)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 't' → logprob: -0.08836641162633896
    2. 'threshold' → logprob: -3.5883665084838867
    3. '_t' → logprob: -4.088366508483887
    4. '
' → logprob: -4.213366508483887
    5. 'distance' → logprob: -4.963366508483887
    6. ' tolerance' → logprob: -5.338366508483887
    7. '```' → logprob: -6.213366508483887
    8. ' t' → logprob: -6.213366508483887
    9. 'values' → logprob: -6.338366508483887
    10. '               ' → logprob: -6.963366508483887

Token 3619: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0006584656075574458
    2. '                   ' → logprob: -8.37565803527832
    3. '           ' → logprob: -9.12565803527832
    4. '
' → logprob: -9.87565803527832
    5. '```' → logprob: -10.00065803527832
    6. '       ' → logprob: -10.12565803527832
    7. '                
' → logprob: -10.12565803527832
    8. '   ' → logprob: -10.25065803527832
    9. 'for' → logprob: -10.87565803527832
    10. ' ' → logprob: -11.12565803527832

Token 3620: ' intersect' (ID: 64353)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.18655268847942352
    2. 'dx' → logprob: -2.0615527629852295
    3. '                   ' → logprob: -4.43655252456665
    4. 'if' → logprob: -4.81155252456665
    5. 'p' → logprob: -5.18655252456665
    6. '#' → logprob: -5.18655252456665
    7. '           ' → logprob: -6.31155252456665
    8. 'd' → logprob: -6.56155252456665
    9. 'den' → logprob: -6.68655252456665
    10. 'from' → logprob: -6.68655252456665

Token 3621: ' =' (ID: 314)
  Prédit: '_point'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_point' → logprob: -1.5346720218658447
    2. 's' → logprob: -1.6596720218658447
    3. '_t' → logprob: -1.6596720218658447
    4. '_param' → logprob: -1.7846720218658447
    5. ' =' → logprob: -2.6596720218658447
    6. ',' → logprob: -2.7846720218658447
    7. '_type' → logprob: -3.5346720218658447
    8. 'ion' → logprob: -4.034671783447266
    9. '_pt' → logprob: -4.284671783447266
    10. '_p' → logprob: -4.409671783447266

Token 3622: ' line' (ID: 2543)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'line' → logprob: -0.2509201467037201
    2. 'segment' → logprob: -1.7509201765060425
    3. 'ray' → logprob: -3.750920057296753
    4. 'compute' → logprob: -4.500920295715332
    5. 'edge' → logprob: -5.125920295715332
    6. 'inter' → logprob: -5.500920295715332
    7. 'vector' → logprob: -6.500920295715332
    8. '_line' → logprob: -7.125920295715332
    9. 'find' → logprob: -8.250920295715332
    10. 'segments' → logprob: -8.750920295715332

Token 3623: '_ray' (ID: 194498)
  Prédit: '_inter'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_inter' → logprob: -0.010096615180373192
    2. '_segment' → logprob: -4.635096549987793
    3. '_point' → logprob: -9.135096549987793
    4. '_line' → logprob: -9.260096549987793
    5. '_seg' → logprob: -9.510096549987793
    6. '_to' → logprob: -11.385096549987793
    7. '
' → logprob: -11.635096549987793
    8. '_param' → logprob: -11.635096549987793
    9. '_segments' → logprob: -11.760096549987793
    10. '_ray' → logprob: -11.885096549987793

Token 3624: '_segment' (ID: 71041)
  Prédit: '_inter'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_inter' → logprob: -0.01624714583158493
    2. '_segment' → logprob: -4.141247272491455
    3. '_parameter' → logprob: -10.391246795654297
    4. '_point' → logprob: -10.391246795654297
    5. 'inter' → logprob: -10.516246795654297
    6. '_param' → logprob: -10.516246795654297
    7. '_seg' → logprob: -10.516246795654297
    8. '_t' → logprob: -11.266246795654297
    9. '_line' → logprob: -11.641246795654297
    10. '_to' → logprob: -11.641246795654297

Token 3625: '_inter' (ID: 16818)
  Prédit: '_inter'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_inter' → logprob: -0.006903159432113171
    2. '(p' → logprob: -5.006903171539307
    3. 'inter' → logprob: -9.131902694702148
    4. 'intersection' → logprob: -10.506902694702148
    5. '(' → logprob: -10.756902694702148
    6. '(inter' → logprob: -11.131902694702148
    7. '((' → logprob: -11.631902694702148
    8. '_t' → logprob: -14.006902694702148
    9. '_distance' → logprob: -14.131902694702148
    10. '(t' → logprob: -14.131902694702148

Token 3626: 'section' (ID: 6471)
  Prédit: 'section'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'section' → logprob: -0.6931493282318115
    2. 'sect' → logprob: -0.6931493282318115
    3. 'sections' → logprob: -14.19314956665039
    4. 'sec' → logprob: -14.69314956665039
    5. 'sector' → logprob: -14.81814956665039
    6. 'sects' → logprob: -14.81814956665039
    7. 'se' → logprob: -17.06814956665039
    8. 'set' → logprob: -17.19314956665039
    9. 'segment' → logprob: -17.44314956665039
    10. '(section' → logprob: -17.56814956665039

Token 3627: '(pos' (ID: 24566)
  Prédit: '(pos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(pos' → logprob: -0.06860899180173874
    2. '(
' → logprob: -3.5686089992523193
    3. '(' → logprob: -3.8186089992523193
    4. '(p' → logprob: -4.19360876083374
    5. '(inter' → logprob: -7.94360876083374
    6. '((' → logprob: -8.068609237670898
    7. ' (' → logprob: -8.318609237670898
    8. '_pos' → logprob: -10.818609237670898
    9. 'pos' → logprob: -11.068609237670898
    10. '[pos' → logprob: -11.318609237670898

Token 3628: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -3.7697225252486533e-06
    2. ',' → logprob: -12.875003814697266
    3. ' ' → logprob: -15.125003814697266
    4. '```' → logprob: -15.625003814697266
    5. '_' → logprob: -16.500003814697266
    6. ')' → logprob: -16.625003814697266
    7. '   ' → logprob: -16.625003814697266
    8. '               ' → logprob: -16.750003814697266
    9. '  ' → logprob: -16.875003814697266
    10. '                   ' → logprob: -17.125003814697266

Token 3629: 'd' (ID: 67)
  Prédit: 'd'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -5.240481914370321e-05
    2. '2' → logprob: -10.000052452087402
    3. 'д' → logprob: -13.875052452087402
    4. '(' → logprob: -14.250052452087402
    5. '
' → logprob: -14.437552452087402
    6. ',' → logprob: -14.500052452087402
    7. ' ' → logprob: -14.562552452087402
    8. '```' → logprob: -14.625052452087402
    9. '   ' → logprob: -14.875052452087402
    10. '(
' → logprob: -15.250052452087402

Token 3630: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.006102150771766901
    2. ',p' → logprob: -5.506102085113525
    3. ' ,' → logprob: -6.381102085113525
    4. '(p' → logprob: -8.756102561950684
    5. '(' → logprob: -10.131102561950684
    6. ',(' → logprob: -10.381102561950684
    7. ' (' → logprob: -11.006102561950684
    8. ',
' → logprob: -11.381102561950684
    9. ')' → logprob: -11.631102561950684
    10. '[' → logprob: -12.006102561950684

Token 3631: ' dir' (ID: 5609)
  Prédit: 'dir'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dir' → logprob: -0.0003663212701212615
    2. '(' → logprob: -8.1253662109375
    3. ' dir' → logprob: -10.6253662109375
    4. '(dir' → logprob: -10.6253662109375
    5. '                   ' → logprob: -11.7503662109375
    6. '               ' → logprob: -12.3753662109375
    7. '   ' → logprob: -12.6253662109375
    8. '           ' → logprob: -13.0003662109375
    9. ' (' → logprob: -14.7503662109375
    10. '                ' → logprob: -14.8753662109375

Token 3632: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0012971388641744852
    2. '3' → logprob: -7.3762969970703125
    3. '(' → logprob: -7.6262969970703125
    4. '(
' → logprob: -10.001296997070312
    5. ' (' → logprob: -10.501296997070312
    6. ',' → logprob: -10.626296997070312
    7. '   ' → logprob: -11.251296997070312
    8. ')' → logprob: -11.501296997070312
    9. '
' → logprob: -12.001296997070312
    10. '(x' → logprob: -12.126296997070312

Token 3633: 'd' (ID: 67)
  Prédit: 'd'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -1.1756367712223437e-05
    2. '2' → logprob: -12.000011444091797
    3. ' d' → logprob: -12.750011444091797
    4. '_d' → logprob: -13.875011444091797
    5. 'д' → logprob: -15.000011444091797
    6. ')d' → logprob: -15.125011444091797
    7. ',' → logprob: -15.500011444091797
    8. ')' → logprob: -16.125011444091797
    9. '(d' → logprob: -16.125011444091797
    10. '(' → logprob: -16.125011444091797

Token 3634: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.005467232782393694
    2. ',p' → logprob: -5.380467414855957
    3. ',
' → logprob: -7.630467414855957
    4. '(p' → logprob: -8.380467414855957
    5. ' ,' → logprob: -10.005467414855957
    6. ',(' → logprob: -10.755467414855957
    7. '   ' → logprob: -11.505467414855957
    8. '(' → logprob: -11.630467414855957
    9. '(
' → logprob: -12.130467414855957
    10. '=' → logprob: -12.130467414855957

Token 3635: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.00030566859641112387
    2. ' p' → logprob: -8.125306129455566
    3. '               ' → logprob: -12.500306129455566
    4. '                   ' → logprob: -13.000306129455566
    5. '(p' → logprob: -13.625306129455566
    6. '           ' → logprob: -13.750306129455566
    7. '   ' → logprob: -13.875306129455566
    8. '       ' → logprob: -16.62530517578125
    9. '                       ' → logprob: -16.62530517578125
    10. ')' → logprob: -16.75030517578125

Token 3636: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.596781946020201e-05
    2. '2' → logprob: -10.000045776367188
    3. '```' → logprob: -16.500045776367188
    4. '[' → logprob: -16.625045776367188
    5. '(' → logprob: -16.625045776367188
    6. '0' → logprob: -17.000045776367188
    7. '   ' → logprob: -17.000045776367188
    8. '_' → logprob: -17.000045776367188
    9. ')' → logprob: -17.250045776367188
    10. '' → logprob: -17.750045776367188

Token 3637: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.014266341924667358
    2. ',p' → logprob: -4.264266490936279
    3. ' ,' → logprob: -10.014266014099121
    4. ',
' → logprob: -10.389266014099121
    5. 'p' → logprob: -11.014266014099121
    6. '_,' → logprob: -13.139266014099121
    7. '   ' → logprob: -13.889266014099121
    8. '[' → logprob: -13.889266014099121
    9. ',d' → logprob: -14.764266014099121
    10. '           ' → logprob: -14.764266014099121

Token 3638: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.0008068907191045582
    2. ' p' → logprob: -7.12580680847168
    3. '   ' → logprob: -14.12580680847168
    4. '           ' → logprob: -14.25080680847168
    5. '(p' → logprob: -15.00080680847168
    6. '(' → logprob: -15.62580680847168
    7. ')' → logprob: -16.00080680847168
    8. '       ' → logprob: -16.62580680847168
    9. ' (' → logprob: -16.75080680847168
    10. '    ' → logprob: -16.87580680847168

Token 3639: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -1.2664456789934775e-06
    2. '1' → logprob: -14.500000953674316
    3. '₂' → logprob: -14.625000953674316
    4. 'p' → logprob: -15.625000953674316
    5. 'C' → logprob: -16.500001907348633
    6. '_' → logprob: -17.125001907348633
    7. '۲' → logprob: -18.375001907348633
    8. '[' → logprob: -19.625001907348633
    9. ' ' → logprob: -19.625001907348633
    10. '(' → logprob: -19.750001907348633

Token 3640: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.16028839349746704
    2. ',' → logprob: -2.4102883338928223
    3. ')' → logprob: -2.9102883338928223
    4. '):
' → logprob: -6.285288333892822
    5. ')[' → logprob: -6.410288333892822
    6. ')
' → logprob: -9.66028881072998
    7. '):' → logprob: -9.78528881072998
    8. ')

' → logprob: -9.78528881072998
    9. '[' → logprob: -10.28528881072998
    10. '           ' → logprob: -10.66028881072998

Token 3641: '               ' (ID: 506)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.49410003423690796
    2. '(' → logprob: -1.8691000938415527
    3. '               ' → logprob: -3.1191000938415527
    4. '(
' → logprob: -3.3691000938415527
    5. '[' → logprob: -3.8691000938415527
    6. '       ' → logprob: -3.9941000938415527
    7. ':' → logprob: -3.9941000938415527
    8. ')' → logprob: -3.9941000938415527
    9. ':
' → logprob: -4.494100093841553
    10. '==' → logprob: -4.494100093841553

Token 3642: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.5778078436851501
    2. 'if' (adapté à ' if') → logprob: -0.8278078436851501
    3. '               ' → logprob: -6.952807903289795
    4. '           ' → logprob: -7.077807903289795
    5. 'If' → logprob: -11.077807426452637
    6. ',' → logprob: -11.702807426452637
    7. '```' → logprob: -11.827807426452637
    8. '                   ' → logprob: -11.952807426452637
    9. '[' → logprob: -11.952807426452637
    10. ';if' → logprob: -12.452807426452637

Token 3643: ' intersect' (ID: 64353)
  Prédit: 'inter'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inter' → logprob: -0.00034774013329297304
    2. ' intersect' → logprob: -8.000348091125488
    3. '(inter' → logprob: -11.375348091125488
    4. 'intersection' → logprob: -14.875348091125488
    5. '   ' → logprob: -15.500348091125488
    6. '           ' → logprob: -15.625348091125488
    7. '               ' → logprob: -16.875347137451172
    8. ' ' → logprob: -17.750347137451172
    9. ' intersection' → logprob: -18.375347137451172
    10. '  ' → logprob: -18.625347137451172

Token 3644: ' is' (ID: 382)
  Prédit: ' is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.21085229516029358
    2. '[' → logprob: -2.2108523845672607
    3. ' =' → logprob: -3.4608523845672607
    4. ':' → logprob: -4.210852146148682
    5. '=' → logprob: -4.460852146148682
    6. 'is' → logprob: -5.460852146148682
    7. ' !=' → logprob: -5.585852146148682
    8. '>' → logprob: -5.710852146148682
    9. ')' → logprob: -6.210852146148682
    10. '!=' → logprob: -6.460852146148682

Token 3645: ' not' (ID: 625)
  Prédit: 'not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'not' → logprob: -0.05539479851722717
    2. ' not' → logprob: -2.9303948879241943
    3. 'None' → logprob: -7.680394649505615
    4. '   ' → logprob: -10.805395126342773
    5. 'Not' → logprob: -11.305395126342773
    6. ' None' → logprob: -11.555395126342773
    7. '	not' → logprob: -13.305395126342773
    8. '(not' → logprob: -13.430395126342773
    9. '       ' → logprob: -13.680395126342773
    10. '           ' → logprob: -14.180395126342773

Token 3646: ' None' (ID: 4662)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -3.0948158382670954e-05
    2. ' None' → logprob: -10.875030517578125
    3. '(None' → logprob: -11.375030517578125
    4. '   ' → logprob: -14.875030517578125
    5. 'none' → logprob: -16.625030517578125
    6. 'False' → logprob: -17.375030517578125
    7. '       ' → logprob: -17.750030517578125
    8. '           ' → logprob: -18.125030517578125
    9. '_None' → logprob: -18.250030517578125
    10. '=None' → logprob: -18.625030517578125

Token 3647: ':
' (ID: 734)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.6610042452812195
    2. '                   ' → logprob: -0.9110042452812195
    3. ' and' → logprob: -3.5360043048858643
    4. ':
' → logprob: -3.6610043048858643
    5. ':' → logprob: -4.536004066467285
    6. '[' → logprob: -4.786004066467285
    7. '                       ' → logprob: -6.411004066467285
    8. ' ,' → logprob: -6.911004066467285
    9. '               ' → logprob: -6.911004066467285
    10. ',
' → logprob: -7.536004066467285

Token 3648: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.8887481689453125
    2. ' (' → logprob: -1.2637481689453125
    3. '(t' → logprob: -2.2637481689453125
    4. 'x' → logprob: -2.6387481689453125
    5. ' t' → logprob: -3.2637481689453125
    6. ' x' → logprob: -3.3887481689453125
    7. '(x' → logprob: -3.5137481689453125
    8. 't' → logprob: -4.6387481689453125
    9. '(distance' → logprob: -4.7637481689453125
    10. 'distance' → logprob: -5.7637481689453125

Token 3649: ' t' (ID: 260)
  Prédit: '(inter'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(inter' → logprob: -0.562303900718689
    2. 'inter' → logprob: -1.312303900718689
    3. ' (' → logprob: -2.1873040199279785
    4. '(t' → logprob: -3.9373040199279785
    5. 't' (adapté à ' t') → logprob: -4.5623040199279785
    6. ' intersect' → logprob: -5.1873040199279785
    7. ' t' → logprob: -5.3123040199279785
    8. '(' → logprob: -5.4373040199279785
    9. '(distance' → logprob: -6.8123040199279785
    10. '                   ' → logprob: -7.1873040199279785

Token 3650: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.02939656935632229
    2. ' =' → logprob: -4.6543965339660645
    3. '_,' → logprob: -5.1543965339660645
    4. '=' → logprob: -5.2793965339660645
    5. ' ,' → logprob: -5.5293965339660645
    6. '<|end|>' → logprob: -6.0293965339660645
    7. ')' → logprob: -7.7793965339660645
    8. '<|end|>' → logprob: -8.029397010803223
    9. '_next' → logprob: -8.654397010803223
    10. '_token' → logprob: -9.154397010803223

Token 3651: ' s' (ID: 265)
  Prédit: 'point'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'point' → logprob: -0.769443690776825
    2. '_' → logprob: -1.1444437503814697
    3. 'inter' → logprob: -3.2694437503814697
    4. 'pt' → logprob: -3.5194437503814697
    5. '_point' → logprob: -3.7694437503814697
    6. 'p' → logprob: -4.019443511962891
    7. ' point' → logprob: -4.019443511962891
    8. '_inter' → logprob: -4.394443511962891
    9. 's' → logprob: -4.769443511962891
    10. 'x' → logprob: -5.144443511962891

Token 3652: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.7995122671127319
    2. ',' → logprob: -0.9245122671127319
    3. ' =' → logprob: -1.924512267112732
    4. ')' → logprob: -5.0495123863220215
    5. '<|end|>' → logprob: -7.4245123863220215
    6. ' ,' → logprob: -8.299511909484863
    7. ' ' → logprob: -9.674511909484863
    8. '                       ' → logprob: -9.924511909484863
    9. '_,' → logprob: -10.299511909484863
    10. ':' → logprob: -10.299511909484863

Token 3653: ' intersect' (ID: 64353)
  Prédit: 'inter'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inter' → logprob: -0.0007168424781411886
    2. ' intersect' → logprob: -7.250716686248779
    3. '(inter' → logprob: -12.000717163085938
    4. '(' → logprob: -15.000717163085938
    5. 'intersection' → logprob: -15.375717163085938
    6. ' (' → logprob: -16.500717163085938
    7. '   ' → logprob: -18.250717163085938
    8. '           ' → logprob: -18.500717163085938
    9. 'inte' → logprob: -18.750717163085938
    10. ' ' → logprob: -19.000717163085938

Token 3654: '
' (ID: 198)
  Prédit: '                       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.4686901271343231
    2. '                   ' → logprob: -1.7186901569366455
    3. ',' → logprob: -1.8436901569366455
    4. ':' → logprob: -4.093689918518066
    5. '                           ' → logprob: -5.218689918518066
    6. '                               ' → logprob: -5.968689918518066
    7. '(' → logprob: -5.968689918518066
    8. ')' → logprob: -6.093689918518066
    9. '               ' → logprob: -7.343689918518066
    10. ' and' → logprob: -7.468689918518066

Token 3655: '                   ' (ID: 699)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.32641902565956116
    2. '                       ' → logprob: -1.7014189958572388
    3. '                   ' → logprob: -2.8264191150665283
    4. 'and' → logprob: -3.8264191150665283
    5. ',' → logprob: -4.451418876647949
    6. '```' → logprob: -6.951418876647949
    7. ':
' → logprob: -7.451418876647949
    8. '                    ' → logprob: -8.20141887664795
    9. '                           ' → logprob: -8.45141887664795
    10. '                     ' → logprob: -8.45141887664795

Token 3656: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.7209470868110657
    2. ' if' → logprob: -0.7209470868110657
    3. ' t' → logprob: -4.470947265625
    4. 't' → logprob: -4.970947265625
    5. '                   ' → logprob: -5.220947265625
    6. ' (' → logprob: -5.970947265625
    7. '                       ' → logprob: -7.595947265625
    8. '                           ' → logprob: -8.720947265625
    9. '                    ' → logprob: -8.720947265625
    10. '0' → logprob: -9.720947265625

Token 3657: ' t' (ID: 260)
  Prédit: ' t'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' t' → logprob: -0.028951402753591537
    2. 't' → logprob: -4.028951168060303
    3. ' s' → logprob: -4.778951168060303
    4. 's' → logprob: -6.528951168060303
    5. ' ' → logprob: -7.778951168060303
    6. '                    ' → logprob: -8.528951644897461
    7. '                   ' → logprob: -9.278951644897461
    8. ' (' → logprob: -9.778951644897461
    9. '    ' → logprob: -10.903951644897461
    10. '0' → logprob: -11.153951644897461

Token 3658: ' >' (ID: 1424)
  Prédit: ' >'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.42890873551368713
    2. '>' → logprob: -1.0539087057113647
    3. '0' → logprob: -8.803908348083496
    4. ')>' → logprob: -11.053908348083496
    5. '1' → logprob: -11.303908348083496
    6. '>
' → logprob: -11.803908348083496
    7. ' >
' → logprob: -11.928908348083496
    8. ' ' → logprob: -12.428908348083496
    9. ')' → logprob: -12.678908348083496
    10. ' ' → logprob: -13.678908348083496

Token 3659: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.011373155459296e-05
    2. ' ' → logprob: -10.875030517578125
    3. '0' → logprob: -11.500030517578125
    4. '                   ' → logprob: -14.125030517578125
    5. '                       ' → logprob: -16.375030517578125
    6. '   ' → logprob: -16.375030517578125
    7. '               ' → logprob: -17.625030517578125
    8. '                    ' → logprob: -18.500030517578125
    9. '                    
' → logprob: -18.625030517578125
    10. '```' → logprob: -18.750030517578125

Token 3660: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.2948405128554441e-05
    2. '0' → logprob: -11.62501335144043
    3. ' ' → logprob: -12.50001335144043
    4. '   ' → logprob: -15.50001335144043
    5. '                   ' → logprob: -17.00001335144043
    6. '```' → logprob: -18.00001335144043
    7. '+' → logprob: -18.75001335144043
    8. '           ' → logprob: -18.75001335144043
    9. '(' → logprob: -18.75001335144043
    10. '                       ' → logprob: -18.75001335144043

Token 3661: 'e' (ID: 68)
  Prédit: 'e'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.00026181264547631145
    2. '-' → logprob: -8.250262260437012
    3. '```' → logprob: -15.375262260437012
    4. '.e' → logprob: -16.000261306762695
    5. '1' → logprob: -16.500261306762695
    6. '.' → logprob: -17.000261306762695
    7. '
' → logprob: -17.625261306762695
    8. '   ' → logprob: -17.875261306762695
    9. '-e' → logprob: -17.875261306762695
    10. '(e' → logprob: -18.125261306762695

Token 3662: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: 0.0
    2. 'e' → logprob: -17.0
    3. '```' → logprob: -18.0
    4. ' -' → logprob: -18.875
    5. '
' → logprob: -19.0
    6. '9' → logprob: -19.25
    7. '   ' → logprob: -19.5
    8. '−' → logprob: -19.75
    9. '-
' → logprob: -20.125
    10. '``' → logprob: -20.25

Token 3663: '9' (ID: 24)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.1378924399614334
    2. '8' → logprob: -2.637892484664917
    3. '9' → logprob: -2.887892484664917
    4. '7' → logprob: -7.012892246246338
    5. '6' → logprob: -8.262892723083496
    6. '08' → logprob: -9.012892723083496
    7. '09' → logprob: -9.387892723083496
    8. 'e' → logprob: -9.512892723083496
    9. '12' → logprob: -9.762892723083496
    10. '10' → logprob: -10.012892723083496

Token 3664: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.6836212873458862
    2. '                       ' → logprob: -0.8086212873458862
    3. ':' → logprob: -3.308621406555176
    4. 'and' → logprob: -5.558621406555176
    5. '<|end|>' → logprob: -5.808621406555176
    6. '                           ' → logprob: -6.183621406555176
    7. '                               ' → logprob: -6.683621406555176
    8. '                        ' → logprob: -6.933621406555176
    9. ',' → logprob: -7.558621406555176
    10. '                   ' → logprob: -7.808621406555176

Token 3665: ' ' (ID: 220)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.5471983551979065
    2. ' s' → logprob: -1.2971982955932617
    3. ' t' → logprob: -2.5471982955932617
    4. 't' → logprob: -2.6721982955932617
    5. '1' → logprob: -8.047198295593262
    6. ' ' → logprob: -9.297198295593262
    7. '(s' → logprob: -9.547198295593262
    8. ' (' → logprob: -9.547198295593262
    9. '(' → logprob: -10.547198295593262
    10. '                   ' → logprob: -10.672198295593262

Token 3666: '0' (ID: 15)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.05154578387737274
    2. ' s' → logprob: -3.0515458583831787
    3. 't' → logprob: -6.1765456199646
    4. ' t' → logprob: -7.8015456199646
    5. '1' → logprob: -8.426546096801758
    6. '(s' → logprob: -9.176546096801758
    7. '0' → logprob: -10.051546096801758
    8. '(' → logprob: -10.051546096801758
    9. ' ' → logprob: -10.801546096801758
    10. ' (' → logprob: -11.176546096801758

Token 3667: ' <=' (ID: 5017)
  Prédit: '<='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<=' → logprob: -0.4463183581829071
    2. ' <=' → logprob: -1.0713183879852295
    3. '<' → logprob: -4.94631814956665
    4. '.' → logprob: -5.32131814956665
    5. ' <' → logprob: -5.44631814956665
    6. ',' → logprob: -7.57131814956665
    7. '<|end|>' → logprob: -8.946318626403809
    8. '[' → logprob: -9.071318626403809
    9. '1' → logprob: -9.196318626403809
    10. '0' → logprob: -9.571318626403809

Token 3668: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.0006272526225075126
    2. ' s' → logprob: -7.375627040863037
    3. '   ' → logprob: -15.000627517700195
    4. '                   ' → logprob: -15.500627517700195
    5. '               ' → logprob: -17.125627517700195
    6. '	s' → logprob: -17.625627517700195
    7. '                       ' → logprob: -17.625627517700195
    8. ' ' → logprob: -17.875627517700195
    9. '           ' → logprob: -18.000627517700195
    10. '  ' → logprob: -18.750627517700195

Token 3669: ' <=' (ID: 5017)
  Prédit: '<='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<=' → logprob: -0.13123096525669098
    2. ' <=' → logprob: -2.1312310695648193
    3. '.' → logprob: -6.00623083114624
    4. '<' → logprob: -6.88123083114624
    5. '1' → logprob: -8.006231307983398
    6. 'and' → logprob: -8.756231307983398
    7. '[' → logprob: -9.381231307983398
    8. ' and' → logprob: -9.506231307983398
    9. ' <' → logprob: -10.131231307983398
    10. ')<=' → logprob: -10.631231307983398

Token 3670: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.0280383548888494e-06
    2. ' ' → logprob: -13.875000953674316
    3. '   ' → logprob: -19.875001907348633
    4. '```' → logprob: -21.500001907348633
    5. '  ' → logprob: -21.750001907348633
    6. '0' → logprob: -22.750001907348633
    7. '[' → logprob: -23.250001907348633
    8. '+' → logprob: -23.375001907348633
    9. '(' → logprob: -23.750001907348633
    10. '**' → logprob: -24.000001907348633

Token 3671: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -16.0
    3. '   ' → logprob: -20.875
    4. '  ' → logprob: -21.5
    5. '```' → logprob: -23.0
    6. '
' → logprob: -23.375
    7. '(' → logprob: -24.625
    8. '0' → logprob: -25.125
    9. '...' → logprob: -25.125
    10. '+' → logprob: -25.125

Token 3672: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.7089541554450989
    2. ':
' → logprob: -1.333954095840454
    3. '                       ' → logprob: -1.458954095840454
    4. ' and' → logprob: -5.333954334259033
    5. '                               ' → logprob: -6.333954334259033
    6. '                   ' → logprob: -6.458954334259033
    7. '                           ' → logprob: -6.958954334259033
    8. '                        ' → logprob: -7.833954334259033
    9. '):
' → logprob: -7.958954334259033
    10. '               ' → logprob: -8.208953857421875

Token 3673: '                       ' (ID: 968)
  Prédit: '                       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.00011951648048125207
    2. '                           ' → logprob: -9.62511920928955
    3. '                        ' → logprob: -10.62511920928955
    4. '                      ' → logprob: -11.62511920928955
    5. ' t' → logprob: -12.25011920928955
    6. '                   ' → logprob: -12.50011920928955
    7. ',' → logprob: -12.87511920928955
    8. '                     ' → logprob: -12.87511920928955
    9. '                               ' → logprob: -13.12511920928955
    10. '                    ' → logprob: -13.62511920928955

Token 3674: ' t' (ID: 260)
  Prédit: '                           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                           ' → logprob: -0.0779900997877121
    2. '                       ' → logprob: -3.2029900550842285
    3. 't' (adapté à ' t') → logprob: -4.0779900550842285
    4. ' t' → logprob: -4.0779900550842285
    5. '                               ' → logprob: -8.077990531921387
    6. '   ' → logprob: -9.827990531921387
    7. '                        ' → logprob: -10.327990531921387
    8. '           ' → logprob: -10.327990531921387
    9. '       ' → logprob: -11.202990531921387
    10. '               ' → logprob: -11.577990531921387

Token 3675: '_candidates' (ID: 186937)
  Prédit: '_candidates'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_candidates' → logprob: -0.205577552318573
    2. ',' → logprob: -1.9555776119232178
    3. '<|end|>' → logprob: -3.7055776119232178
    4. '.' → logprob: -5.080577373504639
    5. '=' → logprob: -5.955577373504639
    6. '                           ' → logprob: -6.205577373504639
    7. ')' → logprob: -6.330577373504639
    8. '.append' → logprob: -6.455577373504639
    9. '<|end|>' → logprob: -6.830577373504639
    10. ' t' → logprob: -7.830577373504639

Token 3676: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.0011782010551542044
    2. '.' → logprob: -6.75117826461792
    3. ' .' → logprob: -13.001177787780762
    4. '.app' → logprob: -13.376177787780762
    5. '.setdefault' → logprob: -13.501177787780762
    6. 'append' → logprob: -14.251177787780762
    7. '<|end|>' → logprob: -14.501177787780762
    8. '.extend' → logprob: -15.126177787780762
    9. '.sort' → logprob: -15.251177787780762
    10. '.Append' → logprob: -15.876177787780762

Token 3677: '(' (ID: 7)
  Prédit: '(t'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(t' → logprob: -0.2587878108024597
    2. ' (' → logprob: -2.0087878704071045
    3. '(' → logprob: -2.5087878704071045
    4. '((' → logprob: -4.383787631988525
    5. '                       ' → logprob: -11.758788108825684
    6. '                           ' → logprob: -12.633788108825684
    7. ' ((' → logprob: -13.508788108825684
    8. '   ' → logprob: -14.383788108825684
    9. '(s' → logprob: -14.508788108825684
    10. '(
' → logprob: -14.633788108825684

Token 3678: ' (' (ID: 350)
  Prédit: '(t'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(t' → logprob: -0.003258161712437868
    2. ' (' → logprob: -5.753258228302002
    3. '                           ' → logprob: -10.253257751464844
    4. '(' → logprob: -10.753257751464844
    5. 't' → logprob: -11.128257751464844
    6. '                               ' → logprob: -12.253257751464844
    7. '   ' → logprob: -13.628257751464844
    8. '                       ' → logprob: -13.878257751464844
    9. ' t' → logprob: -14.503257751464844
    10. '                                   ' → logprob: -15.128257751464844

Token 3679: 't' (ID: 83)
  Prédit: 't'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -4.584861744660884e-05
    2. ' t' → logprob: -10.125045776367188
    3. '                           ' → logprob: -12.875045776367188
    4. '                               ' → logprob: -13.250045776367188
    5. '`t' → logprob: -14.875045776367188
    6. '                                   ' → logprob: -15.375045776367188
    7. '(t' → logprob: -15.500045776367188
    8. '                       ' → logprob: -15.625045776367188
    9. '                                       ' → logprob: -15.750045776367188
    10. ')t' → logprob: -15.875045776367188

Token 3680: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00018327576981391758
    2. ',
' → logprob: -9.50018310546875
    3. ' ,' → logprob: -10.25018310546875
    4. ')' → logprob: -10.50018310546875
    5. '(edge' → logprob: -11.75018310546875
    6. '                       ' → logprob: -11.87518310546875
    7. '[' → logprob: -12.75018310546875
    8. ',e' → logprob: -13.12518310546875
    9. ',p' → logprob: -13.25018310546875
    10. '                           ' → logprob: -13.25018310546875

Token 3681: ' edge' (ID: 11165)
  Prédit: 'edge'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'edge' → logprob: -0.038188714534044266
    2. ' edge' → logprob: -3.2881886959075928
    3. '                       ' → logprob: -10.038188934326172
    4. '                   ' → logprob: -10.288188934326172
    5. '(edge' → logprob: -11.038188934326172
    6. '                        ' → logprob: -11.413188934326172
    7. 'Edge' → logprob: -11.788188934326172
    8. '                    ' → logprob: -11.788188934326172
    9. '                           ' → logprob: -12.413188934326172
    10. ')' → logprob: -12.663188934326172

Token 3682: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0033717502374202013
    2. '                       ' → logprob: -5.753371715545654
    3. '                           ' → logprob: -9.753372192382812
    4. '               ' → logprob: -10.628372192382812
    5. ' )' → logprob: -10.628372192382812
    6. '           ' → logprob: -11.003372192382812
    7. ')
' → logprob: -11.128372192382812
    8. '                        ' → logprob: -11.128372192382812
    9. '                   ' → logprob: -11.253372192382812
    10. ')}' → logprob: -11.753372192382812

Token 3683: ' )

' (ID: 11467)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.007813043892383575
    2. '                       ' → logprob: -5.882812976837158
    3. '           ' → logprob: -6.257812976837158
    4. ')
' → logprob: -6.507812976837158
    5. '               ' → logprob: -6.882812976837158
    6. '                           ' → logprob: -8.257813453674316
    7. '                   ' → logprob: -8.632813453674316
    8. ',' → logprob: -10.382813453674316
    9. '       ' → logprob: -10.632813453674316
    10. ' )' → logprob: -11.632813453674316

Token 3684: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0036985352635383606
    2. '
' → logprob: -5.628698348999023
    3. ')
' → logprob: -10.128698348999023
    4. '            
' → logprob: -11.128698348999023
    5. '               ' → logprob: -11.753698348999023
    6. '```' → logprob: -11.878698348999023
    7. '       ' → logprob: -12.128698348999023
    8. ')' → logprob: -12.253698348999023
    9. '[' → logprob: -12.878698348999023
    10. ',' → logprob: -13.128698348999023

Token 3685: ' if' (ID: 538)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.2547377943992615
    2. 'if' (adapté à ' if') → logprob: -1.6297378540039062
    3. '       ' → logprob: -4.504737854003906
    4. ' if' → logprob: -4.754737854003906
    5. 't' → logprob: -4.879737854003906
    6. '#' → logprob: -7.004737854003906
    7. '
' → logprob: -8.004737854003906
    8. ' t' → logprob: -8.629737854003906
    9. 'edges' → logprob: -9.629737854003906
    10. '```' → logprob: -10.129737854003906

Token 3686: ' not' (ID: 625)
  Prédit: ' not'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.44039997458457947
    2. 'not' → logprob: -1.0654000043869019
    3. 't' → logprob: -5.190400123596191
    4. 'len' → logprob: -5.315400123596191
    5. ' t' → logprob: -7.190400123596191
    6. ' len' → logprob: -7.940400123596191
    7. '   ' → logprob: -10.690400123596191
    8. '       ' → logprob: -12.315400123596191
    9. '           ' → logprob: -12.690400123596191
    10. '(not' → logprob: -13.690400123596191

Token 3687: ' t' (ID: 260)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.2519313097000122
    2. ' t' → logprob: -1.5019313097000122
    3. 'len' → logprob: -14.001931190490723
    4. '(t' → logprob: -14.376931190490723
    5. '_t' → logprob: -15.251931190490723
    6. ' ' → logprob: -16.00193214416504
    7. '`t' → logprob: -16.50193214416504
    8. ')t' → logprob: -16.50193214416504
    9. '   ' → logprob: -16.62693214416504
    10. '
' → logprob: -16.75193214416504

Token 3688: '_candidates' (ID: 186937)
  Prédit: '_candidates'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_candidates' → logprob: -4.842555426876061e-06
    2. 'andidates' → logprob: -13.125004768371582
    3. 'c' → logprob: -14.375004768371582
    4. '_c' → logprob: -15.250004768371582
    5. 'Candidates' → logprob: -15.375004768371582
    6. ':' → logprob: -15.375004768371582
    7. ''_' → logprob: -15.500004768371582
    8. '._' → logprob: -15.500004768371582
    9. '_choices' → logprob: -15.500004768371582
    10. '```' → logprob: -15.625004768371582

Token 3689: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.3869459629058838
    2. ':
' → logprob: -1.1369459629058838
    3. '[' → logprob: -10.386945724487305
    4. '.' → logprob: -11.011945724487305
    5. ':return' → logprob: -12.136945724487305
    6. '=' → logprob: -12.386945724487305
    7. '           ' → logprob: -12.886945724487305
    8. '==' → logprob: -13.011945724487305
    9. ':
' → logprob: -13.261945724487305
    10. ':

' → logprob: -13.761945724487305

Token 3690: '               ' (ID: 506)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.019517498090863228
    2. '               ' → logprob: -4.019517421722412
    3. 'return' → logprob: -7.269517421722412
    4. ' return' → logprob: -7.769517421722412
    5. '   ' → logprob: -9.51951789855957
    6. ' raise' → logprob: -10.01951789855957
    7. 'raise' → logprob: -10.14451789855957
    8. '       ' → logprob: -11.39451789855957
    9. '{return' → logprob: -11.39451789855957
    10. '                   ' → logprob: -11.64451789855957

Token 3691: ' #' (ID: 1069)
  Prédit: 'raise'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'raise' → logprob: -0.14941374957561493
    2. 'return' → logprob: -2.149413824081421
    3. '           ' → logprob: -4.274413585662842
    4. ' raise' → logprob: -5.399413585662842
    5. '               ' → logprob: -5.774413585662842
    6. '   ' → logprob: -8.2744140625
    7. '(' → logprob: -8.7744140625
    8. '                   ' → logprob: -9.3994140625
    9. ' return' → logprob: -10.0244140625
    10. '	raise' → logprob: -10.1494140625

Token 3692: ' No' (ID: 3004)
  Prédit: 'raise'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'raise' → logprob: -0.012499879114329815
    2. 'return' → logprob: -4.762499809265137
    3. ' raise' → logprob: -6.262499809265137
    4. '#' → logprob: -7.012499809265137
    5. '               ' → logprob: -7.262499809265137
    6. '           ' → logprob: -8.012499809265137
    7. '                   ' → logprob: -11.262499809265137
    8. 'break' → logprob: -11.512499809265137
    9. 'Raise' → logprob: -12.262499809265137
    10. '   ' → logprob: -12.762499809265137

Token 3693: ' intersections' (ID: 143513)
  Prédit: 'intersection'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'intersection' → logprob: -0.10498220473527908
    2. ' intersection' → logprob: -2.7299821376800537
    3. 't' → logprob: -4.229982376098633
    4. ' more' → logprob: -5.229982376098633
    5. 'inter' → logprob: -5.479982376098633
    6. ' valid' → logprob: -5.854982376098633
    7. 'more' → logprob: -6.354982376098633
    8. ' further' → logprob: -6.979982376098633
    9. 'valid' → logprob: -7.104982376098633
    10. 'solution' → logprob: -7.354982376098633

Token 3694: ' found' (ID: 2491)
  Prédit: ':
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.036949627101421356
    2. 'return' → logprob: -4.161949634552002
    3. ':' → logprob: -4.286949634552002
    4. '.
' → logprob: -6.411949634552002
    5. ':return' → logprob: -6.661949634552002
    6. ',' → logprob: -6.911949634552002
    7. ' return' → logprob: -7.036949634552002
    8. '.' → logprob: -7.786949634552002
    9. '           ' → logprob: -7.786949634552002
    10. '
' → logprob: -8.536949157714844

Token 3695: ',' (ID: 11)
  Prédit: ':
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.09199148416519165
    2. 'return' → logprob: -3.716991424560547
    3. ' return' → logprob: -3.841991424560547
    4. ':return' → logprob: -3.966991424560547
    5. ':' → logprob: -4.716991424560547
    6. ',' → logprob: -5.591991424560547
    7. '\n' → logprob: -5.841991424560547
    8. '           ' → logprob: -6.091991424560547
    9. '               ' → logprob: -6.341991424560547
    10. '.
' → logprob: -7.341991424560547

Token 3696: ' should' (ID: 1757)
  Prédit: ' raise'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' raise' → logprob: -1.0706775188446045
    2. 'raise' → logprob: -1.4456775188446045
    3. 'return' → logprob: -1.5706775188446045
    4. ' return' → logprob: -2.1956775188446045
    5. '           ' → logprob: -2.9456775188446045
    6. '               ' → logprob: -3.8206775188446045
    7. '                   ' → logprob: -4.445677757263184
    8. '(' → logprob: -5.320677757263184
    9. '#' → logprob: -5.820677757263184
    10. ' (' → logprob: -6.195677757263184

Token 3697: ' not' (ID: 625)
  Prédit: ' raise'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' raise' → logprob: -0.0185508094727993
    2. 'raise' → logprob: -4.018550872802734
    3. ' return' → logprob: -8.018550872802734
    4. 'return' → logprob: -10.643550872802734
    5. '_raise' → logprob: -11.018550872802734
    6. ' not' → logprob: -11.393550872802734
    7. '	raise' → logprob: -12.018550872802734
    8. ' continue' → logprob: -12.143550872802734
    9. ' be' → logprob: -13.143550872802734
    10. 'not' → logprob: -13.518550872802734

Token 3698: ' happen' (ID: 5659)
  Prédit: ' happen'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' happen' → logprob: -0.9083887934684753
    2. 'occur' → logprob: -1.2833888530731201
    3. 'raise' → logprob: -1.4083888530731201
    4. 'h' → logprob: -3.90838885307312
    5. '_' → logprob: -4.283388614654541
    6. 'be' → logprob: -4.658388614654541
    7. '```' → logprob: -4.783388614654541
    8. ' occur' → logprob: -5.033388614654541
    9. '_h' → logprob: -5.533388614654541
    10. ' be' → logprob: -5.658388614654541

Token 3699: ' for' (ID: 395)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.41299310326576233
    2. ':
' → logprob: -2.2879931926727295
    3. '               ' → logprob: -2.2879931926727295
    4. '
' → logprob: -3.6629931926727295
    5. '\n' → logprob: -4.03799295425415
    6. 'raise' → logprob: -4.03799295425415
    7. ')
' → logprob: -4.41299295425415
    8. ',' → logprob: -4.41299295425415
    9. ',
' → logprob: -4.53799295425415
    10. 'return' → logprob: -4.66299295425415

Token 3700: ' correct' (ID: 6145)
  Prédit: 'valid'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'valid' → logprob: -1.1523478031158447
    2. 'closed' → logprob: -1.4023478031158447
    3. ' valid' → logprob: -2.9023478031158447
    4. ' closed' → logprob: -2.9023478031158447
    5. 'correct' → logprob: -3.0273478031158447
    6. 'a' → logprob: -3.1523478031158447
    7. ' code' → logprob: -3.4023478031158447
    8. ' a' → logprob: -3.4023478031158447
    9. 'proper' → logprob: -3.5273478031158447
    10. 'the' → logprob: -3.6523478031158447

Token 3701: ' worm' (ID: 40598)
  Prédit: ' code'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' code' → logprob: -0.3646809160709381
    2. 'code' → logprob: -1.2396808862686157
    3. 'geometry' → logprob: -5.739680767059326
    4. ' simulation' → logprob: -5.864680767059326
    5. 'simulation' → logprob: -5.989680767059326
    6. ' input' → logprob: -6.239680767059326
    7. ' geometry' → logprob: -6.239680767059326
    8. ' implementation' → logprob: -6.864680767059326
    9. ')' → logprob: -7.739680767059326
    10. ' inputs' → logprob: -7.864680767059326

Token 3702: ' path' (ID: 3104)
  Prédit: '_path'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_path' → logprob: -0.8632725477218628
    2. ':
' → logprob: -1.7382725477218628
    3. ' path' → logprob: -2.7382726669311523
    4. '
' → logprob: -2.8632726669311523
    5. 'path' → logprob: -3.2382726669311523
    6. '):
' → logprob: -3.3632726669311523
    7. ')' → logprob: -3.7382726669311523
    8. ')
' → logprob: -3.9882726669311523
    9. '_position' → logprob: -3.9882726669311523
    10. '(
' → logprob: -4.238272666931152

Token 3703: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.19783779978752136
    2. '               ' → logprob: -2.1978378295898438
    3. ',' → logprob: -4.072837829589844
    4. ':
' → logprob: -4.447837829589844
    5. '
' → logprob: -4.572837829589844
    6. ')
' → logprob: -4.947837829589844
    7. '       ' → logprob: -5.572837829589844
    8. 'raise' → logprob: -5.572837829589844
    9. ',
' → logprob: -6.072837829589844
    10. '.
' → logprob: -6.197837829589844

Token 3704: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.5297276973724365
    2. '           ' → logprob: -0.9047276973724365
    3. '                   ' → logprob: -5.654727935791016
    4. 'raise' → logprob: -7.029727935791016
    5. '                       ' → logprob: -7.279727935791016
    6. ' raise' → logprob: -7.404727935791016
    7. '   ' → logprob: -8.529727935791016
    8. '
' → logprob: -8.529727935791016
    9. '```' → logprob: -8.654727935791016
    10. 'return' → logprob: -9.029727935791016

Token 3705: ' raise' (ID: 9338)
  Prédit: 'raise'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'raise' (adapté à ' raise') → logprob: -0.011157942935824394
    2. 'return' → logprob: -4.761157989501953
    3. ' raise' → logprob: -6.011157989501953
    4. '               ' → logprob: -10.136157989501953
    5. '                   ' → logprob: -10.636157989501953
    6. '           ' → logprob: -11.136157989501953
    7. '#' → logprob: -12.511157989501953
    8. '(' → logprob: -13.636157989501953
    9. ' return' → logprob: -13.761157989501953
    10. '   ' → logprob: -14.011157989501953

Token 3706: ' Runtime' (ID: 17606)
  Prédit: 'Value'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Value' → logprob: -0.5601767897605896
    2. 'Runtime' → logprob: -1.0601768493652344
    3. ' Runtime' → logprob: -2.5601768493652344
    4. ' Value' → logprob: -5.310176849365234
    5. 'Stop' → logprob: -8.560176849365234
    6. 'Exception' → logprob: -10.685176849365234
    7. 'Assertion' → logprob: -11.435176849365234
    8. '_value' → logprob: -11.560176849365234
    9. '(Runtime' → logprob: -12.185176849365234
    10. ' value' → logprob: -12.310176849365234

Token 3707: 'Error' (ID: 2255)
  Prédit: 'Error'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Error' → logprob: -1.4617256056226324e-05
    2. 'Warning' → logprob: -11.375014305114746
    3. 'rror' → logprob: -13.875014305114746
    4. '
' → logprob: -14.500014305114746
    5. 'ERROR' → logprob: -14.625014305114746
    6. 'error' → logprob: -14.625014305114746
    7. '```' → logprob: -15.875014305114746
    8. '   ' → logprob: -16.500015258789062
    9. '       ' → logprob: -17.250015258789062
    10. 'Errors' → logprob: -17.500015258789062

Token 3708: '("' (ID: 568)
  Prédit: '("'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '("' → logprob: -0.1543101966381073
    2. '(' → logprob: -2.0293102264404297
    3. '(
' → logprob: -5.15431022644043
    4. '(f' → logprob: -5.77931022644043
    5. '('' → logprob: -6.77931022644043
    6. '("("' → logprob: -7.15431022644043
    7. '(",' → logprob: -7.52931022644043
    8. '"' → logprob: -8.90431022644043
    9. '(":' → logprob: -11.52931022644043
    10. '("'' → logprob: -11.65431022644043

Token 3709: 'No' (ID: 3160)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.2927863895893097
    2. '"No' → logprob: -2.1677863597869873
    3. '"W' → logprob: -2.7927863597869873
    4. 'No' → logprob: -3.1677863597869873
    5. ''' → logprob: -4.042786598205566
    6. 'W' → logprob: -4.667786598205566
    7. '("' → logprob: -5.917786598205566
    8. 'Value' → logprob: -5.917786598205566
    9. 'f' → logprob: -6.667786598205566
    10. 'Runtime' → logprob: -7.042786598205566

Token 3710: ' edge' (ID: 11165)
  Prédit: ' intersection'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' intersection' → logprob: -0.8595889210700989
    2. 'intersection' → logprob: -1.609588861465454
    3. ' valid' → logprob: -1.734588861465454
    4. 'inter' → logprob: -2.734588861465454
    5. ' edge' → logprob: -2.859588861465454
    6. ' t' → logprob: -3.859588861465454
    7. ' intersections' → logprob: -4.234589099884033
    8. 't' → logprob: -4.359589099884033
    9. ' further' → logprob: -4.859589099884033
    10. ' more' → logprob: -5.109589099884033

Token 3711: ' intersection' (ID: 42002)
  Prédit: '_inter'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_inter' → logprob: -0.0036321463994681835
    2. ' intersection' → logprob: -6.003632068634033
    3. 'intersection' → logprob: -6.878632068634033
    4. 'inter' → logprob: -10.003632545471191
    5. ' intersections' → logprob: -10.253632545471191
    6. '_hit' → logprob: -11.628632545471191
    7. ')' → logprob: -11.753632545471191
    8. '_to' → logprob: -11.753632545471191
    9. '_INTER' → logprob: -12.128632545471191
    10. '_found' → logprob: -12.378632545471191

Token 3712: ' found' (ID: 2491)
  Prédit: ' found'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' found' → logprob: -0.10714510828256607
    2. 'found' → logprob: -2.357145071029663
    3. '_found' → logprob: -5.482145309448242
    4. ')' → logprob: -6.232145309448242
    5. ' detected' → logprob: -7.857145309448242
    6. '           ' → logprob: -8.982145309448242
    7. '       ' → logprob: -9.857145309448242
    8. '   ' → logprob: -10.107145309448242
    9. ')
' → logprob: -10.357145309448242
    10. 'det' → logprob: -10.607145309448242

Token 3713: '")
' (ID: 1896)
  Prédit: ')")
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')")
' → logprob: -0.7246080636978149
    2. ')' → logprob: -1.349608063697815
    3. '           ' → logprob: -1.974608063697815
    4. ' for' → logprob: -3.5996079444885254
    5. '")
' → logprob: -3.8496079444885254
    6. '")' → logprob: -4.099607944488525
    7. ',' → logprob: -4.599607944488525
    8. ' found' → logprob: -4.724607944488525
    9. '               ' → logprob: -5.474607944488525
    10. '.")
' → logprob: -5.599607944488525

Token 3714: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.1177448108792305
    2. '       ' → logprob: -2.7427449226379395
    3. '
' → logprob: -3.2427449226379395
    4. '```' → logprob: -5.1177449226379395
    5. ')' → logprob: -7.7427449226379395
    6. ')
' → logprob: -7.9927449226379395
    7. '   ' → logprob: -8.742744445800781
    8. '               ' → logprob: -8.992744445800781
    9. '        
' → logprob: -9.242744445800781
    10. 'return' → logprob: -9.367744445800781

Token 3715: ' #' (ID: 1069)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.11204417794942856
    2. 't' → logprob: -2.362044095993042
    3. '       ' → logprob: -5.362044334411621
    4. '
' → logprob: -5.362044334411621
    5. ' t' → logprob: -6.737044334411621
    6. '#' (adapté à ' #') → logprob: -6.987044334411621
    7. '```' → logprob: -9.112044334411621
    8. '   ' → logprob: -9.737044334411621
    9. 'sorted' → logprob: -10.612044334411621
    10. '`t' → logprob: -11.112044334411621

Token 3716: ' Return' (ID: 6318)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.6246482729911804
    2. '0' → logprob: -2.499648332595825
    3. 'max' → logprob: -2.874648332595825
    4. 't' → logprob: -2.874648332595825
    5. '#' → logprob: -3.249648332595825
    6. 'return' → logprob: -3.374648332595825
    7. '           ' → logprob: -3.499648332595825
    8. '=' → logprob: -3.624648332595825
    9. '
' → logprob: -3.874648332595825
    10. '```' → logprob: -3.999648332595825

Token 3717: ' minimal' (ID: 19957)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.01815415732562542
    2. ' min' → logprob: -4.018154144287109
    3. '(min' → logprob: -12.51815414428711
    4. 'max' → logprob: -15.01815414428711
    5. 'minimum' → logprob: -16.26815414428711
    6. 'm' → logprob: -17.01815414428711
    7. '   ' → logprob: -17.14315414428711
    8. '=min' → logprob: -17.51815414428711
    9. 't' → logprob: -17.76815414428711
    10. '	min' → logprob: -17.89315414428711

Token 3718: ' positive' (ID: 8841)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 't' → logprob: -0.4590299725532532
    2. '(t' → logprob: -1.0840299129486084
    3. '(
' → logprob: -4.7090301513671875
    4. '(' → logprob: -4.7090301513671875
    5. ' t' → logprob: -5.2090301513671875
    6. '
' → logprob: -6.0840301513671875
    7. '```' → logprob: -7.0840301513671875
    8. ' (' → logprob: -7.2090301513671875
    9. '_t' → logprob: -7.4590301513671875
    10. '_candidate' → logprob: -7.7090301513671875

Token 3719: ' t' (ID: 260)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.3619557023048401
    2. '(t' → logprob: -1.2369556427001953
    3. '(' → logprob: -5.111955642700195
    4. '(
' → logprob: -5.361955642700195
    5. ' (' → logprob: -6.486955642700195
    6. ' t' → logprob: -6.861955642700195
    7. '_t' → logprob: -9.361955642700195
    8. '
' → logprob: -12.111955642700195
    9. ' (
' → logprob: -12.111955642700195
    10. '(min' → logprob: -12.361955642700195

Token 3720: ' and' (ID: 326)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.9751231670379639
    2. 'min' → logprob: -1.1001231670379639
    3. ',min' → logprob: -2.725123167037964
    4. ' =' → logprob: -2.975123167037964
    5. '=min' → logprob: -3.100123167037964
    6. '           ' → logprob: -3.475123167037964
    7. '(min' → logprob: -3.725123167037964
    8. '=' → logprob: -4.100123405456543
    9. ' min' → logprob: -4.225123405456543
    10. 't' → logprob: -4.350123405456543

Token 3721: ' corresponding' (ID: 21824)
  Prédit: 'edge'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'edge' → logprob: -0.2890363335609436
    2. ' edge' → logprob: -1.9140362739562988
    3. 't' → logprob: -2.664036273956299
    4. 'min' → logprob: -4.164036273956299
    5. ' t' → logprob: -4.664036273956299
    6. ' min' → logprob: -5.414036273956299
    7. '_edge' → logprob: -7.539036273956299
    8. ' associated' → logprob: -7.914036273956299
    9. 'sorted' → logprob: -8.039036750793457
    10. 'second' → logprob: -8.039036750793457

Token 3722: ' edge' (ID: 11165)
  Prédit: 'edge'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'edge' → logprob: -0.07891710847616196
    2. ' edge' → logprob: -2.5789170265197754
    3. '(edge' → logprob: -10.578917503356934
    4. '_edge' → logprob: -13.703917503356934
    5. '   ' → logprob: -15.078917503356934
    6. ' ' → logprob: -15.828917503356934
    7. '       ' → logprob: -16.578916549682617
    8. 'e' → logprob: -16.703916549682617
    9. '(' → logprob: -16.953916549682617
    10. '  ' → logprob: -17.703916549682617

Token 3723: '
' (ID: 198)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.2660299837589264
    2. '(min' → logprob: -2.6410300731658936
    3. ' min' → logprob: -3.1410300731658936
    4. '
' → logprob: -3.7660300731658936
    5. '           ' → logprob: -3.8910300731658936
    6. '   ' → logprob: -3.8910300731658936
    7. 'return' → logprob: -4.3910298347473145
    8. '=min' → logprob: -4.6410298347473145
    9. '[min' → logprob: -4.7660298347473145
    10. ',min' → logprob: -5.3910298347473145

Token 3724: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.19461888074874878
    2. '       ' → logprob: -2.1946189403533936
    3. 'min' → logprob: -3.8196189403533936
    4. 'return' → logprob: -4.3196187019348145
    5. '```' → logprob: -4.6946187019348145
    6. '
' → logprob: -5.3196187019348145
    7. ' min' → logprob: -5.3196187019348145
    8. '(min' → logprob: -5.9446187019348145
    9. ' return' → logprob: -6.3196187019348145
    10. ',' → logprob: -6.3196187019348145

Token 3725: ' t' (ID: 260)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.029956435784697533
    2. ' min' → logprob: -3.529956340789795
    3. 'sorted' → logprob: -9.404956817626953
    4. '```' → logprob: -9.779956817626953
    5. 'return' → logprob: -10.279956817626953
    6. '(min' → logprob: -11.529956817626953
    7. '`' → logprob: -11.779956817626953
    8. '   ' → logprob: -12.154956817626953
    9. '[min' → logprob: -13.154956817626953
    10. '
' → logprob: -13.154956817626953

Token 3726: '_min' (ID: 15950)
  Prédit: '_candidates'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_candidates' → logprob: -0.0010537689086049795
    2. ',' → logprob: -7.126053810119629
    3. '_c' → logprob: -9.751053810119629
    4. ' =' → logprob: -10.001053810119629
    5. '=' → logprob: -10.001053810119629
    6. '_tokens' → logprob: -10.626053810119629
    7. 's' → logprob: -10.876053810119629
    8. ')' → logprob: -11.126053810119629
    9. ',_' → logprob: -11.501053810119629
    10. '[' → logprob: -11.876053810119629

Token 3727: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.2435184121131897
    2. '=' → logprob: -1.743518352508545
    3. ' =' → logprob: -3.993518352508545
    4. '_candidates' → logprob: -4.118518352508545
    5. ',t' → logprob: -6.118518352508545
    6. ' ,' → logprob: -7.118518352508545
    7. ',_' → logprob: -7.243518352508545
    8. '_,' → logprob: -7.368518352508545
    9. 't' → logprob: -7.743518352508545
    10. ')' → logprob: -7.868518352508545

Token 3728: ' edge' (ID: 11165)
  Prédit: 'edge'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'edge' → logprob: -0.09704490005970001
    2. ' edge' → logprob: -2.4720449447631836
    3. 't' → logprob: -4.972044944763184
    4. ' t' → logprob: -6.847044944763184
    5. 'e' → logprob: -10.097044944763184
    6. '_edge' → logprob: -10.472044944763184
    7. '(edge' → logprob: -13.222044944763184
    8. '=edge' → logprob: -13.472044944763184
    9. '   ' → logprob: -13.847044944763184
    10. '`' → logprob: -13.847044944763184

Token 3729: '_min' (ID: 15950)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.027483392506837845
    2. ' =' → logprob: -3.6524834632873535
    3. '_candidates' → logprob: -7.0274834632873535
    4. ')' → logprob: -8.777482986450195
    5. ',' → logprob: -9.777482986450195
    6. '           ' → logprob: -10.527482986450195
    7. '=t' → logprob: -11.527482986450195
    8. '_candidate' → logprob: -11.527482986450195
    9. ')=' → logprob: -11.652482986450195
    10. 't' → logprob: -11.777482986450195

Token 3730: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.014829208143055439
    2. ' =' → logprob: -4.264829158782959
    3. ')' → logprob: -7.514829158782959
    4. ')=' → logprob: -9.639829635620117
    5. '=t' → logprob: -10.764829635620117
    6. 't' → logprob: -11.264829635620117
    7. ',' → logprob: -12.139829635620117
    8. '_candidates' → logprob: -12.514829635620117
    9. ' t' → logprob: -13.139829635620117
    10. '_candidate' → logprob: -13.639829635620117

Token 3731: ' min' (ID: 1349)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.04860984906554222
    2. ' min' → logprob: -3.048609733581543
    3. 't' → logprob: -10.798609733581543
    4. 'sorted' → logprob: -13.298609733581543
    5. ' t' → logprob: -15.548609733581543
    6. '(min' → logprob: -15.923609733581543
    7. '   ' → logprob: -16.17361068725586
    8. ' sorted' → logprob: -17.67361068725586
    9. '	min' → logprob: -18.29861068725586
    10. ' ' → logprob: -18.67361068725586

Token 3732: '(t' (ID: 2025)
  Prédit: '(t'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(t' → logprob: -0.0018260732758790255
    2. 't' → logprob: -6.626826286315918
    3. '(' → logprob: -8.376826286315918
    4. '(
' → logprob: -8.626826286315918
    5. '((' → logprob: -9.376826286315918
    6. ' (' → logprob: -12.626826286315918
    7. ' t' → logprob: -13.626826286315918
    8. '([(' → logprob: -14.501826286315918
    9. '(x' → logprob: -15.626826286315918
    10. '	t' → logprob: -15.626826286315918

Token 3733: '_candidates' (ID: 186937)
  Prédit: '_candidates'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_candidates' → logprob: -0.00012511172099038959
    2. '(t' → logprob: -9.12512493133545
    3. 't' → logprob: -11.62512493133545
    4. '_candidate' → logprob: -13.62512493133545
    5. 'Candidates' → logprob: -14.00012493133545
    6. ')' → logprob: -14.25012493133545
    7. '[(' → logprob: -14.25012493133545
    8. '_tokens' → logprob: -14.62512493133545
    9. '[' → logprob: -14.62512493133545
    10. ' t' → logprob: -14.87512493133545

Token 3734: ',' (ID: 11)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.04552276432514191
    2. ',' → logprob: -3.795522689819336
    3. '<|end|>' → logprob: -5.045522689819336
    4. ')
' → logprob: -5.295522689819336
    5. '[' → logprob: -5.420522689819336
    6. '<|end|>' → logprob: -5.670522689819336
    7. ',key' → logprob: -7.545522689819336
    8. '(key' → logprob: -7.670522689819336
    9. '   ' → logprob: -8.420522689819336
    10. ',
' → logprob: -8.545522689819336

Token 3735: ' key' (ID: 2140)
  Prédit: 'key'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'key' → logprob: -0.03835909068584442
    2. ' key' → logprob: -3.2883591651916504
    3. '(key' → logprob: -8.163358688354492
    4. 'lambda' → logprob: -10.663358688354492
    5. '0' → logprob: -12.788358688354492
    6. '   ' → logprob: -12.788358688354492
    7. '[key' → logprob: -13.788358688354492
    8. '	key' → logprob: -14.288358688354492
    9. ')' → logprob: -14.913358688354492
    10. 'default' → logprob: -15.538358688354492

Token 3736: '=lambda' (ID: 64865)
  Prédit: '=lambda'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=lambda' → logprob: -0.10071921348571777
    2. 'lambda' → logprob: -2.3507192134857178
    3. '(lambda' → logprob: -7.600719451904297
    4. '=' → logprob: -12.225719451904297
    5. 'operator' → logprob: -12.350719451904297
    6. '_lambda' → logprob: -13.725719451904297
    7. '```' → logprob: -13.850719451904297
    8. ' lambda' → logprob: -13.975719451904297
    9. 'λ' → logprob: -16.350719451904297
    10. '   ' → logprob: -17.225719451904297

Token 3737: ' x' (ID: 1215)
  Prédit: 'lambda'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'lambda' → logprob: -0.00011450992315076292
    2. ' lambda' → logprob: -9.500114440917969
    3. '(lambda' → logprob: -10.375114440917969
    4. 'x' → logprob: -12.250114440917969
    5. '=lambda' → logprob: -14.000114440917969
    6. 'item' → logprob: -14.250114440917969
    7. 'operator' → logprob: -14.375114440917969
    8. 'lam' → logprob: -14.750114440917969
    9. 't' → logprob: -15.000114440917969
    10. '_lambda' → logprob: -15.000114440917969

Token 3738: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.21721863746643066
    2. 'x' → logprob: -2.2172186374664307
    3. 'lambda' → logprob: -2.9672186374664307
    4. ':x' → logprob: -3.7172186374664307
    5. '0' → logprob: -5.592218399047852
    6. ' x' → logprob: -5.717218399047852
    7. '[' → logprob: -5.967218399047852
    8. '1' → logprob: -7.967218399047852
    9. ' :' → logprob: -8.092218399047852
    10. '(x' → logprob: -9.467218399047852

Token 3739: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.0007117166533134878
    2. ' x' → logprob: -7.500711917877197
    3. 'lambda' → logprob: -8.750711441040039
    4. ' lambda' → logprob: -14.750711441040039
    5. '0' → logprob: -18.00071144104004
    6. '(x' → logprob: -18.12571144104004
    7. '[' → logprob: -18.87571144104004
    8. '(lambda' → logprob: -19.50071144104004
    9. '   ' → logprob: -19.75071144104004
    10. '	x' → logprob: -20.37571144104004

Token 3740: '[' (ID: 58)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.005413635168224573
    2. '[' → logprob: -5.25541353225708
    3. 'x' → logprob: -8.630414009094238
    4. ' ' → logprob: -14.005414009094238
    5. '(' → logprob: -16.130413055419922
    6. ' x' → logprob: -16.755413055419922
    7. '
' → logprob: -17.380413055419922
    8. '00' → logprob: -17.755413055419922
    9. '   ' → logprob: -18.005413055419922
    10. '000' → logprob: -18.005413055419922

Token 3741: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.4855663721391466e-05
    2. '[' → logprob: -11.125015258789062
    3. '
' → logprob: -17.250015258789062
    4. ' ' → logprob: -17.625015258789062
    5. '00' → logprob: -17.875015258789062
    6. '```' → logprob: -18.125015258789062
    7. '   ' → logprob: -18.500015258789062
    8. '000' → logprob: -18.750015258789062
    9. '(' → logprob: -19.125015258789062
    10. 't' → logprob: -19.375015258789062

Token 3742: '])
' (ID: 5169)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.7056847214698792
    2. '[' → logprob: -1.0806846618652344
    3. ')[' → logprob: -1.8306846618652344
    4. ')
' → logprob: -5.580684661865234
    5. '])' → logprob: -6.455684661865234
    6. '][' → logprob: -8.080684661865234
    7. '>)' → logprob: -8.705684661865234
    8. ')return' → logprob: -9.580684661865234
    9. '       ' → logprob: -9.705684661865234
    10. '   ' → logprob: -9.705684661865234

Token 3743: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.004457774106413126
    2. '       ' → logprob: -6.004457950592041
    3. 'return' → logprob: -6.754457950592041
    4. ' return' → logprob: -7.754457950592041
    5. '
' → logprob: -8.754457473754883
    6. ')' → logprob: -9.879457473754883
    7. '               ' → logprob: -10.379457473754883
    8. '```' → logprob: -10.379457473754883
    9. '   ' → logprob: -11.254457473754883
    10. ')
' → logprob: -11.379457473754883

Token 3744: ' return' (ID: 622)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.2460533231496811
    2. 'return' (adapté à ' return') → logprob: -1.6210533380508423
    3. ' return' → logprob: -4.496053218841553
    4. '       ' → logprob: -5.371053218841553
    5. '
' → logprob: -5.621053218841553
    6. '                       ' → logprob: -8.371053695678711
    7. ',' → logprob: -8.871053695678711
    8. '```' → logprob: -8.996053695678711
    9. ')
' → logprob: -9.121053695678711
    10. ')' → logprob: -9.246053695678711

Token 3745: ' t' (ID: 260)
  Prédit: '(t'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(t' → logprob: -0.06255596876144409
    2. ' (' → logprob: -3.062556028366089
    3. 't' → logprob: -4.31255578994751
    4. ' t' → logprob: -7.68755578994751
    5. '(' → logprob: -12.187556266784668
    6. '           ' → logprob: -12.312556266784668
    7. '(
' → logprob: -13.062556266784668
    8. '   ' → logprob: -13.562556266784668
    9. '               ' → logprob: -16.06255531311035
    10. '	t' → logprob: -16.06255531311035

Token 3746: '_min' (ID: 15950)
  Prédit: '_min'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_min' → logprob: -2.2200749754119897e-06
    2. '_MIN' → logprob: -13.875001907348633
    3. 'min' → logprob: -14.875001907348633
    4. '```' → logprob: -15.750001907348633
    5. '_token' → logprob: -16.125001907348633
    6. ' _' → logprob: -16.375001907348633
    7. '_tokens' → logprob: -16.625001907348633
    8. '`' → logprob: -16.750001907348633
    9. ')_' → logprob: -16.750001907348633
    10. '_max' → logprob: -16.875001907348633

Token 3747: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.003957413136959076
    2. '<|end|>' → logprob: -5.628957271575928
    3. '(' → logprob: -9.003957748413086
    4. '<|end|>' → logprob: -10.253957748413086
    5. ' ,' → logprob: -10.753957748413086
    6. '           ' → logprob: -10.753957748413086
    7. ')' → logprob: -10.753957748413086
    8. '...' → logprob: -11.128957748413086
    9. ',...' → logprob: -11.253957748413086
    10. '```' → logprob: -11.378957748413086

Token 3748: ' edge' (ID: 11165)
  Prédit: 'edge'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'edge' → logprob: -0.04858839511871338
    2. ' edge' → logprob: -3.048588275909424
    3. '(edge' → logprob: -14.298588752746582
    4. 'Edge' → logprob: -15.548588752746582
    5. '_edge' → logprob: -16.673587799072266
    6. '=edge' → logprob: -17.173587799072266
    7. 'edges' → logprob: -18.173587799072266
    8. ' ' → logprob: -18.548587799072266
    9. 'space' → logprob: -18.548587799072266
    10. '.edge' → logprob: -18.923587799072266

Token 3749: '_min' (ID: 15950)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.25908952951431274
    2. '
' → logprob: -2.134089469909668
    3. '

' → logprob: -2.884089469909668
    4. ')' → logprob: -4.759089469909668
    5. 'n' → logprob: -5.134089469909668
    6. ')

' → logprob: -5.259089469909668
    7. '
' → logprob: -5.384089469909668
    8. 's' → logprob: -5.509089469909668
    9. '\n' → logprob: -5.509089469909668
    10. ')
' → logprob: -5.884089469909668

Token 3750: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.5381268262863159
    2. 'def' → logprob: -0.9131268262863159
    3. '   ' → logprob: -5.7881269454956055
    4. '       ' → logprob: -5.9131269454956055
    5. '

' → logprob: -5.9131269454956055
    6. '           ' → logprob: -6.7881269454956055
    7. '\n' → logprob: -7.0381269454956055
    8. '```' → logprob: -7.2881269454956055
    9. '
' → logprob: -7.5381269454956055
    10. '\' → logprob: -7.6631269454956055

Token 3751: '       ' (ID: 309)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.005303130950778723
    2. '
' → logprob: -5.630302906036377
    3. '```' → logprob: -7.130302906036377
    4. '#' → logprob: -7.880302906036377
    5. '   ' → logprob: -8.130303382873535
    6. '       ' → logprob: -9.380303382873535
    7. ' def' → logprob: -9.630303382873535
    8. '           ' → logprob: -11.380303382873535
    9. '\' → logprob: -11.505303382873535
    10. '

' → logprob: -12.005303382873535

Token 3752: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.006298946216702461
    2. 'def' → logprob: -5.256299018859863
    3. '
' → logprob: -7.131299018859863
    4. '```' → logprob: -8.756299018859863
    5. '#' (adapté à ' #') → logprob: -10.006299018859863
    6. '   ' → logprob: -10.631299018859863
    7. '        
' → logprob: -10.631299018859863
    8. ' def' → logprob: -12.131299018859863
    9. '           ' → logprob: -12.631299018859863
    10. 'while' → logprob: -13.506299018859863

Token 3753: ' Helper' (ID: 31006)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.006014356389641762
    2. '
' → logprob: -5.881014347076416
    3. '       ' → logprob: -6.631014347076416
    4. '#' → logprob: -6.756014347076416
    5. '   ' → logprob: -7.881014347076416
    6. ' def' → logprob: -8.131014823913574
    7. 'while' → logprob: -10.506014823913574
    8. '           ' → logprob: -11.381014823913574
    9. ' #' → logprob: -13.131014823913574
    10. '        
' → logprob: -13.256014823913574

Token 3754: ':' (ID: 25)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.018205663189291954
    2. '
' → logprob: -4.018205642700195
    3. ' def' → logprob: -10.018205642700195
    4. '#' → logprob: -12.143205642700195
    5. '   ' → logprob: -12.893205642700195
    6. '       ' → logprob: -14.018205642700195
    7. '
' → logprob: -14.393205642700195
    8. '

' → logprob: -14.643205642700195
    9. '(
' → logprob: -14.893205642700195
    10. '```' → logprob: -15.268205642700195

Token 3755: ' find' (ID: 1646)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -5.512236498361744e-07
    2. '#' → logprob: -15.500000953674316
    3. ' def' → logprob: -16.0
    4. '```' → logprob: -16.5
    5. '
' → logprob: -17.125
    6. '   ' → logprob: -20.75
    7. '       ' → logprob: -20.875
    8. 'from' → logprob: -21.0
    9. 'Def' → logprob: -21.875
    10. '``' → logprob: -22.375

Token 3756: ' intersection' (ID: 42002)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'line' → logprob: -0.026018332690000534
    2. 'def' → logprob: -3.9010183811187744
    3. '
' → logprob: -5.401018142700195
    4. ' line' → logprob: -7.526018142700195
    5. '_line' → logprob: -9.026018142700195
    6. 'intersection' → logprob: -9.526018142700195
    7. 'point' → logprob: -10.026018142700195
    8. '#' → logprob: -10.651018142700195
    9. 'lambda' → logprob: -10.901018142700195
    10. '(line' → logprob: -10.901018142700195

Token 3757: ' of' (ID: 328)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.05514054372906685
    2. '(pos' → logprob: -3.305140495300293
    3. '_line' → logprob: -4.930140495300293
    4. '_point' → logprob: -6.430140495300293
    5. '_between' → logprob: -6.555140495300293
    6. '
' → logprob: -6.680140495300293
    7. 'pos' → logprob: -6.930140495300293
    8. '(line' → logprob: -6.930140495300293
    9. 'line' → logprob: -7.180140495300293
    10. 'point' → logprob: -7.430140495300293

Token 3758: ' ray' (ID: 22420)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'line' → logprob: -0.8970894813537598
    2. 'ray' → logprob: -0.8970894813537598
    3. '(pos' → logprob: -2.3970894813537598
    4. '(ray' → logprob: -3.1470894813537598
    5. 'pos' → logprob: -4.27208948135376
    6. '(line' → logprob: -4.27208948135376
    7. 'a' → logprob: -4.27208948135376
    8. 'def' → logprob: -5.77208948135376
    9. 'two' → logprob: -7.02208948135376
    10. 'point' → logprob: -7.52208948135376

Token 3759: ' pos' (ID: 1253)
  Prédit: '(pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(pos' → logprob: -0.7280238270759583
    2. '(p' → logprob: -0.9780238270759583
    3. '(origin' → logprob: -3.3530237674713135
    4. '_line' → logprob: -3.6030237674713135
    5. '(start' → logprob: -3.9780237674713135
    6. 'from' → logprob: -4.603024005889893
    7. 'origin' → logprob: -4.603024005889893
    8. '(line' → logprob: -4.978024005889893
    9. '(point' → logprob: -5.228024005889893
    10. 'def' → logprob: -5.603024005889893

Token 3760: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.03305191174149513
    2. ',' → logprob: -4.03305196762085
    3. '_,' → logprob: -5.28305196762085
    4. '_on' → logprob: -5.65805196762085
    5. '_' → logprob: -6.03305196762085
    6. '   ' → logprob: -6.78305196762085
    7. '_to' → logprob: -7.90805196762085
    8. ')' → logprob: -8.283051490783691
    9. '       ' → logprob: -8.283051490783691
    10. '_p' → logprob: -8.408051490783691

Token 3761: 'd' (ID: 67)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0033357522916048765
    2. ',' → logprob: -6.628335952758789
    3. '   ' → logprob: -7.378335952758789
    4. 'def' → logprob: -8.253335952758789
    5. '3' → logprob: -8.378335952758789
    6. '(
' → logprob: -8.628335952758789
    7. '(' → logprob: -9.253335952758789
    8. '_d' → logprob: -9.503335952758789
    9. '(x' → logprob: -9.628335952758789
    10. '_' → logprob: -9.753335952758789

Token 3762: ' +' (ID: 659)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.19116252660751343
    2. '(pos' → logprob: -2.441162586212158
    3. '(p' → logprob: -3.566162586212158
    4. 'def' → logprob: -3.691162586212158
    5. 'with' → logprob: -4.816162586212158
    6. ',
' → logprob: -5.566162586212158
    7. 'pos' → logprob: -5.816162586212158
    8. ' (' → logprob: -6.191162586212158
    9. ',pos' → logprob: -6.316162586212158
    10. '```' → logprob: -6.941162586212158

Token 3763: ' t' (ID: 260)
  Prédit: 'dir'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dir' → logprob: -0.17025882005691528
    2. 't' → logprob: -2.2952587604522705
    3. ' dir' → logprob: -3.9202587604522705
    4. '(t' → logprob: -4.54525899887085
    5. '(dir' → logprob: -4.54525899887085
    6. 'lambda' → logprob: -4.67025899887085
    7. ' t' → logprob: -5.54525899887085
    8. 'direction' → logprob: -7.79525899887085
    9. ' (' → logprob: -8.670258522033691
    10. ' lambda' → logprob: -8.670258522033691

Token 3764: '*' (ID: 9)
  Prédit: '(pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(pos' → logprob: -0.3218826949596405
    2. ',' → logprob: -1.821882724761963
    3. 'def' → logprob: -3.571882724761963
    4. 'pos' → logprob: -3.821882724761963
    5. '(p' → logprob: -4.071882724761963
    6. '_to' → logprob: -4.446882724761963
    7. '(dir' → logprob: -4.821882724761963
    8. ',pos' → logprob: -4.946882724761963
    9. 'to' → logprob: -5.946882724761963
    10. '(' → logprob: -6.071882724761963

Token 3765: 'dir' (ID: 6457)
  Prédit: 'dir'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dir' → logprob: -0.0001940040965564549
    2. '(dir' → logprob: -9.37519359588623
    3. 'direction' → logprob: -9.62519359588623
    4. ' dir' → logprob: -10.12519359588623
    5. 'vec' → logprob: -14.25019359588623
    6. '(' → logprob: -14.25019359588623
    7. 'face' → logprob: -14.50019359588623
    8. 'v' → logprob: -15.50019359588623
    9. '_dir' → logprob: -15.50019359588623
    10. '   ' → logprob: -15.62519359588623

Token 3766: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.48220741748809814
    2. 'def' → logprob: -1.4822074174880981
    3. '(pos' → logprob: -2.9822072982788086
    4. '(p' → logprob: -3.3572072982788086
    5. ',' → logprob: -3.4822072982788086
    6. '_pos' → logprob: -4.857207298278809
    7. '_to' → logprob: -5.107207298278809
    8. 'pos' → logprob: -5.232207298278809
    9. '   ' → logprob: -5.732207298278809
    10. '_p' → logprob: -5.857207298278809

Token 3767: 'd' (ID: 67)
  Prédit: 'd'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.4135741591453552
    2. '2' → logprob: -1.53857421875
    3. '(pos' → logprob: -2.41357421875
    4. ',' → logprob: -4.28857421875
    5. '((' → logprob: -5.03857421875
    6. 'pos' → logprob: -5.66357421875
    7. 'vec' → logprob: -6.16357421875
    8. '(' → logprob: -6.16357421875
    9. '_d' → logprob: -6.91357421875
    10. 'def' → logprob: -7.28857421875

Token 3768: ' (' (ID: 350)
  Prédit: '(pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(pos' → logprob: -0.19269883632659912
    2. '(p' → logprob: -2.5676989555358887
    3. 'def' → logprob: -2.8176989555358887
    4. 'with' → logprob: -3.8176989555358887
    5. ',' → logprob: -5.692698955535889
    6. '_with' → logprob: -6.067698955535889
    7. 'pos' → logprob: -6.317698955535889
    8. '(start' → logprob: -6.692698955535889
    9. '_pos' → logprob: -6.692698955535889
    10. '_segment' → logprob: -6.817698955535889

Token 3769: 't' (ID: 83)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pos' → logprob: -0.07103906571865082
    2. '(pos' → logprob: -3.0710389614105225
    3. ' pos' → logprob: -4.571039199829102
    4. 'p' → logprob: -5.571039199829102
    5. '(p' → logprob: -5.571039199829102
    6. ',' → logprob: -6.571039199829102
    7. ' (' → logprob: -6.696039199829102
    8. ')' → logprob: -7.821039199829102
    9. ',pos' → logprob: -8.071039199829102
    10. 'def' → logprob: -8.196039199829102

Token 3770: '>=' (ID: 20974)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.04989263042807579
    2. ')' → logprob: -4.299892425537109
    3. '(' → logprob: -4.799892425537109
    4. '=' → logprob: -5.049892425537109
    5. ',pos' → logprob: -5.424892425537109
    6. ':' → logprob: -5.799892425537109
    7. '_start' → logprob: -5.799892425537109
    8. '(pos' → logprob: -6.049892425537109
    9. '),' → logprob: -6.924892425537109
    10. '```' → logprob: -6.924892425537109

Token 3771: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.3856492842023727e-06
    2. ' ' → logprob: -14.000000953674316
    3. '1' → logprob: -14.625000953674316
    4. ')' → logprob: -18.500001907348633
    5. '=' → logprob: -19.000001907348633
    6. '```' → logprob: -19.375001907348633
    7. '   ' → logprob: -19.750001907348633
    8. '
' → logprob: -19.875001907348633
    9. '-' → logprob: -21.250001907348633
    10. '+' → logprob: -21.875001907348633

Token 3772: ')
' (ID: 446)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0017820450011640787
    2. ',p' → logprob: -6.876781940460205
    3. ',pos' → logprob: -8.126782417297363
    4. ')' → logprob: -8.376782417297363
    5. ' ,' → logprob: -9.626782417297363
    6. '(p' → logprob: -10.126782417297363
    7. ',
' → logprob: -10.251782417297363
    8. '(pos' → logprob: -11.251782417297363
    9. '           ' → logprob: -11.251782417297363
    10. '       ' → logprob: -11.501782417297363

Token 3773: '       ' (ID: 309)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.7901111245155334
    2. '(pos' → logprob: -1.5401110649108887
    3. '(' → logprob: -1.7901110649108887
    4. ',' → logprob: -2.7901110649108887
    5. '(
' → logprob: -2.9151110649108887
    6. 'with' → logprob: -4.165111064910889
    7. 'pos' → logprob: -4.290111064910889
    8. ' (' → logprob: -4.790111064910889
    9. ' def' → logprob: -5.915111064910889
    10. '=' → logprob: -6.165111064910889

Token 3774: ' #' (ID: 1069)
  Prédit: '(pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(pos' → logprob: -0.4846315383911133
    2. 'def' → logprob: -1.1096315383911133
    3. '(p' → logprob: -3.1096315383911133
    4. '(
' → logprob: -5.359631538391113
    5. 'pos' → logprob: -6.484631538391113
    6. 'from' → logprob: -6.609631538391113
    7. '(' → logprob: -7.859631538391113
    8. ' def' → logprob: -8.359631538391113
    9. '(P' → logprob: -8.609631538391113
    10. ',' → logprob: -8.609631538391113

Token 3775: ' with' (ID: 483)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -7.696077227592468e-05
    2. ' def' → logprob: -10.125077247619629
    3. '(
' → logprob: -11.250077247619629
    4. '(p' → logprob: -12.000077247619629
    5. '```' → logprob: -12.125077247619629
    6. '
' → logprob: -12.375077247619629
    7. '#' → logprob: -12.375077247619629
    8. '(pos' → logprob: -13.625077247619629
    9. '(' → logprob: -14.125077247619629
    10. 'pos' → logprob: -14.625077247619629

Token 3776: ' segment' (ID: 14806)
  Prédit: 'segment'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'segment' → logprob: -0.02133677899837494
    2. 'line' → logprob: -4.271336555480957
    3. '(p' → logprob: -5.646336555480957
    4. ' segment' → logprob: -6.771336555480957
    5. 'a' → logprob: -6.771336555480957
    6. 'the' → logprob: -8.271336555480957
    7. '(segment' → logprob: -8.271336555480957
    8. 'def' → logprob: -8.521336555480957
    9. '(line' → logprob: -9.021336555480957
    10. ' line' → logprob: -9.021336555480957

Token 3777: ' (' (ID: 350)
  Prédit: '(p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(p' → logprob: -0.021664049476385117
    2. 'p' → logprob: -4.146664142608643
    3. 'def' → logprob: -5.396664142608643
    4. ' (' → logprob: -8.021663665771484
    5. ' p' → logprob: -8.271663665771484
    6. 'segment' → logprob: -9.021663665771484
    7. '(point' → logprob: -9.771663665771484
    8. 'point' → logprob: -10.021663665771484
    9. '(' → logprob: -10.521663665771484
    10. '((' → logprob: -10.646663665771484

Token 3778: 'p' (ID: 79)
  Prédit: 'p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.0011061598779633641
    2. '(p' → logprob: -6.876106262207031
    3. 'a' → logprob: -11.001106262207031
    4. ' p' → logprob: -11.126106262207031
    5. 'point' → logprob: -11.501106262207031
    6. 'def' → logprob: -11.501106262207031
    7. '(a' → logprob: -12.626106262207031
    8. ' (' → logprob: -12.751106262207031
    9. ')p' → logprob: -12.751106262207031
    10. ')' → logprob: -12.876106262207031

Token 3779: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.750436007976532e-05
    2. '0' → logprob: -10.25003719329834
    3. '```' → logprob: -13.50003719329834
    4. '
' → logprob: -15.50003719329834
    5. 'a' → logprob: -16.125038146972656
    6. ')' → logprob: -16.250038146972656
    7. ' ' → logprob: -16.375038146972656
    8. ',' → logprob: -17.000038146972656
    9. 'os' → logprob: -17.250038146972656
    10. 'A' → logprob: -17.250038146972656

Token 3780: ',p' (ID: 14835)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.034314025193452835
    2. ',p' → logprob: -3.409313917160034
    3. 'p' → logprob: -7.784314155578613
    4. ' ,' → logprob: -8.534314155578613
    5. '```' → logprob: -11.534314155578613
    6. ':' → logprob: -11.534314155578613
    7. ',
' → logprob: -11.784314155578613
    8. '),' → logprob: -12.159314155578613
    9. ')' → logprob: -12.284314155578613
    10. '(p' → logprob: -12.659314155578613

Token 3781: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -7.588793960167095e-05
    2. 'd' → logprob: -9.750076293945312
    3. 'p' → logprob: -12.750076293945312
    4. ',' → logprob: -12.750076293945312
    5. 'os' → logprob: -12.875076293945312
    6. '<|end|>' → logprob: -13.250076293945312
    7. '
' → logprob: -13.375076293945312
    8. '```' → logprob: -13.875076293945312
    9. '_' → logprob: -14.375076293945312
    10. ')' → logprob: -14.375076293945312

Token 3782: '),' (ID: 936)
  Prédit: '):
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.1094900518655777
    2. '):' → logprob: -2.484490156173706
    3. ')' → logprob: -3.984490156173706
    4. '):

' → logprob: -6.609489917755127
    5. ')
' → logprob: -8.609490394592285
    6. ':' → logprob: -9.109490394592285
    7. '):
' → logprob: -10.109490394592285
    8. ',' → logprob: -11.234490394592285
    9. ')_' → logprob: -11.359490394592285
    10. 'def' → logprob: -12.234490394592285

Token 3783: ' return' (ID: 622)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.14799782633781433
    2. 'pos' → logprob: -2.7729978561401367
    3. ' def' → logprob: -3.5229978561401367
    4. ' pos' → logprob: -4.522997856140137
    5. '       ' → logprob: -4.647997856140137
    6. 'dir' → logprob: -5.147997856140137
    7. ' dir' → logprob: -5.397997856140137
    8. '           ' → logprob: -6.147997856140137
    9. 'lambda' → logprob: -6.147997856140137
    10. 'return' → logprob: -6.272997856140137

Token 3784: ' (' (ID: 350)
  Prédit: '(t'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(t' → logprob: -0.014233439229428768
    2. 't' → logprob: -4.389233589172363
    3. ' (' → logprob: -6.389233589172363
    4. ' t' → logprob: -11.014233589172363
    5. '(' → logprob: -11.264233589172363
    6. 'None' → logprob: -12.764233589172363
    7. '(None' → logprob: -12.764233589172363
    8. '   ' → logprob: -12.889233589172363
    9. 'tuple' → logprob: -14.014233589172363
    10. '
' → logprob: -14.389233589172363

Token 3785: 't' (ID: 83)
  Prédit: 't'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.00030578780570067465
    2. '(t' → logprob: -8.125306129455566
    3. ' t' → logprob: -12.250306129455566
    4. ')t' → logprob: -13.375306129455566
    5. '0' → logprob: -13.500306129455566
    6. '(' → logprob: -13.750306129455566
    7. ')' → logprob: -14.500306129455566
    8. ' (' → logprob: -15.875306129455566
    9. '   ' → logprob: -16.25030517578125
    10. '(
' → logprob: -16.87530517578125

Token 3786: ',s' (ID: 20379)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.2529694139957428
    2. ',s' → logprob: -1.5029693841934204
    3. ' ,' → logprob: -7.127969264984131
    4. ',float' → logprob: -10.252969741821289
    5. ',p' → logprob: -10.252969741821289
    6. ',
' → logprob: -10.377969741821289
    7. ',None' → logprob: -10.377969741821289
    8. ',int' → logprob: -10.877969741821289
    9. 's' → logprob: -11.252969741821289
    10. '
' → logprob: -11.877969741821289

Token 3787: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.013949460349977016
    2. '):' → logprob: -4.638949394226074
    3. '):
' → logprob: -5.638949394226074
    4. '),' → logprob: -8.763949394226074
    5. ')=' → logprob: -9.513949394226074
    6. '=None' → logprob: -9.763949394226074
    7. '),(' → logprob: -9.763949394226074
    8. ',' → logprob: -10.013949394226074
    9. '):(' → logprob: -10.013949394226074
    10. ':' → logprob: -10.513949394226074

Token 3788: ' with' (ID: 483)
  Prédit: '(pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(pos' → logprob: -0.010101928375661373
    2. 'def' → logprob: -5.135101795196533
    3. '(None' → logprob: -7.260101795196533
    4. ',' → logprob: -7.635101795196533
    5. '(' → logprob: -7.760101795196533
    6. '```' → logprob: -8.135102272033691
    7. '(
' → logprob: -8.260102272033691
    8. '((' → logprob: -8.385102272033691
    9. ':' → logprob: -8.510102272033691
    10. '(p' → logprob: -8.760102272033691

Token 3789: ' s' (ID: 265)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 't' → logprob: -0.31915852427482605
    2. '(lambda' → logprob: -2.5691585540771484
    3. 'lambda' → logprob: -2.5691585540771484
    4. 'def' → logprob: -2.9441585540771484
    5. 'None' → logprob: -3.4441585540771484
    6. '(t' → logprob: -4.819158554077148
    7. 's' → logprob: -5.194158554077148
    8. '(s' → logprob: -5.569158554077148
    9. 'True' → logprob: -5.694158554077148
    10. '(' → logprob: -5.819158554077148

Token 3790: ' parameter' (ID: 11047)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.583795428276062
    2. 'in' → logprob: -1.333795428276062
    3. ' =' → logprob: -2.3337955474853516
    4. ':' → logprob: -4.208795547485352
    5. ',' → logprob: -4.333795547485352
    6. '(' → logprob: -4.708795547485352
    7. ')' → logprob: -4.708795547485352
    8. ' in' → logprob: -4.833795547485352
    9. ' (' → logprob: -5.083795547485352
    10. '```' → logprob: -5.333795547485352

Token 3791: ' along' (ID: 4251)
  Prédit: '(pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(pos' → logprob: -0.11651664972305298
    2. '(' → logprob: -2.491516590118408
    3. '(p' → logprob: -4.491516590118408
    4. '(None' → logprob: -5.991516590118408
    5. 'between' → logprob: -6.616516590118408
    6. 'on' → logprob: -6.616516590118408
    7. 'for' → logprob: -6.866516590118408
    8. '(
' → logprob: -6.866516590118408
    9. ' (' → logprob: -6.991516590118408
    10. '(t' → logprob: -7.116516590118408

Token 3792: ' segment' (ID: 14806)
  Prédit: 'segment'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'segment' → logprob: -0.2143031656742096
    2. 'p' → logprob: -2.0893032550811768
    3. '(p' → logprob: -2.7143032550811768
    4. '(segment' → logprob: -7.089303016662598
    5. ' segment' → logprob: -7.589303016662598
    6. '(' → logprob: -7.839303016662598
    7. 'line' → logprob: -7.839303016662598
    8. 'the' → logprob: -8.089303016662598
    9. '#' → logprob: -8.589303016662598
    10. 'seg' → logprob: -10.089303016662598

Token 3793: ',' (ID: 11)
  Prédit: '(pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(pos' → logprob: -0.1864643543958664
    2. '(p' → logprob: -2.061464309692383
    3. 'def' → logprob: -3.936464309692383
    4. 'pos' → logprob: -4.311464309692383
    5. 'from' → logprob: -5.311464309692383
    6. ' (' → logprob: -6.311464309692383
    7. '(' → logprob: -6.811464309692383
    8. ',' → logprob: -7.561464309692383
    9. '((' → logprob: -7.561464309692383
    10. '(start' → logprob: -8.436464309692383

Token 3794: ' or' (ID: 503)
  Prédit: 'where'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'where' → logprob: -0.4450560212135315
    2. ' where' → logprob: -2.0700559616088867
    3. 'p' → logprob: -2.9450559616088867
    4. 'or' → logprob: -3.0700559616088867
    5. 'def' → logprob: -3.1950559616088867
    6. 'if' → logprob: -3.8200559616088867
    7. ' or' → logprob: -4.195055961608887
    8. '#' → logprob: -4.320055961608887
    9. 'pos' → logprob: -4.695055961608887
    10. 't' → logprob: -4.695055961608887

Token 3795: ' None' (ID: 4662)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -0.00012368128227535635
    2. ' None' → logprob: -9.000123977661133
    3. '(None' → logprob: -15.250123977661133
    4. '=None' → logprob: -18.500123977661133
    5. '_None' → logprob: -18.875123977661133
    6. '```' → logprob: -19.125123977661133
    7. '
' → logprob: -20.500123977661133
    8. '   ' → logprob: -20.625123977661133
    9. ',None' → logprob: -21.375123977661133
    10. '`' → logprob: -21.500123977661133

Token 3796: ' if' (ID: 538)
  Prédit: '(pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(pos' → logprob: -0.009909666143357754
    2. '(' → logprob: -5.384909629821777
    3. '(
' → logprob: -5.384909629821777
    4. 'def' → logprob: -7.759909629821777
    5. '(p' → logprob: -10.009909629821777
    6. '   ' → logprob: -10.009909629821777
    7. ' (' → logprob: -10.509909629821777
    8. '(position' → logprob: -10.509909629821777
    9. '(def' → logprob: -10.759909629821777
    10. ':' → logprob: -10.884909629821777

Token 3797: ' no' (ID: 860)
  Prédit: 'no'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'no' → logprob: -0.1837947517633438
    2. 'None' → logprob: -2.1837947368621826
    3. ' no' → logprob: -3.3087947368621826
    4. 'not' → logprob: -5.183794975280762
    5. 'outside' → logprob: -5.183794975280762
    6. ' None' → logprob: -5.308794975280762
    7. 'none' → logprob: -6.683794975280762
    8. 'No' → logprob: -8.058794975280762
    9. '(no' → logprob: -8.308794975280762
    10. '_no' → logprob: -8.308794975280762

Token 3798: ' intersection' (ID: 42002)
  Prédit: 'intersection'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'intersection' → logprob: -0.015336472541093826
    2. ' intersection' → logprob: -4.265336513519287
    3. 'inter' → logprob: -6.765336513519287
    4. '_inter' → logprob: -11.515336036682129
    5. '
' → logprob: -12.265336036682129
    6. '```' → logprob: -13.890336036682129
    7. '(inter' → logprob: -14.140336036682129
    8. 'interaction' → logprob: -14.140336036682129
    9. ' intersect' → logprob: -14.640336036682129
    10. '(
' → logprob: -14.765336036682129

Token 3799: '
' (ID: 198)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.12208821624517441
    2. '(' → logprob: -2.8720881938934326
    3. '(
' → logprob: -4.122088432312012
    4. '(pos' → logprob: -4.497088432312012
    5. ' def' → logprob: -4.622088432312012
    6. ':
' → logprob: -5.247088432312012
    7. '
' → logprob: -5.372088432312012
    8. ':' → logprob: -5.497088432312012
    9. '(def' → logprob: -5.872088432312012
    10. '(p' → logprob: -6.122088432312012

Token 3800: '       ' (ID: 309)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.001085566938854754
    2. '
' → logprob: -7.3760857582092285
    3. ' def' → logprob: -8.25108528137207
    4. '```' → logprob: -9.37608528137207
    5. '(
' → logprob: -9.87608528137207
    6. '(' → logprob: -10.50108528137207
    7. '(def' → logprob: -11.62608528137207
    8. '   ' → logprob: -11.87608528137207
    9. '``' → logprob: -12.37608528137207
    10. '('\' → logprob: -12.75108528137207

Token 3801: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.022522157058119774
    2. '
' → logprob: -3.897522211074829
    3. ' def' → logprob: -6.64752197265625
    4. '   ' → logprob: -8.89752197265625
    5. '\' → logprob: -9.02252197265625
    6. '\n' → logprob: -9.14752197265625
    7. '    
' → logprob: -10.14752197265625
    8. '```' → logprob: -10.14752197265625
    9. ':
' → logprob: -10.27252197265625
    10. '`
' → logprob: -10.52252197265625

Token 3802: ' line' (ID: 2543)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'line' → logprob: -2.1008713702030946e-06
    2. ' line' → logprob: -13.375001907348633
    3. 'find' → logprob: -15.375001907348633
    4. '(line' → logprob: -16.125001907348633
    5. 'def' → logprob: -16.625001907348633
    6. 'lambda' → logprob: -17.250001907348633
    7. '_line' → logprob: -18.500001907348633
    8. '#line' → logprob: -18.500001907348633
    9. 'lines' → logprob: -18.875001907348633
    10. '
' → logprob: -19.250001907348633

Token 3803: '_ray' (ID: 194498)
  Prédit: '_ray'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_ray' → logprob: -0.0006703823455609381
    2. '_line' → logprob: -7.750670433044434
    3. '_inter' → logprob: -8.625670433044434
    4. '_' → logprob: -10.875670433044434
    5. '_segment' → logprob: -11.500670433044434
    6. '_r' → logprob: -11.500670433044434
    7. '_continue' → logprob: -12.625670433044434
    8. ' _' → logprob: -13.250670433044434
    9. '(ray' → logprob: -13.500670433044434
    10. '```' → logprob: -13.875670433044434

Token 3804: '_segment' (ID: 71041)
  Prédit: '_segment'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_segment' → logprob: -6.468279752880335e-05
    2. '_inter' → logprob: -9.875064849853516
    3. 'segment' → logprob: -11.625064849853516
    4. '_segments' → logprob: -12.875064849853516
    5. '_seg' → logprob: -14.250064849853516
    6. '
' → logprob: -15.250064849853516
    7. '(segment' → logprob: -15.375064849853516
    8. 'Segment' → logprob: -15.750064849853516
    9. '```' → logprob: -16.125064849853516
    10. '_ray' → logprob: -16.250064849853516

Token 3805: '_inter' (ID: 16818)
  Prédit: '_inter'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_inter' → logprob: -1.9623810658231378e-05
    2. '(line' → logprob: -11.375020027160645
    3. '
' → logprob: -12.375020027160645
    4. '(inter' → logprob: -13.250020027160645
    5. '_line' → logprob: -14.125020027160645
    6. 'intersection' → logprob: -14.750020027160645
    7. '_' → logprob: -15.625020027160645
    8. '(p' → logprob: -16.000019073486328
    9. '```' → logprob: -16.250019073486328
    10. 'inter' → logprob: -16.250019073486328

Token 3806: 'section' (ID: 6471)
  Prédit: 'section'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'section' → logprob: -1.8193366486229934e-05
    2. 'sect' → logprob: -11.250018119812012
    3. 'action' → logprob: -13.250018119812012
    4. 'ection' → logprob: -13.250018119812012
    5. 'ction' → logprob: -14.375018119812012
    6. 'sections' → logprob: -14.625018119812012
    7. '(section' → logprob: -15.000018119812012
    8. 's' → logprob: -16.875019073486328
    9. 'se' → logprob: -17.250019073486328
    10. 'intersection' → logprob: -17.250019073486328

Token 3807: '(ray' (ID: 184052)
  Prédit: '(pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(pos' → logprob: -0.004173848778009415
    2. '(p' → logprob: -5.504173755645752
    3. '(' → logprob: -10.37917423248291
    4. '(
' → logprob: -10.75417423248291
    5. '(position' → logprob: -10.75417423248291
    6. '(point' → logprob: -12.12917423248291
    7. '(start' → logprob: -12.12917423248291
    8. ' (' → logprob: -13.25417423248291
    9. '(prev' → logprob: -13.50417423248291
    10. '(Pos' → logprob: -13.75417423248291

Token 3808: '_origin' (ID: 81230)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pos' → logprob: -0.9299800992012024
    2. '_pos' → logprob: -1.4299800395965576
    3. '(pos' → logprob: -2.0549800395965576
    4. '_origin' → logprob: -2.3049800395965576
    5. 'origin' → logprob: -2.6799800395965576
    6. '(p' → logprob: -3.3049800395965576
    7. '(origin' → logprob: -4.679980278015137
    8. 'def' → logprob: -5.679980278015137
    9. '_start' → logprob: -5.804980278015137
    10. ',' → logprob: -6.054980278015137

Token 3809: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0006827684701420367
    2. ' ,' → logprob: -8.375682830810547
    3. ',p' → logprob: -8.750682830810547
    4. ',pos' → logprob: -9.000682830810547
    5. '_pos' → logprob: -9.625682830810547
    6. '_,' → logprob: -10.375682830810547
    7. ',
' → logprob: -10.750682830810547
    8. '(p' → logprob: -11.125682830810547
    9. '   ' → logprob: -12.000682830810547
    10. '_p' → logprob: -12.125682830810547

Token 3810: ' ray' (ID: 22420)
  Prédit: 'ray'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ray' → logprob: -0.04663584753870964
    2. '(ray' → logprob: -3.296635866165161
    3. ' ray' → logprob: -5.171635627746582
    4. 'dir' → logprob: -6.171635627746582
    5. ' (' → logprob: -7.921635627746582
    6. '(' → logprob: -8.171635627746582
    7. '
' → logprob: -10.546635627746582
    8. 'direction' → logprob: -10.546635627746582
    9. '(dir' → logprob: -10.921635627746582
    10. '(
' → logprob: -11.296635627746582

Token 3811: '_dir' (ID: 9526)
  Prédit: '_dir'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_dir' → logprob: -0.3594730496406555
    2. '_direction' → logprob: -1.6094729900360107
    3. 'dir' → logprob: -2.8594729900360107
    4. 'direction' → logprob: -3.1094729900360107
    5. '   ' → logprob: -11.73447322845459
    6. '
' → logprob: -11.85947322845459
    7. 'Dir' → logprob: -12.35947322845459
    8. ' direction' → logprob: -12.35947322845459
    9. ',' → logprob: -13.35947322845459
    10. ' ' → logprob: -13.35947322845459

Token 3812: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0009325406281277537
    2. ' ,' → logprob: -7.375932693481445
    3. ',
' → logprob: -8.875932693481445
    4. '_,' → logprob: -9.125932693481445
    5. ',p' → logprob: -10.875932693481445
    6. ',pos' → logprob: -11.000932693481445
    7. '   ' → logprob: -11.875932693481445
    8. '2' → logprob: -12.875932693481445
    9. '):
' → logprob: -12.875932693481445
    10. '):' → logprob: -13.250932693481445

Token 3813: ' seg' (ID: 3055)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.19082176685333252
    2. 'segment' → logprob: -2.065821647644043
    3. 'seg' → logprob: -3.065821647644043
    4. ' segment' → logprob: -8.940821647644043
    5. ' seg' → logprob: -9.440821647644043
    6. 'ray' → logprob: -9.565821647644043
    7. ' p' → logprob: -9.565821647644043
    8. 's' → logprob: -11.065821647644043
    9. 'line' → logprob: -12.440821647644043
    10. '(p' → logprob: -12.940821647644043

Token 3814: '_p' (ID: 1359)
  Prédit: '_p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_p' → logprob: -0.08302746713161469
    2. '_start' → logprob: -2.5830273628234863
    3. 'ment' → logprob: -5.583027362823486
    4. '_point' → logprob: -8.958027839660645
    5. '_' → logprob: -9.458027839660645
    6. '_pt' → logprob: -9.458027839660645
    7. '_end' → logprob: -10.458027839660645
    8. 'm' → logprob: -11.333027839660645
    9. '_points' → logprob: -11.583027839660645
    10. 'ement' → logprob: -11.833027839660645

Token 3815: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -8.613945101387799e-05
    2. 'oint' → logprob: -10.000085830688477
    3. '0' → logprob: -10.375085830688477
    4. 'r' → logprob: -12.000085830688477
    5. 'oints' → logprob: -12.875085830688477
    6. 't' → logprob: -15.250085830688477
    7. '```' → logprob: -15.500085830688477
    8. 'osition' → logprob: -16.500085830688477
    9. 'a' → logprob: -16.625085830688477
    10. 'd' → logprob: -17.000085830688477

Token 3816: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0006018842686899006
    2. ',p' → logprob: -7.500601768493652
    3. ' ,' → logprob: -10.500601768493652
    4. ',
' → logprob: -11.250601768493652
    5. ',line' → logprob: -12.875601768493652
    6. ',s' → logprob: -13.000601768493652
    7. '_,' → logprob: -14.500601768493652
    8. 'p' → logprob: -14.875601768493652
    9. ',se' → logprob: -15.250601768493652
    10. ',P' → logprob: -15.750601768493652

Token 3817: ' seg' (ID: 3055)
  Prédit: 'seg'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'seg' → logprob: -0.00037371189682744443
    2. ' seg' → logprob: -8.000373840332031
    3. 'ray' → logprob: -10.250373840332031
    4. '(seg' → logprob: -13.500373840332031
    5. 'segment' → logprob: -14.500373840332031
    6. '   ' → logprob: -15.250373840332031
    7. ' ray' → logprob: -16.37537384033203
    8. '
' → logprob: -16.50037384033203
    9. 'seq' → logprob: -16.50037384033203
    10. 'sec' → logprob: -16.87537384033203

Token 3818: '_p' (ID: 1359)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '2' → logprob: -0.00030507624614983797
    2. 'seg' → logprob: -8.12530517578125
    3. '_seg' → logprob: -12.00030517578125
    4. '(seg' → logprob: -14.62530517578125
    5. 'eg' → logprob: -14.75030517578125
    6. 'oint' → logprob: -14.87530517578125
    7. '_' → logprob: -15.12530517578125
    8. '₂' → logprob: -15.12530517578125
    9. 'os' → logprob: -15.37530517578125
    10. ' seg' → logprob: -15.37530517578125

Token 3819: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -7.584239938296378e-06
    2. '0' → logprob: -12.500007629394531
    3. 'oint' → logprob: -13.250007629394531
    4. '1' → logprob: -13.750007629394531
    5. 'oints' → logprob: -15.000007629394531
    6. '```' → logprob: -15.125007629394531
    7. '
' → logprob: -15.875007629394531
    8. 'p' → logprob: -17.50000762939453
    9. '``' → logprob: -18.00000762939453
    10. ')' → logprob: -18.37500762939453

Token 3820: ')' (ID: 8)
  Prédit: '):
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.014450479298830032
    2. '):' → logprob: -4.264450550079346
    3. '):
' → logprob: -8.889450073242188
    4. '   ' → logprob: -9.014450073242188
    5. ')' → logprob: -11.389450073242188
    6. '):

' → logprob: -11.639450073242188
    7. '       ' → logprob: -13.264450073242188
    8. ',' → logprob: -13.514450073242188
    9. ' ):
' → logprob: -13.514450073242188
    10. ':' → logprob: -13.639450073242188

Token 3821: ' ->' (ID: 2747)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.3243887424468994
    2. ':
' → logprob: -1.3243887424468994
    3. '   ' → logprob: -4.69938850402832
    4. '       ' → logprob: -6.94938850402832
    5. 'def' → logprob: -8.32438850402832
    6. '):
' → logprob: -8.44938850402832
    7. '():
' → logprob: -8.69938850402832
    8. ':
' → logprob: -8.94938850402832
    9. ':return' → logprob: -9.69938850402832
    10. ':def' → logprob: -10.32438850402832

Token 3822: ' Optional' (ID: 19351)
  Prédit: 'Optional'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Optional' → logprob: -0.00023691373644396663
    2. 'None' → logprob: -8.750236511230469
    3. '(Optional' → logprob: -10.000236511230469
    4. ' Optional' → logprob: -10.500236511230469
    5. '_optional' → logprob: -13.250236511230469
    6. 'optional' → logprob: -13.375236511230469
    7. '	Optional' → logprob: -14.125236511230469
    8. '[' → logprob: -14.375236511230469
    9. '(None' → logprob: -15.625236511230469
    10. ''' → logprob: -15.875236511230469

Token 3823: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0008093867218121886
    2. '[
' → logprob: -7.125809192657471
    3. 'Tuple' → logprob: -13.000809669494629
    4. '[(' → logprob: -13.250809669494629
    5. '```' → logprob: -15.000809669494629
    6. '   ' → logprob: -15.750809669494629
    7. '=' → logprob: -15.750809669494629
    8. '<Tuple' → logprob: -16.500808715820312
    9. ':
' → logprob: -16.625808715820312
    10. '(' → logprob: -16.875808715820312

Token 3824: 'Tuple' (ID: 40048)
  Prédit: 'Tuple'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Tuple' → logprob: -1.4736459888808895e-05
    2. ' Tuple' → logprob: -12.000014305114746
    3. 'tuple' → logprob: -12.250014305114746
    4. 'float' → logprob: -12.500014305114746
    5. '_tuple' → logprob: -18.000015258789062
    6. '[' → logprob: -18.250015258789062
    7. '.Tuple' → logprob: -18.250015258789062
    8. '(tuple' → logprob: -19.375015258789062
    9. 'Float' → logprob: -20.000015258789062
    10. '<Tuple' → logprob: -20.250015258789062

Token 3825: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.00011212585377506912
    2. 'float' → logprob: -9.625112533569336
    3. '[
' → logprob: -10.125112533569336
    4. '(float' → logprob: -13.250112533569336
    5. ',float' → logprob: -13.375112533569336
    6. '[int' → logprob: -13.875112533569336
    7. '<float' → logprob: -14.250112533569336
    8. '[List' → logprob: -15.625112533569336
    9. ']' → logprob: -16.000112533569336
    10. ')' → logprob: -16.125112533569336

Token 3826: 'float' (ID: 7829)
  Prédit: 'float'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'float' → logprob: -9.088346359931165e-07
    2. ' float' → logprob: -15.125000953674316
    3. '   ' → logprob: -16.0
    4. '(float' → logprob: -16.0
    5. 'flo' → logprob: -16.25
    6. '
' → logprob: -16.375
    7. ',float' → logprob: -17.0
    8. '	float' → logprob: -17.5
    9. 'f' → logprob: -17.625
    10. '[' → logprob: -17.625

Token 3827: ',float' (ID: 119642)
  Prédit: ',float'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',float' → logprob: -0.24157820641994476
    2. '[' → logprob: -1.741578221321106
    3. ',' → logprob: -3.2415781021118164
    4. 'float' → logprob: -8.491578102111816
    5. ' ,' → logprob: -10.866578102111816
    6. ',int' → logprob: -10.991578102111816
    7. ',
' → logprob: -11.991578102111816
    8. ',[' → logprob: -12.366578102111816
    9. '```' → logprob: -12.741578102111816
    10. '[int' → logprob: -12.991578102111816

Token 3828: ']]:
' (ID: 183340)
  Prédit: ']:
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']:
' → logprob: -0.0039039766415953636
    2. ']:' → logprob: -6.128903865814209
    3. ']]:
' → logprob: -7.128903865814209
    4. ']:
' → logprob: -7.503903865814209
    5. ']>' → logprob: -8.878904342651367
    6. ']' → logprob: -9.003904342651367
    7. ']:

' → logprob: -10.003904342651367
    8. ']>
' → logprob: -11.003904342651367
    9. '):
' → logprob: -11.253904342651367
    10. ']:


' → logprob: -11.503904342651367

Token 3829: '           ' (ID: 352)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4181073307991028
    2. '       ' → logprob: -1.168107271194458
    3. '(' → logprob: -4.043107509613037
    4. '(
' → logprob: -6.168107509613037
    5. '    
' → logprob: -6.168107509613037
    6. ' (' → logprob: -6.793107509613037
    7. '           ' → logprob: -6.793107509613037
    8. '        
' → logprob: -6.918107509613037
    9. ':' → logprob: -7.293107509613037
    10. ')' → logprob: -7.543107509613037

Token 3830: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3154817819595337
    2. '           ' → logprob: -2.315481662750244
    3. 'def' → logprob: -3.440481662750244
    4. '(
' → logprob: -3.690481662750244
    5. '(x' → logprob: -3.815481662750244
    6. 'x' → logprob: -3.940481662750244
    7. '(' → logprob: -4.315481662750244
    8. '               ' → logprob: -4.565481662750244
    9. ' (' → logprob: -4.690481662750244
    10. '       ' → logprob: -5.565481662750244

Token 3831: ' Solve' (ID: 116151)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.7953909039497375
    2. 'dx' → logprob: -1.1703908443450928
    3. 'px' → logprob: -2.2953908443450928
    4. '(px' → logprob: -2.9203908443450928
    5. '   ' → logprob: -4.045391082763672
    6. 'x' → logprob: -4.170391082763672
    7. '(p' → logprob: -4.670391082763672
    8. 'p' → logprob: -4.795391082763672
    9. '(
' → logprob: -4.795391082763672
    10. ' px' → logprob: -5.295391082763672

Token 3832: ' for' (ID: 395)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.2979017496109009
    2. '(
' → logprob: -2.6729016304016113
    3. '(ray' → logprob: -3.2979016304016113
    4. '(' → logprob: -3.4229016304016113
    5. '#' → logprob: -4.047901630401611
    6. 'import' → logprob: -4.172901630401611
    7. 'ray' → logprob: -4.297901630401611
    8. 't' → logprob: -4.422901630401611
    9. '(x' → logprob: -4.547901630401611
    10. '(p' → logprob: -4.797901630401611

Token 3833: ' t' (ID: 260)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 't' → logprob: -1.6025941371917725
    2. '(ray' → logprob: -1.7275941371917725
    3. '(px' → logprob: -1.8525941371917725
    4. 'dx' → logprob: -1.8525941371917725
    5. 'ray' → logprob: -2.1025941371917725
    6. '((' → logprob: -3.2275941371917725
    7. '(
' → logprob: -3.9775941371917725
    8. '(t' → logprob: -3.9775941371917725
    9. '
' → logprob: -4.352594375610352
    10. '#' → logprob: -4.352594375610352

Token 3834: ',s' (ID: 20379)
  Prédit: '(ray'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(ray' → logprob: -0.2803577482700348
    2. 'ray' → logprob: -2.530357837677002
    3. ',' → logprob: -3.280357837677002
    4. '(
' → logprob: -3.280357837677002
    5. '(x' → logprob: -4.030357837677002
    6. '(' → logprob: -4.530357837677002
    7. '           ' → logprob: -4.530357837677002
    8. '((' → logprob: -4.530357837677002
    9. 'def' → logprob: -4.780357837677002
    10. ' (' → logprob: -5.155357837677002

Token 3835: ' where' (ID: 1919)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.8528723120689392
    2. '(
' → logprob: -1.227872371673584
    3. ':
' → logprob: -2.352872371673584
    4. 'def' → logprob: -2.602872371673584
    5. ' (' → logprob: -3.602872371673584
    6. ':' → logprob: -3.852872371673584
    7. '           ' → logprob: -3.852872371673584
    8. '(line' → logprob: -4.727872371673584
    9. '(ray' → logprob: -5.227872371673584
    10. ' =' → logprob: -5.477872371673584

Token 3836: ':
' (ID: 734)
  Prédit: '(ray'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(ray' → logprob: -0.40481865406036377
    2. 'ray' → logprob: -1.2798186540603638
    3. '(seg' → logprob: -3.779818534851074
    4. '(
' → logprob: -4.779818534851074
    5. 'seg' → logprob: -5.404818534851074
    6. 'x' → logprob: -6.154818534851074
    7. '(' → logprob: -6.279818534851074
    8. 'dx' → logprob: -6.279818534851074
    9. '(x' → logprob: -6.404818534851074
    10. '((' → logprob: -6.529818534851074

Token 3837: '           ' (ID: 352)
  Prédit: ' ('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.7613142132759094
    2. '(ray' → logprob: -1.6363141536712646
    3. ' None' → logprob: -2.3863141536712646
    4. '(' → logprob: -2.6363141536712646
    5. '(None' → logprob: -3.3863141536712646
    6. '(
' → logprob: -3.3863141536712646
    7. 'ray' → logprob: -3.6363141536712646
    8. ' ray' → logprob: -3.7613141536712646
    9. 'None' → logprob: -4.011314392089844
    10. ' (
' → logprob: -4.261314392089844

Token 3838: ' #' (ID: 1069)
  Prédit: 'ray'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ray' → logprob: -0.9551212191581726
    2. '(ray' → logprob: -0.9551212191581726
    3. '(
' → logprob: -2.4551212787628174
    4. 'x' → logprob: -2.9551212787628174
    5. '(' → logprob: -3.5801212787628174
    6. ' ray' → logprob: -4.580121040344238
    7. '(p' → logprob: -4.705121040344238
    8. ' (' → logprob: -4.705121040344238
    9. 'p' → logprob: -4.955121040344238
    10. '(x' → logprob: -4.955121040344238

Token 3839: ' ray' (ID: 22420)
  Prédit: 'ray'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ray' → logprob: -0.2565630078315735
    2. '(ray' → logprob: -2.2565629482269287
    3. 'p' → logprob: -3.7565629482269287
    4. 'x' → logprob: -3.7565629482269287
    5. 'seg' → logprob: -4.006563186645508
    6. '(
' → logprob: -4.381563186645508
    7. '(p' → logprob: -4.506563186645508
    8. '(seg' → logprob: -5.381563186645508
    9. ' ray' → logprob: -5.506563186645508
    10. '(' → logprob: -5.631563186645508

Token 3840: '_origin' (ID: 81230)
  Prédit: '_origin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_origin' → logprob: -0.0023758886381983757
    2. '_dir' → logprob: -6.627376079559326
    3. 'origin' → logprob: -7.127376079559326
    4. '_orig' → logprob: -9.377375602722168
    5. '_direction' → logprob: -9.877375602722168
    6. '_o' → logprob: -10.502375602722168
    7. '_ori' → logprob: -10.627375602722168
    8. '_pos' → logprob: -11.252375602722168
    9. 'dir' → logprob: -12.002375602722168
    10. 'def' → logprob: -12.127375602722168

Token 3841: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.7921774387359619
    2. '+' → logprob: -1.417177438735962
    3. ',' → logprob: -1.792177438735962
    4. '=' → logprob: -2.542177438735962
    5. ' =' → logprob: -4.292177200317383
    6. '[' → logprob: -4.792177200317383
    7. '+
' → logprob: -5.042177200317383
    8. ')' → logprob: -5.167177200317383
    9. '+,' → logprob: -5.417177200317383
    10. ' ,' → logprob: -5.542177200317383

Token 3842: ' t' (ID: 260)
  Prédit: 'ray'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ray' → logprob: -0.2795095443725586
    2. 't' → logprob: -2.5295095443725586
    3. '(ray' → logprob: -2.5295095443725586
    4. ' ray' → logprob: -2.6545095443725586
    5. ' t' → logprob: -5.529509544372559
    6. 's' → logprob: -5.654509544372559
    7. '(t' → logprob: -5.904509544372559
    8. '(' → logprob: -6.279509544372559
    9. '(s' → logprob: -6.779509544372559
    10. ' (' → logprob: -7.529509544372559

Token 3843: '*' (ID: 9)
  Prédit: '*'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.5414098501205444
    2. 'ray' → logprob: -1.5414098501205444
    3. ' *' → logprob: -2.041409969329834
    4. '(ray' → logprob: -3.666409969329834
    5. '_dir' → logprob: -3.791409969329834
    6. '_ray' → logprob: -4.416409969329834
    7. '*
' → logprob: -6.041409969329834
    8. 'dir' → logprob: -6.166409969329834
    9. ' *
' → logprob: -6.416409969329834
    10. '*_' → logprob: -6.791409969329834

Token 3844: 'ray' (ID: 25430)
  Prédit: 'ray'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ray' → logprob: -0.013316458091139793
    2. '(ray' → logprob: -4.388316631317139
    3. '(' → logprob: -7.763316631317139
    4. '(
' → logprob: -8.51331615447998
    5. ' ray' → logprob: -8.76331615447998
    6. '((' → logprob: -11.38831615447998
    7. ' (' → logprob: -12.38831615447998
    8. '_ray' → logprob: -12.63831615447998
    9. 'dir' → logprob: -12.76331615447998
    10. ' (
' → logprob: -14.26331615447998

Token 3845: '_dir' (ID: 9526)
  Prédit: '_dir'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_dir' → logprob: -2.2200749754119897e-06
    2. '_' → logprob: -14.125001907348633
    3. ''_' → logprob: -15.000001907348633
    4. 'dir' → logprob: -15.375001907348633
    5. '_pos' → logprob: -15.625001907348633
    6. ' _' → logprob: -15.875001907348633
    7. '_direction' → logprob: -16.000001907348633
    8. '_vec' → logprob: -16.125001907348633
    9. '_del' → logprob: -16.125001907348633
    10. '_dirs' → logprob: -16.750001907348633

Token 3846: ' =' (ID: 314)
  Prédit: ' -'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.7419458031654358
    2. ' =' → logprob: -1.241945743560791
    3. '=' → logprob: -2.116945743560791
    4. ' ==' → logprob: -3.241945743560791
    5. ',' → logprob: -3.366945743560791
    6. '-' → logprob: -3.616945743560791
    7. '==' → logprob: -5.616945743560791
    8. ')' → logprob: -5.616945743560791
    9. ',
' → logprob: -6.366945743560791
    10. ' ,' → logprob: -6.616945743560791

Token 3847: ' seg' (ID: 3055)
  Prédit: 'seg'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'seg' → logprob: -0.5325875878334045
    2. '(seg' → logprob: -1.1575875282287598
    3. '(' → logprob: -2.7825875282287598
    4. '(
' → logprob: -3.9075875282287598
    5. '(p' → logprob: -4.40758752822876
    6. ' seg' → logprob: -6.40758752822876
    7. ' (' → logprob: -6.90758752822876
    8. '(s' → logprob: -7.65758752822876
    9. 'tuple' → logprob: -8.032588005065918
    10. 'p' → logprob: -8.157588005065918

Token 3848: '_p' (ID: 1359)
  Prédit: '_p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_p' → logprob: -3.531315314830863e-06
    2. '_' → logprob: -14.000003814697266
    3. '```' → logprob: -14.500003814697266
    4. '
' → logprob: -15.500003814697266
    5. '\' → logprob: -15.500003814697266
    6. ')' → logprob: -15.625003814697266
    7. '`' → logprob: -15.750003814697266
    8. '``' → logprob: -16.000003814697266
    9. ')_' → logprob: -16.125003814697266
    10. '   ' → logprob: -16.125003814697266

Token 3849: '1' (ID: 16)
  Prédit: '_p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_p' → logprob: -0.0517752543091774
    2. '1' → logprob: -3.6767752170562744
    3. '_origin' → logprob: -3.8017752170562744
    4. 'oint' → logprob: -6.8017754554748535
    5. 'origin' → logprob: -7.6767754554748535
    6. '_orig' → logprob: -7.9267754554748535
    7. '_' → logprob: -8.426774978637695
    8. '2' → logprob: -8.551774978637695
    9. '```' → logprob: -9.551774978637695
    10. 'os' → logprob: -10.051774978637695

Token 3850: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.4745789170265198
    2. '+' → logprob: -0.9745789170265198
    3. '+
' → logprob: -8.349578857421875
    4. ')' → logprob: -9.349578857421875
    5. ' -' → logprob: -9.599578857421875
    6. ' +
' → logprob: -9.974578857421875
    7. '-' → logprob: -10.974578857421875
    8. '           ' → logprob: -11.474578857421875
    9. ',' → logprob: -12.099578857421875
    10. '
' → logprob: -12.224578857421875

Token 3851: ' s' (ID: 265)
  Prédit: '(ray'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(ray' → logprob: -0.355500191450119
    2. 'ray' → logprob: -2.4805002212524414
    3. '((' → logprob: -2.7305002212524414
    4. '(' → logprob: -2.9805002212524414
    5. 's' → logprob: -3.4805002212524414
    6. '(s' → logprob: -3.6055002212524414
    7. 'seg' → logprob: -3.9805002212524414
    8. '(seg' → logprob: -4.230500221252441
    9. ' ray' → logprob: -5.855500221252441
    10. ' (' → logprob: -6.355500221252441

Token 3852: '*(' (ID: 14793)
  Prédit: '(ray'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(ray' → logprob: -0.36613234877586365
    2. '*' → logprob: -1.741132378578186
    3. '(' → logprob: -3.1161322593688965
    4. 'ray' → logprob: -3.4911322593688965
    5. '*(' → logprob: -3.7411322593688965
    6. '((' → logprob: -4.4911322593688965
    7. ' *' → logprob: -4.9911322593688965
    8. '_ray' → logprob: -5.2411322593688965
    9. '-ray' → logprob: -5.9911322593688965
    10. ' (' → logprob: -6.3661322593688965

Token 3853: 'seg' (ID: 10717)
  Prédit: 'vector'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'vector' → logprob: -1.1786315441131592
    2. '(' → logprob: -1.6786315441131592
    3. '(ray' → logprob: -1.6786315441131592
    4. ' (' → logprob: -2.553631544113159
    5. '(vector' → logprob: -2.803631544113159
    6. '(seg' → logprob: -3.303631544113159
    7. '(
' → logprob: -3.303631544113159
    8. '(line' → logprob: -3.553631544113159
    9. '(p' → logprob: -4.303631782531738
    10. ' vector' → logprob: -4.428631782531738

Token 3854: '_p' (ID: 1359)
  Prédit: '_p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_p' → logprob: -0.05236731842160225
    2. '2' → logprob: -4.302367210388184
    3. ')' → logprob: -5.177367210388184
    4. 'ect' → logprob: -5.552367210388184
    5. 'p' → logprob: -5.802367210388184
    6. '(p' → logprob: -5.927367210388184
    7. 'ection' → logprob: -6.052367210388184
    8. 'vector' → logprob: -6.302367210388184
    9. 'ector' → logprob: -6.552367210388184
    10. '(' → logprob: -6.677367210388184

Token 3855: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -6.12258882028982e-05
    2. '_dir' → logprob: -10.12506103515625
    3. 'oint' → logprob: -11.75006103515625
    4. 'r' → logprob: -12.87506103515625
    5. 't' → logprob: -13.00006103515625
    6. 'dir' → logprob: -13.25006103515625
    7. 'd' → logprob: -13.50006103515625
    8. '1' → logprob: -13.62506103515625
    9. '[' → logprob: -14.50006103515625
    10. '_d' → logprob: -14.87506103515625

Token 3856: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.16215696930885315
    2. ' -' → logprob: -2.1621570587158203
    3. '-ray' → logprob: -4.28715705871582
    4. ')' → logprob: -4.66215705871582
    5. ' ' → logprob: -5.41215705871582
    6. ',' → logprob: -6.66215705871582
    7. '[' → logprob: -6.91215705871582
    8. '   ' → logprob: -7.03715705871582
    9. '
' → logprob: -7.16215705871582
    10. ')-(' → logprob: -8.03715705871582

Token 3857: ' seg' (ID: 3055)
  Prédit: 'seg'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'seg' → logprob: -7.584239938296378e-06
    2. ' seg' → logprob: -12.250007629394531
    3. '(seg' → logprob: -12.875007629394531
    4. 'segment' → logprob: -16.62500762939453
    5. '_seg' → logprob: -17.00000762939453
    6. ')' → logprob: -17.37500762939453
    7. '                           ' → logprob: -19.00000762939453
    8. 'se' → logprob: -19.62500762939453
    9. '           ' → logprob: -19.75000762939453
    10. '   ' → logprob: -20.12500762939453

Token 3858: '_p' (ID: 1359)
  Prédit: '_p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_p' → logprob: -0.46323758363723755
    2. 'ray' → logprob: -1.0882375240325928
    3. 'seg' → logprob: -3.5882375240325928
    4. '1' → logprob: -5.213237762451172
    5. '_seg' → logprob: -7.963237762451172
    6. 'p' → logprob: -8.713237762451172
    7. '_ray' → logprob: -8.963237762451172
    8. '_s' → logprob: -9.838237762451172
    9. '(ray' → logprob: -10.213237762451172
    10. ' seg' → logprob: -10.963237762451172

Token 3859: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.001922802533954382
    2. '2' → logprob: -6.501922607421875
    3. '_p' → logprob: -8.001922607421875
    4. 'p' → logprob: -10.251922607421875
    5. 'd' → logprob: -10.376922607421875
    6. 'w' → logprob: -12.376922607421875
    7. '_d' → logprob: -12.501922607421875
    8. 'dir' → logprob: -13.501922607421875
    9. '_w' → logprob: -13.876922607421875
    10. ')' → logprob: -14.001922607421875

Token 3860: '),' (ID: 936)
  Prédit: ')
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.04486899822950363
    2. ')' → logprob: -3.1698689460754395
    3. '           ' → logprob: -6.6698689460754395
    4. ')
' → logprob: -7.9198689460754395
    5. '):
' → logprob: -10.044869422912598
    6. '),' → logprob: -10.419869422912598
    7. '               ' → logprob: -10.669869422912598
    8. ',' → logprob: -10.669869422912598
    9. ' )
' → logprob: -10.794869422912598
    10. ')`
' → logprob: -11.044869422912598

Token 3861: ' with' (ID: 483)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -1.6502768993377686
    2. ')' → logprob: -1.9002768993377686
    3. 'None' → logprob: -2.7752768993377686
    4. '           ' → logprob: -3.0252768993377686
    5. ' 
' → logprob: -3.1502768993377686
    6. 'return' → logprob: -3.2752768993377686
    7. ' (' → logprob: -3.2752768993377686
    8. '(' → logprob: -3.4002768993377686
    9. ' return' → logprob: -3.4002768993377686
    10. '  
' → logprob: -3.6502768993377686

Token 3862: ' t' (ID: 260)
  Prédit: 'ray'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ray' → logprob: -1.3577462434768677
    2. '(' → logprob: -1.4827462434768677
    3. '(seg' → logprob: -1.8577462434768677
    4. '(ray' → logprob: -1.9827462434768677
    5. '0' → logprob: -2.232746124267578
    6. 'seg' → logprob: -3.357746124267578
    7. '(
' → logprob: -3.607746124267578
    8. ' (' → logprob: -4.232746124267578
    9. '(s' → logprob: -4.607746124267578
    10. 't' → logprob: -5.232746124267578

Token 3863: '>=' (ID: 20974)
  Prédit: '>='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>=' → logprob: -0.14581561088562012
    2. ' >=' → logprob: -2.02081561088562
    3. '>' → logprob: -6.020815849304199
    4. ')>=' → logprob: -8.2708158493042
    5. ' >' → logprob: -8.3958158493042
    6. ',' → logprob: -9.8958158493042
    7. ')' → logprob: -10.1458158493042
    8. '≥' → logprob: -10.3958158493042
    9. '
' → logprob: -10.3958158493042
    10. '```' → logprob: -10.8958158493042

Token 3864: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.696889623621246e-06
    2. ' ' → logprob: -12.87500286102295
    3. '   ' → logprob: -17.375001907348633
    4. '=' → logprob: -18.125001907348633
    5. '```' → logprob: -18.250001907348633
    6. '           ' → logprob: -18.625001907348633
    7. '1' → logprob: -19.125001907348633
    8. '
' → logprob: -19.250001907348633
    9. '                   ' → logprob: -19.750001907348633
    10. '               ' → logprob: -20.250001907348633

Token 3865: ',' (ID: 11)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.013627189211547375
    2. '
' → logprob: -4.638627052307129
    3. ',' → logprob: -6.513627052307129
    4. ':
' → logprob: -8.263627052307129
    5. '               ' → logprob: -8.263627052307129
    6. ' if' → logprob: -8.388627052307129
    7. 'if' → logprob: -8.638627052307129
    8. '```' → logprob: -8.888627052307129
    9. '(
' → logprob: -9.138627052307129
    10. ',
' → logprob: -9.138627052307129

Token 3866: ' s' (ID: 265)
  Prédit: ' s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' s' → logprob: -0.580318033695221
    2. '0' → logprob: -2.080317974090576
    3. 's' → logprob: -2.205317974090576
    4. ' ray' → logprob: -2.955317974090576
    5. ' seg' → logprob: -3.080317974090576
    6. 'seg' → logprob: -3.330317974090576
    7. 'ray' → logprob: -3.330317974090576
    8. '           ' → logprob: -4.830317974090576
    9. '(seg' → logprob: -4.955317974090576
    10. ')' → logprob: -5.330317974090576

Token 3867: ' in' (ID: 306)
  Prédit: '>='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>=' → logprob: -0.4939407706260681
    2. ' >=' → logprob: -1.118940830230713
    3. '<=' → logprob: -3.493940830230713
    4. ' <=' → logprob: -3.618940830230713
    5. ' in' → logprob: -6.493940830230713
    6. '```' → logprob: -6.493940830230713
    7. ')' → logprob: -6.993940830230713
    8. '[' → logprob: -7.243940830230713
    9. ')>=' → logprob: -7.618940830230713
    10. '0' → logprob: -9.118940353393555

Token 3868: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.00023500648967456073
    2. '0' → logprob: -8.750234603881836
    3. '(' → logprob: -9.500234603881836
    4. ' [' → logprob: -13.375234603881836
    5. '{' → logprob: -16.250234603881836
    6. '   ' → logprob: -18.000234603881836
    7. '[
' → logprob: -19.000234603881836
    8. '\[' → logprob: -19.000234603881836
    9. '```' → logprob: -19.250234603881836
    10. ' (' → logprob: -19.750234603881836

Token 3869: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -16.0
    3. '```' → logprob: -17.0
    4. '   ' → logprob: -18.125
    5. ',' → logprob: -18.5
    6. '[' → logprob: -18.625
    7. ']' → logprob: -19.25
    8. '``' → logprob: -19.5
    9. ')' → logprob: -19.625
    10. '1' → logprob: -20.0

Token 3870: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0012533270055428147
    2. '1' → logprob: -6.751253128051758
    3. ' ,' → logprob: -9.501253128051758
    4. '```' → logprob: -13.001253128051758
    5. ',
' → logprob: -13.126253128051758
    6. '
' → logprob: -13.626253128051758
    7. '.' → logprob: -13.876253128051758
    8. ']' → logprob: -14.751253128051758
    9. ' ' → logprob: -15.001253128051758
    10. '.,' → logprob: -15.251253128051758

Token 3871: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.320199877838604e-07
    2. '```' → logprob: -15.25
    3. ']' → logprob: -16.125
    4. ' ' → logprob: -16.625
    5. '``' → logprob: -17.875
    6. '
' → logprob: -18.5
    7. ',' → logprob: -18.75
    8. '   ' → logprob: -19.0
    9. '0' → logprob: -19.25
    10. ')' → logprob: -19.875

Token 3872: ']
' (ID: 1592)
  Prédit: ']
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']
' → logprob: -0.0646141767501831
    2. '           ' → logprob: -3.4396142959594727
    3. ']' → logprob: -3.8146142959594727
    4. ']:
' → logprob: -5.189614295959473
    5. ']
' → logprob: -7.064614295959473
    6. '])
' → logprob: -7.064614295959473
    7. '       ' → logprob: -8.064614295959473
    8. ')
' → logprob: -8.564614295959473
    9. '               ' → logprob: -8.814614295959473
    10. ']

' → logprob: -9.314614295959473

Token 3873: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.2710147202014923
    2. ':
' → logprob: -2.64601469039917
    3. '
' → logprob: -3.64601469039917
    4. '   ' → logprob: -3.89601469039917
    5. ':' → logprob: -4.02101469039917
    6. '\n' → logprob: -4.14601469039917
    7. '               ' → logprob: -4.52101469039917
    8. '(' → logprob: -4.77101469039917
    9. '(
' → logprob: -4.89601469039917
    10. ''\' → logprob: -5.02101469039917

Token 3874: ' dx' (ID: 29472)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.11565668880939484
    2. '(
' → logprob: -3.490656614303589
    3. 'def' → logprob: -3.490656614303589
    4. '{
' → logprob: -4.365656852722168
    5. '
' → logprob: -4.865656852722168
    6. ' (' → logprob: -5.240656852722168
    7. 'dx' (adapté à ' dx') → logprob: -5.740656852722168
    8. '   ' → logprob: -5.990656852722168
    9. '(' → logprob: -6.115656852722168
    10. ':
' → logprob: -6.240656852722168

Token 3875: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.7190902829170227
    2. '_ray' → logprob: -1.094090223312378
    3. '1' → logprob: -2.844090223312378
    4. 'ray' → logprob: -2.969090223312378
    5. '=' → logprob: -3.344090223312378
    6. ',' → logprob: -3.719090223312378
    7. '_r' → logprob: -5.719090461730957
    8. 'r' → logprob: -6.094090461730957
    9. '```' → logprob: -6.969090461730957
    10. '(ray' → logprob: -7.719090461730957

Token 3876: ' seg' (ID: 3055)
  Prédit: 'ray'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ray' → logprob: -0.045860059559345245
    2. ' ray' → logprob: -3.7958600521087646
    3. 'seg' → logprob: -4.170860290527344
    4. '(ray' → logprob: -5.045860290527344
    5. ' seg' → logprob: -8.545860290527344
    6. '(seg' → logprob: -9.170860290527344
    7. '-ray' → logprob: -9.545860290527344
    8. '```' → logprob: -11.358360290527344
    9. '0' → logprob: -11.483360290527344
    10. 'dir' → logprob: -11.795860290527344

Token 3877: '_p' (ID: 1359)
  Prédit: '_p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_p' → logprob: -0.00932227075099945
    2. 'dir' → logprob: -5.634322166442871
    3. '2' → logprob: -5.884322166442871
    4. '_dir' → logprob: -6.759322166442871
    5. 'ray' → logprob: -6.884322166442871
    6. '1' → logprob: -8.884322166442871
    7. '[' → logprob: -9.134322166442871
    8. '=' → logprob: -9.384322166442871
    9. 'dx' → logprob: -9.509322166442871
    10. '   ' → logprob: -9.509322166442871

Token 3878: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.007817540317773819
    2. '1' → logprob: -4.88281774520874
    3. 'ray' → logprob: -8.882817268371582
    4. 'oint' → logprob: -10.257817268371582
    5. 'os' → logprob: -11.382817268371582
    6. '[' → logprob: -12.132817268371582
    7. '_' → logprob: -12.882817268371582
    8. 'oints' → logprob: -13.257817268371582
    9. '_p' → logprob: -13.382817268371582
    10. '0' → logprob: -13.507817268371582

Token 3879: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -1.4021237802808173e-05
    2. '0' → logprob: -11.500014305114746
    3. '   ' → logprob: -13.250014305114746
    4. '[
' → logprob: -14.250014305114746
    5. 'x' → logprob: -15.125014305114746
    6. '-' → logprob: -15.125014305114746
    7. '(' → logprob: -15.500014305114746
    8. ' ' → logprob: -15.750014305114746
    9. ')' → logprob: -16.25001335144043
    10. '
' → logprob: -16.25001335144043

Token 3880: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.3856492842023727e-06
    2. '[' → logprob: -14.250000953674316
    3. '
' → logprob: -14.750000953674316
    4. '   ' → logprob: -14.750000953674316
    5. ' ' → logprob: -17.000001907348633
    6. '```' → logprob: -18.125001907348633
    7. '۰' → logprob: -18.500001907348633
    8. '``' → logprob: -18.750001907348633
    9. '-' → logprob: -19.625001907348633
    10. '1' → logprob: -19.750001907348633

Token 3881: ']' (ID: 60)
  Prédit: ' -'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.12769567966461182
    2. '-' → logprob: -2.1276955604553223
    3. ']' → logprob: -8.50269603729248
    4. ' ' → logprob: -8.87769603729248
    5. '-ray' → logprob: -9.12769603729248
    6. '[' → logprob: -9.25269603729248
    7. ')' → logprob: -9.62769603729248
    8. '   ' → logprob: -10.12769603729248
    9. ']-' → logprob: -10.25269603729248
    10. '  ' → logprob: -10.87769603729248

Token 3882: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.6933125257492065
    2. ' -' → logprob: -0.6933125257492065
    3. '-ray' → logprob: -8.943312644958496
    4. ' ' → logprob: -11.193312644958496
    5. '-p' → logprob: -11.943312644958496
    6. '-se' → logprob: -12.443312644958496
    7. '```' → logprob: -12.943312644958496
    8. '   ' → logprob: -12.943312644958496
    9. ' -
' → logprob: -13.568312644958496
    10. '-
' → logprob: -13.568312644958496

Token 3883: ' seg' (ID: 3055)
  Prédit: 'seg'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'seg' → logprob: -3.023293538717553e-05
    2. ' seg' → logprob: -10.500030517578125
    3. '(seg' → logprob: -13.125030517578125
    4. '   ' → logprob: -15.875030517578125
    5. 'segment' → logprob: -16.000030517578125
    6. 'seq' → logprob: -16.500030517578125
    7. '0' → logprob: -16.625030517578125
    8. '       ' → logprob: -17.000030517578125
    9. 'sec' → logprob: -17.375030517578125
    10. 'p' → logprob: -17.375030517578125

Token 3884: '_p' (ID: 1359)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.778366208076477
    2. 'seg' → logprob: -0.778366208076477
    3. 'p' → logprob: -2.7783660888671875
    4. '_p' → logprob: -4.5283660888671875
    5. ' seg' → logprob: -5.7783660888671875
    6. '(seg' → logprob: -7.0283660888671875
    7. 's' → logprob: -7.2783660888671875
    8. '   ' → logprob: -7.9658660888671875
    9. '_' → logprob: -7.9658660888671875
    10. '[' → logprob: -8.028366088867188

Token 3885: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -7.719917630311102e-05
    2. 'seg' → logprob: -9.625077247619629
    3. '2' → logprob: -12.375077247619629
    4. '0' → logprob: -13.000077247619629
    5. 'p' → logprob: -13.625077247619629
    6. '_' → logprob: -14.625077247619629
    7. ' seg' → logprob: -14.875077247619629
    8. 'oint' → logprob: -14.875077247619629
    9. '_p' → logprob: -15.125077247619629
    10. '[' → logprob: -15.125077247619629

Token 3886: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.007040601689368486
    2. ',' → logprob: -5.382040500640869
    3. '0' → logprob: -6.132040500640869
    4. '(' → logprob: -8.882040977478027
    5. ',
' → logprob: -10.632040977478027
    6. '1' → logprob: -10.632040977478027
    7. '```' → logprob: -10.632040977478027
    8. 'dx' → logprob: -11.007040977478027
    9. 'x' → logprob: -11.882040977478027
    10. '``' → logprob: -12.882040977478027

Token 3887: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.2664456789934775e-06
    2. '[' → logprob: -14.250000953674316
    3. ' ' → logprob: -15.125000953674316
    4. '1' → logprob: -16.250001907348633
    5. '۰' → logprob: -17.125001907348633
    6. '   ' → logprob: -17.250001907348633
    7. 'x' → logprob: -17.375001907348633
    8. '```' → logprob: -17.437501907348633
    9. '#' → logprob: -17.875001907348633
    10. 'p' → logprob: -17.937501907348633

Token 3888: ']
' (ID: 1592)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.6386829018592834
    2. ')
' → logprob: -0.8886829018592834
    3. '           ' → logprob: -3.5136828422546387
    4. '),' → logprob: -4.263682842254639
    5. '
' → logprob: -5.138682842254639
    6. ')' → logprob: -5.263682842254639
    7. ',
' → logprob: -5.513682842254639
    8. ' ,' → logprob: -8.138683319091797
    9. '```' → logprob: -8.138683319091797
    10. '   ' → logprob: -8.638683319091797

Token 3889: '           ' (ID: 352)
  Prédit: 'dy'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dy' → logprob: -0.7124485373497009
    2. ' dy' → logprob: -0.7124485373497009
    3. '   ' → logprob: -3.9624485969543457
    4. ' ' → logprob: -10.712448120117188
    5. '       ' → logprob: -10.837448120117188
    6. '```' → logprob: -11.212448120117188
    7. '  ' → logprob: -11.462448120117188
    8. '	d' → logprob: -11.712448120117188
    9. '.dy' → logprob: -11.712448120117188
    10. '    ' → logprob: -12.212448120117188

Token 3890: ' dy' (ID: 11996)
  Prédit: 'dy'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dy' (adapté à ' dy') → logprob: -0.009964549914002419
    2. '-d' → logprob: -5.009964466094971
    3. '0' → logprob: -6.884964466094971
    4. '   ' → logprob: -7.509964466094971
    5. ' -' → logprob: -8.009964942932129
    6. ' dy' → logprob: -8.134964942932129
    7. 'seg' → logprob: -8.134964942932129
    8. '-' → logprob: -8.509964942932129
    9. '(-' → logprob: -9.259964942932129
    10. '-(' → logprob: -9.384964942932129

Token 3891: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.6327964663505554
    2. '=' → logprob: -0.7577964663505554
    3. '=-' → logprob: -10.007796287536621
    4. ':' → logprob: -10.382796287536621
    5. '       ' → logprob: -11.007796287536621
    6. '=line' → logprob: -11.007796287536621
    7. '   ' → logprob: -11.132796287536621
    8. '=None' → logprob: -11.632796287536621
    9. '```' → logprob: -11.882796287536621
    10. 'def' → logprob: -11.882796287536621

Token 3892: ' seg' (ID: 3055)
  Prédit: 'seg'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'seg' → logprob: -0.0026153710205107927
    2. ' seg' → logprob: -6.002615451812744
    3. '(seg' → logprob: -8.877614974975586
    4. '0' → logprob: -16.627614974975586
    5. '   ' → logprob: -16.752614974975586
    6. ' ' → logprob: -17.752614974975586
    7. '           ' → logprob: -18.002614974975586
    8. '_seg' → logprob: -18.002614974975586
    9. '       ' → logprob: -18.127614974975586
    10. '    ' → logprob: -18.127614974975586

Token 3893: '_p' (ID: 1359)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.09980833530426025
    2. '[' → logprob: -2.5998082160949707
    3. '1' → logprob: -4.349808216094971
    4. '2' → logprob: -5.849808216094971
    5. 'seg' → logprob: -6.224808216094971
    6. '(' → logprob: -7.474808216094971
    7. '(seg' → logprob: -7.599808216094971
    8. '_' → logprob: -8.224808692932129
    9. '_p' → logprob: -8.349808692932129
    10. 'p' → logprob: -8.599808692932129

Token 3894: '2' (ID: 17)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.12693682312965393
    2. '0' → logprob: -2.126936912536621
    3. '[' → logprob: -12.251936912536621
    4. '2' → logprob: -12.501936912536621
    5. ' ' → logprob: -16.001935958862305
    6. '_' → logprob: -16.876935958862305
    7. '
' → logprob: -17.251935958862305
    8. '   ' → logprob: -17.251935958862305
    9. '```' → logprob: -17.501935958862305
    10. '(' → logprob: -18.126935958862305

Token 3895: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.8847717046737671
    2. ' -' → logprob: -1.384771704673767
    3. '=' → logprob: -2.3847718238830566
    4. '-' → logprob: -2.5097718238830566
    5. '(' → logprob: -2.6347718238830566
    6. ' (' → logprob: -3.7597718238830566
    7. '0' → logprob: -3.7597718238830566
    8. ':' → logprob: -4.384771823883057
    9. '```' → logprob: -4.759771823883057
    10. ' =' → logprob: -5.134771823883057

Token 3896: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.3509831726551056
    2. '0' → logprob: -1.2259831428527832
    3. 'seg' → logprob: -6.350983142852783
    4. ' ' → logprob: -8.600983619689941
    5. ' seg' → logprob: -8.600983619689941
    6. '(seg' → logprob: -8.600983619689941
    7. '[' → logprob: -8.975983619689941
    8. '```' → logprob: -10.225983619689941
    9. '_seg' → logprob: -11.600983619689941
    10. ')' → logprob: -11.600983619689941

Token 3897: ']' (ID: 60)
  Prédit: ' -'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.14873294532299042
    2. ']' → logprob: -2.648732900619507
    3. '-' → logprob: -2.898732900619507
    4. ':' → logprob: -5.273733139038086
    5. ')' → logprob: -5.898733139038086
    6. '[' → logprob: -6.773733139038086
    7. ',' → logprob: -7.023733139038086
    8. 'def' → logprob: -7.273733139038086
    9. '=' → logprob: -7.648733139038086
    10. ']-' → logprob: -8.273733139038086

Token 3898: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.052387114614248276
    2. '-' → logprob: -3.052386999130249
    3. '```' → logprob: -6.177387237548828
    4. '=' → logprob: -7.927387237548828
    5. ',' → logprob: -8.302387237548828
    6. '       ' → logprob: -8.677387237548828
    7. '   ' → logprob: -9.052387237548828
    8. 'def' → logprob: -9.052387237548828
    9. ':' → logprob: -9.302387237548828
    10. ')' → logprob: -9.427387237548828

Token 3899: ' seg' (ID: 3055)
  Prédit: 'seg'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'seg' → logprob: -0.0022429160308092833
    2. ' seg' → logprob: -6.2522430419921875
    3. '(seg' → logprob: -8.127243041992188
    4. '0' → logprob: -11.002243041992188
    5. ' ' → logprob: -14.627243041992188
    6. 'segment' → logprob: -15.127243041992188
    7. '       ' → logprob: -15.877243041992188
    8. 'sel' → logprob: -15.877243041992188
    9. '   ' → logprob: -15.877243041992188
    10. 'se' → logprob: -16.002243041992188

Token 3900: '_p' (ID: 1359)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.7304936051368713
    2. 'seg' → logprob: -0.7304936051368713
    3. 'p' → logprob: -4.605493545532227
    4. '_p' → logprob: -4.730493545532227
    5. '(seg' → logprob: -4.730493545532227
    6. '(' → logprob: -5.230493545532227
    7. ' seg' → logprob: -6.855493545532227
    8. '1' → logprob: -7.230493545532227
    9. 'dy' → logprob: -7.355493545532227
    10. '[' → logprob: -8.105493545532227

Token 3901: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00029637437546625733
    2. '0' → logprob: -8.125296592712402
    3. '[' → logprob: -17.000295639038086
    4. '_' → logprob: -17.000295639038086
    5. '5' → logprob: -17.375295639038086
    6. ' ' → logprob: -17.375295639038086
    7. '   ' → logprob: -18.000295639038086
    8. 'dy' → logprob: -18.375295639038086
    9. '```' → logprob: -18.500295639038086
    10. 'p' → logprob: -18.750295639038086

Token 3902: '[' (ID: 58)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.026358822360634804
    2. '[' → logprob: -3.6513588428497314
    3. '0' → logprob: -10.901358604431152
    4. '(' → logprob: -11.151358604431152
    5. '```' → logprob: -11.401358604431152
    6. '   ' → logprob: -11.651358604431152
    7. ' ' → logprob: -13.651358604431152
    8. ']' → logprob: -14.151358604431152
    9. '-' → logprob: -14.276358604431152
    10. '=' → logprob: -14.651358604431152

Token 3903: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.016723090782761574
    2. 'dy' → logprob: -4.516723155975342
    3. '0' → logprob: -5.516723155975342
    4. 'seg' → logprob: -6.516723155975342
    5. ' ' → logprob: -10.016722679138184
    6. '```' → logprob: -10.266722679138184
    7. '   ' → logprob: -10.641722679138184
    8. ' seg' → logprob: -11.016722679138184
    9. ' dy' → logprob: -12.141722679138184
    10. '[' → logprob: -12.141722679138184

Token 3904: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.6419535875320435
    2. ']
' → logprob: -0.8919535875320435
    3. ')' → logprob: -3.641953468322754
    4. ')
' → logprob: -4.391953468322754
    5. ']:
' → logprob: -4.766953468322754
    6. '):
' → logprob: -5.391953468322754
    7. '```' → logprob: -6.266953468322754
    8. '[' → logprob: -6.266953468322754
    9. '           ' → logprob: -6.391953468322754
    10. '   ' → logprob: -6.641953468322754

Token 3905: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0021597796585410833
    2. '```' → logprob: -6.752159595489502
    3. '   ' → logprob: -7.627159595489502
    4. '       ' → logprob: -8.62716007232666
    5. ',' → logprob: -9.12716007232666
    6. ' if' → logprob: -9.25216007232666
    7. '          ' → logprob: -11.25216007232666
    8. '[' → logprob: -11.25216007232666
    9. '``' → logprob: -11.25216007232666
    10. '               ' → logprob: -11.37716007232666

Token 3906: ' A' (ID: 355)
  Prédit: 'den'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'den' → logprob: -0.07456719130277634
    2. 'det' → logprob: -3.3245670795440674
    3. '           ' → logprob: -4.0745673179626465
    4. 'if' → logprob: -4.1995673179626465
    5. ' denom' → logprob: -6.3245673179626465
    6. ' den' → logprob: -8.324566841125488
    7. '```' → logprob: -8.324566841125488
    8. '#' → logprob: -8.449566841125488
    9. ' if' → logprob: -8.574566841125488
    10. ' denominator' → logprob: -8.574566841125488

Token 3907: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.4298335909843445
    2. ' =' → logprob: -1.0548336505889893
    3. '=
' → logprob: -8.05483341217041
    4. 'x' → logprob: -8.42983341217041
    5. '=[[' → logprob: -9.17983341217041
    6. ',' → logprob: -9.30483341217041
    7. '=(' → logprob: -9.92983341217041
    8. '_x' → logprob: -9.92983341217041
    9. ' ' → logprob: -9.92983341217041
    10. ')' → logprob: -10.05483341217041

Token 3908: ' [[' (ID: 9237)
  Prédit: '(-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(-' → logprob: -0.43680810928344727
    2. '(' → logprob: -1.9368081092834473
    3. '(
' → logprob: -2.3118081092834473
    4. '(ray' → logprob: -2.9368081092834473
    5. 'ray' → logprob: -4.186808109283447
    6. '-ray' → logprob: -4.311808109283447
    7. '((-' → logprob: -4.811808109283447
    8. '[
' → logprob: -5.436808109283447
    9. ' (' → logprob: -5.561808109283447
    10. '((' → logprob: -5.561808109283447

Token 3909: 'ray' (ID: 25430)
  Prédit: 'ray'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ray' → logprob: -0.22113944590091705
    2. '-ray' → logprob: -1.9711394309997559
    3. ' ray' → logprob: -3.096139430999756
    4. '-' → logprob: -5.221139430999756
    5. 'dir' → logprob: -5.721139430999756
    6. ' -' → logprob: -6.096139430999756
    7. '-dir' → logprob: -6.096139430999756
    8. ' dir' → logprob: -8.721139907836914
    9. '-r' → logprob: -8.846139907836914
    10. '-d' → logprob: -9.221139907836914

Token 3910: '_dir' (ID: 9526)
  Prédit: '_dir'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_dir' → logprob: -0.009786547161638737
    2. '[' → logprob: -4.759786605834961
    3. 'dir' → logprob: -7.134786605834961
    4. '0' → logprob: -9.759786605834961
    5. 'Dir' → logprob: -9.884786605834961
    6. '_dx' → logprob: -10.134786605834961
    7. '   ' → logprob: -10.384786605834961
    8. '1' → logprob: -10.509786605834961
    9. '-dir' → logprob: -10.634786605834961
    10. '[
' → logprob: -10.884786605834961

Token 3911: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0001468067930545658
    2. '0' → logprob: -9.500146865844727
    3. 'x' → logprob: -9.750146865844727
    4. ' [' → logprob: -11.750146865844727
    5. '   ' → logprob: -13.500146865844727
    6. '1' → logprob: -14.000146865844727
    7. '```' → logprob: -14.375146865844727
    8. '_x' → logprob: -14.625146865844727
    9. '       ' → logprob: -14.875146865844727
    10. '(' → logprob: -15.000146865844727

Token 3912: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -3.8889261304575484e-06
    2. ' ' → logprob: -13.500003814697266
    3. '[' → logprob: -13.750003814697266
    4. '
' → logprob: -13.875003814697266
    5. '   ' → logprob: -15.500003814697266
    6. '```' → logprob: -16.500003814697266
    7. '][' → logprob: -17.875003814697266
    8. '    ' → logprob: -18.000003814697266
    9. '1' → logprob: -18.000003814697266
    10. ' 
' → logprob: -18.312503814697266

Token 3913: '],' (ID: 2155)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0015716375783085823
    2. ' ,' → logprob: -6.6265716552734375
    3. '   ' → logprob: -9.376571655273438
    4. '],' → logprob: -9.501571655273438
    5. '[' → logprob: -10.626571655273438
    6. '],[' → logprob: -11.001571655273438
    7. '       ' → logprob: -12.376571655273438
    8. '    ' → logprob: -12.376571655273438
    9. ' ' → logprob: -12.376571655273438
    10. '  ' → logprob: -12.876571655273438

Token 3914: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.6831733584403992
    2. '-' → logprob: -1.058173418045044
    3. '-se' → logprob: -2.558173418045044
    4. '-d' → logprob: -3.058173418045044
    5. '-(' → logprob: -4.808173179626465
    6. '-s' → logprob: -5.058173179626465
    7. '-ray' → logprob: -5.933173179626465
    8. '-p' → logprob: -7.433173179626465
    9. '   ' → logprob: -7.933173179626465
    10. '-r' → logprob: -8.183173179626465

Token 3915: 'dx' (ID: 22100)
  Prédit: 'dx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dx' → logprob: -0.002919353311881423
    2. 'dy' → logprob: -5.8779191970825195
    3. '(dx' → logprob: -9.25291919708252
    4. ' dx' → logprob: -12.00291919708252
    5. '   ' → logprob: -12.62791919708252
    6. '1' → logprob: -12.75291919708252
    7. '       ' → logprob: -13.00291919708252
    8. '           ' → logprob: -13.75291919708252
    9. 'd' → logprob: -14.00291919708252
    10. 'seg' → logprob: -15.37791919708252

Token 3916: '],
' (ID: 2274)
  Prédit: '],'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '],' → logprob: -0.5361863970756531
    2. '],[' → logprob: -1.0361864566802979
    3. '],
' → logprob: -2.911186456680298
    4. '[' → logprob: -5.536186218261719
    5. '   ' → logprob: -7.661186218261719
    6. ',' → logprob: -7.911186218261719
    7. ' ],' → logprob: -7.911186218261719
    8. '       ' → logprob: -8.411186218261719
    9. '           ' → logprob: -9.286186218261719
    10. '],
' → logprob: -10.036186218261719

Token 3917: '                ' (ID: 408)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.5650277733802795
    2. ' [' → logprob: -0.9400277733802795
    3. '            ' → logprob: -3.4400277137756348
    4. '           ' → logprob: -5.065027713775635
    5. '             ' → logprob: -7.315027713775635
    6. '          ' → logprob: -7.565027713775635
    7. '                ' → logprob: -8.065028190612793
    8. '                    ' → logprob: -8.190028190612793
    9. '         ' → logprob: -8.815028190612793
    10. '               ' → logprob: -8.940028190612793

Token 3918: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' (adapté à ' [') → logprob: -0.34883004426956177
    2. ' [' → logprob: -1.223829984664917
    3. '        ' → logprob: -10.098830223083496
    4. '          ' → logprob: -10.098830223083496
    5. '            ' → logprob: -10.223830223083496
    6. '    ' → logprob: -10.473830223083496
    7. '         ' → logprob: -10.598830223083496
    8. '                ' → logprob: -10.723830223083496
    9. '             ' → logprob: -10.848830223083496
    10. ' ' → logprob: -10.848830223083496

Token 3919: 'ray' (ID: 25430)
  Prédit: 'ray'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ray' → logprob: -0.031351059675216675
    2. ' ray' → logprob: -3.531351089477539
    3. '-ray' → logprob: -6.531351089477539
    4. '0' → logprob: -10.281351089477539
    5. ' -' → logprob: -10.281351089477539
    6. '-' → logprob: -10.656351089477539
    7. '(ray' → logprob: -11.156351089477539
    8. '   ' → logprob: -11.406351089477539
    9. ' ' → logprob: -12.406351089477539
    10. '  ' → logprob: -12.781351089477539

Token 3920: '_dir' (ID: 9526)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.3649934232234955
    2. '_dir' → logprob: -1.2399934530258179
    3. '[' → logprob: -4.864993572235107
    4. 'Dir' → logprob: -5.614993572235107
    5. '0' → logprob: -5.864993572235107
    6. 'dir' → logprob: -6.739993572235107
    7. '   ' → logprob: -7.739993572235107
    8. '-dir' → logprob: -8.98999309539795
    9. '-' → logprob: -9.23999309539795
    10. ',' → logprob: -9.48999309539795

Token 3921: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -2.4868770196917467e-05
    2. '0' → logprob: -11.375024795532227
    3. '   ' → logprob: -12.000024795532227
    4. '(' → logprob: -14.000024795532227
    5. '```' → logprob: -14.000024795532227
    6. '1' → logprob: -14.125024795532227
    7. '[
' → logprob: -14.250024795532227
    8. '    ' → logprob: -14.250024795532227
    9. '        ' → logprob: -14.500024795532227
    10. ' [' → logprob: -14.500024795532227

Token 3922: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.4418171455617994e-05
    2. '0' → logprob: -10.250044822692871
    3. '   ' → logprob: -12.375044822692871
    4. ' ' → logprob: -12.875044822692871
    5. '[' → logprob: -13.750044822692871
    6. '    ' → logprob: -14.750044822692871
    7. '```' → logprob: -15.250044822692871
    8. '     ' → logprob: -15.750044822692871
    9. '  ' → logprob: -16.875043869018555
    10. ',' → logprob: -17.125043869018555

Token 3923: '],' (ID: 2155)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0012235627509653568
    2. '[' → logprob: -7.251223564147949
    3. ' ,' → logprob: -7.751223564147949
    4. '                ' → logprob: -10.62622356414795
    5. '   ' → logprob: -11.50122356414795
    6. '    ' → logprob: -11.75122356414795
    7. '        ' → logprob: -11.87622356414795
    8. ' ' → logprob: -12.12622356414795
    9. '0' → logprob: -12.37622356414795
    10. '],' → logprob: -12.37622356414795

Token 3924: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.008043552748858929
    2. '-' → logprob: -5.3830437660217285
    3. '0' → logprob: -5.7580437660217285
    4. ' ' → logprob: -8.63304328918457
    5. '-d' → logprob: -10.88304328918457
    6. '-row' → logprob: -11.63304328918457
    7. '-run' → logprob: -12.38304328918457
    8. '-zero' → logprob: -12.88304328918457
    9. '-db' → logprob: -12.88304328918457
    10. '-t' → logprob: -13.00804328918457

Token 3925: 'dy' (ID: 7593)
  Prédit: 'dy'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dy' → logprob: -0.002204262651503086
    2. '0' → logprob: -6.127204418182373
    3. ' dy' → logprob: -11.002203941345215
    4. '-d' → logprob: -13.752203941345215
    5. '   ' → logprob: -14.752203941345215
    6. 'dx' → logprob: -14.877203941345215
    7. ' ' → logprob: -15.627203941345215
    8. '.dy' → logprob: -15.627203941345215
    9. '1' → logprob: -16.25220489501953
    10. '[' → logprob: -17.12720489501953

Token 3926: ']]
' (ID: 29446)
  Prédit: ']]
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']]
' → logprob: -0.27839547395706177
    2. ']]' → logprob: -1.528395414352417
    3. '[' → logprob: -4.528395652770996
    4. ']' → logprob: -5.278395652770996
    5. ']]

' → logprob: -6.028395652770996
    6. '                ' → logprob: -6.403395652770996
    7. '               ' → logprob: -6.903395652770996
    8. ' ]]
' → logprob: -7.028395652770996
    9. ']]
' → logprob: -7.153395652770996
    10. '   ' → logprob: -7.653395652770996

Token 3927: '           ' (ID: 352)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.18849393725395203
    2. '           ' → logprob: -2.1884939670562744
    3. '```' → logprob: -4.063493728637695
    4. '               ' → logprob: -4.438493728637695
    5. '   ' → logprob: -4.688493728637695
    6. ' [' → logprob: -4.938493728637695
    7. '            ' → logprob: -5.813493728637695
    8. '                   ' → logprob: -6.063493728637695
    9. '       ' → logprob: -6.313493728637695
    10. '                ' → logprob: -6.688493728637695

Token 3928: ' b' (ID: 287)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'import' → logprob: -1.2817882299423218
    2. '           ' → logprob: -1.4067882299423218
    3. '[' → logprob: -1.6567882299423218
    4. 'from' → logprob: -2.1567883491516113
    5. ' from' → logprob: -3.2817883491516113
    6. '```' → logprob: -3.2817883491516113
    7. '               ' → logprob: -4.281788349151611
    8. '[
' → logprob: -4.656788349151611
    9. '            ' → logprob: -4.781788349151611
    10. '``' → logprob: -4.781788349151611

Token 3929: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.03812089562416077
    2. ' =' → logprob: -3.288120985031128
    3. '[' → logprob: -9.663121223449707
    4. '=
' → logprob: -11.663121223449707
    5. '=[' → logprob: -13.038121223449707
    6. '```' → logprob: -13.288121223449707
    7. '   ' → logprob: -13.913121223449707
    8. ')' → logprob: -14.538121223449707
    9. '=[[' → logprob: -14.788121223449707
    10. ' =[' → logprob: -15.163121223449707

Token 3930: ' [' (ID: 723)
  Prédit: '(ray'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(ray' → logprob: -0.18168427050113678
    2. '(' → logprob: -1.9316842555999756
    3. '[' → logprob: -3.9316842555999756
    4. ' (' → logprob: -7.181684494018555
    5. '(
' → logprob: -7.931684494018555
    6. '[
' → logprob: -8.806684494018555
    7. '(rt' → logprob: -9.431684494018555
    8. '(rx' → logprob: -9.931684494018555
    9. '(-' → logprob: -10.181684494018555
    10. '(r' → logprob: -10.181684494018555

Token 3931: 'seg' (ID: 10717)
  Prédit: 'seg'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'seg' → logprob: -0.0002776630863081664
    2. '(seg' → logprob: -8.500277519226074
    3. ' seg' → logprob: -11.000277519226074
    4. 'ray' → logprob: -11.125277519226074
    5. '           ' → logprob: -11.625277519226074
    6. '   ' → logprob: -11.625277519226074
    7. '```' → logprob: -11.875277519226074
    8. '               ' → logprob: -12.875277519226074
    9. '                   ' → logprob: -13.125277519226074
    10. '       ' → logprob: -13.250277519226074

Token 3932: '_p' (ID: 1359)
  Prédit: '_p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_p' → logprob: -0.001062463503330946
    2. '_origin' → logprob: -7.876062393188477
    3. '[' → logprob: -8.376062393188477
    4. 'origin' → logprob: -8.501062393188477
    5. '1' → logprob: -8.626062393188477
    6. '0' → logprob: -11.001062393188477
    7. '_' → logprob: -11.376062393188477
    8. 'p' → logprob: -11.501062393188477
    9. '_pos' → logprob: -11.751062393188477
    10. '   ' → logprob: -12.251062393188477

Token 3933: '1' (ID: 16)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.397161066532135
    2. '1' → logprob: -2.3971610069274902
    3. 'oint' → logprob: -2.7721610069274902
    4. 'origin' → logprob: -2.7721610069274902
    5. '[' → logprob: -3.0221610069274902
    6. '_origin' → logprob: -3.5221610069274902
    7. '2' → logprob: -4.02216100692749
    8. 'os' → logprob: -4.52216100692749
    9. '_orig' → logprob: -6.77216100692749
    10. '_p' → logprob: -7.27216100692749

Token 3934: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -4.008129963040119e-06
    2. '   ' → logprob: -13.500003814697266
    3. '```' → logprob: -14.500003814697266
    4. '
' → logprob: -14.625003814697266
    5. '[
' → logprob: -14.625003814697266
    6. '0' → logprob: -14.625003814697266
    7. '][' → logprob: -15.125003814697266
    8. ' [' → logprob: -15.875003814697266
    9. 'x' → logprob: -16.875003814697266
    10. 'import' → logprob: -16.875003814697266

Token 3935: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.004086355213075876
    2. '[' → logprob: -5.504086494445801
    3. ' ' → logprob: -12.6290864944458
    4. '   ' → logprob: -12.7540864944458
    5. '1' → logprob: -14.7540864944458
    6. '```' → logprob: -15.2540864944458
    7. '-' → logprob: -15.5040864944458
    8. '#' → logprob: -15.5040864944458
    9. '[
' → logprob: -15.7540864944458
    10. ' [' → logprob: -15.8790864944458

Token 3936: ']-' (ID: 27107)
  Prédit: ' -'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.007423703093081713
    2. '-' → logprob: -5.5074238777160645
    3. ' ' → logprob: -6.7574238777160645
    4. ',' → logprob: -6.8824238777160645
    5. '   ' → logprob: -8.257423400878906
    6. ']' → logprob: -8.382423400878906
    7. '[' → logprob: -8.507423400878906
    8. '-ray' → logprob: -8.632423400878906
    9. ']-' → logprob: -9.007423400878906
    10. '```' → logprob: -10.507423400878906

Token 3937: 'ray' (ID: 25430)
  Prédit: 'ray'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ray' → logprob: -3.8219583075260743e-05
    2. ' ray' → logprob: -10.250038146972656
    3. '(ray' → logprob: -13.125038146972656
    4. '
' → logprob: -15.250038146972656
    5. '   ' → logprob: -15.375038146972656
    6. ')' → logprob: -16.750038146972656
    7. '```' → logprob: -17.250038146972656
    8. '           ' → logprob: -17.250038146972656
    9. '-ray' → logprob: -17.500038146972656
    10. '       ' → logprob: -17.875038146972656

Token 3938: '_origin' (ID: 81230)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.24891407787799835
    2. '[' → logprob: -1.873914122581482
    3. '2' → logprob: -3.2489140033721924
    4. '_origin' → logprob: -4.6239142417907715
    5. 'origin' → logprob: -4.7489142417907715
    6. 'p' → logprob: -5.8739142417907715
    7. '_pos' → logprob: -6.6239142417907715
    8. 'pos' → logprob: -6.7489142417907715
    9. '_p' → logprob: -7.1239142417907715
    10. '   ' → logprob: -7.7489142417907715

Token 3939: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -1.1756367712223437e-05
    2. '0' → logprob: -12.250011444091797
    3. '```' → logprob: -12.750011444091797
    4. '[
' → logprob: -13.250011444091797
    5. ',' → logprob: -13.500011444091797
    6. 'def' → logprob: -15.625011444091797
    7. '][' → logprob: -15.750011444091797
    8. '#' → logprob: -16.250011444091797
    9. ' [' → logprob: -16.375011444091797
    10. 'import' → logprob: -16.625011444091797

Token 3940: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00033879990223795176
    2. '[' → logprob: -8.000338554382324
    3. '#' → logprob: -13.750338554382324
    4. ' ' → logprob: -14.000338554382324
    5. '```' → logprob: -14.125338554382324
    6. 'import' → logprob: -15.625338554382324
    7. '   ' → logprob: -15.875338554382324
    8. '1' → logprob: -16.12533950805664
    9. '(' → logprob: -16.62533950805664
    10. '-' → logprob: -17.00033950805664

Token 3941: '],
' (ID: 2274)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.01790582947432995
    2. '[' → logprob: -4.5179057121276855
    3. ',
' → logprob: -6.3929057121276855
    4. '],' → logprob: -6.3929057121276855
    5. ' ,' → logprob: -6.6429057121276855
    6. '       ' → logprob: -6.8929057121276855
    7. '   ' → logprob: -7.6429057121276855
    8. '        ' → logprob: -8.642906188964844
    9. '           ' → logprob: -9.142906188964844
    10. '                ' → logprob: -10.017906188964844

Token 3942: '                ' (ID: 408)
  Prédit: 'seg'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'seg' → logprob: -0.3546474874019623
    2. '            ' → logprob: -1.9796475172042847
    3. '                ' → logprob: -2.229647397994995
    4. '               ' → logprob: -3.604647397994995
    5. ' seg' → logprob: -4.229647636413574
    6. '           ' → logprob: -4.854647636413574
    7. '             ' → logprob: -7.104647636413574
    8. '              ' → logprob: -7.229647636413574
    9. '                 ' → logprob: -7.604647636413574
    10. '                   ' → logprob: -8.354647636413574

Token 3943: ' seg' (ID: 3055)
  Prédit: 'seg'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'seg' (adapté à ' seg') → logprob: -2.7491250875755213e-05
    2. ' seg' → logprob: -10.625027656555176
    3. '           ' → logprob: -14.250027656555176
    4. '   ' → logprob: -14.750027656555176
    5. '               ' → logprob: -15.125027656555176
    6. '          ' → logprob: -15.250027656555176
    7. '(seg' → logprob: -15.250027656555176
    8. '            ' → logprob: -15.500027656555176
    9. '              ' → logprob: -15.625027656555176
    10. '       ' → logprob: -15.625027656555176

Token 3944: '_p' (ID: 1359)
  Prédit: '_p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_p' → logprob: -0.0024284557439386845
    2. '2' → logprob: -6.3774285316467285
    3. '_origin' → logprob: -8.00242805480957
    4. 'origin' → logprob: -8.25242805480957
    5. '_' → logprob: -9.50242805480957
    6. '1' → logprob: -10.75242805480957
    7. '[' → logprob: -11.00242805480957
    8. '_pos' → logprob: -12.00242805480957
    9. '.origin' → logprob: -13.25242805480957
    10. '_orig' → logprob: -13.62742805480957

Token 3945: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.2233183042553719e-05
    2. '[' → logprob: -11.500012397766113
    3. '_' → logprob: -14.000012397766113
    4. '_p' → logprob: -14.500012397766113
    5. 'p' → logprob: -15.750012397766113
    6. '0' → logprob: -16.375011444091797
    7. 'oint' → logprob: -16.625011444091797
    8. '   ' → logprob: -16.750011444091797
    9. '(' → logprob: -17.125011444091797
    10. 'origin' → logprob: -17.375011444091797

Token 3946: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -3.8889261304575484e-06
    2. '```' → logprob: -13.375003814697266
    3. '   ' → logprob: -14.375003814697266
    4. '][' → logprob: -14.375003814697266
    5. '[
' → logprob: -15.625003814697266
    6. ' [' → logprob: -15.750003814697266
    7. ')[' → logprob: -15.875003814697266
    8. '#' → logprob: -16.000003814697266
    9. '(' → logprob: -16.625003814697266
    10. '()[' → logprob: -16.750003814697266

Token 3947: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -9.610702363715973e-06
    2. '[' → logprob: -11.625009536743164
    3. '-' → logprob: -16.125009536743164
    4. '   ' → logprob: -16.250009536743164
    5. '0' → logprob: -17.000009536743164
    6. 'origin' → logprob: -17.000009536743164
    7. '```' → logprob: -17.125009536743164
    8. '１' → logprob: -17.125009536743164
    9. '#' → logprob: -17.875009536743164
    10. '۱' → logprob: -18.000009536743164

Token 3948: ']-' (ID: 27107)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.2669476866722107
    2. ']-' → logprob: -2.2669477462768555
    3. '[' → logprob: -2.7669477462768555
    4. ']' → logprob: -2.7669477462768555
    5. ' -' → logprob: -5.3919477462768555
    6. '()-' → logprob: -8.891947746276855
    7. '-ray' → logprob: -9.641947746276855
    8. '<|end|>' → logprob: -10.266947746276855
    9. '-user' → logprob: -10.516947746276855
    10. '][' → logprob: -11.016947746276855

Token 3949: 'ray' (ID: 25430)
  Prédit: 'ray'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ray' → logprob: -0.00019328886992298067
    2. ' ray' → logprob: -8.62519359588623
    3. '(ray' → logprob: -11.37519359588623
    4. '-ray' → logprob: -13.37519359588623
    5. '```' → logprob: -15.87519359588623
    6. '   ' → logprob: -16.500192642211914
    7. 'ry' → logprob: -16.500192642211914
    8. '0' → logprob: -17.000192642211914
    9. 'rail' → logprob: -17.125192642211914
    10. '_ray' → logprob: -17.125192642211914

Token 3950: '_origin' (ID: 81230)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.22191783785820007
    2. '[' → logprob: -2.2219178676605225
    3. '_origin' → logprob: -2.7219178676605225
    4. '0' → logprob: -4.346917629241943
    5. 'origin' → logprob: -4.471917629241943
    6. '```' → logprob: -8.846918106079102
    7. 'Origin' → logprob: -9.221918106079102
    8. '_orig' → logprob: -9.346918106079102
    9. '   ' → logprob: -9.971918106079102
    10. '.origin' → logprob: -10.721918106079102

Token 3951: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -3.5358694731257856e-05
    2. '```' → logprob: -11.000035285949707
    3. '[
' → logprob: -11.750035285949707
    4. '][' → logprob: -12.000035285949707
    5. '   ' → logprob: -13.625035285949707
    6. ' [' → logprob: -13.875035285949707
    7. 'def' → logprob: -14.875035285949707
    8. '#' → logprob: -15.375035285949707
    9. '0' → logprob: -15.375035285949707
    10. ')[' → logprob: -15.375035285949707

Token 3952: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.18137629330158234
    2. '[' → logprob: -1.806376338005066
    3. '0' → logprob: -6.4313764572143555
    4. '   ' → logprob: -12.306376457214355
    5. '[
' → logprob: -12.556376457214355
    6. ']' → logprob: -12.681376457214355
    7. '```' → logprob: -13.056376457214355
    8. '(' → logprob: -13.306376457214355
    9. ' ' → logprob: -13.431376457214355
    10. ')' → logprob: -13.681376457214355

Token 3953: ']]
' (ID: 29446)
  Prédit: ']
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']
' → logprob: -0.3103308379650116
    2. ']' → logprob: -1.435330867767334
    3. '                ' → logprob: -3.935330867767334
    4. '               ' → logprob: -5.560330867767334
    5. '            ' → logprob: -6.685330867767334
    6. ']

' → logprob: -6.810330867767334
    7. '           ' → logprob: -7.060330867767334
    8. '   ' → logprob: -7.810330867767334
    9. '[' → logprob: -7.935330867767334
    10. '```' → logprob: -7.935330867767334

Token 3954: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.35562852025032043
    2. '```' → logprob: -1.730628490447998
    3. '[' → logprob: -3.105628490447998
    4. '       ' → logprob: -3.480628490447998
    5. '   ' → logprob: -4.105628490447998
    6. '               ' → logprob: -4.980628490447998
    7. 'import' → logprob: -4.980628490447998
    8. '``' → logprob: -5.355628490447998
    9. '                   ' → logprob: -6.230628490447998
    10. 'from' → logprob: -6.355628490447998

Token 3955: ' det' (ID: 1476)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.2686951160430908
    2. 'from' → logprob: -1.6436951160430908
    3. '           ' → logprob: -4.018694877624512
    4. '```' → logprob: -4.643694877624512
    5. 'if' → logprob: -5.643694877624512
    6. 'try' → logprob: -5.768694877624512
    7. ' from' → logprob: -6.518694877624512
    8. '[' → logprob: -6.643694877624512
    9. 'det' (adapté à ' det') → logprob: -6.643694877624512
    10. '   ' → logprob: -7.268694877624512

Token 3956: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.20242400467395782
    2. '=' → logprob: -1.7024240493774414
    3. '```' → logprob: -7.577424049377441
    4. 'A' → logprob: -9.077424049377441
    5. '=[[' → logprob: -9.327424049377441
    6. ':' → logprob: -10.077424049377441
    7. '=
' → logprob: -10.202424049377441
    8. '=None' → logprob: -10.452424049377441
    9. ' =
' → logprob: -10.577424049377441
    10. '[' → logprob: -10.952424049377441

Token 3957: ' A' (ID: 355)
  Prédit: 'ray'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ray' → logprob: -0.003146819770336151
    2. ' ray' → logprob: -5.878146648406982
    3. '(ray' → logprob: -8.00314712524414
    4. '   ' → logprob: -13.00314712524414
    5. '-ray' → logprob: -13.75314712524414
    6. '```' → logprob: -13.75314712524414
    7. 'A' → logprob: -14.12814712524414
    8. '`' → logprob: -14.62814712524414
    9. '
' → logprob: -15.25314712524414
    10. 'dir' → logprob: -15.25314712524414

Token 3958: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.00012439649435691535
    2. '[[' → logprob: -9.750123977661133
    3. '[
' → logprob: -10.000123977661133
    4. '```' → logprob: -11.375123977661133
    5. '0' → logprob: -12.500123977661133
    6. '\[' → logprob: -13.625123977661133
    7. '00' → logprob: -13.875123977661133
    8. '``' → logprob: -13.875123977661133
    9. '][' → logprob: -14.500123977661133
    10. ' [' → logprob: -14.625123977661133

Token 3959: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.009974113665521145
    2. '[' → logprob: -4.634974002838135
    3. '
' → logprob: -9.634974479675293
    4. ' ' → logprob: -9.759974479675293
    5. '(' → logprob: -10.509974479675293
    6. '   ' → logprob: -10.634974479675293
    7. 'ray' → logprob: -11.384974479675293
    8. '```' → logprob: -11.884974479675293
    9. '1' → logprob: -12.134974479675293
    10. '[
' → logprob: -12.384974479675293

Token 3960: '][' (ID: 2696)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.006111751310527325
    2. '][' → logprob: -5.1311116218566895
    3. '```' → logprob: -9.881112098693848
    4. '
' → logprob: -10.256112098693848
    5. '0' → logprob: -10.506112098693848
    6. ',' → logprob: -10.631112098693848
    7. '   ' → logprob: -11.381112098693848
    8. ' [' → logprob: -11.756112098693848
    9. ' ][' → logprob: -12.631112098693848
    10. 'def' → logprob: -12.756112098693848

Token 3961: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -9.014684110297821e-06
    2. '
' → logprob: -11.750008583068848
    3. '[' → logprob: -14.000008583068848
    4. '1' → logprob: -15.125008583068848
    5. '][' → logprob: -17.875009536743164
    6. ' ' → logprob: -18.125009536743164
    7. '   ' → logprob: -18.375009536743164
    8. '```' → logprob: -19.000009536743164
    9. '00' → logprob: -19.875009536743164
    10. '(' → logprob: -20.312509536743164

Token 3962: ']*' (ID: 18579)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '*' → logprob: -1.0251753330230713
    2. ',' → logprob: -1.2751753330230713
    3. ' *' → logprob: -1.5251753330230713
    4. '][' → logprob: -2.6501753330230713
    5. '[' → logprob: -3.5251753330230713
    6. '*A' → logprob: -3.9001753330230713
    7. 'A' → logprob: -4.400175094604492
    8. ' ,' → logprob: -5.525175094604492
    9. '```' → logprob: -6.275175094604492
    10. '*[' → logprob: -6.650175094604492

Token 3963: 'A' (ID: 32)
  Prédit: 'A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -3.547789674485102e-05
    2. ' A' → logprob: -10.250035285949707
    3. '   ' → logprob: -19.375036239624023
    4. '	A' → logprob: -19.625036239624023
    5. '
' → logprob: -20.875036239624023
    6. ' ' → logprob: -21.250036239624023
    7. '    ' → logprob: -21.625036239624023
    8. '       ' → logprob: -21.625036239624023
    9. '(' → logprob: -21.875036239624023
    10. '[' → logprob: -22.500036239624023

Token 3964: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0007662679417990148
    2. '1' → logprob: -7.250766277313232
    3. '][' → logprob: -10.125765800476074
    4. '0' → logprob: -12.125765800476074
    5. '```' → logprob: -12.875765800476074
    6. 'A' → logprob: -13.000765800476074
    7. '
' → logprob: -13.125765800476074
    8. '#' → logprob: -13.875765800476074
    9. ',' → logprob: -14.125765800476074
    10. ' [' → logprob: -14.750765800476074

Token 3965: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -7.779520092299208e-05
    2. '0' → logprob: -9.500078201293945
    3. '[' → logprob: -13.250078201293945
    4. '
' → logprob: -14.000078201293945
    5. '   ' → logprob: -16.000078201293945
    6. '```' → logprob: -16.000078201293945
    7. '#' → logprob: -18.250078201293945
    8. '``' → logprob: -19.125078201293945
    9. '１' → logprob: -19.750078201293945
    10. '`' → logprob: -19.875078201293945

Token 3966: '][' (ID: 2696)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.09807807207107544
    2. '1' → logprob: -2.5980780124664307
    3. '][' → logprob: -3.9730780124664307
    4. '
' → logprob: -9.473077774047852
    5. '```' → logprob: -9.848077774047852
    6. '#' → logprob: -11.473077774047852
    7. '   ' → logprob: -11.473077774047852
    8. '0' → logprob: -11.598077774047852
    9. ' [' → logprob: -11.723077774047852
    10. '[
' → logprob: -12.348077774047852

Token 3967: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.512236498361744e-07
    2. '0' → logprob: -14.875000953674316
    3. '
' → logprob: -15.875000953674316
    4. '```' → logprob: -17.75
    5. '[' → logprob: -18.0
    6. '   ' → logprob: -18.125
    7. '۱' → logprob: -18.625
    8. '１' → logprob: -19.75
    9. '१' → logprob: -19.875
    10. '#' → logprob: -20.375

Token 3968: ']' (ID: 60)
  Prédit: ' -'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.11328692734241486
    2. '-' → logprob: -2.2382869720458984
    3. '-A' → logprob: -7.988286972045898
    4. '```' → logprob: -9.613286972045898
    5. '-
' → logprob: -10.488286972045898
    6. ' -
' → logprob: -11.613286972045898
    7. ' ' → logprob: -12.488286972045898
    8. '   ' → logprob: -12.988286972045898
    9. '                ' → logprob: -12.988286972045898
    10. '            ' → logprob: -12.988286972045898

Token 3969: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.12693597376346588
    2. '-' → logprob: -2.1269359588623047
    3. '-A' → logprob: -12.876935958862305
    4. '```' → logprob: -13.001935958862305
    5. '-
' → logprob: -13.126935958862305
    6. ' -
' → logprob: -14.126935958862305
    7. ' ' → logprob: -16.126935958862305
    8. '   ' → logprob: -17.126935958862305
    9. '`' → logprob: -17.251935958862305
    10. ',' → logprob: -17.251935958862305

Token 3970: ' A' (ID: 355)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -1.688212614681106e-05
    2. ' A' → logprob: -11.125017166137695
    3. '-A' → logprob: -13.875017166137695
    4. '-' → logprob: -14.250017166137695
    5. '(-' → logprob: -15.250017166137695
    6. '   ' → logprob: -16.625017166137695
    7. '(A' → logprob: -16.875017166137695
    8. '	A' → logprob: -17.000017166137695
    9. '0' → logprob: -17.125017166137695
    10. ' -' → logprob: -17.625017166137695

Token 3971: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -3.128163257315464e-07
    2. '1' → logprob: -15.625
    3. '0' → logprob: -16.625
    4. '[
' → logprob: -17.5
    5. '   ' → logprob: -17.75
    6. '```' → logprob: -17.75
    7. '
' → logprob: -18.125
    8. '#' → logprob: -18.25
    9. 'A' → logprob: -18.75
    10. '][' → logprob: -18.875

Token 3972: '0' (ID: 15)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.002477677771821618
    2. '0' → logprob: -6.002477645874023
    3. '[' → logprob: -13.377477645874023
    4. '   ' → logprob: -15.252477645874023
    5. '
' → logprob: -16.502477645874023
    6. '```' → logprob: -17.002477645874023
    7. ' ' → logprob: -17.502477645874023
    8. '#' → logprob: -18.502477645874023
    9. '    ' → logprob: -18.752477645874023
    10. '``' → logprob: -18.877477645874023

Token 3973: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.026462620124220848
    2. '[' → logprob: -3.6514625549316406
    3. '1' → logprob: -8.90146255493164
    4. ' ][' → logprob: -11.27646255493164
    5. '   ' → logprob: -12.15146255493164
    6. '#' → logprob: -13.52646255493164
    7. ']' → logprob: -13.65146255493164
    8. '```' → logprob: -14.27646255493164
    9. '0' → logprob: -14.52646255493164
    10. ' [' → logprob: -14.65146255493164

Token 3974: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.0280383548888494e-06
    2. '0' → logprob: -14.250000953674316
    3. '
' → logprob: -15.000000953674316
    4. '[' → logprob: -17.500001907348633
    5. '   ' → logprob: -18.500001907348633
    6. '```' → logprob: -18.875001907348633
    7. '１' → logprob: -20.250001907348633
    8. '۱' → logprob: -20.875001907348633
    9. '#' → logprob: -21.000001907348633
    10. '``' → logprob: -21.125001907348633

Token 3975: ']*' (ID: 18579)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.3252027928829193
    2. '*' → logprob: -1.7002028226852417
    3. '][' → logprob: -2.450202703475952
    4. ' *' → logprob: -5.450202941894531
    5. ']*' → logprob: -5.950202941894531
    6. '*[' → logprob: -6.825202941894531
    7. '   ' → logprob: -8.825202941894531
    8. ',' → logprob: -8.950202941894531
    9. '```' → logprob: -9.075202941894531
    10. '*A' → logprob: -9.200202941894531

Token 3976: 'A' (ID: 32)
  Prédit: 'A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -3.4121114822482923e-06
    2. ' A' → logprob: -12.625003814697266
    3. '	A' → logprob: -17.625003814697266
    4. '   ' → logprob: -17.875003814697266
    5. '1' → logprob: -19.250003814697266
    6. '0' → logprob: -19.375003814697266
    7. '       ' → logprob: -19.500003814697266
    8. '           ' → logprob: -20.125003814697266
    9. ' ' → logprob: -20.125003814697266
    10. '[' → logprob: -20.250003814697266

Token 3977: '[' (ID: 58)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.6931970119476318
    2. '[' → logprob: -0.6931970119476318
    3. '   ' → logprob: -10.943197250366211
    4. '```' → logprob: -11.318197250366211
    5. '0' → logprob: -11.443197250366211
    6. '][' → logprob: -12.693197250366211
    7. ' ' → logprob: -13.818197250366211
    8. '#' → logprob: -13.818197250366211
    9. '
' → logprob: -14.193197250366211
    10. '                   ' → logprob: -14.943197250366211

Token 3978: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.36574100604048e-06
    2. '0' → logprob: -12.375004768371582
    3. '
' → logprob: -16.375003814697266
    4. '[' → logprob: -17.250003814697266
    5. '   ' → logprob: -17.500003814697266
    6. '-' → logprob: -19.750003814697266
    7. '```' → logprob: -19.750003814697266
    8. ' ' → logprob: -20.375003814697266
    9. '１' → logprob: -20.875003814697266
    10. '{' → logprob: -21.000003814697266

Token 3979: '][' (ID: 2696)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0033351562451571226
    2. '[' → logprob: -5.878334999084473
    3. '0' → logprob: -8.003334999084473
    4. '][' → logprob: -8.628334999084473
    5. '   ' → logprob: -11.628334999084473
    6. '```' → logprob: -12.378334999084473
    7. ']' → logprob: -13.628334999084473
    8. ' ' → logprob: -14.628334999084473
    9. '#' → logprob: -14.753334999084473
    10. '-' → logprob: -14.878334999084473

Token 3980: '0' (ID: 15)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.014165511354804039
    2. '0' → logprob: -4.26416540145874
    3. '```' → logprob: -14.264165878295898
    4. '
' → logprob: -14.389165878295898
    5. '   ' → logprob: -15.139165878295898
    6. '[' → logprob: -15.389165878295898
    7. ' ' → logprob: -16.2641658782959
    8. '۱' → logprob: -17.3266658782959
    9. '{
' → logprob: -17.6391658782959
    10. '<|end|>' → logprob: -17.7016658782959

Token 3981: ']
' (ID: 1592)
  Prédit: ']
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']
' → logprob: -0.8397106528282166
    2. '
' → logprob: -1.3397107124328613
    3. '           ' → logprob: -1.4647107124328613
    4. ':
' → logprob: -3.8397107124328613
    5. ']' → logprob: -4.089710712432861
    6. ')
' → logprob: -4.714710712432861
    7. '```' → logprob: -5.089710712432861
    8. '[' → logprob: -5.339710712432861
    9. '       ' → logprob: -5.964710712432861
    10. '               ' → logprob: -6.339710712432861

Token 3982: '           ' (ID: 352)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '```' → logprob: -0.8590148091316223
    2. '           ' → logprob: -0.9840148091316223
    3. '
' → logprob: -2.2340147495269775
    4. ' if' → logprob: -3.6090147495269775
    5. 'if' → logprob: -3.8590147495269775
    6. '       ' → logprob: -4.734014987945557
    7. '               ' → logprob: -5.234014987945557
    8. '=' → logprob: -5.359014987945557
    9. 'None' → logprob: -5.859014987945557
    10. '                   ' → logprob: -6.109014987945557

Token 3983: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.5116154551506042
    2. '           ' → logprob: -1.636615514755249
    3. 'if' (adapté à ' if') → logprob: -1.636615514755249
    4. 'None' → logprob: -5.76161527633667
    5. '```' → logprob: -6.01161527633667
    6. ' None' → logprob: -6.38661527633667
    7. '       ' → logprob: -6.76161527633667
    8. '               ' → logprob: -7.13661527633667
    9. '   ' → logprob: -7.26161527633667
    10. '\n' → logprob: -8.011615753173828

Token 3984: ' abs' (ID: 8443)
  Prédit: 'abs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'abs' → logprob: -0.3922904431819916
    2. ' abs' → logprob: -1.392290472984314
    3. '0' → logprob: -2.7672903537750244
    4. 'det' → logprob: -4.5172905921936035
    5. ' ' → logprob: -6.3922905921936035
    6. ' det' → logprob: -7.6422905921936035
    7. '   ' → logprob: -9.892290115356445
    8. '(abs' → logprob: -11.642290115356445
    9. '  ' → logprob: -12.142290115356445
    10. '    ' → logprob: -12.392290115356445

Token 3985: '(det' (ID: 161017)
  Prédit: '(A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(A' → logprob: -0.16038131713867188
    2. '(det' → logprob: -1.9103813171386719
    3. '(' → logprob: -9.035381317138672
    4. '(
' → logprob: -10.660381317138672
    5. 'det' → logprob: -12.160381317138672
    6. 'A' → logprob: -12.410381317138672
    7. '(def' → logprob: -13.160381317138672
    8. '((' → logprob: -13.410381317138672
    9. ' (' → logprob: -15.660381317138672
    10. '(d' → logprob: -15.785381317138672

Token 3986: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.1472388058900833
    2. '>' → logprob: -2.2722387313842773
    3. ')>' → logprob: -4.022238731384277
    4. ' >' → logprob: -4.522238731384277
    5. '<' → logprob: -6.022238731384277
    6. ')<' → logprob: -6.897238731384277
    7. '[' → logprob: -7.147238731384277
    8. ' <' → logprob: -7.522238731384277
    9. '   ' → logprob: -9.897238731384277
    10. ']' → logprob: -10.147238731384277

Token 3987: ' <' (ID: 464)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.2261878103017807
    2. ' >' → logprob: -1.601187825202942
    3. '<' → logprob: -7.601187705993652
    4. ' <' → logprob: -8.601187705993652
    5. '[' → logprob: -10.351187705993652
    6. '```' → logprob: -10.601187705993652
    7. ')>' → logprob: -12.226187705993652
    8. '   ' → logprob: -12.226187705993652
    9. '()>' → logprob: -12.476187705993652
    10. ')' → logprob: -12.851187705993652

Token 3988: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.320199877838604e-07
    2. ' ' → logprob: -14.75
    3. '0' → logprob: -17.625
    4. '```' → logprob: -20.25
    5. '(' → logprob: -20.5
    6. '   ' → logprob: -21.5
    7. '           ' → logprob: -22.75
    8. '
' → logprob: -23.0
    9. '2' → logprob: -23.625
    10. '+' → logprob: -23.625

Token 3989: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: 0.0
    2. ' ' → logprob: -18.875
    3. '   ' → logprob: -20.75
    4. '(' → logprob: -20.875
    5. '```' → logprob: -22.25
    6. '0' → logprob: -22.625
    7. '
' → logprob: -22.75
    8. '#' → logprob: -23.125
    9. '           ' → logprob: -23.5
    10. '=' → logprob: -24.0

Token 3990: 'e' (ID: 68)
  Prédit: 'e'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: 0.0
    2. '1' → logprob: -17.5
    3. '-' → logprob: -20.75
    4. 'E' → logprob: -21.5
    5. '.' → logprob: -22.625
    6. '```' → logprob: -22.875
    7. '**' → logprob: -24.375
    8. '0' → logprob: -24.625
    9. '.e' → logprob: -25.25
    10. '(e' → logprob: -25.375

Token 3991: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: 0.0
    2. ' -' → logprob: -18.625
    3. 'e' → logprob: -18.875
    4. '```' → logprob: -19.875
    5. '−' → logprob: -20.375
    6. '\-' → logprob: -20.625
    7. '
' → logprob: -21.0
    8. '{-' → logprob: -21.375
    9. '^-' → logprob: -21.375
    10. '(-' → logprob: -21.375

Token 3992: '14' (ID: 1265)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '-' → logprob: -0.3534476161003113
    2. '9' → logprob: -1.228447675704956
    3. '8' → logprob: -5.603447437286377
    4. '7' → logprob: -7.478447437286377
    5. '6' → logprob: -8.103447914123535
    6. '12' → logprob: -8.228447914123535
    7. '10' → logprob: -9.478447914123535
    8. '09' → logprob: -9.603447914123535
    9. '```' → logprob: -12.103447914123535
    10. '(-' → logprob: -12.228447914123535

Token 3993: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.21347586810588837
    2. ':' → logprob: -1.8384758234024048
    3. '               ' → logprob: -3.5884759426116943
    4. '           ' → logprob: -5.338475704193115
    5. '                   ' → logprob: -8.213476181030273
    6. ':return' → logprob: -8.588476181030273
    7. ':
' → logprob: -9.838476181030273
    8. '   ' → logprob: -10.213476181030273
    9. ',' → logprob: -10.713476181030273
    10. '):
' → logprob: -10.713476181030273

Token 3994: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.032870709896087646
    2. '           ' → logprob: -3.5328707695007324
    3. '```' → logprob: -7.407870769500732
    4. '   ' → logprob: -7.532870769500732
    5. ' return' → logprob: -7.782870769500732
    6. '       ' → logprob: -8.157870292663574
    7. '            ' → logprob: -8.157870292663574
    8. 'return' → logprob: -8.657870292663574
    9. '	           ' → logprob: -9.282870292663574
    10. '                ' → logprob: -9.407870292663574

Token 3995: ' return' (ID: 622)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.9291157722473145
    2. ' return' → logprob: -0.9291157722473145
    3. 'return' (adapté à ' return') → logprob: -1.6791157722473145
    4. '                ' → logprob: -5.0541157722473145
    5. '                   ' → logprob: -5.3041157722473145
    6. 'None' → logprob: -6.0541157722473145
    7. ' None' → logprob: -6.3041157722473145
    8. '            ' → logprob: -6.4291157722473145
    9. '   ' → logprob: -6.6791157722473145
    10. '           ' → logprob: -6.6791157722473145

Token 3996: ' None' (ID: 4662)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -0.005235190503299236
    2. ' None' → logprob: -5.255235195159912
    3. '(None' → logprob: -13.505234718322754
    4. '_None' → logprob: -16.88023567199707
    5. ',None' → logprob: -17.13023567199707
    6. '=None' → logprob: -18.00523567199707
    7. '_none' → logprob: -20.63023567199707
    8. '0' → logprob: -21.13023567199707
    9. '.None' → logprob: -21.25523567199707
    10. '```' → logprob: -21.63023567199707

Token 3997: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.6759131550788879
    2. '               ' → logprob: -2.050913095474243
    3. '(' → logprob: -2.300913095474243
    4. '   ' → logprob: -2.425913095474243
    5. '                   ' → logprob: -3.300913095474243
    6. '\n' → logprob: -3.675913095474243
    7. '\t' → logprob: -3.800913095474243
    8. '(
' → logprob: -4.050913333892822
    9. ',' → logprob: -4.300913333892822
    10. '('\' → logprob: -5.050913333892822

Token 3998: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.5482812523841858
    2. '               ' → logprob: -1.423281192779541
    3. '   ' → logprob: -3.048281192779541
    4. '                   ' → logprob: -3.548281192779541
    5. '\t' → logprob: -3.673281192779541
    6. '		' → logprob: -3.798281192779541
    7. '(' → logprob: -4.173281192779541
    8. '			' → logprob: -5.048281192779541
    9. '       ' → logprob: -5.173281192779541
    10. '[' → logprob: -5.423281192779541

Token 3999: ' t' (ID: 260)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.06255406141281128
    2. '               ' → logprob: -3.312554121017456
    3. '```' → logprob: -4.812553882598877
    4. ' t' → logprob: -5.437553882598877
    5. '            ' → logprob: -5.812553882598877
    6. '\t' → logprob: -6.812553882598877
    7. '		' → logprob: -6.812553882598877
    8. '                   ' → logprob: -6.937553882598877
    9. '[' → logprob: -6.937553882598877
    10. 't' (adapté à ' t') → logprob: -7.312553882598877

Token 4000: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6408665180206299
    2. ',' → logprob: -1.0158665180206299
    3. ' =' → logprob: -2.26586651802063
    4. ',t' → logprob: -5.890866279602051
    5. ' ,' → logprob: -7.265866279602051
    6. ')' → logprob: -7.265866279602051
    7. '[' → logprob: -7.390866279602051
    8. '```' → logprob: -8.01586627960205
    9. '_,' → logprob: -8.39086627960205
    10. '_tokens' → logprob: -8.64086627960205

Token 4001: ' (' (ID: 350)
  Prédit: '(b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(b' → logprob: -0.000992795336060226
    2. ' (' → logprob: -7.000992774963379
    3. '(' → logprob: -9.625992774963379
    4. '   ' → logprob: -12.250992774963379
    5. '(det' → logprob: -13.000992774963379
    6. '(t' → logprob: -13.250992774963379
    7. '((' → logprob: -13.375992774963379
    8. '(round' → logprob: -13.750992774963379
    9. '(float' → logprob: -13.875992774963379
    10. ' ' → logprob: -14.125992774963379

Token 4002: 'b' (ID: 65)
  Prédit: 'b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.008702386170625687
    2. '(b' → logprob: -5.133702278137207
    3. ' b' → logprob: -6.758702278137207
    4. 'A' → logprob: -7.008702278137207
    5. '(A' → logprob: -8.133702278137207
    6. ' (' → logprob: -8.633702278137207
    7. '   ' → logprob: -9.133702278137207
    8. '(' → logprob: -10.133702278137207
    9. ' ' → logprob: -11.258702278137207
    10. '    ' → logprob: -11.383702278137207

Token 4003: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -4.894790981779806e-05
    2. '0' → logprob: -10.625048637390137
    3. '
' → logprob: -11.500048637390137
    4. ' [' → logprob: -12.750048637390137
    5. ')[' → logprob: -13.250048637390137
    6. 'A' → logprob: -13.500048637390137
    7. '[
' → logprob: -13.625048637390137
    8. '][' → logprob: -13.875048637390137
    9. '```' → logprob: -13.875048637390137
    10. '   ' → logprob: -14.000048637390137

Token 4004: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.004660453647375107
    2. '1' → logprob: -5.379660606384277
    3. '[' → logprob: -10.254660606384277
    4. '
' → logprob: -12.379660606384277
    5. '   ' → logprob: -15.004660606384277
    6. '```' → logprob: -15.004660606384277
    7. '#' → logprob: -15.879660606384277
    8. ' ' → logprob: -17.62965965270996
    9. '``' → logprob: -17.62965965270996
    10. '(' → logprob: -18.00465965270996

Token 4005: ']*' (ID: 18579)
  Prédit: ' *'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.8328823447227478
    2. '*A' → logprob: -0.9578823447227478
    3. '*' → logprob: -1.7078824043273926
    4. '[' → logprob: -9.082881927490234
    5. 'A' → logprob: -10.582881927490234
    6. ' ' → logprob: -10.957881927490234
    7. ')*' → logprob: -11.332881927490234
    8. ']*' → logprob: -11.332881927490234
    9. '[A' → logprob: -11.457881927490234
    10. '*x' → logprob: -11.832881927490234

Token 4006: 'A' (ID: 32)
  Prédit: 'A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -4.620622712536715e-05
    2. ' A' → logprob: -10.000045776367188
    3. '   ' → logprob: -15.375045776367188
    4. '	A' → logprob: -15.750045776367188
    5. ' ' → logprob: -16.125045776367188
    6. '    ' → logprob: -16.625045776367188
    7. '  ' → logprob: -16.625045776367188
    8. '(A' → logprob: -16.875045776367188
    9. '
' → logprob: -17.875045776367188
    10. 'a' → logprob: -18.000045776367188

Token 4007: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.00037359268753789365
    2. '0' → logprob: -8.500373840332031
    3. '1' → logprob: -8.875373840332031
    4. '[
' → logprob: -11.750373840332031
    5. ' [' → logprob: -12.250373840332031
    6. '
' → logprob: -12.500373840332031
    7. '```' → logprob: -12.625373840332031
    8. '][' → logprob: -12.625373840332031
    9. '#' → logprob: -13.500373840332031
    10. 'import' → logprob: -13.750373840332031

Token 4008: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.011158415116369724
    2. '0' → logprob: -4.511158466339111
    3. '[' → logprob: -9.136157989501953
    4. '
' → logprob: -13.136157989501953
    5. '```' → logprob: -15.511157989501953
    6. '(' → logprob: -15.761157989501953
    7. '   ' → logprob: -16.323657989501953
    8. '``' → logprob: -16.511157989501953
    9. ' ' → logprob: -16.636157989501953
    10. '`' → logprob: -16.636157989501953

Token 4009: '][' (ID: 2696)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0738072469830513
    2. '1' → logprob: -2.8238072395324707
    3. '][' → logprob: -4.448807239532471
    4. '0' → logprob: -10.073807716369629
    5. '   ' → logprob: -10.573807716369629
    6. ' [' → logprob: -12.823807716369629
    7. '```' → logprob: -13.073807716369629
    8. '#' → logprob: -14.073807716369629
    9. ')[' → logprob: -14.198807716369629
    10. '
' → logprob: -14.198807716369629

Token 4010: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.558399319241289e-05
    2. '0' → logprob: -10.875025749206543
    3. '[' → logprob: -13.000025749206543
    4. '
' → logprob: -13.125025749206543
    5. '<|end|>' → logprob: -13.875025749206543
    6. '   ' → logprob: -14.750025749206543
    7. '۱' → logprob: -15.000025749206543
    8. '```' → logprob: -15.250025749206543
    9. '{' → logprob: -16.250024795532227
    10. ' ' → logprob: -16.375024795532227

Token 4011: ']-' (ID: 27107)
  Prédit: ' -'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.06251072883605957
    2. '-' → logprob: -2.8125107288360596
    3. '        ' → logprob: -9.31251049041748
    4. '                ' → logprob: -9.43751049041748
    5. '            ' → logprob: -9.68751049041748
    6. '           ' → logprob: -10.06251049041748
    7. ' ' → logprob: -10.31251049041748
    8. '         ' → logprob: -10.31251049041748
    9. '          ' → logprob: -10.43751049041748
    10. '       ' → logprob: -10.56251049041748

Token 4012: 'b' (ID: 65)
  Prédit: 'b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.0013461847556754947
    2. 'A' → logprob: -6.626346111297607
    3. ' b' → logprob: -10.876346588134766
    4. '   ' → logprob: -14.251346588134766
    5. ' A' → logprob: -14.751346588134766
    6. '    ' → logprob: -16.251346588134766
    7. '	b' → logprob: -17.001346588134766
    8. '  ' → logprob: -17.126346588134766
    9. ' ' → logprob: -17.126346588134766
    10. '     ' → logprob: -17.251346588134766

Token 4013: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -4.008129963040119e-06
    2. '0' → logprob: -13.375003814697266
    3. '[
' → logprob: -14.500003814697266
    4. '1' → logprob: -14.750003814697266
    5. '][' → logprob: -15.250003814697266
    6. 'import' → logprob: -15.500003814697266
    7. '#' → logprob: -15.750003814697266
    8. 'Answer' → logprob: -16.000003814697266
    9. '```' → logprob: -16.125003814697266
    10. '<|end|>' → logprob: -16.250003814697266

Token 4014: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.038515910506248474
    2. '0' → logprob: -3.28851580619812
    3. '[' → logprob: -7.663516044616699
    4. '   ' → logprob: -12.7885160446167
    5. '```' → logprob: -14.4135160446167
    6. ' ' → logprob: -14.5385160446167
    7. '
' → logprob: -15.2885160446167
    8. '  ' → logprob: -16.163515090942383
    9. '(' → logprob: -16.163515090942383
    10. '#' → logprob: -16.788515090942383

Token 4015: ']*' (ID: 18579)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0018947218777611852
    2. '*' → logprob: -6.376894950866699
    3. '*[' → logprob: -8.8768949508667
    4. '][' → logprob: -10.2518949508667
    5. ']*' → logprob: -11.3768949508667
    6. '*A' → logprob: -12.8768949508667
    7. ' *' → logprob: -13.3768949508667
    8. '```' → logprob: -14.0018949508667
    9. 'A' → logprob: -14.6268949508667
    10. ' [' → logprob: -15.6268949508667

Token 4016: 'A' (ID: 32)
  Prédit: 'A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -8.180258191714529e-06
    2. ' A' → logprob: -11.750008583068848
    3. '   ' → logprob: -16.12500762939453
    4. '[' → logprob: -17.37500762939453
    5. '  ' → logprob: -17.37500762939453
    6. '       ' → logprob: -17.62500762939453
    7. '         ' → logprob: -18.37500762939453
    8. '           ' → logprob: -18.37500762939453
    9. '    ' → logprob: -18.50000762939453
    10. '	A' → logprob: -18.62500762939453

Token 4017: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -2.6776029699249193e-05
    2. '0' → logprob: -11.62502670288086
    3. '][' → logprob: -12.12502670288086
    4. '[
' → logprob: -12.50002670288086
    5. '1' → logprob: -12.87502670288086
    6. '```' → logprob: -13.12502670288086
    7. '#' → logprob: -13.50002670288086
    8. 'import' → logprob: -14.62502670288086
    9. 'def' → logprob: -15.00002670288086
    10. '
' → logprob: -15.12502670288086

Token 4018: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0005234848940744996
    2. '1' → logprob: -7.625523567199707
    3. '[' → logprob: -10.500523567199707
    4. '
' → logprob: -12.125523567199707
    5. '```' → logprob: -13.750523567199707
    6. '   ' → logprob: -14.250523567199707
    7. ' ' → logprob: -15.875523567199707
    8. ']' → logprob: -16.12552261352539
    9. '(' → logprob: -16.25052261352539
    10. '``' → logprob: -16.50052261352539

Token 4019: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.5761281251907349
    2. '[' → logprob: -0.8261281251907349
    3. '1' → logprob: -9.076128005981445
    4. '   ' → logprob: -10.701128005981445
    5. ' ][' → logprob: -11.201128005981445
    6. ']' → logprob: -11.951128005981445
    7. '0' → logprob: -12.076128005981445
    8. ' [' → logprob: -12.076128005981445
    9. '```' → logprob: -12.951128005981445
    10. '#' → logprob: -13.076128005981445

Token 4020: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -7.886803359724581e-05
    2. '0' → logprob: -9.500079154968262
    3. '```' → logprob: -13.250079154968262
    4. '[' → logprob: -14.250079154968262
    5. '   ' → logprob: -14.250079154968262
    6. ' ' → logprob: -15.125079154968262
    7. '-' → logprob: -16.000078201293945
    8. '' → logprob: -16.687578201293945
    9. '
' → logprob: -16.937578201293945
    10. '  ' → logprob: -17.000078201293945

Token 4021: '])/' (ID: 93047)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.28805896639823914
    2. ')/' → logprob: -1.4130589962005615
    3. ')/(' → logprob: -5.038058757781982
    4. '   ' → logprob: -9.78805923461914
    5. ' )' → logprob: -9.78805923461914
    6. '           ' → logprob: -9.91305923461914
    7. '            ' → logprob: -10.03805923461914
    8. '         ' → logprob: -10.78805923461914
    9. '       ' → logprob: -10.78805923461914
    10. '        ' → logprob: -10.91305923461914

Token 4022: 'det' (ID: 10136)
  Prédit: 'det'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'det' → logprob: -4.36574100604048e-06
    2. ' det' → logprob: -12.875004768371582
    3. 'A' → logprob: -13.750004768371582
    4. '(det' → logprob: -14.375004768371582
    5. '-det' → logprob: -17.625003814697266
    6. '   ' → logprob: -18.250003814697266
    7. '(' → logprob: -19.250003814697266
    8. '(-' → logprob: -20.000003814697266
    9. 'DET' → logprob: -20.125003814697266
    10. ' ' → logprob: -20.375003814697266

Token 4023: '
' (ID: 198)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.051780689507722855
    2. ',
' → logprob: -3.0517807006835938
    3. '<|end|>' → logprob: -7.051780700683594
    4. '```' → logprob: -7.301780700683594
    5. '<|end|>' → logprob: -7.926780700683594
    6. '           ' → logprob: -8.051780700683594
    7. '       ' → logprob: -8.176780700683594
    8. '
' → logprob: -8.426780700683594
    9. ' ,' → logprob: -8.676780700683594
    10. '),' → logprob: -9.301780700683594

Token 4024: '           ' (ID: 352)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.271797776222229
    2. ',
' → logprob: -1.521797776222229
    3. '           ' → logprob: -4.1467976570129395
    4. '```' → logprob: -6.5217976570129395
    5. '[' → logprob: -7.1467976570129395
    6. '               ' → logprob: -7.7717976570129395
    7. '                   ' → logprob: -8.396798133850098
    8. ' ,' → logprob: -8.771798133850098
    9. '            ' → logprob: -9.521798133850098
    10. '(' → logprob: -9.521798133850098

Token 4025: ' s' (ID: 265)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -1.170056939125061
    2. 'A' → logprob: -1.420056939125061
    3. ' (' → logprob: -1.545056939125061
    4. '(' → logprob: -2.4200568199157715
    5. '            ' → logprob: -2.6700568199157715
    6. '(A' → logprob: -3.4200568199157715
    7. ' A' → logprob: -3.6700568199157715
    8. '(
' → logprob: -5.0450568199157715
    9. '               ' → logprob: -5.6700568199157715
    10. '(s' → logprob: -6.7950568199157715

Token 4026: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.05054882913827896
    2. '[' → logprob: -3.550548791885376
    3. ' =' → logprob: -4.050549030303955
    4. '>' → logprob: -6.925549030303955
    5. '```' → logprob: -6.925549030303955
    6. ')' → logprob: -7.800549030303955
    7. ':' → logprob: -8.425548553466797
    8. ',' → logprob: -8.925548553466797
    9. '=
' → logprob: -9.425548553466797
    10. '<|end|>' → logprob: -9.675548553466797

Token 4027: ' (' (ID: 350)
  Prédit: '(b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(b' → logprob: -0.005243479739874601
    2. ' (' → logprob: -5.255243301391602
    3. '(' → logprob: -12.255243301391602
    4. 'b' → logprob: -13.005243301391602
    5. '   ' → logprob: -13.630243301391602
    6. '(t' → logprob: -15.130243301391602
    7. '(B' → logprob: -15.630243301391602
    8. ' ' → logprob: -15.880243301391602
    9. '((' → logprob: -16.1302433013916
    10. '       ' → logprob: -16.2552433013916

Token 4028: 'A' (ID: 32)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.000169332604855299
    2. '-b' → logprob: -9.37516975402832
    3. ' b' → logprob: -10.00016975402832
    4. '(b' → logprob: -10.37516975402832
    5. '   ' → logprob: -12.75016975402832
    6. '[b' → logprob: -14.37516975402832
    7. '	b' → logprob: -14.62516975402832
    8. '-' → logprob: -14.62516975402832
    9. ' -' → logprob: -14.87516975402832
    10. '(-' → logprob: -15.00016975402832

Token 4029: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.00021331508469302207
    2. '0' → logprob: -8.500213623046875
    3. '1' → logprob: -11.750213623046875
    4. '   ' → logprob: -14.375213623046875
    5. ' [' → logprob: -14.875213623046875
    6. ' ' → logprob: -15.375213623046875
    7. '[
' → logprob: -15.375213623046875
    8. '[[' → logprob: -15.625213623046875
    9. '```' → logprob: -16.500213623046875
    10. '#' → logprob: -16.750213623046875

Token 4030: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.4906272888183594
    2. '1' → logprob: -0.9906272888183594
    3. '[' → logprob: -4.115627288818359
    4. '
' → logprob: -10.11562728881836
    5. '```' → logprob: -11.61562728881836
    6. '   ' → logprob: -11.74062728881836
    7. ' ' → logprob: -11.74062728881836
    8. '][' → logprob: -11.99062728881836
    9. ']' → logprob: -12.30312728881836
    10. '#' → logprob: -12.36562728881836

Token 4031: '][' (ID: 2696)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0028996167238801718
    2. '][' → logprob: -5.877899646759033
    3. '1' → logprob: -9.752899169921875
    4. ')[' → logprob: -11.502899169921875
    5. '
' → logprob: -12.377899169921875
    6. '```' → logprob: -12.502899169921875
    7. '   ' → logprob: -12.752899169921875
    8. ' [' → logprob: -12.877899169921875
    9. ']' → logprob: -12.877899169921875
    10. '[
' → logprob: -13.002899169921875

Token 4032: '0' (ID: 15)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0005779353086836636
    2. '0' → logprob: -7.500577926635742
    3. '[' → logprob: -11.250577926635742
    4. '
' → logprob: -11.625577926635742
    5. '```' → logprob: -13.125577926635742
    6. '``' → logprob: -15.125577926635742
    7. ']' → logprob: -15.875577926635742
    8. '][' → logprob: -16.000577926635742
    9. '   ' → logprob: -16.375577926635742
    10. '{
' → logprob: -16.813077926635742

Token 4033: ']*' (ID: 18579)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.3986426591873169
    2. '[' → logprob: -1.648642659187317
    3. ']*' → logprob: -2.7736425399780273
    4. '*[' → logprob: -2.7736425399780273
    5. '*(-' → logprob: -5.648642539978027
    6. ')*' → logprob: -6.148642539978027
    7. '*(' → logprob: -6.273642539978027
    8. ' *' → logprob: -6.523642539978027
    9. '*s' → logprob: -6.898642539978027
    10. '*-' → logprob: -7.523642539978027

Token 4034: 'b' (ID: 65)
  Prédit: 'b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -8.895480277715251e-06
    2. '(b' → logprob: -12.375008583068848
    3. '(' → logprob: -13.000008583068848
    4. ' b' → logprob: -13.625008583068848
    5. 's' → logprob: -14.750008583068848
    6. '1' → logprob: -14.875008583068848
    7. '[' → logprob: -15.000008583068848
    8. '#' → logprob: -16.875009536743164
    9. '(s' → logprob: -17.000009536743164
    10. ')b' → logprob: -17.000009536743164

Token 4035: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0003552463313098997
    2. '1' → logprob: -8.00035572052002
    3. '```' → logprob: -11.12535572052002
    4. '
' → logprob: -13.37535572052002
    5. '[
' → logprob: -14.00035572052002
    6. '#' → logprob: -14.62535572052002
    7. '``' → logprob: -14.87535572052002
    8. 's' → logprob: -15.25035572052002
    9. '   ' → logprob: -15.75035572052002
    10. '2' → logprob: -16.000354766845703

Token 4036: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.012580759823322296
    2. '[' → logprob: -4.387580871582031
    3. '0' → logprob: -9.637580871582031
    4. '
' → logprob: -12.637580871582031
    5. '   ' → logprob: -13.887580871582031
    6. '(' → logprob: -14.137580871582031
    7. '```' → logprob: -14.637580871582031
    8. '[
' → logprob: -15.887580871582031
    9. '#' → logprob: -16.26258087158203
    10. ' ' → logprob: -16.51258087158203

Token 4037: ']' (ID: 60)
  Prédit: ' -'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.047354646027088165
    2. '-A' → logprob: -3.7973546981811523
    3. '-' → logprob: -3.9223546981811523
    4. '[' → logprob: -5.547354698181152
    5. '-t' → logprob: -10.672354698181152
    6. '-B' → logprob: -10.797354698181152
    7. '-b' → logprob: -11.172354698181152
    8. '[-' → logprob: -11.547354698181152
    9. '-s' → logprob: -11.922354698181152
    10. '   ' → logprob: -12.047354698181152

Token 4038: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.18105804920196533
    2. '-' → logprob: -2.431057929992676
    3. '-A' → logprob: -2.681057929992676
    4. '[' → logprob: -4.806057929992676
    5. '*' → logprob: -7.431057929992676
    6. '*A' → logprob: -8.556057929992676
    7. '[-' → logprob: -9.306057929992676
    8. '       ' → logprob: -10.931057929992676
    9. '   ' → logprob: -11.056057929992676
    10. '[A' → logprob: -11.306057929992676

Token 4039: ' A' (ID: 355)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.04325345903635025
    2. 'A' → logprob: -3.1682534217834473
    3. ' b' → logprob: -8.418253898620605
    4. ' A' → logprob: -10.418253898620605
    5. '   ' → logprob: -13.793253898620605
    6. '       ' → logprob: -14.793253898620605
    7. '(A' → logprob: -14.793253898620605
    8. '(' → logprob: -15.043253898620605
    9. '           ' → logprob: -15.418253898620605
    10. '(b' → logprob: -15.668253898620605

Token 4040: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -4.961759259458631e-06
    2. '1' → logprob: -12.625004768371582
    3. '[
' → logprob: -14.125004768371582
    4. '```' → logprob: -15.125004768371582
    5. '
' → logprob: -15.500004768371582
    6. '#' → logprob: -16.0000057220459
    7. '0' → logprob: -16.8750057220459
    8. 'import' → logprob: -16.8750057220459
    9. '   ' → logprob: -17.1250057220459
    10. ' [' → logprob: -18.0000057220459

Token 4041: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0008575046667829156
    2. '0' → logprob: -7.125857353210449
    3. '[' → logprob: -9.87585735321045
    4. '
' → logprob: -13.50085735321045
    5. '   ' → logprob: -16.125858306884766
    6. '```' → logprob: -16.375858306884766
    7. ' ' → logprob: -18.000858306884766
    8. '``' → logprob: -18.125858306884766
    9. '  ' → logprob: -18.375858306884766
    10. '(' → logprob: -18.750858306884766

Token 4042: '][' (ID: 2696)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -2.6060808522743173e-05
    2. '][' → logprob: -10.875025749206543
    3. '0' → logprob: -12.750025749206543
    4. '   ' → logprob: -13.875025749206543
    5. '```' → logprob: -13.875025749206543
    6. '1' → logprob: -14.125025749206543
    7. '[
' → logprob: -15.000025749206543
    8. ' [' → logprob: -15.125025749206543
    9. '[[' → logprob: -15.625025749206543
    10. ')[' → logprob: -15.750025749206543

Token 4043: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -7.24310302757658e-05
    2. '1' → logprob: -9.625072479248047
    3. '[' → logprob: -12.500072479248047
    4. '   ' → logprob: -13.375072479248047
    5. '
' → logprob: -14.750072479248047
    6. ' ' → logprob: -14.875072479248047
    7. '```' → logprob: -15.875072479248047
    8. '  ' → logprob: -16.562572479248047
    9. '۰' → logprob: -17.750072479248047
    10. '    ' → logprob: -17.875072479248047

Token 4044: ']*' (ID: 18579)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.20573855936527252
    2. '*b' → logprob: -1.7057385444641113
    3. '*s' → logprob: -6.330738544464111
    4. '*' → logprob: -6.455738544464111
    5. '*[' → logprob: -7.205738544464111
    6. 'b' → logprob: -8.83073902130127
    7. ']*' → logprob: -9.95573902130127
    8. 's' → logprob: -11.58073902130127
    9. ' *' → logprob: -11.58073902130127
    10. '```' → logprob: -12.95573902130127

Token 4045: 'b' (ID: 65)
  Prédit: 'b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -2.935296834039036e-06
    2. ' b' → logprob: -13.00000286102295
    3. '[' → logprob: -14.75000286102295
    4. '```' → logprob: -17.000003814697266
    5. '
' → logprob: -17.125003814697266
    6. '   ' → logprob: -17.125003814697266
    7. '0' → logprob: -17.125003814697266
    8. '(b' → logprob: -18.250003814697266
    9. '	b' → logprob: -18.750003814697266
    10. '           ' → logprob: -19.000003814697266

Token 4046: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -1.0683535037969705e-05
    2. '1' → logprob: -11.62501049041748
    3. '[
' → logprob: -14.00001049041748
    4. '```' → logprob: -15.00001049041748
    5. '0' → logprob: -15.25001049041748
    6. '#' → logprob: -16.250011444091797
    7. '   ' → logprob: -16.500011444091797
    8. '
' → logprob: -16.875011444091797
    9. '           ' → logprob: -18.000011444091797
    10. '(' → logprob: -18.375011444091797

Token 4047: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0002582402084954083
    2. '1' → logprob: -8.375258445739746
    3. '[' → logprob: -10.625258445739746
    4. '   ' → logprob: -13.375258445739746
    5. '
' → logprob: -13.625258445739746
    6. ' ' → logprob: -15.000258445739746
    7. '```' → logprob: -16.62525749206543
    8. 'b' → logprob: -16.87525749206543
    9. '  ' → logprob: -17.12525749206543
    10. '    ' → logprob: -17.50025749206543

Token 4048: '])/' (ID: 93047)
  Prédit: ')/'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')/' → logprob: -0.031560372561216354
    2. ')' → logprob: -3.5315604209899902
    3. '[' → logprob: -6.90656042098999
    4. ')/(' → logprob: -7.15656042098999
    5. ' )' → logprob: -11.531559944152832
    6. '   ' → logprob: -11.906559944152832
    7. ']/' → logprob: -12.531559944152832
    8. '       ' → logprob: -13.281559944152832
    9. '/d' → logprob: -13.906559944152832
    10. '])/' → logprob: -14.281559944152832

Token 4049: 'det' (ID: 10136)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.474101185798645
    2. 'det' → logprob: -0.974101185798645
    3. ' A' → logprob: -11.099101066589355
    4. ' det' → logprob: -12.599101066589355
    5. '   ' → logprob: -13.474101066589355
    6. '           ' → logprob: -13.849101066589355
    7. '(det' → logprob: -14.349101066589355
    8. '_det' → logprob: -15.099101066589355
    9. '       ' → logprob: -15.224101066589355
    10. '      ' → logprob: -15.349101066589355

Token 4050: '
' (ID: 198)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5624882578849792
    2. '/' → logprob: -1.687488317489624
    3. '           ' → logprob: -2.562488317489624
    4. '
' → logprob: -3.062488317489624
    5. ')
' → logprob: -3.062488317489624
    6. ' /' → logprob: -3.562488317489624
    7. ' if' → logprob: -4.312488079071045
    8. ',' → logprob: -5.062488079071045
    9. '<|end|>' → logprob: -5.187488079071045
    10. '/
' → logprob: -5.437488079071045

Token 4051: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00012023169983876869
    2. ':
' → logprob: -10.250120162963867
    3. '
' → logprob: -11.125120162963867
    4. '```' → logprob: -11.250120162963867
    5. ' if' → logprob: -11.500120162963867
    6. '       ' → logprob: -11.625120162963867
    7. '                           ' → logprob: -12.000120162963867
    8. '               ' → logprob: -12.000120162963867
    9. '          ' → logprob: -12.375120162963867
    10. ':' → logprob: -12.750120162963867

Token 4052: ' if' (ID: 538)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.005106745287775993
    2. ' if' → logprob: -5.6301069259643555
    3. '       ' → logprob: -7.7551069259643555
    4. '               ' → logprob: -7.8801069259643555
    5. '```' → logprob: -8.630106925964355
    6. '
' → logprob: -8.880106925964355
    7. 'if' (adapté à ' if') → logprob: -9.505106925964355
    8. '            ' → logprob: -10.130106925964355
    9. '          ' → logprob: -10.130106925964355
    10. ' None' → logprob: -10.380106925964355

Token 4053: ' t' (ID: 260)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.01065914798527956
    2. ' t' → logprob: -4.635659217834473
    3. '0' → logprob: -7.135659217834473
    4. 's' → logprob: -9.635659217834473
    5. '(t' → logprob: -10.385659217834473
    6. '   ' → logprob: -12.760659217834473
    7. ' ' → logprob: -13.010659217834473
    8. ' s' → logprob: -13.385659217834473
    9. '(' → logprob: -13.885659217834473
    10. '(s' → logprob: -14.010659217834473

Token 4054: ' <' (ID: 464)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.4857148230075836
    2. ' >' → logprob: -0.9857147932052612
    3. ' >=' → logprob: -4.985714912414551
    4. '>=' → logprob: -5.360714912414551
    5. '[' → logprob: -11.73571491241455
    6. '   ' → logprob: -12.11071491241455
    7. ' ' → logprob: -12.23571491241455
    8. '>
' → logprob: -12.36071491241455
    9. ' <' → logprob: -12.36071491241455
    10. '<' → logprob: -13.11071491241455

Token 4055: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.2521152198314667
    2. '1' → logprob: -1.502115249633789
    3. ' ' → logprob: -8.627115249633789
    4. '-' → logprob: -12.002115249633789
    5. '   ' → logprob: -14.627115249633789
    6. ' -' → logprob: -15.752115249633789
    7. '+' → logprob: -16.50211524963379
    8. '=' → logprob: -16.62711524963379
    9. '```' → logprob: -17.25211524963379
    10. '(' → logprob: -18.62711524963379

Token 4056: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.6932477355003357
    2. '1' → logprob: -0.6932477355003357
    3. '-' → logprob: -9.31824779510498
    4. ' ' → logprob: -11.69324779510498
    5. '   ' → logprob: -13.56824779510498
    6. '+' → logprob: -14.56824779510498
    7. '
' → logprob: -15.44324779510498
    8. '```' → logprob: -16.443246841430664
    9. '=' → logprob: -16.693246841430664
    10. '       ' → logprob: -16.943246841430664

Token 4057: ' or' (ID: 503)
  Prédit: ' or'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' or' → logprob: -0.5708483457565308
    2. '               ' → logprob: -1.4458483457565308
    3. '           ' → logprob: -1.8208483457565308
    4. ':
' → logprob: -3.5708484649658203
    5. ':' → logprob: -4.94584846496582
    6. '       ' → logprob: -7.19584846496582
    7. ' and' → logprob: -7.69584846496582
    8. 'or' → logprob: -8.19584846496582
    9. ',' → logprob: -9.07084846496582
    10. ':return' → logprob: -9.07084846496582

Token 4058: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.04320676997303963
    2. ' s' → logprob: -3.1682066917419434
    3. '   ' → logprob: -9.418207168579102
    4. 'abs' → logprob: -9.793207168579102
    5. 't' → logprob: -10.168207168579102
    6. '  ' → logprob: -11.918207168579102
    7. ' ' → logprob: -12.293207168579102
    8. '1' → logprob: -12.418207168579102
    9. ' t' → logprob: -12.418207168579102
    10. '    ' → logprob: -12.793207168579102

Token 4059: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.31769460439682007
    2. '<' → logprob: -1.5676946640014648
    3. ' >' → logprob: -3.067694664001465
    4. '>' → logprob: -4.067694664001465
    5. ' ' → logprob: -13.567694664001465
    6. '[' → logprob: -14.067694664001465
    7. '```' → logprob: -14.192694664001465
    8. '   ' → logprob: -14.442694664001465
    9. ')' → logprob: -15.442694664001465
    10. '><' → logprob: -16.06769371032715

Token 4060: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0017206385964527726
    2. '-' → logprob: -6.501720428466797
    3. ' ' → logprob: -8.501720428466797
    4. ' -' → logprob: -11.376720428466797
    5. '1' → logprob: -13.126720428466797
    6. '   ' → logprob: -13.751720428466797
    7. '=' → logprob: -15.876720428466797
    8. '  ' → logprob: -15.876720428466797
    9. '    ' → logprob: -16.251720428466797
    10. '     ' → logprob: -16.501720428466797

Token 4061: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0701361671090126
    2. '-' → logprob: -2.695136070251465
    3. ' -' → logprob: -9.195136070251465
    4. ' ' → logprob: -9.320136070251465
    5. '1' → logprob: -12.570136070251465
    6. '   ' → logprob: -13.445136070251465
    7. '```' → logprob: -14.070136070251465
    8. '=' → logprob: -14.820136070251465
    9. '(' → logprob: -15.195136070251465
    10. '[' → logprob: -15.382636070251465

Token 4062: ' or' (ID: 503)
  Prédit: ' or'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' or' → logprob: -0.07896238565444946
    2. 'or' → logprob: -2.5789623260498047
    3. '           ' → logprob: -10.703962326049805
    4. '               ' → logprob: -10.703962326049805
    5. '```' → logprob: -11.203962326049805
    6. '                   ' → logprob: -12.828962326049805
    7. '                ' → logprob: -13.203962326049805
    8. '            ' → logprob: -13.453962326049805
    9. ' ' → logprob: -13.828962326049805
    10. '   ' → logprob: -13.953962326049805

Token 4063: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.2256709188222885
    2. ' s' → logprob: -1.6006709337234497
    3. '1' → logprob: -8.72567081451416
    4. '>' → logprob: -9.97567081451416
    5. '   ' → logprob: -10.60067081451416
    6. ' ' → logprob: -11.22567081451416
    7. '    ' → logprob: -12.72567081451416
    8. '  ' → logprob: -13.35067081451416
    9. ' >' → logprob: -13.47567081451416
    10. '>s' → logprob: -13.47567081451416

Token 4064: ' >' (ID: 1424)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.07889870554208755
    2. ' >' → logprob: -2.5788986682891846
    3. '1' → logprob: -13.203898429870605
    4. '0' → logprob: -13.453898429870605
    5. '<=' → logprob: -13.453898429870605
    6. '```' → logprob: -13.453898429870605
    7. '[' → logprob: -13.828898429870605
    8. ')' → logprob: -14.828898429870605
    9. ' <=' → logprob: -14.953898429870605
    10. ' ' → logprob: -15.078898429870605

Token 4065: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.130576806142926e-05
    2. ' ' → logprob: -10.375031471252441
    3. '   ' → logprob: -19.000030517578125
    4. '  ' → logprob: -22.125030517578125
    5. '```' → logprob: -22.750030517578125
    6. '0' → logprob: -23.125030517578125
    7. '>' → logprob: -23.250030517578125
    8. '=' → logprob: -23.500030517578125
    9. '3' → logprob: -23.625030517578125
    10. '2' → logprob: -23.625030517578125

Token 4066: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.7697225252486533e-06
    2. ' ' → logprob: -12.500003814697266
    3. '   ' → logprob: -19.500003814697266
    4. '```' → logprob: -21.625003814697266
    5. '  ' → logprob: -21.750003814697266
    6. '0' → logprob: -22.750003814697266
    7. '=' → logprob: -23.125003814697266
    8. '۱' → logprob: -23.250003814697266
    9. '2' → logprob: -23.625003814697266
    10. '<|end|>' → logprob: -23.875003814697266

Token 4067: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.02541823871433735
    2. ':' → logprob: -3.775418281555176
    3. '           ' → logprob: -7.025418281555176
    4. '               ' → logprob: -7.025418281555176
    5. ':return' → logprob: -8.150418281555176
    6. '):
' → logprob: -9.775418281555176
    7. '       ' → logprob: -10.525418281555176
    8. '   ' → logprob: -11.900418281555176
    9. 'return' → logprob: -13.275418281555176
    10. '                   ' → logprob: -13.400418281555176

Token 4068: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.001660781679674983
    2. '           ' → logprob: -7.1266608238220215
    3. ':
' → logprob: -7.2516608238220215
    4. ':' → logprob: -9.376660346984863
    5. '       ' → logprob: -10.751660346984863
    6. ' return' → logprob: -11.626660346984863
    7. '                       ' → logprob: -11.876660346984863
    8. ':return' → logprob: -12.001660346984863
    9. '):
' → logprob: -12.376660346984863
    10. '                   ' → logprob: -12.501660346984863

Token 4069: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.33488625288009644
    2. 'None' → logprob: -1.3348863124847412
    3. ' return' → logprob: -4.584886074066162
    4. ' None' → logprob: -4.584886074066162
    5. '               ' → logprob: -7.209886074066162
    6. '   ' → logprob: -9.08488655090332
    7. '           ' → logprob: -9.08488655090332
    8. '```' → logprob: -11.95988655090332
    9. '                   ' → logprob: -12.83488655090332
    10. '(None' → logprob: -13.20988655090332

Token 4070: ' None' (ID: 4662)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -0.00020354038861114532
    2. ' None' → logprob: -8.500203132629395
    3. '(None' → logprob: -18.00020408630371
    4. '_None' → logprob: -18.75020408630371
    5. ',None' → logprob: -19.37520408630371
    6. 'False' → logprob: -19.62520408630371
    7. '
' → logprob: -20.12520408630371
    8. 'none' → logprob: -21.00020408630371
    9. '```' → logprob: -21.25020408630371
    10. '=None' → logprob: -21.37520408630371

Token 4071: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.002189279766753316
    2. '       ' → logprob: -6.3771891593933105
    3. ':
' → logprob: -8.252189636230469
    4. '               ' → logprob: -9.377189636230469
    5. '```' → logprob: -9.877189636230469
    6. '   ' → logprob: -10.502189636230469
    7. ':' → logprob: -11.127189636230469
    8. 'return' → logprob: -11.627189636230469
    9. '
' → logprob: -11.627189636230469
    10. '		' → logprob: -12.252189636230469

Token 4072: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.005363010335713625
    2. '       ' → logprob: -5.5053629875183105
    3. '```' → logprob: -7.1303629875183105
    4. '               ' → logprob: -8.880363464355469
    5. '   ' → logprob: -8.880363464355469
    6. ':
' → logprob: -9.380363464355469
    7. '
' → logprob: -10.130363464355469
    8. '		' → logprob: -10.505363464355469
    9. '                       ' → logprob: -11.880363464355469
    10. '                           ' → logprob: -11.880363464355469

Token 4073: ' return' (ID: 622)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0003540542966220528
    2. 'return' (adapté à ' return') → logprob: -8.375353813171387
    3. '       ' → logprob: -9.625353813171387
    4. ' return' → logprob: -9.875353813171387
    5. '```' → logprob: -12.750353813171387
    6. '               ' → logprob: -13.875353813171387
    7. '   ' → logprob: -14.125353813171387
    8. '
' → logprob: -14.750353813171387
    9. '          ' → logprob: -15.000353813171387
    10. '		' → logprob: -15.625353813171387

Token 4074: ' (' (ID: 350)
  Prédit: '(t'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(t' → logprob: -0.00016802136087790132
    2. 't' → logprob: -9.125167846679688
    3. ' (' → logprob: -9.750167846679688
    4. '(' → logprob: -14.500167846679688
    5. ' t' → logprob: -15.375167846679688
    6. '   ' → logprob: -16.875167846679688
    7. '(
' → logprob: -18.375167846679688
    8. '	t' → logprob: -19.125167846679688
    9. '  ' → logprob: -20.500167846679688
    10. ' ' → logprob: -21.125167846679688

Token 4075: 't' (ID: 83)
  Prédit: 't'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -3.8889261304575484e-06
    2. ' t' → logprob: -12.500003814697266
    3. '`t' → logprob: -18.000003814697266
    4. ')t' → logprob: -18.125003814697266
    5. '   ' → logprob: -18.625003814697266
    6. '(t' → logprob: -18.750003814697266
    7. '           ' → logprob: -19.125003814697266
    8. '	t' → logprob: -19.125003814697266
    9. '       ' → logprob: -21.250003814697266
    10. ')' → logprob: -22.000003814697266

Token 4076: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.003225010121241212
    2. ',s' → logprob: -5.753224849700928
    3. ',None' → logprob: -10.503225326538086
    4. ',)' → logprob: -11.878225326538086
    5. ',
' → logprob: -12.003225326538086
    6. ',n' → logprob: -13.128225326538086
    7. ')' → logprob: -13.253225326538086
    8. ' ,' → logprob: -14.378225326538086
    9. ',(' → logprob: -15.878225326538086
    10. ',user' → logprob: -15.878225326538086

Token 4077: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -9.615255839889869e-05
    2. ' s' → logprob: -9.250096321105957
    3. ')' → logprob: -19.62509536743164
    4. '       ' → logprob: -19.75009536743164
    5. '   ' → logprob: -20.00009536743164
    6. '           ' → logprob: -21.00009536743164
    7. '{s' → logprob: -21.62509536743164
    8. ')
' → logprob: -22.00009536743164
    9. '
' → logprob: -22.12509536743164
    10. ' ' → logprob: -22.25009536743164

Token 4078: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -4.251091377227567e-05
    2. '           ' → logprob: -10.500042915344238
    3. '       ' → logprob: -11.625042915344238
    4. ')
' → logprob: -12.125042915344238
    5. ')return' → logprob: -15.750042915344238
    6. '   ' → logprob: -16.250041961669922
    7. ' )' → logprob: -16.500041961669922
    8. '<|end|>' → logprob: -17.125041961669922
    9. '),' → logprob: -17.625041961669922
    10. '               ' → logprob: -17.750041961669922

Token 4079: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0006358316168189049
    2. '```' → logprob: -7.375635623931885
    3. '           ' → logprob: -12.000636100769043
    4. '
' → logprob: -13.375636100769043
    5. '``' → logprob: -14.625636100769043
    6. '   ' → logprob: -14.750636100769043
    7. '        
' → logprob: -14.875636100769043
    8. '`' → logprob: -16.375635147094727
    9. '​' → logprob: -17.125635147094727
    10. '#' → logprob: -17.125635147094727

Token 4080: ' while' (ID: 2049)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1331133097410202
    2. 'while' (adapté à ' while') → logprob: -2.133113384246826
    3. '```' → logprob: -5.258113384246826
    4. ' while' → logprob: -7.133113384246826
    5. '``' → logprob: -10.008112907409668
    6. 'While' → logprob: -10.383112907409668
    7. 'step' → logprob: -11.258112907409668
    8. '   ' → logprob: -11.383112907409668
    9. '#' → logprob: -11.508112907409668
    10. '
' → logprob: -11.633112907409668

Token 4081: ' traveled' (ID: 52741)
  Prédit: 'tr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tr' → logprob: -0.2834777534008026
    2. ' traveled' → logprob: -1.658477783203125
    3. ' total' → logprob: -3.533477783203125
    4. 'total' → logprob: -4.158477783203125
    5. '   ' → logprob: -5.408477783203125
    6. 'travel' → logprob: -6.033477783203125
    7. '       ' → logprob: -6.283477783203125
    8. ' True' → logprob: -7.033477783203125
    9. ' travelled' → logprob: -7.658477783203125
    10. 'True' → logprob: -7.908477783203125

Token 4082: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.04351599141955376
    2. '<' → logprob: -3.168515920639038
    3. '+' → logprob: -8.543516159057617
    4. ' +' → logprob: -8.668516159057617
    5. ' <=' → logprob: -9.043516159057617
    6. ' ' → logprob: -11.918516159057617
    7. '<=' → logprob: -12.168516159057617
    8. '   ' → logprob: -12.543516159057617
    9. ' ' → logprob: -12.668516159057617
    10. '```' → logprob: -13.043516159057617

Token 4083: ' total' (ID: 3609)
  Prédit: 'total'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'total' → logprob: -0.07580482214689255
    2. ' total' → logprob: -2.8258047103881836
    3. 'self' → logprob: -4.325804710388184
    4. '1' → logprob: -8.325804710388184
    5. ' self' → logprob: -8.325804710388184
    6. '(total' → logprob: -11.450804710388184
    7. '           ' → logprob: -11.950804710388184
    8. ' ' → logprob: -11.950804710388184
    9. '   ' → logprob: -12.825804710388184
    10. '       ' → logprob: -12.825804710388184

Token 4084: '_len' (ID: 13683)
  Prédit: '_len'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_len' → logprob: -0.0004996551433578134
    2. '.' → logprob: -8.375499725341797
    3. '._' → logprob: -8.375499725341797
    4. '_length' → logprob: -10.750499725341797
    5. '.
' → logprob: -12.125499725341797
    6. '_.' → logprob: -12.250499725341797
    7. '_' → logprob: -13.250499725341797
    8. '_LEN' → logprob: -14.125499725341797
    9. '.__' → logprob: -14.375499725341797
    10. ':
' → logprob: -14.750499725341797

Token 4085: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.6347718238830566
    2. '           ' → logprob: -1.0097718238830566
    3. ':' → logprob: -2.2597718238830566
    4. ' and' → logprob: -7.509771823883057
    5. '[' → logprob: -8.384771347045898
    6. '```' → logprob: -9.259771347045898
    7. '=' → logprob: -9.509771347045898
    8. ',' → logprob: -9.509771347045898
    9. '):
' → logprob: -9.759771347045898
    10. ' :
' → logprob: -10.384771347045898

Token 4086: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.000769009639043361
    2. '```' → logprob: -7.375769138336182
    3. '
' → logprob: -9.750768661499023
    4. '``' → logprob: -10.375768661499023
    5. '               ' → logprob: -11.125768661499023
    6. '            
' → logprob: -11.625768661499023
    7. '       ' → logprob: -12.000768661499023
    8. '`' → logprob: -12.000768661499023
    9. '   ' → logprob: -12.875768661499023
    10. '#' → logprob: -13.250768661499023

Token 4087: ' #' (ID: 1069)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.033001288771629333
    2. 'dir' → logprob: -3.658001184463501
    3. ' dir' → logprob: -5.78300142288208
    4. '       ' → logprob: -6.28300142288208
    5. '#' (adapté à ' #') → logprob: -7.40800142288208
    6. 'pos' → logprob: -7.65800142288208
    7. '2' → logprob: -8.658000946044922
    8. '   ' → logprob: -8.908000946044922
    9. ' #' → logprob: -9.283000946044922
    10. '
' → logprob: -9.908000946044922

Token 4088: ' Project' (ID: 8761)
  Prédit: 'dir'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dir' → logprob: -0.13578538596630096
    2. '           ' → logprob: -2.7607853412628174
    3. 'pos' → logprob: -2.8857853412628174
    4. '#' → logprob: -5.1357855796813965
    5. '2' → logprob: -7.3857855796813965
    6. 't' → logprob: -7.5107855796813965
    7. 'face' → logprob: -8.135785102844238
    8. '       ' → logprob: -8.385785102844238
    9. 'two' → logprob: -9.385785102844238
    10. 'current' → logprob: -10.385785102844238

Token 4089: ' current' (ID: 2208)
  Prédit: 'dir'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dir' → logprob: -0.0015784210991114378
    2. ' dir' → logprob: -6.751578330993652
    3. '           ' → logprob: -8.376578330993652
    4. 'direction' → logprob: -9.376578330993652
    5. '_dir' → logprob: -9.626578330993652
    6. '(dir' → logprob: -11.626578330993652
    7. 'pos' → logprob: -11.751578330993652
    8. '               ' → logprob: -13.126578330993652
    9. 'current' → logprob: -13.626578330993652
    10. '#' → logprob: -13.876578330993652

Token 4090: ' ' (ID: 220)
  Prédit: 'position'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'position' → logprob: -0.7806156277656555
    2. 'direction' → logprob: -1.1556155681610107
    3. 'pos' → logprob: -2.1556155681610107
    4. 'dir' → logprob: -2.5306155681610107
    5. '3' → logprob: -4.65561580657959
    6. '_direction' → logprob: -4.78061580657959
    7. '_dir' → logprob: -5.53061580657959
    8. '_position' → logprob: -5.65561580657959
    9. '2' → logprob: -6.40561580657959
    10. ' position' → logprob: -6.90561580657959

Token 4091: '3' (ID: 18)
  Prédit: 'position'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'position' → logprob: -0.7704412341117859
    2. 'dir' → logprob: -1.2704412937164307
    3. 'pos' → logprob: -1.8954412937164307
    4. 'direction' → logprob: -2.2704412937164307
    5. 'face' → logprob: -7.020441055297852
    6. '3' → logprob: -7.395441055297852
    7. '_dir' → logprob: -7.520441055297852
    8. '_direction' → logprob: -7.895441055297852
    9. '_position' → logprob: -8.645441055297852
    10. '2' → logprob: -9.020441055297852

Token 4092: 'D' (ID: 35)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -2.4391956685576588e-05
    2. 'dir' → logprob: -10.750024795532227
    3. 'direction' → logprob: -12.875024795532227
    4. '_d' → logprob: -16.375024795532227
    5. 'D' → logprob: -16.625024795532227
    6. 'dim' → logprob: -17.875024795532227
    7. ' d' → logprob: -17.875024795532227
    8. '
' → logprob: -18.125024795532227
    9. '_dir' → logprob: -18.125024795532227
    10. 'dd' → logprob: -18.250024795532227

Token 4093: ' direction' (ID: 9262)
  Prédit: 'direction'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'direction' → logprob: -0.20532409846782684
    2. 'dir' → logprob: -1.7053240537643433
    3. '_direction' → logprob: -5.955324172973633
    4. '_dir' → logprob: -7.205324172973633
    5. 'position' → logprob: -8.205324172973633
    6. ' direction' → logprob: -8.955324172973633
    7. 'vector' → logprob: -9.205324172973633
    8. 'pos' → logprob: -10.330324172973633
    9. ' dir' → logprob: -11.955324172973633
    10. '   ' → logprob: -12.080324172973633

Token 4094: ' into' (ID: 1511)
  Prédit: ' onto'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' onto' → logprob: -0.4069558084011078
    2. 'onto' → logprob: -1.6569558382034302
    3. 'dir' → logprob: -2.9069557189941406
    4. 'vector' → logprob: -3.7819557189941406
    5. ' vector' → logprob: -3.9069557189941406
    6. ' dir' → logprob: -4.531955718994141
    7. 'to' → logprob: -4.781955718994141
    8. ' to' → logprob: -4.906955718994141
    9. ' on' → logprob: -5.656955718994141
    10. 'on' → logprob: -5.781955718994141

Token 4095: ' face' (ID: 4950)
  Prédit: 'face'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'face' → logprob: -0.0014202340971678495
    2. 'current' → logprob: -7.251420021057129
    3. ' face' → logprob: -7.376420021057129
    4. '2' → logprob: -10.126420021057129
    5. 'the' → logprob: -10.876420021057129
    6. '           ' → logprob: -12.126420021057129
    7. '(face' → logprob: -12.251420021057129
    8. 'plane' → logprob: -12.626420021057129
    9. ' current' → logprob: -13.126420021057129
    10. '   ' → logprob: -13.501420021057129


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 4093
Tokens correctement prédits (1ère position, stricte): 1543
Tokens correctement prédits (1ère position, avec adaptation): 1648
Tokens correctement prédits (top 10): 3146
Précision stricte (1ère position): 37.70%
Précision adaptée (1ère position): 40.26%
Précision (top 10): 76.86%
================================================================================
