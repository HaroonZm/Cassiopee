================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:08:15
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
from typing import List, Tuple, Dict, Set, Optional
from copy import deepcopy
from abc import ABC, abstractmethod

class BlockType:
    def __init__(self, id_: int, score: int):
        self.id = id_
        self.score = score

class BoardChangeListener(ABC):
    @abstractmethod
    def on_blocks_erased(self, positions: Set[Tuple[int,int]]):
        pass
    @abstractmethod
    def on_blocks_fallen(self):
        pass

class Board:
    WIDTH = 5
    HEIGHT = 5

    def __init__(self, grid: List[List[int]], block_scores: Dict[int,int]):
        self.grid = deepcopy(grid)
        self.block_scores = block_scores
        self.bonus = 1
        self.total_score = 0
        self.listener: Optional[BoardChangeListener] = None

    def set_listener(self, listener: BoardChangeListener):
        self.listener = listener

    def clone(self) -> 'Board':
        return Board(self.grid, self.block_scores)

    def get_block(self, r: int, c: int) -> int:
        return self.grid[r][c]

    def set_block(self, r: int, c: int, block: int):
        self.grid[r][c] = block

    # Swap two adjacent blocks (r1,c1) and (r2,c2)
    def swap(self, r1: int, c1: int, r2: int, c2: int):
        self.grid[r1][c1], self.grid[r2][c2] = self.grid[r2][c2], self.grid[r1][c1]

    def find_matches(self) -> Set[Tuple[int,int]]:
        # Return positions to erase: horizontal or vertical 3 or more same blocks lined
        to_erase = set()
        # Horizontal check
        for r in range(self.HEIGHT):
            count = 1
            for c in range(1, self.WIDTH):
                if self.grid[r][c] == self.grid[r][c-1] and self.grid[r][c] != 0:
                    count += 1
                else:
                    if count >= 3:
                        for cc in range(c - count, c):
                            to_erase.add((r, cc))
                    count = 1
            if count >= 3:
                for cc in range(self.WIDTH - count, self.WIDTH):
                    to_erase.add((r, cc))

        # Vertical check
        for c in range(self.WIDTH):
            count = 1
            for r in range(1, self.HEIGHT):
                if self.grid[r][c] == self.grid[r-1][c] and self.grid[r][c] != 0:
                    count += 1
                else:
                    if count >= 3:
                        for rr in range(r - count, r):
                            to_erase.add((rr, c))
                    count = 1
            if count >= 3:
                for rr in range(self.HEIGHT - count, self.HEIGHT):
                    to_erase.add((rr, c))
        return to_erase

    def erase_blocks(self, positions: Set[Tuple[int,int]]):
        # Add score and erase blocks
        gained = 0
        for r,c in positions:
            block_type = self.grid[r][c]
            if block_type != 0:
                gained += self.block_scores[block_type] * self.bonus
                self.grid[r][c] = 0
        self.total_score += gained
        if self.listener:
            self.listener.on_blocks_erased(positions)

    def apply_gravity(self):
        # Make blocks fall down to lowest empty cell
        for c in range(self.WIDTH):
            stack = []
            for r in range(self.HEIGHT):
                if self.grid[r][c] != 0:
                    stack.append(self.grid[r][c])
            # Fill from bottom
            for r in range(self.HEIGHT-1, -1, -1):
                if stack:
                    self.grid[r][c] = stack.pop()
                else:
                    self.grid[r][c] = 0
        if self.listener:
            self.listener.on_blocks_fallen()

    def do_full_elimination_cycle(self):
        # Perform elimination, gravity, bonus increments until no more matches
        while True:
            matches = self.find_matches()
            if not matches:
                break
            self.erase_blocks(matches)
            self.apply_gravity()
            self.bonus += 1

    def try_move_path(self, path: List[Tuple[int,int]]) -> int:
        # path: list of positions that the selected block occupies step by step
        # For each adjacent swap in path perform swap then do elimination
        b = self.clone()
        score_before = b.total_score
        # The selected block moves along the path exchanging blocks step by step
        for i in range(len(path)-1):
            r1,c1 = path[i]
            r2,c2 = path[i+1]
            b.swap(r1,c1,r2,c2)
        # After final move, do all elimination cycles
        b.do_full_elimination_cycle()
        gained = b.total_score - score_before
        return gained

class GameMovePlanner:
    def __init__(self, board: Board, max_moves: int):
        self.board = board
        self.n = max_moves
        self.best_score = 0

    def find_all_positions(self) -> List[Tuple[int,int]]:
        return [(r,c) for r in range(self.board.HEIGHT) for c in range(self.board.WIDTH)]

    def is_adjacent(self, p1: Tuple[int,int], p2: Tuple[int,int]) -> bool:
        r1,c1 = p1
        r2,c2 = p2
        return (abs(r1-r2) == 1 and c1 == c2) or (abs(c1-c2) == 1 and r1 == r2)

    def generate_all_paths(self, start: Tuple[int,int], max_len: int) -> List[List[Tuple[int,int]]]:
        # BFS/DFS for paths of length up to max_len + 1 (positions count)
        # The path represents block's successive positions after swaps.
        # Positions can be revisited - cycles allowed.
        paths = []

        def dfs(current_path):
            if len(current_path)-1 > max_len:
                return
            paths.append(current_path[:])
            last_pos = current_path[-1]
            for delta_r, delta_c in [(1,0),(-1,0),(0,1),(0,-1)]:
                nr, nc = last_pos[0]+delta_r, last_pos[1]+delta_c
                if 0 <= nr < self.board.HEIGHT and 0 <= nc < self.board.WIDTH:
                    dfs(current_path + [(nr,nc)])

        dfs([start])
        return paths

    def solve(self) -> int:
        initial_score = self.compute_score_of_no_move()
        self.best_score = initial_score
        for start_pos in self.find_all_positions():
            all_paths = self.generate_all_paths(start_pos, self.n)
            for path in all_paths:
                if len(path) < 2:
                    # no move or zero move
                    # consider doing no move if n=0 or allowed
                    if self.n == 0:
                        # zero moves, direct elimination
                        b = self.board.clone()
                        b.do_full_elimination_cycle()
                        if b.total_score > self.best_score:
                            self.best_score = b.total_score
                    continue
                # try moving along path
                gained = self.board.try_move_path(path)
                if gained > self.best_score:
                    self.best_score = gained
        return self.best_score

    def compute_score_of_no_move(self) -> int:
        b = self.board.clone()
        b.do_full_elimination_cycle()
        return b.total_score


def parse_input() -> List[Tuple[int, List[List[int]], List[int]]]:
    datasets = []
    while True:
        n_line = input().strip()
        if n_line == '':
            continue
        n = int(n_line)
        if n == -1:
            break
        grid = []
        for _ in range(5):
            row = list(map(int, input().split()))
            grid.append(row)
        scores = list(map(int, input().split()))
        datasets.append((n, grid, scores))
    return datasets

def main():
    datasets = parse_input()
    for n, grid, scores in datasets:
        block_scores = {i+1:scores[i] for i in range(5)}
        board = Board(grid, block_scores)
        planner = GameMovePlanner(board, n)
        print(planner.solve())

if __name__ == '__main__':
    main()
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'from' (ID: 2845)
  → Token d'amorce (pas de prédiction)

Token 1: ' typing' (ID: 34152)
  → Token d'amorce (pas de prédiction)

Token 2: ' import' (ID: 1588)
  → Token d'amorce (pas de prédiction)

Token 3: ' List' (ID: 2655)
  Prédit: ' List'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' List' → logprob: -0.01404950674623251
    2. ' Any' → logprob: -5.014049530029297
    3. 'List' → logprob: -5.389049530029297
    4. ' Optional' → logprob: -6.514049530029297
    5. ' Union' → logprob: -7.514049530029297
    6. 'Any' → logprob: -7.764049530029297
    7. ' Generator' → logprob: -8.764049530029297
    8. 'Optional' → logprob: -10.389049530029297
    9. ' Iterable' → logprob: -10.514049530029297
    10. ' ' → logprob: -10.764049530029297

Token 4: ',' (ID: 11)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '```' → logprob: -0.4787392020225525
    2. 'def' → logprob: -1.4787392616271973
    3. '<|end|>' → logprob: -3.3537392616271973
    4. '
' → logprob: -3.6037392616271973
    5. '\n' → logprob: -4.228739261627197
    6. '\' → logprob: -4.228739261627197
    7. '[' → logprob: -4.353739261627197
    8. ',' → logprob: -4.478739261627197
    9. 'import' → logprob: -4.853739261627197
    10. 'a' → logprob: -5.478739261627197

Token 5: ' Tuple' (ID: 50841)
  Prédit: 'Optional'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Optional' → logprob: -0.48646411299705505
    2. ' Optional' → logprob: -0.9864641427993774
    3. 'Dict' → logprob: -5.361464023590088
    4. 'Tuple' → logprob: -5.486464023590088
    5. ' Dict' → logprob: -6.486464023590088
    6. ' Union' → logprob: -7.361464023590088
    7. 'Union' → logprob: -7.736464023590088
    8. ' Tuple' → logprob: -7.861464023590088
    9. 'Any' → logprob: -8.611464500427246
    10. 'Iterable' → logprob: -9.111464500427246

Token 6: ',' (ID: 11)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.7053177952766418
    2. '```' → logprob: -1.955317735671997
    3. '\n' → logprob: -2.455317735671997
    4. ',' → logprob: -2.455317735671997
    5. '\' → logprob: -2.955317735671997
    6. 'import' → logprob: -3.330317735671997
    7. '[' → logprob: -3.455317735671997
    8. ':' → logprob: -4.205317974090576
    9. '(' → logprob: -4.330317974090576
    10. 'a' → logprob: -4.455317974090576

Token 7: ' Dict' (ID: 55179)
  Prédit: ' Dict'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Dict' → logprob: -0.17233937978744507
    2. 'Dict' → logprob: -2.29733943939209
    3. ' Optional' → logprob: -3.79733943939209
    4. ' Union' → logprob: -3.92233943939209
    5. 'Optional' → logprob: -4.92233943939209
    6. ' Callable' → logprob: -6.17233943939209
    7. 'Union' → logprob: -6.29733943939209
    8. 'Iterable' → logprob: -7.04733943939209
    9. ' dict' → logprob: -7.29733943939209
    10. 'Set' → logprob: -7.54733943939209

Token 8: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.7622167468070984
    2. '```' → logprob: -1.3872168064117432
    3. 'def' → logprob: -2.262216806411743
    4. 'import' → logprob: -3.137216806411743
    5. '<|end|>' → logprob: -3.387216806411743
    6. ':' → logprob: -3.512216806411743
    7. '(' → logprob: -4.387216567993164
    8. '\n' → logprob: -4.512216567993164
    9. '[' → logprob: -4.512216567993164
    10. '\' → logprob: -4.512216567993164

Token 9: ' Set' (ID: 3957)
  Prédit: 'Set'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Set' → logprob: -0.590987503528595
    2. 'Union' → logprob: -1.5909874439239502
    3. 'Any' → logprob: -2.21598744392395
    4. ' Union' → logprob: -2.84098744392395
    5. 'Optional' → logprob: -2.96598744392395
    6. 'Iterable' → logprob: -5.215987682342529
    7. ' Optional' → logprob: -5.340987682342529
    8. ' Set' → logprob: -5.590987682342529
    9. 'Callable' → logprob: -5.965987682342529
    10. ' Any' → logprob: -5.965987682342529

Token 10: ',' (ID: 11)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.9665271043777466
    2. '[' → logprob: -1.5915271043777466
    3. ',' → logprob: -2.216526985168457
    4. ':' → logprob: -2.591526985168457
    5. 'a' → logprob: -2.716526985168457
    6. '```' → logprob: -3.091526985168457
    7. ' ' → logprob: -3.466526985168457
    8. 'def' → logprob: -3.466526985168457
    9. '\[' → logprob: -4.591526985168457
    10. '\' → logprob: -4.841526985168457

Token 11: ' Optional' (ID: 19351)
  Prédit: 'Optional'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Optional' → logprob: -1.3940303325653076
    2. 'Any' → logprob: -1.5190303325653076
    3. 'Union' → logprob: -1.5190303325653076
    4. ' Union' → logprob: -2.3940303325653076
    5. 'Iterable' → logprob: -2.6440303325653076
    6. ' Optional' → logprob: -3.0190303325653076
    7. 'Default' → logprob: -3.0190303325653076
    8. 'Callable' → logprob: -4.519030570983887
    9. 'Named' → logprob: -5.019030570983887
    10. ' Any' → logprob: -5.144030570983887

Token 12: '
' (ID: 198)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.8485350012779236
    2. 'import' → logprob: -2.0985350608825684
    3. 'a' → logprob: -2.2235350608825684
    4. '<|end|>' → logprob: -2.5985350608825684
    5. '```' → logprob: -3.2235350608825684
    6. 'def' → logprob: -3.2235350608825684
    7. ' ' → logprob: -3.3485350608825684
    8. ':' → logprob: -3.7235350608825684
    9. '\n' → logprob: -3.7235350608825684
    10. '(' → logprob: -4.098535060882568

Token 13: 'from' (ID: 2845)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.810100257396698
    2. ',' → logprob: -1.3101003170013428
    3. '```' → logprob: -2.3101003170013428
    4. '<|end|>' → logprob: -2.8101003170013428
    5. 'def' → logprob: -3.3101003170013428
    6. '\n' → logprob: -3.8101003170013428
    7. '`' → logprob: -4.185100078582764
    8. 'a' → logprob: -4.560100078582764
    9. '\' → logprob: -4.935100078582764
    10. 'from' → logprob: -5.560100078582764

Token 14: ' copy' (ID: 5150)
  Prédit: ' typing'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' typing' → logprob: -0.506286084651947
    2. ' collections' → logprob: -1.1312861442565918
    3. ' datetime' → logprob: -3.506286144256592
    4. ' dat' → logprob: -4.006286144256592
    5. 'collections' → logprob: -4.006286144256592
    6. 'typing' → logprob: -6.256286144256592
    7. ' itertools' → logprob: -7.131286144256592
    8. ' os' → logprob: -7.256286144256592
    9. ' sqlalchemy' → logprob: -7.256286144256592
    10. ' sys' → logprob: -7.381286144256592

Token 15: ' import' (ID: 1588)
  Prédit: ' import'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' import' → logprob: -0.08910315483808517
    2. 'import' → logprob: -2.4641032218933105
    3. '.deepcopy' → logprob: -9.839102745056152
    4. '	import' → logprob: -10.214102745056152
    5. ' im' → logprob: -10.339102745056152
    6. ' ' → logprob: -11.714102745056152
    7. ' impor' → logprob: -11.714102745056152
    8. ' imports' → logprob: -11.964102745056152
    9. '_import' → logprob: -12.339102745056152
    10. ' importar' → logprob: -12.464102745056152

Token 16: ' deepcopy' (ID: 130230)
  Prédit: ' deepcopy'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' deepcopy' → logprob: -0.004253861960023642
    2. ' copy' → logprob: -5.50425386428833
    3. 'deep' → logprob: -9.504253387451172
    4. 'copy' → logprob: -9.504253387451172
    5. ' deep' → logprob: -11.129253387451172
    6. '.deepcopy' → logprob: -11.379253387451172
    7. ' dee' → logprob: -15.754253387451172
    8. ' import' → logprob: -16.004253387451172
    9. ' ' → logprob: -18.129253387451172
    10. 'Deep' → logprob: -19.254253387451172

Token 17: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.6037537455558777
    2. '\n' → logprob: -1.7287538051605225
    3. '

' → logprob: -2.2287538051605225
    4. '```' → logprob: -2.8537538051605225
    5. 'def' → logprob: -3.7287538051605225
    6. '' → logprob: -3.9787538051605225
    7. '\' → logprob: -3.9787538051605225
    8. '<|end|>' → logprob: -4.103753566741943
    9. ',' → logprob: -5.353753566741943
    10. 'newline' → logprob: -5.728753566741943

Token 18: 'from' (ID: 2845)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '```' → logprob: -0.9580445885658264
    2. 'def' → logprob: -1.2080445289611816
    3. 'class' → logprob: -2.3330445289611816
    4. '
' → logprob: -2.4580445289611816
    5. '\n' → logprob: -3.0830445289611816
    6. 'import' → logprob: -3.4580445289611816
    7. 'd' → logprob: -3.9580445289611816
    8. '\' → logprob: -4.833044528961182
    9. 'a' → logprob: -4.958044528961182
    10. '

' → logprob: -5.458044528961182

Token 19: ' abc' (ID: 75094)
  Prédit: ' collections'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' collections' → logprob: -0.08253824710845947
    2. ' typing' → logprob: -3.83253812789917
    3. ' itertools' → logprob: -3.83253812789917
    4. ' dat' → logprob: -4.08253812789917
    5. 'collections' → logprob: -4.95753812789917
    6. ' math' → logprob: -5.33253812789917
    7. ' functools' → logprob: -5.58253812789917
    8. ' pprint' → logprob: -6.70753812789917
    9. ' enum' → logprob: -7.83253812789917
    10. ' random' → logprob: -7.95753812789917

Token 20: ' import' (ID: 1588)
  Prédit: ' import'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' import' → logprob: -0.236881822347641
    2. '.' → logprob: -1.9868818521499634
    3. 'import' → logprob: -2.736881732940674
    4. ' ' → logprob: -5.736881732940674
    5. '	import' → logprob: -5.736881732940674
    6. '.import' → logprob: -6.861881732940674
    7. ' .' → logprob: -7.236881732940674
    8. '<|end|>' → logprob: -7.736881732940674
    9. '.abstract' → logprob: -9.236882209777832
    10. '_import' → logprob: -10.111882209777832

Token 21: ' ABC' (ID: 33047)
  Prédit: ' ABC'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ABC' → logprob: -0.00551606947556138
    2. 'ABC' → logprob: -5.380516052246094
    3. ' A' → logprob: -7.130516052246094
    4. ' abstract' → logprob: -9.755516052246094
    5. 'abstract' → logprob: -11.005516052246094
    6. ' ' → logprob: -11.380516052246094
    7. ' ' → logprob: -12.505516052246094
    8. 'A' → logprob: -13.630516052246094
    9. '	' → logprob: -13.755516052246094
    10. '	A' → logprob: -14.130516052246094

Token 22: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0030654144939035177
    2. 'import' → logprob: -6.378065586090088
    3. '<|end|>' → logprob: -7.128065586090088
    4. ',
' → logprob: -9.25306510925293
    5. '<|end|>' → logprob: -9.25306510925293
    6. '```' → logprob: -9.50306510925293
    7. ')' → logprob: -9.75306510925293
    8. ' ,' → logprob: -10.25306510925293
    9. 'from' → logprob: -10.37806510925293
    10. 'and' → logprob: -10.37806510925293

Token 23: ' abstract' (ID: 13004)
  Prédit: ' abstract'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' abstract' → logprob: -0.5759404301643372
    2. 'abstract' → logprob: -0.8259404301643372
    3. ' ABC' → logprob: -15.200940132141113
    4. '.abstract' → logprob: -15.200940132141113
    5. ' abstr' → logprob: -15.575940132141113
    6. ' ' → logprob: -16.32594108581543
    7. 'Abstract' → logprob: -16.45094108581543
    8. ' Abstract' → logprob: -17.95094108581543
    9. 'classmethod' → logprob: -17.95094108581543
    10. 'abc' → logprob: -18.45094108581543

Token 24: 'method' (ID: 8697)
  Prédit: 'method'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'method' → logprob: -0.0005050156614743173
    2. 'classmethod' → logprob: -7.625504970550537
    3. 'staticmethod' → logprob: -11.625505447387695
    4. '_method' → logprob: -12.375505447387695
    5. 'meth' → logprob: -14.125505447387695
    6. 'class' → logprob: -14.250505447387695
    7. ' method' → logprob: -14.375505447387695
    8. '	method' → logprob: -14.375505447387695
    9. 'ethod' → logprob: -15.000505447387695
    10. '_' → logprob: -15.500505447387695

Token 25: '

' (ID: 279)
  Prédit: '

'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '

' → logprob: -0.16845016181468964
    2. '
' → logprob: -1.918450117111206
    3. 'class' → logprob: -5.543450355529785
    4. '


' → logprob: -6.043450355529785
    5. '
' → logprob: -7.043450355529785
    6. ' 

' → logprob: -8.168450355529785
    7. '' → logprob: -8.168450355529785
    8. '<|end|>' → logprob: -8.918450355529785
    9. '

' → logprob: -9.543450355529785
    10. '```' → logprob: -10.043450355529785

Token 26: 'class' (ID: 1444)
  Prédit: 'class'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'class' → logprob: -0.1774204820394516
    2. '
' → logprob: -2.1774203777313232
    3. 'c' → logprob: -3.0524203777313232
    4. '

' → logprob: -6.552420616149902
    5. '\n' → logprob: -8.677420616149902
    6. ' class' → logprob: -9.052420616149902
    7. '
' → logprob: -10.052420616149902
    8. '```' → logprob: -10.427420616149902
    9. 'C' → logprob: -10.677420616149902
    10. '' → logprob: -10.677420616149902

Token 27: ' Block' (ID: 13063)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.011280539445579052
    2. ' Object' → logprob: -5.636280536651611
    3. ' Basic' → logprob: -6.261280536651611
    4. ' Abstract' → logprob: -6.386280536651611
    5. ' Space' → logprob: -7.011280536651611
    6. ' Serializer' → logprob: -7.511280536651611
    7. ' Base' → logprob: -7.761280536651611
    8. ' Shape' → logprob: -8.38628101348877
    9. ' Parser' → logprob: -8.51128101348877
    10. ' Context' → logprob: -8.63628101348877

Token 28: 'Type' (ID: 1163)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.012863474898040295
    2. '(' → logprob: -4.387863636016846
    3. ' :' → logprob: -8.387863159179688
    4. '(Abstract' → logprob: -9.637863159179688
    5. '():' → logprob: -11.387863159179688
    6. '):' → logprob: -11.762863159179688
    7. ':
' → logprob: -11.887863159179688
    8. '<|end|>' → logprob: -12.012863159179688
    9. ':**' → logprob: -12.137863159179688
    10. '(Block' → logprob: -12.137863159179688

Token 29: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.37942150235176086
    2. '(' → logprob: -1.3794214725494385
    3. '(Enum' → logprob: -2.7544214725494385
    4. '(enum' → logprob: -8.25442123413086
    5. ':
' → logprob: -10.25442123413086
    6. '(Abstract' → logprob: -10.62942123413086
    7. ' :' → logprob: -11.37942123413086
    8. '):' → logprob: -11.50442123413086
    9. '():' → logprob: -11.75442123413086
    10. ':**' → logprob: -12.37942123413086

Token 30: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.1362846940755844
    2. '   ' → logprob: -2.886284589767456
    3. '(Enum' → logprob: -3.261284589767456
    4. '(' → logprob: -4.011284828186035
    5. ' ' → logprob: -5.261284828186035
    6. ':
' → logprob: -6.261284828186035
    7. '(enum' → logprob: -7.136284828186035
    8. '    ' → logprob: -7.261284828186035
    9. '<|end|>' → logprob: -7.261284828186035
    10. '  ' → logprob: -7.386284828186035

Token 31: ' def' (ID: 1056)
  Prédit: ' pass'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' pass' → logprob: -0.17454825341701508
    2. ' def' → logprob: -3.4245481491088867
    3. '   ' → logprob: -3.5495481491088867
    4. 'pass' → logprob: -4.174548149108887
    5. ' PASS' → logprob: -4.674548149108887
    6. ' ' → logprob: -4.799548149108887
    7. '_' → logprob: -4.924548149108887
    8. ' """' → logprob: -5.549548149108887
    9. 'I' → logprob: -5.674548149108887
    10. ' INPUT' → logprob: -6.049548149108887

Token 32: ' __' (ID: 2516)
  Prédit: 'it'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'it' → logprob: -0.6961591243743896
    2. 't' → logprob: -0.8211591243743896
    3. 'f' → logprob: -3.4461591243743896
    4. 'def' → logprob: -4.071159362792969
    5. '   ' → logprob: -5.946159362792969
    6. '=' → logprob: -6.321159362792969
    7. 'er' → logprob: -6.821159362792969
    8. '_' → logprob: -6.821159362792969
    9. '```' → logprob: -6.946159362792969
    10. '__' → logprob: -7.571159362792969

Token 33: 'init' (ID: 3287)
  Prédit: 'init'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: -6.704273118884885e-07
    2. 'ini' → logprob: -14.500000953674316
    3. 'eq' → logprob: -17.0
    4. 'new' → logprob: -17.625
    5. ' init' → logprob: -18.125
    6. 'int' → logprob: -18.25
    7. 'name' → logprob: -18.25
    8. 'in' → logprob: -19.25
    9. 'inite' → logprob: -19.25
    10. '```' → logprob: -19.875

Token 34: '__(' (ID: 8241)
  Prédit: '__('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.03600826859474182
    2. '__' → logprob: -3.411008358001709
    3. '__(
' → logprob: -6.286008358001709
    4. '(' → logprob: -8.16100788116455
    5. '__('' → logprob: -9.53600788116455
    6. '__((' → logprob: -9.91100788116455
    7. '_' → logprob: -10.03600788116455
    8. '__(*' → logprob: -11.28600788116455
    9. '__("' → logprob: -11.41100788116455
    10. '___' → logprob: -12.03600788116455

Token 35: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.00596529571339488
    2. ' self' → logprob: -5.130965232849121
    3. ' ' → logprob: -11.005965232849121
    4. ')' → logprob: -11.505965232849121
    5. '<|end|>' → logprob: -12.380965232849121
    6. '
' → logprob: -14.130965232849121
    7. '_self' → logprob: -14.130965232849121
    8. '(self' → logprob: -14.255965232849121
    9. ',' → logprob: -14.255965232849121
    10. '<|end|>' → logprob: -14.505965232849121

Token 36: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.437102347612381
    2. ' ,' → logprob: -1.0621023178100586
    3. ' )' → logprob: -5.937102317810059
    4. ' ' → logprob: -6.187102317810059
    5. ')' → logprob: -7.187102317810059
    6. 'self' → logprob: -7.187102317810059
    7. ' self' → logprob: -7.312102317810059
    8. '_' → logprob: -7.687102317810059
    9. '<|end|>' → logprob: -8.562102317810059
    10. ' _' → logprob: -8.812102317810059

Token 37: ' id' (ID: 1211)
  Prédit: ' name'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' name' → logprob: -0.11918104439973831
    2. 'name' → logprob: -2.8691811561584473
    3. ' self' → logprob: -2.9941811561584473
    4. 'self' → logprob: -5.369181156158447
    5. ' id' → logprob: -7.869181156158447
    6. ' )' → logprob: -8.494180679321289
    7. ' ' → logprob: -9.369180679321289
    8. ' block' → logprob: -9.619180679321289
    9. ')' → logprob: -9.994180679321289
    10. ' n' → logprob: -10.869180679321289

Token 38: '_:' (ID: 52270)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.006950153037905693
    2. '_:' → logprob: -5.131950378417969
    3. ',' → logprob: -7.256950378417969
    4. '):' → logprob: -8.256950378417969
    5. ':int' → logprob: -10.381950378417969
    6. ')' → logprob: -11.381950378417969
    7. '__:' → logprob: -12.506950378417969
    8. ' :' → logprob: -12.756950378417969
    9. ':str' → logprob: -13.381950378417969
    10. '_' → logprob: -13.756950378417969

Token 39: ' int' (ID: 677)
  Prédit: ' int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.03502229228615761
    2. 'int' → logprob: -3.410022258758545
    3. ' str' → logprob: -6.785022258758545
    4. 'str' → logprob: -9.160022735595703
    5. ' ' → logprob: -9.285022735595703
    6. ' in' → logprob: -11.410022735595703
    7. ' )' → logprob: -11.535022735595703
    8. ')' → logprob: -11.785022735595703
    9. ':int' → logprob: -12.285022735595703
    10. '  ' → logprob: -12.910022735595703

Token 40: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.12723402678966522
    2. '):' → logprob: -2.3772339820861816
    3. ')' → logprob: -3.6272339820861816
    4. ' ,' → logprob: -9.87723445892334
    5. ' ):' → logprob: -12.12723445892334
    6. '   ' → logprob: -12.50223445892334
    7. '),' → logprob: -12.75223445892334
    8. ':' → logprob: -12.75223445892334
    9. ' ' → logprob: -13.50223445892334
    10. ')->' → logprob: -13.50223445892334

Token 41: ' score' (ID: 8429)
  Prédit: ' name'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' name' → logprob: -0.005800567101687193
    2. 'name' → logprob: -5.255800724029541
    3. ' ' → logprob: -7.630800724029541
    4. ' description' → logprob: -11.130800247192383
    5. ' type' → logprob: -11.255800247192383
    6. ')' → logprob: -11.630800247192383
    7. ' )' → logprob: -11.755800247192383
    8. '  ' → logprob: -12.380800247192383
    9. ' color' → logprob: -12.505800247192383
    10. '   ' → logprob: -12.505800247192383

Token 42: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.00075459701474756
    2. '):' → logprob: -7.2507548332214355
    3. ':int' → logprob: -11.000754356384277
    4. ',' → logprob: -11.250754356384277
    5. ')' → logprob: -12.000754356384277
    6. '_score' → logprob: -12.375754356384277
    7. 's' → logprob: -13.750754356384277
    8. '_:' → logprob: -13.875754356384277
    9. ' :' → logprob: -14.375754356384277
    10. ' ):' → logprob: -14.500754356384277

Token 43: ' int' (ID: 677)
  Prédit: ' int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.051160071045160294
    2. 'int' → logprob: -3.0511600971221924
    3. ' float' → logprob: -6.051159858703613
    4. 'float' → logprob: -9.176159858703613
    5. ' ' → logprob: -9.801159858703613
    6. ' Optional' → logprob: -10.301159858703613
    7. ')' → logprob: -11.426159858703613
    8. ' )' → logprob: -13.176159858703613
    9. ' List' → logprob: -13.176159858703613
    10. 'Optional' → logprob: -13.676159858703613

Token 44: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.15648718178272247
    2. ')' → logprob: -2.406487226486206
    3. ',' → logprob: -2.906487226486206
    4. ':' → logprob: -10.281487464904785
    5. '):
' → logprob: -11.531487464904785
    6. ' ):' → logprob: -12.156487464904785
    7. '=' → logprob: -12.906487464904785
    8. ')->' → logprob: -13.031487464904785
    9. '),' → logprob: -13.531487464904785
    10. ' ' → logprob: -14.281487464904785

Token 45: '       ' (ID: 309)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.30201658606529236
    2. ',' → logprob: -1.8020166158676147
    3. '       ' → logprob: -3.052016496658325
    4. ')' → logprob: -3.427016496658325
    5. ' ):' → logprob: -4.927016735076904
    6. ':' → logprob: -5.927016735076904
    7. '   ' → logprob: -5.927016735076904
    8. ' ,' → logprob: -6.552016735076904
    9. ' )' → logprob: -6.677016735076904
    10. '    ' → logprob: -8.427016258239746

Token 46: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.12834405899047852
    2. ' self' → logprob: -2.2533440589904785
    3. '       ' → logprob: -4.2533440589904785
    4. '        ' → logprob: -7.0033440589904785
    5. ' ' → logprob: -8.50334358215332
    6. '   ' → logprob: -10.75334358215332
    7. '\' → logprob: -11.87834358215332
    8. '    ' → logprob: -12.00334358215332
    9. ' ' → logprob: -12.37834358215332
    10. 's' → logprob: -12.50334358215332

Token 47: '.id' (ID: 2858)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.6933202743530273
    2. '.id' → logprob: -0.6933202743530273
    3. ' .' → logprob: -8.818320274353027
    4. '._' → logprob: -11.943320274353027
    5. ' ' → logprob: -12.318320274353027
    6. ' id' → logprob: -12.818320274353027
    7. 'id' → logprob: -12.943320274353027
    8. '<|end|>' → logprob: -13.693320274353027
    9. '.ids' → logprob: -14.318320274353027
    10. '.i' → logprob: -14.443320274353027

Token 48: ' =' (ID: 314)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -4.644463479053229e-05
    2. '_
' → logprob: -10.875046730041504
    3. '_,' → logprob: -11.375046730041504
    4. '_)' → logprob: -11.750046730041504
    5. '_

' → logprob: -12.750046730041504
    6. '_=' → logprob: -13.000046730041504
    7. '_]' → logprob: -14.125046730041504
    8. ' _' → logprob: -14.125046730041504
    9. '_:' → logprob: -14.625046730041504
    10. '<|end|>' → logprob: -14.875046730041504

Token 49: ' id' (ID: 1211)
  Prédit: ' id'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' id' → logprob: -0.16037167608737946
    2. 'id' → logprob: -1.9103716611862183
    3. ' ' → logprob: -9.035371780395508
    4. ' ' → logprob: -10.535371780395508
    5. '_' → logprob: -14.285371780395508
    6. '	id' → logprob: -14.660371780395508
    7. '        ' → logprob: -15.160371780395508
    8. '_id' → logprob: -16.160371780395508
    9. '=id' → logprob: -16.160371780395508
    10. '(id' → logprob: -16.910371780395508

Token 50: '_
' (ID: 27437)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -3.4121114822482923e-06
    2. '_
' → logprob: -12.750003814697266
    3. '_

' → logprob: -15.500003814697266
    4. '_
' → logprob: -15.875003814697266
    5. '_,' → logprob: -17.375003814697266
    6. '_\' → logprob: -17.625003814697266
    7. '_]' → logprob: -17.875003814697266
    8. '_)' → logprob: -18.000003814697266
    9. '_:' → logprob: -18.750003814697266
    10. '_^(' → logprob: -18.750003814697266

Token 51: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0027350971940904856
    2. '<|end|>' → logprob: -6.002735137939453
    3. '
' → logprob: -8.627735137939453
    4. ' ' → logprob: -10.377735137939453
    5. '      ' → logprob: -11.377735137939453
    6. '        
' → logprob: -11.377735137939453
    7. '   ' → logprob: -11.877735137939453
    8. '        ' → logprob: -12.252735137939453
    9. '<|end|>' → logprob: -12.752735137939453
    10. '     ' → logprob: -12.877735137939453

Token 52: ' self' (ID: 1051)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.055357348173856735
    2. 'self' (adapté à ' self') → logprob: -3.0553574562072754
    3. ' self' → logprob: -5.305357456207275
    4. '
' → logprob: -6.805357456207275
    5. '<|end|>' → logprob: -8.305356979370117
    6. '        ' → logprob: -8.805356979370117
    7. 'score' → logprob: -9.805356979370117
    8. '        
' → logprob: -10.055356979370117
    9. ' ' → logprob: -10.180356979370117
    10. ',' → logprob: -10.555356979370117

Token 53: '.score' (ID: 42441)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.3495413064956665
    2. '.score' → logprob: -1.3495413064956665
    3. '_score' → logprob: -4.099541187286377
    4. '_' → logprob: -5.099541187286377
    5. 'score' → logprob: -5.099541187286377
    6. '._' → logprob: -6.099541187286377
    7. ' =' → logprob: -6.099541187286377
    8. '=' → logprob: -7.724541187286377
    9. ' ' → logprob: -7.974541187286377
    10. ' score' → logprob: -8.224541664123535

Token 54: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.05496421083807945
    2. '=' → logprob: -2.929964303970337
    3. ' ' → logprob: -9.429964065551758
    4. '<|end|>' → logprob: -13.929964065551758
    5. ' =
' → logprob: -15.429964065551758
    6. '<|end|>' → logprob: -15.929964065551758
    7. ')' → logprob: -16.304964065551758
    8. ' +=' → logprob: -16.554964065551758
    9. ',' → logprob: -16.929964065551758
    10. '.' → logprob: -16.929964065551758

Token 55: ' score' (ID: 8429)
  Prédit: ' score'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' score' → logprob: -0.029807770624756813
    2. 'score' → logprob: -3.5298078060150146
    3. ' ' → logprob: -9.779808044433594
    4. '(score' → logprob: -14.904808044433594
    5. ' ' → logprob: -15.404808044433594
    6. '	score' → logprob: -16.029808044433594
    7. '_score' → logprob: -18.029808044433594
    8. '.score' → logprob: -18.529808044433594
    9. 's' → logprob: -18.904808044433594
    10. ' s' → logprob: -19.154808044433594

Token 56: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 57: 'class' (ID: 1444)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.04238191619515419
    2. '<|end|>' → logprob: -3.542382001876831
    3. '

' → logprob: -5.292381763458252
    4. '   ' → logprob: -5.542381763458252
    5. '    
' → logprob: -6.792381763458252
    6. '\n' → logprob: -7.167381763458252
    7. '<|end|>' → logprob: -7.667381763458252
    8. 'class' → logprob: -8.16738224029541
    9. '' → logprob: -8.54238224029541
    10. ' 
' → logprob: -8.79238224029541

Token 58: ' Board' (ID: 10837)
  Prédit: ' Block'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' Block' → logprob: -0.015689536929130554
    2. ' Puzzle' → logprob: -5.015689373016357
    3. ' Piece' → logprob: -6.015689373016357
    4. ' Shape' → logprob: -7.015689373016357
    5. ' Grid' → logprob: -7.640689373016357
    6. ' Stack' → logprob: -7.890689373016357
    7. ' Tile' → logprob: -7.890689373016357
    8. ' Basic' → logprob: -8.015689849853516
    9. ' Abstract' → logprob: -8.265689849853516
    10. ' Solution' → logprob: -8.265689849853516

Token 59: 'Change' (ID: 4836)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0014397578779608011
    2. '(' → logprob: -7.001439571380615
    3. '():' → logprob: -8.251440048217773
    4. '):' → logprob: -8.626440048217773
    5. ':
' → logprob: -10.501440048217773
    6. '(object' → logprob: -11.001440048217773
    7. ' :' → logprob: -12.251440048217773
    8. '(Abstract' → logprob: -12.251440048217773
    9. ':**' → logprob: -12.626440048217773
    10. '<|end|>' → logprob: -12.876440048217773

Token 60: 'Listener' (ID: 3466)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.5241549611091614
    2. ':' → logprob: -0.8991549611091614
    3. '():' → logprob: -7.649155139923096
    4. '(Abstract' → logprob: -8.024154663085938
    5. 'Handler' → logprob: -10.149154663085938
    6. '(object' → logprob: -10.649154663085938
    7. 'Change' → logprob: -10.774154663085938
    8. ':
' → logprob: -11.024154663085938
    9. 'Update' → logprob: -11.274154663085938
    10. '):' → logprob: -11.399154663085938

Token 61: '(' (ID: 7)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.5762171149253845
    2. '(' → logprob: -0.8262171149253845
    3. '(Abstract' → logprob: -8.451216697692871
    4. ' :' → logprob: -10.701216697692871
    5. '():' → logprob: -11.201216697692871
    6. '(object' → logprob: -11.826216697692871
    7. '(:' → logprob: -12.826216697692871
    8. ',' → logprob: -13.201216697692871
    9. '):' → logprob: -13.326216697692871
    10. '```' → logprob: -13.326216697692871

Token 62: 'ABC' (ID: 44197)
  Prédit: 'ABC'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ABC' → logprob: -0.006350119132548571
    2. '):' → logprob: -5.381350040435791
    3. ')' → logprob: -6.756350040435791
    4. ' ABC' → logprob: -8.13135051727295
    5. 'A' → logprob: -9.25635051727295
    6. 'AB' → logprob: -9.50635051727295
    7. 'abc' → logprob: -10.25635051727295
    8. '):
' → logprob: -10.38135051727295
    9. '(' → logprob: -11.25635051727295
    10. ' ):' → logprob: -12.50635051727295

Token 63: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0003112711710855365
    2. ')' → logprob: -8.125310897827148
    3. ' ):' → logprob: -11.875310897827148
    4. ':' → logprob: -12.500310897827148
    5. '):
' → logprob: -12.625310897827148
    6. ',' → logprob: -14.375310897827148
    7. '):

' → logprob: -15.500310897827148
    8. '):
' → logprob: -15.625310897827148
    9. '():' → logprob: -16.75031089782715
    10. ')：' → logprob: -16.87531089782715

Token 64: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00835192110389471
    2. '
' → logprob: -5.508351802825928
    3. '    
' → logprob: -6.008351802825928
    4. ':' → logprob: -7.133351802825928
    5. '<|end|>' → logprob: -8.383352279663086
    6. ')' → logprob: -9.258352279663086
    7. '```' → logprob: -9.258352279663086
    8. '    ' → logprob: -9.508352279663086
    9. '<|end|>' → logprob: -9.758352279663086
    10. '  ' → logprob: -9.883352279663086

Token 65: ' @' (ID: 759)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.729690432548523
    2. '
' → logprob: -0.854690432548523
    3. '    
' → logprob: -3.6046905517578125
    4. '@' (adapté à ' @') → logprob: -3.8546905517578125
    5. ' 
' → logprob: -3.8546905517578125
    6. ' @' → logprob: -4.3546905517578125
    7. '    ' → logprob: -5.4796905517578125
    8. ' ' → logprob: -6.2296905517578125
    9. ' def' → logprob: -6.7296905517578125
    10. '' → logprob: -7.1046905517578125

Token 66: 'abstract' (ID: 31332)
  Prédit: 'abstract'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'abstract' → logprob: -5.776898251497187e-05
    2. 'ab' → logprob: -10.2500581741333
    3. 'abs' → logprob: -10.7500581741333
    4. 'abc' → logprob: -14.7500581741333
    5. 'staticmethod' → logprob: -15.6250581741333
    6. ' abstract' → logprob: -15.7500581741333
    7. 'classmethod' → logprob: -16.500057220458984
    8. 'property' → logprob: -17.125057220458984
    9. '.abstract' → logprob: -17.125057220458984
    10. 'a' → logprob: -17.250057220458984

Token 67: 'method' (ID: 8697)
  Prédit: 'method'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'method' → logprob: -0.008328981697559357
    2. '_method' → logprob: -4.883328914642334
    3. '.method' → logprob: -7.883328914642334
    4. 'meth' → logprob: -8.258329391479492
    5. 'classmethod' → logprob: -10.508329391479492
    6. '	method' → logprob: -11.758329391479492
    7. 'staticmethod' → logprob: -11.758329391479492
    8. 'ethod' → logprob: -11.883329391479492
    9. 'def' → logprob: -11.883329391479492
    10. '_METHOD' → logprob: -12.008329391479492

Token 68: '
' (ID: 198)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.8356532454490662
    2. '(' → logprob: -1.210653305053711
    3. '
' → logprob: -2.085653305053711
    4. ' def' → logprob: -2.210653305053711
    5. '    
' → logprob: -4.835653305053711
    6. ')' → logprob: -4.960653305053711
    7. '<|end|>' → logprob: -4.960653305053711
    8. '\' → logprob: -5.710653305053711
    9. '(
' → logprob: -5.835653305053711
    10. ' ' → logprob: -6.960653305053711

Token 69: '   ' (ID: 271)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.31960010528564453
    2. 'def' → logprob: -1.4446001052856445
    3. ' def' → logprob: -4.3196001052856445
    4. '.' → logprob: -4.6946001052856445
    5. 'method' → logprob: -5.4446001052856445
    6. '.method' → logprob: -5.4446001052856445
    7. '.def' → logprob: -6.1946001052856445
    8. '   ' → logprob: -7.4446001052856445
    9. '(
' → logprob: -7.4446001052856445
    10. ')' → logprob: -7.5696001052856445

Token 70: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.13881923258304596
    2. 'method' → logprob: -3.0138192176818848
    3. 'abstract' → logprob: -3.2638192176818848
    4. 'classmethod' → logprob: -4.013819217681885
    5. 'staticmethod' → logprob: -4.138819217681885
    6. 'abc' → logprob: -6.388819217681885
    7. '
' → logprob: -6.638819217681885
    8. 'property' → logprob: -7.013819217681885
    9. ' def' → logprob: -7.263819217681885
    10. 'call' → logprob: -7.388819217681885

Token 71: ' on' (ID: 402)
  Prédit: ' on'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' on' → logprob: -0.3930736482143402
    2. ' board' → logprob: -1.1430736780166626
    3. ' update' → logprob: -6.268073558807373
    4. ' def' → logprob: -6.893073558807373
    5. ' space' → logprob: -7.143073558807373
    6. ' handle' → logprob: -7.643073558807373
    7. 'on' → logprob: -8.018074035644531
    8. ' apply' → logprob: -8.268074035644531
    9. ' block' → logprob: -8.393074035644531
    10. ' onchange' → logprob: -8.393074035644531

Token 72: '_blocks' (ID: 60244)
  Prédit: '_board'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_board' → logprob: -0.15434737503528595
    2. '_block' → logprob: -2.4043474197387695
    3. '_' → logprob: -3.5293474197387695
    4. '_change' → logprob: -4.0293474197387695
    5. '_cell' → logprob: -6.5293474197387695
    6. 'Board' → logprob: -6.7793474197387695
    7. '_move' → logprob: -7.4043474197387695
    8. '_update' → logprob: -7.4043474197387695
    9. '_piece' → logprob: -7.7793474197387695
    10. '_b' → logprob: -8.27934741973877

Token 73: '_er' (ID: 180910)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -1.245351791381836
    2. '_added' → logprob: -1.370351791381836
    3. '_removed' → logprob: -1.495351791381836
    4. '_changed' → logprob: -1.620351791381836
    5. '_updated' → logprob: -3.995351791381836
    6. '_insert' → logprob: -5.245351791381836
    7. '_c' → logprob: -5.745351791381836
    8. '_destroy' → logprob: -6.495351791381836
    9. '_change' → logprob: -6.620351791381836
    10. '_re' → logprob: -6.870351791381836

Token 74: 'ased' (ID: 1882)
  Prédit: 'ased'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ased' → logprob: -0.002889632945880294
    2. 'ase' → logprob: -5.877889633178711
    3. 'a' → logprob: -10.502889633178711
    4. 'asing' → logprob: -11.502889633178711
    5. 'ases' → logprob: -12.002889633178711
    6. 'asure' → logprob: -12.002889633178711
    7. 'aised' → logprob: -12.127889633178711
    8. 'oded' → logprob: -12.127889633178711
    9. 'ad' → logprob: -12.502889633178711
    10. 'azed' → logprob: -12.502889633178711

Token 75: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.026363471522927284
    2. '(' → logprob: -3.6513633728027344
    3. ' (' → logprob: -9.776363372802734
    4. '(s' → logprob: -13.026363372802734
    5. 'self' → logprob: -13.401363372802734
    6. '(
' → logprob: -13.651363372802734
    7. '()' → logprob: -15.276363372802734
    8. '(

' → logprob: -15.276363372802734
    9. ' self' → logprob: -16.026363372802734
    10. '_blocks' → logprob: -16.401363372802734

Token 76: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.001547002699226141
    2. 'self' → logprob: -7.001546859741211
    3. ' ,' → logprob: -7.751546859741211
    4. ')' → logprob: -9.126546859741211
    5. '

' → logprob: -10.376546859741211
    6. '(self' → logprob: -10.376546859741211
    7. ',self' → logprob: -11.251546859741211
    8. ' ' → logprob: -12.751546859741211
    9. ' self' → logprob: -12.751546859741211
    10. '   ' → logprob: -12.876546859741211

Token 77: ' positions' (ID: 15897)
  Prédit: ' self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.22004671394824982
    2. 'self' → logprob: -1.9700467586517334
    3. ' blocks' → logprob: -3.3450467586517334
    4. ' board' → logprob: -4.220046520233154
    5. 'blocks' → logprob: -6.220046520233154
    6. ' positions' → logprob: -6.345046520233154
    7. 'board' → logprob: -6.595046520233154
    8. ' erased' → logprob: -6.845046520233154
    9. ' er' → logprob: -7.595046520233154
    10. ')' → logprob: -8.095046997070312

Token 78: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.002849806100130081
    2. '):' → logprob: -6.127849578857422
    3. ')' → logprob: -7.627849578857422
    4. ' :' → logprob: -9.252849578857422
    5. ' ):' → logprob: -10.502849578857422
    6. ',' → logprob: -10.627849578857422
    7. ' )' → logprob: -11.627849578857422
    8. '<|end|>' → logprob: -11.877849578857422
    9. ':list' → logprob: -12.002849578857422
    10. '}:' → logprob: -13.877849578857422

Token 79: ' Set' (ID: 3957)
  Prédit: ' List'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' List' → logprob: -0.04341384768486023
    2. ' Set' → logprob: -3.4184138774871826
    3. 'List' → logprob: -4.6684136390686035
    4. 'Set' → logprob: -8.168414115905762
    5. ' ' → logprob: -10.793414115905762
    6. '[List' → logprob: -11.793414115905762
    7. ' set' → logprob: -11.918414115905762
    8. ' Optional' → logprob: -12.418414115905762
    9. ')' → logprob: -12.668414115905762
    10. '	List' → logprob: -12.793414115905762

Token 80: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.09144006669521332
    2. ')' → logprob: -2.716439962387085
    3. '<|end|>' → logprob: -4.091440200805664
    4. '[List' → logprob: -5.841440200805664
    5. '[
' → logprob: -7.341440200805664
    6. '[int' → logprob: -7.841440200805664
    7. ' ' → logprob: -8.841440200805664
    8. '[(' → logprob: -8.841440200805664
    9. '<|end|>' → logprob: -9.216440200805664
    10. ']' → logprob: -10.091440200805664

Token 81: 'Tuple' (ID: 40048)
  Prédit: 'Tuple'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Tuple' → logprob: -0.01428926456719637
    2. ' Tuple' → logprob: -4.264289379119873
    3. ')' → logprob: -10.014288902282715
    4. 'Tu' → logprob: -10.139288902282715
    5. 'tuple' → logprob: -11.264288902282715
    6. '.Tuple' → logprob: -11.514288902282715
    7. 'int' → logprob: -11.764288902282715
    8. '[' → logprob: -12.889288902282715
    9. '[int' → logprob: -13.139288902282715
    10. ' tuple' → logprob: -13.389288902282715

Token 82: '[int' (ID: 40124)
  Prédit: '[int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[int' → logprob: -6.153795766294934e-06
    2. '[' → logprob: -12.750005722045898
    3. 'int' → logprob: -13.125005722045898
    4. '<int' → logprob: -14.625005722045898
    5. '[
' → logprob: -15.250005722045898
    6. '[i' → logprob: -16.0000057220459
    7. ']int' → logprob: -16.1250057220459
    8. ',int' → logprob: -16.2500057220459
    9. ' [' → logprob: -16.5000057220459
    10. '[Int' → logprob: -16.7500057220459

Token 83: ',int' (ID: 20909)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0015141464537009597
    2. ',int' → logprob: -6.626513957977295
    3. '[int' → logprob: -9.251514434814453
    4. ' ,' → logprob: -9.626514434814453
    5. '<|end|>' → logprob: -11.751514434814453
    6. '[' → logprob: -12.626514434814453
    7. ',float' → logprob: -12.751514434814453
    8. '‌,' → logprob: -13.001514434814453
    9. ']' → logprob: -13.001514434814453
    10. ']int' → logprob: -13.251514434814453

Token 84: ']]' (ID: 8928)
  Prédit: ']]'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']]' → logprob: -0.6364927291870117
    2. ']])' → logprob: -0.7614927291870117
    3. ']' → logprob: -6.136492729187012
    4. ']],' → logprob: -6.511492729187012
    5. '])' → logprob: -9.886492729187012
    6. ']):' → logprob: -10.136492729187012
    7. ']>' → logprob: -10.136492729187012
    8. ']]]' → logprob: -10.386492729187012
    9. ']])

' → logprob: -11.011492729187012
    10. ' ]' → logprob: -11.261492729187012

Token 85: '):
' (ID: 1883)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.012539439834654331
    2. '):' → logprob: -4.387539386749268
    3. ' )' → logprob: -10.887539863586426
    4. ')->' → logprob: -12.262539863586426
    5. '):
' → logprob: -13.262539863586426
    6. ':' → logprob: -14.012539863586426
    7. ' ):' → logprob: -14.137539863586426
    8. ',' → logprob: -14.262539863586426
    9. '   ' → logprob: -14.262539863586426
    10. ' ' → logprob: -14.762539863586426

Token 86: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5136078596115112
    2. ')' → logprob: -2.013607978820801
    3. '):' → logprob: -2.013607978820801
    4. '   ' → logprob: -2.388607978820801
    5. ':' → logprob: -4.138607978820801
    6. '<|end|>' → logprob: -4.513607978820801
    7. ' pass' → logprob: -5.013607978820801
    8. ' ->' → logprob: -6.263607978820801
    9. ' ):' → logprob: -6.263607978820801
    10. ' ' → logprob: -6.638607978820801

Token 87: ' pass' (ID: 1853)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6810572147369385
    2. ' pass' → logprob: -0.9310572147369385
    3. 'pass' (adapté à ' pass') → logprob: -2.3060572147369385
    4. '	pass' → logprob: -9.30605697631836
    5. '   ' → logprob: -11.18105697631836
    6. '<|end|>' → logprob: -11.68105697631836
    7. '\n' → logprob: -12.68105697631836
    8. 'raise' → logprob: -12.93105697631836
    9. ' raise' → logprob: -13.30605697631836
    10. '_pass' → logprob: -13.43105697631836

Token 88: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 89: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.14036601781845093
    2. '

' → logprob: -2.7653660774230957
    3. '<|end|>' → logprob: -2.8903660774230957
    4. '    
' → logprob: -5.765366077423096
    5. 'class' → logprob: -6.015366077423096
    6. '   ' → logprob: -6.265366077423096
    7. '<|end|>' → logprob: -6.515366077423096
    8. '\n' → logprob: -6.640366077423096
    9. '


' → logprob: -7.015366077423096
    10. ' 
' → logprob: -8.140365600585938

Token 90: ' @' (ID: 759)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.09339436143636703
    2. '

' → logprob: -3.2183942794799805
    3. '<|end|>' → logprob: -3.3433942794799805
    4. '   ' → logprob: -5.3433942794799805
    5. '    
' → logprob: -5.4683942794799805
    6. '\n' → logprob: -6.4683942794799805
    7. '<|end|>' → logprob: -6.8433942794799805
    8. 'class' → logprob: -7.3433942794799805
    9. '


' → logprob: -7.9683942794799805
    10. '
    
' → logprob: -8.21839427947998

Token 91: 'abstract' (ID: 31332)
  Prédit: 'abstract'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'abstract' → logprob: -0.0029151919297873974
    2. 'staticmethod' → logprob: -6.627915382385254
    3. 'classmethod' → logprob: -6.877915382385254
    4. 'class' → logprob: -8.377915382385254
    5. 'property' → logprob: -8.752915382385254
    6. ' abstract' → logprob: -9.377915382385254
    7. 'block' → logprob: -10.377915382385254
    8. 'on' → logprob: -11.252915382385254
    9. 'abc' → logprob: -11.627915382385254
    10. 'text' → logprob: -12.377915382385254

Token 92: 'method' (ID: 8697)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -1.0006470680236816
    2. 'method' → logprob: -1.1256470680236816
    3. '_method' → logprob: -1.2506470680236816
    4. '__' → logprob: -4.500647068023682
    5. '_' → logprob: -6.375647068023682
    6. 'classmethod' → logprob: -6.625647068023682
    7. '_def' → logprob: -7.000647068023682
    8. '<|end|>' → logprob: -7.125647068023682
    9. 'staticmethod' → logprob: -7.375647068023682
    10. 'the' → logprob: -7.375647068023682

Token 93: '
' (ID: 198)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.740268349647522
    2. '
' → logprob: -1.365268349647522
    3. ' def' → logprob: -1.365268349647522
    4. '
' → logprob: -4.615268230438232
    5. '<|end|>' → logprob: -7.240268230438232
    6. '   ' → logprob: -7.365268230438232
    7. '	def' → logprob: -7.615268230438232
    8. '\' → logprob: -8.86526870727539
    9. '    
' → logprob: -9.36526870727539
    10. '<|end|>' → logprob: -9.86526870727539

Token 94: '   ' (ID: 271)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.10744365304708481
    2. '
' → logprob: -2.3574435710906982
    3. ' def' → logprob: -5.107443809509277
    4. '
' → logprob: -7.607443809509277
    5. '   ' → logprob: -7.607443809509277
    6. '	def' → logprob: -9.482443809509277
    7. '\' → logprob: -10.357443809509277
    8. '    
' → logprob: -10.982443809509277
    9. '(def' → logprob: -11.357443809509277
    10. '_def' → logprob: -12.357443809509277

Token 95: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -7.576873758807778e-05
    2. ' def' → logprob: -9.500075340270996
    3. '
' → logprob: -14.625075340270996
    4. 'on' → logprob: -15.875075340270996
    5. '

' → logprob: -16.750076293945312
    6. 'de' → logprob: -16.875076293945312
    7. '	def' → logprob: -17.000076293945312
    8. '   ' → logprob: -17.500076293945312
    9. 'd' → logprob: -17.500076293945312
    10. 'void' → logprob: -17.875076293945312

Token 96: ' on' (ID: 402)
  Prédit: ' on'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' on' → logprob: -0.22270172834396362
    2. 'def' → logprob: -2.2227017879486084
    3. ' def' → logprob: -2.9727017879486084
    4. 'on' → logprob: -3.2227017879486084
    5. '_on' → logprob: -9.222702026367188
    6. '
' → logprob: -9.597702026367188
    7. 'On' → logprob: -10.472702026367188
    8. ' ' → logprob: -10.597702026367188
    9. '<|end|>' → logprob: -11.097702026367188
    10. '   ' → logprob: -11.347702026367188

Token 97: '_blocks' (ID: 60244)
  Prédit: '_blocks'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_blocks' → logprob: -0.11469799280166626
    2. '_' → logprob: -3.1146979331970215
    3. '_board' → logprob: -3.1146979331970215
    4. '_block' → logprob: -4.6146979331970215
    5. '_score' → logprob: -6.4896979331970215
    6. '_new' → logprob: -6.4896979331970215
    7. '_move' → logprob: -6.8646979331970215
    8. '_lines' → logprob: -7.4896979331970215
    9. '_columns' → logprob: -7.6146979331970215
    10. '_b' → logprob: -7.7396979331970215

Token 98: '_f' (ID: 1337)
  Prédit: '_insert'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_insert' → logprob: -0.9716794490814209
    2. '_added' → logprob: -1.096679449081421
    3. '_' → logprob: -1.971679449081421
    4. '_m' → logprob: -3.721679449081421
    5. '_set' → logprob: -3.846679449081421
    6. '_d' → logprob: -3.846679449081421
    7. '_removed' → logprob: -4.0966796875
    8. '_f' → logprob: -4.2216796875
    9. '_re' → logprob: -4.5966796875
    10. '_sc' → logprob: -4.8466796875

Token 99: 'allen' (ID: 18385)
  Prédit: 'ell'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ell' → logprob: -1.3125674724578857
    2. 'allen' → logprob: -1.3125674724578857
    3. 'all' → logprob: -1.6875674724578857
    4. 'illed' → logprob: -2.0625674724578857
    5. 'alled' → logprob: -2.8125674724578857
    6. 'inished' → logprob: -3.1875674724578857
    7. 'alling' → logprob: -3.4375674724578857
    8. 'ailed' → logprob: -5.437567710876465
    9. 'elled' → logprob: -6.062567710876465
    10. 'alls' → logprob: -6.187567710876465

Token 100: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.00010652327910065651
    2. '(' → logprob: -9.625106811523438
    3. ' (' → logprob: -10.125106811523438
    4. '(
' → logprob: -15.750106811523438
    5. '   ' → logprob: -16.250106811523438
    6. 'self' → logprob: -16.875106811523438
    7. '       ' → logprob: -17.000106811523438
    8. ' self' → logprob: -17.875106811523438
    9. ' ' → logprob: -18.750106811523438
    10. ',' → logprob: -18.875106811523438

Token 101: '):
' (ID: 1883)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00019781860464718193
    2. ' ,' → logprob: -8.625197410583496
    3. 'self' → logprob: -11.375197410583496
    4. '   ' → logprob: -12.500197410583496
    5. '       ' → logprob: -13.875197410583496
    6. ',self' → logprob: -14.125197410583496
    7. '(self' → logprob: -14.875197410583496
    8. ',
' → logprob: -15.250197410583496
    9. '
' → logprob: -16.000198364257812
    10. '  ' → logprob: -16.125198364257812

Token 102: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.17011040449142456
    2. ':' → logprob: -2.7951104640960693
    3. '(' → logprob: -3.1701104640960693
    4. '():' → logprob: -3.2951104640960693
    5. '   ' → logprob: -4.79511022567749
    6. '(self' → logprob: -5.92011022567749
    7. ' :' → logprob: -6.92011022567749
    8. '()' → logprob: -7.04511022567749
    9. ' ' → logprob: -7.42011022567749
    10. ' (' → logprob: -7.67011022567749

Token 103: ' pass' (ID: 1853)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.08688689768314362
    2. 'pass' (adapté à ' pass') → logprob: -2.5868868827819824
    3. ' pass' → logprob: -4.836886882781982
    4. '   ' → logprob: -10.58688735961914
    5. '	pass' → logprob: -11.83688735961914
    6. '     ' → logprob: -14.96188735961914
    7. '      ' → logprob: -15.33688735961914
    8. 'pas' → logprob: -15.71188735961914
    9. '        
' → logprob: -16.21188735961914
    10. '    ' → logprob: -16.96188735961914

Token 104: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.20454606413841248
    2. '<|end|>' → logprob: -2.0795459747314453
    3. '   ' → logprob: -3.5795459747314453
    4. 'class' → logprob: -3.8295459747314453
    5. '    
' → logprob: -5.079545974731445
    6. '\n' → logprob: -6.829545974731445
    7. '<|end|>' → logprob: -6.829545974731445
    8. ' 
' → logprob: -7.204545974731445
    9. '

' → logprob: -7.829545974731445
    10. '    ' → logprob: -8.579545974731445

Token 105: 'class' (ID: 1444)
  Prédit: 'class'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'class' → logprob: -0.04862608388066292
    2. '
' → logprob: -3.048626184463501
    3. '

' → logprob: -10.923625946044922
    4. ' class' → logprob: -11.048625946044922
    5. '
' → logprob: -13.423625946044922
    6. '    
' → logprob: -14.423625946044922
    7. '```' → logprob: -14.423625946044922
    8. '<|end|>' → logprob: -14.423625946044922
    9. '<class' → logprob: -14.673625946044922
    10. '  
' → logprob: -15.048625946044922

Token 106: ' Board' (ID: 10837)
  Prédit: ' Board'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Board' → logprob: -0.033384475857019424
    2. ' Block' → logprob: -4.033384323120117
    3. ' Game' → logprob: -4.408384323120117
    4. ' Puzzle' → logprob: -6.283384323120117
    5. ' ' → logprob: -8.158384323120117
    6. ' T' → logprob: -8.533384323120117
    7. 'Board' → logprob: -8.533384323120117
    8. ' Basic' → logprob: -9.533384323120117
    9. ' Grid' → logprob: -9.658384323120117
    10. ' Match' → logprob: -10.408384323120117

Token 107: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.006644918117672205
    2. '(' → logprob: -5.8816447257995605
    3. '):' → logprob: -5.8816447257995605
    4. '():' → logprob: -7.7566447257995605
    5. 'Change' → logprob: -9.006645202636719
    6. '(object' → logprob: -9.256645202636719
    7. ':
' → logprob: -9.631645202636719
    8. '(Block' → logprob: -9.881645202636719
    9. '(Board' → logprob: -10.256645202636719
    10. 'State' → logprob: -10.381645202636719

Token 108: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.021939678117632866
    2. ':' → logprob: -4.021939754486084
    3. ' def' → logprob: -6.146939754486084
    4. '):' → logprob: -7.396939754486084
    5. 'def' → logprob: -8.021939277648926
    6. ':
' → logprob: -8.771939277648926
    7. '    
' → logprob: -8.771939277648926
    8. ')' → logprob: -8.896939277648926
    9. '    ' → logprob: -9.521939277648926
    10. '):
' → logprob: -10.021939277648926

Token 109: ' WIDTH' (ID: 88792)
  Prédit: ' def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' def' → logprob: -0.050220560282468796
    2. 'def' → logprob: -3.050220489501953
    3. '   ' → logprob: -6.425220489501953
    4. '    ' → logprob: -11.925220489501953
    5. ' ' → logprob: -13.175220489501953
    6. 'de' → logprob: -14.425220489501953
    7. '	def' → logprob: -14.425220489501953
    8. ' de' → logprob: -15.175220489501953
    9. '  ' → logprob: -15.300220489501953
    10. ')' → logprob: -15.425220489501953

Token 110: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.005597410723567009
    2. '=' → logprob: -5.3805975914001465
    3. ':' → logprob: -7.0055975914001465
    4. ' :' → logprob: -10.630597114562988
    5. ',' → logprob: -10.880597114562988
    6. ' ' → logprob: -11.505597114562988
    7. '<|end|>' → logprob: -11.880597114562988
    8. ':int' → logprob: -12.005597114562988
    9. ' ,' → logprob: -13.755597114562988
    10. '   ' → logprob: -13.880597114562988

Token 111: ' ' (ID: 220)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.1913372129201889
    2. ' ' → logprob: -1.81633722782135
    3. '6' → logprob: -5.0663371086120605
    4. '12' → logprob: -5.4413371086120605
    5. '5' → logprob: -8.066337585449219
    6. '8' → logprob: -8.191337585449219
    7. '7' → logprob: -8.691337585449219
    8. '15' → logprob: -10.066337585449219
    9. '9' → logprob: -10.941337585449219
    10. '11' → logprob: -11.066337585449219

Token 112: '5' (ID: 20)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.16981099545955658
    2. '6' → logprob: -1.9198110103607178
    3. '12' → logprob: -5.419810771942139
    4. '8' → logprob: -5.794810771942139
    5. '5' → logprob: -7.169810771942139
    6. ' ' → logprob: -7.669810771942139
    7. '7' → logprob: -7.919810771942139
    8. '9' → logprob: -8.919811248779297
    9. '15' → logprob: -8.919811248779297
    10. '14' → logprob: -9.669811248779297

Token 113: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.001799769583158195
    2. '    
' → logprob: -7.751799583435059
    3. 'HEIGHT' → logprob: -8.001799583435059
    4. '
' → logprob: -8.251799583435059
    5. 'def' → logprob: -8.251799583435059
    6. '<|end|>' → logprob: -8.501799583435059
    7. ' ' → logprob: -9.001799583435059
    8. '  ' → logprob: -10.001799583435059
    9. ' def' → logprob: -10.501799583435059
    10. '0' → logprob: -11.251799583435059

Token 114: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.004058333113789558
    2. '    
' → logprob: -5.629058361053467
    3. 'HEIGHT' → logprob: -8.879057884216309
    4. ' ' → logprob: -9.504057884216309
    5. '
' → logprob: -9.504057884216309
    6. '  ' → logprob: -10.004057884216309
    7. ' HEIGHT' → logprob: -10.129057884216309
    8. '    ' → logprob: -10.379057884216309
    9. '<|end|>' → logprob: -11.254057884216309
    10. '   
' → logprob: -11.379057884216309

Token 115: ' HEIGHT' (ID: 97392)
  Prédit: 'HEIGHT'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'HEIGHT' (adapté à ' HEIGHT') → logprob: -0.002820685738697648
    2. ' HEIGHT' → logprob: -5.8778204917907715
    3. 'HE' → logprob: -12.12782096862793
    4. '_HEIGHT' → logprob: -12.12782096862793
    5. 'def' → logprob: -12.62782096862793
    6. '   ' → logprob: -14.75282096862793
    7. 'WIDTH' → logprob: -14.87782096862793
    8. 'DEP' → logprob: -15.12782096862793
    9. ' ' → logprob: -15.62782096862793
    10. 'height' → logprob: -15.62782096862793

Token 116: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0007108822464942932
    2. '=' → logprob: -7.250710964202881
    3. ' ' → logprob: -15.125710487365723
    4. ':' → logprob: -15.250710487365723
    5. '   ' → logprob: -15.875710487365723
    6. '<|end|>' → logprob: -16.12571144104004
    7. ' =
' → logprob: -16.50071144104004
    8. ' :' → logprob: -18.25071144104004
    9. '<|end|>' → logprob: -18.50071144104004
    10. '=int' → logprob: -18.75071144104004

Token 117: ' ' (ID: 220)
  Prédit: '5'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '5' → logprob: -0.8352683186531067
    2. ' ' → logprob: -0.9602683186531067
    3. '10' → logprob: -1.835268259048462
    4. '6' → logprob: -4.085268497467041
    5. '7' → logprob: -5.460268497467041
    6. '8' → logprob: -6.460268497467041
    7. '20' → logprob: -7.710268497467041
    8. '9' → logprob: -8.210268020629883
    9. '15' → logprob: -8.460268020629883
    10. '12' → logprob: -8.835268020629883

Token 118: '5' (ID: 20)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.32702577114105225
    2. '5' → logprob: -1.4520257711410522
    3. '6' → logprob: -3.577025890350342
    4. '12' → logprob: -4.952025890350342
    5. ' ' → logprob: -5.827025890350342
    6. '15' → logprob: -6.077025890350342
    7. '8' → logprob: -6.202025890350342
    8. '7' → logprob: -7.077025890350342
    9. '20' → logprob: -7.077025890350342
    10. '13' → logprob: -7.827025890350342

Token 119: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.288452684879303
    2. '<|end|>' → logprob: -1.6634526252746582
    3. '   ' → logprob: -3.538452625274658
    4. '    
' → logprob: -4.288452625274658
    5. '<|end|>' → logprob: -4.538452625274658
    6. '

' → logprob: -5.788452625274658
    7. 'def' → logprob: -5.913452625274658
    8. ' def' → logprob: -7.663452625274658
    9. ':' → logprob: -7.913452625274658
    10. '    ' → logprob: -8.038453102111816

Token 120: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.26517122983932495
    2. '
' → logprob: -1.6401712894439697
    3. '    
' → logprob: -3.3901712894439697
    4. 'def' → logprob: -5.390171051025391
    5. ' def' → logprob: -7.765171051025391
    6. '```' → logprob: -9.26517105102539
    7. '

' → logprob: -10.26517105102539
    8. '\n' → logprob: -10.39017105102539
    9. '<|end|>' → logprob: -10.76517105102539
    10. '  
' → logprob: -10.76517105102539

Token 121: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -6.73052782076411e-05
    2. ' def' → logprob: -9.625067710876465
    3. '   ' → logprob: -14.250067710876465
    4. 'de' → logprob: -15.000067710876465
    5. '_def' → logprob: -17.25006675720215
    6. 'BLOCK' → logprob: -17.75006675720215
    7. '@' → logprob: -18.00006675720215
    8. 'block' → logprob: -18.12506675720215
    9. 'EMPTY' → logprob: -18.12506675720215
    10. '	def' → logprob: -18.25006675720215

Token 122: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.000847267743665725
    2. ' def' → logprob: -7.750847339630127
    3. ' ' → logprob: -8.875846862792969
    4. ' _' → logprob: -9.000846862792969
    5. '_' → logprob: -10.000846862792969
    6. '_init' → logprob: -10.000846862792969
    7. ' init' → logprob: -10.875846862792969
    8. ' ‌' → logprob: -11.125846862792969
    9. ' initialize' → logprob: -12.125846862792969
    10. '__' → logprob: -12.125846862792969

Token 123: 'init' (ID: 3287)
  Prédit: 'init'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: -1.2664456789934775e-06
    2. 'it' → logprob: -14.625000953674316
    3. 'nit' → logprob: -15.375000953674316
    4. 'ini' → logprob: -15.500000953674316
    5. 'int' → logprob: -15.625000953674316
    6. '   ' → logprob: -16.000001907348633
    7. 'in' → logprob: -17.875001907348633
    8. ' init' → logprob: -18.125001907348633
    9. 'innit' → logprob: -18.375001907348633
    10. 'iter' → logprob: -18.625001907348633

Token 124: '__(' (ID: 8241)
  Prédit: '__('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.001179989194497466
    2. '__' → logprob: -6.751180171966553
    3. '__(
' → logprob: -11.876179695129395
    4. '__((' → logprob: -13.501179695129395
    5. '__('' → logprob: -13.751179695129395
    6. '(self' → logprob: -16.12618064880371
    7. '__(*' → logprob: -16.37618064880371
    8. '__("' → logprob: -16.75118064880371
    9. '___' → logprob: -17.75118064880371
    10. '__[' → logprob: -18.12618064880371

Token 125: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.004107727203518152
    2. ' self' → logprob: -5.50410795211792
    3. ')' → logprob: -10.754107475280762
    4. '
' → logprob: -12.629107475280762
    5. '   ' → logprob: -13.254107475280762
    6. ' ' → logprob: -13.504107475280762
    7. '):
' → logprob: -14.629107475280762
    8. '       ' → logprob: -15.254107475280762
    9. '  ' → logprob: -15.254107475280762
    10. '(self' → logprob: -15.379107475280762

Token 126: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.08166632056236267
    2. '):' → logprob: -2.5816662311553955
    3. ' ,' → logprob: -6.581666469573975
    4. ' ):' → logprob: -6.831666469573975
    5. 'self' → logprob: -8.956665992736816
    6. '):
' → logprob: -9.081665992736816
    7. ')' → logprob: -10.956665992736816
    8. ':' → logprob: -11.456665992736816
    9. '   ' → logprob: -11.706665992736816
    10. ' self' → logprob: -12.206665992736816

Token 127: ' grid' (ID: 10586)
  Prédit: ' block'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' block' → logprob: -1.7138108015060425
    2. ' board' → logprob: -1.7138108015060425
    3. ' blocks' → logprob: -1.7138108015060425
    4. ' grid' → logprob: -2.088810920715332
    5. ' initial' → logprob: -2.463810920715332
    6. 'block' → logprob: -2.713810920715332
    7. 'blocks' → logprob: -2.838810920715332
    8. 'grid' → logprob: -2.838810920715332
    9. 'board' → logprob: -3.088810920715332
    10. 'initial' → logprob: -4.213810920715332

Token 128: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0002266622323077172
    2. '):' → logprob: -8.500226974487305
    3. ' :' → logprob: -10.875226974487305
    4. ' ):' → logprob: -13.250226974487305
    5. '_:' → logprob: -14.125226974487305
    6. '=None' → logprob: -14.375226974487305
    7. ')' → logprob: -14.625226974487305
    8. '=' → logprob: -15.625226974487305
    9. '):
' → logprob: -16.000226974487305
    10. ':[[' → logprob: -16.125226974487305

Token 129: ' List' (ID: 2655)
  Prédit: ' List'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' List' → logprob: -0.022175226360559464
    2. 'List' → logprob: -4.147175312042236
    3. ' Optional' → logprob: -5.147175312042236
    4. 'Optional' → logprob: -8.397174835205078
    5. ' ' → logprob: -10.022174835205078
    6. '   ' → logprob: -10.897174835205078
    7. '[List' → logprob: -11.522174835205078
    8. ')' → logprob: -12.897174835205078
    9. '	List' → logprob: -13.022174835205078
    10. '  ' → logprob: -13.647174835205078

Token 130: '[List' (ID: 113982)
  Prédit: '[List'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[List' → logprob: -4.3226136767771095e-05
    2. '[' → logprob: -10.125042915344238
    3. '[int' → logprob: -12.750042915344238
    4. '[[' → logprob: -16.375043869018555
    5. '[
' → logprob: -16.875043869018555
    6. '<List' → logprob: -17.000043869018555
    7. '[str' → logprob: -18.250043869018555
    8. 'List' → logprob: -18.875043869018555
    9. ')' → logprob: -19.625043869018555
    10. '[list' → logprob: -19.625043869018555

Token 131: '[int' (ID: 40124)
  Prédit: '[int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[int' → logprob: -0.31330910325050354
    2. '[' → logprob: -1.3133090734481812
    3. '[str' → logprob: -10.438308715820312
    4. '[Int' → logprob: -12.188308715820312
    5. 'Optional' → logprob: -12.938308715820312
    6. 'int' → logprob: -12.938308715820312
    7. ' [' → logprob: -13.063308715820312
    8. '   ' → logprob: -13.438308715820312
    9. '[List' → logprob: -13.563308715820312
    10. '[
' → logprob: -14.563308715820312

Token 132: ']],' (ID: 37171)
  Prédit: ']]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']]' → logprob: -0.0015348586020991206
    2. ']])' → logprob: -6.501534938812256
    3. ']],' → logprob: -10.876534461975098
    4. ' ]' → logprob: -12.001534461975098
    5. ']' → logprob: -12.626534461975098
    6. ']]]' → logprob: -13.626534461975098
    7. ']]:
' → logprob: -14.126534461975098
    8. ' ]]' → logprob: -14.626534461975098
    9. ']):' → logprob: -14.751534461975098
    10. '[' → logprob: -15.251534461975098

Token 133: ' block' (ID: 4355)
  Prédit: ' block'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' block' → logprob: -0.06851048767566681
    2. 'block' → logprob: -2.8185105323791504
    3. ' listener' → logprob: -6.44351053237915
    4. ' blocks' → logprob: -6.56851053237915
    5. ' types' → logprob: -7.31851053237915
    6. ' change' → logprob: -7.56851053237915
    7. ' listeners' → logprob: -7.69351053237915
    8. 'listener' → logprob: -7.94351053237915
    9. 'listeners' → logprob: -8.193510055541992
    10. 'types' → logprob: -8.193510055541992

Token 134: '_scores' (ID: 63345)
  Prédit: '_types'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_types' → logprob: -4.0126840758603066e-05
    2. 'types' → logprob: -10.625040054321289
    3. '_type' → logprob: -12.125040054321289
    4. 'Types' → logprob: -12.375040054321289
    5. 's' → logprob: -12.750040054321289
    6. '_scores' → logprob: -14.000040054321289
    7. '_blocks' → logprob: -14.875040054321289
    8. '_sizes' → logprob: -15.000040054321289
    9. '_TYPES' → logprob: -15.125040054321289
    10. '   ' → logprob: -15.500040054321289

Token 135: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -1.27099974633893e-05
    2. ' :' → logprob: -11.500012397766113
    3. '):' → logprob: -14.250012397766113
    4. '_:' → logprob: -14.250012397766113
    5. '=' → logprob: -14.500012397766113
    6. '   ' → logprob: -15.875012397766113
    7. ']:' → logprob: -16.12501335144043
    8. ')' → logprob: -16.50001335144043
    9. ' ' → logprob: -16.75001335144043
    10. '：' → logprob: -16.87501335144043

Token 136: ' Dict' (ID: 55179)
  Prédit: 'Dict'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Dict' → logprob: -0.07006703317165375
    2. ' Dict' → logprob: -2.6950669288635254
    3. 'List' → logprob: -9.320067405700684
    4. ' ' → logprob: -10.695067405700684
    5. '   ' → logprob: -11.945067405700684
    6. ' List' → logprob: -12.070067405700684
    7. '  ' → logprob: -13.195067405700684
    8. 'dict' → logprob: -13.445067405700684
    9. ')' → logprob: -13.945067405700684
    10. ' dict' → logprob: -14.445067405700684

Token 137: '[int' (ID: 40124)
  Prédit: '[int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[int' → logprob: -0.001036383560858667
    2. '[' → logprob: -6.876036167144775
    3. '[Int' → logprob: -14.001036643981934
    4. 'int' → logprob: -14.251036643981934
    5. '[str' → logprob: -14.751036643981934
    6. '<int' → logprob: -15.001036643981934
    7. ' [' → logprob: -15.126036643981934
    8. '[in' → logprob: -15.126036643981934
    9. '   ' → logprob: -16.001035690307617
    10. ')' → logprob: -16.251035690307617

Token 138: ',int' (ID: 20909)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0013129746075719595
    2. ',int' → logprob: -6.751313209533691
    3. ' ,' → logprob: -8.876313209533691
    4. '[int' → logprob: -13.751313209533691
    5. 'int' → logprob: -14.251313209533691
    6. '   ' → logprob: -14.751313209533691
    7. ',
' → logprob: -15.626313209533691
    8. '])' → logprob: -16.001312255859375
    9. ':int' → logprob: -16.251312255859375
    10. '       ' → logprob: -16.251312255859375

Token 139: ']):
' (ID: 51989)
  Prédit: ']):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']):' → logprob: -0.1007717028260231
    2. ']):
' → logprob: -2.47577166557312
    3. ']' → logprob: -4.600771903991699
    4. '])' → logprob: -6.475771903991699
    5. '],' → logprob: -9.1007719039917
    6. ']]' → logprob: -11.1007719039917
    7. '>):' → logprob: -11.1007719039917
    8. ')' → logprob: -11.4757719039917
    9. '):' → logprob: -11.9757719039917
    10. ']=' → logprob: -12.6007719039917

Token 140: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2542169690132141
    2. ':' → logprob: -1.5042169094085693
    3. ':
' → logprob: -7.004217147827148
    4. '):' → logprob: -7.004217147827148
    5. '):
' → logprob: -8.379217147827148
    6. ',' → logprob: -8.504217147827148
    7. ')' → logprob: -11.129217147827148
    8. '():' → logprob: -11.879217147827148
    9. '   ' → logprob: -12.254217147827148
    10. ' :' → logprob: -13.379217147827148

Token 141: ' self' (ID: 1051)
  Prédit: ' self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.6099256873130798
    2. 'self' (adapté à ' self') → logprob: -1.3599257469177246
    3. '       ' → logprob: -1.6099257469177246
    4. ' ' → logprob: -11.359925270080566
    5. '   ' → logprob: -11.484925270080566
    6. '	self' → logprob: -12.859925270080566
    7. '      ' → logprob: -14.234925270080566
    8. '     ' → logprob: -14.734925270080566
    9. ' ' → logprob: -16.109926223754883
    10. '(self' → logprob: -16.359926223754883

Token 142: '.grid' (ID: 19269)
  Prédit: '.grid'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.grid' → logprob: -0.027016358450055122
    2. '.' → logprob: -3.7770164012908936
    3. ' .' → logprob: -5.6520161628723145
    4. '._' → logprob: -8.402016639709473
    5. '.block' → logprob: -11.527016639709473
    6. '.Grid' → logprob: -12.277016639709473
    7. '.py' → logprob: -13.152016639709473
    8. '.initial' → logprob: -13.402016639709473
    9. 'grid' → logprob: -13.527016639709473
    10. '.current' → logprob: -13.902016639709473

Token 143: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.014165629632771015
    2. '=' → logprob: -4.26416540145874
    3. ' ' → logprob: -13.389165878295898
    4. '   ' → logprob: -15.264165878295898
    5. ':' → logprob: -16.1391658782959
    6. '    ' → logprob: -16.5141658782959
    7. ' =[' → logprob: -17.5141658782959
    8. '[:]' → logprob: -18.0141658782959
    9. '＝' → logprob: -18.5141658782959
    10. '  ' → logprob: -18.7641658782959

Token 144: ' deepcopy' (ID: 130230)
  Prédit: ' deepcopy'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' deepcopy' → logprob: -0.23634475469589233
    2. 'deep' → logprob: -1.611344814300537
    3. ' [' → logprob: -5.361344814300537
    4. ' deep' → logprob: -5.861344814300537
    5. '[' → logprob: -5.986344814300537
    6. 'grid' → logprob: -7.861344814300537
    7. ' grid' → logprob: -7.986344814300537
    8. 'dee' → logprob: -10.361344337463379
    9. '.deepcopy' → logprob: -10.611344337463379
    10. ' ' → logprob: -11.861344337463379

Token 145: '(grid' (ID: 51818)
  Prédit: '(grid'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(grid' → logprob: -1.5048530030981055e-06
    2. '(' → logprob: -13.500001907348633
    3. '(Grid' → logprob: -18.375001907348633
    4. ' (' → logprob: -18.625001907348633
    5. 'grid' → logprob: -19.125001907348633
    6. '(gr' → logprob: -19.875001907348633
    7. '(graph' → logprob: -20.125001907348633
    8. ':grid' → logprob: -20.250001907348633
    9. '(
' → logprob: -20.625001907348633
    10. ' grid' → logprob: -21.000001907348633

Token 146: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.03805365785956383
    2. ')
' → logprob: -3.2880537509918213
    3. '       ' → logprob: -11.913053512573242
    4. ' )' → logprob: -12.913053512573242
    5. ' )
' → logprob: -13.663053512573242
    6. ')
' → logprob: -13.913053512573242
    7. ')

' → logprob: -14.538053512573242
    8. '),' → logprob: -15.788053512573242
    9. '   ' → logprob: -16.288053512573242
    10. ',' → logprob: -16.913053512573242

Token 147: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.003279906464740634
    2. '
' → logprob: -5.753279685974121
    3. ' self' → logprob: -9.878279685974121
    4. 'self' → logprob: -10.378279685974121
    5. '        
' → logprob: -11.378279685974121
    6. '<|end|>' → logprob: -12.628279685974121
    7. '   ' → logprob: -13.378279685974121
    8. ' ' → logprob: -14.128279685974121
    9. ',' → logprob: -14.503279685974121
    10. '      ' → logprob: -14.753279685974121

Token 148: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.00017243190086446702
    2. ' self' → logprob: -8.87517261505127
    3. '       ' → logprob: -10.37517261505127
    4. 'block' → logprob: -14.00017261505127
    5. '   ' → logprob: -15.62517261505127
    6. 'for' → logprob: -16.500171661376953
    7. '
' → logprob: -16.625171661376953
    8. '	self' → logprob: -16.750171661376953
    9. '        
' → logprob: -17.750171661376953
    10. '[self' → logprob: -18.750171661376953

Token 149: '.block' (ID: 27323)
  Prédit: '.block'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.block' → logprob: -0.004523873329162598
    2. '.' → logprob: -6.379523754119873
    3. ' .' → logprob: -6.504523754119873
    4. '.s' → logprob: -7.879523754119873
    5. '.score' → logprob: -8.004524230957031
    6. 'block' → logprob: -8.629524230957031
    7. '.grid' → logprob: -8.754524230957031
    8. '._' → logprob: -9.254524230957031
    9. '.blocks' → logprob: -9.629524230957031
    10. '.Block' → logprob: -10.504524230957031

Token 150: '_scores' (ID: 63345)
  Prédit: '_scores'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_scores' → logprob: -1.0206720617134124e-05
    2. '_' → logprob: -12.37501049041748
    3. '_types' → logprob: -12.87501049041748
    4. 'scores' → logprob: -13.75001049041748
    5. '_sizes' → logprob: -14.25001049041748
    6. '_type' → logprob: -14.75001049041748
    7. ' _' → logprob: -15.37501049041748
    8. '_score' → logprob: -15.37501049041748
    9. '_s' → logprob: -15.62501049041748
    10. 's' → logprob: -16.250009536743164

Token 151: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.693162202835083
    2. ' =' → logprob: -0.693162202835083
    3. ')' → logprob: -11.693161964416504
    4. ' ' → logprob: -12.318161964416504
    5. '   ' → logprob: -14.818161964416504
    6. '.copy' → logprob: -15.193161964416504
    7. '  ' → logprob: -15.318161964416504
    8. '[' → logprob: -15.443161964416504
    9. ' )' → logprob: -15.818161964416504
    10. ',' → logprob: -15.943161964416504

Token 152: ' block' (ID: 4355)
  Prédit: 'block'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'block' → logprob: -0.01652647741138935
    2. 'deep' → logprob: -4.766526699066162
    3. ' block' → logprob: -4.891526699066162
    4. ' deepcopy' → logprob: -8.391526222229004
    5. '{' → logprob: -9.141526222229004
    6. 'dict' → logprob: -11.391526222229004
    7. ' deep' → logprob: -11.391526222229004
    8. '	block' → logprob: -12.766526222229004
    9. 'de' → logprob: -13.141526222229004
    10. 'bloc' → logprob: -13.391526222229004

Token 153: '_scores' (ID: 63345)
  Prédit: '_scores'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_scores' → logprob: -5.0020742492051795e-05
    2. 'scores' → logprob: -10.125049591064453
    3. 'lock' → logprob: -12.500049591064453
    4. 'ock' → logprob: -12.625049591064453
    5. 'block' → logprob: -14.250049591064453
    6. 'Scores' → logprob: -14.750049591064453
    7. 'or' → logprob: -14.750049591064453
    8. 'score' → logprob: -15.000049591064453
    9. 'r' → logprob: -15.000049591064453
    10. 'ar' → logprob: -15.375049591064453

Token 154: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 155: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 156: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.002004888141527772
    2. ' self' → logprob: -6.377005100250244
    3. '       ' → logprob: -8.752004623413086
    4. 'for' → logprob: -9.502004623413086
    5. '   ' → logprob: -10.127004623413086
    6. '
' → logprob: -10.877004623413086
    7. '#' → logprob: -12.002004623413086
    8. 'def' → logprob: -14.002004623413086
    9. ' ' → logprob: -14.502004623413086
    10. ' for' → logprob: -14.752004623413086

Token 157: '.b' (ID: 1292)
  Prédit: ' .'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' .' → logprob: -0.9966718554496765
    2. '.' → logprob: -1.1216719150543213
    3. '._' → logprob: -1.4966719150543213
    4. '.score' → logprob: -3.7466719150543213
    5. '.block' → logprob: -4.121671676635742
    6. '.blocks' → logprob: -5.121671676635742
    7. '.current' → logprob: -5.621671676635742
    8. '.rows' → logprob: -5.871671676635742
    9. '.positions' → logprob: -5.871671676635742
    10. '.grid' → logprob: -5.871671676635742

Token 158: 'onus' (ID: 68752)
  Prédit: 'lock'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'lock' → logprob: -0.31656354665756226
    2. 'oard' → logprob: -1.316563606262207
    3. 'locks' → logprob: -6.941563606262207
    4. 'listeners' → logprob: -7.066563606262207
    5. '_lock' → logprob: -7.316563606262207
    6. 'locked' → logprob: -7.441563606262207
    7. 'uffer' → logprob: -10.316563606262207
    8. 'roadcast' → logprob: -10.316563606262207
    9. 'Listeners' → logprob: -11.066563606262207
    10. 'lur' → logprob: -11.316563606262207

Token 159: ' =' (ID: 314)
  Prédit: '_multiplier'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_multiplier' → logprob: -0.9484544992446899
    2. '_score' → logprob: -1.19845449924469
    3. '_points' → logprob: -1.69845449924469
    4. '_positions' → logprob: -3.1984543800354004
    5. ' =' → logprob: -3.3234543800354004
    6. '_active' → logprob: -4.6984543800354
    7. '_scores' → logprob: -4.8234543800354
    8. '_chain' → logprob: -4.8234543800354
    9. '_available' → logprob: -5.6984543800354
    10. '_counter' → logprob: -5.8234543800354

Token 160: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.012756374664604664
    2. ' ' → logprob: -4.38775634765625
    3. '{}' → logprob: -9.13775634765625
    4. '[]' → logprob: -10.13775634765625
    5. '1' → logprob: -10.26275634765625
    6. '10' → logprob: -11.13775634765625
    7. 'False' → logprob: -11.26275634765625
    8. '100' → logprob: -11.51275634765625
    9. 'None' → logprob: -12.13775634765625
    10. ' []' → logprob: -12.51275634765625

Token 161: '1' (ID: 16)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.007244772277772427
    2. '1' → logprob: -5.75724458694458
    3. '100' → logprob: -6.38224458694458
    4. 'False' → logprob: -7.38224458694458
    5. '10' → logprob: -7.50724458694458
    6. '25' → logprob: -8.632245063781738
    7. 'None' → logprob: -8.882245063781738
    8. '5' → logprob: -9.007245063781738
    9. '{}' → logprob: -9.132245063781738
    10. '50' → logprob: -9.257245063781738

Token 162: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.2119200974702835
    2. '<|end|>' → logprob: -1.711920142173767
    3. '       ' → logprob: -4.586920261383057
    4. '   ' → logprob: -9.586919784545898
    5. '<|end|>' → logprob: -9.711919784545898
    6. ' self' → logprob: -10.211919784545898
    7. '    
' → logprob: -11.211919784545898
    8. 'self' → logprob: -11.336919784545898
    9. '
' → logprob: -11.461919784545898
    10. ' 
' → logprob: -11.586919784545898

Token 163: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 164: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.12929993867874146
    2. '       ' → logprob: -2.7542998790740967
    3. ' self' → logprob: -2.8792998790740967
    4. '   ' → logprob: -6.879300117492676
    5. 'def' → logprob: -8.129300117492676
    6. ' ' → logprob: -10.129300117492676
    7. '  ' → logprob: -10.629300117492676
    8. '      ' → logprob: -10.754300117492676
    9. '	self' → logprob: -10.754300117492676
    10. '    ' → logprob: -11.754300117492676

Token 165: '.total' (ID: 23374)
  Prédit: '.listeners'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.listeners' → logprob: -0.37542539834976196
    2. '.score' → logprob: -2.750425338745117
    3. '.board' → logprob: -2.875425338745117
    4. '.block' → logprob: -3.125425338745117
    5. '.blocks' → logprob: -3.875425338745117
    6. '._' → logprob: -4.000425338745117
    7. '.positions' → logprob: -4.000425338745117
    8. '.current' → logprob: -4.125425338745117
    9. '.listener' → logprob: -4.250425338745117
    10. '.' → logprob: -4.375425338745117

Token 166: '_score' (ID: 22555)
  Prédit: '_score'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_score' → logprob: -0.0013694037916138768
    2. '_points' → logprob: -7.376369476318359
    3. 'score' → logprob: -7.501369476318359
    4. '_scores' → logprob: -9.50136947631836
    5. '_' → logprob: -10.00136947631836
    6. '_bonus' → logprob: -10.75136947631836
    7. '_removed' → logprob: -11.00136947631836
    8. '_blocks' → logprob: -11.25136947631836
    9. 'Score' → logprob: -12.37636947631836
    10. '_moves' → logprob: -13.25136947631836

Token 167: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.12693870067596436
    2. '=' → logprob: -2.126938819885254
    3. ' ' → logprob: -11.501938819885254
    4. ':' → logprob: -14.501938819885254
    5. '  ' → logprob: -17.251937866210938
    6. '   ' → logprob: -17.501937866210938
    7. '.' → logprob: -18.626937866210938
    8. ':int' → logprob: -18.876937866210938
    9. ')' → logprob: -19.001937866210938
    10. '=int' → logprob: -19.001937866210938

Token 168: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0004306692280806601
    2. ' ' → logprob: -7.750430583953857
    3. ' ' → logprob: -19.125431060791016
    4. '۰' → logprob: -19.750431060791016
    5. '<|end|>' → logprob: -20.625431060791016
    6. '   ' → logprob: -20.875431060791016
    7. '00' → logprob: -21.750431060791016
    8. '  ' → logprob: -22.000431060791016
    9. '```' → logprob: -22.125431060791016
    10. ' ' → logprob: -22.437931060791016

Token 169: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -4.0126840758603066e-05
    2. ' ' → logprob: -10.125040054321289
    3. '   ' → logprob: -20.00004005432129
    4. '  ' → logprob: -21.50004005432129
    5. '00' → logprob: -21.87504005432129
    6. '000' → logprob: -22.25004005432129
    7. ' ' → logprob: -22.25004005432129
    8. '۰' → logprob: -22.37504005432129
    9. '       ' → logprob: -22.75004005432129
    10. '    ' → logprob: -23.37504005432129

Token 170: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.007331871893256903
    2. '
' → logprob: -5.132331848144531
    3. '<|end|>' → logprob: -6.632331848144531
    4. ' self' → logprob: -10.507331848144531
    5. 'self' → logprob: -11.007331848144531
    6. '   ' → logprob: -11.507331848144531
    7. ',' → logprob: -11.507331848144531
    8. '<|end|>' → logprob: -11.882331848144531
    9. '        
' → logprob: -12.882331848144531
    10. ' ' → logprob: -13.007331848144531

Token 171: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 172: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.34111887216567993
    2. '       ' → logprob: -1.7161188125610352
    3. ' self' → logprob: -2.216118812561035
    4. '   ' → logprob: -9.216118812561035
    5. '	self' → logprob: -9.841118812561035
    6. ' ' → logprob: -10.841118812561035
    7. 'def' → logprob: -11.091118812561035
    8. '      ' → logprob: -11.216118812561035
    9. '  ' → logprob: -11.841118812561035
    10. '
' → logprob: -12.091118812561035

Token 173: '.listener' (ID: 88396)
  Prédit: '._'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '._' → logprob: -0.4376111924648285
    2. '.listeners' → logprob: -1.8126112222671509
    3. 'listeners' → logprob: -1.9376112222671509
    4. '.' → logprob: -4.187611103057861
    5. '_listener' → logprob: -5.437611103057861
    6. '.board' → logprob: -5.687611103057861
    7. '.blocks' → logprob: -5.687611103057861
    8. 'Listeners' → logprob: -5.812611103057861
    9. '_list' → logprob: -5.937611103057861
    10. ' .' → logprob: -5.937611103057861

Token 174: ':' (ID: 25)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.3878307342529297
    2. ' =' → logprob: -1.1378307342529297
    3. '=None' → logprob: -7.01283073425293
    4. ':' → logprob: -9.88783073425293
    5. ' None' → logprob: -12.76283073425293
    6. 's' → logprob: -13.26283073425293
    7. 'None' → logprob: -13.38783073425293
    8. '<|end|>' → logprob: -13.63783073425293
    9. ' ' → logprob: -15.13783073425293
    10. '=null' → logprob: -15.26283073425293

Token 175: ' Optional' (ID: 19351)
  Prédit: 'Optional'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Optional' → logprob: -0.07889672368764877
    2. ' Optional' → logprob: -2.5788967609405518
    3. '	Optional' → logprob: -11.953896522521973
    4. 'Board' → logprob: -14.828896522521973
    5. '(Optional' → logprob: -16.07889747619629
    6. '   ' → logprob: -16.82889747619629
    7. ' Board' → logprob: -17.45389747619629
    8. '.Optional' → logprob: -18.45389747619629
    9. ' ' → logprob: -19.20389747619629
    10. 'Opt' → logprob: -19.32889747619629

Token 176: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -1.27099974633893e-05
    2. '[
' → logprob: -11.375012397766113
    3. '[List' → logprob: -15.125012397766113
    4. '=' → logprob: -15.875012397766113
    5. 'Board' → logprob: -16.12501335144043
    6. '[Serialize' → logprob: -16.12501335144043
    7. ' [' → logprob: -16.37501335144043
    8. '['' → logprob: -16.62501335144043
    9. '[Index' → logprob: -16.62501335144043
    10. '<|end|>' → logprob: -16.75001335144043

Token 177: 'Board' (ID: 14558)
  Prédit: 'Board'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Board' → logprob: -7.493430894101039e-05
    2. ' Board' → logprob: -9.500075340270996
    3. '[' → logprob: -18.12507438659668
    4. 'Block' → logprob: -18.25007438659668
    5. '.Board' → logprob: -21.37507438659668
    6. 'List' → logprob: -21.50007438659668
    7. 'Boards' → logprob: -21.50007438659668
    8. '_board' → logprob: -21.62507438659668
    9. '(Board' → logprob: -21.75007438659668
    10. 'board' → logprob: -21.87507438659668

Token 178: 'Change' (ID: 4836)
  Prédit: 'Change'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Change' → logprob: -5.676981345459353e-06
    2. 'Listener' → logprob: -12.750005722045898
    3. '[' → logprob: -13.625005722045898
    4. 'change' → logprob: -15.000005722045898
    5. '.Change' → logprob: -15.250005722045898
    6. ')' → logprob: -15.375005722045898
    7. ' Change' → logprob: -15.875005722045898
    8. '_CHANGE' → logprob: -16.0000057220459
    9. '_change' → logprob: -16.2500057220459
    10. 'Changer' → logprob: -16.5000057220459

Token 179: 'Listener' (ID: 3466)
  Prédit: 'Listener'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Listener' → logprob: -1.9361264946837764e-07
    2. 'List' → logprob: -17.125
    3. ' Listener' → logprob: -17.125
    4. 'listener' → logprob: -17.625
    5. 'Listen' → logprob: -18.375
    6. '_listener' → logprob: -19.125
    7. '.Listener' → logprob: -19.875
    8. 'Listeners' → logprob: -20.0
    9. 'Observer' → logprob: -20.5
    10. 'Liste' → logprob: -20.75

Token 180: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -2.0339031834737398e-05
    2. ' ]' → logprob: -10.875020027160645
    3. ']=' → logprob: -14.250020027160645
    4. ')' → logprob: -14.250020027160645
    5. '`]' → logprob: -16.62502098083496
    6. '])' → logprob: -17.25002098083496
    7. '[' → logprob: -17.37502098083496
    8. '']' → logprob: -17.62502098083496
    9. ']
' → logprob: -18.75002098083496
    10. '"]' → logprob: -19.37502098083496

Token 181: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.07891997694969177
    2. ' =' → logprob: -2.5789198875427246
    3. '=None' → logprob: -10.453920364379883
    4. ' ' → logprob: -13.578920364379883
    5. 'None' → logprob: -16.578920364379883
    6. ' None' → logprob: -17.203920364379883
    7. '  ' → logprob: -18.328920364379883
    8. '   ' → logprob: -18.453920364379883
    9. '=null' → logprob: -18.578920364379883
    10. '＝' → logprob: -19.328920364379883

Token 182: ' None' (ID: 4662)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -0.4740770161151886
    2. ' None' → logprob: -0.9740769863128662
    3. '(None' → logprob: -17.599077224731445
    4. '_None' → logprob: -17.724077224731445
    5. '=None' → logprob: -18.349077224731445
    6. ',None' → logprob: -19.724077224731445
    7. '   ' → logprob: -21.474077224731445
    8. 'none' → logprob: -21.724077224731445
    9. '.None' → logprob: -21.849077224731445
    10. '_none' → logprob: -22.099077224731445

Token 183: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 184: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.17230625450611115
    2. '   ' → logprob: -2.0473062992095947
    3. '<|end|>' → logprob: -4.172306060791016
    4. '    
' → logprob: -4.422306060791016
    5. 'def' → logprob: -7.422306060791016
    6. ' 
' → logprob: -7.547306060791016
    7. '  
' → logprob: -8.172306060791016
    8. '<|end|>' → logprob: -8.797306060791016
    9. ' def' → logprob: -9.422306060791016
    10. '        
' → logprob: -9.797306060791016

Token 185: ' def' (ID: 1056)
  Prédit: ' def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' def' → logprob: -0.3702329695224762
    2. 'def' (adapté à ' def') → logprob: -1.2452329397201538
    3. '   ' → logprob: -3.8702330589294434
    4. '    
' → logprob: -7.995233058929443
    5. '
' → logprob: -8.120232582092285
    6. ' 
' → logprob: -10.870232582092285
    7. ' ' → logprob: -11.245232582092285
    8. '	def' → logprob: -11.370232582092285
    9. '  
' → logprob: -12.370232582092285
    10. '    ' → logprob: -12.745232582092285

Token 186: ' set' (ID: 920)
  Prédit: ' set'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' set' → logprob: -0.012774262577295303
    2. 'set' → logprob: -4.762774467468262
    3. '_set' → logprob: -6.887774467468262
    4. ' is' → logprob: -7.012774467468262
    5. ' def' → logprob: -7.512774467468262
    6. ' place' → logprob: -8.137774467468262
    7. 'def' → logprob: -8.137774467468262
    8. ' reset' → logprob: -8.262774467468262
    9. '_' → logprob: -8.387774467468262
    10. ' register' → logprob: -8.512774467468262

Token 187: '_listener' (ID: 114638)
  Prédit: '_listener'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_listener' → logprob: -0.018163053318858147
    2. '_' → logprob: -4.018163204193115
    3. '_board' → logprob: -12.018162727355957
    4. 'listener' → logprob: -12.643162727355957
    5. 'Listener' → logprob: -12.893162727355957
    6. ' _' → logprob: -14.768162727355957
    7. '```' → logprob: -14.893162727355957
    8. '__' → logprob: -15.893162727355957
    9. '_list' → logprob: -16.518163681030273
    10. ' listener' → logprob: -16.893163681030273

Token 188: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -9.729906196298543e-06
    2. '(' → logprob: -11.750009536743164
    3. ' (' → logprob: -13.250009536743164
    4. 'self' → logprob: -18.875009536743164
    5. '(
' → logprob: -19.125009536743164
    6. '(sel' → logprob: -19.375009536743164
    7. '(s' → logprob: -20.125009536743164
    8. ' ' → logprob: -20.625009536743164
    9. ' self' → logprob: -20.750009536743164
    10. '   ' → logprob: -21.250009536743164

Token 189: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.9385402993066236e-05
    2. ' ,' → logprob: -11.000019073486328
    3. 'self' → logprob: -13.000019073486328
    4. ',self' → logprob: -15.250019073486328
    5. ',
' → logprob: -16.500019073486328
    6. '(self' → logprob: -16.750019073486328
    7. '

' → logprob: -18.750019073486328
    8. ')' → logprob: -18.875019073486328
    9. '
' → logprob: -20.125019073486328
    10. '       ' → logprob: -20.125019073486328

Token 190: ' listener' (ID: 19715)
  Prédit: ' listener'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' listener' → logprob: -0.011048882268369198
    2. 'listener' → logprob: -4.511048793792725
    3. '(listener' → logprob: -13.761049270629883
    4. '_listener' → logprob: -17.511049270629883
    5. '.listener' → logprob: -17.636049270629883
    6. 'Listener' → logprob: -17.886049270629883
    7. ' l' → logprob: -18.761049270629883
    8. ' self' → logprob: -18.761049270629883
    9. ' ' → logprob: -19.261049270629883
    10. 'self' → logprob: -19.636049270629883

Token 191: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.064460389316082
    2. '):' → logprob: -2.814460277557373
    3. ')' → logprob: -6.189460277557373
    4. 'self' → logprob: -8.814460754394531
    5. ' :' → logprob: -9.564460754394531
    6. ' ):' → logprob: -9.564460754394531
    7. '(self' → logprob: -9.814460754394531
    8. ' ' → logprob: -10.314460754394531
    9. '   ' → logprob: -11.189460754394531
    10. '):
' → logprob: -11.439460754394531

Token 192: ' Board' (ID: 10837)
  Prédit: ' Board'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Board' → logprob: -0.07922574132680893
    2. 'Board' → logprob: -2.579225778579712
    3. ' Optional' → logprob: -8.329225540161133
    4. ')' → logprob: -9.954225540161133
    5. 'Optional' → logprob: -10.704225540161133
    6. ' ' → logprob: -11.454225540161133
    7. ' )' → logprob: -11.454225540161133
    8. ' board' → logprob: -13.329225540161133
    9. '(Board' → logprob: -13.954225540161133
    10. '_board' → logprob: -15.954225540161133

Token 193: 'Change' (ID: 4836)
  Prédit: 'Change'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Change' → logprob: -5.676981345459353e-06
    2. 'Listener' → logprob: -12.750005722045898
    3. '.Change' → logprob: -13.875005722045898
    4. ')' → logprob: -13.875005722045898
    5. '_CHANGE' → logprob: -15.375005722045898
    6. ' Change' → logprob: -15.750005722045898
    7. 'change' → logprob: -16.1250057220459
    8. '   ' → logprob: -16.2500057220459
    9. '_change' → logprob: -16.7500057220459
    10. 'Changer' → logprob: -17.1250057220459

Token 194: 'Listener' (ID: 3466)
  Prédit: 'Listener'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Listener' → logprob: -6.704273118884885e-07
    2. 'listener' → logprob: -15.000000953674316
    3. '_listener' → logprob: -16.125
    4. ' Listener' → logprob: -16.375
    5. '.Listener' → logprob: -18.0
    6. ')' → logprob: -18.0
    7. 'List' → logprob: -18.125
    8. '   ' → logprob: -19.25
    9. 'Listeners' → logprob: -19.75
    10. ' listener' → logprob: -20.0

Token 195: '):
' (ID: 1883)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.06207893788814545
    2. '):' → logprob: -2.8120789527893066
    3. ')->' → logprob: -9.437078475952148
    4. '):
' → logprob: -10.437078475952148
    5. ' )' → logprob: -13.937078475952148
    6. '   ' → logprob: -14.312078475952148
    7. ' ):' → logprob: -15.187078475952148
    8. '):
' → logprob: -15.812078475952148
    9. ':' → logprob: -16.31207847595215
    10. ')=' → logprob: -16.68707847595215

Token 196: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.000506326905451715
    2. ' self' → logprob: -7.750506401062012
    3. 'self' → logprob: -9.625506401062012
    4. '   ' → logprob: -12.625506401062012
    5. '):
' → logprob: -13.125506401062012
    6. '        
' → logprob: -13.750506401062012
    7. '
' → logprob: -14.000506401062012
    8. '(self' → logprob: -14.250506401062012
    9. ')' → logprob: -14.875506401062012
    10. '```' → logprob: -15.250506401062012

Token 197: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.8117063641548157
    2. '       ' → logprob: -1.061706304550171
    3. ' self' → logprob: -1.561706304550171
    4. '   ' → logprob: -8.81170654296875
    5. '	self' → logprob: -9.18670654296875
    6. '	' → logprob: -13.06170654296875
    7. '(self' → logprob: -13.43670654296875
    8. ' ' → logprob: -14.31170654296875
    9. ' ' → logprob: -14.31170654296875
    10. '           ' → logprob: -15.81170654296875

Token 198: '.listener' (ID: 88396)
  Prédit: '.listener'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.listener' → logprob: -0.20162753760814667
    2. '.' → logprob: -1.701627492904663
    3. '.set' → logprob: -8.951627731323242
    4. ' .' → logprob: -9.576627731323242
    5. '.listen' → logprob: -12.451627731323242
    6. '._' → logprob: -13.076627731323242
    7. '.Listener' → logprob: -13.201627731323242
    8. '.setter' → logprob: -13.451627731323242
    9. '.listeners' → logprob: -13.576627731323242
    10. '.logger' → logprob: -13.951627731323242

Token 199: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.038042984902858734
    2. '=' → logprob: -3.2880430221557617
    3. ' ' → logprob: -13.788043022155762
    4. '.' → logprob: -15.663043022155762
    5. '    ' → logprob: -16.038042068481445
    6. '   ' → logprob: -16.288042068481445
    7. '.=' → logprob: -16.913042068481445
    8. ' =
' → logprob: -17.288042068481445
    9. '＝' → logprob: -17.913042068481445
    10. ')' → logprob: -18.413042068481445

Token 200: ' listener' (ID: 19715)
  Prédit: ' listener'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' listener' → logprob: -0.20149482786655426
    2. 'listener' → logprob: -1.701494812965393
    3. '(listener' → logprob: -9.451495170593262
    4. '_listener' → logprob: -13.826495170593262
    5. '.listener' → logprob: -14.201495170593262
    6. ' ' → logprob: -14.451495170593262
    7. 'Listener' → logprob: -14.951495170593262
    8. '```' → logprob: -16.326494216918945
    9. 'observer' → logprob: -16.701494216918945
    10. ')' → logprob: -16.951494216918945

Token 201: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.2050512582063675
    2. '<|end|>' → logprob: -1.705051302909851
    3. '

' → logprob: -6.455051422119141
    4. '    
' → logprob: -7.330051422119141
    5. '\n' → logprob: -7.330051422119141
    6. '<|end|>' → logprob: -7.955051422119141
    7. '   ' → logprob: -9.20505142211914
    8. ' 
' → logprob: -9.83005142211914
    9. 'newline' → logprob: -9.83005142211914
    10. '```' → logprob: -10.33005142211914

Token 202: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.03536064922809601
    2. '   ' → logprob: -3.91036057472229
    3. '    
' → logprob: -4.785360813140869
    4. '<|end|>' → logprob: -5.535360813140869
    5. '  
' → logprob: -7.035360813140869
    6. '

' → logprob: -7.660360813140869
    7. 'def' → logprob: -7.660360813140869
    8. '<|end|>' → logprob: -8.785360336303711
    9. '```' → logprob: -9.035360336303711
    10. ' 
' → logprob: -9.660360336303711

Token 203: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.1130562350153923
    2. ' def' → logprob: -2.363056182861328
    3. '   ' → logprob: -4.363056182861328
    4. '
' → logprob: -11.113056182861328
    5. '    
' → logprob: -11.988056182861328
    6. '	def' → logprob: -12.988056182861328
    7. ' 
' → logprob: -13.363056182861328
    8. ' ' → logprob: -13.863056182861328
    9. '    ' → logprob: -14.238056182861328
    10. ')' → logprob: -15.113056182861328

Token 204: ' clone' (ID: 28806)
  Prédit: ' is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' is' → logprob: -1.230366587638855
    2. ' erase' → logprob: -1.355366587638855
    3. ' find' → logprob: -1.730366587638855
    4. ' get' → logprob: -2.1053667068481445
    5. '_' → logprob: -2.7303667068481445
    6. ' can' → logprob: -3.3553667068481445
    7. ' _' → logprob: -4.4803667068481445
    8. ' remove' → logprob: -4.7303667068481445
    9. ' in' → logprob: -5.2303667068481445
    10. ' score' → logprob: -5.4803667068481445

Token 205: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -2.093505099765025e-05
    2. ' (' → logprob: -11.500020980834961
    3. '(' → logprob: -11.625020980834961
    4. '():' → logprob: -13.875020980834961
    5. '()' → logprob: -14.875020980834961
    6. 'self' → logprob: -15.625020980834961
    7. '(s' → logprob: -15.625020980834961
    8. '(sel' → logprob: -16.75002098083496
    9. '   ' → logprob: -17.12502098083496
    10. '():
' → logprob: -17.25002098083496

Token 206: ')' (ID: 8)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.009276202879846096
    2. ')' → logprob: -5.009276390075684
    3. '):
' → logprob: -6.009276390075684
    4. ' ):' → logprob: -9.259276390075684
    5. '):

' → logprob: -13.009276390075684
    6. ':' → logprob: -13.884276390075684
    7. '():' → logprob: -14.009276390075684
    8. ' )' → logprob: -14.384276390075684
    9. '):
' → logprob: -14.384276390075684
    10. ')->' → logprob: -14.884276390075684

Token 207: ' ->' (ID: 2747)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.13823135197162628
    2. ' ->' → logprob: -2.5132312774658203
    3. '):' → logprob: -4.01323127746582
    4. '->' → logprob: -4.26323127746582
    5. '(self' → logprob: -4.76323127746582
    6. ')' → logprob: -5.51323127746582
    7. '       ' → logprob: -6.63823127746582
    8. ')->' → logprob: -7.26323127746582
    9. '():' → logprob: -7.76323127746582
    10. '   ' → logprob: -8.01323127746582

Token 208: ' '' (ID: 461)
  Prédit: ' ''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' '' → logprob: -0.6967042088508606
    2. ''' → logprob: -1.1967041492462158
    3. ' "' → logprob: -2.321704149246216
    4. '"' → logprob: -2.321704149246216
    5. ' Board' → logprob: -6.446704387664795
    6. 'Board' → logprob: -6.446704387664795
    7. ' ' → logprob: -8.821703910827637
    8. ''s' → logprob: -11.821703910827637
    9. ''S' → logprob: -11.946703910827637
    10. ''M' → logprob: -12.571703910827637

Token 209: 'Board' (ID: 14558)
  Prédit: 'Board'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Board' → logprob: -1.8624639324116288e-06
    2. ' Board' → logprob: -13.625001907348633
    3. 'Block' → logprob: -14.375001907348633
    4. 'board' → logprob: -16.875001907348633
    5. '   ' → logprob: -17.625001907348633
    6. 'B' → logprob: -19.125001907348633
    7. '.Board' → logprob: -20.000001907348633
    8. '
' → logprob: -20.250001907348633
    9. 'Boa' → logprob: -20.375001907348633
    10. 'self' → logprob: -20.500001907348633

Token 210: '':
' (ID: 7669)
  Prédit: '':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '':' → logprob: -0.06230386719107628
    2. '':
' → logprob: -2.8123037815093994
    3. ''' → logprob: -8.56230354309082
    4. ':' → logprob: -9.18730354309082
    5. '):' → logprob: -10.93730354309082
    6. '':
' → logprob: -11.43730354309082
    7. '):
' → logprob: -11.81230354309082
    8. ':
' → logprob: -13.18730354309082
    9. '':'' → logprob: -13.68730354309082
    10. '':

' → logprob: -13.81230354309082

Token 211: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.003764689899981022
    2. '
' → logprob: -5.628764629364014
    3. '        
' → logprob: -9.628765106201172
    4. ' return' → logprob: -10.503765106201172
    5. ':
' → logprob: -10.753765106201172
    6. 'return' → logprob: -11.003765106201172
    7. ':' → logprob: -12.003765106201172
    8. '<|end|>' → logprob: -12.253765106201172
    9. '  
' → logprob: -12.378765106201172
    10. '    
' → logprob: -12.628765106201172

Token 212: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.0027342629618942738
    2. '       ' → logprob: -6.252734184265137
    3. ' return' → logprob: -7.252734184265137
    4. 'new' → logprob: -9.252734184265137
    5. '   ' → logprob: -14.377734184265137
    6. ' new' → logprob: -15.502734184265137
    7. 'b' → logprob: -15.752734184265137
    8. '
' → logprob: -15.877734184265137
    9. '```' → logprob: -16.877735137939453
    10. '	return' → logprob: -17.002735137939453

Token 213: ' Board' (ID: 10837)
  Prédit: ' Board'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Board' → logprob: -0.12704990804195404
    2. 'Board' → logprob: -2.1270499229431152
    3. ' deepcopy' → logprob: -9.252049446105957
    4. 'self' → logprob: -11.752049446105957
    5. ' type' → logprob: -11.877049446105957
    6. ' self' → logprob: -12.127049446105957
    7. 'type' → logprob: -12.877049446105957
    8. 'deep' → logprob: -13.377049446105957
    9. 'Block' → logprob: -14.627049446105957
    10. ' Block' → logprob: -14.627049446105957

Token 214: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.023276809602975845
    2. '(de' → logprob: -3.7732768058776855
    3. '(' → logprob: -10.523277282714844
    4. '([' → logprob: -13.398277282714844
    5. '(copy' → logprob: -13.898277282714844
    6. ' (' → logprob: -14.023277282714844
    7. '(
' → logprob: -14.773277282714844
    8. '((' → logprob: -15.023277282714844
    9. 'self' → logprob: -15.773277282714844
    10. 'deep' → logprob: -16.148277282714844

Token 215: '.grid' (ID: 19269)
  Prédit: '.grid'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.grid' → logprob: -0.000145137935760431
    2. '.deepcopy' → logprob: -9.000144958496094
    3. '.deep' → logprob: -11.375144958496094
    4. '.' → logprob: -12.125144958496094
    5. 'grid' → logprob: -12.500144958496094
    6. ' .' → logprob: -14.750144958496094
    7. '.copy' → logprob: -15.250144958496094
    8. ' deepcopy' → logprob: -15.875144958496094
    9. '	grid' → logprob: -16.500144958496094
    10. ' grid' → logprob: -16.500144958496094

Token 216: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -3.2617008400848135e-05
    2. ' ,' → logprob: -10.625032424926758
    3. '.copy' → logprob: -13.000032424926758
    4. '.deepcopy' → logprob: -13.000032424926758
    5. ',self' → logprob: -13.625032424926758
    6. ')' → logprob: -14.250032424926758
    7. ' deepcopy' → logprob: -14.375032424926758
    8. ',
' → logprob: -14.500032424926758
    9. '),' → logprob: -15.500032424926758
    10. 'deep' → logprob: -15.625032424926758

Token 217: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.16041512787342072
    2. ' self' → logprob: -1.9104151725769043
    3. ' deepcopy' → logprob: -8.910414695739746
    4. '       ' → logprob: -10.410414695739746
    5. 'deep' → logprob: -10.785414695739746
    6. '	self' → logprob: -13.535414695739746
    7. '        ' → logprob: -14.035414695739746
    8. '           ' → logprob: -14.160414695739746
    9. '{' → logprob: -14.285414695739746
    10. ' deep' → logprob: -14.785414695739746

Token 218: '.block' (ID: 27323)
  Prédit: '.block'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.block' → logprob: -9.088346359931165e-07
    2. '.' → logprob: -14.500000953674316
    3. '.b' → logprob: -15.750000953674316
    4. ' .' → logprob: -16.5
    5. 'block' → logprob: -16.5
    6. '.board' → logprob: -18.875
    7. '	block' → logprob: -19.875
    8. ':block' → logprob: -20.25
    9. ' block' → logprob: -20.5
    10. '.book' → logprob: -21.0

Token 219: '_scores' (ID: 63345)
  Prédit: '_scores'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_scores' → logprob: -2.1008713702030946e-06
    2. 'scores' → logprob: -13.125001907348633
    3. '_s' → logprob: -17.375001907348633
    4. '_' → logprob: -17.875001907348633
    5. '_sizes' → logprob: -18.125001907348633
    6. '_score' → logprob: -18.875001907348633
    7. ' scores' → logprob: -20.750001907348633
    8. '   ' → logprob: -21.125001907348633
    9. '_rewards' → logprob: -21.125001907348633
    10. 's' → logprob: -21.250001907348633

Token 220: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -9.849109119386412e-06
    2. ' )' → logprob: -11.625009536743164
    3. ',' → logprob: -14.750009536743164
    4. '   ' → logprob: -15.375009536743164
    5. ')
' → logprob: -15.625009536743164
    6. '       ' → logprob: -16.125009536743164
    7. ')

' → logprob: -17.750009536743164
    8. ',)' → logprob: -18.125009536743164
    9. ' ' → logprob: -18.625009536743164
    10. '),' → logprob: -18.750009536743164

Token 221: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 222: ' def' (ID: 1056)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.36283472180366516
    2. '   ' → logprob: -1.3628346920013428
    3. 'def' (adapté à ' def') → logprob: -3.8628346920013428
    4. '    
' → logprob: -4.362834930419922
    5. '<|end|>' → logprob: -4.487834930419922
    6. '```' → logprob: -6.612834930419922
    7. '<|end|>' → logprob: -7.487834930419922
    8. ' def' → logprob: -8.237834930419922
    9. ')' → logprob: -8.362834930419922
    10. '

' → logprob: -8.362834930419922

Token 223: ' get' (ID: 717)
  Prédit: ' erase'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' erase' → logprob: -0.9112938046455383
    2. ' find' → logprob: -1.1612937450408936
    3. ' is' → logprob: -2.5362937450408936
    4. ' get' → logprob: -3.1612937450408936
    5. ' can' → logprob: -3.7862937450408936
    6. ' _' → logprob: -4.036293983459473
    7. ' apply' → logprob: -4.036293983459473
    8. ' remove' → logprob: -4.161293983459473
    9. '_' → logprob: -4.286293983459473
    10. 'erase' → logprob: -4.411293983459473

Token 224: '_block' (ID: 15644)
  Prédit: '_block'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_block' → logprob: -0.33966097235679626
    2. '_score' → logprob: -1.7146610021591187
    3. '_cell' → logprob: -2.339660882949829
    4. '_neighbors' → logprob: -5.214661121368408
    5. '_value' → logprob: -6.089661121368408
    6. '_' → logprob: -7.214661121368408
    7. '_width' → logprob: -7.589661121368408
    8. '_tile' → logprob: -7.714661121368408
    9. '_neighbor' → logprob: -7.714661121368408
    10. '_at' → logprob: -7.964661121368408

Token 225: '(self' (ID: 2402)
  Prédit: '_score'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_score' → logprob: -0.21355663239955902
    2. '_type' → logprob: -2.5885565280914307
    3. '_at' → logprob: -2.8385565280914307
    4. '(self' → logprob: -3.2135565280914307
    5. '_id' → logprob: -4.58855676651001
    6. 'score' → logprob: -5.21355676651001
    7. '_value' → logprob: -6.21355676651001
    8. 'at' → logprob: -8.463556289672852
    9. '_position' → logprob: -9.088556289672852
    10. ' at' → logprob: -9.213556289672852

Token 226: ',' (ID: 11)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.004664964973926544
    2. 'self' → logprob: -6.129664897918701
    3. ' at' → logprob: -7.504664897918701
    4. '_at' → logprob: -7.504664897918701
    5. '   ' → logprob: -7.879664897918701
    6. '_value' → logprob: -8.50466537475586
    7. ' self' → logprob: -8.75466537475586
    8. '(x' → logprob: -9.00466537475586
    9. ',' → logprob: -9.00466537475586
    10. ')' → logprob: -9.12966537475586

Token 227: ' r' (ID: 428)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.5080298781394958
    2. 'self' → logprob: -1.0080299377441406
    3. ' self' → logprob: -4.258029937744141
    4. ' x' → logprob: -4.383029937744141
    5. 'row' → logprob: -5.133029937744141
    6. ' row' → logprob: -7.258029937744141
    7. 'r' → logprob: -9.75802993774414
    8. 'y' → logprob: -9.88302993774414
    9. ' y' → logprob: -11.50802993774414
    10. '   ' → logprob: -11.63302993774414

Token 228: ':' (ID: 25)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.002792991930618882
    2. ' ,' → logprob: -6.752792835235596
    3. ')' → logprob: -7.627792835235596
    4. ',r' → logprob: -7.752792835235596
    5. ',row' → logprob: -8.502793312072754
    6. '[' → logprob: -9.002793312072754
    7. '[r' → logprob: -9.252793312072754
    8. '[row' → logprob: -9.252793312072754
    9. '][' → logprob: -9.627793312072754
    10. '   ' → logprob: -10.627793312072754

Token 229: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -1.05181884765625
    2. 'self' → logprob: -1.05181884765625
    3. ' self' → logprob: -1.42681884765625
    4. ' int' → logprob: -3.67681884765625
    5. ',' → logprob: -3.92681884765625
    6. ' r' → logprob: -5.30181884765625
    7. 'r' → logprob: -5.55181884765625
    8. ')' → logprob: -5.80181884765625
    9. ' ' → logprob: -6.05181884765625
    10. '   ' → logprob: -7.42681884765625

Token 230: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00012749579036608338
    2. ' ,' → logprob: -9.000127792358398
    3. ',r' → logprob: -12.875127792358398
    4. ')' → logprob: -14.500127792358398
    5. '   ' → logprob: -14.500127792358398
    6. ',int' → logprob: -15.625127792358398
    7. ' ' → logprob: -16.6251277923584
    8. ',c' → logprob: -16.8751277923584
    9. ',n' → logprob: -17.7501277923584
    10. '‌,' → logprob: -17.7501277923584

Token 231: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.313264399766922
    2. ' c' → logprob: -1.3132643699645996
    3. '   ' → logprob: -13.813264846801758
    4. ' ' → logprob: -14.438264846801758
    5. '
' → logprob: -15.188264846801758
    6. ')c' → logprob: -15.313264846801758
    7. '	c' → logprob: -15.313264846801758
    8. ')' → logprob: -15.438264846801758
    9. '    ' → logprob: -17.313264846801758
    10. '  ' → logprob: -17.563264846801758

Token 232: ':' (ID: 25)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.14337681233882904
    2. '):' → logprob: -2.1433768272399902
    3. ':' → logprob: -4.64337682723999
    4. '):
' → logprob: -5.01837682723999
    5. ' )' → logprob: -11.018376350402832
    6. '):
' → logprob: -11.143376350402832
    7. ':int' → logprob: -11.393376350402832
    8. '):

' → logprob: -11.643376350402832
    9. ' ):' → logprob: -11.643376350402832
    10. '   ' → logprob: -12.143376350402832

Token 233: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.2538771629333496
    2. ')' → logprob: -1.6288771629333496
    3. ' int' → logprob: -3.6288771629333496
    4. ' )' → logprob: -7.37887716293335
    5. ':int' → logprob: -7.75387716293335
    6. '):' → logprob: -9.253877639770508
    7. '[int' → logprob: -9.253877639770508
    8. '):
' → logprob: -9.378877639770508
    9. ' ' → logprob: -9.878877639770508
    10. '   ' → logprob: -10.003877639770508

Token 234: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.062440067529678345
    2. '):' → logprob: -2.8124401569366455
    3. '):
' → logprob: -7.687439918518066
    4. ' )' → logprob: -11.562439918518066
    5. ' ):' → logprob: -13.437439918518066
    6. ')->' → logprob: -13.437439918518066
    7. '):
' → logprob: -14.562439918518066
    8. ':' → logprob: -14.687439918518066
    9. '):

' → logprob: -16.312440872192383
    10. ')
' → logprob: -16.437440872192383

Token 235: ' ->' (ID: 2747)
  Prédit: ' ->'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ->' → logprob: -0.7854934930801392
    2. '->' → logprob: -0.9104934930801392
    3. ':' → logprob: -2.0354933738708496
    4. ')' → logprob: -4.66049337387085
    5. '):' → logprob: -6.91049337387085
    6. ')->' → logprob: -7.78549337387085
    7. '   ' → logprob: -8.410493850708008
    8. '       ' → logprob: -10.535493850708008
    9. '-' → logprob: -11.785493850708008
    10. '>' → logprob: -12.035493850708008

Token 236: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.37576770782470703
    2. ' int' → logprob: -1.250767707824707
    3. 'self' → logprob: -4.375767707824707
    4. ' self' → logprob: -4.750767707824707
    5. ' Optional' → logprob: -5.500767707824707
    6. 'Optional' → logprob: -6.500767707824707
    7. '   ' → logprob: -9.500767707824707
    8. '[int' → logprob: -10.250767707824707
    9. ':int' → logprob: -11.625767707824707
    10. ' ' → logprob: -12.500767707824707

Token 237: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0039380560629069805
    2. ':
' → logprob: -5.6289381980896
    3. '):' → logprob: -8.253937721252441
    4. ':return' → logprob: -10.503937721252441
    5. '):
' → logprob: -10.628937721252441
    6. '       ' → logprob: -12.003937721252441
    7. '<|end|>' → logprob: -12.128937721252441
    8. '   ' → logprob: -12.503937721252441
    9. '():' → logprob: -12.753937721252441
    10. ':def' → logprob: -13.378937721252441

Token 238: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.030663851648569107
    2. '   ' → logprob: -4.530663967132568
    3. ' return' → logprob: -4.530663967132568
    4. ' ' → logprob: -5.530663967132568
    5. ' 
' → logprob: -6.155663967132568
    6. '    ' → logprob: -6.905663967132568
    7. 'return' → logprob: -7.280663967132568
    8. '        
' → logprob: -8.40566349029541
    9. '    
' → logprob: -8.78066349029541
    10. '        ' → logprob: -9.53066349029541

Token 239: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.009662946686148643
    2. '       ' → logprob: -5.509663105010986
    3. 'if' → logprob: -5.509663105010986
    4. ' return' → logprob: -6.509663105010986
    5. ' if' → logprob: -10.384662628173828
    6. '   ' → logprob: -13.634662628173828
    7. '	return' → logprob: -16.009662628173828
    8. 'try' → logprob: -16.134662628173828
    9. '{return' → logprob: -18.509662628173828
    10. ' ' → logprob: -18.634662628173828

Token 240: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.07889000326395035
    2. ' self' → logprob: -2.578890085220337
    3. '       ' → logprob: -15.828889846801758
    4. '	self' → logprob: -17.203889846801758
    5. '   ' → logprob: -18.078889846801758
    6. '(self' → logprob: -18.578889846801758
    7. '0' → logprob: -19.453889846801758
    8. '
' → logprob: -20.078889846801758
    9. ' ' → logprob: -20.453889846801758
    10. ' ' → logprob: -20.953889846801758

Token 241: '.grid' (ID: 19269)
  Prédit: '.grid'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.grid' → logprob: -0.002585408743470907
    2. '.' → logprob: -6.002585411071777
    3. ' .' → logprob: -9.127585411071777
    4. '.board' → logprob: -15.502585411071777
    5. ' ' → logprob: -16.50258445739746
    6. '.Grid' → logprob: -16.50258445739746
    7. ').' → logprob: -16.62758445739746
    8. '.g' → logprob: -16.87758445739746
    9. '.space' → logprob: -16.87758445739746
    10. '.user' → logprob: -17.12758445739746

Token 242: '[r' (ID: 33265)
  Prédit: '[r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[r' → logprob: -1.9361264946837764e-07
    2. '[' → logprob: -16.75
    3. ' [' → logprob: -17.125
    4. '[c' → logprob: -18.875
    5. '   ' → logprob: -19.25
    6. 'r' → logprob: -19.25
    7. '[row' → logprob: -19.375
    8. '[
' → logprob: -21.125
    9. '[self' → logprob: -21.5
    10. '```' → logprob: -21.625

Token 243: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -9.245724504580721e-05
    2. ']' → logprob: -9.500092506408691
    3. ' ][' → logprob: -11.125092506408691
    4. '[c' → logprob: -12.875092506408691
    5. '[' → logprob: -15.750092506408691
    6. '   ' → logprob: -17.375091552734375
    7. '"][' → logprob: -18.125091552734375
    8. '][]' → logprob: -18.125091552734375
    9. '][_' → logprob: -18.750091552734375
    10. 'c' → logprob: -18.750091552734375

Token 244: 'c' (ID: 66)
  Prédit: 'c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -1.306760805164231e-05
    2. ' c' → logprob: -11.25001335144043
    3. ')c' → logprob: -18.87501335144043
    4. '	c' → logprob: -19.37501335144043
    5. '   ' → logprob: -20.00001335144043
    6. ' ' → logprob: -21.50001335144043
    7. '_c' → logprob: -21.75001335144043
    8. 'с' → logprob: -21.75001335144043
    9. '```' → logprob: -22.12501335144043
    10. '  ' → logprob: -22.12501335144043

Token 245: ']

' (ID: 3144)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.08907458931207657
    2. ']' → logprob: -2.4640746116638184
    3. '<|end|>' → logprob: -9.83907413482666
    4. ' )' → logprob: -9.96407413482666
    5. ' ]' → logprob: -11.21407413482666
    6. ')]' → logprob: -11.83907413482666
    7. '}' → logprob: -11.96407413482666
    8. '])' → logprob: -12.83907413482666
    9. ')
' → logprob: -13.33907413482666
    10. '[' → logprob: -14.21407413482666

Token 246: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 247: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.0883805900812149
    2. '   ' → logprob: -3.0883805751800537
    3. ' def' → logprob: -3.4633805751800537
    4. '
' → logprob: -5.463380813598633
    5. '    
' → logprob: -5.963380813598633
    6. ' 
' → logprob: -7.338380813598633
    7. '  
' → logprob: -9.588380813598633
    8. '   
' → logprob: -10.338380813598633
    9. '```' → logprob: -10.338380813598633
    10. ' ' → logprob: -10.588380813598633

Token 248: ' set' (ID: 920)
  Prédit: ' set'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' set' → logprob: -0.5008850693702698
    2. 'set' → logprob: -1.000885009765625
    3. ' is' → logprob: -4.625885009765625
    4. 'is' → logprob: -5.250885009765625
    5. ' find' → logprob: -5.875885009765625
    6. ' in' → logprob: -6.000885009765625
    7. ' erase' → logprob: -6.250885009765625
    8. 'find' → logprob: -7.000885009765625
    9. 'erase' → logprob: -7.000885009765625
    10. ' can' → logprob: -8.000885009765625

Token 249: '_block' (ID: 15644)
  Prédit: '_block'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_block' → logprob: -0.002533332910388708
    2. '_' → logprob: -6.002533435821533
    3. 'block' → logprob: -10.877532958984375
    4. '(self' → logprob: -10.877532958984375
    5. '_grid' → logprob: -12.252532958984375
    6. '_bloc' → logprob: -12.502532958984375
    7. '_blocks' → logprob: -12.752532958984375
    8. '_(' → logprob: -13.127532958984375
    9. '(' → logprob: -13.502532958984375
    10. '_cell' → logprob: -13.502532958984375

Token 250: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.0032403396908193827
    2. '(' → logprob: -5.75324010848999
    3. '(r' → logprob: -10.503240585327148
    4. ' (' → logprob: -10.628240585327148
    5. 'self' → logprob: -12.878240585327148
    6. '(
' → logprob: -13.003240585327148
    7. '   ' → logprob: -13.253240585327148
    8. '(s' → logprob: -13.378240585327148
    9. '<|end|>' → logprob: -13.878240585327148
    10. ' ' → logprob: -14.003240585327148

Token 251: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -5.56233171664644e-05
    2. ' ,' → logprob: -10.375055313110352
    3. 'self' → logprob: -11.375055313110352
    4. ',r' → logprob: -11.625055313110352
    5. 'r' → logprob: -13.375055313110352
    6. '   ' → logprob: -14.125055313110352
    7. ')' → logprob: -14.625055313110352
    8. '(self' → logprob: -15.625055313110352
    9. '[' → logprob: -15.750055313110352
    10. ' ' → logprob: -15.875055313110352

Token 252: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.691975474357605
    2. 'self' → logprob: -1.066975474357605
    3. ' r' → logprob: -2.0669755935668945
    4. ' self' → logprob: -3.5669755935668945
    5. '   ' → logprob: -7.9419755935668945
    6. '(self' → logprob: -9.941975593566895
    7. 's' → logprob: -10.191975593566895
    8. ' ' → logprob: -10.191975593566895
    9. '<|end|>' → logprob: -11.191975593566895
    10. '    ' → logprob: -11.566975593566895

Token 253: ':' (ID: 25)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00042173630208708346
    2. ' ,' → logprob: -7.875421524047852
    3. ',c' → logprob: -10.750421524047852
    4. ',r' → logprob: -11.875421524047852
    5. '   ' → logprob: -12.250421524047852
    6. ' ' → logprob: -13.125421524047852
    7. '<|end|>' → logprob: -13.750421524047852
    8. '][' → logprob: -14.000421524047852
    9. '[' → logprob: -14.625421524047852
    10. ')' → logprob: -14.625421524047852

Token 254: ' int' (ID: 677)
  Prédit: ' c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' c' → logprob: -0.22423787415027618
    2. 'c' → logprob: -1.7242379188537598
    3. 'int' → logprob: -3.8492379188537598
    4. ' int' → logprob: -6.72423791885376
    5. ' ' → logprob: -10.599237442016602
    6. ':int' → logprob: -11.224237442016602
    7. ',' → logprob: -11.599237442016602
    8. '   ' → logprob: -11.849237442016602
    9. '<|end|>' → logprob: -12.349237442016602
    10. ',int' → logprob: -13.099237442016602

Token 255: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -3.249780638725497e-05
    2. ' ,' → logprob: -10.500032424926758
    3. ',c' → logprob: -12.250032424926758
    4. ',
' → logprob: -17.250032424926758
    5. ',int' → logprob: -17.375032424926758
    6. ')' → logprob: -17.625032424926758
    7. '‌,' → logprob: -17.625032424926758
    8. '   ' → logprob: -17.750032424926758
    9. ',r' → logprob: -18.125032424926758
    10. 'c' → logprob: -18.125032424926758

Token 256: ' c' (ID: 274)
  Prédit: ' c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' c' → logprob: -0.06993743777275085
    2. 'c' → logprob: -2.6949374675750732
    3. ' ' → logprob: -14.069937705993652
    4. '    ' → logprob: -16.319936752319336
    5. '   ' → logprob: -16.569936752319336
    6. '	c' → logprob: -17.194936752319336
    7. ' ' → logprob: -17.569936752319336
    8. ')c' → logprob: -17.694936752319336
    9. '  ' → logprob: -18.757436752319336
    10. 's' → logprob: -18.757436752319336

Token 257: ':' (ID: 25)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.014029046520590782
    2. ')' → logprob: -4.514029026031494
    3. ' ,' → logprob: -7.014029026031494
    4. ']' → logprob: -7.139029026031494
    5. '):
' → logprob: -7.764029026031494
    6. '):' → logprob: -7.889029026031494
    7. '),' → logprob: -9.389029502868652
    8. '<|end|>' → logprob: -9.389029502868652
    9. ':' → logprob: -9.764029502868652
    10. '   ' → logprob: -10.014029502868652

Token 258: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.04401746764779091
    2. ' int' → logprob: -3.1690175533294678
    3. ')' → logprob: -6.919017314910889
    4. ':int' → logprob: -11.419017791748047
    5. ' ' → logprob: -12.419017791748047
    6. '(int' → logprob: -12.919017791748047
    7. '[int' → logprob: -13.044017791748047
    8. ',' → logprob: -13.294017791748047
    9. ' )' → logprob: -13.544017791748047
    10. ']int' → logprob: -13.794017791748047

Token 259: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -8.44706009957008e-05
    2. ' ,' → logprob: -10.00008487701416
    3. ')' → logprob: -10.37508487701416
    4. '):' → logprob: -12.87508487701416
    5. '),' → logprob: -13.12508487701416
    6. '],' → logprob: -13.37508487701416
    7. ']' → logprob: -13.62508487701416
    8. ',int' → logprob: -15.62508487701416
    9. ',value' → logprob: -16.125083923339844
    10. '   ' → logprob: -16.625083923339844

Token 260: ' block' (ID: 4355)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.5231953859329224
    2. '0' → logprob: -0.8981953859329224
    3. ' value' → logprob: -10.523195266723633
    4. 'value' → logprob: -11.023195266723633
    5. ' -' → logprob: -11.898195266723633
    6. ' None' → logprob: -12.523195266723633
    7. ' block' → logprob: -12.898195266723633
    8. 'val' → logprob: -13.023195266723633
    9. 'None' → logprob: -13.023195266723633
    10. '   ' → logprob: -13.148195266723633

Token 261: ':' (ID: 25)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.040855471044778824
    2. ':' → logprob: -3.6658554077148438
    3. '_type' → logprob: -5.040855407714844
    4. '):
' → logprob: -5.415855407714844
    5. '   ' → logprob: -7.165855407714844
    6. ')' → logprob: -7.165855407714844
    7. ':int' → logprob: -7.290855407714844
    8. '_id' → logprob: -7.540855407714844
    9. 'type' → logprob: -8.165855407714844
    10. 'Type' → logprob: -9.415855407714844

Token 262: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.4741981327533722
    2. ' int' → logprob: -0.9741981029510498
    3. ')' → logprob: -9.474198341369629
    4. ':int' → logprob: -10.849198341369629
    5. '[int' → logprob: -11.349198341369629
    6. ' )' → logprob: -12.224198341369629
    7. '<int' → logprob: -13.599198341369629
    8. '   ' → logprob: -13.599198341369629
    9. 'Optional' → logprob: -13.599198341369629
    10. ' Optional' → logprob: -13.724198341369629

Token 263: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.08091931790113449
    2. '):
' → logprob: -2.5809192657470703
    3. ')' → logprob: -6.20591926574707
    4. '):
' → logprob: -11.83091926574707
    5. '):

' → logprob: -13.83091926574707
    6. ':' → logprob: -14.08091926574707
    7. '   ' → logprob: -14.58091926574707
    8. ' ):' → logprob: -15.08091926574707
    9. ')**' → logprob: -17.08091926574707
    10. ' ):
' → logprob: -17.45591926574707

Token 264: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0003912311512976885
    2. ' self' → logprob: -7.875391006469727
    3. 'self' → logprob: -12.000391006469727
    4. '   ' → logprob: -13.125391006469727
    5. '	self' → logprob: -14.875391006469727
    6. '```' → logprob: -15.000391006469727
    7. '           ' → logprob: -15.125391006469727
    8. '      ' → logprob: -15.125391006469727
    9. '        
' → logprob: -15.375391006469727
    10. '    ' → logprob: -15.375391006469727

Token 265: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.3715555667877197
    2. ' self' → logprob: -1.3715555667877197
    3. '       ' → logprob: -2.8715555667877197
    4. '	self' → logprob: -11.37155532836914
    5. '   ' → logprob: -12.37155532836914
    6. '(self' → logprob: -15.99655532836914
    7. '[self' → logprob: -16.12155532836914
    8. ' ' → logprob: -16.24655532836914
    9. '        ' → logprob: -16.37155532836914
    10. '      ' → logprob: -16.49655532836914

Token 266: '.grid' (ID: 19269)
  Prédit: '.grid'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.grid' → logprob: -0.0019310165662318468
    2. '.' → logprob: -6.251931190490723
    3. ' .' → logprob: -13.126931190490723
    4. ').' → logprob: -15.501931190490723
    5. '.g' → logprob: -17.251930236816406
    6. '.Grid' → logprob: -17.626930236816406
    7. '	grid' → logprob: -17.626930236816406
    8. '.space' → logprob: -17.751930236816406
    9. ':grid' → logprob: -17.876930236816406
    10. '.
' → logprob: -17.876930236816406

Token 267: '[r' (ID: 33265)
  Prédit: '[r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[r' → logprob: -1.9361264946837764e-07
    2. '[' → logprob: -16.125
    3. '[row' → logprob: -18.125
    4. 'r' → logprob: -18.125
    5. ' [' → logprob: -18.625
    6. '][' → logprob: -19.375
    7. '[self' → logprob: -19.5
    8. '[c' → logprob: -20.25
    9. '   ' → logprob: -20.5
    10. ')[' → logprob: -20.875

Token 268: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.00037502311170101166
    2. ']' → logprob: -8.125374794006348
    3. ' ][' → logprob: -9.625374794006348
    4. '[' → logprob: -11.875374794006348
    5. '[c' → logprob: -13.250374794006348
    6. '[r' → logprob: -13.375374794006348
    7. ' ' → logprob: -13.875374794006348
    8. '   ' → logprob: -14.000374794006348
    9. ')[' → logprob: -16.000375747680664
    10. '       ' → logprob: -16.000375747680664

Token 269: 'c' (ID: 66)
  Prédit: 'c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -1.4974866644479334e-05
    2. ' c' → logprob: -11.500015258789062
    3. '   ' → logprob: -14.125015258789062
    4. '][' → logprob: -14.375015258789062
    5. ')c' → logprob: -14.375015258789062
    6. ' ' → logprob: -14.500015258789062
    7. '[c' → logprob: -14.750015258789062
    8. ']' → logprob: -14.750015258789062
    9. '```' → logprob: -15.125015258789062
    10. ')' → logprob: -15.250015258789062

Token 270: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.00041482248343527317
    2. ' ]' → logprob: -8.000414848327637
    3. ']=' → logprob: -9.625414848327637
    4. ')' → logprob: -11.625414848327637
    5. '=' → logprob: -12.750414848327637
    6. ' =' → logprob: -13.500414848327637
    7. '])' → logprob: -17.25041389465332
    8. '[' → logprob: -17.75041389465332
    9. ' )' → logprob: -18.00041389465332
    10. ' ' → logprob: -18.12541389465332

Token 271: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.4740772247314453
    2. ' =' → logprob: -0.9740772247314453
    3. ')' → logprob: -16.349077224731445
    4. '=int' → logprob: -16.849077224731445
    5. ' ' → logprob: -16.974077224731445
    6. ' =
' → logprob: -18.099077224731445
    7. '＝' → logprob: -18.224077224731445
    8. ']' → logprob: -18.349077224731445
    9. '    ' → logprob: -18.349077224731445
    10. '=
' → logprob: -18.599077224731445

Token 272: ' block' (ID: 4355)
  Prédit: 'block'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'block' → logprob: -0.029750484973192215
    2. ' block' → logprob: -3.5297505855560303
    3. 'bloc' → logprob: -17.27975082397461
    4. '	block' → logprob: -18.52975082397461
    5. 'b' → logprob: -18.77975082397461
    6. ' bloc' → logprob: -19.65475082397461
    7. 'blk' → logprob: -20.27975082397461
    8. 'blocks' → logprob: -20.52975082397461
    9. '_block' → logprob: -20.52975082397461
    10. '   ' → logprob: -20.77975082397461

Token 273: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 274: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.005427984986454248
    2. '<|end|>' → logprob: -6.130427837371826
    3. 'def' → logprob: -7.130427837371826
    4. '    
' → logprob: -7.255427837371826
    5. '
' → logprob: -7.255427837371826
    6. '```' → logprob: -7.755427837371826
    7. '<|end|>' → logprob: -7.880427837371826
    8. ' def' → logprob: -10.005428314208984
    9. ' ' → logprob: -10.255428314208984
    10. ' 
' → logprob: -10.880428314208984

Token 275: ' #' (ID: 1069)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.004344786982983351
    2. '   ' → logprob: -5.754344940185547
    3. ' def' → logprob: -6.754344940185547
    4. '	def' → logprob: -15.129344940185547
    5. '    
' → logprob: -15.879344940185547
    6. '```' → logprob: -16.879344940185547
    7. '
' → logprob: -16.879344940185547
    8. 'de' → logprob: -17.379344940185547
    9. ' ' → logprob: -17.754344940185547
    10. '    ' → logprob: -17.879344940185547

Token 276: ' Swap' (ID: 76518)
  Prédit: ' def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' def' → logprob: -0.6406357288360596
    2. 'def' → logprob: -0.7656357288360596
    3. 'd' → logprob: -5.2656354904174805
    4. '   ' → logprob: -6.0156354904174805
    5. ' d' → logprob: -8.76563549041748
    6. ' ' → logprob: -9.89063549041748
    7. '    ' → logprob: -10.01563549041748
    8. 'D' → logprob: -10.51563549041748
    9. ' D' → logprob: -10.64063549041748
    10. 'de' → logprob: -10.89063549041748

Token 277: ' two' (ID: 1920)
  Prédit: '_blocks'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_blocks' → logprob: -0.005949302110821009
    2. '(self' → logprob: -5.3809494972229
    3. '_positions' → logprob: -7.3809494972229
    4. '(' → logprob: -7.6309494972229
    5. '_' → logprob: -9.380949020385742
    6. '_cells' → logprob: -9.880949020385742
    7. 'blocks' → logprob: -10.630949020385742
    8. '   ' → logprob: -11.630949020385742
    9. '_tokens' → logprob: -11.755949020385742
    10. '_tiles' → logprob: -12.005949020385742

Token 278: ' adjacent' (ID: 39069)
  Prédit: ' blocks'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' blocks' → logprob: -0.11362290382385254
    2. 'blocks' → logprob: -2.7386229038238525
    3. ' positions' → logprob: -3.3636229038238525
    4. 'positions' → logprob: -4.988622665405273
    5. '_blocks' → logprob: -6.863622665405273
    6. 'def' → logprob: -9.363622665405273
    7. ' cells' → logprob: -9.488622665405273
    8. '   ' → logprob: -10.113622665405273
    9. 'cells' → logprob: -10.488622665405273
    10. '_positions' → logprob: -10.863622665405273

Token 279: ' blocks' (ID: 18125)
  Prédit: ' blocks'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' blocks' → logprob: -0.13398601114749908
    2. 'blocks' → logprob: -2.133985996246338
    3. '_blocks' → logprob: -6.133985996246338
    4. ' positions' → logprob: -6.383985996246338
    5. ' cells' → logprob: -6.758985996246338
    6. 'def' → logprob: -7.008985996246338
    7. 'positions' → logprob: -7.758985996246338
    8. ' def' → logprob: -8.383986473083496
    9. 'cells' → logprob: -8.383986473083496
    10. ')' → logprob: -9.633986473083496

Token 280: ' (' (ID: 350)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.01543706376105547
    2. 'def' → logprob: -4.265437126159668
    3. '
' → logprob: -6.890437126159668
    4. ' def' → logprob: -9.015437126159668
    5. '    
' → logprob: -9.140437126159668
    6. '(' → logprob: -11.515437126159668
    7. ',' → logprob: -12.140437126159668
    8. '(def' → logprob: -13.015437126159668
    9. '	def' → logprob: -13.015437126159668
    10. ' ' → logprob: -13.265437126159668

Token 281: 'r' (ID: 81)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.7459806799888611
    2. '   ' → logprob: -1.6209807395935059
    3. 'self' → logprob: -1.6209807395935059
    4. 'r' → logprob: -2.620980739593506
    5. ' def' → logprob: -3.245980739593506
    6. ')' → logprob: -4.995980739593506
    7. ' self' → logprob: -5.245980739593506
    8. ' r' → logprob: -5.620980739593506
    9. ',' → logprob: -6.495980739593506
    10. ' ' → logprob: -8.370980262756348

Token 282: '1' (ID: 16)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.16196444630622864
    2. '1' → logprob: -1.9119644165039062
    3. '   ' → logprob: -7.286964416503906
    4. ' ,' → logprob: -7.661964416503906
    5. ',c' → logprob: -8.036964416503906
    6. '       ' → logprob: -8.911964416503906
    7. ':' → logprob: -9.411964416503906
    8. 'c' → logprob: -11.161964416503906
    9. '    ' → logprob: -11.786964416503906
    10. '0' → logprob: -12.161964416503906

Token 283: ',c' (ID: 22261)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0007889019907452166
    2. ',c' → logprob: -7.625788688659668
    3. ' ,' → logprob: -8.125788688659668
    4. '   ' → logprob: -13.250788688659668
    5. 'c' → logprob: -13.250788688659668
    6. ',
' → logprob: -14.125788688659668
    7. ':' → logprob: -15.500788688659668
    8. ',r' → logprob: -16.625789642333984
    9. ' c' → logprob: -16.750789642333984
    10. '1' → logprob: -16.750789642333984

Token 284: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.4605601131916046
    2. ',' → logprob: -1.0855600833892822
    3. '),' → logprob: -3.7105600833892822
    4. ')' → logprob: -5.710560321807861
    5. '),(' → logprob: -6.085560321807861
    6. ' ,' → logprob: -7.960560321807861
    7. '   ' → logprob: -7.960560321807861
    8. 'r' → logprob: -8.460559844970703
    9. ',r' → logprob: -8.460559844970703
    10. '-' → logprob: -10.335559844970703

Token 285: ')' (ID: 8)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0016981529770419002
    2. '),' → logprob: -7.126698017120361
    3. ' ,' → logprob: -7.376698017120361
    4. ')' → logprob: -9.00169849395752
    5. ',r' → logprob: -9.12669849395752
    6. '),(' → logprob: -11.25169849395752
    7. '   ' → logprob: -11.37669849395752
    8. ',
' → logprob: -12.12669849395752
    9. ' ' → logprob: -13.75169849395752
    10. ' and' → logprob: -13.87669849395752

Token 286: ' and' (ID: 326)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.011085192672908306
    2. '   ' → logprob: -5.136085033416748
    3. ' and' → logprob: -6.136085033416748
    4. ' ,' → logprob: -6.886085033416748
    5. ',r' → logprob: -6.886085033416748
    6. 'def' → logprob: -8.011085510253906
    7. '(r' → logprob: -8.761085510253906
    8. 'and' → logprob: -8.886085510253906
    9. ')' → logprob: -9.136085510253906
    10. ',
' → logprob: -9.761085510253906

Token 287: ' (' (ID: 350)
  Prédit: ' ('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.38712790608406067
    2. '(r' → logprob: -1.1371278762817383
    3. '(' → logprob: -8.762127876281738
    4. ' r' → logprob: -10.012127876281738
    5. 'r' → logprob: -10.512127876281738
    6. ' ' → logprob: -11.262127876281738
    7. ''' → logprob: -12.637127876281738
    8. '"' → logprob: -12.887127876281738
    9. '`' → logprob: -13.012127876281738
    10. ' ' → logprob: -13.387127876281738

Token 288: 'r' (ID: 81)
  Prédit: 'r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.2519320547580719
    2. ' r' → logprob: -1.5019320249557495
    3. '   ' → logprob: -13.626932144165039
    4. ' ' → logprob: -14.251932144165039
    5. '	r' → logprob: -14.876932144165039
    6. '    ' → logprob: -15.251932144165039
    7. '  ' → logprob: -15.376932144165039
    8. '_r' → logprob: -15.876932144165039
    9. ',' → logprob: -16.25193214416504
    10. ')' → logprob: -16.75193214416504

Token 289: '2' (ID: 17)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.03804963827133179
    2. '2' → logprob: -3.2880496978759766
    3. ',' → logprob: -12.413049697875977
    4. ' ' → logprob: -13.288049697875977
    5. ',r' → logprob: -13.538049697875977
    6. 'r' → logprob: -14.788049697875977
    7. '```' → logprob: -15.038049697875977
    8. '   ' → logprob: -15.538049697875977
    9. ',c' → logprob: -16.538049697875977
    10. '
' → logprob: -17.413049697875977

Token 290: ',c' (ID: 22261)
  Prédit: ',c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',c' → logprob: -0.018303049728274345
    2. ',' → logprob: -4.018302917480469
    3. ' ,' → logprob: -9.518302917480469
    4. ',r' → logprob: -9.518302917480469
    5. ',int' → logprob: -12.893302917480469
    6. ',
' → logprob: -13.893302917480469
    7. ')' → logprob: -14.018302917480469
    8. '),(' → logprob: -14.643302917480469
    9. '1' → logprob: -14.893302917480469
    10. 'c' → logprob: -15.518302917480469

Token 291: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -4.961759259458631e-06
    2. ',' → logprob: -12.500004768371582
    3. ' ' → logprob: -14.500004768371582
    4. '1' → logprob: -14.875004768371582
    5. ')' → logprob: -16.2500057220459
    6. '```' → logprob: -16.6250057220459
    7. ',c' → logprob: -16.7500057220459
    8. '   ' → logprob: -17.5000057220459
    9. 'c' → logprob: -18.0000057220459
    10. '
' → logprob: -18.2500057220459

Token 292: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.26456981897354126
    2. '):' → logprob: -1.5145697593688965
    3. '):
' → logprob: -5.1395697593688965
    4. '   ' → logprob: -5.1395697593688965
    5. ')
' → logprob: -7.1395697593688965
    6. 'def' → logprob: -11.514570236206055
    7. ',' → logprob: -11.639570236206055
    8. '):

' → logprob: -11.889570236206055
    9. '):
' → logprob: -12.139570236206055
    10. ':' → logprob: -12.514570236206055

Token 293: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.04119322448968887
    2. 'def' → logprob: -3.5411932468414307
    3. '
' → logprob: -4.541193008422852
    4. ' def' → logprob: -7.416193008422852
    5. '    
' → logprob: -9.291193008422852
    6. '	def' → logprob: -12.291193008422852
    7. ':def' → logprob: -12.291193008422852
    8. ')' → logprob: -12.416193008422852
    9. '```' → logprob: -12.791193008422852
    10. ':' → logprob: -13.541193008422852

Token 294: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.15643151104450226
    2. '   ' → logprob: -2.4064314365386963
    3. ' def' → logprob: -2.9064314365386963
    4. '	def' → logprob: -13.031431198120117
    5. '
' → logprob: -15.031431198120117
    6. '  ' → logprob: -15.406431198120117
    7. ' ' → logprob: -15.656431198120117
    8. '    
' → logprob: -16.781431198120117
    9. '    ' → logprob: -17.406431198120117
    10. '_def' → logprob: -18.281431198120117

Token 295: ' swap' (ID: 25489)
  Prédit: ' swap'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' swap' → logprob: -0.5764692425727844
    2. 'swap' → logprob: -0.8264692425727844
    3. '_swap' → logprob: -7.701469421386719
    4. '	swap' → logprob: -9.826469421386719
    5. '   ' → logprob: -11.701469421386719
    6. ' ' → logprob: -12.451469421386719
    7. '.swap' → logprob: -12.576469421386719
    8. 's' → logprob: -13.576469421386719
    9. 'def' → logprob: -13.701469421386719
    10. 'sw' → logprob: -13.951469421386719

Token 296: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.0003884894831571728
    2. '(' → logprob: -8.125388145446777
    3. '_blocks' → logprob: -9.375388145446777
    4. '(r' → logprob: -12.875388145446777
    5. '_block' → logprob: -13.375388145446777
    6. ' (' → logprob: -13.750388145446777
    7. 'self' → logprob: -14.125388145446777
    8. '   ' → logprob: -14.500388145446777
    9. '(
' → logprob: -14.625388145446777
    10. '_(' → logprob: -15.250388145446777

Token 297: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0025642416439950466
    2. ' ,' → logprob: -7.502564430236816
    3. 'self' → logprob: -7.502564430236816
    4. '_,' → logprob: -7.627564430236816
    5. ',r' → logprob: -7.752564430236816
    6. '       ' → logprob: -8.502564430236816
    7. '   ' → logprob: -8.752564430236816
    8. '(self' → logprob: -9.752564430236816
    9. ',self' → logprob: -10.127564430236816
    10. ')' → logprob: -11.377564430236816

Token 298: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.31352442502975464
    2. ' r' → logprob: -1.3135244846343994
    3. 'self' → logprob: -8.43852424621582
    4. ' self' → logprob: -10.93852424621582
    5. '       ' → logprob: -11.43852424621582
    6. '   ' → logprob: -11.56352424621582
    7. '	r' → logprob: -12.31352424621582
    8. '    ' → logprob: -13.31352424621582
    9. ' ' → logprob: -14.06352424621582
    10. ')' → logprob: -14.31352424621582

Token 299: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0005599428550340235
    2. ',' → logprob: -7.5005598068237305
    3. ' ,' → logprob: -12.87555980682373
    4. ' ' → logprob: -13.25055980682373
    5. '   ' → logprob: -13.37555980682373
    6. '    ' → logprob: -15.37555980682373
    7. ',r' → logprob: -15.37555980682373
    8. ':' → logprob: -15.50055980682373
    9. 'r' → logprob: -15.62555980682373
    10. '=' → logprob: -17.000560760498047

Token 300: ':' (ID: 25)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0001085497424355708
    2. ' ,' → logprob: -9.75010871887207
    3. ',c' → logprob: -10.00010871887207
    4. ',
' → logprob: -12.87510871887207
    5. '   ' → logprob: -13.87510871887207
    6. ',r' → logprob: -14.12510871887207
    7. 'c' → logprob: -16.00010871887207
    8. ':' → logprob: -16.00010871887207
    9. '=' → logprob: -16.25010871887207
    10. ')' → logprob: -17.00010871887207

Token 301: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.16068235039710999
    2. ' int' → logprob: -1.9106823205947876
    3. 'c' → logprob: -8.160682678222656
    4. ':int' → logprob: -9.285682678222656
    5. ',' → logprob: -10.285682678222656
    6. ' c' → logprob: -10.410682678222656
    7. ' ' → logprob: -11.785682678222656
    8. ',int' → logprob: -12.285682678222656
    9. '(int' → logprob: -14.035682678222656
    10. '   ' → logprob: -14.410682678222656

Token 302: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -2.7491250875755213e-05
    2. ' ,' → logprob: -11.125027656555176
    3. ',c' → logprob: -11.375027656555176
    4. ',
' → logprob: -14.375027656555176
    5. ',r' → logprob: -15.000027656555176
    6. 'c' → logprob: -15.750027656555176
    7. '‌,' → logprob: -16.12502670288086
    8. '<|end|>' → logprob: -16.62502670288086
    9. '   ' → logprob: -16.87502670288086
    10. ')' → logprob: -17.62502670288086

Token 303: ' c' (ID: 274)
  Prédit: ' c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' c' → logprob: -0.02631272003054619
    2. 'c' → logprob: -3.651312828063965
    3. ' ' → logprob: -11.651312828063965
    4. 'r' → logprob: -13.776312828063965
    5. ' ' → logprob: -14.526312828063965
    6. ',' → logprob: -14.901312828063965
    7. '    ' → logprob: -15.151312828063965
    8. '	c' → logprob: -15.151312828063965
    9. ',c' → logprob: -15.276312828063965
    10. '<|end|>' → logprob: -15.651312828063965

Token 304: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00017755765293259174
    2. ',' → logprob: -9.250177383422852
    3. '2' → logprob: -9.500177383422852
    4. '   ' → logprob: -12.500177383422852
    5. '```' → logprob: -13.875177383422852
    6. ' ' → logprob: -14.625177383422852
    7. ' ,' → logprob: -15.687677383422852
    8. ':' → logprob: -15.687677383422852
    9. '    ' → logprob: -15.937677383422852
    10. '=' → logprob: -16.00017738342285

Token 305: ':' (ID: 25)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0001302374730585143
    2. ' ,' → logprob: -9.000130653381348
    3. '1' → logprob: -12.375130653381348
    4. '   ' → logprob: -13.500130653381348
    5. ',r' → logprob: -14.750130653381348
    6. ',
' → logprob: -15.625130653381348
    7. '),' → logprob: -15.625130653381348
    8. ')' → logprob: -16.50012969970703
    9. ',c' → logprob: -16.62512969970703
    10. '_,' → logprob: -16.62512969970703

Token 306: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.07891567796468735
    2. ' int' → logprob: -2.578915596008301
    3. ':int' → logprob: -10.7039155960083
    4. 'c' → logprob: -13.0789155960083
    5. ',' → logprob: -14.7039155960083
    6. '=int' → logprob: -15.2039155960083
    7. ',int' → logprob: -15.4539155960083
    8. ' c' → logprob: -15.9539155960083
    9. '(int' → logprob: -16.078916549682617
    10. '<int' → logprob: -16.203916549682617

Token 307: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.5928495486150496e-05
    2. ' ,' → logprob: -11.125016212463379
    3. ',r' → logprob: -13.875016212463379
    4. ',
' → logprob: -16.250015258789062
    5. ')' → logprob: -17.125015258789062
    6. '   ' → logprob: -17.500015258789062
    7. ',int' → logprob: -18.125015258789062
    8. ',c' → logprob: -18.250015258789062
    9. 'r' → logprob: -18.750015258789062
    10. ',

' → logprob: -18.750015258789062

Token 308: ' r' (ID: 428)
  Prédit: ' c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' c' → logprob: -0.08919724822044373
    2. 'c' → logprob: -2.5891971588134766
    3. ' r' → logprob: -4.839197158813477
    4. 'r' → logprob: -6.089197158813477
    5. ' ' → logprob: -10.214197158813477
    6. '    ' → logprob: -10.839197158813477
    7. '   ' → logprob: -11.839197158813477
    8. 'int' → logprob: -12.839197158813477
    9. ' ' → logprob: -13.089197158813477
    10. ')' → logprob: -13.464197158813477

Token 309: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.012556266039609909
    2. '1' → logprob: -4.387556076049805
    3. ',' → logprob: -10.137556076049805
    4. ' ' → logprob: -12.637556076049805
    5. '   ' → logprob: -13.012556076049805
    6. '```' → logprob: -14.262556076049805
    7. '  ' → logprob: -15.762556076049805
    8. '    ' → logprob: -15.887556076049805
    9. ' ,' → logprob: -15.887556076049805
    10. ':' → logprob: -16.137556076049805

Token 310: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.014534955844283104
    2. ',' → logprob: -4.514534950256348
    3. ':int' → logprob: -5.889534950256348
    4. '1' → logprob: -7.889534950256348
    5. ' :' → logprob: -8.139534950256348
    6. ' ,' → logprob: -10.889534950256348
    7. '):' → logprob: -12.014534950256348
    8. '2' → logprob: -12.139534950256348
    9. '=' → logprob: -12.139534950256348
    10. '   ' → logprob: -12.639534950256348

Token 311: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.6931508183479309
    2. ' int' → logprob: -0.6931508183479309
    3. ':int' → logprob: -12.943150520324707
    4. '=int' → logprob: -15.318150520324707
    5. '<int' → logprob: -15.443150520324707
    6. ' ' → logprob: -15.443150520324707
    7. '1' → logprob: -15.568150520324707
    8. '(int' → logprob: -16.068151473999023
    9. '	int' → logprob: -16.068151473999023
    10. '[int' → logprob: -16.193151473999023

Token 312: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.28761881589889526
    2. ':' → logprob: -1.41261887550354
    3. ':int' → logprob: -5.287618637084961
    4. ',int' → logprob: -7.037618637084961
    5. ' ,' → logprob: -8.287618637084961
    6. 'int' → logprob: -8.912618637084961
    7. ')' → logprob: -10.412618637084961
    8. '):' → logprob: -10.537618637084961
    9. ',
' → logprob: -10.912618637084961
    10. ' :' → logprob: -11.037618637084961

Token 313: ' c' (ID: 274)
  Prédit: ' c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' c' → logprob: -0.029750484973192215
    2. 'c' → logprob: -3.5297505855560303
    3. ' ' → logprob: -17.27975082397461
    4. '   ' → logprob: -17.77975082397461
    5. '    ' → logprob: -18.27975082397461
    6. ')c' → logprob: -19.27975082397461
    7. '	c' → logprob: -19.65475082397461
    8. '  ' → logprob: -20.15475082397461
    9. 'int' → logprob: -20.27975082397461
    10. ' ' → logprob: -21.02975082397461

Token 314: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -5.512236498361744e-07
    2. ' ' → logprob: -14.625000953674316
    3. '1' → logprob: -18.5
    4. '۲' → logprob: -18.5
    5. '```' → logprob: -19.625
    6. '２' → logprob: -19.625
    7. '  ' → logprob: -19.75
    8. '   ' → logprob: -19.875
    9. '=' → logprob: -20.0625
    10. 'c' → logprob: -20.0625

Token 315: ':' (ID: 25)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.15725979208946228
    2. '):
' → logprob: -2.407259702682495
    3. ')' → logprob: -2.907259702682495
    4. ':' → logprob: -8.157259941101074
    5. '):
' → logprob: -8.407259941101074
    6. '   ' → logprob: -8.657259941101074
    7. ' ):' → logprob: -9.782259941101074
    8. '):

' → logprob: -10.157259941101074
    9. ',' → logprob: -10.282259941101074
    10. ' )' → logprob: -12.532259941101074

Token 316: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.03872523084282875
    2. ' int' → logprob: -3.2887251377105713
    3. ')' → logprob: -7.53872537612915
    4. ':int' → logprob: -9.413724899291992
    5. '1' → logprob: -10.288724899291992
    6. '):' → logprob: -11.163724899291992
    7. '):
' → logprob: -11.663724899291992
    8. '   ' → logprob: -12.163724899291992
    9. ' )' → logprob: -13.663724899291992
    10. ']int' → logprob: -13.913724899291992

Token 317: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.01661183498799801
    2. ')' → logprob: -4.1416120529174805
    3. '):
' → logprob: -7.5166120529174805
    4. ' ):' → logprob: -11.26661205291748
    5. '   ' → logprob: -12.01661205291748
    6. '):
' → logprob: -12.14161205291748
    7. ':' → logprob: -12.14161205291748
    8. ')->' → logprob: -12.89161205291748
    9. ' )' → logprob: -14.76661205291748
    10. '       ' → logprob: -15.51661205291748

Token 318: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0021465737372636795
    2. 'self' → logprob: -6.7521467208862305
    3. ' self' → logprob: -7.6271467208862305
    4. '   ' → logprob: -7.7521467208862305
    5. 'temp' → logprob: -10.12714672088623
    6. 'tmp' → logprob: -11.75214672088623
    7. ' temp' → logprob: -12.37714672088623
    8. 'block' → logprob: -13.50214672088623
    9. ' block' → logprob: -14.12714672088623
    10. 'b' → logprob: -14.12714672088623

Token 319: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.052728138864040375
    2. 'temp' → logprob: -3.5527281761169434
    3. 'tmp' → logprob: -3.8027281761169434
    4. '       ' → logprob: -8.302727699279785
    5. 'b' → logprob: -9.427727699279785
    6. ' self' → logprob: -9.552727699279785
    7. ' temp' → logprob: -12.552727699279785
    8. ' tmp' → logprob: -13.927727699279785
    9. 'block' → logprob: -14.052727699279785
    10. 'old' → logprob: -14.427727699279785

Token 320: '.grid' (ID: 19269)
  Prédit: '.grid'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.grid' → logprob: -0.004121380392462015
    2. '.' → logprob: -5.50412130355835
    3. ' .' → logprob: -10.879121780395508
    4. '.swap' → logprob: -10.879121780395508
    5. '.set' → logprob: -13.129121780395508
    6. '   ' → logprob: -13.629121780395508
    7. '._' → logprob: -14.379121780395508
    8. 'grid' → logprob: -14.754121780395508
    9. '.get' → logprob: -14.879121780395508
    10. '.
' → logprob: -15.629121780395508

Token 321: '[r' (ID: 33265)
  Prédit: '[r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[r' → logprob: -1.9361264946837764e-07
    2. 'r' → logprob: -16.75
    3. '[' → logprob: -17.5
    4. '	r' → logprob: -20.125
    5. ',r' → logprob: -21.25
    6. ' r' → logprob: -21.75
    7. ' [' → logprob: -21.875
    8. '[row' → logprob: -22.25
    9. '   ' → logprob: -23.875
    10. '(r' → logprob: -24.375

Token 322: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.6100132496794686e-05
    2. '][' → logprob: -10.125056266784668
    3. '[r' → logprob: -11.125056266784668
    4. '[' → logprob: -14.625056266784668
    5. 'r' → logprob: -14.750056266784668
    6. ']' → logprob: -15.000056266784668
    7. '[row' → logprob: -16.75005531311035
    8. '2' → logprob: -18.37505531311035
    9. '```' → logprob: -18.50005531311035
    10. '   ' → logprob: -18.87505531311035

Token 323: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -2.8921695047756657e-05
    2. ' ][' → logprob: -11.375028610229492
    3. ']' → logprob: -11.625028610229492
    4. '[r' → logprob: -12.000028610229492
    5. '[c' → logprob: -13.500028610229492
    6. '   ' → logprob: -15.250028610229492
    7. '[' → logprob: -15.375028610229492
    8. ']][' → logprob: -15.500028610229492
    9. ' ' → logprob: -15.875028610229492
    10. '"][' → logprob: -17.500028610229492

Token 324: 'c' (ID: 66)
  Prédit: 'c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -1.7432603272027336e-06
    2. ' c' → logprob: -13.625001907348633
    3. '][' → logprob: -15.750001907348633
    4. '[c' → logprob: -16.375001907348633
    5. '   ' → logprob: -16.750001907348633
    6. ',c' → logprob: -17.000001907348633
    7. '	c' → logprob: -17.500001907348633
    8. ')c' → logprob: -17.625001907348633
    9. '_c' → logprob: -18.500001907348633
    10. '  ' → logprob: -19.000001907348633

Token 325: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00018208740220870823
    2. '][' → logprob: -8.875182151794434
    3. ']' → logprob: -10.625182151794434
    4. 'r' → logprob: -12.125182151794434
    5. '2' → logprob: -12.375182151794434
    6. '],' → logprob: -13.125182151794434
    7. ']][' → logprob: -13.500182151794434
    8. 'c' → logprob: -13.625182151794434
    9. '   ' → logprob: -14.375182151794434
    10. '```' → logprob: -14.500182151794434

Token 326: '],' (ID: 2155)
  Prédit: '],'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '],' → logprob: -0.0789913535118103
    2. ',' → logprob: -2.578991413116455
    3. '},' → logprob: -9.953990936279297
    4. '>,' → logprob: -11.078990936279297
    5. ']' → logprob: -11.328990936279297
    6. '),' → logprob: -11.703990936279297
    7. ',self' → logprob: -11.703990936279297
    8. ' ],' → logprob: -12.203990936279297
    9. '],[' → logprob: -12.828990936279297
    10. ''],' → logprob: -13.953990936279297

Token 327: ' self' (ID: 1051)
  Prédit: ' self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.03805835545063019
    2. 'self' → logprob: -3.288058280944824
    3. '<|end|>' → logprob: -12.163058280944824
    4. ' ' → logprob: -12.663058280944824
    5. '        ' → logprob: -12.788058280944824
    6. '=self' → logprob: -12.913058280944824
    7. '	self' → logprob: -13.413058280944824
    8. ' ' → logprob: -14.038058280944824
    9. '(self' → logprob: -14.913058280944824
    10. '[self' → logprob: -15.413058280944824

Token 328: '.grid' (ID: 19269)
  Prédit: '.grid'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.grid' → logprob: -5.676981345459353e-06
    2. '.' → logprob: -12.250005722045898
    3. 'grid' → logprob: -14.125005722045898
    4. '	grid' → logprob: -15.875005722045898
    5. ' .' → logprob: -16.7500057220459
    6. '.g' → logprob: -18.8750057220459
    7. ' grid' → logprob: -18.8750057220459
    8. '.Grid' → logprob: -19.2500057220459
    9. ':grid' → logprob: -19.3750057220459
    10. '.gridx' → logprob: -19.5000057220459

Token 329: '[r' (ID: 33265)
  Prédit: '[r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[r' → logprob: -4.36574100604048e-06
    2. '[' → logprob: -13.250004768371582
    3. '[
' → logprob: -13.625004768371582
    4. 'r' → logprob: -14.625004768371582
    5. '<|end|>' → logprob: -15.000004768371582
    6. '[row' → logprob: -15.125004768371582
    7. '[self' → logprob: -16.000003814697266
    8. '[f' → logprob: -17.375003814697266
    9. '[s' → logprob: -17.500003814697266
    10. '[c' → logprob: -17.500003814697266

Token 330: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: 0.0
    2. '[r' → logprob: -18.75
    3. '```' → logprob: -18.875
    4. 'r' → logprob: -19.0
    5. '1' → logprob: -19.25
    6. ' ' → logprob: -19.625
    7. '   ' → logprob: -19.875
    8. '
' → logprob: -20.25
    9. '][' → logprob: -20.375
    10. '[' → logprob: -20.75

Token 331: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.0004147032741457224
    2. '[c' → logprob: -7.875414848327637
    3. '[r' → logprob: -11.625414848327637
    4. ')[' → logprob: -11.875414848327637
    5. ' ][' → logprob: -12.125414848327637
    6. '[' → logprob: -12.375414848327637
    7. ']' → logprob: -12.625414848327637
    8. '	' → logprob: -13.875414848327637
    9. '}[' → logprob: -13.875414848327637
    10. '"][' → logprob: -14.125414848327637

Token 332: 'c' (ID: 66)
  Prédit: 'c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -1.1994775377388578e-05
    2. ' c' → logprob: -11.500012397766113
    3. '   ' → logprob: -14.125012397766113
    4. '[c' → logprob: -15.625012397766113
    5. '    ' → logprob: -16.250011444091797
    6. ' ' → logprob: -16.500011444091797
    7. '```' → logprob: -16.500011444091797
    8. '  ' → logprob: -16.500011444091797
    9. '
' → logprob: -16.625011444091797
    10. '     ' → logprob: -16.625011444091797

Token 333: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -7.457669562427327e-05
    2. '1' → logprob: -10.00007438659668
    3. '][' → logprob: -11.25007438659668
    4. ']' → logprob: -12.12507438659668
    5. 'c' → logprob: -12.37507438659668
    6. '[c' → logprob: -12.87507438659668
    7. 'r' → logprob: -13.50007438659668
    8. '```' → logprob: -13.87507438659668
    9. '[' → logprob: -14.50007438659668
    10. '[r' → logprob: -15.12507438659668

Token 334: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -3.869639476761222e-05
    2. ']=' → logprob: -10.250039100646973
    3. ' ]' → logprob: -12.875039100646973
    4. '],' → logprob: -14.750039100646973
    5. ')' → logprob: -15.375039100646973
    6. '=' → logprob: -15.875039100646973
    7. ']
' → logprob: -18.125038146972656
    8. ',' → logprob: -18.125038146972656
    9. '']' → logprob: -18.250038146972656
    10. '[' → logprob: -19.875038146972656

Token 335: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.018150877207517624
    2. ' =' → logprob: -4.018150806427002
    3. '=self' → logprob: -13.89315128326416
    4. '=
' → logprob: -17.143150329589844
    5. '=

' → logprob: -17.768150329589844
    6. '＝' → logprob: -18.518150329589844
    7. ',' → logprob: -20.143150329589844
    8. ')=' → logprob: -20.643150329589844
    9. '=}' → logprob: -20.893150329589844
    10. '.=' → logprob: -21.018150329589844

Token 336: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.048587486147880554
    2. ' self' → logprob: -3.0485875606536865
    3. '       ' → logprob: -16.673587799072266
    4. '	self' → logprob: -17.798587799072266
    5. '
' → logprob: -18.048587799072266
    6. '(self' → logprob: -18.173587799072266
    7. '=self' → logprob: -18.548587799072266
    8. '[self' → logprob: -19.173587799072266
    9. ' ' → logprob: -19.548587799072266
    10. '   ' → logprob: -19.798587799072266

Token 337: '.grid' (ID: 19269)
  Prédit: '.grid'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.grid' → logprob: -4.6087021473795176e-05
    2. 'grid' → logprob: -10.000045776367188
    3. '.' → logprob: -14.500045776367188
    4. '	grid' → logprob: -16.750045776367188
    5. ' .' → logprob: -17.875045776367188
    6. 'self' → logprob: -18.000045776367188
    7. ' grid' → logprob: -18.375045776367188
    8. '.get' → logprob: -18.875045776367188
    9. ':grid' → logprob: -19.000045776367188
    10. '_grid' → logprob: -19.125045776367188

Token 338: '[r' (ID: 33265)
  Prédit: '[r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[r' → logprob: -0.0011703446507453918
    2. 'r' → logprob: -6.7511701583862305
    3. '[' → logprob: -15.75117015838623
    4. ' r' → logprob: -17.376171112060547
    5. '	r' → logprob: -17.501171112060547
    6. '(r' → logprob: -19.376171112060547
    7. ',r' → logprob: -19.626171112060547
    8. '[self' → logprob: -20.126171112060547
    9. '[
' → logprob: -20.376171112060547
    10. '```' → logprob: -20.626171112060547

Token 339: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -1.9981420336989686e-05
    2. '][' → logprob: -10.875020027160645
    3. 'r' → logprob: -14.875020027160645
    4. '1' → logprob: -15.250020027160645
    5. '```' → logprob: -15.750020027160645
    6. '[' → logprob: -16.750019073486328
    7. '   ' → logprob: -17.000019073486328
    8. 's' → logprob: -17.625019073486328
    9. '
' → logprob: -18.000019073486328
    10. '[r' → logprob: -18.375019073486328

Token 340: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.00046558488975279033
    2. '[r' → logprob: -7.875465393066406
    3. '[c' → logprob: -10.250465393066406
    4. ']' → logprob: -10.375465393066406
    5. ' ][' → logprob: -11.375465393066406
    6. '[' → logprob: -13.625465393066406
    7. '"][' → logprob: -13.750465393066406
    8. '[row' → logprob: -13.875465393066406
    9. ']][' → logprob: -14.125465393066406
    10. 'r' → logprob: -14.750465393066406

Token 341: 'c' (ID: 66)
  Prédit: 'c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -2.5941604690160602e-05
    2. ' c' → logprob: -10.625025749206543
    3. '   ' → logprob: -15.000025749206543
    4. ',c' → logprob: -15.250025749206543
    5. '][' → logprob: -15.375025749206543
    6. '[c' → logprob: -15.500025749206543
    7. '```' → logprob: -16.12502670288086
    8. ')c' → logprob: -16.37502670288086
    9. 'r' → logprob: -16.62502670288086
    10. ',' → logprob: -16.62502670288086

Token 342: '2' (ID: 17)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.002072705887258053
    2. '2' → logprob: -6.877072811126709
    3. 'c' → logprob: -7.377072811126709
    4. '][' → logprob: -8.12707233428955
    5. ',c' → logprob: -9.75207233428955
    6. 's' → logprob: -10.87707233428955
    7. '```' → logprob: -11.50207233428955
    8. ',' → logprob: -11.87707233428955
    9. 'col' → logprob: -12.62707233428955
    10. ']][' → logprob: -12.75207233428955

Token 343: '],' (ID: 2155)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0037219305522739887
    2. '],' → logprob: -5.628721714019775
    3. ' ,' → logprob: -9.128722190856934
    4. ',self' → logprob: -11.503722190856934
    5. '       ' → logprob: -14.253722190856934
    6. ',
' → logprob: -14.378722190856934
    7. 'self' → logprob: -14.378722190856934
    8. ' ],' → logprob: -14.753722190856934
    9. '),' → logprob: -14.753722190856934
    10. '   ' → logprob: -15.503722190856934

Token 344: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.3868723213672638
    2. ' self' → logprob: -1.1368722915649414
    3. '       ' → logprob: -14.511872291564941
    4. '	self' → logprob: -15.136872291564941
    5. '(self' → logprob: -15.636872291564941
    6. '[self' → logprob: -16.011873245239258
    7. '<|end|>' → logprob: -16.261873245239258
    8. ' ' → logprob: -16.886873245239258
    9. ' ' → logprob: -17.761873245239258
    10. '        ' → logprob: -17.761873245239258

Token 345: '.grid' (ID: 19269)
  Prédit: '.grid'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.grid' → logprob: -1.4140441635390744e-05
    2. 'grid' → logprob: -11.875014305114746
    3. '.' → logprob: -12.250014305114746
    4. '[r' → logprob: -13.625014305114746
    5. ' .' → logprob: -14.250014305114746
    6. '.r' → logprob: -16.62501335144043
    7. '.g' → logprob: -16.75001335144043
    8. ' grid' → logprob: -16.87501335144043
    9. '_grid' → logprob: -17.00001335144043
    10. '	grid' → logprob: -17.25001335144043

Token 346: '[r' (ID: 33265)
  Prédit: '[r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[r' → logprob: -1.8624639324116288e-06
    2. 'r' → logprob: -14.375001907348633
    3. 'grid' → logprob: -14.500001907348633
    4. '[self' → logprob: -15.250001907348633
    5. '[' → logprob: -15.875001907348633
    6. '```' → logprob: -16.125001907348633
    7. '[
' → logprob: -16.250001907348633
    8. '[row' → logprob: -16.750001907348633
    9. '][' → logprob: -17.125001907348633
    10. '   ' → logprob: -17.375001907348633

Token 347: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00025871701654978096
    2. 'r' → logprob: -9.000258445739746
    3. '[r' → logprob: -9.625258445739746
    4. '][' → logprob: -10.000258445739746
    5. '```' → logprob: -11.500258445739746
    6. 'grid' → logprob: -12.500258445739746
    7. ']' → logprob: -12.625258445739746
    8. 's' → logprob: -13.750258445739746
    9. '   ' → logprob: -14.375258445739746
    10. '`' → logprob: -14.500258445739746

Token 348: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -2.7133641196996905e-05
    2. '[c' → logprob: -10.75002670288086
    3. ' ][' → logprob: -12.75002670288086
    4. ']' → logprob: -13.12502670288086
    5. 'c' → logprob: -14.87502670288086
    6. ',c' → logprob: -16.50002670288086
    7. ']][' → logprob: -16.50002670288086
    8. '   ' → logprob: -16.62502670288086
    9. '"][' → logprob: -16.75002670288086
    10. ''][' → logprob: -17.12502670288086

Token 349: 'c' (ID: 66)
  Prédit: 'c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -4.961759259458631e-06
    2. ' c' → logprob: -12.625004768371582
    3. '   ' → logprob: -13.875004768371582
    4. '1' → logprob: -16.2500057220459
    5. ')c' → logprob: -16.2500057220459
    6. '```' → logprob: -16.3750057220459
    7. ' ' → logprob: -16.6250057220459
    8. '    ' → logprob: -16.8750057220459
    9. '  ' → logprob: -17.0000057220459
    10. ']' → logprob: -17.0000057220459

Token 350: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0021017256658524275
    2. ']' → logprob: -6.502101898193359
    3. ')' → logprob: -8.12710189819336
    4. '])' → logprob: -8.25210189819336
    5. '][' → logprob: -11.37710189819336
    6. '   ' → logprob: -12.50210189819336
    7. '```' → logprob: -12.62710189819336
    8. 'c' → logprob: -12.75210189819336
    9. ',' → logprob: -13.00210189819336
    10. ' ' → logprob: -13.12710189819336

Token 351: ']

' (ID: 3144)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0025794629473239183
    2. '<|end|>' → logprob: -6.502579689025879
    3. ']' → logprob: -6.877579689025879
    4. ')
' → logprob: -10.627579689025879
    5. '       ' → logprob: -11.877579689025879
    6. '}' → logprob: -11.877579689025879
    7. '<|end|>' → logprob: -12.877579689025879
    8. '   ' → logprob: -13.002579689025879
    9. ')return' → logprob: -14.627579689025879
    10. '```' → logprob: -14.752579689025879

Token 352: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6435486674308777
    2. '<|end|>' → logprob: -1.0185487270355225
    3. '
' → logprob: -2.2685487270355225
    4. '```' → logprob: -5.518548488616943
    5. '<|end|>' → logprob: -5.768548488616943
    6. '    
' → logprob: -6.643548488616943
    7. 'def' → logprob: -8.018548965454102
    8. '       ' → logprob: -8.018548965454102
    9. 'newline' → logprob: -8.893548965454102
    10. ' ' → logprob: -8.893548965454102

Token 353: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.03857945278286934
    2. '   ' → logprob: -3.2885794639587402
    3. ' def' → logprob: -7.66357946395874
    4. '
' → logprob: -10.288578987121582
    5. '#' → logprob: -10.413578987121582
    6. '    
' → logprob: -12.788578987121582
    7. '	def' → logprob: -14.538578987121582
    8. 'from' → logprob: -15.163578987121582
    9. '```' → logprob: -15.288578987121582
    10. '

' → logprob: -16.4135799407959

Token 354: ' find' (ID: 1646)
  Prédit: ' find'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' find' → logprob: -0.021750018000602722
    2. ' def' → logprob: -4.896749973297119
    3. 'find' → logprob: -5.396749973297119
    4. ' _' → logprob: -5.521749973297119
    5. ' erase' → logprob: -6.146749973297119
    6. 'def' → logprob: -6.896749973297119
    7. '_' → logprob: -7.896749973297119
    8. '_find' → logprob: -8.146750450134277
    9. ' is' → logprob: -8.396750450134277
    10. ' check' → logprob: -8.396750450134277

Token 355: '_matches' (ID: 97462)
  Prédit: '_matches'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_matches' → logprob: -0.03770369291305542
    2. '_groups' → logprob: -4.537703514099121
    3. '_clusters' → logprob: -4.537703514099121
    4. '_matching' → logprob: -4.912703514099121
    5. '_connected' → logprob: -6.162703514099121
    6. '_blocks' → logprob: -6.662703514099121
    7. '_' → logprob: -6.787703514099121
    8. '_same' → logprob: -7.162703514099121
    9. '_match' → logprob: -7.287703514099121
    10. '_ch' → logprob: -7.287703514099121

Token 356: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.00010235115041723475
    2. '(' → logprob: -9.750102043151855
    3. 'self' → logprob: -10.125102043151855
    4. '   ' → logprob: -13.250102043151855
    5. '(
' → logprob: -13.750102043151855
    6. ' (' → logprob: -15.000102043151855
    7. ' self' → logprob: -15.250102043151855
    8. '       ' → logprob: -15.750102043151855
    9. 'def' → logprob: -15.750102043151855
    10. '	self' → logprob: -16.750102996826172

Token 357: ')' (ID: 8)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.7992073893547058
    2. ')' → logprob: -1.4242074489593506
    3. '):' → logprob: -1.9242074489593506
    4. '):
' → logprob: -2.0492074489593506
    5. '(self' → logprob: -3.5492074489593506
    6. ',' → logprob: -6.0492072105407715
    7. '   ' → logprob: -6.2992072105407715
    8. '       ' → logprob: -7.2992072105407715
    9. ' self' → logprob: -7.6742072105407715
    10. '):
' → logprob: -9.42420768737793

Token 358: ' ->' (ID: 2747)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.0032424782402813435
    2. 'self' → logprob: -6.253242492675781
    3. ' ->' → logprob: -7.128242492675781
    4. '->' → logprob: -8.128242492675781
    5. '(' → logprob: -9.503242492675781
    6. '   ' → logprob: -9.753242492675781
    7. '       ' → logprob: -10.128242492675781
    8. ' self' → logprob: -11.128242492675781
    9. ')' → logprob: -11.253242492675781
    10. ' (' → logprob: -12.003242492675781

Token 359: ' Set' (ID: 3957)
  Prédit: 'Set'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Set' → logprob: -0.009214320220053196
    2. ' Set' → logprob: -5.009214401245117
    3. 'List' → logprob: -6.009214401245117
    4. ' List' → logprob: -10.259214401245117
    5. '   ' → logprob: -12.759214401245117
    6. '	Set' → logprob: -13.759214401245117
    7. 'set' → logprob: -15.134214401245117
    8. ' ' → logprob: -15.259214401245117
    9. '  ' → logprob: -16.759214401245117
    10. '_Set' → logprob: -17.259214401245117

Token 360: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.00010103991371579468
    2. '[(' → logprob: -9.250101089477539
    3. '[
' → logprob: -13.500101089477539
    4. '(Set' → logprob: -14.000101089477539
    5. '```' → logprob: -14.125101089477539
    6. '{' → logprob: -14.375101089477539
    7. '[List' → logprob: -14.500101089477539
    8. '<Tuple' → logprob: -14.875101089477539
    9. '[int' → logprob: -16.00010108947754
    10. 'Set' → logprob: -16.12510108947754

Token 361: 'Tuple' (ID: 40048)
  Prédit: 'Tuple'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Tuple' → logprob: -9.088346359931165e-07
    2. ' Tuple' → logprob: -14.125000953674316
    3. '[' → logprob: -15.750000953674316
    4. 'tuple' → logprob: -17.25
    5. '<Tuple' → logprob: -17.375
    6. '.Tuple' → logprob: -17.375
    7. 'Tu' → logprob: -18.5
    8. 'int' → logprob: -19.0
    9. '[int' → logprob: -19.875
    10. '   ' → logprob: -19.875

Token 362: '[int' (ID: 40124)
  Prédit: '[int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[int' → logprob: -8.180258191714529e-06
    2. 'int' → logprob: -11.750008583068848
    3. '<int' → logprob: -15.375008583068848
    4. ']int' → logprob: -18.12500762939453
    5. '(int' → logprob: -18.87500762939453
    6. '[
' → logprob: -19.37500762939453
    7. ',int' → logprob: -20.50000762939453
    8. ' int' → logprob: -20.87500762939453
    9. '=int' → logprob: -21.25000762939453
    10. '```' → logprob: -21.25000762939453

Token 363: ',int' (ID: 20909)
  Prédit: ',int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',int' → logprob: -0.12697073817253113
    2. ',' → logprob: -2.1269707679748535
    3. '[int' → logprob: -10.626970291137695
    4. ' ,' → logprob: -11.751970291137695
    5. 'int' → logprob: -11.751970291137695
    6. '   ' → logprob: -13.876970291137695
    7. ']int' → logprob: -14.501970291137695
    8. '(int' → logprob: -14.876970291137695
    9. ',
' → logprob: -15.001970291137695
    10. ':int' → logprob: -15.751970291137695

Token 364: ']]:
' (ID: 183340)
  Prédit: ']]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']]' → logprob: -0.008219863288104534
    2. ']' → logprob: -5.5082197189331055
    3. ']>' → logprob: -6.0082197189331055
    4. ']]:
' → logprob: -6.5082197189331055
    5. '>' → logprob: -9.508219718933105
    6. ')]' → logprob: -10.383219718933105
    7. ']:' → logprob: -10.383219718933105
    8. '>]' → logprob: -11.258219718933105
    9. ']]]' → logprob: -12.008219718933105
    10. '']]' → logprob: -12.008219718933105

Token 365: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0003571535926312208
    2. '   ' → logprob: -9.000357627868652
    3. '        
' → logprob: -9.625357627868652
    4. '
' → logprob: -10.125357627868652
    5. '```' → logprob: -10.500357627868652
    6. '    ' → logprob: -11.500357627868652
    7. ' positions' → logprob: -11.500357627868652
    8. '{' → logprob: -11.750357627868652
    9. '    
' → logprob: -11.875357627868652
    10. ' set' → logprob: -11.875357627868652

Token 366: ' #' (ID: 1069)
  Prédit: 'matches'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'matches' → logprob: -0.02370276115834713
    2. 'matched' → logprob: -3.77370285987854
    3. '       ' → logprob: -8.023702621459961
    4. 'positions' → logprob: -9.273702621459961
    5. ' matches' → logprob: -11.023702621459961
    6. 'found' → logprob: -11.398702621459961
    7. 'match' → logprob: -12.648702621459961
    8. ' matched' → logprob: -12.898702621459961
    9. 'matching' → logprob: -13.398702621459961
    10. '   ' → logprob: -14.648702621459961

Token 367: ' Return' (ID: 6318)
  Prédit: 'matches'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'matches' → logprob: -0.07979648560285568
    2. 'matched' → logprob: -2.579796552658081
    3. 'positions' → logprob: -7.329796314239502
    4. '   ' → logprob: -9.32979679107666
    5. ' matches' → logprob: -9.82979679107666
    6. 'found' → logprob: -10.07979679107666
    7. '       ' → logprob: -10.07979679107666
    8. ' matched' → logprob: -11.32979679107666
    9. 'match' → logprob: -12.20479679107666
    10. 'to' → logprob: -13.20479679107666

Token 368: ' positions' (ID: 15897)
  Prédit: 'positions'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'positions' → logprob: -1.3032087087631226
    2. 'matches' → logprob: -1.3032087087631226
    3. ' matched' → logprob: -1.9282087087631226
    4. ' positions' → logprob: -2.053208827972412
    5. 'matched' → logprob: -2.178208827972412
    6. ' matches' → logprob: -2.803208827972412
    7. ' set' → logprob: -5.178208827972412
    8. 'set' → logprob: -6.553208827972412
    9. '   ' → logprob: -7.053208827972412
    10. ' a' → logprob: -8.053208351135254

Token 369: ' to' (ID: 316)
  Prédit: ' of'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' of' → logprob: -0.7428432703018188
    2. '       ' → logprob: -0.8678432703018188
    3. 'of' → logprob: -3.1178431510925293
    4. ' that' → logprob: -3.7428431510925293
    5. ' to' → logprob: -4.617843151092529
    6. 'that' → logprob: -5.117843151092529
    7. 'to' → logprob: -5.242843151092529
    8. 'matched' → logprob: -6.242843151092529
    9. 'matches' → logprob: -6.367843151092529
    10. 'positions' → logprob: -6.492843151092529

Token 370: ' erase' (ID: 71888)
  Prédit: 'erase'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'erase' → logprob: -0.004054298158735037
    2. 'remove' → logprob: -6.129054069519043
    3. ' erase' → logprob: -6.629054069519043
    4. 'er' → logprob: -8.754054069519043
    5. 'el' → logprob: -8.754054069519043
    6. '.erase' → logprob: -8.879054069519043
    7. 'clear' → logprob: -10.254054069519043
    8. 'be' → logprob: -10.629054069519043
    9. 'delete' → logprob: -11.754054069519043
    10. ' be' → logprob: -12.504054069519043

Token 371: ':' (ID: 25)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.9599988460540771
    2. ':' → logprob: -1.3349988460540771
    3. '       ' → logprob: -1.8349988460540771
    4. 'positions' → logprob: -2.334998846054077
    5. '   ' → logprob: -3.584998846054077
    6. '():' → logprob: -3.959998846054077
    7. ' positions' → logprob: -4.209999084472656
    8. '()' → logprob: -4.834999084472656
    9. '=' → logprob: -5.084999084472656
    10. '{' → logprob: -5.459999084472656

Token 372: ' horizontal' (ID: 25511)
  Prédit: 'matches'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'matches' → logprob: -0.12729375064373016
    2. 'positions' → logprob: -2.377293825149536
    3. ' matches' → logprob: -4.002293586730957
    4. 'matched' → logprob: -5.502293586730957
    5. ' positions' → logprob: -6.252293586730957
    6. '       ' → logprob: -7.002293586730957
    7. 'match' → logprob: -7.377293586730957
    8. ' matched' → logprob: -7.627293586730957
    9. '{' → logprob: -9.002293586730957
    10. 'to' → logprob: -9.502293586730957

Token 373: ' or' (ID: 503)
  Prédit: 'matches'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'matches' → logprob: -0.5070464611053467
    2. 'and' → logprob: -1.5070464611053467
    3. 'positions' → logprob: -2.5070464611053467
    4. ' and' → logprob: -3.1320464611053467
    5. ' matches' → logprob: -3.7570464611053467
    6. 'or' → logprob: -4.007046699523926
    7. '_matches' → logprob: -5.757046699523926
    8. ' or' → logprob: -6.507046699523926
    9. ' positions' → logprob: -6.757046699523926
    10. ',' → logprob: -7.382046699523926

Token 374: ' vertical' (ID: 17679)
  Prédit: ' vertical'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' vertical' → logprob: -0.28145870566368103
    2. 'vertical' → logprob: -1.4064587354660034
    3. '(vertical' → logprob: -8.531458854675293
    4. '_vertical' → logprob: -10.031458854675293
    5. ' ' → logprob: -10.906458854675293
    6. '.vertical' → logprob: -11.281458854675293
    7. '   ' → logprob: -11.531458854675293
    8. 'orizontal' → logprob: -12.031458854675293
    9. 'vert' → logprob: -12.156458854675293
    10. ' vertically' → logprob: -12.906458854675293

Token 375: ' ' (ID: 220)
  Prédit: 'matches'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'matches' → logprob: -0.12993000447750092
    2. ' matches' → logprob: -2.504930019378662
    3. 'positions' → logprob: -3.379930019378662
    4. ' positions' → logprob: -5.254930019378662
    5. 'matched' → logprob: -8.504929542541504
    6. '   ' → logprob: -9.129929542541504
    7. 'sets' → logprob: -9.254929542541504
    8. ' sets' → logprob: -9.254929542541504
    9. '_matches' → logprob: -9.254929542541504
    10. 'blocks' → logprob: -9.629929542541504

Token 376: '3' (ID: 18)
  Prédit: 'matches'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'matches' → logprob: -0.13046760857105255
    2. 'positions' → logprob: -2.130467653274536
    3. ' matches' → logprob: -6.380467414855957
    4. 'sets' → logprob: -6.880467414855957
    5. ' positions' → logprob: -7.755467414855957
    6. 'matched' → logprob: -8.505467414855957
    7. 'set' → logprob: -9.630467414855957
    8. 'blocks' → logprob: -10.255467414855957
    9. ' sets' → logprob: -10.630467414855957
    10. 'match' → logprob: -11.380467414855957

Token 377: ' or' (ID: 503)
  Prédit: 'or'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'or' → logprob: -0.6333229541778564
    2. ' or' → logprob: -1.3833229541778564
    3. '+' → logprob: -2.1333229541778564
    4. '   ' → logprob: -4.133322715759277
    5. ',' → logprob: -4.258322715759277
    6. 'x' → logprob: -4.383322715759277
    7. ')' → logprob: -4.508322715759277
    8. '|' → logprob: -5.133322715759277
    9. '>' → logprob: -5.258322715759277
    10. '-in' → logprob: -5.508322715759277

Token 378: ' more' (ID: 945)
  Prédit: 'more'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'more' → logprob: -0.12004496902227402
    2. ' more' → logprob: -2.3700449466705322
    3. '+' → logprob: -3.9950449466705322
    4. 'greater' → logprob: -7.370045185089111
    5. '_more' → logprob: -8.620044708251953
    6. '>' → logprob: -8.995044708251953
    7. '-more' → logprob: -9.495044708251953
    8. '-' → logprob: -9.620044708251953
    9. 'long' → logprob: -10.870044708251953
    10. '   ' → logprob: -10.995044708251953

Token 379: ' same' (ID: 2684)
  Prédit: 'positions'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'positions' → logprob: -0.16151422262191772
    2. ' positions' → logprob: -2.1615142822265625
    3. '_positions' → logprob: -4.0365142822265625
    4. '{' → logprob: -5.5365142822265625
    5. '_set' → logprob: -5.5365142822265625
    6. '   ' → logprob: -5.7865142822265625
    7. ':' → logprob: -7.5365142822265625
    8. '       ' → logprob: -7.7865142822265625
    9. ')' → logprob: -7.7865142822265625
    10. 'for' → logprob: -7.9115142822265625

Token 380: ' blocks' (ID: 18125)
  Prédit: 'blocks'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'blocks' → logprob: -0.5979121923446655
    2. '   ' → logprob: -2.097912311553955
    3. '       ' → logprob: -2.222912311553955
    4. 'positions' → logprob: -2.472912311553955
    5. ' blocks' → logprob: -2.597912311553955
    6. 'tokens' → logprob: -3.472912311553955
    7. 'cells' → logprob: -5.097912311553955
    8. ' positions' → logprob: -5.347912311553955
    9. 'block' → logprob: -5.347912311553955
    10. '_blocks' → logprob: -5.472912311553955

Token 381: ' lined' (ID: 49205)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.013715728186070919
    2. 'positions' → logprob: -4.513715744018555
    3. ' positions' → logprob: -6.763715744018555
    4. '):
' → logprob: -8.263715744018555
    5. ':' → logprob: -8.263715744018555
    6. '
' → logprob: -8.513715744018555
    7. ':
' → logprob: -8.638715744018555
    8. '():
' → logprob: -9.388715744018555
    9. '   ' → logprob: -9.513715744018555
    10. '_positions' → logprob: -9.638715744018555

Token 382: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.12900219857692719
    2. '   ' → logprob: -3.254002094268799
    3. 'return' → logprob: -3.754002094268799
    4. '()' → logprob: -4.379002094268799
    5. '{}' → logprob: -5.379002094268799
    6. 'positions' → logprob: -5.379002094268799
    7. 's' → logprob: -5.629002094268799
    8. ' ' → logprob: -5.629002094268799
    9. '           ' → logprob: -5.754002094268799
    10. 'sets' → logprob: -5.754002094268799

Token 383: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0003573919821064919
    2. '   ' → logprob: -8.750357627868652
    3. ',' → logprob: -9.625357627868652
    4. ':' → logprob: -10.125357627868652
    5. '()' → logprob: -11.000357627868652
    6. '        
' → logprob: -11.125357627868652
    7. ')' → logprob: -11.250357627868652
    8. ' positions' → logprob: -11.875357627868652
    9. '
' → logprob: -12.125357627868652
    10. '      ' → logprob: -12.875357627868652

Token 384: ' to' (ID: 316)
  Prédit: 'matches'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'matches' → logprob: -0.47873175144195557
    2. 'positions' → logprob: -1.2287317514419556
    3. 'matched' → logprob: -2.978731632232666
    4. 'to' (adapté à ' to') → logprob: -3.853731632232666
    5. '       ' → logprob: -4.228731632232666
    6. 'result' → logprob: -7.728731632232666
    7. 'erase' → logprob: -8.353732109069824
    8. '   ' → logprob: -9.228732109069824
    9. 'match' → logprob: -9.228732109069824
    10. 'er' → logprob: -9.353732109069824

Token 385: '_' (ID: 62)
  Prédit: '_'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.20166201889514923
    2. 'erase' → logprob: -1.7016620635986328
    3. '   ' → logprob: -9.451662063598633
    4. '.erase' → logprob: -9.701662063598633
    5. '_remove' → logprob: -10.701662063598633
    6. '=' → logprob: -11.201662063598633
    7. 'er' → logprob: -11.576662063598633
    8. ' erase' → logprob: -11.576662063598633
    9. 'remove' → logprob: -11.826662063598633
    10. ' =' → logprob: -11.826662063598633

Token 386: 'erase' (ID: 91229)
  Prédit: 'erase'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'erase' → logprob: -0.001718019717372954
    2. 'rase' → logprob: -6.501718044281006
    3. 'r' → logprob: -9.626717567443848
    4. 'erse' → logprob: -10.251717567443848
    5. 'er' → logprob: -10.251717567443848
    6. 'arse' → logprob: -11.001717567443848
    7. 'ase' → logprob: -11.501717567443848
    8. '.erase' → logprob: -11.751717567443848
    9. '```' → logprob: -11.876717567443848
    10. 'remove' → logprob: -12.001717567443848

Token 387: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.16070985794067383
    2. '=' → logprob: -1.9107098579406738
    3. ':' → logprob: -7.660709857940674
    4. '=set' → logprob: -11.535709381103516
    5. ' ' → logprob: -12.410709381103516
    6. ' :' → logprob: -14.535709381103516
    7. '   ' → logprob: -16.285709381103516
    8. '  ' → logprob: -16.910709381103516
    9. '=[]' → logprob: -17.660709381103516
    10. ',' → logprob: -18.035709381103516

Token 388: ' set' (ID: 920)
  Prédit: 'set'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'set' → logprob: -0.00033546582562848926
    2. ' set' → logprob: -8.000335693359375
    3. '	set' → logprob: -17.875335693359375
    4. ' ' → logprob: -18.125335693359375
    5. '=set' → logprob: -18.875335693359375
    6. '{' → logprob: -19.875335693359375
    7. '   ' → logprob: -20.000335693359375
    8. '  ' → logprob: -20.500335693359375
    9. 'se' → logprob: -20.750335693359375
    10. '{}' → logprob: -21.375335693359375

Token 389: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.10032916069030762
    2. '()
' → logprob: -2.3503291606903076
    3. '()

' → logprob: -9.850329399108887
    4. '       ' → logprob: -10.600329399108887
    5. '()\' → logprob: -10.975329399108887
    6. '()
' → logprob: -11.475329399108887
    7. '(' → logprob: -11.600329399108887
    8. '   ' → logprob: -12.475329399108887
    9. '(
' → logprob: -12.850329399108887
    10. '();' → logprob: -14.475329399108887

Token 390: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.005052183289080858
    2. '
' → logprob: -5.505052089691162
    3. ' for' → logprob: -7.255052089691162
    4. '   ' → logprob: -8.63005256652832
    5. '        
' → logprob: -9.88005256652832
    6. 'for' → logprob: -10.88005256652832
    7. '    
' → logprob: -12.50505256652832
    8. '  
' → logprob: -12.50505256652832
    9. ',' → logprob: -13.38005256652832
    10. '           ' → logprob: -13.88005256652832

Token 391: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.022071335464715958
    2. '#' (adapté à ' #') → logprob: -4.022071361541748
    3. '       ' → logprob: -6.022071361541748
    4. ' for' → logprob: -6.522071361541748
    5. '   ' → logprob: -11.14707088470459
    6. ' #' → logprob: -12.89707088470459
    7. '
' → logprob: -14.39707088470459
    8. '        
' → logprob: -14.89707088470459
    9. '	for' → logprob: -15.14707088470459
    10. 'rows' → logprob: -15.39707088470459

Token 392: ' Horizontal' (ID: 75428)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0018650951096788049
    2. '#' → logprob: -6.501864910125732
    3. ' for' → logprob: -8.00186538696289
    4. '       ' → logprob: -10.50186538696289
    5. '   ' → logprob: -15.50186538696289
    6. ' #' → logprob: -16.62686538696289
    7. 'rows' → logprob: -17.25186538696289
    8. '	for' → logprob: -18.12686538696289
    9. 'r' → logprob: -18.50186538696289
    10. '```' → logprob: -18.50186538696289

Token 393: ' check' (ID: 2371)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.02986225299537182
    2. ' for' → logprob: -3.52986216545105
    3. '       ' → logprob: -9.154862403869629
    4. '
' → logprob: -12.279862403869629
    5. '   ' → logprob: -14.279862403869629
    6. '        
' → logprob: -14.779862403869629
    7. '	for' → logprob: -15.154862403869629
    8. ')' → logprob: -16.529861450195312
    9. ' lines' → logprob: -16.779861450195312
    10. ',' → logprob: -17.529861450195312

Token 394: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.34522688388824463
    2. ' for' → logprob: -1.3452268838882446
    3. '
' → logprob: -3.970226764678955
    4. 'for' → logprob: -4.470226764678955
    5. ':' → logprob: -7.720226764678955
    6. ':
' → logprob: -8.720227241516113
    7. '        
' → logprob: -8.720227241516113
    8. '   ' → logprob: -9.095227241516113
    9. '<|end|>' → logprob: -9.095227241516113
    10. '	for' → logprob: -10.595227241516113

Token 395: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.8270444273948669
    2. ' for' → logprob: -0.8270444273948669
    3. 'for' → logprob: -2.0770444869995117
    4. '   ' → logprob: -11.077044486999512
    5. '	for' → logprob: -13.702044486999512
    6. '
' → logprob: -13.952044486999512
    7. '        
' → logprob: -14.077044486999512
    8. '```' → logprob: -14.202044486999512
    9. 'row' → logprob: -15.202044486999512
    10. ' ' → logprob: -15.202044486999512

Token 396: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.0006768120219931006
    2. ' for' → logprob: -7.50067663192749
    3. '       ' → logprob: -9.000677108764648
    4. '   ' → logprob: -14.625677108764648
    5. '	for' → logprob: -17.12567710876465
    6. ' ' → logprob: -19.87567710876465
    7. '```' → logprob: -20.00067710876465
    8. 'r' → logprob: -21.62567710876465
    9. 'row' → logprob: -21.75067710876465
    10. '``' → logprob: -21.75067710876465

Token 397: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.00033760786755010486
    2. ' r' → logprob: -8.000337600708008
    3. 'row' → logprob: -13.125337600708008
    4. '   ' → logprob: -16.250337600708008
    5. ' row' → logprob: -17.125337600708008
    6. 'i' → logprob: -18.000337600708008
    7. '	r' → logprob: -19.500337600708008
    8. ' ' → logprob: -20.750337600708008
    9. '  ' → logprob: -21.375337600708008
    10. '```' → logprob: -21.875337600708008

Token 398: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0011803467059507966
    2. 'in' → logprob: -6.751180171966553
    3. '   ' → logprob: -12.376180648803711
    4. ' ' → logprob: -12.751180648803711
    5. ',' → logprob: -13.876180648803711
    6. '       ' → logprob: -14.251180648803711
    7. '    ' → logprob: -15.126180648803711
    8. 'range' → logprob: -15.501180648803711
    9. '  ' → logprob: -15.751180648803711
    10. '	in' → logprob: -15.876180648803711

Token 399: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.00020354038861114532
    2. ' range' → logprob: -8.500203132629395
    3. '	range' → logprob: -22.37520408630371
    4. '(range' → logprob: -23.00020408630371
    5. '   ' → logprob: -23.75020408630371
    6. ' ' → logprob: -24.87520408630371
    7. 'Range' → logprob: -25.25020408630371
    8. 'self' → logprob: -25.62520408630371
    9. '  ' → logprob: -26.25020408630371
    10. '_range' → logprob: -26.37520408630371

Token 400: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -8.876193169271573e-05
    2. '(Board' → logprob: -9.375088691711426
    3. '(' → logprob: -12.625088691711426
    4. 'self' → logprob: -14.875088691711426
    5. '   ' → logprob: -16.875089645385742
    6. '       ' → logprob: -17.375089645385742
    7. '(len' → logprob: -17.500089645385742
    8. '(
' → logprob: -17.625089645385742
    9. '1' → logprob: -18.500089645385742
    10. 'Board' → logprob: -19.250089645385742

Token 401: '.' (ID: 13)
  Prédit: '.'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.5749382376670837
    2. '   ' → logprob: -1.1999382972717285
    3. 'HEIGHT' → logprob: -2.0749382972717285
    4. 'self' → logprob: -5.6999382972717285
    5. '(' → logprob: -6.1999382972717285
    6. 'Board' → logprob: -6.5749382972717285
    7. '5' → logprob: -7.1999382972717285
    8. '       ' → logprob: -7.3249382972717285
    9. ',' → logprob: -8.44993782043457
    10. 'BOARD' → logprob: -8.44993782043457

Token 402: 'HEIGHT' (ID: 105934)
  Prédit: 'Board'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Board' → logprob: -0.18646040558815002
    2. 'HEIGHT' → logprob: -1.8114603757858276
    3. 'self' → logprob: -5.686460494995117
    4. '5' → logprob: -6.686460494995117
    5. 'WIDTH' → logprob: -6.811460494995117
    6. ' Board' → logprob: -7.561460494995117
    7. 'BOARD' → logprob: -8.311460494995117
    8. 'height' → logprob: -9.686460494995117
    9. '   ' → logprob: -10.436460494995117
    10. ' HEIGHT' → logprob: -10.811460494995117

Token 403: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.02064535953104496
    2. '):' → logprob: -3.8956453800201416
    3. '   ' → logprob: -10.270645141601562
    4. '):
' → logprob: -10.395645141601562
    5. '       ' → logprob: -10.895645141601562
    6. ' ):
' → logprob: -11.145645141601562
    7. '()):
' → logprob: -13.770645141601562
    8. ')' → logprob: -14.020645141601562
    9. '):

' → logprob: -14.145645141601562
    10. ' ):' → logprob: -14.145645141601562

Token 404: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5453230142593384
    2. '   ' → logprob: -0.9203230142593384
    3. '           ' → logprob: -4.420322895050049
    4. 'c' → logprob: -5.170322895050049
    5. ' c' → logprob: -6.295322895050049
    6. ' ' → logprob: -6.545322895050049
    7. ',' → logprob: -7.920322895050049
    8. ',c' → logprob: -8.545323371887207
    9. '```' → logprob: -9.545323371887207
    10. '    ' → logprob: -9.920323371887207

Token 405: ' count' (ID: 3605)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.0008743013604544103
    2. '   ' → logprob: -7.5008745193481445
    3. ' c' → logprob: -8.500874519348145
    4. 'count' (adapté à ' count') → logprob: -9.250874519348145
    5. '       ' → logprob: -11.500874519348145
    6. 'start' → logprob: -11.750874519348145
    7. 'run' → logprob: -13.125874519348145
    8. 'for' → logprob: -14.250874519348145
    9. '    ' → logprob: -14.750874519348145
    10. ' ' → logprob: -15.250874519348145

Token 406: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.47409912943840027
    2. ' =' → logprob: -0.9740991592407227
    3. ' ' → logprob: -11.599099159240723
    4. ',' → logprob: -11.974099159240723
    5. '   ' → logprob: -12.224099159240723
    6. '  ' → logprob: -14.349099159240723
    7. '_=' → logprob: -14.724099159240723
    8. '    ' → logprob: -15.474099159240723
    9. ' ,' → logprob: -16.974098205566406
    10. '=i' → logprob: -16.974098205566406

Token 407: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.572941179503687e-05
    2. ' ' → logprob: -10.000045776367188
    3. '   ' → logprob: -15.500045776367188
    4. '0' → logprob: -16.750045776367188
    5. '  ' → logprob: -17.875045776367188
    6. '```' → logprob: -19.125045776367188
    7. '
' → logprob: -19.625045776367188
    8. '     ' → logprob: -20.125045776367188
    9. '    ' → logprob: -20.500045776367188
    10. '１' → logprob: -20.625045776367188

Token 408: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.2664456789934775e-06
    2. ' ' → logprob: -13.750000953674316
    3. '0' → logprob: -16.250001907348633
    4. '   ' → logprob: -18.000001907348633
    5. '```' → logprob: -20.000001907348633
    6. '  ' → logprob: -20.250001907348633
    7. '１' → logprob: -20.250001907348633
    8. '' → logprob: -21.000001907348633
    9. '=' → logprob: -21.437501907348633
    10. '۱' → logprob: -21.500001907348633

Token 409: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.08721710741519928
    2. ' 
' → logprob: -3.212217092514038
    3. '<|end|>' → logprob: -3.712217092514038
    4. ' for' → logprob: -5.462217330932617
    5. ' ' → logprob: -5.962217330932617
    6. '  
' → logprob: -6.337217330932617
    7. '           ' → logprob: -6.462217330932617
    8. '        
' → logprob: -6.462217330932617
    9. ',' → logprob: -6.462217330932617
    10. '    
' → logprob: -6.712217330932617

Token 410: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -1.0955182313919067
    2. ' for' → logprob: -1.2205182313919067
    3. 'for' → logprob: -1.3455182313919067
    4. '       ' → logprob: -2.220518112182617
    5. '        ' → logprob: -8.095518112182617
    6. 'prev' → logprob: -8.220518112182617
    7. 'c' → logprob: -8.345518112182617
    8. '   ' → logprob: -8.845518112182617
    9. '```' → logprob: -8.845518112182617
    10. '
' → logprob: -8.970518112182617

Token 411: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.00015836587408557534
    2. ' for' → logprob: -9.250158309936523
    3. '           ' → logprob: -9.750158309936523
    4. 'c' → logprob: -13.125158309936523
    5. 'prev' → logprob: -13.250158309936523
    6. '       ' → logprob: -17.625158309936523
    7. '```' → logprob: -17.750158309936523
    8. '   ' → logprob: -18.125158309936523
    9. 'col' → logprob: -18.250158309936523
    10. '            
' → logprob: -18.375158309936523

Token 412: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.008614926598966122
    2. ' c' → logprob: -4.758615016937256
    3. '   ' → logprob: -15.008614540100098
    4. ' ' → logprob: -16.008615493774414
    5. '```' → logprob: -17.883615493774414
    6. '	c' → logprob: -18.133615493774414
    7. '  ' → logprob: -19.133615493774414
    8. ')c' → logprob: -20.508615493774414
    9. '    ' → logprob: -20.633615493774414
    10. 'col' → logprob: -20.633615493774414

Token 413: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.03316977247595787
    2. 'in' → logprob: -3.783169746398926
    3. '1' → logprob: -4.658169746398926
    4. ' ' → logprob: -8.283169746398926
    5. '+' → logprob: -9.408169746398926
    6. '=' → logprob: -10.783169746398926
    7. '0' → logprob: -11.408169746398926
    8. '   ' → logprob: -12.033169746398926
    9. '	in' → logprob: -12.283169746398926
    10. 'range' → logprob: -12.658169746398926

Token 414: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.014188424684107304
    2. ' range' → logprob: -4.264188289642334
    3. '1' → logprob: -10.639188766479492
    4. '(range' → logprob: -14.889188766479492
    5. '   ' → logprob: -15.139188766479492
    6. ' ' → logprob: -15.139188766479492
    7. '	range' → logprob: -16.639188766479492
    8. '  ' → logprob: -19.264188766479492
    9. 'list' → logprob: -19.889188766479492
    10. ' xrange' → logprob: -20.014188766479492

Token 415: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.00020854694594163448
    2. '(self' → logprob: -8.500208854675293
    3. '1' → logprob: -12.375208854675293
    4. '   ' → logprob: -14.250208854675293
    5. 'self' → logprob: -16.875207901000977
    6. '(
' → logprob: -17.125207901000977
    7. ' (' → logprob: -17.125207901000977
    8. ' ' → logprob: -18.125207901000977
    9. '       ' → logprob: -19.375207901000977
    10. '    ' → logprob: -19.750207901000977

Token 416: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0076514724642038345
    2. 'self' → logprob: -4.882651329040527
    3. '   ' → logprob: -10.632651329040527
    4. ' ' → logprob: -11.507651329040527
    5. '0' → logprob: -12.507651329040527
    6. '(self' → logprob: -12.882651329040527
    7. ' self' → logprob: -13.257651329040527
    8. '4' → logprob: -13.382651329040527
    9. '(' → logprob: -14.382651329040527
    10. '       ' → logprob: -15.382651329040527

Token 417: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.000552555953618139
    2. ',self' → logprob: -7.625552654266357
    3. ' ,' → logprob: -10.1255521774292
    4. 'self' → logprob: -11.2505521774292
    5. '       ' → logprob: -11.8755521774292
    6. '(self' → logprob: -13.1255521774292
    7. '   ' → logprob: -13.6255521774292
    8. ',
' → logprob: -14.2505521774292
    9. ' self' → logprob: -15.8755521774292
    10. '           ' → logprob: -16.375553131103516

Token 418: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0009131324477493763
    2. ' self' → logprob: -7.000913143157959
    3. '5' → logprob: -13.8759126663208
    4. '(self' → logprob: -15.0009126663208
    5. '       ' → logprob: -15.7509126663208
    6. 'Board' → logprob: -16.375913619995117
    7. '   ' → logprob: -16.875913619995117
    8. '=self' → logprob: -17.000913619995117
    9. '           ' → logprob: -17.375913619995117
    10. ' ' → logprob: -18.125913619995117

Token 419: '.W' (ID: 2342)
  Prédit: '.W'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.W' → logprob: -0.3135865330696106
    2. 'WIDTH' → logprob: -1.3135864734649658
    3. '   ' → logprob: -8.313586235046387
    4. '.' → logprob: -10.438586235046387
    5. '	W' → logprob: -10.563586235046387
    6. 'W' → logprob: -12.063586235046387
    7. ' WIDTH' → logprob: -12.313586235046387
    8. ' .' → logprob: -12.813586235046387
    9. '_WIDTH' → logprob: -13.313586235046387
    10. ').' → logprob: -13.313586235046387

Token 420: 'IDTH' (ID: 20688)
  Prédit: 'IDTH'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'IDTH' → logprob: -0.0007447104435414076
    2. 'ID' → logprob: -7.250744819641113
    3. '   ' → logprob: -11.125744819641113
    4. 'WIDTH' → logprob: -11.125744819641113
    5. 'idth' → logprob: -12.875744819641113
    6. 'E' → logprob: -13.750744819641113
    7. 'INDOW' → logprob: -14.625744819641113
    8. 'ITH' → logprob: -14.750744819641113
    9. 'IDE' → logprob: -15.500744819641113
    10. '  ' → logprob: -16.500743865966797

Token 421: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.07002457976341248
    2. '):' → logprob: -2.6950244903564453
    3. ' ):
' → logprob: -10.195024490356445
    4. '       ' → logprob: -10.695024490356445
    5. '):
' → logprob: -11.820024490356445
    6. '   ' → logprob: -12.070024490356445
    7. ')' → logprob: -12.195024490356445
    8. ' ):' → logprob: -12.695024490356445
    9. '):

' → logprob: -12.820024490356445
    10. '():
' → logprob: -13.695024490356445

Token 422: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.00774788623675704
    2. '           ' → logprob: -5.632747650146484
    3. ' if' → logprob: -5.632747650146484
    4. '```' → logprob: -8.757747650146484
    5. ',' → logprob: -9.007747650146484
    6. ' ' → logprob: -9.882747650146484
    7. '            ' → logprob: -9.882747650146484
    8. '                
' → logprob: -10.382747650146484
    9. 'if' → logprob: -10.507747650146484
    10. '<|end|>' → logprob: -10.507747650146484

Token 423: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.20440654456615448
    2. 'if' (adapté à ' if') → logprob: -1.704406499862671
    3. '           ' → logprob: -6.70440673828125
    4. '               ' → logprob: -7.45440673828125
    5. ' block' → logprob: -7.70440673828125
    6. '                   ' → logprob: -8.07940673828125
    7. 'block' → logprob: -8.07940673828125
    8. 'prev' → logprob: -10.20440673828125
    9. 'current' → logprob: -10.57940673828125
    10. ' current' → logprob: -10.70440673828125

Token 424: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0015186689561232924
    2. ' self' → logprob: -6.501518726348877
    3. '               ' → logprob: -11.751518249511719
    4. '                   ' → logprob: -12.376518249511719
    5. '(self' → logprob: -12.876518249511719
    6. '   ' → logprob: -14.251518249511719
    7. '	self' → logprob: -14.501518249511719
    8. '           ' → logprob: -15.251518249511719
    9. ' ' → logprob: -16.00151824951172
    10. '[self' → logprob: -16.37651824951172

Token 425: '.grid' (ID: 19269)
  Prédit: '.grid'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.grid' → logprob: -0.002378142438828945
    2. '.get' → logprob: -6.127377986907959
    3. 'grid' → logprob: -8.627378463745117
    4. ' .' → logprob: -12.377378463745117
    5. 'get' → logprob: -12.752378463745117
    6. ' grid' → logprob: -12.752378463745117
    7. '.' → logprob: -13.502378463745117
    8. '	grid' → logprob: -13.627378463745117
    9. '   ' → logprob: -14.002378463745117
    10. '       ' → logprob: -16.377378463745117

Token 426: '[r' (ID: 33265)
  Prédit: '[r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[r' → logprob: -2.339278580620885e-06
    2. 'r' → logprob: -13.000001907348633
    3. '   ' → logprob: -17.250001907348633
    4. '[' → logprob: -18.500001907348633
    5. '	r' → logprob: -19.250001907348633
    6. '[
' → logprob: -19.500001907348633
    7. ' [' → logprob: -19.625001907348633
    8. '[row' → logprob: -20.375001907348633
    9. '[c' → logprob: -20.750001907348633
    10. '][' → logprob: -20.875001907348633

Token 427: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.002491118386387825
    2. '[c' → logprob: -6.002490997314453
    3. ']' → logprob: -12.252490997314453
    4. ' ][' → logprob: -12.627490997314453
    5. '[r' → logprob: -12.877490997314453
    6. ')[' → logprob: -13.127490997314453
    7. '[' → logprob: -13.502490997314453
    8. '   ' → logprob: -14.752490997314453
    9. '}[' → logprob: -15.127490997314453
    10. 'c' → logprob: -15.377490997314453

Token 428: 'c' (ID: 66)
  Prédit: 'c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -1.5451681974809617e-05
    2. ' c' → logprob: -11.125015258789062
    3. '[c' → logprob: -14.750015258789062
    4. '   ' → logprob: -16.500015258789062
    5. '][' → logprob: -17.125015258789062
    6. '	c' → logprob: -17.250015258789062
    7. '
' → logprob: -17.750015258789062
    8. ']' → logprob: -18.875015258789062
    9. ')c' → logprob: -18.875015258789062
    10. '(c' → logprob: -19.250015258789062

Token 429: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.008879040367901325
    2. ']==' → logprob: -4.7588791847229
    3. ' ]' → logprob: -8.258878707885742
    4. '==' → logprob: -12.883878707885742
    5. ' ==' → logprob: -13.633878707885742
    6. ')' → logprob: -14.383878707885742
    7. ']!=' → logprob: -14.883878707885742
    8. '```' → logprob: -15.508878707885742
    9. '][' → logprob: -15.633878707885742
    10. '']' → logprob: -16.258878707885742

Token 430: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.055229101330041885
    2. ' ==' → logprob: -2.9302291870117188
    3. ']==' → logprob: -8.430229187011719
    4. ')==' → logprob: -10.430229187011719
    5. '=' → logprob: -10.555229187011719
    6. '!=' → logprob: -11.055229187011719
    7. '>' → logprob: -11.305229187011719
    8. 'and' → logprob: -11.555229187011719
    9. '==
' → logprob: -11.680229187011719
    10. '===' → logprob: -11.930229187011719

Token 431: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0005533903022296727
    2. ' self' → logprob: -7.500553607940674
    3. '0' → logprob: -15.125553131103516
    4. '(self' → logprob: -17.125553131103516
    5. '[self' → logprob: -18.000553131103516
    6. '	self' → logprob: -18.375553131103516
    7. '   ' → logprob: -18.375553131103516
    8. '=self' → logprob: -18.625553131103516
    9. '           ' → logprob: -19.000553131103516
    10. '                   ' → logprob: -19.250553131103516

Token 432: '.grid' (ID: 19269)
  Prédit: 'grid'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'grid' → logprob: -0.8273593783378601
    2. '.grid' → logprob: -0.8273593783378601
    3. '[r' → logprob: -2.077359437942505
    4. 'r' → logprob: -8.577359199523926
    5. ' grid' → logprob: -9.202359199523926
    6. '   ' → logprob: -10.952359199523926
    7. '	grid' → logprob: -11.077359199523926
    8. '
' → logprob: -12.577359199523926
    9. '```' → logprob: -13.327359199523926
    10. '_grid' → logprob: -13.327359199523926

Token 433: '[r' (ID: 33265)
  Prédit: '[r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[r' → logprob: -4.191489642835222e-05
    2. 'r' → logprob: -10.125041961669922
    3. '[' → logprob: -13.625041961669922
    4. '[
' → logprob: -15.375041961669922
    5. '][' → logprob: -15.500041961669922
    6. '	r' → logprob: -15.875041961669922
    7. ' [' → logprob: -17.000041961669922
    8. '   ' → logprob: -17.750041961669922
    9. ' r' → logprob: -17.750041961669922
    10. '```' → logprob: -18.750041961669922

Token 434: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.007827237248420715
    2. '[r' → logprob: -4.882827281951904
    3. 'r' → logprob: -8.632826805114746
    4. ']' → logprob: -10.757826805114746
    5. ' ][' → logprob: -11.882826805114746
    6. '[' → logprob: -12.382826805114746
    7. '[c' → logprob: -13.007826805114746
    8. ')[' → logprob: -13.257826805114746
    9. '}[' → logprob: -14.007826805114746
    10. '"][' → logprob: -14.132826805114746

Token 435: 'c' (ID: 66)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.4750707447528839
    2. 'c' → logprob: -0.9750707149505615
    3. '[r' → logprob: -7.725070953369141
    4. '[c' → logprob: -7.975070953369141
    5. '][' → logprob: -8.72507095336914
    6. '   ' → logprob: -10.72507095336914
    7. ']' → logprob: -11.97507095336914
    8. ' c' → logprob: -12.72507095336914
    9. '
' → logprob: -12.85007095336914
    10. ' r' → logprob: -12.97507095336914

Token 436: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.0002986392646562308
    2. ' -' → logprob: -8.125298500061035
    3. 'c' → logprob: -13.375298500061035
    4. '1' → logprob: -14.250298500061035
    5. '[c' → logprob: -15.375298500061035
    6. ']' → logprob: -15.625298500061035
    7. '   ' → logprob: -16.87529945373535
    8. ' ' → logprob: -17.75029945373535
    9. '[' → logprob: -17.87529945373535
    10. 's' → logprob: -18.25029945373535

Token 437: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.128163257315464e-07
    2. ' ' → logprob: -15.875
    3. 'c' → logprob: -16.0
    4. '   ' → logprob: -17.125
    5. ']' → logprob: -18.125
    6. '```' → logprob: -19.25
    7. '
' → logprob: -19.75
    8. '0' → logprob: -20.25
    9. '-' → logprob: -20.75
    10. '       ' → logprob: -20.8125

Token 438: ']' (ID: 60)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.026635466143488884
    2. 'and' → logprob: -3.6516354084014893
    3. ')' → logprob: -9.27663516998291
    4. '                   ' → logprob: -9.40163516998291
    5. '                ' → logprob: -9.52663516998291
    6. '               ' → logprob: -9.77663516998291
    7. '                    ' → logprob: -11.65163516998291
    8. ']' → logprob: -12.27663516998291
    9. '            ' → logprob: -12.52663516998291
    10. ' ' → logprob: -12.65163516998291

Token 439: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.06197575107216835
    2. 'and' → logprob: -2.8119757175445557
    3. ' ' → logprob: -12.561975479125977
    4. '                   ' → logprob: -14.061975479125977
    5. '            ' → logprob: -14.561975479125977
    6. '               ' → logprob: -14.686975479125977
    7. '	and' → logprob: -14.811975479125977
    8. ':' → logprob: -14.811975479125977
    9. '                ' → logprob: -14.936975479125977
    10. '   ' → logprob: -15.186975479125977

Token 440: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -3.2617008400848135e-05
    2. ' self' → logprob: -10.375032424926758
    3. '               ' → logprob: -14.125032424926758
    4. '                   ' → logprob: -15.000032424926758
    5. '           ' → logprob: -15.875032424926758
    6. '(self' → logprob: -17.125032424926758
    7. '                       ' → logprob: -18.125032424926758
    8. '[self' → logprob: -18.250032424926758
    9. 'grid' → logprob: -19.500032424926758
    10. '                 ' → logprob: -19.500032424926758

Token 441: '.grid' (ID: 19269)
  Prédit: '.grid'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.grid' → logprob: -4.008129963040119e-06
    2. 'grid' → logprob: -12.500003814697266
    3. '	grid' → logprob: -16.500003814697266
    4. '.' → logprob: -16.875003814697266
    5. ' .' → logprob: -16.875003814697266
    6. ' grid' → logprob: -18.625003814697266
    7. 'self' → logprob: -19.250003814697266
    8. ':grid' → logprob: -20.375003814697266
    9. '[self' → logprob: -20.500003814697266
    10. '.get' → logprob: -20.625003814697266

Token 442: '[r' (ID: 33265)
  Prédit: '[r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[r' → logprob: -2.45848218582978e-06
    2. 'r' → logprob: -13.00000286102295
    3. '[' → logprob: -17.000001907348633
    4. '[row' → logprob: -17.500001907348633
    5. '[
' → logprob: -17.750001907348633
    6. '```' → logprob: -17.875001907348633
    7. '[s' → logprob: -18.250001907348633
    8. '	r' → logprob: -18.500001907348633
    9. ' [' → logprob: -18.750001907348633
    10. '[t' → logprob: -19.375001907348633

Token 443: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.07025007158517838
    2. '[c' → logprob: -2.9452500343322754
    3. '[r' → logprob: -4.195250034332275
    4. 'c' → logprob: -9.195250511169434
    5. 'r' → logprob: -10.820250511169434
    6. '   ' → logprob: -10.820250511169434
    7. '[' → logprob: -11.320250511169434
    8. '}[' → logprob: -12.070250511169434
    9. '-' → logprob: -12.320250511169434
    10. '       ' → logprob: -12.820250511169434

Token 444: 'c' (ID: 66)
  Prédit: 'c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.0006364276050589979
    2. '[c' → logprob: -7.750636577606201
    3. 'r' → logprob: -8.875636100769043
    4. '[r' → logprob: -10.375636100769043
    5. ' c' → logprob: -11.000636100769043
    6. '   ' → logprob: -11.750636100769043
    7. '```' → logprob: -12.500636100769043
    8. '
' → logprob: -13.375636100769043
    9. '0' → logprob: -14.000636100769043
    10. ']' → logprob: -14.500636100769043

Token 445: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.351615309715271
    2. ']!=' → logprob: -1.226615309715271
    3. '!=' → logprob: -5.9766154289245605
    4. ']>=' → logprob: -8.726614952087402
    5. ')!=' → logprob: -8.851614952087402
    6. ']>' → logprob: -9.351614952087402
    7. ' !=' → logprob: -9.851614952087402
    8. 'not' → logprob: -10.101614952087402
    9. 'is' → logprob: -10.226614952087402
    10. '>' → logprob: -10.726614952087402

Token 446: ' !=' (ID: 1666)
  Prédit: '!='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '!=' → logprob: -0.004563630558550358
    2. '>' → logprob: -6.004563808441162
    3. ' !=' → logprob: -6.254563808441162
    4. '()!=' → logprob: -9.754563331604004
    5. 'is' → logprob: -10.129563331604004
    6. ')!=' → logprob: -10.504563331604004
    7. '!=-' → logprob: -10.754563331604004
    8. ']!=' → logprob: -11.379563331604004
    9. '!==' → logprob: -13.129563331604004
    10. '>=' → logprob: -13.754563331604004

Token 447: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0005313486326485872
    2. '-' → logprob: -7.875531196594238
    3. ' ' → logprob: -8.875531196594238
    4. 'None' → logprob: -11.750531196594238
    5. ' -' → logprob: -12.875531196594238
    6. '   ' → logprob: -14.875531196594238
    7. 'empty' → logprob: -15.625531196594238
    8. 'self' → logprob: -16.500532150268555
    9. '  ' → logprob: -16.563032150268555
    10. '```' → logprob: -17.000532150268555

Token 448: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.004163045436143875
    2. '-' → logprob: -5.5041632652282715
    3. ' ' → logprob: -9.629162788391113
    4. 'None' → logprob: -11.629162788391113
    5. ' -' → logprob: -11.754162788391113
    6. 'empty' → logprob: -13.754162788391113
    7. '   ' → logprob: -15.441662788391113
    8. '1' → logprob: -16.56666374206543
    9. 'EMPTY' → logprob: -16.62916374206543
    10. ''-' → logprob: -16.81666374206543

Token 449: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.3509970009326935
    2. ':
' → logprob: -1.225996971130371
    3. ' and' → logprob: -6.975996971130371
    4. '                   ' → logprob: -7.100996971130371
    5. 'and' → logprob: -8.100996971130371
    6. '               ' → logprob: -8.225996971130371
    7. '):
' → logprob: -9.600996971130371
    8. '           ' → logprob: -10.100996971130371
    9. ':
' → logprob: -10.225996971130371
    10. '                       ' → logprob: -10.350996971130371

Token 450: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.0005120449932292104
    2. '               ' → logprob: -8.12551212310791
    3. ':' → logprob: -9.25051212310791
    4. '                       ' → logprob: -9.37551212310791
    5. ':
' → logprob: -11.87551212310791
    6. '                    
' → logprob: -12.37551212310791
    7. '                  ' → logprob: -12.50051212310791
    8. '           ' → logprob: -12.50051212310791
    9. '                    ' → logprob: -13.12551212310791
    10. ',' → logprob: -13.12551212310791

Token 451: ' count' (ID: 3605)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' (adapté à ' count') → logprob: -0.00011200665176147595
    2. ' count' → logprob: -9.25011157989502
    3. '                   ' → logprob: -11.12511157989502
    4. '               ' → logprob: -14.37511157989502
    5. '   ' → logprob: -15.25011157989502
    6. '                       ' → logprob: -15.25011157989502
    7. '	count' → logprob: -17.000112533569336
    8. '           ' → logprob: -18.000112533569336
    9. ' ' → logprob: -18.875112533569336
    10. '       ' → logprob: -19.125112533569336

Token 452: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.3132643401622772
    2. '+=' → logprob: -1.3132643699645996
    3. ']+=' → logprob: -12.938263893127441
    4. '+' → logprob: -16.938264846801758
    5. '=' → logprob: -17.188264846801758
    6. '   ' → logprob: -17.563264846801758
    7. ' ' → logprob: -17.688264846801758
    8. '    ' → logprob: -18.188264846801758
    9. '```' → logprob: -18.188264846801758
    10. '[' → logprob: -18.313264846801758

Token 453: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.935296834039036e-06
    2. ' ' → logprob: -12.75000286102295
    3. '
' → logprob: -19.125003814697266
    4. '   ' → logprob: -19.250003814697266
    5. '```' → logprob: -19.750003814697266
    6. '<|end|>' → logprob: -20.250003814697266
    7. '

' → logprob: -22.625003814697266
    8. '  ' → logprob: -22.750003814697266
    9. '۱' → logprob: -22.750003814697266
    10. '１' → logprob: -22.875003814697266

Token 454: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.512236498361744e-07
    2. ' ' → logprob: -14.500000953674316
    3. '
' → logprob: -19.625
    4. '```' → logprob: -19.75
    5. '<|end|>' → logprob: -20.125
    6. '۱' → logprob: -21.125
    7. '１' → logprob: -21.875
    8. '   ' → logprob: -22.0
    9. '-' → logprob: -22.0625
    10. '१' → logprob: -23.0

Token 455: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0006915858830325305
    2. '                   ' → logprob: -8.250691413879395
    3. 'else' → logprob: -8.750691413879395
    4. ' else' → logprob: -8.875691413879395
    5. '           ' → logprob: -9.875691413879395
    6. '
' → logprob: -10.875691413879395
    7. '                ' → logprob: -10.875691413879395
    8. '<|end|>' → logprob: -11.750691413879395
    9. '              ' → logprob: -12.375691413879395
    10. '                    
' → logprob: -12.500691413879395

Token 456: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0009588662651367486
    2. '                   ' → logprob: -8.375958442687988
    3. 'else' → logprob: -8.625958442687988
    4. '<|end|>' → logprob: -8.625958442687988
    5. ' else' → logprob: -9.125958442687988
    6. '           ' → logprob: -9.125958442687988
    7. '                ' → logprob: -9.875958442687988
    8. ')' → logprob: -10.375958442687988
    9. '       ' → logprob: -10.875958442687988
    10. '```' → logprob: -11.125958442687988

Token 457: ' else' (ID: 1203)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.10782376676797867
    2. 'else' (adapté à ' else') → logprob: -2.4828238487243652
    3. ' else' → logprob: -3.9828238487243652
    4. 'elif' → logprob: -10.232823371887207
    5. '           ' → logprob: -10.732823371887207
    6. '```' → logprob: -12.482823371887207
    7. '                   ' → logprob: -12.732823371887207
    8. ' elif' → logprob: -12.857823371887207
    9. '              ' → logprob: -13.607823371887207
    10. '                ' → logprob: -13.607823371887207

Token 458: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.3879714608192444
    2. ':
' → logprob: -1.1379714012145996
    3. '                   ' → logprob: -7.0129714012146
    4. '               ' → logprob: -9.137971878051758
    5. '           ' → logprob: -10.387971878051758
    6. '):
' → logprob: -10.512971878051758
    7. '                       ' → logprob: -11.637971878051758
    8. 'if' → logprob: -12.387971878051758
    9. ':

' → logprob: -12.387971878051758
    10. ',' → logprob: -12.762971878051758

Token 459: '                   ' (ID: 699)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.5364071130752563
    2. '                   ' → logprob: -1.0364071130752563
    3. '               ' → logprob: -3.536406993865967
    4. ' if' → logprob: -3.536406993865967
    5. '           ' → logprob: -7.161406993865967
    6. '   ' → logprob: -7.161406993865967
    7. '```' → logprob: -7.411406993865967
    8. ' ' → logprob: -11.161407470703125
    9. '                       ' → logprob: -11.536407470703125
    10. '       ' → logprob: -11.911407470703125

Token 460: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.005842277780175209
    2. '                   ' → logprob: -5.255842208862305
    3. ' if' → logprob: -7.505842208862305
    4. '           ' → logprob: -10.755842208862305
    5. '               ' → logprob: -10.880842208862305
    6. '   ' → logprob: -11.380842208862305
    7. '                       ' → logprob: -12.255842208862305
    8. ' ' → logprob: -14.130842208862305
    9. '```' → logprob: -14.130842208862305
    10. '       ' → logprob: -14.880842208862305

Token 461: ' count' (ID: 3605)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.0015023599844425917
    2. ' count' → logprob: -6.501502513885498
    3. '	count' → logprob: -18.501502990722656
    4. '                   ' → logprob: -19.001502990722656
    5. '(count' → logprob: -19.001502990722656
    6. '               ' → logprob: -20.001502990722656
    7. '[count' → logprob: -20.376502990722656
    8. ' ' → logprob: -20.626502990722656
    9. '   ' → logprob: -20.876502990722656
    10. '$count' → logprob: -20.876502990722656

Token 462: ' >=' (ID: 5064)
  Prédit: '>='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>=' → logprob: -0.0028354227542877197
    2. ' >=' → logprob: -5.877835273742676
    3. ']>=' → logprob: -11.377835273742676
    4. ')>=' → logprob: -11.627835273742676
    5. '≥' → logprob: -12.127835273742676
    6. '   ' → logprob: -13.127835273742676
    7. '3' → logprob: -14.627835273742676
    8. '[' → logprob: -14.627835273742676
    9. ' ' → logprob: -15.252835273742676
    10. '```' → logprob: -15.252835273742676

Token 463: ' ' (ID: 220)
  Prédit: '3'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -2.176947600673884e-05
    2. ' ' → logprob: -10.750021934509277
    3. '۳' → logprob: -16.62502098083496
    4. '```' → logprob: -16.75002098083496
    5. '   ' → logprob: -17.68752098083496
    6. '３' → logprob: -17.93752098083496
    7. '৩' → logprob: -18.18752098083496
    8. '३' → logprob: -18.50002098083496
    9. '٣' → logprob: -18.50002098083496
    10. 'three' → logprob: -18.81252098083496

Token 464: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -1.2664456789934775e-06
    2. ' ' → logprob: -13.625000953674316
    3. '۳' → logprob: -18.250001907348633
    4. '```' → logprob: -18.875001907348633
    5. '   ' → logprob: -19.125001907348633
    6. '
' → logprob: -19.562501907348633
    7. '৩' → logprob: -19.812501907348633
    8. '３' → logprob: -19.937501907348633
    9. '३' → logprob: -20.187501907348633
    10. '٣' → logprob: -20.375001907348633

Token 465: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.019792187958955765
    2. ' and' → logprob: -4.644792079925537
    3. ':
' → logprob: -4.769792079925537
    4. '                       ' → logprob: -7.144792079925537
    5. 'and' → logprob: -7.394792079925537
    6. '                   ' → logprob: -9.769792556762695
    7. '                           ' → logprob: -10.394792556762695
    8. '               ' → logprob: -13.019792556762695
    9. ' :' → logprob: -13.019792556762695
    10. '           ' → logprob: -13.144792556762695

Token 466: '                       ' (ID: 968)
  Prédit: '                       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.30634647607803345
    2. 'for' → logprob: -1.9313464164733887
    3. ' for' → logprob: -2.1813464164733887
    4. '                   ' → logprob: -5.931346416473389
    5. 'to' → logprob: -6.681346416473389
    6. '           ' → logprob: -7.431346416473389
    7. '       ' → logprob: -7.931346416473389
    8. ' to' → logprob: -7.931346416473389
    9. '               ' → logprob: -8.306346893310547
    10. '                           ' → logprob: -8.681346893310547

Token 467: ' for' (ID: 395)
  Prédit: 'to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'to' → logprob: -0.5849199891090393
    2. 'for' (adapté à ' for') → logprob: -0.8349199891090393
    3. ' for' → logprob: -5.0849199295043945
    4. ' to' → logprob: -6.3349199295043945
    5. '                           ' → logprob: -8.084919929504395
    6. '                       ' → logprob: -8.459919929504395
    7. '                   ' → logprob: -8.584919929504395
    8. '   ' → logprob: -9.334919929504395
    9. 'positions' → logprob: -9.459919929504395
    10. '           ' → logprob: -9.834919929504395

Token 468: ' cc' (ID: 22988)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.6116793155670166
    2. 'i' → logprob: -1.3616793155670166
    3. 'cc' → logprob: -1.7366793155670166
    4. 'erase' → logprob: -4.6116790771484375
    5. 'col' → logprob: -5.2366790771484375
    6. ' i' → logprob: -5.8616790771484375
    7. ' erase' → logprob: -6.2366790771484375
    8. 'x' → logprob: -6.4866790771484375
    9. ' cc' → logprob: -6.4866790771484375
    10. ' k' → logprob: -6.8616790771484375

Token 469: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.47412872314453125
    2. ' in' → logprob: -0.9741287231445312
    3. 'range' → logprob: -10.849128723144531
    4. '
' → logprob: -11.974128723144531
    5. 'c' → logprob: -12.099128723144531
    6. ' ' → logprob: -12.474128723144531
    7. 'n' → logprob: -12.724128723144531
    8. '```' → logprob: -13.099128723144531
    9. '   ' → logprob: -13.474128723144531
    10. 'ange' → logprob: -14.099128723144531

Token 470: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0004306692280806601
    2. ' range' → logprob: -7.750430583953857
    3. '   ' → logprob: -17.000431060791016
    4. ' ' → logprob: -19.125431060791016
    5. '(range' → logprob: -19.625431060791016
    6. '	range' → logprob: -20.000431060791016
    7. '  ' → logprob: -20.125431060791016
    8. '```' → logprob: -21.375431060791016
    9. '
' → logprob: -21.625431060791016
    10. 'Range' → logprob: -21.750431060791016

Token 471: '(c' (ID: 2410)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.47412925958633423
    2. '(c' → logprob: -0.9741292595863342
    3. '   ' → logprob: -10.349129676818848
    4. '	c' → logprob: -11.349129676818848
    5. ' c' → logprob: -12.599129676818848
    6. '(' → logprob: -13.224129676818848
    7. ')c' → logprob: -14.224129676818848
    8. '    ' → logprob: -14.974129676818848
    9. '  ' → logprob: -15.224129676818848
    10. 'cc' → logprob: -15.349129676818848

Token 472: ' -' (ID: 533)
  Prédit: '-count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-count' → logprob: -0.2700487971305847
    2. ' -' → logprob: -1.5200488567352295
    3. '-' → logprob: -4.02004861831665
    4. '-copy' → logprob: -13.645049095153809
    5. 'count' → logprob: -13.895049095153809
    6. '-counter' → logprob: -14.520049095153809
    7. '-c' → logprob: -14.645049095153809
    8. ' ' → logprob: -14.895049095153809
    9. '-code' → logprob: -15.895049095153809
    10. '-length' → logprob: -16.395048141479492

Token 473: ' count' (ID: 3605)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' → logprob: -1.8624639324116288e-06
    2. ' count' → logprob: -13.750001907348633
    3. '1' → logprob: -14.125001907348633
    4. ' ' → logprob: -20.875001907348633
    5. '   ' → logprob: -21.250001907348633
    6. '$count' → logprob: -22.000001907348633
    7. '(count' → logprob: -22.500001907348633
    8. '```' → logprob: -23.000001907348633
    9. '	count' → logprob: -23.125001907348633
    10. '
' → logprob: -23.375001907348633

Token 474: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0022659937385469675
    2. ' ,' → logprob: -6.252265930175781
    3. ',c' → logprob: -8.002265930175781
    4. 'c' → logprob: -14.127265930175781
    5. ',count' → logprob: -14.127265930175781
    6. '                   ' → logprob: -15.127265930175781
    7. 'to' → logprob: -15.502265930175781
    8. '   ' → logprob: -16.25226593017578
    9. '           ' → logprob: -16.25226593017578
    10. '               ' → logprob: -16.25226593017578

Token 475: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.0004306692280806601
    2. ' c' → logprob: -7.750430583953857
    3. '   ' → logprob: -18.500431060791016
    4. '	c' → logprob: -19.000431060791016
    5. ')c' → logprob: -19.250431060791016
    6. 'cc' → logprob: -20.125431060791016
    7. '               ' → logprob: -20.250431060791016
    8. '           ' → logprob: -20.375431060791016
    9. '                   ' → logprob: -20.875431060791016
    10. '                       ' → logprob: -22.375431060791016

Token 476: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.16529041528701782
    2. '):
' → logprob: -1.915290355682373
    3. ' ):' → logprob: -5.915290355682373
    4. ')' → logprob: -6.540290355682373
    5. ' ):
' → logprob: -8.290290832519531
    6. '<|end|>' → logprob: -9.290290832519531
    7. '                   ' → logprob: -9.415290832519531
    8. '                       ' → logprob: -9.540290832519531
    9. '):
' → logprob: -9.665290832519531
    10. '):

' → logprob: -9.665290832519531

Token 477: '                           ' (ID: 1686)
  Prédit: '                           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                           ' → logprob: -0.0027567336801439524
    2. ' to' → logprob: -7.002756595611572
    3. '                               ' → logprob: -7.127756595611572
    4. '           ' → logprob: -8.12775707244873
    5. '                       ' → logprob: -8.25275707244873
    6. '               ' → logprob: -8.50275707244873
    7. 'to' → logprob: -8.62775707244873
    8. '                   ' → logprob: -10.12775707244873
    9. '   ' → logprob: -10.25275707244873
    10. '                            ' → logprob: -11.87775707244873

Token 478: ' to' (ID: 316)
  Prédit: 'to'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'to' (adapté à ' to') → logprob: -0.00028970264247618616
    2. ' to' → logprob: -8.250289916992188
    3. '                               ' → logprob: -10.500289916992188
    4. '                           ' → logprob: -14.125289916992188
    5. '                                   ' → logprob: -16.500289916992188
    6. '   ' → logprob: -16.625289916992188
    7. '               ' → logprob: -17.375289916992188
    8. '           ' → logprob: -17.500289916992188
    9. '                       ' → logprob: -18.250289916992188
    10. '                              ' → logprob: -18.500289916992188

Token 479: '_' (ID: 62)
  Prédit: '_'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.0012494005495682359
    2. 'erase' → logprob: -6.751249313354492
    3. '.erase' → logprob: -10.376249313354492
    4. '.' → logprob: -10.626249313354492
    5. 'to' → logprob: -10.751249313354492
    6. 'r' → logprob: -14.251249313354492
    7. ' erase' → logprob: -14.376249313354492
    8. 'er' → logprob: -14.501249313354492
    9. '_er' → logprob: -16.126249313354492
    10. '._' → logprob: -16.251249313354492

Token 480: 'erase' (ID: 91229)
  Prédit: 'erase'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'erase' → logprob: -0.00010843054042197764
    2. 'rase' → logprob: -10.12510871887207
    3. '_' → logprob: -10.87510871887207
    4. 'to' → logprob: -11.12510871887207
    5. ' erase' → logprob: -11.75010871887207
    6. '.erase' → logprob: -12.00010871887207
    7. 'r' → logprob: -12.12510871887207
    8. '```' → logprob: -12.75010871887207
    9. 'er' → logprob: -13.12510871887207
    10. 'erse' → logprob: -13.50010871887207

Token 481: '.add' (ID: 1950)
  Prédit: '.add'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.add' → logprob: -4.727905979962088e-05
    2. '.' → logprob: -10.00004768371582
    3. ' .' → logprob: -13.87504768371582
    4. 'add' → logprob: -15.25004768371582
    5. '.append' → logprob: -15.50004768371582
    6. '                           ' → logprob: -15.75004768371582
    7. '.Add' → logprob: -16.37504768371582
    8. '                               ' → logprob: -16.87504768371582
    9. '.setdefault' → logprob: -17.50004768371582
    10. ').' → logprob: -18.00004768371582

Token 482: '((' (ID: 2054)
  Prédit: '(r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(r' → logprob: -0.030767787247896194
    2. '((' → logprob: -3.7807676792144775
    3. ' (' → logprob: -5.280767917633057
    4. '(' → logprob: -6.030767917633057
    5. ' ((' → logprob: -14.405767440795898
    6. ' ' → logprob: -14.780767440795898
    7. '   ' → logprob: -14.905767440795898
    8. '  ' → logprob: -16.0307674407959
    9. '(
' → logprob: -16.2807674407959
    10. '(rb' → logprob: -16.2807674407959

Token 483: 'r' (ID: 81)
  Prédit: 'r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -1.0206720617134124e-05
    2. ' r' → logprob: -11.50001049041748
    3. '   ' → logprob: -17.625009536743164
    4. '(r' → logprob: -17.875009536743164
    5. '_r' → logprob: -18.750009536743164
    6. '	r' → logprob: -18.750009536743164
    7. '[r' → logprob: -19.875009536743164
    8. ')' → logprob: -21.125009536743164
    9. ' ' → logprob: -21.250009536743164
    10. '{' → logprob: -21.250009536743164

Token 484: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00121428316924721
    2. ' ,' → logprob: -6.751214504241943
    3. ',
' → logprob: -10.376214027404785
    4. ',

' → logprob: -12.376214027404785
    5. ',c' → logprob: -12.501214027404785
    6. ' ' → logprob: -13.876214027404785
    7. ',ll' → logprob: -14.126214027404785
    8. '‌,' → logprob: -14.751214027404785
    9. '<|end|>' → logprob: -14.751214027404785
    10. '(cc' → logprob: -14.876214027404785

Token 485: ' cc' (ID: 22988)
  Prédit: 'cc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cc' → logprob: -5.836499985889532e-05
    2. ' cc' → logprob: -9.7500581741333
    3. '	cc' → logprob: -16.875059127807617
    4. '(cc' → logprob: -17.625059127807617
    5. '   ' → logprob: -18.375059127807617
    6. '_cc' → logprob: -18.875059127807617
    7. 'ccc' → logprob: -19.875059127807617
    8. '       ' → logprob: -21.125059127807617
    9. 'c' → logprob: -21.125059127807617
    10. ' ' → logprob: -21.500059127807617

Token 486: '))
' (ID: 2210)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.0025455779395997524
    2. '))
' → logprob: -6.002545356750488
    3. ')' → logprob: -9.627545356750488
    4. ' ))' → logprob: -13.252545356750488
    5. ')
' → logprob: -13.877545356750488
    6. '))

' → logprob: -15.002545356750488
    7. ')))' → logprob: -15.627545356750488
    8. '                       ' → logprob: -15.752545356750488
    9. ''))' → logprob: -15.752545356750488
    10. '))
' → logprob: -16.377546310424805

Token 487: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.02673124149441719
    2. '               ' → logprob: -4.026731014251709
    3. '           ' → logprob: -4.776731014251709
    4. '```' → logprob: -10.026731491088867
    5. 'else' → logprob: -10.151731491088867
    6. '                       ' → logprob: -11.276731491088867
    7. '       ' → logprob: -11.526731491088867
    8. 'elif' → logprob: -12.151731491088867
    9. '
' → logprob: -12.526731491088867
    10. '                           ' → logprob: -13.651731491088867

Token 488: ' count' (ID: 3605)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' (adapté à ' count') → logprob: -0.0001684981834841892
    2. '               ' → logprob: -9.375168800354004
    3. '                   ' → logprob: -9.750168800354004
    4. ' count' → logprob: -10.875168800354004
    5. 'else' → logprob: -12.875168800354004
    6. '           ' → logprob: -13.375168800354004
    7. 'if' → logprob: -14.375168800354004
    8. '       ' → logprob: -14.375168800354004
    9. '
' → logprob: -14.875168800354004
    10. '                       ' → logprob: -14.875168800354004

Token 489: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.001170225441455841
    2. ' =' → logprob: -6.7511701583862305
    3. '＝' → logprob: -18.126171112060547
    4. '=
' → logprob: -19.376171112060547
    5. '=}' → logprob: -20.001171112060547
    6. '=

' → logprob: -20.751171112060547
    7. ' ' → logprob: -21.251171112060547
    8. '.=' → logprob: -21.376171112060547
    9. '=int' → logprob: -21.751171112060547
    10. '_=' → logprob: -22.751171112060547

Token 490: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -7.493430894101039e-05
    2. ' ' → logprob: -9.500075340270996
    3. '0' → logprob: -17.25007438659668
    4. '   ' → logprob: -17.87507438659668
    5. '１' → logprob: -20.81257438659668
    6. '  ' → logprob: -20.81257438659668
    7. '```' → logprob: -20.81257438659668
    8. '۱' → logprob: -21.25007438659668
    9. '     ' → logprob: -21.62507438659668
    10. '           ' → logprob: -21.68757438659668

Token 491: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.1008713702030946e-06
    2. ' ' → logprob: -13.125001907348633
    3. '0' → logprob: -18.375001907348633
    4. '   ' → logprob: -19.875001907348633
    5. '```' → logprob: -21.187501907348633
    6. '１' → logprob: -21.250001907348633
    7. 'a' → logprob: -21.437501907348633
    8. '' → logprob: -21.562501907348633
    9. '۱' → logprob: -21.812501907348633
    10. '=' → logprob: -22.187501907348633

Token 492: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.005561955273151398
    2. '
' → logprob: -5.380561828613281
    3. '       ' → logprob: -7.505561828613281
    4. '               ' → logprob: -7.880561828613281
    5. '                   ' → logprob: -12.755561828613281
    6. '```' → logprob: -13.005561828613281
    7. '		' → logprob: -13.255561828613281
    8. '\n' → logprob: -13.380561828613281
    9. '<|end|>' → logprob: -14.130561828613281
    10. 'else' → logprob: -14.755561828613281

Token 493: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -8.244413766078651e-05
    2. '       ' → logprob: -9.500082015991211
    3. '
' → logprob: -12.125082015991211
    4. '               ' → logprob: -13.500082015991211
    5. '```' → logprob: -15.375082015991211
    6. '                   ' → logprob: -16.25008201599121
    7. '		' → logprob: -16.25008201599121
    8. 'for' → logprob: -16.25008201599121
    9. '          ' → logprob: -17.25008201599121
    10. '   ' → logprob: -17.25008201599121

Token 494: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.08185780048370361
    2. '       ' → logprob: -2.581857681274414
    3. ' if' → logprob: -5.956857681274414
    4. '#' → logprob: -8.206857681274414
    5. '           ' → logprob: -9.706857681274414
    6. 'for' → logprob: -10.581857681274414
    7. '   ' → logprob: -11.331857681274414
    8. '
' → logprob: -12.831857681274414
    9. '```' → logprob: -14.081857681274414
    10. 'else' → logprob: -15.456857681274414

Token 495: ' count' (ID: 3605)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.023247340694069862
    2. ' count' → logprob: -3.773247241973877
    3. '   ' → logprob: -14.148247718811035
    4. ' ' → logprob: -14.523247718811035
    5. '	count' → logprob: -15.273247718811035
    6. '  ' → logprob: -15.898247718811035
    7. '    ' → logprob: -16.27324676513672
    8. '(count' → logprob: -16.39824676513672
    9. 'c' → logprob: -17.02324676513672
    10. '     ' → logprob: -18.27324676513672

Token 496: ' >=' (ID: 5064)
  Prédit: ' >='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >=' → logprob: -0.03366564214229584
    2. '>=' → logprob: -3.408665657043457
    3. ' ' → logprob: -11.408665657043457
    4. ')>=' → logprob: -13.033665657043457
    5. '   ' → logprob: -13.158665657043457
    6. '    ' → logprob: -13.283665657043457
    7. ']>=' → logprob: -14.658665657043457
    8. ' ≥' → logprob: -15.033665657043457
    9. '≥' → logprob: -15.158665657043457
    10. '<|end|>' → logprob: -15.158665657043457

Token 497: ' ' (ID: 220)
  Prédit: '3'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.0017030329909175634
    2. ' ' → logprob: -6.376703262329102
    3. '   ' → logprob: -14.501703262329102
    4. '```' → logprob: -16.1267032623291
    5. '
' → logprob: -17.0017032623291
    6. '  ' → logprob: -17.0642032623291
    7. '       ' → logprob: -17.6267032623291
    8. '۳' → logprob: -17.6892032623291
    9. '３' → logprob: -17.9392032623291
    10. '           ' → logprob: -18.3767032623291

Token 498: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -6.988221684878226e-06
    2. ' ' → logprob: -11.875006675720215
    3. '   ' → logprob: -18.25000762939453
    4. '```' → logprob: -18.37500762939453
    5. '۳' → logprob: -19.12500762939453
    6. '
' → logprob: -19.56250762939453
    7. '৩' → logprob: -20.00000762939453
    8. '<|end|>' → logprob: -20.31250762939453
    9. '３' → logprob: -20.62500762939453
    10. '३' → logprob: -20.62500762939453

Token 499: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.14348267018795013
    2. ':
' → logprob: -2.0184826850891113
    3. '               ' → logprob: -7.268482685089111
    4. '           ' → logprob: -9.518482208251953
    5. '       ' → logprob: -11.143482208251953
    6. ' :' → logprob: -11.893482208251953
    7. ' :
' → logprob: -12.643482208251953
    8. '):
' → logprob: -13.018482208251953
    9. ' for' → logprob: -13.268482208251953
    10. ',' → logprob: -13.393482208251953

Token 500: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.022714341059327126
    2. ' for' → logprob: -4.272714138031006
    3. 'for' → logprob: -4.772714138031006
    4. '           ' → logprob: -9.897714614868164
    5. '                   ' → logprob: -13.022714614868164
    6. '                       ' → logprob: -13.272714614868164
    7. '       ' → logprob: -14.022714614868164
    8. '   ' → logprob: -14.147714614868164
    9. '	for' → logprob: -14.397714614868164
    10. '              ' → logprob: -15.272714614868164

Token 501: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.3064816892147064
    2. ' for' → logprob: -1.8064817190170288
    3. '               ' → logprob: -2.3064815998077393
    4. '           ' → logprob: -9.43148136138916
    5. '                   ' → logprob: -10.80648136138916
    6. '	for' → logprob: -11.68148136138916
    7. '   ' → logprob: -11.68148136138916
    8. '                       ' → logprob: -12.43148136138916
    9. '       ' → logprob: -13.68148136138916
    10. ' ' → logprob: -13.68148136138916

Token 502: ' cc' (ID: 22988)
  Prédit: 'cc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cc' → logprob: -0.006715370807796717
    2. ' cc' → logprob: -5.006715297698975
    3. '	cc' → logprob: -17.256715774536133
    4. 'c' → logprob: -19.381715774536133
    5. '(cc' → logprob: -19.631715774536133
    6. '_cc' → logprob: -21.381715774536133
    7. 'ccc' → logprob: -22.506715774536133
    8. '.cc' → logprob: -23.381715774536133
    9. ' ' → logprob: -24.006715774536133
    10. '   ' → logprob: -24.131715774536133

Token 503: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.12693272531032562
    2. 'in' → logprob: -2.1269326210021973
    3. ' ' → logprob: -13.251933097839355
    4. 'range' → logprob: -14.626933097839355
    5. 'n' → logprob: -14.751933097839355
    6. '
' → logprob: -14.876933097839355
    7. 'In' → logprob: -14.876933097839355
    8. '   ' → logprob: -15.751933097839355
    9. '  ' → logprob: -15.876933097839355
    10. 'import' → logprob: -16.12693214416504

Token 504: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0002613358374219388
    2. ' range' → logprob: -8.250261306762695
    3. '(range' → logprob: -17.125261306762695
    4. '
' → logprob: -18.625261306762695
    5. '   ' → logprob: -19.000261306762695
    6. ' ' → logprob: -19.625261306762695
    7. 're' → logprob: -20.250261306762695
    8. 'in' → logprob: -20.250261306762695
    9. '	range' → logprob: -20.750261306762695
    10. '  ' → logprob: -20.875261306762695

Token 505: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -3.5120287066092715e-05
    2. 'self' → logprob: -10.625035285949707
    3. '(' → logprob: -11.500035285949707
    4. '(s' → logprob: -14.875035285949707
    5. '(
' → logprob: -15.375035285949707
    6. '((' → logprob: -17.12503433227539
    7. ' self' → logprob: -17.12503433227539
    8. '   ' → logprob: -17.62503433227539
    9. ' (' → logprob: -17.75003433227539
    10. '(this' → logprob: -18.37503433227539

Token 506: '.W' (ID: 2342)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.04564850777387619
    2. '.W' → logprob: -3.4206485748291016
    3. 'WIDTH' → logprob: -5.045648574829102
    4. ' self' → logprob: -5.670648574829102
    5. '(self' → logprob: -6.670648574829102
    6. '   ' → logprob: -8.045648574829102
    7. 'W' → logprob: -8.795648574829102
    8. ' ' → logprob: -10.045648574829102
    9. 'c' → logprob: -10.045648574829102
    10. '  ' → logprob: -10.795648574829102

Token 507: 'IDTH' (ID: 20688)
  Prédit: 'IDTH'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'IDTH' → logprob: -0.04404576122760773
    2. 'r' → logprob: -3.9190456867218018
    3. '[r' → logprob: -4.419045925140381
    4. '(r' → logprob: -5.294045925140381
    5. '   ' → logprob: -6.294045925140381
    6. 'HEIGHT' → logprob: -6.544045925140381
    7. 'IGHT' → logprob: -6.669045925140381
    8. 'idth' → logprob: -7.794045925140381
    9. ',' → logprob: -8.294045448303223
    10. 'WIDTH' → logprob: -8.919045448303223

Token 508: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.014172795228660107
    2. '-' → logprob: -4.2641730308532715
    3. ' ' → logprob: -11.639172554016113
    4. '   ' → logprob: -15.139172554016113
    5. '-count' → logprob: -16.63917350769043
    6. ' ' → logprob: -16.76417350769043
    7. '+' → logprob: -16.88917350769043
    8. '  ' → logprob: -16.88917350769043
    9. ' +' → logprob: -17.13917350769043
    10. '    ' → logprob: -18.13917350769043

Token 509: ' count' (ID: 3605)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' → logprob: -2.7610454708337784e-05
    2. ' count' → logprob: -10.500027656555176
    3. '   ' → logprob: -17.87502670288086
    4. '(count' → logprob: -18.12502670288086
    5. ' ' → logprob: -19.50002670288086
    6. '
' → logprob: -20.37502670288086
    7. 'cc' → logprob: -20.62502670288086
    8. '[count' → logprob: -21.37502670288086
    9. '       ' → logprob: -21.75002670288086
    10. '$count' → logprob: -21.87502670288086

Token 510: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -2.045823566731997e-05
    2. ' ,' → logprob: -10.875020027160645
    3. ',self' → logprob: -13.500020027160645
    4. 'self' → logprob: -17.00002098083496
    5. ',
' → logprob: -17.12502098083496
    6. '_,' → logprob: -19.37502098083496
    7. '‌,' → logprob: -20.87502098083496
    8. ' self' → logprob: -21.00002098083496
    9. ',

' → logprob: -21.00002098083496
    10. 'to' → logprob: -21.37502098083496

Token 511: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.023254211992025375
    2. ' self' → logprob: -3.773254156112671
    3. '   ' → logprob: -12.64825439453125
    4. '           ' → logprob: -13.77325439453125
    5. '(self' → logprob: -14.14825439453125
    6. '       ' → logprob: -14.14825439453125
    7. ' ' → logprob: -14.64825439453125
    8. '    ' → logprob: -14.64825439453125
    9. '
' → logprob: -15.27325439453125
    10. '	self' → logprob: -15.27325439453125

Token 512: '.W' (ID: 2342)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0201907679438591
    2. ' self' → logprob: -4.270190715789795
    3. 'WIDTH' → logprob: -5.395190715789795
    4. 'c' → logprob: -6.895190715789795
    5. 'cc' → logprob: -8.270191192626953
    6. ')' → logprob: -9.645191192626953
    7. ',' → logprob: -10.520191192626953
    8. '_WIDTH' → logprob: -10.520191192626953
    9. '
' → logprob: -10.895191192626953
    10. 'W' → logprob: -11.270191192626953

Token 513: 'IDTH' (ID: 20688)
  Prédit: 'IDTH'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'IDTH' → logprob: -0.0007953316089697182
    2. 'ID' → logprob: -7.875795364379883
    3. 'idth' → logprob: -8.500795364379883
    4. 'WIDTH' → logprob: -8.625795364379883
    5. 'IGHT' → logprob: -11.625795364379883
    6. '   ' → logprob: -11.750795364379883
    7. 'ITH' → logprob: -13.000795364379883
    8. 'INDOW' → logprob: -13.000795364379883
    9. 'IDE' → logprob: -13.125795364379883
    10. 'HEIGHT' → logprob: -13.500795364379883

Token 514: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.0036384384147822857
    2. '):' → logprob: -5.62863826751709
    3. '           ' → logprob: -11.62863826751709
    4. '):
' → logprob: -11.62863826751709
    5. ' ):
' → logprob: -11.62863826751709
    6. '               ' → logprob: -12.50363826751709
    7. '       ' → logprob: -13.25363826751709
    8. '                   ' → logprob: -13.25363826751709
    9. ':
' → logprob: -14.00363826751709
    10. ')' → logprob: -14.12863826751709

Token 515: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.4027731120586395
    2. 'to' → logprob: -1.402773141860962
    3. ' to' → logprob: -2.527773141860962
    4. '               ' → logprob: -5.652772903442383
    5. '                       ' → logprob: -6.152772903442383
    6. '           ' → logprob: -9.902772903442383
    7. '   ' → logprob: -10.027772903442383
    8. '(to' → logprob: -10.527772903442383
    9. ',to' → logprob: -11.652772903442383
    10. '       ' → logprob: -12.027772903442383

Token 516: ' to' (ID: 316)
  Prédit: 'to'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'to' (adapté à ' to') → logprob: -0.00038825106457807124
    2. ' to' → logprob: -8.000388145446777
    3. '                   ' → logprob: -10.125388145446777
    4. '               ' → logprob: -11.500388145446777
    5. '                       ' → logprob: -12.875388145446777
    6. '           ' → logprob: -15.875388145446777
    7. '   ' → logprob: -18.125389099121094
    8. '	to' → logprob: -18.875389099121094
    9. '       ' → logprob: -19.125389099121094
    10. '                           ' → logprob: -19.250389099121094

Token 517: '_' (ID: 62)
  Prédit: '_'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.10022231191396713
    2. 'erase' → logprob: -2.35022234916687
    3. ' erase' → logprob: -11.47522258758545
    4. '.erase' → logprob: -12.72522258758545
    5. 'add' → logprob: -13.97522258758545
    6. 'er' → logprob: -15.22522258758545
    7. 'Erase' → logprob: -15.35022258758545
    8. 'eras' → logprob: -15.72522258758545
    9. '   ' → logprob: -15.97522258758545
    10. '_add' → logprob: -16.225221633911133

Token 518: 'erase' (ID: 91229)
  Prédit: 'erase'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'erase' → logprob: -1.1160349458805285e-05
    2. 'add' → logprob: -12.125011444091797
    3. ' erase' → logprob: -12.500011444091797
    4. '_' → logprob: -14.125011444091797
    5. 'rase' → logprob: -15.375011444091797
    6. '.erase' → logprob: -15.375011444091797
    7. 'r' → logprob: -15.500011444091797
    8. 'er' → logprob: -15.875011444091797
    9. '   ' → logprob: -16.500011444091797
    10. '```' → logprob: -16.625011444091797

Token 519: '.add' (ID: 1950)
  Prédit: '.add'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.add' → logprob: -0.0015061709564179182
    2. '.' → logprob: -6.501506328582764
    3. 'add' → logprob: -13.001505851745605
    4. ' .' → logprob: -13.626505851745605
    5. '                       ' → logprob: -15.626505851745605
    6. '                   ' → logprob: -15.876505851745605
    7. '           ' → logprob: -16.751506805419922
    8. '.Add' → logprob: -17.751506805419922
    9. '.append' → logprob: -18.126506805419922
    10. '       ' → logprob: -18.126506805419922

Token 520: '((' (ID: 2054)
  Prédit: '(('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '((' → logprob: -0.014168919064104557
    2. '(r' → logprob: -4.264168739318848
    3. '(' → logprob: -12.264168739318848
    4. ' (' → logprob: -15.014168739318848
    5. '(
' → logprob: -15.264168739318848
    6. ' ((' → logprob: -16.514169692993164
    7. '   ' → logprob: -16.764169692993164
    8. ' ' → logprob: -17.514169692993164
    9. 'r' → logprob: -19.264169692993164
    10. '[(' → logprob: -19.639169692993164

Token 521: 'r' (ID: 81)
  Prédit: 'r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -1.5690089639974758e-05
    2. '(r' → logprob: -11.125015258789062
    3. ' r' → logprob: -14.250015258789062
    4. '   ' → logprob: -16.250015258789062
    5. ')' → logprob: -17.750015258789062
    6. '	r' → logprob: -17.875015258789062
    7. '_r' → logprob: -18.375015258789062
    8. '{' → logprob: -18.500015258789062
    9. '[r' → logprob: -18.500015258789062
    10. '```' → logprob: -18.875015258789062

Token 522: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.3782830137643032e-05
    2. ' ,' → logprob: -11.37501335144043
    3. ',
' → logprob: -13.37501335144043
    4. '(cc' → logprob: -15.75001335144043
    5. 'cc' → logprob: -16.00001335144043
    6. ',c' → logprob: -16.12501335144043
    7. '_,' → logprob: -16.25001335144043
    8. '   ' → logprob: -16.50001335144043
    9. '‌,' → logprob: -16.62501335144043
    10. '[' → logprob: -16.87501335144043

Token 523: ' cc' (ID: 22988)
  Prédit: 'cc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cc' → logprob: -0.0007900939672254026
    2. 'r' → logprob: -7.500790119171143
    3. ' cc' → logprob: -8.500789642333984
    4. 'c' → logprob: -10.500789642333984
    5. ')' → logprob: -12.875789642333984
    6. '(cc' → logprob: -13.000789642333984
    7. ' r' → logprob: -15.000789642333984
    8. 'self' → logprob: -15.375789642333984
    9. 'rr' → logprob: -15.625789642333984
    10. '0' → logprob: -15.625789642333984

Token 524: '))

' (ID: 9746)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.08918940275907516
    2. '))
' → logprob: -2.589189291000366
    3. ')' → logprob: -4.589189529418945
    4. ')
' → logprob: -9.589189529418945
    5. '       ' → logprob: -12.089189529418945
    6. '           ' → logprob: -12.714189529418945
    7. '               ' → logprob: -12.964189529418945
    8. '))

' → logprob: -13.214189529418945
    9. '))
' → logprob: -13.589189529418945
    10. '                   ' → logprob: -13.964189529418945

Token 525: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.005611981265246868
    2. '```' → logprob: -5.880611896514893
    3. '
' → logprob: -6.505611896514893
    4. '   ' → logprob: -7.130611896514893
    5. '<|end|>' → logprob: -8.00561237335205
    6. ')' → logprob: -10.25561237335205
    7. '        
' → logprob: -10.25561237335205
    8. 'return' → logprob: -10.38061237335205
    9. ' return' → logprob: -10.75561237335205
    10. '           ' → logprob: -11.00561237335205

Token 526: ' #' (ID: 1069)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' (adapté à ' #') → logprob: -0.4748258590698242
    2. '       ' → logprob: -0.9748258590698242
    3. 'for' → logprob: -7.474825859069824
    4. '   ' → logprob: -8.849825859069824
    5. '
' → logprob: -10.599825859069824
    6. ' #' → logprob: -12.099825859069824
    7. ' for' → logprob: -12.724825859069824
    8. '```' → logprob: -12.974825859069824
    9. '        
' → logprob: -13.724825859069824
    10. '           ' → logprob: -14.849825859069824

Token 527: ' Vertical' (ID: 58623)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.5907553434371948
    2. 'Vertical' → logprob: -0.8407553434371948
    3. 'vertical' → logprob: -4.590755462646484
    4. 'for' → logprob: -5.840755462646484
    5. ' Vertical' → logprob: -6.590755462646484
    6. '       ' → logprob: -8.590755462646484
    7. ' vertical' → logprob: -9.590755462646484
    8. ' #' → logprob: -11.090755462646484
    9. '_vertical' → logprob: -12.215755462646484
    10. '   ' → logprob: -12.715755462646484

Token 528: ' check' (ID: 2371)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0311737097799778
    2. ' for' → logprob: -3.5311737060546875
    3. 'check' → logprob: -6.7811737060546875
    4. ' check' → logprob: -8.156173706054688
    5. '       ' → logprob: -15.531173706054688
    6. '   ' → logprob: -16.281173706054688
    7. '_check' → logprob: -17.281173706054688
    8. '
' → logprob: -17.781173706054688
    9. 'def' → logprob: -18.031173706054688
    10. '```' → logprob: -18.406173706054688

Token 529: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.22933630645275116
    2. 'for' → logprob: -1.7293362617492676
    3. ' for' → logprob: -3.9793362617492676
    4. '
' → logprob: -4.729336261749268
    5. '```' → logprob: -12.354336738586426
    6. '   ' → logprob: -13.729336738586426
    7. '	for' → logprob: -15.354336738586426
    8. '           ' → logprob: -15.604336738586426
    9. '        
' → logprob: -15.604336738586426
    10. '      ' → logprob: -16.47933578491211

Token 530: '       ' (ID: 309)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.1442737579345703
    2. '       ' → logprob: -2.3942737579345703
    3. ' for' → logprob: -3.1442737579345703
    4. '   ' → logprob: -11.64427375793457
    5. '```' → logprob: -12.89427375793457
    6. '
' → logprob: -14.51927375793457
    7. '	for' → logprob: -15.26927375793457
    8. '           ' → logprob: -17.14427375793457
    9. '      ' → logprob: -17.14427375793457
    10. '     ' → logprob: -17.64427375793457

Token 531: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.001519026467576623
    2. ' for' → logprob: -6.501519203186035
    3. '       ' → logprob: -11.001519203186035
    4. '
' → logprob: -18.37651824951172
    5. '   ' → logprob: -18.62651824951172
    6. '```' → logprob: -19.50151824951172
    7. '	for' → logprob: -20.37651824951172
    8. '        
' → logprob: -21.87651824951172
    9. '           ' → logprob: -23.00151824951172
    10. '``' → logprob: -23.25151824951172

Token 532: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.011053833179175854
    2. ' c' → logprob: -4.511054039001465
    3. 'r' → logprob: -12.261054039001465
    4. '   ' → logprob: -13.886054039001465
    5. '	c' → logprob: -15.386054039001465
    6. '_c' → logprob: -16.51105308532715
    7. ' r' → logprob: -17.01105308532715
    8. '[c' → logprob: -18.63605308532715
    9. '```' → logprob: -18.63605308532715
    10. '       ' → logprob: -19.51105308532715

Token 533: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0024792237672954798
    2. 'in' → logprob: -6.002479076385498
    3. ' ' → logprob: -12.752479553222656
    4. 'range' → logprob: -14.502479553222656
    5. 'n' → logprob: -16.877479553222656
    6. '0' → logprob: -17.252479553222656
    7. 'import' → logprob: -17.502479553222656
    8. 'In' → logprob: -18.127479553222656
    9. '```' → logprob: -18.127479553222656
    10. 's' → logprob: -18.127479553222656

Token 534: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0009114635176956654
    2. ' range' → logprob: -7.000911235809326
    3. '(range' → logprob: -18.750911712646484
    4. ' ' → logprob: -20.875911712646484
    5. '	range' → logprob: -21.625911712646484
    6. '   ' → logprob: -21.750911712646484
    7. '
' → logprob: -22.375911712646484
    8. 'Range' → logprob: -22.625911712646484
    9. '0' → logprob: -22.750911712646484
    10. ')' → logprob: -22.875911712646484

Token 535: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.0010216168593615294
    2. 'self' → logprob: -7.001021385192871
    3. '(' → logprob: -9.126021385192871
    4. ' self' → logprob: -13.876021385192871
    5. '0' → logprob: -16.251022338867188
    6. '[self' → logprob: -16.376022338867188
    7. '(s' → logprob: -17.126022338867188
    8. 'def' → logprob: -17.126022338867188
    9. 'range' → logprob: -17.126022338867188
    10. '=self' → logprob: -17.251022338867188

Token 536: '.W' (ID: 2342)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0005126410396769643
    2. ' self' → logprob: -8.125513076782227
    3. 'Board' → logprob: -9.125513076782227
    4. '0' → logprob: -9.500513076782227
    5. '(self' → logprob: -10.875513076782227
    6. 'BOARD' → logprob: -12.250513076782227
    7. 'WIDTH' → logprob: -12.500513076782227
    8. '5' → logprob: -13.250513076782227
    9. '1' → logprob: -13.875513076782227
    10. '(Board' → logprob: -13.875513076782227

Token 537: 'IDTH' (ID: 20688)
  Prédit: 'IDTH'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'IDTH' → logprob: -0.012826398946344852
    2. 'HEIGHT' → logprob: -4.887826442718506
    3. 'E' → logprob: -6.387826442718506
    4. 'ALUE' → logprob: -7.012826442718506
    5. 'WIDTH' → logprob: -7.262826442718506
    6. '   ' → logprob: -7.637826442718506
    7. 'IEW' → logprob: -7.637826442718506
    8. 'ID' → logprob: -8.512825965881348
    9. '5' → logprob: -8.887825965881348
    10. 'IDE' → logprob: -9.137825965881348

Token 538: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.001338454894721508
    2. '):' → logprob: -6.626338481903076
    3. '   ' → logprob: -11.751338005065918
    4. '):
' → logprob: -12.876338005065918
    5. ':
' → logprob: -14.376338005065918
    6. '):

' → logprob: -14.501338005065918
    7. '       ' → logprob: -14.501338005065918
    8. ' ):
' → logprob: -15.876338005065918
    9. '():
' → logprob: -16.251338958740234
    10. ')' → logprob: -16.501338958740234

Token 539: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.18370211124420166
    2. '       ' → logprob: -1.9337021112442017
    3. 'count' → logprob: -3.933701992034912
    4. 'for' → logprob: -5.683701992034912
    5. ' for' → logprob: -8.68370246887207
    6. '   ' → logprob: -10.30870246887207
    7. ' count' → logprob: -11.30870246887207
    8. 'r' → logprob: -11.55870246887207
    9. '```' → logprob: -12.55870246887207
    10. '         ' → logprob: -13.18370246887207

Token 540: ' count' (ID: 3605)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' (adapté à ' count') → logprob: -0.4742732644081116
    2. 'for' → logprob: -0.9742732644081116
    3. 'r' → logprob: -8.849273681640625
    4. '       ' → logprob: -10.724273681640625
    5. '   ' → logprob: -11.099273681640625
    6. ' for' → logprob: -11.349273681640625
    7. ' count' → logprob: -13.724273681640625
    8. '```' → logprob: -13.724273681640625
    9. '           ' → logprob: -14.224273681640625
    10. '     ' → logprob: -15.224273681640625

Token 541: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.31326213479042053
    2. '=' → logprob: -1.3132621049880981
    3. ' ' → logprob: -14.688261985778809
    4. '   ' → logprob: -17.063262939453125
    5. '1' → logprob: -19.938262939453125
    6. ',' → logprob: -19.938262939453125
    7. ' +=' → logprob: -20.063262939453125
    8. '    ' → logprob: -20.188262939453125
    9. ')' → logprob: -20.313262939453125
    10. '+=' → logprob: -20.438262939453125

Token 542: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00029613598599098623
    2. ' ' → logprob: -8.125296592712402
    3. '   ' → logprob: -16.375295639038086
    4. '0' → logprob: -18.750295639038086
    5. '=' → logprob: -19.875295639038086
    6. '[' → logprob: -20.500295639038086
    7. '       ' → logprob: -21.312795639038086
    8. '```' → logprob: -21.312795639038086
    9. '  ' → logprob: -21.500295639038086
    10. '<|end|>' → logprob: -22.500295639038086

Token 543: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.842555426876061e-06
    2. ' ' → logprob: -12.250004768371582
    3. '   ' → logprob: -18.8750057220459
    4. '0' → logprob: -21.6250057220459
    5. '```' → logprob: -22.6250057220459
    6. '  ' → logprob: -22.7500057220459
    7. '=' → logprob: -23.0000057220459
    8. '
' → logprob: -23.3750057220459
    9. '       ' → logprob: -24.1875057220459
    10. '' → logprob: -24.3125057220459

Token 544: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.1623527854681015
    2. 'for' → logprob: -2.4123528003692627
    3. ' for' → logprob: -3.1623528003692627
    4. '
' → logprob: -4.037352561950684
    5. '       ' → logprob: -8.412352561950684
    6. '               ' → logprob: -10.287352561950684
    7. '```' → logprob: -11.412352561950684
    8. '   ' → logprob: -12.287352561950684
    9. '            
' → logprob: -12.787352561950684
    10. '
' → logprob: -12.787352561950684

Token 545: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.11294145882129669
    2. 'for' → logprob: -2.3629415035247803
    3. ' for' → logprob: -4.737941265106201
    4. '       ' → logprob: -5.612941265106201
    5. '
' → logprob: -8.48794174194336
    6. '               ' → logprob: -10.61294174194336
    7. '```' → logprob: -12.11294174194336
    8. '   ' → logprob: -12.36294174194336
    9. '         ' → logprob: -13.48794174194336
    10. '          ' → logprob: -13.73794174194336

Token 546: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.004080897197127342
    2. ' for' → logprob: -5.504080772399902
    3. '       ' → logprob: -13.254080772399902
    4. '           ' → logprob: -14.254080772399902
    5. '```' → logprob: -17.25408172607422
    6. '
' → logprob: -17.37908172607422
    7. ' ' → logprob: -18.75408172607422
    8. 'from' → logprob: -19.37908172607422
    9. '   ' → logprob: -19.87908172607422
    10. '	for' → logprob: -20.00408172607422

Token 547: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.029750484973192215
    2. ' r' → logprob: -3.5297505855560303
    3. '   ' → logprob: -18.40475082397461
    4. '_r' → logprob: -18.90475082397461
    5. '	r' → logprob: -18.90475082397461
    6. ' in' → logprob: -19.15475082397461
    7. ' ' → logprob: -19.52975082397461
    8. '(r' → logprob: -19.65475082397461
    9. '```' → logprob: -19.65475082397461
    10. 't' → logprob: -19.77975082397461

Token 548: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0009278989746235311
    2. 'in' → logprob: -7.000927925109863
    3. '=' → logprob: -11.625927925109863
    4. '1' → logprob: -12.125927925109863
    5. ' ' → logprob: -14.250927925109863
    6. 'In' → logprob: -14.875927925109863
    7. ' =' → logprob: -15.125927925109863
    8. 'import' → logprob: -16.125926971435547
    9. 'range' → logprob: -16.375926971435547
    10. '2' → logprob: -16.500926971435547

Token 549: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.04859282076358795
    2. ' range' → logprob: -3.0485928058624268
    3. '1' → logprob: -12.173592567443848
    4. '(range' → logprob: -15.548592567443848
    5. ' ' → logprob: -17.673593521118164
    6. '
' → logprob: -18.173593521118164
    7. '(' → logprob: -18.673593521118164
    8. '   ' → logprob: -19.673593521118164
    9. 'in' → logprob: -19.923593521118164
    10. ' in' → logprob: -20.048593521118164

Token 550: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.00012773419439326972
    2. '1' → logprob: -9.000127792358398
    3. 'range' → logprob: -12.750127792358398
    4. '(self' → logprob: -13.625127792358398
    5. ' (' → logprob: -15.750127792358398
    6. ' range' → logprob: -17.3751277923584
    7. '   ' → logprob: -17.7501277923584
    8. 'self' → logprob: -17.8751277923584
    9. 'def' → logprob: -18.2501277923584
    10. ' ' → logprob: -18.5001277923584

Token 551: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.5094070477061905e-05
    2. ' ' → logprob: -11.125015258789062
    3. '   ' → logprob: -15.250015258789062
    4. 'self' → logprob: -17.500015258789062
    5. '
' → logprob: -17.750015258789062
    6. '(' → logprob: -18.000015258789062
    7. '  ' → logprob: -19.500015258789062
    8. '0' → logprob: -19.937515258789062
    9. '    ' → logprob: -19.937515258789062
    10. ',' → logprob: -20.125015258789062

Token 552: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.011670254170894623
    2. 'self' → logprob: -4.511670112609863
    3. ' self' → logprob: -8.261670112609863
    4. ',self' → logprob: -8.636670112609863
    5. '(self' → logprob: -8.761670112609863
    6. '       ' → logprob: -11.386670112609863
    7. '   ' → logprob: -11.886670112609863
    8. ' ,' → logprob: -13.136670112609863
    9. '           ' → logprob: -13.136670112609863
    10. '[self' → logprob: -13.136670112609863

Token 553: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -7.624555291840807e-05
    2. ' self' → logprob: -9.500076293945312
    3. '(self' → logprob: -14.000076293945312
    4. '       ' → logprob: -14.875076293945312
    5. '   ' → logprob: -16.750076293945312
    6. '[self' → logprob: -17.125076293945312
    7. '=self' → logprob: -17.375076293945312
    8. '           ' → logprob: -18.125076293945312
    9. 'Self' → logprob: -18.625076293945312
    10. ')' → logprob: -18.750076293945312

Token 554: '.' (ID: 13)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0002446509897708893
    2. ' self' → logprob: -8.375245094299316
    3. '(self' → logprob: -11.750245094299316
    4. 'HEIGHT' → logprob: -12.750245094299316
    5. '       ' → logprob: -13.375245094299316
    6. '   ' → logprob: -14.500245094299316
    7. '
' → logprob: -15.250245094299316
    8. '=self' → logprob: -15.250245094299316
    9. '[self' → logprob: -15.750245094299316
    10. ',self' → logprob: -15.875245094299316

Token 555: 'HEIGHT' (ID: 105934)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.00023512568441219628
    2. 'HEIGHT' → logprob: -8.875235557556152
    3. ' self' → logprob: -9.500235557556152
    4. 'Board' → logprob: -11.375235557556152
    5. '5' → logprob: -12.250235557556152
    6. '(self' → logprob: -13.125235557556152
    7. 'BOARD' → logprob: -13.750235557556152
    8. '[self' → logprob: -15.750235557556152
    9. 'board' → logprob: -16.000234603881836
    10. '25' → logprob: -16.000234603881836

Token 556: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.06998823583126068
    2. '):' → logprob: -2.694988250732422
    3. '):
' → logprob: -11.444988250732422
    4. '       ' → logprob: -11.819988250732422
    5. '():
' → logprob: -11.944988250732422
    6. '):

' → logprob: -12.069988250732422
    7. '<|end|>' → logprob: -12.069988250732422
    8. ':' → logprob: -12.444988250732422
    9. '   ' → logprob: -12.694988250732422
    10. '()):
' → logprob: -13.194988250732422

Token 557: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -4.906711546937004e-05
    2. ' if' → logprob: -10.125048637390137
    3. 'if' → logprob: -12.125048637390137
    4. '```' → logprob: -13.000048637390137
    5. '           ' → logprob: -15.125048637390137
    6. '<|end|>' → logprob: -15.625048637390137
    7. '                   ' → logprob: -15.750048637390137
    8. ',' → logprob: -15.750048637390137
    9. '              ' → logprob: -16.250049591064453
    10. '		       ' → logprob: -17.125049591064453

Token 558: ' if' (ID: 538)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.27600574493408203
    2. 'if' (adapté à ' if') → logprob: -1.526005744934082
    3. ' if' → logprob: -4.276005744934082
    4. '                   ' → logprob: -4.651005744934082
    5. '           ' → logprob: -8.651005744934082
    6. '```' → logprob: -9.401005744934082
    7. '                ' → logprob: -9.776005744934082
    8. '   ' → logprob: -11.401005744934082
    9. '                       ' → logprob: -12.901005744934082
    10. '              ' → logprob: -13.151005744934082

Token 559: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.1128295361995697
    2. ' self' → logprob: -2.2378294467926025
    3. '   ' → logprob: -13.237829208374023
    4. '(self' → logprob: -13.362829208374023
    5. '           ' → logprob: -13.737829208374023
    6. '               ' → logprob: -14.487829208374023
    7. '    ' → logprob: -14.862829208374023
    8. '[self' → logprob: -14.862829208374023
    9. ' ' → logprob: -14.987829208374023
    10. '       ' → logprob: -15.112829208374023

Token 560: '.grid' (ID: 19269)
  Prédit: '.grid'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.grid' → logprob: -1.5094070477061905e-05
    2. 'grid' → logprob: -11.625015258789062
    3. '.' → logprob: -12.625015258789062
    4. ' .' → logprob: -13.375015258789062
    5. '   ' → logprob: -15.375015258789062
    6. 'self' → logprob: -15.500015258789062
    7. '	grid' → logprob: -15.625015258789062
    8. '].' → logprob: -16.125015258789062
    9. '           ' → logprob: -16.500015258789062
    10. '       ' → logprob: -16.750015258789062

Token 561: '[r' (ID: 33265)
  Prédit: '[r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[r' → logprob: -1.5451681974809617e-05
    2. 'r' → logprob: -11.125015258789062
    3. '[' → logprob: -15.250015258789062
    4. '   ' → logprob: -16.000015258789062
    5. '[
' → logprob: -16.125015258789062
    6. ' [' → logprob: -16.500015258789062
    7. '][' → logprob: -16.875015258789062
    8. '[self' → logprob: -17.750015258789062
    9. '```' → logprob: -17.750015258789062
    10. '	r' → logprob: -18.250015258789062

Token 562: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.0015617619501426816
    2. '[c' → logprob: -6.626561641693115
    3. '[r' → logprob: -8.501562118530273
    4. '>[' → logprob: -11.501562118530273
    5. '}[' → logprob: -11.876562118530273
    6. '[' → logprob: -12.626562118530273
    7. ')[' → logprob: -12.751562118530273
    8. ' ][' → logprob: -13.001562118530273
    9. '   ' → logprob: -13.251562118530273
    10. ']' → logprob: -13.751562118530273

Token 563: 'c' (ID: 66)
  Prédit: 'c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -1.8908587662735954e-05
    2. '[c' → logprob: -11.250019073486328
    3. ' c' → logprob: -12.250019073486328
    4. '][' → logprob: -14.000019073486328
    5. '[' → logprob: -16.625019073486328
    6. '   ' → logprob: -16.875019073486328
    7. '```' → logprob: -16.875019073486328
    8. ')c' → logprob: -17.375019073486328
    9. '
' → logprob: -17.875019073486328
    10. ',c' → logprob: -18.625019073486328

Token 564: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.001342850853689015
    2. ']==' → logprob: -6.6263427734375
    3. ' ]' → logprob: -11.7513427734375
    4. '==' → logprob: -12.0013427734375
    5. ' ==' → logprob: -13.7513427734375
    6. '][' → logprob: -14.1263427734375
    7. ')' → logprob: -14.5013427734375
    8. '[' → logprob: -15.5013427734375
    9. ']
' → logprob: -16.1263427734375
    10. '```' → logprob: -16.3763427734375

Token 565: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.03804665803909302
    2. ' ==' → logprob: -3.2880465984344482
    3. ']==' → logprob: -13.038046836853027
    4. '==
' → logprob: -13.663046836853027
    5. '```' → logprob: -14.163046836853027
    6. ')==' → logprob: -14.663046836853027
    7. '===' → logprob: -15.413046836853027
    8. ')' → logprob: -15.538046836853027
    9. '=' → logprob: -16.28804588317871
    10. '[' → logprob: -16.41304588317871

Token 566: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0006267757853493094
    2. ' self' → logprob: -7.375626564025879
    3. '(self' → logprob: -16.375627517700195
    4. '[self' → logprob: -16.375627517700195
    5. '0' → logprob: -17.750627517700195
    6. '	self' → logprob: -18.000627517700195
    7. '               ' → logprob: -18.125627517700195
    8. '           ' → logprob: -18.750627517700195
    9. '=self' → logprob: -18.750627517700195
    10. '                   ' → logprob: -18.875627517700195

Token 567: '.grid' (ID: 19269)
  Prédit: 'grid'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'grid' → logprob: -0.3417794406414032
    2. '[r' → logprob: -1.3417794704437256
    3. '.grid' → logprob: -3.5917794704437256
    4. ' grid' → logprob: -7.8417792320251465
    5. 'r' → logprob: -9.591779708862305
    6. 'Grid' → logprob: -10.466779708862305
    7. '   ' → logprob: -10.966779708862305
    8. '_grid' → logprob: -11.466779708862305
    9. '	grid' → logprob: -11.466779708862305
    10. '-' → logprob: -11.841779708862305

Token 568: '[r' (ID: 33265)
  Prédit: '[r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[r' → logprob: -0.0019298245897516608
    2. 'r' → logprob: -6.251929759979248
    3. '
' → logprob: -14.001930236816406
    4. '[
' → logprob: -15.126930236816406
    5. '[' → logprob: -16.751930236816406
    6. ' r' → logprob: -17.001930236816406
    7. '   ' → logprob: -17.126930236816406
    8. '{' → logprob: -17.251930236816406
    9. ' [' → logprob: -17.876930236816406
    10. '(r' → logprob: -18.001930236816406

Token 569: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -6.392202976712724e-06
    2. ' -' → logprob: -12.000006675720215
    3. '1' → logprob: -16.3750057220459
    4. '][' → logprob: -17.8750057220459
    5. '[r' → logprob: -18.2500057220459
    6. 'r' → logprob: -19.1250057220459
    7. '[' → logprob: -19.2500057220459
    8. '   ' → logprob: -21.1250057220459
    9. '[c' → logprob: -21.6250057220459
    10. '-
' → logprob: -21.8750057220459

Token 570: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -9.088346359931165e-07
    2. '   ' → logprob: -15.125000953674316
    3. '][' → logprob: -15.625000953674316
    4. ' ' → logprob: -16.25
    5. 'c' → logprob: -16.625
    6. '```' → logprob: -16.625
    7. '       ' → logprob: -16.75
    8. '           ' → logprob: -17.25
    9. '[c' → logprob: -18.0
    10. '[' → logprob: -18.875

Token 571: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.0013345248298719525
    2. '[c' → logprob: -6.6263346672058105
    3. ' ][' → logprob: -12.876334190368652
    4. 'c' → logprob: -13.126334190368652
    5. ']' → logprob: -13.251334190368652
    6. ''][' → logprob: -14.876334190368652
    7. ')[' → logprob: -15.126334190368652
    8. ',c' → logprob: -15.126334190368652
    9. '"][' → logprob: -15.251334190368652
    10. '[' → logprob: -15.376334190368652

Token 572: 'c' (ID: 66)
  Prédit: 'c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -8.77627644513268e-06
    2. ' c' → logprob: -11.750008583068848
    3. '[c' → logprob: -15.250008583068848
    4. '   ' → logprob: -15.625008583068848
    5. '[' → logprob: -15.750008583068848
    6. ')c' → logprob: -16.125009536743164
    7. '][' → logprob: -17.000009536743164
    8. ',c' → logprob: -17.750009536743164
    9. '       ' → logprob: -17.875009536743164
    10. ',' → logprob: -18.750009536743164

Token 573: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.20242254436016083
    2. ' and' → logprob: -2.077422618865967
    3. 'and' → logprob: -3.077422618865967
    4. ')' → logprob: -4.452422618865967
    5. ' ]' → logprob: -8.452422142028809
    6. ' )' → logprob: -11.077422142028809
    7. '}' → logprob: -11.452422142028809
    8. ' ' → logprob: -12.202422142028809
    9. '               ' → logprob: -12.452422142028809
    10. '```' → logprob: -12.452422142028809

Token 574: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.048589076846838
    2. 'and' → logprob: -3.048588991165161
    3. '               ' → logprob: -13.923588752746582
    4. '                   ' → logprob: -14.298588752746582
    5. '                ' → logprob: -16.2985897064209
    6. ' ' → logprob: -17.0485897064209
    7. '```' → logprob: -17.1735897064209
    8. '                  ' → logprob: -17.9235897064209
    9. '	and' → logprob: -17.9235897064209
    10. '                    ' → logprob: -18.0485897064209

Token 575: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.06995132565498352
    2. ' self' → logprob: -2.694951295852661
    3. '               ' → logprob: -11.569951057434082
    4. '                   ' → logprob: -13.194951057434082
    5. '(self' → logprob: -13.819951057434082
    6. '           ' → logprob: -13.944951057434082
    7. '[self' → logprob: -14.569951057434082
    8. ' ' → logprob: -15.069951057434082
    9. '```' → logprob: -15.694951057434082
    10. '   ' → logprob: -15.944951057434082

Token 576: '.grid' (ID: 19269)
  Prédit: '.grid'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.grid' → logprob: -0.056556716561317444
    2. 'grid' → logprob: -2.9315567016601562
    3. '[r' → logprob: -6.431556701660156
    4. ' grid' → logprob: -9.931556701660156
    5. '	grid' → logprob: -12.556556701660156
    6. '   ' → logprob: -12.681556701660156
    7. '.' → logprob: -12.806556701660156
    8. '       ' → logprob: -13.681556701660156
    9. '```' → logprob: -13.681556701660156
    10. '           ' → logprob: -14.556556701660156

Token 577: '[r' (ID: 33265)
  Prédit: '[r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[r' → logprob: -3.173704271830502e-06
    2. '[c' → logprob: -13.12500286102295
    3. 'r' → logprob: -14.00000286102295
    4. '   ' → logprob: -16.375003814697266
    5. '[' → logprob: -16.375003814697266
    6. '[
' → logprob: -17.000003814697266
    7. ' [' → logprob: -17.750003814697266
    8. '```' → logprob: -18.250003814697266
    9. '[self' → logprob: -18.500003814697266
    10. '
' → logprob: -18.875003814697266

Token 578: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.47483015060424805
    2. '[c' → logprob: -0.974830150604248
    3. '[r' → logprob: -7.849830150604248
    4. '[' → logprob: -8.974830627441406
    5. ')[' → logprob: -9.474830627441406
    6. '-' → logprob: -10.224830627441406
    7. '   ' → logprob: -10.349830627441406
    8. 'c' → logprob: -10.974830627441406
    9. '       ' → logprob: -10.974830627441406
    10. '           ' → logprob: -11.349830627441406

Token 579: 'c' (ID: 66)
  Prédit: 'c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -7.822646693966817e-06
    2. ' c' → logprob: -12.250007629394531
    3. '[c' → logprob: -13.250007629394531
    4. '   ' → logprob: -14.250007629394531
    5. ')c' → logprob: -16.50000762939453
    6. '1' → logprob: -16.50000762939453
    7. '0' → logprob: -16.62500762939453
    8. '][' → logprob: -16.87500762939453
    9. '```' → logprob: -16.87500762939453
    10. '
' → logprob: -17.12500762939453

Token 580: ']' (ID: 60)
  Prédit: ' !='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' !=' → logprob: -0.4988518953323364
    2. '!=' → logprob: -1.2488518953323364
    3. ']' → logprob: -2.373851776123047
    4. ']!=' → logprob: -4.373851776123047
    5. ')!=' → logprob: -9.498851776123047
    6. ')' → logprob: -9.873851776123047
    7. '()!=' → logprob: -10.623851776123047
    8. ' ]' → logprob: -10.998851776123047
    9. '>' → logprob: -11.248851776123047
    10. '```' → logprob: -11.623851776123047

Token 581: ' !=' (ID: 1666)
  Prédit: ' !='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' !=' → logprob: -0.10020849853754044
    2. '!=' → logprob: -2.3502085208892822
    3. ')!=' → logprob: -14.475208282470703
    4. '()!=' → logprob: -14.600208282470703
    5. '               ' → logprob: -15.600208282470703
    6. ']!=' → logprob: -15.600208282470703
    7. '```' → logprob: -15.725208282470703
    8. '                   ' → logprob: -16.600208282470703
    9. ' ' → logprob: -16.600208282470703
    10. '>' → logprob: -16.725208282470703

Token 582: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -9.627176768844947e-05
    2. ' ' → logprob: -9.250096321105957
    3. '   ' → logprob: -15.750096321105957
    4. '  ' → logprob: -18.81259536743164
    5. '```' → logprob: -19.06259536743164
    6. '۰' → logprob: -19.31259536743164
    7. ' ' → logprob: -19.87509536743164
    8. '00' → logprob: -19.93759536743164
    9. ' ' → logprob: -20.18759536743164
    10. '`' → logprob: -20.37509536743164

Token 583: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.9027791495318525e-05
    2. ' ' → logprob: -10.875019073486328
    3. '   ' → logprob: -17.375019073486328
    4. '```' → logprob: -19.687519073486328
    5. '  ' → logprob: -19.937519073486328
    6. '۰' → logprob: -20.187519073486328
    7. '           ' → logprob: -21.312519073486328
    8. '00' → logprob: -21.437519073486328
    9. 'None' → logprob: -21.562519073486328
    10. '    ' → logprob: -21.562519073486328

Token 584: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.5242928862571716
    2. ':' → logprob: -1.3992929458618164
    3. '                   ' → logprob: -2.0242929458618164
    4. '               ' → logprob: -4.149292945861816
    5. ' and' → logprob: -4.524292945861816
    6. 'and' → logprob: -7.024292945861816
    7. '                       ' → logprob: -7.399292945861816
    8. '):
' → logprob: -8.024292945861816
    9. ',' → logprob: -8.649292945861816
    10. '           ' → logprob: -8.899292945861816

Token 585: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.0003775264194700867
    2. 'count' → logprob: -8.000377655029297
    3. '               ' → logprob: -10.500377655029297
    4. '                       ' → logprob: -12.000377655029297
    5. '                  ' → logprob: -12.500377655029297
    6. '           ' → logprob: -13.500377655029297
    7. ' count' → logprob: -13.750377655029297
    8. '```' → logprob: -14.500377655029297
    9. '                    ' → logprob: -14.750377655029297
    10. '                 ' → logprob: -15.000377655029297

Token 586: ' count' (ID: 3605)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' (adapté à ' count') → logprob: -0.00025680975522845984
    2. ' count' → logprob: -8.750256538391113
    3. '                   ' → logprob: -9.250256538391113
    4. '               ' → logprob: -13.125256538391113
    5. '                       ' → logprob: -16.50025749206543
    6. '           ' → logprob: -17.87525749206543
    7. '                  ' → logprob: -18.87525749206543
    8. '	count' → logprob: -19.12525749206543
    9. '   ' → logprob: -19.37525749206543
    10. '                ' → logprob: -19.62525749206543

Token 587: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.3132713735103607
    2. ' +=' → logprob: -1.313271403312683
    3. '=' → logprob: -12.188271522521973
    4. '+' → logprob: -13.438271522521973
    5. ']+=' → logprob: -14.063271522521973
    6. '           ' → logprob: -14.688271522521973
    7. '   ' → logprob: -14.813271522521973
    8. '                   ' → logprob: -14.938271522521973
    9. '```' → logprob: -15.188271522521973
    10. '               ' → logprob: -15.438271522521973

Token 588: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.47407740354537964
    2. ' ' → logprob: -0.9740774035453796
    3. '```' → logprob: -15.099077224731445
    4. ' ' → logprob: -17.224077224731445
    5. '2' → logprob: -17.724077224731445
    6. '   ' → logprob: -17.849077224731445
    7. '           ' → logprob: -18.099077224731445
    8. '               ' → logprob: -18.099077224731445
    9. '<|end|>' → logprob: -18.224077224731445
    10. '0' → logprob: -18.474077224731445

Token 589: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.246537173457909e-06
    2. ' ' → logprob: -12.375003814697266
    3. '```' → logprob: -19.250003814697266
    4. '   ' → logprob: -20.625003814697266
    5. '<|end|>' → logprob: -21.125003814697266
    6. '
' → logprob: -22.500003814697266
    7. '１' → logprob: -22.875003814697266
    8. '۱' → logprob: -23.000003814697266
    9. '`' → logprob: -23.500003814697266
    10. '-' → logprob: -23.750003814697266

Token 590: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0001347672223346308
    2. 'else' → logprob: -9.000134468078613
    3. ' else' → logprob: -12.125134468078613
    4. '			' → logprob: -12.500134468078613
    5. '<|end|>' → logprob: -14.500134468078613
    6. '```' → logprob: -14.625134468078613
    7. '		       ' → logprob: -15.250134468078613
    8. '           ' → logprob: -15.375134468078613
    9. '                   ' → logprob: -15.625134468078613
    10. 'elif' → logprob: -16.00013542175293

Token 591: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -4.763666947837919e-05
    2. 'else' → logprob: -10.00004768371582
    3. ' else' → logprob: -13.50004768371582
    4. '```' → logprob: -14.50004768371582
    5. '			' → logprob: -16.25004768371582
    6. '           ' → logprob: -16.50004768371582
    7. '                   ' → logprob: -17.00004768371582
    8. 'elif' → logprob: -17.50004768371582
    9. '              ' → logprob: -17.87504768371582
    10. '                ' → logprob: -18.12504768371582

Token 592: ' else' (ID: 1203)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' (adapté à ' else') → logprob: -0.4077887535095215
    2. '               ' → logprob: -1.4077887535095215
    3. ' else' → logprob: -2.4077887535095215
    4. '           ' → logprob: -8.78278923034668
    5. '   ' → logprob: -11.15778923034668
    6. '              ' → logprob: -12.65778923034668
    7. '```' → logprob: -12.65778923034668
    8. '
' → logprob: -13.15778923034668
    9. 'elif' → logprob: -13.40778923034668
    10. '	else' → logprob: -13.65778923034668

Token 593: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.1315416395664215
    2. ':
' → logprob: -2.1315417289733887
    3. '                   ' → logprob: -5.631541728973389
    4. '               ' → logprob: -7.256541728973389
    5. '```' → logprob: -9.13154125213623
    6. '           ' → logprob: -9.50654125213623
    7. '<|end|>' → logprob: -10.13154125213623
    8. '                       ' → logprob: -10.63154125213623
    9. '       ' → logprob: -10.75654125213623
    10. '):
' → logprob: -11.88154125213623

Token 594: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.020198944956064224
    2. '               ' → logprob: -4.020198822021484
    3. 'if' → logprob: -6.645198822021484
    4. '```' → logprob: -7.270198822021484
    5. '           ' → logprob: -11.395198822021484
    6. ' if' → logprob: -11.520198822021484
    7. '   ' → logprob: -11.520198822021484
    8. '                       ' → logprob: -12.020198822021484
    9. '                ' → logprob: -12.395198822021484
    10. '                 ' → logprob: -12.520198822021484

Token 595: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.06357290595769882
    2. '                   ' → logprob: -2.813572883605957
    3. ' if' → logprob: -7.313572883605957
    4. '               ' → logprob: -7.438572883605957
    5. '```' → logprob: -8.813572883605957
    6. '           ' → logprob: -8.938572883605957
    7. '                       ' → logprob: -10.313572883605957
    8. '   ' → logprob: -11.313572883605957
    9. 'for' → logprob: -11.313572883605957
    10. '       ' → logprob: -11.438572883605957

Token 596: ' count' (ID: 3605)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.5759470462799072
    2. ' count' → logprob: -0.8259470462799072
    3. '(count' → logprob: -12.200946807861328
    4. '                   ' → logprob: -14.325946807861328
    5. '[count' → logprob: -14.575946807861328
    6. '	count' → logprob: -14.575946807861328
    7. '```' → logprob: -15.575946807861328
    8. ' ' → logprob: -15.700946807861328
    9. '$count' → logprob: -15.825946807861328
    10. '               ' → logprob: -16.075946807861328

Token 597: ' >=' (ID: 5064)
  Prédit: ' >='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >=' → logprob: -0.0232619009912014
    2. '>=' → logprob: -3.773261785507202
    3. ' ' → logprob: -12.023262023925781
    4. '<|end|>' → logprob: -12.273262023925781
    5. ')>=' → logprob: -13.273262023925781
    6. ']>=' → logprob: -14.023262023925781
    7. '   ' → logprob: -14.023262023925781
    8. '    ' → logprob: -14.523262023925781
    9. '<|end|>' → logprob: -14.898262023925781
    10. ' ≥' → logprob: -14.898262023925781

Token 598: ' ' (ID: 220)
  Prédit: '3'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.012510828673839569
    2. ' ' → logprob: -4.387510776519775
    3. '   ' → logprob: -14.387511253356934
    4. '```' → logprob: -15.262511253356934
    5. '           ' → logprob: -15.887511253356934
    6. '                   ' → logprob: -16.262510299682617
    7. '               ' → logprob: -16.387510299682617
    8. '                       ' → logprob: -17.637510299682617
    9. '       ' → logprob: -17.762510299682617
    10. '  ' → logprob: -18.512510299682617

Token 599: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -1.688212614681106e-05
    2. ' ' → logprob: -11.000017166137695
    3. '```' → logprob: -16.875017166137695
    4. '   ' → logprob: -17.750017166137695
    5. '       ' → logprob: -19.812517166137695
    6. '۳' → logprob: -19.937517166137695
    7. '           ' → logprob: -20.312517166137695
    8. '<|end|>' → logprob: -20.562517166137695
    9. '৩' → logprob: -20.625017166137695
    10. '３' → logprob: -20.750017166137695

Token 600: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.18323199450969696
    2. '                       ' → logprob: -2.308232069015503
    3. ':
' → logprob: -2.933232069015503
    4. '                   ' → logprob: -4.433231830596924
    5. '               ' → logprob: -7.183231830596924
    6. '       ' → logprob: -7.558231830596924
    7. '```' → logprob: -7.558231830596924
    8. '<|end|>' → logprob: -7.933231830596924
    9. '           ' → logprob: -8.308232307434082
    10. ',' → logprob: -9.183232307434082

Token 601: '                       ' (ID: 968)
  Prédit: '                       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.024388469755649567
    2. 'for' → logprob: -3.774388551712036
    3. '                   ' → logprob: -6.899388313293457
    4. ' for' → logprob: -9.024388313293457
    5. '                     ' → logprob: -12.149388313293457
    6. '               ' → logprob: -12.774388313293457
    7. '```' → logprob: -13.399388313293457
    8. '           ' → logprob: -13.774388313293457
    9. '                      ' → logprob: -13.774388313293457
    10. '                    ' → logprob: -14.399388313293457

Token 602: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.050125207751989365
    2. ' for' → logprob: -3.6751251220703125
    3. '                       ' → logprob: -3.8001251220703125
    4. '                   ' → logprob: -6.8001251220703125
    5. '	for' → logprob: -10.050125122070312
    6. '                           ' → logprob: -11.800125122070312
    7. ' ' → logprob: -12.425125122070312
    8. '               ' → logprob: -13.050125122070312
    9. '   ' → logprob: -13.425125122070312
    10. '                     ' → logprob: -14.425125122070312

Token 603: ' rr' (ID: 54129)
  Prédit: 'rr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rr' → logprob: -3.5716304410016164e-05
    2. ' rr' → logprob: -10.500035285949707
    3. '_rr' → logprob: -11.750035285949707
    4. '(rr' → logprob: -16.125036239624023
    5. '```' → logprob: -16.875036239624023
    6. 'rrrr' → logprob: -17.875036239624023
    7. 'r' → logprob: -17.875036239624023
    8. 'RR' → logprob: -17.875036239624023
    9. 'row' → logprob: -18.000036239624023
    10. 'cc' → logprob: -19.000036239624023

Token 604: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.014346610754728317
    2. 'in' → logprob: -4.264346599578857
    3. 'range' → logprob: -8.639347076416016
    4. ' range' → logprob: -13.764347076416016
    5. '```' → logprob: -13.889347076416016
    6. 'n' → logprob: -14.514347076416016
    7. '<|end|>' → logprob: -14.514347076416016
    8. 'd' → logprob: -14.764347076416016
    9. ' ' → logprob: -14.889347076416016
    10. 's' → logprob: -14.889347076416016

Token 605: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0004307884373702109
    2. ' range' → logprob: -7.750430583953857
    3. '(range' → logprob: -15.625431060791016
    4. '   ' → logprob: -17.125431060791016
    5. ' ' → logprob: -17.750431060791016
    6. 'ange' → logprob: -18.250431060791016
    7. 'in' → logprob: -19.000431060791016
    8. '	range' → logprob: -19.250431060791016
    9. '  ' → logprob: -20.250431060791016
    10. 'r' → logprob: -20.500431060791016

Token 606: '(r' (ID: 4729)
  Prédit: '(r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(r' → logprob: -0.012572633102536201
    2. 'r' → logprob: -4.387572765350342
    3. '(' → logprob: -9.887572288513184
    4. '[r' → logprob: -12.887572288513184
    5. ' r' → logprob: -12.887572288513184
    6. '   ' → logprob: -13.387572288513184
    7. '(
' → logprob: -13.637572288513184
    8. '{' → logprob: -14.137572288513184
    9. '```' → logprob: -14.637572288513184
    10. '<|end|>' → logprob: -14.637572288513184

Token 607: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.18567350506782532
    2. '-' → logprob: -1.935673475265503
    3. '-count' → logprob: -3.685673475265503
    4. ' ' → logprob: -10.435673713684082
    5. 'count' → logprob: -11.810673713684082
    6. '   ' → logprob: -12.310673713684082
    7. '<count' → logprob: -13.310673713684082
    8. '[count' → logprob: -14.185673713684082
    9. ' count' → logprob: -14.435673713684082
    10. '  ' → logprob: -14.685673713684082

Token 608: ' count' (ID: 3605)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' → logprob: -4.5491004129871726e-05
    2. ' count' → logprob: -10.000045776367188
    3. '[count' → logprob: -17.125045776367188
    4. '(count' → logprob: -18.625045776367188
    5. '<count' → logprob: -19.375045776367188
    6. '       ' → logprob: -20.000045776367188
    7. 'cc' → logprob: -20.125045776367188
    8. '_count' → logprob: -20.375045776367188
    9. '$count' → logprob: -20.375045776367188
    10. '=count' → logprob: -20.625045776367188

Token 609: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00016611411410849541
    2. ' ,' → logprob: -8.875165939331055
    3. ',r' → logprob: -11.750165939331055
    4. ',count' → logprob: -12.000165939331055
    5. '           ' → logprob: -12.875165939331055
    6. '+' → logprob: -13.250165939331055
    7. '               ' → logprob: -13.250165939331055
    8. '                   ' → logprob: -13.500165939331055
    9. ',c' → logprob: -13.625165939331055
    10. ')' → logprob: -14.625165939331055

Token 610: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.0019286326132714748
    2. ' r' → logprob: -6.251928806304932
    3. '                   ' → logprob: -18.501928329467773
    4. 'rr' → logprob: -18.751928329467773
    5. '               ' → logprob: -18.751928329467773
    6. '_r' → logprob: -19.251928329467773
    7. '	r' → logprob: -19.501928329467773
    8. '           ' → logprob: -19.626928329467773
    9. 'user' → logprob: -20.001928329467773
    10. ')' → logprob: -20.626928329467773

Token 611: '):
' (ID: 1883)
  Prédit: ' -'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.10428348183631897
    2. ',' → logprob: -2.479283571243286
    3. '-count' → logprob: -4.354283332824707
    4. '-' → logprob: -6.354283332824707
    5. ',count' → logprob: -8.979283332824707
    6. '           ' → logprob: -9.354283332824707
    7. '):' → logprob: -9.604283332824707
    8. ' ,' → logprob: -9.729283332824707
    9. '       ' → logprob: -9.979283332824707
    10. 'count' → logprob: -10.104283332824707

Token 612: '                           ' (ID: 1686)
  Prédit: '                           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                           ' → logprob: -0.2639109194278717
    2. 'to' → logprob: -1.5139108896255493
    3. ' to' → logprob: -4.51391077041626
    4. '                       ' → logprob: -7.88891077041626
    5. '                               ' → logprob: -8.513911247253418
    6. '           ' → logprob: -8.763911247253418
    7. '               ' → logprob: -8.888911247253418
    8. '   ' → logprob: -10.013911247253418
    9. '                   ' → logprob: -10.513911247253418
    10. '```' → logprob: -12.638911247253418

Token 613: ' to' (ID: 316)
  Prédit: 'to'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'to' (adapté à ' to') → logprob: -0.00016182278341148049
    2. ' to' → logprob: -8.750162124633789
    3. '                           ' → logprob: -12.750162124633789
    4. '                               ' → logprob: -15.125162124633789
    5. '                       ' → logprob: -16.50016212463379
    6. '               ' → logprob: -16.75016212463379
    7. '   ' → logprob: -17.50016212463379
    8. '           ' → logprob: -17.75016212463379
    9. '                   ' → logprob: -18.50016212463379
    10. '	to' → logprob: -19.12516212463379

Token 614: '_' (ID: 62)
  Prédit: '_'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.005978450644761324
    2. 'erase' → logprob: -5.130978584289551
    3. '.erase' → logprob: -10.00597858428955
    4. 'er' → logprob: -12.63097858428955
    5. 'add' → logprob: -15.25597858428955
    6. ' erase' → logprob: -15.50597858428955
    7. '_er' → logprob: -15.75597858428955
    8. '                   ' → logprob: -16.005977630615234
    9. 'to' → logprob: -16.380977630615234
    10. '_add' → logprob: -16.630977630615234

Token 615: 'erase' (ID: 91229)
  Prédit: 'erase'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'erase' → logprob: -1.2233183042553719e-05
    2. ' erase' → logprob: -11.875012397766113
    3. 'add' → logprob: -13.625012397766113
    4. '.erase' → logprob: -13.875012397766113
    5. 'er' → logprob: -14.000012397766113
    6. '```' → logprob: -15.125012397766113
    7. 'ere' → logprob: -15.250012397766113
    8. '   ' → logprob: -15.250012397766113
    9. '_' → logprob: -15.250012397766113
    10. 'rase' → logprob: -15.375012397766113

Token 616: '.add' (ID: 1950)
  Prédit: '.add'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.add' → logprob: -0.00016587569552939385
    2. '.' → logprob: -8.750165939331055
    3. 'add' → logprob: -11.875165939331055
    4. '.setdefault' → logprob: -16.125165939331055
    5. ' .' → logprob: -16.500165939331055
    6. '           ' → logprob: -16.625165939331055
    7. '.append' → logprob: -17.500165939331055
    8. '.Add' → logprob: -17.625165939331055
    9. '                           ' → logprob: -18.125165939331055
    10. '                       ' → logprob: -18.500165939331055

Token 617: '((' (ID: 2054)
  Prédit: '(rr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(rr' → logprob: -0.003920599352568388
    2. '(' → logprob: -6.003920555114746
    3. '((' → logprob: -6.628920555114746
    4. ' (' → logprob: -9.253920555114746
    5. '(r' → logprob: -10.878920555114746
    6. '(rs' → logprob: -12.753920555114746
    7. '(rv' → logprob: -14.253920555114746
    8. '   ' → logprob: -14.378920555114746
    9. '(rb' → logprob: -14.753920555114746
    10. '(
' → logprob: -15.003920555114746

Token 618: 'rr' (ID: 1006)
  Prédit: 'rr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rr' → logprob: -0.0006135515286587179
    2. '(rr' → logprob: -7.625613689422607
    3. ' rr' → logprob: -9.00061321258545
    4. '_rr' → logprob: -13.62561321258545
    5. 'r' → logprob: -15.37561321258545
    6. '
' → logprob: -15.75061321258545
    7. '   ' → logprob: -15.75061321258545
    8. 'rrrr' → logprob: -16.125614166259766
    9. '(' → logprob: -16.625614166259766
    10. '       ' → logprob: -16.875614166259766

Token 619: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0012396331876516342
    2. ',c' → logprob: -6.751239776611328
    3. ' ,' → logprob: -9.626239776611328
    4. 'c' → logprob: -12.876239776611328
    5. '),' → logprob: -14.751239776611328
    6. ',
' → logprob: -15.876239776611328
    7. ')' → logprob: -16.126239776611328
    8. '<|end|>' → logprob: -16.626239776611328
    9. '‌,' → logprob: -16.751239776611328
    10. '[' → logprob: -17.626239776611328

Token 620: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.00010986098641296849
    2. ' c' → logprob: -9.125109672546387
    3. ')c' → logprob: -14.875109672546387
    4. '   ' → logprob: -15.125109672546387
    5. ' ' → logprob: -16.250110626220703
    6. ')' → logprob: -16.375110626220703
    7. '  ' → logprob: -17.125110626220703
    8. '    ' → logprob: -17.250110626220703
    9. '```' → logprob: -17.500110626220703
    10. '	c' → logprob: -17.625110626220703

Token 621: '))
' (ID: 2210)
  Prédit: ')
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.10167373716831207
    2. ')' → logprob: -2.3516738414764404
    3. '))
' → logprob: -6.601673603057861
    4. '                       ' → logprob: -9.72667407989502
    5. '))' → logprob: -10.97667407989502
    6. '                   ' → logprob: -11.60167407989502
    7. ')}
' → logprob: -11.60167407989502
    8. ')
' → logprob: -12.60167407989502
    9. ' )
' → logprob: -12.97667407989502
    10. ')}' → logprob: -13.22667407989502

Token 622: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.0066665890626609325
    2. '               ' → logprob: -5.256666660308838
    3. '           ' → logprob: -6.631666660308838
    4. '       ' → logprob: -10.13166618347168
    5. 'count' → logprob: -10.75666618347168
    6. '
' → logprob: -11.00666618347168
    7. '                       ' → logprob: -11.00666618347168
    8. '```' → logprob: -11.13166618347168
    9. '                  ' → logprob: -13.63166618347168
    10. '   ' → logprob: -13.63166618347168

Token 623: ' count' (ID: 3605)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' (adapté à ' count') → logprob: -0.02415296621620655
    2. ' count' → logprob: -3.774152994155884
    3. '                   ' → logprob: -7.149152755737305
    4. '               ' → logprob: -9.149152755737305
    5. '           ' → logprob: -11.774152755737305
    6. '
' → logprob: -12.274152755737305
    7. '       ' → logprob: -13.899152755737305
    8. '   ' → logprob: -14.399152755737305
    9. '                       ' → logprob: -14.899152755737305
    10. '```' → logprob: -15.024152755737305

Token 624: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.2519291639328003
    2. ' =' → logprob: -1.5019291639328003
    3. ' ' → logprob: -16.501928329467773
    4. '＝' → logprob: -19.251928329467773
    5. '```' → logprob: -20.001928329467773
    6. '=
' → logprob: -20.126928329467773
    7. ')' → logprob: -20.251928329467773
    8. '   ' → logprob: -21.001928329467773
    9. '	' → logprob: -21.126928329467773
    10. ' =
' → logprob: -21.251928329467773

Token 625: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0015024791937321424
    2. ' ' → logprob: -6.501502513885498
    3. '   ' → logprob: -16.251502990722656
    4. '```' → logprob: -19.001502990722656
    5. '           ' → logprob: -19.126502990722656
    6. '0' → logprob: -19.501502990722656
    7. '       ' → logprob: -19.501502990722656
    8. '  ' → logprob: -20.064002990722656
    9. '                   ' → logprob: -20.939002990722656
    10. '    ' → logprob: -21.001502990722656

Token 626: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -7.896309739408025e-07
    2. ' ' → logprob: -14.125000953674316
    3. '<|end|>' → logprob: -18.5
    4. '```' → logprob: -18.875
    5. '   ' → logprob: -20.3125
    6. '0' → logprob: -20.4375
    7. '۱' → logprob: -21.125
    8. '`' → logprob: -21.625
    9. '１' → logprob: -21.75
    10. '१' → logprob: -21.875

Token 627: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0015324745327234268
    2. '       ' → logprob: -6.501532554626465
    3. '
' → logprob: -10.501532554626465
    4. '               ' → logprob: -13.251532554626465
    5. '```' → logprob: -15.126532554626465
    6. '                   ' → logprob: -15.501532554626465
    7. '   ' → logprob: -15.751532554626465
    8. '          ' → logprob: -16.50153160095215
    9. '		' → logprob: -17.00153160095215
    10. 'if' → logprob: -17.62653160095215

Token 628: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0011722482740879059
    2. '       ' → logprob: -6.751172065734863
    3. '               ' → logprob: -14.251172065734863
    4. '```' → logprob: -14.251172065734863
    5. 'if' → logprob: -14.376172065734863
    6. '
' → logprob: -16.50117301940918
    7. '   ' → logprob: -16.62617301940918
    8. '          ' → logprob: -17.87617301940918
    9. '                   ' → logprob: -17.87617301940918
    10. '		' → logprob: -18.25117301940918

Token 629: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.11375271528959274
    2. '           ' → logprob: -2.863752603530884
    3. '       ' → logprob: -3.113752603530884
    4. ' if' → logprob: -5.113752841949463
    5. '   ' → logprob: -11.613752365112305
    6. 'If' → logprob: -12.113752365112305
    7. '               ' → logprob: -12.863752365112305
    8. 'for' → logprob: -14.238752365112305
    9. '        ' → logprob: -14.738752365112305
    10. '```' → logprob: -14.863752365112305

Token 630: ' count' (ID: 3605)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.0788901224732399
    2. ' count' → logprob: -2.578890085220337
    3. ' ' → logprob: -15.953889846801758
    4. '	count' → logprob: -16.578889846801758
    5. '(count' → logprob: -16.578889846801758
    6. '   ' → logprob: -17.203889846801758
    7. '  ' → logprob: -18.328889846801758
    8. '[count' → logprob: -18.328889846801758
    9. '$count' → logprob: -18.953889846801758
    10. '_count' → logprob: -19.078889846801758

Token 631: ' >=' (ID: 5064)
  Prédit: ' >='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >=' → logprob: -0.016034720465540886
    2. '>=' → logprob: -4.1410346031188965
    3. ' ' → logprob: -15.766035079956055
    4. ')>=' → logprob: -15.766035079956055
    5. ']>=' → logprob: -16.641035079956055
    6. '   ' → logprob: -16.641035079956055
    7. '<|end|>' → logprob: -18.141035079956055
    8. '    ' → logprob: -18.516035079956055
    9. '```' → logprob: -18.641035079956055
    10. ' ≥' → logprob: -18.641035079956055

Token 632: ' ' (ID: 220)
  Prédit: '3'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.02630564197897911
    2. ' ' → logprob: -3.651305675506592
    3. '   ' → logprob: -12.526305198669434
    4. '```' → logprob: -13.651305198669434
    5. '       ' → logprob: -15.963805198669434
    6. '           ' → logprob: -16.08880615234375
    7. '  ' → logprob: -16.40130615234375
    8. ' three' → logprob: -17.58880615234375
    9. '
' → logprob: -17.90130615234375
    10. '               ' → logprob: -18.15130615234375

Token 633: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -3.054500666621607e-06
    2. ' ' → logprob: -12.75000286102295
    3. '```' → logprob: -16.500003814697266
    4. '   ' → logprob: -18.000003814697266
    5. '۳' → logprob: -20.000003814697266
    6. '
' → logprob: -20.125003814697266
    7. '３' → logprob: -20.250003814697266
    8. '       ' → logprob: -20.750003814697266
    9. '৩' → logprob: -20.937503814697266
    10. 'three' → logprob: -21.250003814697266

Token 634: ':
' (ID: 734)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.7184364795684814
    2. ':
' → logprob: -1.2184364795684814
    3. ':' → logprob: -1.5934364795684814
    4. '           ' → logprob: -4.468436241149902
    5. ' for' → logprob: -6.468436241149902
    6. ',' → logprob: -8.218436241149902
    7. 'for' → logprob: -9.718436241149902
    8. '              ' → logprob: -10.218436241149902
    9. '                   ' → logprob: -10.593436241149902
    10. '       ' → logprob: -10.593436241149902

Token 635: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0483500100672245
    2. 'for' → logprob: -3.7983500957489014
    3. ' for' → logprob: -4.048349857330322
    4. '           ' → logprob: -4.923349857330322
    5. '```' → logprob: -9.79835033416748
    6. '       ' → logprob: -12.67335033416748
    7. '                   ' → logprob: -12.79835033416748
    8. '                       ' → logprob: -13.54835033416748
    9. '              ' → logprob: -14.17335033416748
    10. '   ' → logprob: -14.29835033416748

Token 636: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.13058876991271973
    2. ' for' → logprob: -2.1305887699127197
    3. '               ' → logprob: -5.755588531494141
    4. '           ' → logprob: -7.630588531494141
    5. '                   ' → logprob: -13.25558853149414
    6. '	for' → logprob: -13.75558853149414
    7. '```' → logprob: -15.38058853149414
    8. ' ' → logprob: -15.75558853149414
    9. '   ' → logprob: -15.75558853149414
    10. '       ' → logprob: -16.50558853149414

Token 637: ' rr' (ID: 54129)
  Prédit: 'rr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rr' → logprob: -0.00026407750556245446
    2. ' rr' → logprob: -8.250264167785645
    3. 'r' → logprob: -13.000264167785645
    4. '_rr' → logprob: -14.875264167785645
    5. '(rr' → logprob: -16.000263214111328
    6. 'rrrr' → logprob: -17.375263214111328
    7. 'row' → logprob: -20.000263214111328
    8. 'rc' → logprob: -20.125263214111328
    9. '```' → logprob: -20.375263214111328
    10. 'RR' → logprob: -21.000263214111328

Token 638: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.006720229052007198
    2. 'in' → logprob: -5.006720066070557
    3. 'n' → logprob: -13.381720542907715
    4. 'range' → logprob: -13.506720542907715
    5. 'In' → logprob: -14.881720542907715
    6. ' ' → logprob: -14.881720542907715
    7. '```' → logprob: -15.381720542907715
    8. 'd' → logprob: -15.756720542907715
    9. '<|end|>' → logprob: -16.2567195892334
    10. 's' → logprob: -16.3817195892334

Token 639: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.004078639671206474
    2. ' range' → logprob: -5.5040788650512695
    3. '(range' → logprob: -15.12907886505127
    4. ' in' → logprob: -17.879077911376953
    5. 'in' → logprob: -18.004077911376953
    6. ' ' → logprob: -18.254077911376953
    7. '   ' → logprob: -19.504077911376953
    8. '	range' → logprob: -20.379077911376953
    9. '```' → logprob: -20.754077911376953
    10. '  ' → logprob: -21.129077911376953

Token 640: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -9.849109119386412e-06
    2. '(' → logprob: -12.125009536743164
    3. 'self' → logprob: -12.375009536743164
    4. '(
' → logprob: -16.875009536743164
    5. '[self' → logprob: -17.750009536743164
    6. '   ' → logprob: -18.000009536743164
    7. '=self' → logprob: -18.375009536743164
    8. ' (' → logprob: -18.500009536743164
    9. '((' → logprob: -18.875009536743164
    10. ' self' → logprob: -18.875009536743164

Token 641: '.' (ID: 13)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.21966399252414703
    2. '(self' → logprob: -2.5946640968322754
    3. '(' → logprob: -2.9696640968322754
    4. 'range' → logprob: -3.4696640968322754
    5. ' self' → logprob: -3.8446640968322754
    6. 'HEIGHT' → logprob: -4.219664096832275
    7. ' range' → logprob: -7.344664096832275
    8. '       ' → logprob: -7.469664096832275
    9. '   ' → logprob: -7.594664096832275
    10. '           ' → logprob: -7.969664096832275

Token 642: 'HEIGHT' (ID: 105934)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.02251213602721691
    2. 'HEIGHT' → logprob: -3.897512197494507
    3. '(self' → logprob: -6.397511959075928
    4. ' self' → logprob: -8.522512435913086
    5. '(' → logprob: -9.522512435913086
    6. 'range' → logprob: -11.397512435913086
    7. '```' → logprob: -12.897512435913086
    8. '`' → logprob: -12.897512435913086
    9. '   ' → logprob: -13.022512435913086
    10. '       ' → logprob: -13.522512435913086

Token 643: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.026310862973332405
    2. '-' → logprob: -3.651310920715332
    3. ' ' → logprob: -11.526310920715332
    4. '   ' → logprob: -15.151310920715332
    5. '  ' → logprob: -16.651309967041016
    6. ' ' → logprob: -17.026309967041016
    7. '        ' → logprob: -17.151309967041016
    8. '    ' → logprob: -17.276309967041016
    9. '-r' → logprob: -17.651309967041016
    10. '           ' → logprob: -17.776309967041016

Token 644: ' count' (ID: 3605)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.00407923199236393
    2. ' count' → logprob: -5.504079341888428
    3. 'rr' → logprob: -14.37907886505127
    4. '   ' → logprob: -16.754079818725586
    5. ' rr' → logprob: -17.254079818725586
    6. '(count' → logprob: -17.254079818725586
    7. 'cc' → logprob: -17.629079818725586
    8. '       ' → logprob: -17.879079818725586
    9. ' ' → logprob: -18.004079818725586
    10. '           ' → logprob: -18.129079818725586

Token 645: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0004911953583359718
    2. ' ,' → logprob: -7.625491142272949
    3. 'to' → logprob: -14.00049114227295
    4. ',
' → logprob: -14.12549114227295
    5. '       ' → logprob: -15.37549114227295
    6. ',r' → logprob: -15.37549114227295
    7. ' to' → logprob: -15.50049114227295
    8. '_,' → logprob: -15.62549114227295
    9. '           ' → logprob: -15.87549114227295
    10. '   ' → logprob: -15.87549114227295

Token 646: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.06997711211442947
    2. ' self' → logprob: -2.694977045059204
    3. '               ' → logprob: -10.694976806640625
    4. '           ' → logprob: -12.069976806640625
    5. '   ' → logprob: -12.819976806640625
    6. '                   ' → logprob: -12.944976806640625
    7. '       ' → logprob: -12.944976806640625
    8. ' ' → logprob: -13.444976806640625
    9. '(self' → logprob: -14.319976806640625
    10. '5' → logprob: -14.694976806640625

Token 647: '.' (ID: 13)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.4323121905326843
    2. 'self' → logprob: -1.182312250137329
    3. ' self' → logprob: -3.432312250137329
    4. '(self' → logprob: -5.68231201171875
    5. '):
' → logprob: -5.80731201171875
    6. '[self' → logprob: -6.93231201171875
    7. '               ' → logprob: -7.30731201171875
    8. '   ' → logprob: -7.30731201171875
    9. 'rr' → logprob: -7.55731201171875
    10. '       ' → logprob: -7.55731201171875

Token 648: 'HEIGHT' (ID: 105934)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0006652565789408982
    2. 'HEIGHT' → logprob: -7.625665187835693
    3. '5' → logprob: -9.250665664672852
    4. ' self' → logprob: -9.500665664672852
    5. '(self' → logprob: -13.000665664672852
    6. '```' → logprob: -13.875665664672852
    7. '   ' → logprob: -14.250665664672852
    8. 'rr' → logprob: -14.250665664672852
    9. '
' → logprob: -15.250665664672852
    10. 'height' → logprob: -15.250665664672852

Token 649: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.014042803086340427
    2. ',' → logprob: -4.389042854309082
    3. '):' → logprob: -6.639042854309082
    4. '               ' → logprob: -9.639042854309082
    5. '                   ' → logprob: -10.014042854309082
    6. ' ,' → logprob: -10.389042854309082
    7. ' ):
' → logprob: -10.514042854309082
    8. ':
' → logprob: -11.014042854309082
    9. '           ' → logprob: -11.014042854309082
    10. ')' → logprob: -12.389042854309082

Token 650: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.23657608032226562
    2. 'to' → logprob: -1.8615760803222656
    3. '                       ' → logprob: -3.3615760803222656
    4. ' to' → logprob: -3.9865760803222656
    5. '                           ' → logprob: -6.736576080322266
    6. '               ' → logprob: -7.736576080322266
    7. '           ' → logprob: -8.611576080322266
    8. '   ' → logprob: -9.486576080322266
    9. '[to' → logprob: -10.236576080322266
    10. '                               ' → logprob: -10.861576080322266

Token 651: ' to' (ID: 316)
  Prédit: 'to'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'to' (adapté à ' to') → logprob: -0.005313565954566002
    2. ' to' → logprob: -5.255313396453857
    3. '                   ' → logprob: -10.380313873291016
    4. '               ' → logprob: -10.380313873291016
    5. '                       ' → logprob: -11.130313873291016
    6. '           ' → logprob: -13.255313873291016
    7. '                           ' → logprob: -14.505313873291016
    8. '   ' → logprob: -15.005313873291016
    9. '	to' → logprob: -15.505313873291016
    10. '[to' → logprob: -16.755313873291016

Token 652: '_' (ID: 62)
  Prédit: '_'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.07890620082616806
    2. 'erase' → logprob: -2.578906297683716
    3. '.erase' → logprob: -12.203906059265137
    4. 'rase' → logprob: -12.828906059265137
    5. 'add' → logprob: -13.203906059265137
    6. ' erase' → logprob: -13.328906059265137
    7. 'er' → logprob: -13.828906059265137
    8. 'eras' → logprob: -14.703906059265137
    9. 'rr' → logprob: -14.703906059265137
    10. 'Erase' → logprob: -15.078906059265137

Token 653: 'erase' (ID: 91229)
  Prédit: 'erase'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'erase' → logprob: -8.673547563375905e-05
    2. 'set' → logprob: -10.375086784362793
    3. '_' → logprob: -10.500086784362793
    4. 'range' → logprob: -11.375086784362793
    5. ' erase' → logprob: -11.875086784362793
    6. 'Erase' → logprob: -12.500086784362793
    7. 'erset' → logprob: -13.750086784362793
    8. 'add' → logprob: -14.125086784362793
    9. 'er' → logprob: -14.125086784362793
    10. '.erase' → logprob: -14.750086784362793

Token 654: '.add' (ID: 1950)
  Prédit: '.add'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.add' → logprob: -0.03881708160042763
    2. '.' → logprob: -3.2888171672821045
    3. 'add' → logprob: -7.413816928863525
    4. '                   ' → logprob: -9.038817405700684
    5. '           ' → logprob: -10.663817405700684
    6. '               ' → logprob: -11.038817405700684
    7. '                       ' → logprob: -12.163817405700684
    8. ' .' → logprob: -12.288817405700684
    9. '       ' → logprob: -13.288817405700684
    10. '   ' → logprob: -14.163817405700684

Token 655: '((' (ID: 2054)
  Prédit: '(('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '((' → logprob: -0.0009367127786390483
    2. '(rr' → logprob: -7.000936508178711
    3. '(' → logprob: -10.625936508178711
    4. '(range' → logprob: -14.500936508178711
    5. '   ' → logprob: -15.875936508178711
    6. '(
' → logprob: -16.12593650817871
    7. '       ' → logprob: -16.50093650817871
    8. '[(' → logprob: -17.37593650817871
    9. ' ((' → logprob: -17.50093650817871
    10. ' (' → logprob: -17.62593650817871

Token 656: 'rr' (ID: 1006)
  Prédit: 'rr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rr' → logprob: -0.00019090480054728687
    2. ' rr' → logprob: -8.875190734863281
    3. '(rr' → logprob: -10.500190734863281
    4. 'r' → logprob: -10.875190734863281
    5. 'self' → logprob: -13.250190734863281
    6. '_rr' → logprob: -13.750190734863281
    7. '   ' → logprob: -14.375190734863281
    8. 'rrrr' → logprob: -15.250190734863281
    9. 'range' → logprob: -15.500190734863281
    10. '       ' → logprob: -16.00019073486328

Token 657: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00047714399988763034
    2. ',c' → logprob: -7.875477313995361
    3. ' ,' → logprob: -9.250476837158203
    4. 'c' → logprob: -14.375476837158203
    5. ',
' → logprob: -16.875476837158203
    6. '),' → logprob: -17.125476837158203
    7. ',r' → logprob: -17.250476837158203
    8. ',col' → logprob: -17.375476837158203
    9. '[' → logprob: -17.500476837158203
    10. '`,' → logprob: -17.750476837158203

Token 658: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.0015023599844425917
    2. ' c' → logprob: -6.501502513885498
    3. ')c' → logprob: -16.876502990722656
    4. '   ' → logprob: -17.751502990722656
    5. ' ' → logprob: -18.751502990722656
    6. '    ' → logprob: -19.376502990722656
    7. '	c' → logprob: -19.751502990722656
    8. '       ' → logprob: -20.251502990722656
    9. '           ' → logprob: -20.251502990722656
    10. '               ' → logprob: -20.376502990722656

Token 659: '))
' (ID: 2210)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.315242737531662
    2. '))' → logprob: -1.3152427673339844
    3. '))
' → logprob: -6.315242767333984
    4. ')
' → logprob: -9.315242767333984
    5. ' )' → logprob: -9.815242767333984
    6. '       ' → logprob: -11.440242767333984
    7. ' ))' → logprob: -11.690242767333984
    8. '           ' → logprob: -13.690242767333984
    9. '               ' → logprob: -13.690242767333984
    10. ' ))
' → logprob: -13.815242767333984

Token 660: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.004745891317725182
    2. 'return' → logprob: -5.379745960235596
    3. '   ' → logprob: -9.879745483398438
    4. ' return' → logprob: -10.129745483398438
    5. '
' → logprob: -11.129745483398438
    6. '```' → logprob: -11.379745483398438
    7. '	return' → logprob: -12.254745483398438
    8. '<|end|>' → logprob: -13.879745483398438
    9. '           ' → logprob: -14.004745483398438
    10. ')return' → logprob: -15.004745483398438

Token 661: ' return' (ID: 622)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.10241011530160904
    2. 'return' (adapté à ' return') → logprob: -2.352410078048706
    3. ' return' → logprob: -6.352410316467285
    4. '   ' → logprob: -7.977410316467285
    5. '
' → logprob: -9.727410316467285
    6. '```' → logprob: -10.977410316467285
    7. '	return' → logprob: -11.102410316467285
    8. '        
' → logprob: -11.352410316467285
    9. '           ' → logprob: -13.227410316467285
    10. '    
' → logprob: -13.602410316467285

Token 662: ' to' (ID: 316)
  Prédit: 'to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'to' → logprob: -4.842555426876061e-06
    2. ' to' → logprob: -12.250004768371582
    3. '(to' → logprob: -23.2500057220459
    4. '	to' → logprob: -24.5000057220459
    5. '   ' → logprob: -26.1250057220459
    6. 't' → logprob: -27.5000057220459
    7. '.to' → logprob: -28.0000057220459
    8. 'toc' → logprob: -28.5000057220459
    9. 'tos' → logprob: -28.6250057220459
    10. ' ' → logprob: -28.6250057220459

Token 663: '_' (ID: 62)
  Prédit: '_'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.014168089255690575
    2. 'erase' → logprob: -4.2641682624816895
    3. 'rase' → logprob: -13.139167785644531
    4. 'to' → logprob: -13.514167785644531
    5. 'o' → logprob: -15.014167785644531
    6. 'er' → logprob: -15.264167785644531
    7. 'Erase' → logprob: -15.264167785644531
    8. 'r' → logprob: -16.13916778564453
    9. '_er' → logprob: -16.26416778564453
    10. ' erase' → logprob: -16.76416778564453

Token 664: 'erase' (ID: 91229)
  Prédit: 'erase'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'erase' → logprob: -1.9361264946837764e-07
    2. 'rase' → logprob: -17.0
    3. ' erase' → logprob: -17.125
    4. '.erase' → logprob: -17.375
    5. 'erse' → logprob: -17.625
    6. 'er' → logprob: -18.25
    7. '{' → logprob: -19.875
    8. 'esize' → logprob: -19.875
    9. 'Erase' → logprob: -19.875
    10. 'ere' → logprob: -20.375

Token 665: '

' (ID: 279)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2421029508113861
    2. 'def' → logprob: -1.6171029806137085
    3. '<|end|>' → logprob: -4.242103099822998
    4. '
' → logprob: -6.992103099822998
    5. '    
' → logprob: -7.242103099822998
    6. ' def' → logprob: -8.49210262298584
    7. '```' → logprob: -9.11710262298584
    8. '<|end|>' → logprob: -9.49210262298584
    9. ')' → logprob: -9.99210262298584
    10. '  
' → logprob: -10.49210262298584

Token 666: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.14479248225688934
    2. 'def' → logprob: -2.0197925567626953
    3. '```' → logprob: -6.644792556762695
    4. ' def' → logprob: -7.644792556762695
    5. '
' → logprob: -8.144792556762695
    6. '    
' → logprob: -10.269792556762695
    7. '	def' → logprob: -13.519792556762695
    8. '

' → logprob: -13.644792556762695
    9. '<|end|>' → logprob: -13.644792556762695
    10. ' 
' → logprob: -13.894792556762695

Token 667: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.0015489027136936784
    2. '   ' → logprob: -6.501548767089844
    3. ' def' → logprob: -10.001548767089844
    4. '
' → logprob: -13.626548767089844
    5. '	def' → logprob: -17.376548767089844
    6. '```' → logprob: -18.126548767089844
    7. '    
' → logprob: -18.501548767089844
    8. ')' → logprob: -19.126548767089844
    9. '

' → logprob: -20.001548767089844
    10. '  ' → logprob: -20.126548767089844

Token 668: ' erase' (ID: 71888)
  Prédit: 'erase'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'erase' → logprob: -0.3272814452648163
    2. 'def' → logprob: -1.3272814750671387
    3. ' erase' → logprob: -4.577281475067139
    4. 'apply' → logprob: -6.952281475067139
    5. ' def' → logprob: -7.077281475067139
    6. 'remove' → logprob: -7.202281475067139
    7. 'er' → logprob: -7.452281475067139
    8. 'clear' → logprob: -8.32728099822998
    9. ' er' → logprob: -10.07728099822998
    10. '.erase' → logprob: -10.45228099822998

Token 669: '_blocks' (ID: 60244)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.10338632762432098
    2. '_blocks' → logprob: -2.603386402130127
    3. '(' → logprob: -3.853386402130127
    4. '_' → logprob: -6.478386402130127
    5. '_positions' → logprob: -6.853386402130127
    6. '_(' → logprob: -8.978385925292969
    7. 'self' → logprob: -9.228385925292969
    8. ' (' → logprob: -10.103385925292969
    9. 's' → logprob: -10.353385925292969
    10. 'blocks' → logprob: -10.728385925292969

Token 670: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -5.319370302458992e-06
    2. '(' → logprob: -12.250005722045898
    3. ' (' → logprob: -15.250005722045898
    4. 'self' → logprob: -15.625005722045898
    5. '   ' → logprob: -17.5000057220459
    6. '(
' → logprob: -17.8750057220459
    7. '(s' → logprob: -18.8750057220459
    8. '       ' → logprob: -19.7500057220459
    9. ' ' → logprob: -19.8750057220459
    10. ' self' → logprob: -20.2500057220459

Token 671: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.003387430217117071
    2. 'self' → logprob: -5.753387451171875
    3. ' ,' → logprob: -9.003387451171875
    4. '   ' → logprob: -10.253387451171875
    5. '       ' → logprob: -10.878387451171875
    6. '(self' → logprob: -11.628387451171875
    7. ',self' → logprob: -11.878387451171875
    8. 'positions' → logprob: -12.128387451171875
    9. 's' → logprob: -12.503387451171875
    10. ' self' → logprob: -12.628387451171875

Token 672: ' positions' (ID: 15897)
  Prédit: 'positions'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'positions' → logprob: -0.2520080506801605
    2. ' positions' → logprob: -1.502008080482483
    3. 'to' → logprob: -9.877008438110352
    4. '   ' → logprob: -11.752008438110352
    5. ' to' → logprob: -12.127008438110352
    6. 'blocks' → logprob: -12.127008438110352
    7. ' blocks' → logprob: -13.127008438110352
    8. 'self' → logprob: -13.127008438110352
    9. ' ' → logprob: -13.627008438110352
    10. ')' → logprob: -13.877008438110352

Token 673: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0006612073048017919
    2. '):' → logprob: -7.375661373138428
    3. '):
' → logprob: -10.50066089630127
    4. ' :' → logprob: -13.00066089630127
    5. ':Set' → logprob: -13.62566089630127
    6. 'self' → logprob: -14.25066089630127
    7. '}:' → logprob: -14.37566089630127
    8. '   ' → logprob: -14.37566089630127
    9. '```' → logprob: -14.50066089630127
    10. ' ):' → logprob: -15.37566089630127

Token 674: ' Set' (ID: 3957)
  Prédit: 'Set'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Set' → logprob: -7.696077227592468e-05
    2. ' Set' → logprob: -9.500077247619629
    3. 'set' → logprob: -13.250077247619629
    4. '   ' → logprob: -16.375076293945312
    5. ')' → logprob: -17.500076293945312
    6. '_set' → logprob: -17.625076293945312
    7. '	Set' → logprob: -17.875076293945312
    8. 'self' → logprob: -18.000076293945312
    9. '_Set' → logprob: -18.125076293945312
    10. '       ' → logprob: -18.375076293945312

Token 675: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0006301135290414095
    2. '[(' → logprob: -7.375629901885986
    3. '   ' → logprob: -14.250630378723145
    4. '):
' → logprob: -14.375630378723145
    5. '       ' → logprob: -14.500630378723145
    6. '{' → logprob: -14.625630378723145
    7. ')' → logprob: -14.750630378723145
    8. '):' → logprob: -14.750630378723145
    9. '[
' → logprob: -15.625630378723145
    10. '```' → logprob: -15.750630378723145

Token 676: 'Tuple' (ID: 40048)
  Prédit: 'Tuple'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Tuple' → logprob: -8.494741632603109e-05
    2. '[' → logprob: -9.50008487701416
    3. ' Tuple' → logprob: -12.12508487701416
    4. '           ' → logprob: -13.75008487701416
    5. '       ' → logprob: -14.00008487701416
    6. '<Tuple' → logprob: -14.25008487701416
    7. '[int' → logprob: -14.37508487701416
    8. '   ' → logprob: -14.50008487701416
    9. 'Tu' → logprob: -15.12508487701416
    10. 'int' → logprob: -15.50008487701416

Token 677: '[int' (ID: 40124)
  Prédit: '[int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[int' → logprob: -7.896309739408025e-07
    2. 'int' → logprob: -14.250000953674316
    3. '   ' → logprob: -16.5
    4. '(int' → logprob: -17.5
    5. '<int' → logprob: -18.5
    6. '
' → logprob: -18.625
    7. ',int' → logprob: -18.625
    8. '           ' → logprob: -19.375
    9. '```' → logprob: -19.5
    10. '[
' → logprob: -19.625

Token 678: ',int' (ID: 20909)
  Prédit: ',int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',int' → logprob: -0.0019513490842655301
    2. ',' → logprob: -6.251951217651367
    3. 'int' → logprob: -10.751951217651367
    4. ' ,' → logprob: -14.376951217651367
    5. '[int' → logprob: -14.751951217651367
    6. '(int' → logprob: -15.876951217651367
    7. ']int' → logprob: -16.126951217651367
    8. ' int' → logprob: -16.626951217651367
    9. ':int' → logprob: -17.126951217651367
    10. ',
' → logprob: -17.251951217651367

Token 679: ']]' (ID: 8928)
  Prédit: ']]'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']]' → logprob: -0.0004001641063950956
    2. ']])' → logprob: -8.75040054321289
    3. ')]' → logprob: -9.25040054321289
    4. ']):
' → logprob: -9.50040054321289
    5. ']]:
' → logprob: -9.87540054321289
    6. ']' → logprob: -11.50040054321289
    7. ']])
' → logprob: -13.37540054321289
    8. ']],' → logprob: -13.75040054321289
    9. '```' → logprob: -13.75040054321289
    10. ']):' → logprob: -13.75040054321289

Token 680: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.014638214372098446
    2. '):
' → logprob: -4.264638423919678
    3. ')' → logprob: -7.764638423919678
    4. '   ' → logprob: -10.51463794708252
    5. '       ' → logprob: -11.63963794708252
    6. '):
' → logprob: -11.88963794708252
    7. ' ):' → logprob: -12.26463794708252
    8. ':' → logprob: -13.13963794708252
    9. ' ' → logprob: -15.51463794708252
    10. ')->' → logprob: -15.76463794708252

Token 681: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.005448258947581053
    2. 'for' → logprob: -5.505448341369629
    3. ' for' → logprob: -6.630448341369629
    4. '   ' → logprob: -10.005448341369629
    5. '```' → logprob: -12.505448341369629
    6. '
' → logprob: -15.755448341369629
    7. '	for' → logprob: -15.755448341369629
    8. ',' → logprob: -17.505447387695312
    9. '           ' → logprob: -17.755447387695312
    10. '``' → logprob: -17.880447387695312

Token 682: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.04112459346652031
    2. '       ' → logprob: -3.7911245822906494
    3. ' for' → logprob: -4.0411248207092285
    4. 'if' → logprob: -8.91612434387207
    5. ' if' → logprob: -12.79112434387207
    6. '   ' → logprob: -12.79112434387207
    7. '	for' → logprob: -13.29112434387207
    8. 'score' → logprob: -14.66612434387207
    9. '```' → logprob: -15.16612434387207
    10. ' ' → logprob: -15.79112434387207

Token 683: ' Add' (ID: 4063)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0050277444534003735
    2. 'if' → logprob: -5.505027770996094
    3. '       ' → logprob: -7.380027770996094
    4. ' for' → logprob: -8.130027770996094
    5. 'score' → logprob: -11.130027770996094
    6. '   ' → logprob: -11.755027770996094
    7. 'positions' → logprob: -12.005027770996094
    8. ' if' → logprob: -13.630027770996094
    9. '	for' → logprob: -15.255027770996094
    10. 'points' → logprob: -15.380027770996094

Token 684: ' score' (ID: 8429)
  Prédit: 'score'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'score' → logprob: -0.010278459638357162
    2. 'for' → logprob: -5.010278224945068
    3. '       ' → logprob: -6.135278224945068
    4. ' score' → logprob: -7.760278224945068
    5. 'if' → logprob: -8.010278701782227
    6. ' for' → logprob: -8.135278701782227
    7. '_score' → logprob: -8.510278701782227
    8. ' if' → logprob: -9.885278701782227
    9. 'points' → logprob: -10.385278701782227
    10. '	score' → logprob: -11.260278701782227

Token 685: ' and' (ID: 326)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.020908299833536148
    2. 'score' → logprob: -4.145908355712891
    3. 'for' → logprob: -5.645908355712891
    4. ' for' → logprob: -7.645908355712891
    5. 'increment' → logprob: -8.14590835571289
    6. 'total' → logprob: -8.39590835571289
    7. 'points' → logprob: -8.77090835571289
    8. ' score' → logprob: -10.39590835571289
    9. 'add' → logprob: -10.39590835571289
    10. 'sum' → logprob: -10.64590835571289

Token 686: ' erase' (ID: 71888)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.09976312518119812
    2. 'if' → logprob: -2.4747631549835205
    3. 'num' → logprob: -5.474762916564941
    4. 'self' → logprob: -5.974762916564941
    5. '       ' → logprob: -6.599762916564941
    6. 'count' → logprob: -6.599762916564941
    7. 'erase' → logprob: -7.724762916564941
    8. 'er' → logprob: -8.349762916564941
    9. 'def' → logprob: -8.599762916564941
    10. 'bonus' → logprob: -9.599762916564941

Token 687: ' blocks' (ID: 18125)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.09884368628263474
    2. 'for' → logprob: -2.598843574523926
    3. ' for' → logprob: -3.973843574523926
    4. 'score' → logprob: -7.723843574523926
    5. 'points' → logprob: -8.098843574523926
    6. 'total' → logprob: -8.973843574523926
    7. ' points' → logprob: -10.848843574523926
    8. '   ' → logprob: -11.348843574523926
    9. 'count' → logprob: -11.598843574523926
    10. 'positions' → logprob: -12.098843574523926

Token 688: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.003784285159781575
    2. 'for' → logprob: -5.7537841796875
    3. ' for' → logprob: -8.0037841796875
    4. 'score' → logprob: -8.6287841796875
    5. 'points' → logprob: -10.3787841796875
    6. 'total' → logprob: -11.2537841796875
    7. 'positions' → logprob: -11.3787841796875
    8. '```' → logprob: -11.5037841796875
    9. 'count' → logprob: -11.6287841796875
    10. '   ' → logprob: -11.6287841796875

Token 689: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.009538732469081879
    2. 'for' → logprob: -4.759538650512695
    3. ' for' → logprob: -7.509538650512695
    4. '```' → logprob: -8.384538650512695
    5. 'positions' → logprob: -9.509538650512695
    6. 'score' → logprob: -10.009538650512695
    7. '   ' → logprob: -11.634538650512695
    8. 'points' → logprob: -12.134538650512695
    9. 'total' → logprob: -12.509538650512695
    10. 'count' → logprob: -13.009538650512695

Token 690: ' gained' (ID: 27841)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.7125702500343323
    2. 'score' → logprob: -0.7125702500343323
    3. 'if' → logprob: -4.7125701904296875
    4. '       ' → logprob: -5.0875701904296875
    5. 'total' → logprob: -6.3375701904296875
    6. 'points' → logprob: -6.9625701904296875
    7. ' for' → logprob: -7.3375701904296875
    8. 'sum' → logprob: -8.212570190429688
    9. 'added' → logprob: -9.212570190429688
    10. ' score' → logprob: -9.962570190429688

Token 691: ' =' (ID: 314)
  Prédit: '_score'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_score' → logprob: -0.028281360864639282
    2. ' =' → logprob: -3.7782814502716064
    3. '_points' → logprob: -5.528281211853027
    4. '=' → logprob: -6.903281211853027
    5. 'score' → logprob: -10.278281211853027
    6. '_scores' → logprob: -11.903281211853027
    7. '_SCORE' → logprob: -13.528281211853027
    8. 'Score' → logprob: -14.278281211853027
    9. '   ' → logprob: -14.278281211853027
    10. '_amount' → logprob: -14.778281211853027

Token 692: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.013471601530909538
    2. 'sum' → logprob: -4.388471603393555
    3. ' sum' → logprob: -7.763471603393555
    4. ' ' → logprob: -7.763471603393555
    5. 'self' → logprob: -9.388471603393555
    6. 'len' → logprob: -11.013471603393555
    7. '       ' → logprob: -12.388471603393555
    8. '   ' → logprob: -12.638471603393555
    9. ' self' → logprob: -13.638471603393555
    10. 'int' → logprob: -13.888471603393555

Token 693: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.054945703595876694
    2. 'sum' → logprob: -2.929945707321167
    3. 'self' → logprob: -9.929945945739746
    4. 'len' → logprob: -12.179945945739746
    5. ' sum' → logprob: -12.304945945739746
    6. 'int' → logprob: -13.179945945739746
    7. ' ' → logprob: -13.429945945739746
    8. '   ' → logprob: -14.804945945739746
    9. '(sum' → logprob: -15.054945945739746
    10. '
' → logprob: -15.304945945739746

Token 694: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1940278708934784
    2. ' for' → logprob: -1.9440279006958008
    3. 'for' → logprob: -3.444027900695801
    4. '
' → logprob: -6.944027900695801
    5. '<|end|>' → logprob: -9.3190279006958
    6. '```' → logprob: -9.6940279006958
    7. 'points' → logprob: -10.3190279006958
    8. 'tokens' → logprob: -10.4440279006958
    9. '   ' → logprob: -10.6940279006958
    10. '	for' → logprob: -11.1940279006958

Token 695: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.20983058214187622
    2. ' for' → logprob: -2.3348305225372314
    3. '
' → logprob: -2.7098305225372314
    4. 'for' → logprob: -3.7098305225372314
    5. '        
' → logprob: -7.2098307609558105
    6. '```' → logprob: -8.584830284118652
    7. '   ' → logprob: -8.834830284118652
    8. '  
' → logprob: -8.834830284118652
    9. ' 
' → logprob: -10.084830284118652
    10. '	for' → logprob: -10.209830284118652

Token 696: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.00035751116229221225
    2. ' for' → logprob: -8.250357627868652
    3. '       ' → logprob: -9.250357627868652
    4. 'if' → logprob: -15.625357627868652
    5. 'positions' → logprob: -17.000356674194336
    6. '	for' → logprob: -18.000356674194336
    7. '   ' → logprob: -19.375356674194336
    8. 'multip' → logprob: -19.375356674194336
    9. 'mult' → logprob: -19.625356674194336
    10. 'bonus' → logprob: -19.875356674194336

Token 697: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.16023093461990356
    2. '(r' → logprob: -1.9102308750152588
    3. ' r' → logprob: -12.78523063659668
    4. ' (' → logprob: -12.91023063659668
    5. 'pos' → logprob: -14.41023063659668
    6. '_r' → logprob: -15.03523063659668
    7. '(pos' → logprob: -16.41023063659668
    8. '[r' → logprob: -16.41023063659668
    9. '```' → logprob: -16.41023063659668
    10. '   ' → logprob: -16.53523063659668

Token 698: ',c' (ID: 22261)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.038049064576625824
    2. ',c' → logprob: -3.2880489826202393
    3. ' ,' → logprob: -12.53804874420166
    4. ',
' → logprob: -13.16304874420166
    5. 'c' → logprob: -14.03804874420166
    6. ',r' → logprob: -14.53804874420166
    7. ',n' → logprob: -15.53804874420166
    8. ',p' → logprob: -15.91304874420166
    9. ',pos' → logprob: -16.163049697875977
    10. '_,' → logprob: -16.663049697875977

Token 699: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.12693136930465698
    2. 'in' → logprob: -2.1269314289093018
    3. 's' → logprob: -13.751931190490723
    4. ',' → logprob: -14.251931190490723
    5. ' ' → logprob: -15.251931190490723
    6. '<|end|>' → logprob: -15.501931190490723
    7. 'n' → logprob: -15.751931190490723
    8. '
' → logprob: -15.876931190490723
    9. '_in' → logprob: -16.12693214416504
    10. 'import' → logprob: -16.25193214416504

Token 700: ' positions' (ID: 15897)
  Prédit: 'positions'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'positions' → logprob: -0.00033546582562848926
    2. ' positions' → logprob: -8.000335693359375
    3. '_positions' → logprob: -18.375335693359375
    4. '.positions' → logprob: -18.750335693359375
    5. 'position' → logprob: -19.250335693359375
    6. 'Positions' → logprob: -20.500335693359375
    7. 'sorted' → logprob: -21.125335693359375
    8. 'pos' → logprob: -21.875335693359375
    9. '   ' → logprob: -22.750335693359375
    10. ' posiciones' → logprob: -22.750335693359375

Token 701: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.14298920333385468
    2. ':
' → logprob: -2.017989158630371
    3. '):
' → logprob: -9.142989158630371
    4. '           ' → logprob: -10.267989158630371
    5. ' in' → logprob: -10.392989158630371
    6. ',' → logprob: -10.392989158630371
    7. '<|end|>' → logprob: -10.392989158630371
    8. '):' → logprob: -10.892989158630371
    9. '       ' → logprob: -11.017989158630371
    10. ':
' → logprob: -11.142989158630371

Token 702: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.09389717131853104
    2. 'block' → logprob: -2.7188971042633057
    3. ' block' → logprob: -3.8438971042633057
    4. ' if' → logprob: -6.843897342681885
    5. '```' → logprob: -7.718897342681885
    6. 'if' → logprob: -8.218896865844727
    7. 'score' → logprob: -8.218896865844727
    8. 'g' → logprob: -9.968896865844727
    9. '	block' → logprob: -10.218896865844727
    10. 'b' → logprob: -10.593896865844727

Token 703: ' block' (ID: 4355)
  Prédit: 'block'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'block' (adapté à ' block') → logprob: -0.10291195660829544
    2. 'g' → logprob: -2.352911949157715
    3. 'b' → logprob: -6.727911949157715
    4. 'blk' → logprob: -7.477911949157715
    5. 'if' → logprob: -7.727911949157715
    6. 'score' → logprob: -7.977911949157715
    7. 'bid' → logprob: -9.602911949157715
    8. '       ' → logprob: -11.227911949157715
    9. 'self' → logprob: -11.477911949157715
    10. 'val' → logprob: -11.602911949157715

Token 704: '_type' (ID: 3804)
  Prédit: '_id'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_id' → logprob: -0.14542371034622192
    2. '_type' → logprob: -2.395423650741577
    3. ' =' → logprob: -3.895423650741577
    4. '=' → logprob: -4.020423889160156
    5. '_score' → logprob: -5.395423889160156
    6. '_value' → logprob: -7.270423889160156
    7. '_val' → logprob: -7.645423889160156
    8. 'id' → logprob: -9.145423889160156
    9. 'type' → logprob: -9.895423889160156
    10. 'score' → logprob: -10.645423889160156

Token 705: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.2520414888858795
    2. ' =' → logprob: -1.5020414590835571
    3. '_id' → logprob: -9.127041816711426
    4. 'id' → logprob: -13.252041816711426
    5. '   ' → logprob: -14.252041816711426
    6. '=int' → logprob: -14.627041816711426
    7. '```' → logprob: -15.877041816711426
    8. ' ' → logprob: -16.00204086303711
    9. '=
' → logprob: -16.00204086303711
    10. '=self' → logprob: -16.12704086303711

Token 706: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0017033906187862158
    2. ' self' → logprob: -6.376703262329102
    3. '(self' → logprob: -14.376703262329102
    4. '=self' → logprob: -15.376703262329102
    5. '       ' → logprob: -15.626703262329102
    6. '[self' → logprob: -16.0017032623291
    7. '   ' → logprob: -17.8767032623291
    8. '	self' → logprob: -18.2517032623291
    9. ' ' → logprob: -18.5017032623291
    10. '           ' → logprob: -18.6267032623291

Token 707: '.grid' (ID: 19269)
  Prédit: '.grid'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.grid' → logprob: -0.016245387494564056
    2. '.get' → logprob: -4.141245365142822
    3. 'grid' → logprob: -9.64124584197998
    4. '.board' → logprob: -9.76624584197998
    5. '.block' → logprob: -10.01624584197998
    6. 'self' → logprob: -10.64124584197998
    7. 'get' → logprob: -11.51624584197998
    8. '.' → logprob: -12.89124584197998
    9. '   ' → logprob: -12.89124584197998
    10. '       ' → logprob: -13.76624584197998

Token 708: '[r' (ID: 33265)
  Prédit: '[r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[r' → logprob: -2.15310683415737e-05
    2. 'r' → logprob: -10.750021934509277
    3. '[' → logprob: -18.37502098083496
    4. '	r' → logprob: -19.00002098083496
    5. ' r' → logprob: -19.50002098083496
    6. '   ' → logprob: -20.12502098083496
    7. '[row' → logprob: -20.37502098083496
    8. '[
' → logprob: -21.50002098083496
    9. ' [' → logprob: -21.87502098083496
    10. '][' → logprob: -21.87502098083496

Token 709: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -2.5822400857578032e-05
    2. '[c' → logprob: -11.375025749206543
    3. ']' → logprob: -11.625025749206543
    4. ' ][' → logprob: -12.625025749206543
    5. '"][' → logprob: -14.875025749206543
    6. '[r' → logprob: -14.875025749206543
    7. '[' → logprob: -14.875025749206543
    8. ']][' → logprob: -15.500025749206543
    9. ')[' → logprob: -15.875025749206543
    10. ')][' → logprob: -16.00002670288086

Token 710: 'c' (ID: 66)
  Prédit: 'c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -1.1756367712223437e-05
    2. ' c' → logprob: -11.375011444091797
    3. ')c' → logprob: -15.750011444091797
    4. '	c' → logprob: -18.125011444091797
    5. '   ' → logprob: -18.375011444091797
    6. ' ' → logprob: -18.500011444091797
    7. '(c' → logprob: -18.625011444091797
    8. '[c' → logprob: -18.750011444091797
    9. ',c' → logprob: -19.000011444091797
    10. '<|end|>' → logprob: -19.437511444091797

Token 711: ']
' (ID: 1592)
  Prédit: ']
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']
' → logprob: -0.3869044780731201
    2. ']' → logprob: -1.1369044780731201
    3. ']
' → logprob: -10.7619047164917
    4. '           ' → logprob: -11.7619047164917
    5. ']

' → logprob: -13.3869047164917
    6. ' ]
' → logprob: -13.5119047164917
    7. ' ]' → logprob: -14.0119047164917
    8. '       ' → logprob: -14.5119047164917
    9. ']()
' → logprob: -16.761903762817383
    10. '               ' → logprob: -17.136903762817383

Token 712: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.02248334512114525
    2. ' if' → logprob: -4.0224833488464355
    3. 'if' → logprob: -5.7724833488464355
    4. '
' → logprob: -6.8974833488464355
    5. '       ' → logprob: -9.647482872009277
    6. '            
' → logprob: -10.147482872009277
    7. '<|end|>' → logprob: -10.647482872009277
    8. '```' → logprob: -10.772482872009277
    9. '               ' → logprob: -11.147482872009277
    10. 'block' → logprob: -11.647482872009277

Token 713: ' if' (ID: 538)
  Prédit: 'g'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'g' → logprob: -0.35924628376960754
    2. 'if' (adapté à ' if') → logprob: -1.2342462539672852
    3. '           ' → logprob: -4.609246253967285
    4. 'score' → logprob: -7.734246253967285
    5. 'self' → logprob: -8.984246253967285
    6. ' if' → logprob: -9.359246253967285
    7. 'gain' → logprob: -9.609246253967285
    8. ' gained' → logprob: -10.484246253967285
    9. 'block' → logprob: -10.609246253967285
    10. ' g' → logprob: -12.359246253967285

Token 714: ' block' (ID: 4355)
  Prédit: 'block'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'block' → logprob: -0.0007104054093360901
    2. ' block' → logprob: -7.250710487365723
    3. '           ' → logprob: -14.625710487365723
    4. 'bloc' → logprob: -18.125709533691406
    5. '	block' → logprob: -18.625709533691406
    6. ' ' → logprob: -19.500709533691406
    7. ':block' → logprob: -20.250709533691406
    8. '       ' → logprob: -20.375709533691406
    9. '   ' → logprob: -20.500709533691406
    10. '0' → logprob: -20.625709533691406

Token 715: '_type' (ID: 3804)
  Prédit: '_type'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_type' → logprob: -0.4396213889122009
    2. '[r' → logprob: -1.0646214485168457
    3. 'type' → logprob: -4.564621448516846
    4. 'r' → logprob: -8.564620971679688
    5. '[
' → logprob: -9.814620971679688
    6. '[' → logprob: -10.064620971679688
    7. '           ' → logprob: -10.189620971679688
    8. 'Type' → logprob: -10.939620971679688
    9. '_types' → logprob: -11.314620971679688
    10. '   ' → logprob: -11.314620971679688

Token 716: ' !=' (ID: 1666)
  Prédit: '!='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '!=' → logprob: -0.5383725166320801
    2. 'in' → logprob: -1.03837251663208
    3. ' in' → logprob: -2.91337251663208
    4. ' !=' → logprob: -5.28837251663208
    5. '==' → logprob: -6.16337251663208
    6. '>' → logprob: -7.41337251663208
    7. 'not' → logprob: -9.788372039794922
    8. 'is' → logprob: -10.038372039794922
    9. ':' → logprob: -10.413372039794922
    10. ' not' → logprob: -10.913372039794922

Token 717: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -9.615255839889869e-05
    2. ' ' → logprob: -9.250096321105957
    3. 'None' → logprob: -18.62509536743164
    4. '۰' → logprob: -18.87509536743164
    5. ' ' → logprob: -19.75009536743164
    6. '０' → logprob: -20.31259536743164
    7. '```' → logprob: -20.62509536743164
    8. '   ' → logprob: -20.68759536743164
    9. 'self' → logprob: -21.43759536743164
    10. '  ' → logprob: -21.43759536743164

Token 718: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -4.842555426876061e-06
    2. ' ' → logprob: -12.250004768371582
    3. '۰' → logprob: -18.3750057220459
    4. '   ' → logprob: -19.3750057220459
    5. ' ' → logprob: -19.3750057220459
    6. 'None' → logprob: -19.8750057220459
    7. '０' → logprob: -20.0000057220459
    8. '  ' → logprob: -20.3125057220459
    9. 'self' → logprob: -21.0000057220459
    10. '০' → logprob: -21.0000057220459

Token 719: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.033812593668699265
    2. ':' → logprob: -3.4088125228881836
    3. ' and' → logprob: -9.158812522888184
    4. '               ' → logprob: -10.533812522888184
    5. '):
' → logprob: -11.533812522888184
    6. 'and' → logprob: -11.783812522888184
    7. ':

' → logprob: -11.908812522888184
    8. ':
' → logprob: -12.158812522888184
    9. '           ' → logprob: -12.283812522888184
    10. ',' → logprob: -15.283812522888184

Token 720: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.00020926215802319348
    2. '           ' → logprob: -9.000208854675293
    3. 'g' → logprob: -9.625208854675293
    4. '                   ' → logprob: -11.750208854675293
    5. '   ' → logprob: -13.125208854675293
    6. ',' → logprob: -13.125208854675293
    7. '              ' → logprob: -13.375208854675293
    8. '       ' → logprob: -13.625208854675293
    9. '<|end|>' → logprob: -13.625208854675293
    10. '                
' → logprob: -14.000208854675293

Token 721: ' gained' (ID: 27841)
  Prédit: 'g'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'g' → logprob: -0.0017540723783895373
    2. '               ' → logprob: -6.626754283905029
    3. 'self' → logprob: -8.876753807067871
    4. '                   ' → logprob: -9.251753807067871
    5. 'score' → logprob: -9.501753807067871
    6. ' gained' → logprob: -10.001753807067871
    7. '           ' → logprob: -10.126753807067871
    8. 'gain' → logprob: -11.376753807067871
    9. 'block' → logprob: -11.626753807067871
    10. ' g' → logprob: -11.751753807067871

Token 722: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.1602349877357483
    2. '+=' → logprob: -1.9102349281311035
    3. '=' → logprob: -12.410235404968262
    4. '+' → logprob: -12.910235404968262
    5. ' =' → logprob: -13.410235404968262
    6. ']+=' → logprob: -13.410235404968262
    7. ' +' → logprob: -14.410235404968262
    8. '           ' → logprob: -15.660235404968262
    9. '   ' → logprob: -16.035234451293945
    10. '+=(' → logprob: -16.535234451293945

Token 723: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0031853171531111
    2. ' self' → logprob: -5.753185272216797
    3. '(self' → logprob: -12.628185272216797
    4. '           ' → logprob: -12.878185272216797
    5. '[self' → logprob: -14.878185272216797
    6. '               ' → logprob: -15.003185272216797
    7. '=self' → logprob: -15.003185272216797
    8. '	self' → logprob: -15.878185272216797
    9. '       ' → logprob: -16.253185272216797
    10. '1' → logprob: -16.628185272216797

Token 724: '.block' (ID: 27323)
  Prédit: '.block'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.block' → logprob: -1.771655115589965e-05
    2. 'block' → logprob: -11.250018119812012
    3. '.' → logprob: -12.875018119812012
    4. '.b' → logprob: -13.375018119812012
    5. ' .' → logprob: -15.500018119812012
    6. ':block' → logprob: -16.500017166137695
    7. ' block' → logprob: -16.625017166137695
    8. '	block' → logprob: -16.875017166137695
    9. 'self' → logprob: -17.500017166137695
    10. '.board' → logprob: -18.250017166137695

Token 725: '_scores' (ID: 63345)
  Prédit: '_scores'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_scores' → logprob: -1.0280383548888494e-06
    2. 'scores' → logprob: -14.000000953674316
    3. '_type' → logprob: -17.625001907348633
    4. 's' → logprob: -18.125001907348633
    5. '_score' → logprob: -18.875001907348633
    6. '_' → logprob: -18.875001907348633
    7. '_sizes' → logprob: -19.000001907348633
    8. '_types' → logprob: -19.125001907348633
    9. '_
' → logprob: -19.500001907348633
    10. 'type' → logprob: -19.750001907348633

Token 726: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.02324850670993328
    2. '.get' → logprob: -3.7732484340667725
    3. 'get' → logprob: -13.773248672485352
    4. '[self' → logprob: -13.773248672485352
    5. '[get' → logprob: -14.273248672485352
    6. '(block' → logprob: -16.02324867248535
    7. 'block' → logprob: -16.02324867248535
    8. '.' → logprob: -17.77324867248535
    9. '[
' → logprob: -18.52324867248535
    10. '.block' → logprob: -18.77324867248535

Token 727: 'block' (ID: 6230)
  Prédit: 'block'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'block' → logprob: -6.392202976712724e-06
    2. ' block' → logprob: -12.000006675720215
    3. '(block' → logprob: -15.500006675720215
    4. '	block' → logprob: -21.1250057220459
    5. '           ' → logprob: -21.2500057220459
    6. ':block' → logprob: -21.3750057220459
    7. '```' → logprob: -21.6250057220459
    8. '
' → logprob: -22.2500057220459
    9. 'Block' → logprob: -22.3750057220459
    10. ']' → logprob: -22.3750057220459

Token 728: '_type' (ID: 3804)
  Prédit: '_type'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_type' → logprob: -0.0002342912630410865
    2. '[r' → logprob: -8.625234603881836
    3. 'type' → logprob: -10.000234603881836
    4. 'block' → logprob: -12.750234603881836
    5. 'r' → logprob: -12.875234603881836
    6. '[c' → logprob: -14.125234603881836
    7. 'grid' → logprob: -14.500234603881836
    8. '[' → logprob: -14.750234603881836
    9. 'Type' → logprob: -15.375234603881836
    10. 't' → logprob: -15.500234603881836

Token 729: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -2.546478935983032e-05
    2. ' ]' → logprob: -11.250025749206543
    3. ']*' → logprob: -11.375025749206543
    4. ']
' → logprob: -14.250025749206543
    5. '       ' → logprob: -16.250024795532227
    6. '   ' → logprob: -17.250024795532227
    7. ' *' → logprob: -18.000024795532227
    8. ')' → logprob: -18.125024795532227
    9. '           ' → logprob: -18.250024795532227
    10. '']' → logprob: -18.250024795532227

Token 730: ' *' (ID: 425)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.002637130208313465
    2. '
' → logprob: -6.627636909484863
    3. '           ' → logprob: -6.752636909484863
    4. ' self' → logprob: -9.627636909484863
    5. 'self' → logprob: -10.252636909484863
    6. '       ' → logprob: -10.877636909484863
    7. '                   ' → logprob: -11.502636909484863
    8. ',' → logprob: -12.002636909484863
    9. '
' → logprob: -13.127636909484863
    10. ' and' → logprob: -14.127636909484863

Token 731: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0002632430987432599
    2. ' self' → logprob: -8.250263214111328
    3. '           ' → logprob: -14.125263214111328
    4. '(self' → logprob: -14.250263214111328
    5. '               ' → logprob: -14.875263214111328
    6. '
' → logprob: -15.750263214111328
    7. '                   ' → logprob: -17.250263214111328
    8. '*self' → logprob: -18.375263214111328
    9. '	self' → logprob: -18.625263214111328
    10. '=self' → logprob: -18.625263214111328

Token 732: '.b' (ID: 1292)
  Prédit: '.b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.b' → logprob: -0.00012642296496778727
    2. '.' → logprob: -9.750126838684082
    3. 'bonus' → logprob: -9.875126838684082
    4. ' .' → logprob: -11.125126838684082
    5. '   ' → logprob: -14.000126838684082
    6. '           ' → logprob: -14.875126838684082
    7. ' ' → logprob: -15.750126838684082
    8. 'b' → logprob: -16.000125885009766
    9. 'bon' → logprob: -16.500125885009766
    10. ' bonus' → logprob: -16.500125885009766

Token 733: 'onus' (ID: 68752)
  Prédit: 'onus'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'onus' → logprob: -1.8624639324116288e-06
    2. 'on' → logprob: -13.250001907348633
    3. 'bonus' → logprob: -17.250001907348633
    4. 'o' → logprob: -19.625001907348633
    5. 'onu' → logprob: -19.750001907348633
    6. 'онус' → logprob: -19.875001907348633
    7. 'oni' → logprob: -20.125001907348633
    8. '   ' → logprob: -20.375001907348633
    9. 'ons' → logprob: -20.750001907348633
    10. 'onis' → logprob: -21.500001907348633

Token 734: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0005956856766715646
    2. '           ' → logprob: -7.500595569610596
    3. ' self' → logprob: -11.125596046447754
    4. '       ' → logprob: -11.125596046447754
    5. 'self' → logprob: -11.250596046447754
    6. '                   ' → logprob: -15.625596046447754
    7. ',' → logprob: -16.625595092773438
    8. '              ' → logprob: -17.875595092773438
    9. '   ' → logprob: -18.250595092773438
    10. '```' → logprob: -18.375595092773438

Token 735: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0025823204778134823
    2. '           ' → logprob: -6.252582550048828
    3. 'self' → logprob: -7.877582550048828
    4. ' self' → logprob: -8.252582550048828
    5. '       ' → logprob: -11.252582550048828
    6. '                   ' → logprob: -14.377582550048828
    7. '   ' → logprob: -16.377582550048828
    8. '              ' → logprob: -17.252582550048828
    9. '
' → logprob: -17.377582550048828
    10. '```' → logprob: -17.502582550048828

Token 736: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.20839418470859528
    2. '               ' → logprob: -1.708394169807434
    3. ' self' → logprob: -5.3333940505981445
    4. '           ' → logprob: -6.5833940505981445
    5. '       ' → logprob: -7.2083940505981445
    6. '                   ' → logprob: -12.583394050598145
    7. '   ' → logprob: -14.458394050598145
    8. '	self' → logprob: -14.833394050598145
    9. '              ' → logprob: -14.833394050598145
    10. '             ' → logprob: -15.833394050598145

Token 737: '.grid' (ID: 19269)
  Prédit: '.grid'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.grid' → logprob: -0.000275040598353371
    2. '.set' → logprob: -8.250274658203125
    3. '.' → logprob: -11.750274658203125
    4. 'grid' → logprob: -12.125274658203125
    5. ' grid' → logprob: -16.125274658203125
    6. ' .' → logprob: -16.375274658203125
    7. '	grid' → logprob: -17.125274658203125
    8. '.gr' → logprob: -17.625274658203125
    9. '   ' → logprob: -18.625274658203125
    10. '.g' → logprob: -18.625274658203125

Token 738: '[r' (ID: 33265)
  Prédit: '[r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[r' → logprob: -1.9504606825648807e-05
    2. 'r' → logprob: -10.875019073486328
    3. '[' → logprob: -15.125019073486328
    4. ' [' → logprob: -16.375019073486328
    5. '][' → logprob: -16.500019073486328
    6. '[row' → logprob: -17.750019073486328
    7. '	r' → logprob: -18.000019073486328
    8. ')[' → logprob: -18.000019073486328
    9. '```' → logprob: -18.125019073486328
    10. '[s' → logprob: -18.500019073486328

Token 739: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.0003434488025959581
    2. '[c' → logprob: -8.375343322753906
    3. ')[' → logprob: -10.125343322753906
    4. ']' → logprob: -10.375343322753906
    5. '[' → logprob: -10.875343322753906
    6. '[r' → logprob: -12.000343322753906
    7. '       ' → logprob: -12.875343322753906
    8. ')][' → logprob: -12.875343322753906
    9. '"][' → logprob: -12.875343322753906
    10. 'c' → logprob: -13.625343322753906

Token 740: 'c' (ID: 66)
  Prédit: 'c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -5.967624019831419e-05
    2. ' c' → logprob: -10.000060081481934
    3. ')c' → logprob: -12.625060081481934
    4. '[c' → logprob: -12.750060081481934
    5. '][' → logprob: -13.500060081481934
    6. '	c' → logprob: -13.625060081481934
    7. '[' → logprob: -14.000060081481934
    8. '0' → logprob: -14.000060081481934
    9. ']' → logprob: -14.125060081481934
    10. ',c' → logprob: -14.500060081481934

Token 741: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.07241912931203842
    2. ']=' → logprob: -2.8224191665649414
    3. '=' → logprob: -4.572419166564941
    4. ' =' → logprob: -10.322419166564941
    5. ' ]' → logprob: -10.447419166564941
    6. '           ' → logprob: -13.697419166564941
    7. ')' → logprob: -15.072419166564941
    8. '][' → logprob: -15.322419166564941
    9. '']=' → logprob: -15.447419166564941
    10. ')=' → logprob: -16.072418212890625

Token 742: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0019286326132714748
    2. ' =' → logprob: -6.251928806304932
    3. '=
' → logprob: -18.876928329467773
    4. '.=' → logprob: -19.626928329467773
    5. ')=' → logprob: -19.876928329467773
    6. '＝' → logprob: -20.376928329467773
    7. ']=' → logprob: -20.501928329467773
    8. '=

' → logprob: -21.626928329467773
    9. ')' → logprob: -22.376928329467773
    10. '=}' → logprob: -22.501928329467773

Token 743: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -6.704273118884885e-07
    2. ' ' → logprob: -14.250000953674316
    3. '00' → logprob: -24.125
    4. '۰' → logprob: -24.25
    5. '000' → logprob: -24.5
    6. '   ' → logprob: -25.625
    7. '```' → logprob: -26.5
    8. '０' → logprob: -27.125
    9. ' ' → logprob: -27.875
    10. '`' → logprob: -27.875

Token 744: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: 0.0
    2. ' ' → logprob: -20.125
    3. '۰' → logprob: -22.875
    4. '000' → logprob: -23.25
    5. '０' → logprob: -24.625
    6. '```' → logprob: -24.625
    7. '   ' → logprob: -24.875
    8. '00' → logprob: -25.0
    9. '০' → logprob: -25.75
    10. '٠' → logprob: -26.25

Token 745: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.2263001650571823
    2. '       ' → logprob: -1.6013001203536987
    3. '<|end|>' → logprob: -7.976300239562988
    4. 'self' → logprob: -8.351300239562988
    5. '
' → logprob: -8.851300239562988
    6. '        
' → logprob: -9.226300239562988
    7. ' self' → logprob: -10.726300239562988
    8. '```' → logprob: -11.726300239562988
    9. '               ' → logprob: -11.976300239562988
    10. ' if' → logprob: -12.476300239562988

Token 746: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00822340976446867
    2. '
' → logprob: -4.883223533630371
    3. 'self' → logprob: -7.758223533630371
    4. '```' → logprob: -9.008223533630371
    5. '<|end|>' → logprob: -10.633223533630371
    6. '        
' → logprob: -11.008223533630371
    7. ' self' → logprob: -11.258223533630371
    8. '   ' → logprob: -13.133223533630371
    9. '
' → logprob: -13.383223533630371
    10. '           ' → logprob: -13.508223533630371

Token 747: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.06964671611785889
    2. '       ' → logprob: -2.8196468353271484
    3. 'if' → logprob: -5.319646835327148
    4. '
' → logprob: -6.069646835327148
    5. ' self' → logprob: -7.819646835327148
    6. ' if' → logprob: -10.819646835327148
    7. '   ' → logprob: -11.194646835327148
    8. '```' → logprob: -12.944646835327148
    9. 'return' → logprob: -13.319646835327148
    10. '	self' → logprob: -13.569646835327148

Token 748: '.total' (ID: 23374)
  Prédit: '.total'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.total' → logprob: -3.690834273584187e-05
    2. '.' → logprob: -10.25003719329834
    3. '.b' → logprob: -14.37503719329834
    4. 'total' → logprob: -14.62503719329834
    5. '.user' → logprob: -16.375036239624023
    6. ' .' → logprob: -16.500036239624023
    7. '.current' → logprob: -16.625036239624023
    8. '
' → logprob: -18.125036239624023
    9. '.g' → logprob: -18.375036239624023
    10. '	total' → logprob: -18.500036239624023

Token 749: '_score' (ID: 22555)
  Prédit: '_score'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_score' → logprob: -9.088346359931165e-07
    2. 'score' → logprob: -14.250000953674316
    3. '_scores' → logprob: -16.25
    4. '_' → logprob: -16.375
    5. '_SCORE' → logprob: -17.125
    6. '_code' → logprob: -17.875
    7. 'Score' → logprob: -18.25
    8. ' _' → logprob: -19.0
    9. '_s' → logprob: -19.25
    10. '_sc' → logprob: -20.75

Token 750: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.1269536167383194
    2. ' +=' → logprob: -2.126953601837158
    3. '+' → logprob: -10.876954078674316
    4. ']+=' → logprob: -12.501954078674316
    5. '+=(' → logprob: -13.501954078674316
    6. '   ' → logprob: -13.626954078674316
    7. ' ' → logprob: -15.876954078674316
    8. '    ' → logprob: -16.251953125
    9. '+="' → logprob: -16.626953125
    10. '       ' → logprob: -16.876953125

Token 751: ' gained' (ID: 27841)
  Prédit: 'g'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'g' → logprob: -0.0015061709564179182
    2. ' gained' → logprob: -6.501506328582764
    3. 'got' → logprob: -13.251505851745605
    4. ' g' → logprob: -14.001505851745605
    5. 'gain' → logprob: -14.126505851745605
    6. '	g' → logprob: -14.876505851745605
    7. 'earned' → logprob: -16.876506805419922
    8. '_g' → logprob: -16.876506805419922
    9. 'gone' → logprob: -17.501506805419922
    10. '   ' → logprob: -17.876506805419922

Token 752: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0015653307782486081
    2. '
' → logprob: -7.001565456390381
    3. '<|end|>' → logprob: -7.876565456390381
    4. ' if' → logprob: -8.626564979553223
    5. 'if' → logprob: -10.376564979553223
    6. '   ' → logprob: -10.501564979553223
    7. ',' → logprob: -11.376564979553223
    8. '```' → logprob: -11.876564979553223
    9. 'self' → logprob: -13.001564979553223
    10. ';if' → logprob: -13.126564979553223

Token 753: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00047809764510020614
    2. '<|end|>' → logprob: -8.12547779083252
    3. ' if' → logprob: -8.87547779083252
    4. 'if' → logprob: -10.87547779083252
    5. '   ' → logprob: -11.75047779083252
    6. '
' → logprob: -12.00047779083252
    7. '```' → logprob: -12.37547779083252
    8. ',' → logprob: -13.75047779083252
    9. '           ' → logprob: -14.37547779083252
    10. 'self' → logprob: -14.75047779083252

Token 754: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.002481127390637994
    2. ' if' → logprob: -6.252480983734131
    3. '       ' → logprob: -7.502480983734131
    4. 'self' → logprob: -14.752481460571289
    5. '```' → logprob: -16.37748146057129
    6. '	if' → logprob: -17.00248146057129
    7. '
' → logprob: -17.87748146057129
    8. 'If' → logprob: -18.12748146057129
    9. '   ' → logprob: -18.50248146057129
    10. 'return' → logprob: -18.62748146057129

Token 755: ' self' (ID: 1051)
  Prédit: ' self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.5759395360946655
    2. 'self' → logprob: -0.8259395360946655
    3. '	self' → logprob: -16.325939178466797
    4. ' ' → logprob: -17.450939178466797
    5. '(self' → logprob: -17.450939178466797
    6. '   ' → logprob: -18.700939178466797
    7. ' ' → logprob: -20.325939178466797
    8. 'elf' → logprob: -20.575939178466797
    9. ' positions' → logprob: -20.825939178466797
    10. ' hasattr' → logprob: -20.825939178466797

Token 756: '.listener' (ID: 88396)
  Prédit: '.listener'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.listener' → logprob: -1.981667537620524e-06
    2. '.' → logprob: -14.125001907348633
    3. 'listener' → logprob: -14.625001907348633
    4. ' .' → logprob: -15.125001907348633
    5. '.user' → logprob: -15.250001907348633
    6. '.listen' → logprob: -16.625001907348633
    7. ').' → logprob: -17.625001907348633
    8. '.listeners' → logprob: -17.750001907348633
    9. '.receiver' → logprob: -18.125001907348633
    10. '.player' → logprob: -18.250001907348633

Token 757: ':
' (ID: 734)
  Prédit: ' is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.4503357708454132
    2. ':' → logprob: -1.0753357410430908
    3. 'is' → logprob: -3.950335741043091
    4. ':
' → logprob: -6.20033597946167
    5. 'and' → logprob: -9.575335502624512
    6. ' and' → logprob: -10.575335502624512
    7. '!=' → logprob: -11.200335502624512
    8. ')' → logprob: -12.075335502624512
    9. '	is' → logprob: -13.200335502624512
    10. '   ' → logprob: -13.575335502624512

Token 758: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0006052182870917022
    2. ' self' → logprob: -7.62560510635376
    3. 'self' → logprob: -9.375605583190918
    4. '(self' → logprob: -11.125605583190918
    5. '<|end|>' → logprob: -13.125605583190918
    6. '	       ' → logprob: -13.250605583190918
    7. '.' → logprob: -13.375605583190918
    8. ',' → logprob: -13.375605583190918
    9. ':
' → logprob: -13.625605583190918
    10. '            
' → logprob: -13.875605583190918

Token 759: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.028360962867736816
    2. '           ' → logprob: -3.7783608436584473
    3. ' self' → logprob: -5.278360843658447
    4. '   ' → logprob: -14.153361320495605
    5. '	self' → logprob: -14.903361320495605
    6. '       ' → logprob: -15.153361320495605
    7. '               ' → logprob: -15.778361320495605
    8. ' ' → logprob: -17.40336036682129
    9. '[self' → logprob: -17.52836036682129
    10. '(self' → logprob: -17.65336036682129

Token 760: '.listener' (ID: 88396)
  Prédit: '.listener'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.listener' → logprob: -7.584239938296378e-06
    2. '.' → logprob: -11.875007629394531
    3. 'listener' → logprob: -15.500007629394531
    4. '.listen' → logprob: -15.750007629394531
    5. '.listeners' → logprob: -17.12500762939453
    6. ' .' → logprob: -17.50000762939453
    7. '.on' → logprob: -17.62500762939453
    8. '(listener' → logprob: -18.00000762939453
    9. '.user' → logprob: -18.50000762939453
    10. '.Listener' → logprob: -18.62500762939453

Token 761: '.on' (ID: 5158)
  Prédit: '.on'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.on' → logprob: -3.128163257315464e-07
    2. '.' → logprob: -15.25
    3. ' .' → logprob: -18.375
    4. '.On' → logprob: -19.5
    5. 'on' → logprob: -20.625
    6. '.onload' → logprob: -21.25
    7. '.onclick' → logprob: -22.0
    8. '.to' → logprob: -22.5
    9. '.with' → logprob: -22.5
    10. '.from' → logprob: -22.625

Token 762: '_blocks' (ID: 60244)
  Prédit: '_blocks'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_blocks' → logprob: 0.0
    2. '_block' → logprob: -16.875
    3. 'blocks' → logprob: -18.25
    4. '_bloc' → logprob: -20.375
    5. '```' → logprob: -21.75
    6. '_' → logprob: -22.375
    7. '_bl' → logprob: -22.75
    8. '_
' → logprob: -22.875
    9. '__' → logprob: -23.0
    10. '\' → logprob: -23.125

Token 763: '_er' (ID: 180910)
  Prédit: '_er'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_er' → logprob: -7.896309739408025e-07
    2. 'er' → logprob: -14.125000953674316
    3. '_' → logprob: -18.25
    4. ' erased' → logprob: -18.625
    5. '```' → logprob: -20.0
    6. '   ' → logprob: -20.25
    7. '_el' → logprob: -20.375
    8. '\' → logprob: -20.875
    9. '.er' → logprob: -21.0
    10. '_ed' → logprob: -21.125

Token 764: 'ased' (ID: 1882)
  Prédit: 'ased'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ased' → logprob: -1.1472419600977446e-06
    2. 'ase' → logprob: -13.875000953674316
    3. 'sed' → logprob: -16.375001907348633
    4. '```' → logprob: -17.125001907348633
    5. 'a' → logprob: -17.375001907348633
    6. 'r' → logprob: -18.125001907348633
    7. 'asing' → logprob: -18.750001907348633
    8. 'azed' → logprob: -18.875001907348633
    9. 'assed' → logprob: -19.250001907348633
    10. 'as' → logprob: -19.375001907348633

Token 765: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -6.511406809295295e-06
    2. 'positions' → logprob: -12.000006675720215
    3. ' (' → logprob: -15.875006675720215
    4. '(position' → logprob: -16.5000057220459
    5. '(pos' → logprob: -16.7500057220459
    6. '((' → logprob: -16.8750057220459
    7. ' positions' → logprob: -18.2500057220459
    8. '(
' → logprob: -19.2500057220459
    9. '(points' → logprob: -19.6250057220459
    10. '```' → logprob: -19.7500057220459

Token 766: 'positions' (ID: 32297)
  Prédit: 'positions'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'positions' → logprob: -2.339278580620885e-06
    2. ' positions' → logprob: -13.000001907348633
    3. 'pos' → logprob: -18.000001907348633
    4. 'posit' → logprob: -18.500001907348633
    5. ')' → logprob: -18.750001907348633
    6. 'position' → logprob: -18.750001907348633
    7. '.positions' → logprob: -21.000001907348633
    8. '```' → logprob: -21.750001907348633
    9. '
' → logprob: -21.875001907348633
    10. '{' → logprob: -22.250001907348633

Token 767: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.023272383958101273
    2. ')
' → logprob: -3.7732722759246826
    3. '       ' → logprob: -11.023272514343262
    4. ')

' → logprob: -11.898272514343262
    5. ')
' → logprob: -12.898272514343262
    6. '<|end|>' → logprob: -14.898272514343262
    7. ' )' → logprob: -16.023271560668945
    8. '   ' → logprob: -16.148271560668945
    9. ')return' → logprob: -16.148271560668945
    10. ')\
' → logprob: -16.273271560668945

Token 768: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1881496012210846
    2. '
' → logprob: -2.4381496906280518
    3. '<|end|>' → logprob: -2.5631496906280518
    4. 'def' → logprob: -5.313149452209473
    5. '       ' → logprob: -7.063149452209473
    6. '```' → logprob: -7.563149452209473
    7. '

' → logprob: -7.813149452209473
    8. ' def' → logprob: -8.813149452209473
    9. '    
' → logprob: -9.313149452209473
    10. '<|end|>' → logprob: -9.563149452209473

Token 769: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.013560513965785503
    2. '   ' → logprob: -5.0135602951049805
    3. ' def' → logprob: -5.0135602951049805
    4. '
' → logprob: -9.01356029510498
    5. '	def' → logprob: -10.26356029510498
    6. '<|end|>' → logprob: -11.51356029510498
    7. '```' → logprob: -13.01356029510498
    8. '    
' → logprob: -13.13856029510498
    9. 'ndef' → logprob: -14.26356029510498
    10. ' 
' → logprob: -14.38856029510498

Token 770: ' apply' (ID: 6096)
  Prédit: 'fall'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'fall' → logprob: -0.042613040655851364
    2. 'apply' → logprob: -3.5426130294799805
    3. 'def' → logprob: -4.6676130294799805
    4. ' fall' → logprob: -6.0426130294799805
    5. 'drop' → logprob: -8.16761302947998
    6. 'fallen' → logprob: -8.16761302947998
    7. 'collapse' → logprob: -8.29261302947998
    8. '_apply' → logprob: -10.04261302947998
    9. 'gravity' → logprob: -10.79261302947998
    10. 'simulate' → logprob: -10.79261302947998

Token 771: '_gr' (ID: 30286)
  Prédit: '_gr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_gr' → logprob: -0.0001684981834841892
    2. '_f' → logprob: -8.875168800354004
    3. 'gravity' → logprob: -10.625168800354004
    4. '_' → logprob: -13.375168800354004
    5. '_GR' → logprob: -13.875168800354004
    6. '(gr' → logprob: -14.500168800354004
    7. '   ' → logprob: -15.000168800354004
    8. '_g' → logprob: -15.125168800354004
    9. ' gravity' → logprob: -15.250168800354004
    10. '.gravity' → logprob: -16.625167846679688

Token 772: 'avity' (ID: 25292)
  Prédit: 'avity'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'avity' → logprob: -6.511406809295295e-06
    2. 'av' → logprob: -12.125006675720215
    3. 'avit' → logprob: -13.750006675720215
    4. 'a' → logprob: -19.1250057220459
    5. 'gravity' → logprob: -19.5000057220459
    6. 'v' → logprob: -20.3750057220459
    7. 'avi' → logprob: -20.6250057220459
    8. 'avy' → logprob: -21.5000057220459
    9. 'aviti' → logprob: -21.6250057220459
    10. 'avite' → logprob: -21.7500057220459

Token 773: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.001914118998683989
    2. '(' → logprob: -6.376914024353027
    3. '   ' → logprob: -8.626914024353027
    4. '       ' → logprob: -11.001914024353027
    5. 'self' → logprob: -11.501914024353027
    6. ' (' → logprob: -12.251914024353027
    7. ' ' → logprob: -14.001914024353027
    8. '():
' → logprob: -16.251914978027344
    9. '  ' → logprob: -16.501914978027344
    10. '
' → logprob: -17.126914978027344

Token 774: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.48144859075546265
    2. 'self' → logprob: -1.2314486503601074
    3. '(self' → logprob: -3.2314486503601074
    4. '):' → logprob: -3.4814486503601074
    5. '   ' → logprob: -4.231448650360107
    6. '       ' → logprob: -5.481448650360107
    7. ')(' → logprob: -7.731448650360107
    8. ')' → logprob: -8.23144817352295
    9. ' self' → logprob: -8.73144817352295
    10. '):
' → logprob: -9.10644817352295

Token 775: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.49947330355644226
    2. 'for' → logprob: -0.9994733333587646
    3. '   ' → logprob: -3.9994733333587646
    4. ' for' → logprob: -4.9994730949401855
    5. '	for' → logprob: -12.374473571777344
    6. '```' → logprob: -12.499473571777344
    7. '           ' → logprob: -14.374473571777344
    8. '#' → logprob: -15.374473571777344
    9. '
' → logprob: -15.499473571777344
    10. '    ' → logprob: -15.624473571777344

Token 776: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.007434231229126453
    2. ' for' → logprob: -5.007434368133545
    3. '       ' → logprob: -7.257434368133545
    4. '   ' → logprob: -11.257433891296387
    5. 'changed' → logprob: -14.382433891296387
    6. '	for' → logprob: -16.132434844970703
    7. '#' (adapté à ' #') → logprob: -17.382434844970703
    8. ' changed' → logprob: -17.507434844970703
    9. ' ' → logprob: -19.257434844970703
    10. ' moved' → logprob: -19.507434844970703

Token 777: ' Make' (ID: 9393)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -8.828512363834307e-05
    2. ' for' → logprob: -9.500088691711426
    3. '       ' → logprob: -11.250088691711426
    4. '   ' → logprob: -15.250088691711426
    5. 'For' → logprob: -15.750088691711426
    6. '	for' → logprob: -18.50008773803711
    7. '#' → logprob: -19.00008773803711
    8. 'changed' → logprob: -19.37508773803711
    9. '
' → logprob: -21.00008773803711
    10. 'columns' → logprob: -21.12508773803711

Token 778: ' blocks' (ID: 18125)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.04069340601563454
    2. ' for' → logprob: -3.290693521499634
    3. 'changed' → logprob: -6.165693283081055
    4. 'columns' → logprob: -8.540693283081055
    5. '   ' → logprob: -8.915693283081055
    6. 'cols' → logprob: -10.040693283081055
    7. 'c' → logprob: -10.040693283081055
    8. 'self' → logprob: -10.165693283081055
    9. ' changed' → logprob: -10.415693283081055
    10. 'range' → logprob: -11.165693283081055

Token 779: ' fall' (ID: 5617)
  Prédit: 'fall'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fall' → logprob: -0.0036303617525845766
    2. ' fall' → logprob: -5.6286301612854
    3. '   ' → logprob: -10.628630638122559
    4. 'fallen' → logprob: -13.003630638122559
    5. 'fell' → logprob: -13.503630638122559
    6. 'drop' → logprob: -14.003630638122559
    7. '       ' → logprob: -14.378630638122559
    8. 'for' → logprob: -15.378630638122559
    9. 'Fall' → logprob: -15.503630638122559
    10. 'to' → logprob: -16.003629684448242

Token 780: ' down' (ID: 1917)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.313862144947052
    2. ' for' → logprob: -1.5638620853424072
    3. 'for' → logprob: -2.8138620853424072
    4. '   ' → logprob: -10.188861846923828
    5. '	for' → logprob: -10.813861846923828
    6. ',' → logprob: -11.188861846923828
    7. ' to' → logprob: -13.563861846923828
    8. '           ' → logprob: -13.563861846923828
    9. 'down' → logprob: -13.688861846923828
    10. '        ' → logprob: -13.938861846923828

Token 781: ' to' (ID: 316)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03163278475403786
    2. ' for' → logprob: -3.531632900238037
    3. 'for' → logprob: -6.281632900238037
    4. '   ' → logprob: -11.781632423400879
    5. '	for' → logprob: -13.656632423400879
    6. '           ' → logprob: -14.531632423400879
    7. '```' → logprob: -14.906632423400879
    8. ',' → logprob: -15.281632423400879
    9. ' ' → logprob: -15.781632423400879
    10. '
' → logprob: -16.406633377075195

Token 782: ' lowest' (ID: 23120)
  Prédit: 'fill'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'fill' → logprob: -0.03465710207819939
    2. 'the' → logprob: -3.9096570014953613
    3. 'each' → logprob: -4.784657001495361
    4. ' fill' → logprob: -5.909657001495361
    5. '   ' → logprob: -6.784657001495361
    6. 'bottom' → logprob: -7.034657001495361
    7. ' the' → logprob: -7.909657001495361
    8. 'empty' → logprob: -8.65965747833252
    9. ' each' → logprob: -8.90965747833252
    10. '       ' → logprob: -9.28465747833252

Token 783: ' empty' (ID: 8213)
  Prédit: 'empty'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'empty' → logprob: -0.13006126880645752
    2. ' empty' → logprob: -2.630061149597168
    3. 'for' → logprob: -4.255061149597168
    4. 'available' → logprob: -4.380061149597168
    5. ' for' → logprob: -4.630061149597168
    6. 'row' → logprob: -5.255061149597168
    7. ' available' → logprob: -5.880061149597168
    8. '   ' → logprob: -6.130061149597168
    9. 'rows' → logprob: -7.380061149597168
    10. 'positions' → logprob: -7.380061149597168

Token 784: ' cell' (ID: 4206)
  Prédit: 'cells'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cells' → logprob: -0.5286038517951965
    2. 'positions' → logprob: -1.6536037921905518
    3. 'spaces' → logprob: -3.1536037921905518
    4. ' cells' → logprob: -3.1536037921905518
    5. 'rows' → logprob: -3.4036037921905518
    6. ' positions' → logprob: -3.5286037921905518
    7. 'cell' → logprob: -3.9036037921905518
    8. 'row' → logprob: -4.028604030609131
    9. ' spaces' → logprob: -4.778604030609131
    10. 'slots' → logprob: -5.528604030609131

Token 785: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00385719770565629
    2. ' for' → logprob: -5.878857135772705
    3. 'for' → logprob: -6.878857135772705
    4. '
' → logprob: -11.753857612609863
    5. '   ' → logprob: -11.878857612609863
    6. '```' → logprob: -12.378857612609863
    7. ',' → logprob: -13.503857612609863
    8. '           ' → logprob: -14.003857612609863
    9. '	for' → logprob: -14.878857612609863
    10. 'For' → logprob: -16.128856658935547

Token 786: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0023798076435923576
    2. '
' → logprob: -6.752379894256592
    3. ' for' → logprob: -7.252379894256592
    4. 'for' → logprob: -8.002379417419434
    5. '   ' → logprob: -9.377379417419434
    6. '```' → logprob: -9.752379417419434
    7. '        
' → logprob: -11.877379417419434
    8. ',' → logprob: -12.252379417419434
    9. '	' → logprob: -13.002379417419434
    10. '           ' → logprob: -13.377379417419434

Token 787: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.0006928971270099282
    2. ' for' → logprob: -7.750692844390869
    3. '       ' → logprob: -8.250693321228027
    4. '   ' → logprob: -13.875693321228027
    5. 'changed' → logprob: -16.12569236755371
    6. '	for' → logprob: -16.75069236755371
    7. '```' → logprob: -19.37569236755371
    8. ' ' → logprob: -19.75069236755371
    9. '        ' → logprob: -20.62569236755371
    10. '  ' → logprob: -20.62569236755371

Token 788: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.00043162284418940544
    2. ' c' → logprob: -7.750431537628174
    3. 'col' → logprob: -14.125432014465332
    4. '   ' → logprob: -16.000431060791016
    5. '	c' → logprob: -18.250431060791016
    6. 'r' → logprob: -18.500431060791016
    7. '_c' → logprob: -19.250431060791016
    8. ')c' → logprob: -20.000431060791016
    9. '```' → logprob: -21.000431060791016
    10. ')' → logprob: -21.000431060791016

Token 789: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.03365987911820412
    2. 'in' → logprob: -3.4086599349975586
    3. 'range' → logprob: -11.658659934997559
    4. ' ' → logprob: -13.408659934997559
    5. 's' → logprob: -13.783659934997559
    6. 'n' → logprob: -14.283659934997559
    7. '0' → logprob: -14.908659934997559
    8. 'self' → logprob: -15.283659934997559
    9. 'import' → logprob: -15.408659934997559
    10. '```' → logprob: -15.783659934997559

Token 790: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.006715370807796717
    2. ' range' → logprob: -5.006715297698975
    3. '	range' → logprob: -21.756715774536133
    4. '(range' → logprob: -22.131715774536133
    5. '   ' → logprob: -23.006715774536133
    6. ' ' → logprob: -23.256715774536133
    7. 'Range' → logprob: -23.881715774536133
    8. '_range' → logprob: -24.256715774536133
    9. '0' → logprob: -24.506715774536133
    10. '  ' → logprob: -24.631715774536133

Token 791: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -2.816093228830141e-06
    2. 'self' → logprob: -13.25000286102295
    3. '(' → logprob: -13.87500286102295
    4. '(
' → logprob: -18.750001907348633
    5. ' self' → logprob: -19.375001907348633
    6. '(Board' → logprob: -19.875001907348633
    7. '(sel' → logprob: -19.875001907348633
    8. '(s' → logprob: -20.000001907348633
    9. '=self' → logprob: -20.750001907348633
    10. '(len' → logprob: -20.750001907348633

Token 792: '.W' (ID: 2342)
  Prédit: '.W'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.W' → logprob: -0.1765081286430359
    2. 'self' → logprob: -1.9265081882476807
    3. 'WIDTH' → logprob: -5.176507949829102
    4. ')' → logprob: -6.051507949829102
    5. '.' → logprob: -6.676507949829102
    6. '   ' → logprob: -6.926507949829102
    7. ').' → logprob: -7.051507949829102
    8. '5' → logprob: -7.051507949829102
    9. '.SIZE' → logprob: -7.426507949829102
    10. '.B' → logprob: -7.426507949829102

Token 793: 'IDTH' (ID: 20688)
  Prédit: 'IDTH'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'IDTH' → logprob: -0.028053494170308113
    2. '   ' → logprob: -3.9030535221099854
    3. 'Board' → logprob: -5.153053283691406
    4. 'idth' → logprob: -6.778053283691406
    5. 'HEIGHT' → logprob: -9.153053283691406
    6. 'WIDTH' → logprob: -9.153053283691406
    7. 'BOARD' → logprob: -9.528053283691406
    8. ' Board' → logprob: -9.653053283691406
    9. 'ID' → logprob: -10.278053283691406
    10. '5' → logprob: -10.403053283691406

Token 794: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.14306360483169556
    2. '):' → logprob: -2.018063545227051
    3. '):
' → logprob: -8.89306354522705
    4. '   ' → logprob: -9.26806354522705
    5. '       ' → logprob: -9.39306354522705
    6. ' ):
' → logprob: -10.01806354522705
    7. ' ):' → logprob: -10.89306354522705
    8. ')' → logprob: -12.14306354522705
    9. '):

' → logprob: -13.26806354522705
    10. '-' → logprob: -13.89306354522705

Token 795: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.004189279396086931
    2. ' for' → logprob: -5.879189491271973
    3. '       ' → logprob: -6.754189491271973
    4. '   ' → logprob: -8.879189491271973
    5. 'for' → logprob: -10.129189491271973
    6. 'r' → logprob: -11.004189491271973
    7. ',' → logprob: -12.004189491271973
    8. ' r' → logprob: -12.629189491271973
    9. '	       ' → logprob: -13.129189491271973
    10. '	   ' → logprob: -13.379189491271973

Token 796: ' stack' (ID: 10825)
  Prédit: 'empty'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'empty' → logprob: -0.2109752893447876
    2. 'stack' (adapté à ' stack') → logprob: -2.460975170135498
    3. 'write' → logprob: -3.335975170135498
    4. 'bottom' → logprob: -3.335975170135498
    5. 'pointer' → logprob: -4.835975170135498
    6. '           ' → logprob: -4.960975170135498
    7. 'col' → logprob: -4.960975170135498
    8. '       ' → logprob: -5.585975170135498
    9. 'column' → logprob: -5.710975170135498
    10. '   ' → logprob: -6.335975170135498

Token 797: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.4740866422653198
    2. ' =' → logprob: -0.9740866422653198
    3. '=[]' → logprob: -11.97408676147461
    4. '=[]
' → logprob: -12.97408676147461
    5. '   ' → logprob: -14.34908676147461
    6. '=
' → logprob: -15.47408676147461
    7. '＝' → logprob: -16.34908676147461
    8. ' ' → logprob: -16.72408676147461
    9. '=[' → logprob: -17.22408676147461
    10. ':' → logprob: -17.34908676147461

Token 798: ' []
' (ID: 8911)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.018213976174592972
    2. '[]
' → logprob: -4.268213748931885
    3. '[' → logprob: -5.518213748931885
    4. ' []' → logprob: -11.393214225769043
    5. '[
' → logprob: -11.768214225769043
    6. '[]

' → logprob: -12.018214225769043
    7. '[int' → logprob: -13.393214225769043
    8. ' [' → logprob: -14.018214225769043
    9. '[]}' → logprob: -15.143214225769043
    10. ' []
' → logprob: -15.393214225769043

Token 799: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.013164117932319641
    2. 'for' → logprob: -4.513164043426514
    3. '       ' → logprob: -6.388164043426514
    4. ' for' → logprob: -7.763164043426514
    5. '   ' → logprob: -11.888164520263672
    6. '               ' → logprob: -15.388164520263672
    7. '	       ' → logprob: -15.513164520263672
    8. '	   ' → logprob: -16.138164520263672
    9. '          ' → logprob: -16.763164520263672
    10. '		' → logprob: -17.388164520263672

Token 800: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.00020532844064291567
    2. ' for' → logprob: -8.500205039978027
    3. '           ' → logprob: -13.250205039978027
    4. '       ' → logprob: -16.500205993652344
    5. '   ' → logprob: -17.500205993652344
    6. '	for' → logprob: -18.500205993652344
    7. ' ' → logprob: -18.750205993652344
    8. '
' → logprob: -22.000205993652344
    9. '#' → logprob: -22.375205993652344
    10. '            
' → logprob: -23.125205993652344

Token 801: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -6.704273118884885e-07
    2. ' r' → logprob: -14.250000953674316
    3. '	r' → logprob: -22.0
    4. '   ' → logprob: -22.875
    5. 'row' → logprob: -23.625
    6. '```' → logprob: -25.25
    7. '_r' → logprob: -25.875
    8. '(r' → logprob: -26.0
    9. 'rr' → logprob: -26.375
    10. '

' → logprob: -26.75

Token 802: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.00861681904643774
    2. 'in' → logprob: -4.758616924285889
    3. 'In' → logprob: -14.00861644744873
    4. '	in' → logprob: -15.25861644744873
    5. 'self' → logprob: -15.88361644744873
    6. 'd' → logprob: -15.88361644744873
    7. ' ' → logprob: -15.88361644744873
    8. 'int' → logprob: -16.258617401123047
    9. 'from' → logprob: -16.383617401123047
    10. 'range' → logprob: -16.508617401123047

Token 803: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.00044377794256433845
    2. ' range' → logprob: -7.750443935394287
    3. 're' → logprob: -11.250443458557129
    4. ' reversed' → logprob: -16.875444412231445
    5. '(range' → logprob: -17.750444412231445
    6. '	range' → logprob: -19.375444412231445
    7. 'reverse' → logprob: -19.500444412231445
    8. '   ' → logprob: -21.125444412231445
    9. 'Range' → logprob: -21.875444412231445
    10. '
' → logprob: -23.125444412231445

Token 804: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -1.0802738870552275e-05
    2. 'self' → logprob: -11.75001049041748
    3. '(' → logprob: -12.87501049041748
    4. '(s' → logprob: -16.250011444091797
    5. '(Board' → logprob: -17.000011444091797
    6. 's' → logprob: -17.375011444091797
    7. '[self' → logprob: -18.250011444091797
    8. '(
' → logprob: -18.250011444091797
    9. '(sel' → logprob: -18.375011444091797
    10. '=self' → logprob: -18.500011444091797

Token 805: '.' (ID: 13)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.13092513382434845
    2. '(self' → logprob: -2.130925178527832
    3. 'HEIGHT' → logprob: -6.005925178527832
    4. ' self' → logprob: -7.380925178527832
    5. '=self' → logprob: -7.755925178527832
    6. '[self' → logprob: -8.630925178527832
    7. ')' → logprob: -9.130925178527832
    8. ',self' → logprob: -9.130925178527832
    9. '	self' → logprob: -11.255925178527832
    10. '(' → logprob: -11.380925178527832

Token 806: 'HEIGHT' (ID: 105934)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.00021641071361955255
    2. ' self' → logprob: -8.750216484069824
    3. '(self' → logprob: -10.375216484069824
    4. 'HEIGHT' → logprob: -10.875216484069824
    5. '0' → logprob: -12.500216484069824
    6. 'Board' → logprob: -13.625216484069824
    7. '
' → logprob: -14.000216484069824
    8. '   ' → logprob: -14.250216484069824
    9. '=self' → logprob: -14.875216484069824
    10. '[self' → logprob: -15.125216484069824

Token 807: '):
' (ID: 1883)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.11752119660377502
    2. ' -' → logprob: -2.242521286010742
    3. '):
' → logprob: -5.492521286010742
    4. '):' → logprob: -7.617521286010742
    5. '   ' → logprob: -10.117521286010742
    6. '       ' → logprob: -10.742521286010742
    7. '           ' → logprob: -11.867521286010742
    8. ')' → logprob: -12.617521286010742
    9. ' ' → logprob: -12.992521286010742
    10. '):

' → logprob: -13.742521286010742

Token 808: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.05956495553255081
    2. ' if' → logprob: -2.9345650672912598
    3. '[::-' → logprob: -6.05956506729126
    4. 'if' → logprob: -6.30956506729126
    5. ' reverse' → logprob: -8.184564590454102
    6. 'reverse' → logprob: -9.809564590454102
    7. ' reversed' → logprob: -9.934564590454102
    8. ' in' → logprob: -10.809564590454102
    9. ',' → logprob: -10.934564590454102
    10. '	           ' → logprob: -11.184564590454102

Token 809: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.05290883779525757
    2. ' if' → logprob: -3.3029088973999023
    3. 'block' → logprob: -4.302908897399902
    4. '               ' → logprob: -6.802908897399902
    5. 'cell' → logprob: -9.677908897399902
    6. 'b' → logprob: -10.677908897399902
    7. ' block' → logprob: -11.177908897399902
    8. 'blk' → logprob: -11.927908897399902
    9. '                   ' → logprob: -12.677908897399902
    10. '   ' → logprob: -13.052908897399902

Token 810: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.00043102685594931245
    2. ' self' → logprob: -7.750431060791016
    3. '(self' → logprob: -15.375431060791016
    4. '   ' → logprob: -16.625431060791016
    5. '	self' → logprob: -16.875431060791016
    6. '[self' → logprob: -17.625431060791016
    7. '           ' → logprob: -19.375431060791016
    8. '0' → logprob: -19.875431060791016
    9. '=self' → logprob: -20.125431060791016
    10. '       ' → logprob: -20.500431060791016

Token 811: '.grid' (ID: 19269)
  Prédit: '.grid'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.grid' → logprob: -0.0006299942615441978
    2. 'grid' → logprob: -7.875629901885986
    3. 'self' → logprob: -9.000630378723145
    4. '[self' → logprob: -9.000630378723145
    5. '.' → logprob: -13.750630378723145
    6. ' grid' → logprob: -14.125630378723145
    7. '	grid' → logprob: -14.625630378723145
    8. '[' → logprob: -15.125630378723145
    9. '   ' → logprob: -15.750630378723145
    10. ':grid' → logprob: -16.375629425048828

Token 812: '[r' (ID: 33265)
  Prédit: '[r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[r' → logprob: -0.010651249438524246
    2. '[self' → logprob: -4.760651111602783
    3. '[' → logprob: -6.260651111602783
    4. 'r' → logprob: -9.135651588439941
    5. 'self' → logprob: -11.385651588439941
    6. '[
' → logprob: -14.010651588439941
    7. ' [' → logprob: -14.260651588439941
    8. '(r' → logprob: -14.510651588439941
    9. '	r' → logprob: -14.510651588439941
    10. '[-' → logprob: -14.635651588439941

Token 813: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.31510788202285767
    2. '[c' → logprob: -1.315107822418213
    3. '[r' → logprob: -6.565107822418213
    4. ')[' → logprob: -8.815108299255371
    5. 'c' → logprob: -9.065108299255371
    6. '[' → logprob: -10.190108299255371
    7. ' [' → logprob: -10.440108299255371
    8. ']' → logprob: -10.690108299255371
    9. 'r' → logprob: -11.065108299255371
    10. '}[' → logprob: -11.440108299255371

Token 814: 'c' (ID: 66)
  Prédit: 'c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -8.280175097752362e-05
    2. '[c' → logprob: -9.625082969665527
    3. ' c' → logprob: -11.250082969665527
    4. '][' → logprob: -12.875082969665527
    5. ')c' → logprob: -14.375082969665527
    6. '   ' → logprob: -15.500082969665527
    7. '
' → logprob: -16.12508201599121
    8. '```' → logprob: -16.37508201599121
    9. '[' → logprob: -17.12508201599121
    10. ',c' → logprob: -17.37508201599121

Token 815: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.100972481071949
    2. ']!=' → logprob: -2.3509724140167236
    3. '!=' → logprob: -7.350972652435303
    4. ')!=' → logprob: -9.350972175598145
    5. ')' → logprob: -11.100972175598145
    6. ' !=' → logprob: -11.475972175598145
    7. '>' → logprob: -12.350972175598145
    8. ']>' → logprob: -12.475972175598145
    9. ' ]' → logprob: -13.850972175598145
    10. '()!=' → logprob: -14.475972175598145

Token 816: ' !=' (ID: 1666)
  Prédit: '!='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '!=' → logprob: -0.0029250639490783215
    2. ' !=' → logprob: -5.877924919128418
    3. '>' → logprob: -9.377924919128418
    4. ')!=' → logprob: -10.877924919128418
    5. ']!=' → logprob: -11.377924919128418
    6. '!==' → logprob: -12.877924919128418
    7. '()!=' → logprob: -13.002924919128418
    8. ')' → logprob: -15.752924919128418
    9. '!='' → logprob: -16.002925872802734
    10. '```' → logprob: -16.752925872802734

Token 817: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -7.941850526549388e-06
    2. ' ' → logprob: -11.750007629394531
    3. '   ' → logprob: -19.87500762939453
    4. '۰' → logprob: -21.37500762939453
    5. '  ' → logprob: -22.37500762939453
    6. '    ' → logprob: -22.50000762939453
    7. '00' → logprob: -22.62500762939453
    8. '           ' → logprob: -22.81250762939453
    9. '```' → logprob: -22.81250762939453
    10. '０' → logprob: -22.87500762939453

Token 818: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -6.2729995988775045e-06
    2. ' ' → logprob: -12.000006675720215
    3. '۰' → logprob: -20.2500057220459
    4. '   ' → logprob: -21.0625057220459
    5. '０' → logprob: -21.6875057220459
    6. '```' → logprob: -21.7500057220459
    7. '
' → logprob: -21.9375057220459
    8. '00' → logprob: -22.2500057220459
    9. '  ' → logprob: -22.5000057220459
    10. '০' → logprob: -22.5625057220459

Token 819: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.00872199796140194
    2. ':' → logprob: -4.758721828460693
    3. '):
' → logprob: -10.008722305297852
    4. '                   ' → logprob: -10.508722305297852
    5. '               ' → logprob: -10.883722305297852
    6. 'stack' → logprob: -11.883722305297852
    7. 'and' → logprob: -13.133722305297852
    8. ':
' → logprob: -13.508722305297852
    9. ' and' → logprob: -13.508722305297852
    10. ',' → logprob: -13.758722305297852

Token 820: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.02256493642926216
    2. 'stack' → logprob: -4.647564888000488
    3. '               ' → logprob: -5.022564888000488
    4. ' stack' → logprob: -5.397564888000488
    5. '                       ' → logprob: -7.647564888000488
    6. ':
' → logprob: -8.022564888000488
    7. '           ' → logprob: -8.147564888000488
    8. '(stack' → logprob: -8.897564888000488
    9. '	stack' → logprob: -9.022564888000488
    10. '.stack' → logprob: -9.397564888000488

Token 821: ' stack' (ID: 10825)
  Prédit: 'stack'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'stack' (adapté à ' stack') → logprob: -0.1269812285900116
    2. ' stack' → logprob: -2.126981258392334
    3. '                   ' → logprob: -10.626980781555176
    4. '                       ' → logprob: -10.751980781555176
    5. '	stack' → logprob: -12.376980781555176
    6. '               ' → logprob: -13.626980781555176
    7. '   ' → logprob: -13.751980781555176
    8. '.stack' → logprob: -14.876980781555176
    9. '(stack' → logprob: -15.501980781555176
    10. '       ' → logprob: -16.001981735229492

Token 822: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -5.228561349213123e-05
    2. '.' → logprob: -10.000052452087402
    3. '.insert' → logprob: -12.000052452087402
    4. 'append' → logprob: -14.375052452087402
    5. ' .' → logprob: -17.125051498413086
    6. '.app' → logprob: -17.500051498413086
    7. '.ap' → logprob: -18.375051498413086
    8. '].' → logprob: -19.000051498413086
    9. ').' → logprob: -19.875051498413086
    10. '   ' → logprob: -21.000051498413086

Token 823: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.0007125511183403432
    2. 'self' → logprob: -7.2507123947143555
    3. '(' → logprob: -13.000712394714355
    4. '(
' → logprob: -15.125712394714355
    5. ' self' → logprob: -16.750713348388672
    6. '[self' → logprob: -17.500713348388672
    7. ' (' → logprob: -17.625713348388672
    8. '   ' → logprob: -18.000713348388672
    9. '	self' → logprob: -18.125713348388672
    10. '
' → logprob: -18.500713348388672

Token 824: '.grid' (ID: 19269)
  Prédit: '.grid'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.grid' → logprob: -0.0031813981477171183
    2. 'grid' → logprob: -5.753181457519531
    3. '.' → logprob: -13.503181457519531
    4. 'self' → logprob: -14.378181457519531
    5. ' grid' → logprob: -14.378181457519531
    6. '	grid' → logprob: -14.628181457519531
    7. '[r' → logprob: -14.878181457519531
    8. '[self' → logprob: -15.628181457519531
    9. ' .' → logprob: -17.50318145751953
    10. '
' → logprob: -18.00318145751953

Token 825: '[r' (ID: 33265)
  Prédit: '[r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[r' → logprob: -1.1472419600977446e-06
    2. 'r' → logprob: -14.125000953674316
    3. '[' → logprob: -15.375000953674316
    4. '[
' → logprob: -16.500001907348633
    5. ' [' → logprob: -18.000001907348633
    6. '	r' → logprob: -18.875001907348633
    7. '
' → logprob: -19.000001907348633
    8. ')[' → logprob: -20.125001907348633
    9. '[t' → logprob: -20.250001907348633
    10. '[c' → logprob: -20.625001907348633

Token 826: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.05602574348449707
    2. '[r' → logprob: -3.056025743484497
    3. '[c' → logprob: -4.931025505065918
    4. ']' → logprob: -10.056025505065918
    5. 'r' → logprob: -10.181025505065918
    6. '[' → logprob: -10.431025505065918
    7. ')[' → logprob: -10.556025505065918
    8. ' ][' → logprob: -10.931025505065918
    9. ' [' → logprob: -11.681025505065918
    10. '   ' → logprob: -11.806025505065918

Token 827: 'c' (ID: 66)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.4743292033672333
    2. 'c' → logprob: -0.9743292331695557
    3. '[c' → logprob: -8.724328994750977
    4. '[r' → logprob: -9.599328994750977
    5. '   ' → logprob: -11.474328994750977
    6. ' c' → logprob: -12.849328994750977
    7. ' r' → logprob: -13.224328994750977
    8. '```' → logprob: -13.724328994750977
    9. '
' → logprob: -13.974328994750977
    10. ')c' → logprob: -14.099328994750977

Token 828: '])
' (ID: 5169)
  Prédit: '])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '])' → logprob: -0.6945801377296448
    2. '])
' → logprob: -0.6945801377296448
    3. ')
' → logprob: -7.194580078125
    4. ')' → logprob: -7.444580078125
    5. '])

' → logprob: -10.444580078125
    6. ']' → logprob: -10.694580078125
    7. '           ' → logprob: -10.944580078125
    8. '       ' → logprob: -11.194580078125
    9. '               ' → logprob: -12.569580078125
    10. '])
' → logprob: -12.694580078125

Token 829: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -3.845798710244708e-05
    2. '
' → logprob: -10.375038146972656
    3. ' for' → logprob: -12.750038146972656
    4. '            
' → logprob: -13.875038146972656
    5. ',' → logprob: -14.000038146972656
    6. '       ' → logprob: -14.375038146972656
    7. 'for' → logprob: -14.500038146972656
    8. '#' → logprob: -15.375038146972656
    9. '          ' → logprob: -15.625038146972656
    10. '0' → logprob: -15.875038146972656

Token 830: ' #' (ID: 1069)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.7791067361831665
    2. 'for' → logprob: -0.7791067361831665
    3. ' for' → logprob: -3.529106616973877
    4. 'idx' → logprob: -3.904106616973877
    5. 'empty' → logprob: -4.029106616973877
    6. 'row' → logprob: -5.029106616973877
    7. '           ' → logprob: -5.029106616973877
    8. 'i' → logprob: -8.154107093811035
    9. 'index' → logprob: -8.154107093811035
    10. '            
' → logprob: -8.404107093811035

Token 831: ' Fill' (ID: 32680)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.15362943708896637
    2. 'r' → logprob: -2.2786295413970947
    3. 'idx' → logprob: -4.028629302978516
    4. ' for' → logprob: -4.403629302978516
    5. 'empty' → logprob: -5.403629302978516
    6. 'row' → logprob: -6.028629302978516
    7. 'stack' → logprob: -6.528629302978516
    8. 'i' → logprob: -8.403629302978516
    9. '           ' → logprob: -8.403629302978516
    10. 'fill' → logprob: -8.528629302978516

Token 832: ' from' (ID: 591)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.20268061757087708
    2. 'column' → logprob: -2.7026805877685547
    3. 'from' → logprob: -3.2026805877685547
    4. 'for' → logprob: -4.202680587768555
    5. ' from' → logprob: -4.452680587768555
    6. 'col' → logprob: -4.702680587768555
    7. '   ' → logprob: -4.702680587768555
    8. ' for' → logprob: -4.952680587768555
    9. ' column' → logprob: -5.452680587768555
    10. 'empty' → logprob: -5.577680587768555

Token 833: ' bottom' (ID: 8725)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.00034928982495330274
    2. 'bottom' → logprob: -8.250349044799805
    3. '0' → logprob: -9.875349044799805
    4. ' self' → logprob: -11.250349044799805
    5. '(self' → logprob: -11.625349044799805
    6. 'the' → logprob: -12.000349044799805
    7. 'r' → logprob: -12.625349044799805
    8. ' bottom' → logprob: -13.125349044799805
    9. '
' → logprob: -13.750349044799805
    10. '[self' → logprob: -14.250349044799805

Token 834: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.5630497336387634
    2. ' for' → logprob: -1.0630497932434082
    3. 'r' → logprob: -2.938049793243408
    4. ' row' → logprob: -4.188049793243408
    5. 'row' → logprob: -4.688049793243408
    6. 'for' → logprob: -5.313049793243408
    7. ' r' → logprob: -6.438049793243408
    8. '   ' → logprob: -8.56304931640625
    9. ' empty' → logprob: -8.68804931640625
    10. '       ' → logprob: -8.68804931640625

Token 835: '           ' (ID: 352)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.5405120253562927
    2. '       ' → logprob: -1.5405120849609375
    3. 'for' → logprob: -2.2905120849609375
    4. '           ' → logprob: -2.7905120849609375
    5. 'down' → logprob: -4.7905120849609375
    6. ' down' → logprob: -4.9155120849609375
    7. ' to' → logprob: -5.1655120849609375
    8. 'r' → logprob: -5.1655120849609375
    9. ' up' → logprob: -5.6655120849609375
    10. 'row' → logprob: -6.2905120849609375

Token 836: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.7123143672943115
    2. 'r' → logprob: -0.9623143672943115
    3. ' r' → logprob: -2.8373143672943115
    4. 'for' (adapté à ' for') → logprob: -3.2123143672943115
    5. ' empty' → logprob: -4.337314605712891
    6. '           ' → logprob: -4.712314605712891
    7. 'empty' → logprob: -5.587314605712891
    8. 'row' → logprob: -6.462314605712891
    9. ' row' → logprob: -7.837314605712891
    10. 'idx' → logprob: -8.08731460571289

Token 837: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.0004336493439041078
    2. ' r' → logprob: -7.750433444976807
    3. 'row' → logprob: -13.000433921813965
    4. '   ' → logprob: -14.875433921813965
    5. 'i' → logprob: -15.750433921813965
    6. 'rr' → logprob: -16.00043296813965
    7. '_r' → logprob: -17.50043296813965
    8. ' ' → logprob: -17.50043296813965
    9. 'idx' → logprob: -17.50043296813965
    10. 'empty' → logprob: -17.62543296813965

Token 838: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.001177012687548995
    2. 'in' → logprob: -6.751176834106445
    3. 'reverse' → logprob: -13.251176834106445
    4. ' reversed' → logprob: -13.626176834106445
    5. 'd' → logprob: -14.126176834106445
    6. 'range' → logprob: -14.626176834106445
    7. '<|end|>' → logprob: -14.751176834106445
    8. 'In' → logprob: -14.876176834106445
    9. 's' → logprob: -15.251176834106445
    10. '_reverse' → logprob: -15.376176834106445

Token 839: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.020745549350976944
    2. 're' → logprob: -4.020745754241943
    3. ' range' → logprob: -6.020745754241943
    4. ' reversed' → logprob: -9.270745277404785
    5. '   ' → logprob: -9.895745277404785
    6. '(range' → logprob: -11.645745277404785
    7. 'self' → logprob: -11.895745277404785
    8. '(re' → logprob: -14.020745277404785
    9. 'reverse' → logprob: -14.020745277404785
    10. '       ' → logprob: -14.395745277404785

Token 840: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.00020592445798683912
    2. 'self' → logprob: -8.500205993652344
    3. '(' → logprob: -13.750205993652344
    4. ' self' → logprob: -14.750205993652344
    5. '=self' → logprob: -15.125205993652344
    6. '[self' → logprob: -15.125205993652344
    7. 's' → logprob: -16.500205993652344
    8. ',self' → logprob: -16.625205993652344
    9. '   ' → logprob: -17.125205993652344
    10. '(
' → logprob: -17.125205993652344

Token 841: '.' (ID: 13)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.43327033519744873
    2. 'HEIGHT' → logprob: -1.0582703351974487
    3. ' self' → logprob: -5.808270454406738
    4. '.' → logprob: -6.683270454406738
    5. '   ' → logprob: -8.808270454406738
    6. '(self' → logprob: -10.183270454406738
    7. '[self' → logprob: -10.808270454406738
    8. ' HEIGHT' → logprob: -11.308270454406738
    9. '_HEIGHT' → logprob: -11.433270454406738
    10. ',' → logprob: -11.683270454406738

Token 842: 'HEIGHT' (ID: 105934)
  Prédit: 'HEIGHT'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'HEIGHT' → logprob: -0.0003377270477358252
    2. 'self' → logprob: -8.000337600708008
    3. 'WIDTH' → logprob: -14.125337600708008
    4. ' HEIGHT' → logprob: -14.125337600708008
    5. '   ' → logprob: -14.875337600708008
    6. '
' → logprob: -15.375337600708008
    7. ' self' → logprob: -16.625337600708008
    8. 'HE' → logprob: -16.625337600708008
    9. '0' → logprob: -17.625337600708008
    10. '(self' → logprob: -17.750337600708008

Token 843: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.16022564470767975
    2. ' -' → logprob: -1.9102256298065186
    3. ' ' → logprob: -14.785225868225098
    4. '   ' → logprob: -15.035225868225098
    5. '1' → logprob: -15.160225868225098
    6. '       ' → logprob: -15.660225868225098
    7. '           ' → logprob: -16.66022491455078
    8. 'self' → logprob: -16.78522491455078
    9. '()-' → logprob: -17.91022491455078
    10. '–' → logprob: -18.03522491455078

Token 844: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.8624639324116288e-06
    2. ' ' → logprob: -13.500001907348633
    3. '2' → logprob: -15.875001907348633
    4. '-' → logprob: -16.125001907348633
    5. '   ' → logprob: -16.500001907348633
    6. 'len' → logprob: -16.937501907348633
    7. '
' → logprob: -16.937501907348633
    8. '```' → logprob: -17.875001907348633
    9. '１' → logprob: -18.625001907348633
    10. '0' → logprob: -18.812501907348633

Token 845: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00011093381908722222
    2. ',-' → logprob: -9.375110626220703
    3. ' ,' → logprob: -10.625110626220703
    4. ' -' → logprob: -13.625110626220703
    5. ' ,-' → logprob: -15.750110626220703
    6. '-' → logprob: -16.500110626220703
    7. ',len' → logprob: -16.625110626220703
    8. ',
' → logprob: -16.875110626220703
    9. '0' → logprob: -17.625110626220703
    10. ',r' → logprob: -18.125110626220703

Token 846: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.002827104413881898
    2. ' -' → logprob: -5.877827167510986
    3. 'self' → logprob: -11.127826690673828
    4. '-self' → logprob: -12.502826690673828
    5. ' self' → logprob: -12.877826690673828
    6. ' ' → logprob: -14.252826690673828
    7. '
' → logprob: -15.627826690673828
    8. 'max' → logprob: -15.877826690673828
    9. '   ' → logprob: -16.002826690673828
    10. 'len' → logprob: -16.127826690673828

Token 847: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -7.896309739408025e-07
    2. ' ' → logprob: -14.250000953674316
    3. '
' → logprob: -16.75
    4. '   ' → logprob: -17.625
    5. '```' → logprob: -17.9375
    6. ' -' → logprob: -18.0
    7. '-' → logprob: -18.375
    8. 'len' → logprob: -18.75
    9. '１' → logprob: -19.0
    10. '

' → logprob: -19.0625

Token 848: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.005544055253267288
    2. '-' → logprob: -5.380544185638428
    3. ',-' → logprob: -7.130544185638428
    4. '1' → logprob: -9.13054370880127
    5. ' -' → logprob: -11.63054370880127
    6. ' ,' → logprob: -12.50554370880127
    7. ',
' → logprob: -13.88054370880127
    8. '   ' → logprob: -14.38054370880127
    9. '```' → logprob: -15.38054370880127
    10. ' ,-' → logprob: -15.63054370880127

Token 849: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.0009115827269852161
    2. ' -' → logprob: -7.000911712646484
    3. ' ' → logprob: -17.625911712646484
    4. '           ' → logprob: -18.000911712646484
    5. '   ' → logprob: -18.750911712646484
    6. '```' → logprob: -18.750911712646484
    7. '                   ' → logprob: -19.250911712646484
    8. '               ' → logprob: -19.500911712646484
    9. '-step' → logprob: -19.750911712646484
    10. '       ' → logprob: -19.750911712646484

Token 850: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -16.625
    3. '
' → logprob: -19.75
    4. '   ' → logprob: -20.0
    5. '```' → logprob: -20.375
    6. ')' → logprob: -21.5
    7. '１' → logprob: -21.625
    8. '2' → logprob: -22.4375
    9. '۱' → logprob: -22.625
    10. '  ' → logprob: -22.875

Token 851: '):
' (ID: 1883)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.44048401713371277
    2. ',-' → logprob: -1.0654840469360352
    3. '):
' → logprob: -5.315484046936035
    4. '-' → logprob: -5.690484046936035
    5. '):' → logprob: -6.190484046936035
    6. ' -' → logprob: -7.315484046936035
    7. ' ,' → logprob: -7.940484046936035
    8. ' ,-' → logprob: -8.565484046936035
    9. '):-' → logprob: -9.815484046936035
    10. '   ' → logprob: -10.565484046936035

Token 852: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.039150264114141464
    2. '       ' → logprob: -3.9141502380371094
    3. '<|end|>' → logprob: -4.289150238037109
    4. ' if' → logprob: -5.789150238037109
    5. '           ' → logprob: -7.664150238037109
    6. ',' → logprob: -7.789150238037109
    7. ':' → logprob: -8.28915023803711
    8. '```' → logprob: -9.16415023803711
    9. '<|end|>' → logprob: -10.03915023803711
    10. '                       ' → logprob: -10.16415023803711

Token 853: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.7947574257850647
    2. 'self' → logprob: -1.16975736618042
    3. 'if' (adapté à ' if') → logprob: -1.54475736618042
    4. ' self' → logprob: -3.91975736618042
    5. '               ' → logprob: -5.79475736618042
    6. '[self' → logprob: -7.66975736618042
    7. '(self' → logprob: -7.91975736618042
    8. '                   ' → logprob: -8.294757843017578
    9. '0' → logprob: -9.044757843017578
    10. '=self' → logprob: -9.544757843017578

Token 854: ' stack' (ID: 10825)
  Prédit: 'stack'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'stack' → logprob: -0.04075487330555916
    2. 'len' → logprob: -3.665754795074463
    3. 'r' → logprob: -4.540754795074463
    4. ' stack' → logprob: -5.665754795074463
    5. ' len' → logprob: -9.290755271911621
    6. '   ' → logprob: -10.040755271911621
    7. '(stack' → logprob: -10.165755271911621
    8. ' r' → logprob: -10.790755271911621
    9. '(len' → logprob: -12.040755271911621
    10. '           ' → logprob: -12.540755271911621

Token 855: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.002058903919532895
    2. ':
' → logprob: -6.377058982849121
    3. '                   ' → logprob: -9.002058982849121
    4. '               ' → logprob: -9.502058982849121
    5. '):' → logprob: -9.752058982849121
    6. '):
' → logprob: -11.252058982849121
    7. '```' → logprob: -11.252058982849121
    8. ')' → logprob: -11.377058982849121
    9. '   ' → logprob: -11.502058982849121
    10. 's' → logprob: -11.752058982849121

Token 856: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.12078624218702316
    2. '[self' → logprob: -3.120786190032959
    3. 'self' → logprob: -3.245786190032959
    4. ' self' → logprob: -3.870786190032959
    5. '                       ' → logprob: -5.995786190032959
    6. '<|end|>' → logprob: -6.495786190032959
    7. '               ' → logprob: -6.870786190032959
    8. '.pop' → logprob: -7.495786190032959
    9. '                    
' → logprob: -7.620786190032959
    10. ',' → logprob: -7.620786190032959

Token 857: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.18185575306415558
    2. ' self' → logprob: -1.8068557977676392
    3. '                       ' → logprob: -6.43185567855835
    4. '                   ' → logprob: -8.056856155395508
    5. '	self' → logprob: -9.056856155395508
    6. '               ' → logprob: -11.181856155395508
    7. '   ' → logprob: -11.306856155395508
    8. '[self' → logprob: -11.306856155395508
    9. ' ' → logprob: -11.681856155395508
    10. '	               ' → logprob: -12.431856155395508

Token 858: '.grid' (ID: 19269)
  Prédit: '.grid'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.grid' → logprob: -1.4498052223643754e-05
    2. '.set' → logprob: -11.625014305114746
    3. 'grid' → logprob: -12.250014305114746
    4. '.' → logprob: -14.625014305114746
    5. ' .' → logprob: -16.375015258789062
    6. '	grid' → logprob: -16.500015258789062
    7. ' grid' → logprob: -18.625015258789062
    8. '.gr' → logprob: -19.000015258789062
    9. '```' → logprob: -19.125015258789062
    10. ':grid' → logprob: -19.250015258789062

Token 859: '[r' (ID: 33265)
  Prédit: '[r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[r' → logprob: -2.999452772201039e-05
    2. 'r' → logprob: -10.500029563903809
    3. '[' → logprob: -13.125029563903809
    4. '	r' → logprob: -16.375030517578125
    5. '[self' → logprob: -16.500030517578125
    6. '<|end|>' → logprob: -16.625030517578125
    7. '```' → logprob: -17.500030517578125
    8. ' [' → logprob: -17.625030517578125
    9. '[
' → logprob: -17.875030517578125
    10. '[row' → logprob: -17.875030517578125

Token 860: '][' (ID: 2696)
  Prédit: '[c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[c' → logprob: -0.01937883347272873
    2. '][' → logprob: -4.144378662109375
    3. '[' → logprob: -6.769378662109375
    4. '[r' → logprob: -7.019378662109375
    5. 'c' → logprob: -7.644378662109375
    6. ',c' → logprob: -8.519378662109375
    7. ' [' → logprob: -8.519378662109375
    8. ']' → logprob: -8.769378662109375
    9. ')[' → logprob: -9.644378662109375
    10. ',' → logprob: -10.019378662109375

Token 861: 'c' (ID: 66)
  Prédit: 'stack'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'stack' → logprob: -2.176947600673884e-05
    2. ' stack' → logprob: -10.875021934509277
    3. 'c' → logprob: -12.875021934509277
    4. '
' → logprob: -17.00002098083496
    5. '(stack' → logprob: -17.25002098083496
    6. '	stack' → logprob: -17.25002098083496
    7. '   ' → logprob: -18.25002098083496
    8. 'pop' → logprob: -18.37502098083496
    9. ' ' → logprob: -18.50002098083496
    10. '0' → logprob: -20.12502098083496

Token 862: ']' (ID: 60)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.4765526056289673
    2. ' =' → logprob: -0.9765526056289673
    3. ']' → logprob: -6.101552486419678
    4. ')' → logprob: -8.976552963256836
    5. ']=' → logprob: -9.226552963256836
    6. ')=' → logprob: -12.351552963256836
    7. ',' → logprob: -12.851552963256836
    8. '=
' → logprob: -14.976552963256836
    9. 'stack' → logprob: -14.976552963256836
    10. ' =
' → logprob: -15.851552963256836

Token 863: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0009115827269852161
    2. ' =' → logprob: -7.000911712646484
    3. '=
' → logprob: -18.625911712646484
    4. '=

' → logprob: -19.750911712646484
    5. '.=' → logprob: -20.125911712646484
    6. '＝' → logprob: -21.000911712646484
    7. ',' → logprob: -21.750911712646484
    8. ')=' → logprob: -22.000911712646484
    9. ']=' → logprob: -22.000911712646484
    10. '=}' → logprob: -22.625911712646484

Token 864: ' stack' (ID: 10825)
  Prédit: 'stack'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'stack' → logprob: -0.0007099286303855479
    2. ' stack' → logprob: -7.2507100105285645
    3. '	stack' → logprob: -17.375709533691406
    4. '(stack' → logprob: -19.250709533691406
    5. 'st' → logprob: -20.625709533691406
    6. '   ' → logprob: -20.875709533691406
    7. '.stack' → logprob: -22.250709533691406
    8. ' ' → logprob: -22.500709533691406
    9. '_stack' → logprob: -23.125709533691406
    10. 'stock' → logprob: -23.250709533691406

Token 865: '.pop' (ID: 15746)
  Prédit: '.pop'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.pop' → logprob: -4.008129963040119e-06
    2. 'pop' → logprob: -12.500003814697266
    3. '.' → logprob: -15.250003814697266
    4. '[-' → logprob: -20.125003814697266
    5. '   ' → logprob: -21.625003814697266
    6. 'Pop' → logprob: -22.000003814697266
    7. '	pop' → logprob: -22.125003814697266
    8. ' pop' → logprob: -22.750003814697266
    9. '.Pop' → logprob: -23.250003814697266
    10. '_pop' → logprob: -23.250003814697266

Token 866: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0001649220648687333
    2. '()
' → logprob: -8.750164985656738
    3. '(' → logprob: -12.250164985656738
    4. '()-' → logprob: -14.500164985656738
    5. '0' → logprob: -15.125164985656738
    6. '()

' → logprob: -15.500164985656738
    7. '()%' → logprob: -15.875164985656738
    8. '()>' → logprob: -16.375164031982422
    9. '();' → logprob: -16.500164031982422
    10. '()</' → logprob: -16.625164031982422

Token 867: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0015600931365042925
    2. 'else' → logprob: -6.751560211181641
    3. ' else' → logprob: -7.876560211181641
    4. '       ' → logprob: -12.50156021118164
    5. '           ' → logprob: -13.00156021118164
    6. '			' → logprob: -13.62656021118164
    7. '		       ' → logprob: -14.12656021118164
    8. '```' → logprob: -14.25156021118164
    9. '              ' → logprob: -14.37656021118164
    10. '<|end|>' → logprob: -15.62656021118164

Token 868: ' else' (ID: 1203)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' (adapté à ' else') → logprob: -0.5270184874534607
    2. ' else' → logprob: -1.0270185470581055
    3. '           ' → logprob: -3.0270185470581055
    4. '               ' → logprob: -5.7770185470581055
    5. '       ' → logprob: -12.527018547058105
    6. '	else' → logprob: -13.402018547058105
    7. '   ' → logprob: -14.402018547058105
    8. '            ' → logprob: -15.277018547058105
    9. '             ' → logprob: -15.902018547058105
    10. '		' → logprob: -16.27701759338379

Token 869: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.24710021913051605
    2. '                   ' → logprob: -1.9971002340316772
    3. ':' → logprob: -2.4971001148223877
    4. '           ' → logprob: -7.747100353240967
    5. '               ' → logprob: -8.497099876403809
    6. '   ' → logprob: -9.497099876403809
    7. '                  ' → logprob: -9.997099876403809
    8. 'self' → logprob: -10.497099876403809
    9. '                    ' → logprob: -10.622099876403809
    10. '                       ' → logprob: -10.622099876403809

Token 870: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.04813043773174286
    2. 'self' → logprob: -3.423130512237549
    3. '           ' → logprob: -4.923130512237549
    4. ' self' → logprob: -5.298130512237549
    5. '               ' → logprob: -6.298130512237549
    6. '   ' → logprob: -8.29813003540039
    7. '                       ' → logprob: -11.79813003540039
    8. '       ' → logprob: -13.04813003540039
    9. '                  ' → logprob: -13.92313003540039
    10. '                    ' → logprob: -14.29813003540039

Token 871: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.008737246505916119
    2. ' self' → logprob: -4.758737087249756
    3. '0' → logprob: -9.008737564086914
    4. '                   ' → logprob: -15.383737564086914
    5. ' ' → logprob: -16.133737564086914
    6. '	self' → logprob: -18.133737564086914
    7. '=self' → logprob: -18.883737564086914
    8. '               ' → logprob: -19.133737564086914
    9. '[self' → logprob: -19.758737564086914
    10. '                       ' → logprob: -19.883737564086914

Token 872: '.grid' (ID: 19269)
  Prédit: '.grid'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.grid' → logprob: -7.3458322731312364e-06
    2. '.' → logprob: -12.000007629394531
    3. 'grid' → logprob: -13.875007629394531
    4. ' .' → logprob: -16.12500762939453
    5. '	grid' → logprob: -17.37500762939453
    6. ' grid' → logprob: -18.50000762939453
    7. ':grid' → logprob: -18.50000762939453
    8. '.g' → logprob: -19.37500762939453
    9. '.Grid' → logprob: -19.62500762939453
    10. '.set' → logprob: -19.75000762939453

Token 873: '[r' (ID: 33265)
  Prédit: '[r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[r' → logprob: -4.008129963040119e-06
    2. 'r' → logprob: -12.500003814697266
    3. '[' → logprob: -15.750003814697266
    4. '(r' → logprob: -18.125003814697266
    5. ' [' → logprob: -18.375003814697266
    6. '	r' → logprob: -18.750003814697266
    7. ' r' → logprob: -19.125003814697266
    8. '```' → logprob: -19.250003814697266
    9. '][' → logprob: -19.375003814697266
    10. '0' → logprob: -19.750003814697266

Token 874: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.12724001705646515
    2. '[r' → logprob: -2.127239942550659
    3. '[c' → logprob: -9.377240180969238
    4. '[' → logprob: -9.752240180969238
    5. ' [' → logprob: -10.752240180969238
    6. '               ' → logprob: -10.752240180969238
    7. '   ' → logprob: -11.002240180969238
    8. 'r' → logprob: -11.252240180969238
    9. '           ' → logprob: -11.252240180969238
    10. ']' → logprob: -11.252240180969238

Token 875: 'c' (ID: 66)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.000541592831723392
    2. 'c' → logprob: -7.625541687011719
    3. ' ' → logprob: -9.875541687011719
    4. '   ' → logprob: -14.000541687011719
    5. 'r' → logprob: -14.500541687011719
    6. ' c' → logprob: -15.125541687011719
    7. '     ' → logprob: -16.12554168701172
    8. '  ' → logprob: -16.25054168701172
    9. '-' → logprob: -16.37554168701172
    10. '       ' → logprob: -17.12554168701172

Token 876: ']' (ID: 60)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.725611686706543
    2. ']' → logprob: -0.725611686706543
    3. ' =' → logprob: -3.725611686706543
    4. ']=' → logprob: -4.850611686706543
    5. ' ]' → logprob: -10.975611686706543
    6. ')' → logprob: -13.100611686706543
    7. '[' → logprob: -13.725611686706543
    8. '']=' → logprob: -15.725611686706543
    9. ' ' → logprob: -15.975611686706543
    10. ')=' → logprob: -16.10061264038086

Token 877: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.002476604888215661
    2. ' =' → logprob: -6.002476692199707
    3. '0' → logprob: -14.002476692199707
    4. '=
' → logprob: -16.00247573852539
    5. ' =
' → logprob: -20.50247573852539
    6. '=

' → logprob: -20.62747573852539
    7. '<|end|>' → logprob: -20.75247573852539
    8. ' ' → logprob: -21.50247573852539
    9. ')' → logprob: -21.62747573852539
    10. '＝' → logprob: -22.37747573852539

Token 878: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00020354038861114532
    2. ' ' → logprob: -8.500203132629395
    3. '۰' → logprob: -21.62520408630371
    4. '   ' → logprob: -21.87520408630371
    5. '00' → logprob: -23.37520408630371
    6. '  ' → logprob: -23.37520408630371
    7. ' ' → logprob: -23.62520408630371
    8. '<|end|>' → logprob: -23.87520408630371
    9. '```' → logprob: -24.37520408630371
    10. ' ' → logprob: -24.87520408630371

Token 879: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: 0.0
    2. ' ' → logprob: -20.875
    3. '۰' → logprob: -23.875
    4. '00' → logprob: -24.625
    5. '000' → logprob: -25.25
    6. '０' → logprob: -26.5
    7. '```' → logprob: -26.625
    8. '   ' → logprob: -27.125
    9. '<|end|>' → logprob: -27.25
    10. '০' → logprob: -27.25

Token 880: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5293211936950684
    2. '
' → logprob: -1.6543211936950684
    3. '<|end|>' → logprob: -2.1543211936950684
    4. 'if' → logprob: -2.9043211936950684
    5. ' if' → logprob: -3.1543211936950684
    6. '   ' → logprob: -5.154321193695068
    7. '```' → logprob: -9.029321670532227
    8. 'If' → logprob: -9.279321670532227
    9. '	if' → logprob: -9.529321670532227
    10. ' ' → logprob: -9.529321670532227

Token 881: '       ' (ID: 309)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.18740583956241608
    2. '       ' → logprob: -2.062405824661255
    3. ' if' → logprob: -3.312405824661255
    4. '   ' → logprob: -5.437406063079834
    5. '<|end|>' → logprob: -6.312406063079834
    6. '```' → logprob: -7.437406063079834
    7. '
' → logprob: -7.812406063079834
    8. '	if' → logprob: -9.937405586242676
    9. 'If' → logprob: -10.187405586242676
    10. '@if' → logprob: -10.437405586242676

Token 882: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -9.17420256882906e-05
    2. '       ' → logprob: -10.000091552734375
    3. ' if' → logprob: -10.000091552734375
    4. '   ' → logprob: -14.375091552734375
    5. 'If' → logprob: -16.625091552734375
    6. '```' → logprob: -16.625091552734375
    7. '	if' → logprob: -17.125091552734375
    8. '
' → logprob: -20.125091552734375
    9. '           ' → logprob: -21.125091552734375
    10. '``' → logprob: -21.500091552734375

Token 883: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.03804149478673935
    2. ' self' → logprob: -3.288041591644287
    3. '	self' → logprob: -18.663042068481445
    4. '(self' → logprob: -19.663042068481445
    5. 'elf' → logprob: -19.913042068481445
    6. '   ' → logprob: -20.913042068481445
    7. '
' → logprob: -21.538042068481445
    8. ' ' → logprob: -21.538042068481445
    9. 's' → logprob: -21.788042068481445
    10. '_self' → logprob: -22.038042068481445

Token 884: '.listener' (ID: 88396)
  Prédit: '.listener'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.listener' → logprob: -2.339278580620885e-06
    2. 'listener' → logprob: -13.000001907348633
    3. '.' → logprob: -19.125001907348633
    4. '.listen' → logprob: -19.250001907348633
    5. '(listener' → logprob: -19.375001907348633
    6. '.listeners' → logprob: -20.125001907348633
    7. '.list' → logprob: -20.250001907348633
    8. 'Listener' → logprob: -20.250001907348633
    9. '_listener' → logprob: -21.125001907348633
    10. '.Listener' → logprob: -21.250001907348633

Token 885: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.021158456802368164
    2. ' and' → logprob: -4.896158218383789
    3. 'and' → logprob: -5.396158218383789
    4. ' is' → logprob: -5.521158218383789
    5. ':
' → logprob: -5.896158218383789
    6. '.' → logprob: -6.771158218383789
    7. ')' → logprob: -7.646158218383789
    8. '<|end|>' → logprob: -8.396158218383789
    9. 'is' → logprob: -9.271158218383789
    10. '   ' → logprob: -10.021158218383789

Token 886: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.000453910295618698
    2. ' self' → logprob: -8.62545394897461
    3. '       ' → logprob: -9.00045394897461
    4. 'self' → logprob: -9.12545394897461
    5. '(self' → logprob: -10.62545394897461
    6. '	       ' → logprob: -12.12545394897461
    7. '<|end|>' → logprob: -12.75045394897461
    8. '   ' → logprob: -13.25045394897461
    9. '		' → logprob: -13.37545394897461
    10. ',' → logprob: -14.12545394897461

Token 887: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.0005896099028177559
    2. ' self' → logprob: -7.750589847564697
    3. '           ' → logprob: -8.750589370727539
    4. '       ' → logprob: -14.750589370727539
    5. '	self' → logprob: -15.875589370727539
    6. '               ' → logprob: -17.00058937072754
    7. '   ' → logprob: -17.37558937072754
    8. '[self' → logprob: -18.50058937072754
    9. ' ' → logprob: -19.87558937072754
    10. '(self' → logprob: -20.37558937072754

Token 888: '.listener' (ID: 88396)
  Prédit: '.listener'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.listener' → logprob: -1.4617256056226324e-05
    2. '.' → logprob: -11.875014305114746
    3. 'listener' → logprob: -11.875014305114746
    4. '.listen' → logprob: -14.625014305114746
    5. '.list' → logprob: -17.750015258789062
    6. '.listeners' → logprob: -18.000015258789062
    7. '(listener' → logprob: -18.500015258789062
    8. ' .' → logprob: -18.625015258789062
    9. '.Listener' → logprob: -18.875015258789062
    10. '
' → logprob: -19.125015258789062

Token 889: '.on' (ID: 5158)
  Prédit: '.on'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.on' → logprob: -3.128163257315464e-07
    2. '.' → logprob: -15.5
    3. '.On' → logprob: -19.0
    4. '.onload' → logprob: -19.5
    5. ' .' → logprob: -20.25
    6. 'on' → logprob: -20.625
    7. '.after' → logprob: -20.625
    8. '	on' → logprob: -21.0
    9. '.onerror' → logprob: -21.5
    10. '.when' → logprob: -21.625

Token 890: '_blocks' (ID: 60244)
  Prédit: '_blocks'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_blocks' → logprob: -1.1472419600977446e-06
    2. 'blocks' → logprob: -13.750000953674316
    3. '_block' → logprob: -18.125001907348633
    4. '_f' → logprob: -19.750001907348633
    5. ' blocks' → logprob: -20.125001907348633
    6. '_bloc' → logprob: -20.625001907348633
    7. '_' → logprob: -21.250001907348633
    8. 'Blocks' → logprob: -21.250001907348633
    9. '_gr' → logprob: -21.250001907348633
    10. '_b' → logprob: -21.875001907348633

Token 891: '_f' (ID: 1337)
  Prédit: '_f'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_f' → logprob: 0.0
    2. 'fallen' → logprob: -17.125
    3. '_' → logprob: -17.75
    4. '__' → logprob: -19.5
    5. 'f' → logprob: -19.875
    6. 'er' → logprob: -20.0
    7. '_g' → logprob: -20.375
    8. '_er' → logprob: -20.375
    9. '_failed' → logprob: -20.625
    10. 'F' → logprob: -20.75

Token 892: 'allen' (ID: 18385)
  Prédit: 'allen'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'allen' → logprob: -3.273621405242011e-05
    2. 'all' → logprob: -10.375032424926758
    3. 'fallen' → logprob: -14.500032424926758
    4. 'a' → logprob: -14.750032424926758
    5. 'alled' → logprob: -15.875032424926758
    6. 'ollen' → logprob: -16.375032424926758
    7. '
' → logprob: -16.375032424926758
    8. 'alls' → logprob: -16.625032424926758
    9. '{' → logprob: -16.875032424926758
    10. 'aller' → logprob: -17.000032424926758

Token 893: '()

' (ID: 5874)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0012255854671820998
    2. '()
' → logprob: -6.751225471496582
    3. '()\' → logprob: -10.251225471496582
    4. '<|end|>' → logprob: -11.376225471496582
    5. '()

' → logprob: -12.001225471496582
    6. '()<' → logprob: -14.376225471496582
    7. '())' → logprob: -15.001225471496582
    8. '().' → logprob: -15.126225471496582
    9. '()?' → logprob: -15.126225471496582
    10. '(' → logprob: -15.376225471496582

Token 894: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5869984030723572
    2. 'def' → logprob: -1.586998462677002
    3. '<|end|>' → logprob: -2.086998462677002
    4. '
' → logprob: -2.211998462677002
    5. '<|end|>' → logprob: -6.086998462677002
    6. '```' → logprob: -6.586998462677002
    7. '    
' → logprob: -7.086998462677002
    8. ' def' → logprob: -7.711998462677002
    9. '\n' → logprob: -8.211997985839844
    10. '[' → logprob: -8.961997985839844

Token 895: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.0015158153837546706
    2. '   ' → logprob: -6.501515865325928
    3. ' def' → logprob: -11.25151538848877
    4. '	def' → logprob: -15.00151538848877
    5. '
' → logprob: -16.626516342163086
    6. '```' → logprob: -17.001516342163086
    7. '#' → logprob: -17.376516342163086
    8. 'ndef' → logprob: -17.626516342163086
    9. '       ' → logprob: -18.001516342163086
    10. '    
' → logprob: -18.501516342163086

Token 896: ' do' (ID: 621)
  Prédit: 'resolve'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'resolve' → logprob: -0.7171986699104309
    2. 'process' → logprob: -1.0921986103057861
    3. 'perform' → logprob: -2.467198610305786
    4. 'clear' → logprob: -3.842198610305786
    5. ' resolve' → logprob: -4.342198848724365
    6. 'remove' → logprob: -4.592198848724365
    7. 'play' → logprob: -4.717198848724365
    8. ' process' → logprob: -5.092198848724365
    9. ' perform' → logprob: -5.342198848724365
    10. 'apply' → logprob: -5.717198848724365

Token 897: '_full' (ID: 36973)
  Prédit: '_chain'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_chain' → logprob: -0.7830618619918823
    2. '_move' → logprob: -1.6580618619918823
    3. '_turn' → logprob: -1.9080618619918823
    4. '_' → logprob: -2.658061981201172
    5. '_full' → logprob: -3.033061981201172
    6. '_moves' → logprob: -3.908061981201172
    7. '_matches' → logprob: -4.033061981201172
    8. '_match' → logprob: -4.533061981201172
    9. '_step' → logprob: -4.783061981201172
    10. '_swap' → logprob: -5.033061981201172

Token 898: '_el' (ID: 55168)
  Prédit: '_cycle'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_cycle' → logprob: -1.2641613483428955
    2. '_clear' → logprob: -1.5141613483428955
    3. '_chain' → logprob: -2.0141613483428955
    4. '_' → logprob: -2.0141613483428955
    5. '_c' → logprob: -2.0141613483428955
    6. '_process' → logprob: -4.014161109924316
    7. '_match' → logprob: -4.264161109924316
    8. '_step' → logprob: -4.639161109924316
    9. '_cleanup' → logprob: -4.639161109924316
    10. '_round' → logprob: -4.639161109924316

Token 899: 'imination' (ID: 34362)
  Prédit: 'imination'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'imination' → logprob: -0.2988494634628296
    2. 'ase' → logprob: -2.048849582672119
    3. 'iminate' → logprob: -2.298849582672119
    4. 'im' → logprob: -3.673849582672119
    5. 'apse' → logprob: -6.548849582672119
    6. 'imation' → logprob: -7.048849582672119
    7. 'as' → logprob: -8.548849105834961
    8. 'ease' → logprob: -8.673849105834961
    9. 'imin' → logprob: -8.798849105834961
    10. 'imate' → logprob: -8.923849105834961

Token 900: '_cycle' (ID: 97714)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.16219325363636017
    2. '(' → logprob: -1.9121932983398438
    3. 'self' → logprob: -6.412193298339844
    4. '_' → logprob: -9.037193298339844
    5. '_(' → logprob: -9.537193298339844
    6. ' (' → logprob: -9.787193298339844
    7. '   ' → logprob: -10.662193298339844
    8. 's' → logprob: -11.162193298339844
    9. '()' → logprob: -11.162193298339844
    10. '       ' → logprob: -11.912193298339844

Token 901: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.018294163048267365
    2. '(' → logprob: -4.018294334411621
    3. ' (' → logprob: -9.018294334411621
    4. 'self' → logprob: -10.768294334411621
    5. '   ' → logprob: -13.518294334411621
    6. '       ' → logprob: -15.643294334411621
    7. '(
' → logprob: -15.768294334411621
    8. ' ' → logprob: -16.143293380737305
    9. ' self' → logprob: -16.768293380737305
    10. 's' → logprob: -16.768293380737305

Token 902: '):
' (ID: 1883)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.006318023893982172
    2. 'self' → logprob: -5.756318092346191
    3. '):
' → logprob: -6.506318092346191
    4. '):' → logprob: -6.881318092346191
    5. '(' → logprob: -8.006318092346191
    6. '   ' → logprob: -8.756318092346191
    7. '       ' → logprob: -10.256318092346191
    8. ')(' → logprob: -10.506318092346191
    9. ' (' → logprob: -10.756318092346191
    10. ')' → logprob: -10.881318092346191

Token 903: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0039761741645634174
    2. '
' → logprob: -6.503976345062256
    3. '   ' → logprob: -6.503976345062256
    4. 'while' → logprob: -8.128975868225098
    5. 'positions' → logprob: -8.128975868225098
    6. '```' → logprob: -8.503975868225098
    7. 'self' → logprob: -9.628975868225098
    8. ' while' → logprob: -10.753975868225098
    9. '        
' → logprob: -10.753975868225098
    10. 'def' → logprob: -11.128975868225098

Token 904: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.41945865750312805
    2. 'while' → logprob: -1.5444586277008057
    3. ' while' → logprob: -2.6694586277008057
    4. 'positions' → logprob: -2.9194586277008057
    5. ' positions' → logprob: -5.419458866119385
    6. 'to' → logprob: -7.169458866119385
    7. ' to' → logprob: -8.419458389282227
    8. '   ' → logprob: -9.294458389282227
    9. '```' → logprob: -9.294458389282227
    10. 'changed' → logprob: -9.419458389282227

Token 905: ' Perform' (ID: 36780)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.01569294184446335
    2. '       ' → logprob: -5.015692710876465
    3. 'positions' → logprob: -5.015692710876465
    4. ' while' → logprob: -6.890692710876465
    5. 'changed' → logprob: -6.890692710876465
    6. 'total' → logprob: -9.390692710876465
    7. 'def' → logprob: -10.140692710876465
    8. ' positions' → logprob: -10.390692710876465
    9. 'to' → logprob: -10.515692710876465
    10. 'removed' → logprob: -10.515692710876465

Token 906: ' elimination' (ID: 77324)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.0016244759317487478
    2. 'changed' → logprob: -6.876624584197998
    3. '       ' → logprob: -8.37662410736084
    4. ' while' → logprob: -9.00162410736084
    5. 'def' → logprob: -9.75162410736084
    6. 'el' → logprob: -10.25162410736084
    7. 'total' → logprob: -10.25162410736084
    8. 'score' → logprob: -10.37662410736084
    9. 'removed' → logprob: -10.62662410736084
    10. 'positions' → logprob: -11.25162410736084

Token 907: ',' (ID: 11)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.3105761706829071
    2. '       ' → logprob: -1.8105762004852295
    3. ' cycle' → logprob: -3.1855762004852295
    4. 'cycle' → logprob: -3.4355762004852295
    5. ' while' → logprob: -4.06057596206665
    6. '   ' → logprob: -6.06057596206665
    7. '
' → logprob: -6.18557596206665
    8. '_cycle' → logprob: -6.31057596206665
    9. 'def' → logprob: -6.68557596206665
    10. 'self' → logprob: -6.68557596206665

Token 908: ' gravity' (ID: 44967)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.053009361028671265
    2. '       ' → logprob: -3.928009271621704
    3. 'changed' → logprob: -4.303009510040283
    4. ' while' → logprob: -4.553009510040283
    5. 'positions' → logprob: -5.803009510040283
    6. 'score' → logprob: -6.428009510040283
    7. 'chain' → logprob: -6.803009510040283
    8. 'self' → logprob: -6.803009510040283
    9. 'sc' → logprob: -9.053009033203125
    10. 'found' → logprob: -9.303009033203125

Token 909: ',' (ID: 11)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.6371294856071472
    2. ',' → logprob: -1.762129545211792
    3. '       ' → logprob: -1.887129545211792
    4. 'and' → logprob: -2.762129545211792
    5. ' and' → logprob: -2.887129545211792
    6. ' while' → logprob: -3.637129545211792
    7. '
' → logprob: -6.637129306793213
    8. '```' → logprob: -8.762129783630371
    9. 'positions' → logprob: -9.137129783630371
    10. '   ' → logprob: -9.137129783630371

Token 910: ' bonus' (ID: 11181)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.3025689721107483
    2. 'and' → logprob: -2.0525689125061035
    3. '       ' → logprob: -2.9275689125061035
    4. 'matches' → logprob: -3.3025689125061035
    5. ' while' → logprob: -4.1775689125061035
    6. ' and' → logprob: -4.5525689125061035
    7. 'self' → logprob: -5.0525689125061035
    8. 'repeat' → logprob: -5.4275689125061035
    9. 'score' → logprob: -6.5525689125061035
    10. '#' → logprob: -6.6775689125061035

Token 911: ' increments' (ID: 124105)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.052085600793361664
    2. '=' → logprob: -4.0520853996276855
    3. '   ' → logprob: -4.5520853996276855
    4. '       ' → logprob: -5.6770853996276855
    5. ',' → logprob: -5.6770853996276855
    6. '_ap' → logprob: -5.8020853996276855
    7. '_increment' → logprob: -5.9270853996276855
    8. '_cycle' → logprob: -6.5520853996276855
    9. 'ap' → logprob: -6.6770853996276855
    10. 'increase' → logprob: -6.9270853996276855

Token 912: ' until' (ID: 4609)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.21680209040641785
    2. '
' → logprob: -2.3418021202087402
    3. 'while' → logprob: -2.4668021202087402
    4. '   ' → logprob: -4.71680212020874
    5. 'def' → logprob: -6.59180212020874
    6. ' while' → logprob: -6.84180212020874
    7. ',' → logprob: -6.84180212020874
    8. '()
' → logprob: -7.84180212020874
    9. 'self' → logprob: -8.216801643371582
    10. 'and' → logprob: -8.591801643371582

Token 913: ' no' (ID: 860)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'True' → logprob: -0.000565541791729629
    2. ' True' → logprob: -7.500565528869629
    3. '   ' → logprob: -12.250565528869629
    4. '(True' → logprob: -12.625565528869629
    5. '
' → logprob: -13.125565528869629
    6. '       ' → logprob: -13.500565528869629
    7. 'true' → logprob: -13.875565528869629
    8. 'not' → logprob: -16.625566482543945
    9. '     ' → logprob: -16.750566482543945
    10. '           ' → logprob: -17.125566482543945

Token 914: ' more' (ID: 945)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'True' → logprob: -0.0233379527926445
    2. ' True' → logprob: -3.7733378410339355
    3. 'true' → logprob: -10.273338317871094
    4. 'self' → logprob: -10.398338317871094
    5. '(True' → logprob: -11.523338317871094
    6. 'positions' → logprob: -12.273338317871094
    7. '   ' → logprob: -12.398338317871094
    8. '       ' → logprob: -12.523338317871094
    9. 'matches' → logprob: -12.898338317871094
    10. '
' → logprob: -14.273338317871094

Token 915: ' matches' (ID: 15248)
  Prédit: 'matches'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'matches' → logprob: -0.15298587083816528
    2. 'to' → logprob: -2.6529858112335205
    3. 'positions' → logprob: -3.2779858112335205
    4. ' matches' → logprob: -3.7779858112335205
    5. ' to' → logprob: -5.4029860496521
    6. '       ' → logprob: -5.4029860496521
    7. ' positions' → logprob: -7.0279860496521
    8. 'matched' → logprob: -8.027985572814941
    9. 'changes' → logprob: -9.027985572814941
    10. '```' → logprob: -9.277985572814941

Token 916: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.04096566513180733
    2. '
' → logprob: -3.7909655570983887
    3. ':
' → logprob: -5.165965557098389
    4. ' while' → logprob: -5.165965557098389
    5. '():
' → logprob: -5.665965557098389
    6. 'while' → logprob: -6.915965557098389
    7. ':' → logprob: -7.165965557098389
    8. '()
' → logprob: -8.165966033935547
    9. '):
' → logprob: -8.790966033935547
    10. ',' → logprob: -9.040966033935547

Token 917: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.02356165088713169
    2. '
' → logprob: -3.773561716079712
    3. ' while' → logprob: -9.648561477661133
    4. 'while' → logprob: -9.898561477661133
    5. '   ' → logprob: -10.023561477661133
    6. '```' → logprob: -10.523561477661133
    7. '        
' → logprob: -10.648561477661133
    8. ':
' → logprob: -10.773561477661133
    9. '    
' → logprob: -11.148561477661133
    10. ':' → logprob: -11.148561477661133

Token 918: ' while' (ID: 2049)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' (adapté à ' while') → logprob: -0.036841973662376404
    2. '       ' → logprob: -3.411841869354248
    3. 'positions' → logprob: -7.036841869354248
    4. 'bonus' → logprob: -7.161841869354248
    5. 'total' → logprob: -7.536841869354248
    6. 'matches' → logprob: -8.036842346191406
    7. ' while' → logprob: -8.286842346191406
    8. 'self' → logprob: -8.786842346191406
    9. 'changed' → logprob: -9.411842346191406
    10. 'score' → logprob: -9.536842346191406

Token 919: ' True' (ID: 6432)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'True' → logprob: -0.023303363472223282
    2. ' True' → logprob: -3.773303270339966
    3. '(True' → logprob: -9.773303031921387
    4. '   ' → logprob: -14.148303031921387
    5. 'true' → logprob: -15.523303031921387
    6. '
' → logprob: -16.523303985595703
    7. '(' → logprob: -18.148303985595703
    8. ' ' → logprob: -18.148303985595703
    9. '=True' → logprob: -18.398303985595703
    10. '```' → logprob: -18.523303985595703

Token 920: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.5779215693473816
    2. ':' → logprob: -0.8279215693473816
    3. '           ' → logprob: -6.327921390533447
    4. '):
' → logprob: -9.327921867370605
    5. ':
' → logprob: -10.577921867370605
    6. '       ' → logprob: -11.077921867370605
    7. ':

' → logprob: -11.202921867370605
    8. ',' → logprob: -11.327921867370605
    9. '<|end|>' → logprob: -11.577921867370605
    10. '<|end|>' → logprob: -11.702921867370605

Token 921: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.05656133219599724
    2. 'positions' → logprob: -2.931561231613159
    3. ' positions' → logprob: -7.306561470031738
    4. 'to' → logprob: -7.556561470031738
    5. 'matches' → logprob: -8.181561470031738
    6. ' to' → logprob: -9.681561470031738
    7. ' matches' → logprob: -9.931561470031738
    8. '```' → logprob: -10.681561470031738
    9. '       ' → logprob: -11.056561470031738
    10. '_positions' → logprob: -11.306561470031738

Token 922: ' matches' (ID: 15248)
  Prédit: 'positions'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'positions' → logprob: -0.583423376083374
    2. 'matches' (adapté à ' matches') → logprob: -1.333423376083374
    3. 'to' → logprob: -1.958423376083374
    4. '           ' → logprob: -4.208423614501953
    5. ' positions' → logprob: -4.458423614501953
    6. ' matches' → logprob: -5.083423614501953
    7. ' to' → logprob: -5.458423614501953
    8. 'matched' → logprob: -8.208423614501953
    9. 'match' → logprob: -9.583423614501953
    10. 'pos' → logprob: -10.333423614501953

Token 923: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.008616935461759567
    2. '=' → logprob: -4.758616924285889
    3. ':' → logprob: -13.008617401123047
    4. '=self' → logprob: -16.258617401123047
    5. ':=' → logprob: -17.508617401123047
    6. ' :=' → logprob: -17.633617401123047
    7. ' =)' → logprob: -17.633617401123047
    8. '=set' → logprob: -17.758617401123047
    9. '_positions' → logprob: -18.133617401123047
    10. '<|end|>' → logprob: -18.258617401123047

Token 924: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -2.7848862373502925e-05
    2. ' self' → logprob: -10.500027656555176
    3. '(self' → logprob: -15.500027656555176
    4. '=self' → logprob: -17.125028610229492
    5. '[self' → logprob: -18.750028610229492
    6. '	self' → logprob: -19.125028610229492
    7. '       ' → logprob: -20.625028610229492
    8. 's' → logprob: -21.625028610229492
    9. 'this' → logprob: -21.750028610229492
    10. '`' → logprob: -22.125028610229492

Token 925: '.find' (ID: 4231)
  Prédit: '.find'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.find' → logprob: -0.00021259987261146307
    2. 'find' → logprob: -8.500212669372559
    3. '.' → logprob: -11.625212669372559
    4. ' .' → logprob: -16.500211715698242
    5. ' find' → logprob: -17.250211715698242
    6. '.findall' → logprob: -17.750211715698242
    7. '=find' → logprob: -18.125211715698242
    8. '	find' → logprob: -18.625211715698242
    9. '   ' → logprob: -19.250211715698242
    10. '(find' → logprob: -19.875211715698242

Token 926: '_matches' (ID: 97462)
  Prédit: '_matches'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_matches' → logprob: -0.0004894073354080319
    2. 'matches' → logprob: -7.625489234924316
    3. '_' → logprob: -14.250489234924316
    4. '(matches' → logprob: -16.125490188598633
    5. ' matches' → logprob: -16.375490188598633
    6. 'Matches' → logprob: -16.625490188598633
    7. '_match' → logprob: -16.875490188598633
    8. '_moves' → logprob: -16.875490188598633
    9. 's' → logprob: -16.875490188598633
    10. '```' → logprob: -17.125490188598633

Token 927: '()
' (ID: 1234)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.07756008952856064
    2. '       ' → logprob: -3.7025601863861084
    3. '()' → logprob: -3.9525601863861084
    4. '()
' → logprob: -4.202559947967529
    5. '
' → logprob: -4.702559947967529
    6. '<|end|>' → logprob: -6.202559947967529
    7. '               ' → logprob: -6.327559947967529
    8. '            
' → logprob: -7.452559947967529
    9. ')' → logprob: -7.702559947967529
    10. '<|end|>' → logprob: -8.077560424804688

Token 928: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -9.865583706414327e-05
    2. '<|end|>' → logprob: -9.75009822845459
    3. ' if' → logprob: -11.12509822845459
    4. '       ' → logprob: -12.00009822845459
    5. '            
' → logprob: -12.25009822845459
    6. '<|end|>' → logprob: -12.62509822845459
    7. '               ' → logprob: -12.87509822845459
    8. ',' → logprob: -13.00009822845459
    9. '
' → logprob: -13.37509822845459
    10. '		' → logprob: -14.00009822845459

Token 929: ' if' (ID: 538)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.006647398695349693
    2. 'if' (adapté à ' if') → logprob: -5.13164758682251
    3. ' if' → logprob: -7.25664758682251
    4. '   ' → logprob: -12.131647109985352
    5. '       ' → logprob: -12.756647109985352
    6. '		' → logprob: -13.506647109985352
    7. ' ' → logprob: -14.131647109985352
    8. '          ' → logprob: -14.131647109985352
    9. '               ' → logprob: -14.256647109985352
    10. '	if' → logprob: -14.881647109985352

Token 930: ' not' (ID: 625)
  Prédit: 'not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'not' → logprob: -0.04859168455004692
    2. ' not' → logprob: -3.0485916137695312
    3. 'len' → logprob: -13.173591613769531
    4. '
' → logprob: -14.423591613769531
    5. '   ' → logprob: -14.673591613769531
    6. 'matches' → logprob: -14.673591613769531
    7. '!' → logprob: -14.923591613769531
    8. '

' → logprob: -15.798591613769531
    9. '       ' → logprob: -15.798591613769531
    10. '(not' → logprob: -16.29859161376953

Token 931: ' matches' (ID: 15248)
  Prédit: 'matches'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'matches' → logprob: -0.001170460251159966
    2. ' matches' → logprob: -6.751170635223389
    3. 'match' → logprob: -16.251171112060547
    4. '(matches' → logprob: -16.251171112060547
    5. 'matched' → logprob: -19.251171112060547
    6. 'mat' → logprob: -19.251171112060547
    7. '   ' → logprob: -19.751171112060547
    8. '.matches' → logprob: -19.876171112060547
    9. '
' → logprob: -20.001171112060547
    10. 'matching' → logprob: -20.001171112060547

Token 932: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.004092766437679529
    2. ':
' → logprob: -5.504092693328857
    3. ':return' → logprob: -11.629093170166016
    4. ':
' → logprob: -13.004093170166016
    5. ' :' → logprob: -13.504093170166016
    6. '):' → logprob: -13.754093170166016
    7. '.' → logprob: -15.629093170166016
    8. 'break' → logprob: -15.879093170166016
    9. ')' → logprob: -16.254093170166016
    10. '):
' → logprob: -16.504093170166016

Token 933: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0007773502147756517
    2. ':
' → logprob: -7.500777244567871
    3. '           ' → logprob: -8.625777244567871
    4. ':' → logprob: -10.125777244567871
    5. 'break' → logprob: -13.875777244567871
    6. '):
' → logprob: -14.125777244567871
    7. '                   ' → logprob: -14.125777244567871
    8. ' break' → logprob: -14.250777244567871
    9. '              ' → logprob: -14.625777244567871
    10. ',' → logprob: -14.875777244567871

Token 934: ' break' (ID: 2338)
  Prédit: ' break'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' break' → logprob: -0.6771389842033386
    2. 'break' (adapté à ' break') → logprob: -0.9271389842033386
    3. '               ' → logprob: -2.4271390438079834
    4. '           ' → logprob: -4.927138805389404
    5. 'return' → logprob: -7.927138805389404
    6. '	break' → logprob: -8.802139282226562
    7. ' return' → logprob: -9.302139282226562
    8. '   ' → logprob: -10.052139282226562
    9. '                   ' → logprob: -10.677139282226562
    10. '_break' → logprob: -11.302139282226562

Token 935: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.009800834581255913
    2. '
' → logprob: -4.634800910949707
    3. '            
' → logprob: -10.509800910949707
    4. 'self' → logprob: -11.384800910949707
    5. '    
' → logprob: -13.009800910949707
    6. ' self' → logprob: -13.759800910949707
    7. '
' → logprob: -13.759800910949707
    8. ',' → logprob: -15.259800910949707
    9. '```' → logprob: -15.259800910949707
    10. '       ' → logprob: -15.634800910949707

Token 936: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0011345010716468096
    2. '
' → logprob: -6.876134395599365
    3. 'self' → logprob: -9.626134872436523
    4. '            
' → logprob: -10.876134872436523
    5. ' self' → logprob: -12.001134872436523
    6. '       ' → logprob: -12.626134872436523
    7. '    
' → logprob: -13.126134872436523
    8. '```' → logprob: -13.126134872436523
    9. '        
' → logprob: -14.126134872436523
    10. '  
' → logprob: -14.501134872436523

Token 937: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.08441392332315445
    2. ' self' → logprob: -2.834414005279541
    3. '           ' → logprob: -3.834414005279541
    4. '       ' → logprob: -7.584414005279541
    5. '
' → logprob: -9.709413528442383
    6. '   ' → logprob: -11.959413528442383
    7. '	self' → logprob: -13.334413528442383
    8. ' ' → logprob: -13.459413528442383
    9. '```' → logprob: -13.709413528442383
    10. '(self' → logprob: -14.084413528442383

Token 938: '.erase' (ID: 62524)
  Prédit: '.erase'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.erase' → logprob: -0.0003048378275707364
    2. '.' → logprob: -8.25030517578125
    3. '.er' → logprob: -10.25030517578125
    4. '.b' → logprob: -11.87530517578125
    5. ' .' → logprob: -14.25030517578125
    6. 'erase' → logprob: -15.12530517578125
    7. '   ' → logprob: -15.75030517578125
    8. ' erase' → logprob: -16.62530517578125
    9. '_.' → logprob: -17.25030517578125
    10. '.raise' → logprob: -17.62530517578125

Token 939: '_blocks' (ID: 60244)
  Prédit: '_blocks'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_blocks' → logprob: -4.320199877838604e-07
    2. 'blocks' → logprob: -15.0
    3. ' blocks' → logprob: -19.0
    4. '_block' → logprob: -19.5
    5. '```' → logprob: -20.0
    6. '_bloc' → logprob: -20.25
    7. '_' → logprob: -20.5
    8. 'Blocks' → logprob: -20.5
    9. '.blocks' → logprob: -21.125
    10. '_
' → logprob: -22.0

Token 940: '(matches' (ID: 126280)
  Prédit: '(matches'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(matches' → logprob: -1.981667537620524e-06
    2. '(' → logprob: -13.375001907348633
    3. '(match' → logprob: -15.000001907348633
    4. '(
' → logprob: -16.500001907348633
    5. 'matches' → logprob: -17.625001907348633
    6. ' (' → logprob: -17.750001907348633
    7. '((' → logprob: -18.875001907348633
    8. '(m' → logprob: -19.250001907348633
    9. '(mat' → logprob: -19.750001907348633
    10. ' matches' → logprob: -20.750001907348633

Token 941: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.6935014128684998
    2. ')
' → logprob: -0.6935014128684998
    3. '           ' → logprob: -8.193501472473145
    4. '
' → logprob: -10.318501472473145
    5. ')
' → logprob: -11.193501472473145
    6. 'self' → logprob: -11.943501472473145
    7. ')set' → logprob: -12.068501472473145
    8. ',' → logprob: -12.193501472473145
    9. '       ' → logprob: -12.818501472473145
    10. '()
' → logprob: -13.443501472473145

Token 942: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0002319071936653927
    2. 'self' → logprob: -8.500231742858887
    3. '       ' → logprob: -10.875231742858887
    4. ' self' → logprob: -12.250231742858887
    5. '   ' → logprob: -12.375231742858887
    6. '
' → logprob: -15.375231742858887
    7. '```' → logprob: -15.625231742858887
    8. ' ' → logprob: -17.250232696533203
    9. '          ' → logprob: -17.625232696533203
    10. '<|end|>' → logprob: -17.875232696533203

Token 943: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.0033357522916048765
    2. '           ' → logprob: -5.753335952758789
    3. ' self' → logprob: -8.753335952758789
    4. '   ' → logprob: -17.25333595275879
    5. '
' → logprob: -17.87833595275879
    6. '       ' → logprob: -17.87833595275879
    7. '               ' → logprob: -18.12833595275879
    8. '	self' → logprob: -18.37833595275879
    9. ' ' → logprob: -18.50333595275879
    10. '[self' → logprob: -19.00333595275879

Token 944: '.apply' (ID: 23624)
  Prédit: '.apply'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.apply' → logprob: -2.951771421066951e-05
    2. 'apply' → logprob: -10.875029563903809
    3. '.' → logprob: -11.500029563903809
    4. ' .' → logprob: -15.250029563903809
    5. ' apply' → logprob: -16.125028610229492
    6. '.b' → logprob: -18.250028610229492
    7. '   ' → logprob: -18.375028610229492
    8. '.Apply' → logprob: -20.000028610229492
    9. '.ap' → logprob: -20.500028610229492
    10. '.app' → logprob: -20.500028610229492

Token 945: '_gr' (ID: 30286)
  Prédit: '_gr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_gr' → logprob: 0.0
    2. 'gravity' → logprob: -18.25
    3. '_g' → logprob: -19.375
    4. '_GR' → logprob: -20.375
    5. '_' → logprob: -22.25
    6. '_grad' → logprob: -23.0
    7. 'gr' → logprob: -23.0
    8. ' gravity' → logprob: -23.625
    9. '\' → logprob: -23.875
    10. '_ag' → logprob: -24.125

Token 946: 'avity' (ID: 25292)
  Prédit: 'avity'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'avity' → logprob: -6.704273118884885e-07
    2. 'av' → logprob: -15.375000953674316
    3. 'acity' → logprob: -15.625000953674316
    4. 'a' → logprob: -15.625000953674316
    5. 'v' → logprob: -16.625
    6. 'avit' → logprob: -18.625
    7. 'gravity' → logprob: -19.0
    8. 'arity' → logprob: -19.125
    9. 'ity' → logprob: -19.5
    10. 'ivity' → logprob: -19.5

Token 947: '()
' (ID: 1234)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.14284102618694305
    2. '           ' → logprob: -2.017841100692749
    3. '<|end|>' → logprob: -9.392841339111328
    4. '       ' → logprob: -10.767841339111328
    5. '
' → logprob: -11.017841339111328
    6. 'self' → logprob: -11.142841339111328
    7. '            
' → logprob: -11.642841339111328
    8. ' 
' → logprob: -12.517841339111328
    9. '  
' → logprob: -12.642841339111328
    10. '```' → logprob: -12.767841339111328

Token 948: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0002273774443892762
    2. '       ' → logprob: -8.500226974487305
    3. '   ' → logprob: -11.250226974487305
    4. '<|end|>' → logprob: -11.875226974487305
    5. 'self' → logprob: -13.250226974487305
    6. '```' → logprob: -14.000226974487305
    7. '               ' → logprob: -14.500226974487305
    8. '
' → logprob: -15.500226974487305
    9. '	       ' → logprob: -16.000226974487305
    10. ' ' → logprob: -16.375226974487305

Token 949: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.00016325322212651372
    2. '           ' → logprob: -8.750163078308105
    3. ' self' → logprob: -12.250163078308105
    4. '   ' → logprob: -18.625164031982422
    5. '	self' → logprob: -20.125164031982422
    6. '       ' → logprob: -21.000164031982422
    7. ' ' → logprob: -21.375164031982422
    8. '  ' → logprob: -22.125164031982422
    9. '(self' → logprob: -22.250164031982422
    10. '               ' → logprob: -22.250164031982422

Token 950: '.b' (ID: 1292)
  Prédit: '.b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.b' → logprob: -0.0007113590254448354
    2. '.' → logprob: -7.250711441040039
    3. ' .' → logprob: -13.750711441040039
    4. '.bump' → logprob: -15.250711441040039
    5. '.increment' → logprob: -16.87571144104004
    6. '.B' → logprob: -17.62571144104004
    7. '​.' → logprob: -17.75071144104004
    8. '   ' → logprob: -17.87571144104004
    9. 'bonus' → logprob: -18.12571144104004
    10. ').' → logprob: -18.25071144104004

Token 951: 'onus' (ID: 68752)
  Prédit: 'onus'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'onus' → logprob: -3.054500666621607e-06
    2. 'on' → logprob: -12.75000286102295
    3. 'o' → logprob: -18.250003814697266
    4. 'bonus' → logprob: -18.500003814697266
    5. '   ' → logprob: -19.000003814697266
    6. 'ons' → logprob: -19.250003814697266
    7. 'онус' → logprob: -19.375003814697266
    8. 'onu' → logprob: -19.625003814697266
    9. 'onis' → logprob: -19.875003814697266
    10. 'ônus' → logprob: -20.125003814697266

Token 952: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.06391448527574539
    2. ' +=' → logprob: -3.0639145374298096
    3. '*=' → logprob: -4.3139142990112305
    4. ' *=' → logprob: -6.3139142990112305
    5. '=' → logprob: -11.06391429901123
    6. '*' → logprob: -13.06391429901123
    7. '   ' → logprob: -15.93891429901123
    8. ']+=' → logprob: -15.93891429901123
    9. ' ' → logprob: -16.938915252685547
    10. ' <<=' → logprob: -17.063915252685547

Token 953: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0006296366918832064
    2. ' ' → logprob: -7.375629425048828
    3. '2' → logprob: -13.250629425048828
    4. '10' → logprob: -15.250629425048828
    5. '3' → logprob: -15.313129425048828
    6. '5' → logprob: -15.375629425048828
    7. '   ' → logprob: -15.563129425048828
    8. '0' → logprob: -16.125629425048828
    9. ' ' → logprob: -16.188129425048828
    10. '4' → logprob: -16.938129425048828

Token 954: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.246537173457909e-06
    2. ' ' → logprob: -12.750003814697266
    3. '2' → logprob: -14.250003814697266
    4. '0' → logprob: -16.062503814697266
    5. '１' → logprob: -16.125003814697266
    6. '5' → logprob: -16.562503814697266
    7. '   ' → logprob: -16.625003814697266
    8. '10' → logprob: -16.625003814697266
    9. '3' → logprob: -16.937503814697266
    10. '
' → logprob: -17.125003814697266

Token 955: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 956: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 957: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.6393495798110962
    2. '<|end|>' → logprob: -0.8893495798110962
    3. '#' → logprob: -3.2643494606018066
    4. '   ' → logprob: -4.389349460601807
    5. '```' → logprob: -5.139349460601807
    6. '<|end|>' → logprob: -5.764349460601807
    7. '...' → logprob: -7.514349460601807
    8. ')' → logprob: -8.264349937438965
    9. ' def' → logprob: -8.639349937438965
    10. '[' → logprob: -9.139349937438965

Token 958: ' try' (ID: 2075)
  Prédit: 'can'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'can' → logprob: -0.7815991044044495
    2. 'is' → logprob: -1.4065990447998047
    3. 'try' → logprob: -2.5315990447998047
    4. ' can' → logprob: -3.4065990447998047
    5. 'possible' → logprob: -3.4065990447998047
    6. 'simulate' → logprob: -3.4065990447998047
    7. ' is' → logprob: -3.5315990447998047
    8. 'get' → logprob: -4.156599044799805
    9. 'find' → logprob: -4.281599044799805
    10. 'has' → logprob: -4.656599044799805

Token 959: '_move' (ID: 39414)
  Prédit: '_swap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_swap' → logprob: -0.10045014321804047
    2. '_move' → logprob: -2.350450038909912
    3. '_sw' → logprob: -8.60045051574707
    4. '_to' → logprob: -11.10045051574707
    5. '_match' → logprob: -11.47545051574707
    6. '_exchange' → logprob: -11.47545051574707
    7. '_' → logprob: -11.72545051574707
    8. '_moves' → logprob: -12.60045051574707
    9. '_remove' → logprob: -12.97545051574707
    10. 'Swap' → logprob: -13.60045051574707

Token 960: '_path' (ID: 5558)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(self' → logprob: -8.77627644513268e-06
    2. 'self' → logprob: -12.125008583068848
    3. '(' → logprob: -12.750008583068848
    4. '(s' → logprob: -15.750008583068848
    5. ' (' → logprob: -15.875008583068848
    6. '(r' → logprob: -16.750009536743164
    7. '(sel' → logprob: -16.875009536743164
    8. 's' → logprob: -17.125009536743164
    9. '   ' → logprob: -17.500009536743164
    10. 'def' → logprob: -17.875009536743164

Token 961: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -9.507972572464496e-05
    2. '(' → logprob: -9.37509536743164
    3. 'self' → logprob: -11.87509536743164
    4. ' (' → logprob: -13.25009536743164
    5. '(s' → logprob: -13.87509536743164
    6. '(
' → logprob: -15.25009536743164
    7. '   ' → logprob: -16.50009536743164
    8. '(sel' → logprob: -16.87509536743164
    9. 'def' → logprob: -17.25009536743164
    10. 's' → logprob: -17.37509536743164

Token 962: ',' (ID: 11)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.008350620977580547
    2. 'self' → logprob: -5.133350849151611
    3. ',' → logprob: -6.508350849151611
    4. ')' → logprob: -8.133350372314453
    5. ')(' → logprob: -8.133350372314453
    6. '(' → logprob: -8.258350372314453
    7. ' (' → logprob: -10.133350372314453
    8. '   ' → logprob: -11.633350372314453
    9. ' self' → logprob: -11.633350372314453
    10. '       ' → logprob: -12.008350372314453

Token 963: ' path' (ID: 3104)
  Prédit: 'path'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'path' → logprob: -0.6193099617958069
    2. 'r' → logprob: -1.619309902191162
    3. 'start' → logprob: -1.994309902191162
    4. ' path' → logprob: -2.494309902191162
    5. ' start' → logprob: -3.744309902191162
    6. ' r' → logprob: -4.869309902191162
    7. 'moves' → logprob: -5.244309902191162
    8. 'positions' → logprob: -5.619309902191162
    9. ' moves' → logprob: -6.494309902191162
    10. ' positions' → logprob: -7.119309902191162

Token 964: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.00019936825265176594
    2. 'self' → logprob: -9.250199317932129
    3. '):' → logprob: -9.625199317932129
    4. '':' → logprob: -11.125199317932129
    5. ')' → logprob: -11.375199317932129
    6. '(self' → logprob: -12.625199317932129
    7. '```' → logprob: -13.375199317932129
    8. ' :' → logprob: -13.750199317932129
    9. '):
' → logprob: -13.875199317932129
    10. '')' → logprob: -14.125199317932129

Token 965: ' List' (ID: 2655)
  Prédit: 'List'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'List' → logprob: -0.0003933768020942807
    2. ' List' → logprob: -7.875393390655518
    3. '[List' → logprob: -11.25039291381836
    4. ')' → logprob: -16.25039291381836
    5. '	List' → logprob: -16.37539291381836
    6. 'list' → logprob: -17.00039291381836
    7. '[(' → logprob: -17.50039291381836
    8. ' ' → logprob: -18.00039291381836
    9. '   ' → logprob: -18.37539291381836
    10. 'Tuple' → logprob: -18.87539291381836

Token 966: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0003849133790936321
    2. '[int' → logprob: -7.87538480758667
    3. '[List' → logprob: -12.500385284423828
    4. '```' → logprob: -15.125385284423828
    5. '<Tuple' → logprob: -15.500385284423828
    6. '[Int' → logprob: -15.750385284423828
    7. ')' → logprob: -15.875385284423828
    8. 'int' → logprob: -16.250385284423828
    9. '[
' → logprob: -16.250385284423828
    10. '[(' → logprob: -16.625385284423828

Token 967: 'Tuple' (ID: 40048)
  Prédit: 'Tuple'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Tuple' → logprob: -3.643152740551159e-05
    2. 'int' → logprob: -10.375036239624023
    3. ' Tuple' → logprob: -12.500036239624023
    4. '[' → logprob: -13.625036239624023
    5. '[int' → logprob: -15.625036239624023
    6. 'tuple' → logprob: -16.625036239624023
    7. 'Tu' → logprob: -18.750036239624023
    8. '.Tuple' → logprob: -19.125036239624023
    9. 'List' → logprob: -19.250036239624023
    10. '```' → logprob: -19.875036239624023

Token 968: '[int' (ID: 40124)
  Prédit: '[int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[int' → logprob: -0.0007100477814674377
    2. 'int' → logprob: -7.2507100105285645
    3. ',int' → logprob: -16.875709533691406
    4. '<int' → logprob: -18.250709533691406
    5. '(int' → logprob: -18.500709533691406
    6. ' int' → logprob: -18.500709533691406
    7. ']int' → logprob: -18.875709533691406
    8. '   ' → logprob: -19.000709533691406
    9. '	int' → logprob: -19.125709533691406
    10. '=int' → logprob: -19.375709533691406

Token 969: ',int' (ID: 20909)
  Prédit: ',int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',int' → logprob: -0.0005687602679245174
    2. ',' → logprob: -7.500568866729736
    3. 'int' → logprob: -11.125568389892578
    4. '[int' → logprob: -14.000568389892578
    5. ' ,' → logprob: -15.750568389892578
    6. ']int' → logprob: -17.000568389892578
    7. ':int' → logprob: -18.125568389892578
    8. ',
' → logprob: -18.250568389892578
    9. '   ' → logprob: -18.375568389892578
    10. ' int' → logprob: -18.750568389892578

Token 970: ']])' (ID: 64959)
  Prédit: '])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '])' → logprob: -0.007454703561961651
    2. ']])' → logprob: -5.132454872131348
    3. ']):
' → logprob: -7.132454872131348
    4. ']):' → logprob: -8.132454872131348
    5. ']' → logprob: -8.257454872131348
    6. ']]' → logprob: -8.882454872131348
    7. ')])' → logprob: -11.632454872131348
    8. ''])' → logprob: -12.132454872131348
    9. '])]' → logprob: -12.257454872131348
    10. ')' → logprob: -12.507454872131348

Token 971: ' ->' (ID: 2747)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.015782590955495834
    2. '->' → logprob: -4.890782356262207
    3. ' ->' → logprob: -4.890782356262207
    4. ':
' → logprob: -8.140782356262207
    5. ')' → logprob: -8.265782356262207
    6. ')->' → logprob: -10.015782356262207
    7. '   ' → logprob: -10.765782356262207
    8. '):' → logprob: -11.765782356262207
    9. '       ' → logprob: -13.265782356262207
    10. ' :' → logprob: -13.890782356262207

Token 972: ' int' (ID: 677)
  Prédit: 'bool'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'bool' → logprob: -0.2965957224369049
    2. 'Optional' → logprob: -1.4215956926345825
    3. ''' → logprob: -4.296595573425293
    4. ' bool' → logprob: -7.671595573425293
    5. ' Optional' → logprob: -7.796595573425293
    6. 'None' → logprob: -7.921595573425293
    7. 'int' → logprob: -8.921595573425293
    8. ''int' → logprob: -9.046595573425293
    9. 'List' → logprob: -9.671595573425293
    10. 'optional' → logprob: -10.546595573425293

Token 973: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.006721536163240671
    2. ':
' → logprob: -5.006721496582031
    3. '):' → logprob: -13.381721496582031
    4. '   ' → logprob: -13.631721496582031
    5. '       ' → logprob: -13.756721496582031
    6. ':
' → logprob: -13.881721496582031
    7. ':def' → logprob: -15.006721496582031
    8. '):
' → logprob: -15.131721496582031
    9. ':return' → logprob: -15.381721496582031
    10. ' :' → logprob: -15.631721496582031

Token 974: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03845144063234329
    2. 'score' → logprob: -4.288451671600342
    3. 'if' → logprob: -4.538451671600342
    4. ' if' → logprob: -4.913451671600342
    5. '   ' → logprob: -5.538451671600342
    6. 'self' → logprob: -7.288451671600342
    7. 'moves' → logprob: -8.663451194763184
    8. 'n' → logprob: -8.913451194763184
    9. '#' → logprob: -9.038451194763184
    10. 'for' → logprob: -9.288451194763184

Token 975: ' #' (ID: 1069)
  Prédit: 'board'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'board' → logprob: -0.508046567440033
    2. 'if' → logprob: -1.2580466270446777
    3. 'temp' → logprob: -2.3830466270446777
    4. 'b' → logprob: -5.008046627044678
    5. 'clone' → logprob: -5.258046627044678
    6. 'tmp' → logprob: -6.008046627044678
    7. 'cl' → logprob: -6.133046627044678
    8. '       ' → logprob: -6.383046627044678
    9. 'original' → logprob: -6.383046627044678
    10. 'test' → logprob: -7.383046627044678

Token 976: ' path' (ID: 3104)
  Prédit: 'board'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'board' → logprob: -0.2662012577056885
    2. 'if' → logprob: -1.8912012577056885
    3. 'b' → logprob: -3.3912012577056885
    4. 'temp' → logprob: -3.7662012577056885
    5. '#' → logprob: -4.766201019287109
    6. 'original' → logprob: -5.766201019287109
    7. 'clone' → logprob: -5.766201019287109
    8. 'prev' → logprob: -5.891201019287109
    9. '"""
' → logprob: -6.766201019287109
    10. 'self' → logprob: -6.766201019287109

Token 977: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.9847061038017273
    2. ' =' → logprob: -0.9847061038017273
    3. 'if' → logprob: -2.359706163406372
    4. ' if' → logprob: -3.359706163406372
    5. '_len' → logprob: -3.484706163406372
    6. '=' → logprob: -3.859706163406372
    7. 'len' → logprob: -3.984706163406372
    8. '_positions' → logprob: -4.359705924987793
    9. '_length' → logprob: -4.609705924987793
    10. '   ' → logprob: -4.984705924987793

Token 978: ' list' (ID: 1562)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'int' → logprob: -1.4026559591293335
    2. 'positions' → logprob: -1.7776559591293335
    3. '#' → logprob: -1.9026559591293335
    4. 'if' → logprob: -2.277656078338623
    5. ' if' → logprob: -2.652656078338623
    6. 'List' → logprob: -2.652656078338623
    7. ' positions' → logprob: -3.402656078338623
    8. 'for' → logprob: -3.527656078338623
    9. ' for' → logprob: -4.652656078338623
    10. 'moves' → logprob: -4.777656078338623

Token 979: ' of' (ID: 328)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.7395831942558289
    2. '[int' → logprob: -0.8645831942558289
    3. ' of' → logprob: -2.9895832538604736
    4. '       ' → logprob: -3.3645832538604736
    5. ')' → logprob: -4.9895830154418945
    6. ':' → logprob: -5.8645830154418945
    7. '[List' → logprob: -6.1145830154418945
    8. '   ' → logprob: -6.2395830154418945
    9. ':
' → logprob: -7.4895830154418945
    10. '[
' → logprob: -7.6145830154418945

Token 980: ' positions' (ID: 15897)
  Prédit: 'positions'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'positions' → logprob: -0.09730050712823868
    2. ' positions' → logprob: -2.5973005294799805
    3. 'Tuple' → logprob: -4.4723005294799805
    4. '(' → logprob: -6.4723005294799805
    5. '(r' → logprob: -6.4723005294799805
    6. 'coordinates' → logprob: -6.5973005294799805
    7. 'adj' → logprob: -7.2223005294799805
    8. ' (' → logprob: -7.5973005294799805
    9. ' adjacent' → logprob: -8.34730052947998
    10. ' Tuple' → logprob: -8.47230052947998

Token 981: ' that' (ID: 484)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.16195988655090332
    2. '
' → logprob: -2.2869598865509033
    3. ' if' → logprob: -3.7869598865509033
    4. ':' → logprob: -4.411959648132324
    5. ':
' → logprob: -5.536959648132324
    6. '   ' → logprob: -6.286959648132324
    7. ',' → logprob: -6.411959648132324
    8. '[' → logprob: -6.786959648132324
    9. ' =' → logprob: -7.036959648132324
    10. ')' → logprob: -7.286959648132324

Token 982: ' the' (ID: 290)
  Prédit: 'represent'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'represent' → logprob: -1.1182078123092651
    2. ' are' → logprob: -1.6182078123092651
    3. 'are' → logprob: -2.2432079315185547
    4. ' represent' → logprob: -2.3682079315185547
    5. 'swap' → logprob: -2.7432079315185547
    6. 'rep' → logprob: -2.9932079315185547
    7. 'in' → logprob: -3.2432079315185547
    8. ' the' → logprob: -3.8682079315185547
    9. 'the' → logprob: -4.118207931518555
    10. ' represents' → logprob: -4.493207931518555

Token 983: ' selected' (ID: 6386)
  Prédit: ' user'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' user' → logprob: -1.344704031944275
    2. ' blocks' → logprob: -1.344704031944275
    3. 'user' → logprob: -1.969704031944275
    4. ' path' → logprob: -2.4697041511535645
    5. 'swap' → logprob: -3.3447041511535645
    6. 'blocks' → logprob: -3.4697041511535645
    7. 'move' → logprob: -3.4697041511535645
    8. 'path' → logprob: -3.5947041511535645
    9. ' player' → logprob: -3.8447041511535645
    10. ' first' → logprob: -3.9697041511535645

Token 984: ' block' (ID: 4355)
  Prédit: 'blocks'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'blocks' → logprob: -0.5912180542945862
    2. ' blocks' → logprob: -1.2162179946899414
    3. 'path' → logprob: -2.4662179946899414
    4. 'positions' → logprob: -3.7162179946899414
    5. ' path' → logprob: -4.341217994689941
    6. 'tokens' → logprob: -5.091217994689941
    7. '_blocks' → logprob: -5.091217994689941
    8. ' positions' → logprob: -5.716217994689941
    9. 'token' → logprob: -5.966217994689941
    10. '[' → logprob: -6.591217994689941

Token 985: ' occupies' (ID: 134274)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.9315899014472961
    2. 'moves' → logprob: -1.1815898418426514
    3. ' moves' → logprob: -2.1815898418426514
    4. ' will' → logprob: -2.6815898418426514
    5. 'will' → logprob: -3.6815898418426514
    6. ' can' → logprob: -4.3065900802612305
    7. ' in' → logprob: -4.4315900802612305
    8. ' passes' → logprob: -4.5565900802612305
    9. ' is' → logprob: -5.0565900802612305
    10. ' at' → logprob: -5.3065900802612305

Token 986: ' step' (ID: 5983)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.49892452359199524
    2. ':
' → logprob: -2.123924493789673
    3. '
' → logprob: -2.498924493789673
    4. '   ' → logprob: -2.873924493789673
    5. '       ' → logprob: -3.373924493789673
    6. '[' → logprob: -3.498924493789673
    7. ' if' → logprob: -3.498924493789673
    8. ',' → logprob: -4.498924732208252
    9. ')' → logprob: -5.248924732208252
    10. '):' → logprob: -5.873924732208252

Token 987: ' by' (ID: 656)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.36459431052207947
    2. 'by' → logprob: -1.4895943403244019
    3. ' by' → logprob: -3.1145942211151123
    4. 'wise' → logprob: -4.239594459533691
    5. '=' → logprob: -4.489594459533691
    6. '-by' → logprob: -5.989594459533691
    7. '   ' → logprob: -6.364594459533691
    8. ':' → logprob: -6.489594459533691
    9. '_by' → logprob: -6.739594459533691
    10. ' =' → logprob: -7.489594459533691

Token 988: ' step' (ID: 5983)
  Prédit: 'step'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'step' → logprob: -0.0075940839014947414
    2. '1' → logprob: -5.007594108581543
    3. ' step' → logprob: -7.132594108581543
    4. 'path' → logprob: -10.007594108581543
    5. '0' → logprob: -10.507594108581543
    6. '```' → logprob: -13.132594108581543
    7. '   ' → logprob: -14.132594108581543
    8. '
' → logprob: -14.132594108581543
    9. 'space' → logprob: -14.382594108581543
    10. '-step' → logprob: -14.632594108581543

Token 989: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.904244601726532
    2. ':' → logprob: -1.6542446613311768
    3. ':
' → logprob: -1.6542446613311768
    4. ' if' → logprob: -1.7792446613311768
    5. '
' → logprob: -4.154244422912598
    6. '   ' → logprob: -4.404244422912598
    7. ',' → logprob: -4.779244422912598
    8. 'if' → logprob: -5.654244422912598
    9. '        
' → logprob: -6.904244422912598
    10. '):
' → logprob: -7.529244422912598

Token 990: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.04002682864665985
    2. ':' → logprob: -3.665026903152466
    3. ' if' → logprob: -5.040026664733887
    4. ':
' → logprob: -5.665026664733887
    5. ',' → logprob: -6.540026664733887
    6. '   ' → logprob: -6.790026664733887
    7. 'if' → logprob: -7.915026664733887
    8. '
' → logprob: -8.665026664733887
    9. '):
' → logprob: -9.040026664733887
    10. '```' → logprob: -9.165026664733887

Token 991: ' #' (ID: 1069)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.6001013517379761
    2. 'board' → logprob: -1.100101351737976
    3. 'temp' → logprob: -3.1001014709472656
    4. 'b' → logprob: -3.9751014709472656
    5. ' if' → logprob: -4.100101470947266
    6. '       ' → logprob: -4.100101470947266
    7. 'original' → logprob: -5.350101470947266
    8. 'self' → logprob: -5.600101470947266
    9. 'prev' → logprob: -6.100101470947266
    10. 'tmp' → logprob: -6.475101470947266

Token 992: ' For' (ID: 2214)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.2789340913295746
    2. 'board' → logprob: -1.778934121131897
    3. 'temp' → logprob: -3.1539340019226074
    4. 'b' → logprob: -3.9039340019226074
    5. ' if' → logprob: -5.778934001922607
    6. '#' → logprob: -6.403934001922607
    7. 'tmp' → logprob: -6.528934001922607
    8. 'original' → logprob: -6.528934001922607
    9. '       ' → logprob: -7.153934001922607
    10. 'clone' → logprob: -7.403934001922607

Token 993: ' each' (ID: 2454)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.6950513124465942
    2. ' i' → logprob: -0.8200513124465942
    3. 'r' → logprob: -3.5700511932373047
    4. ' r' → logprob: -4.320051193237305
    5. ' idx' → logprob: -5.445051193237305
    6. 'pos' → logprob: -5.570051193237305
    7. 'path' → logprob: -5.820051193237305
    8. ' path' → logprob: -6.195051193237305
    9. ' len' → logprob: -6.695051193237305
    10. ' pos' → logprob: -7.070051193237305

Token 994: ' adjacent' (ID: 39069)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.31954845786094666
    2. ' i' → logprob: -1.319548487663269
    3. ' move' → logprob: -5.819548606872559
    4. 'move' → logprob: -6.194548606872559
    5. ' step' → logprob: -8.319548606872559
    6. 'step' → logprob: -8.569548606872559
    7. 'index' → logprob: -8.569548606872559
    8. 'idx' → logprob: -8.944548606872559
    9. 'path' → logprob: -9.569548606872559
    10. ' idx' → logprob: -9.694548606872559

Token 995: ' swap' (ID: 25489)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.23937906324863434
    2. ' i' → logprob: -1.7393790483474731
    3. ' move' → logprob: -4.489378929138184
    4. 'move' → logprob: -4.614378929138184
    5. 'step' → logprob: -5.614378929138184
    6. ' step' → logprob: -5.864378929138184
    7. 'index' → logprob: -5.989378929138184
    8. 'pair' → logprob: -6.239378929138184
    9. 'idx' → logprob: -6.489378929138184
    10. ' pair' → logprob: -6.864378929138184

Token 996: ' in' (ID: 306)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.41487470269203186
    2. 'for' → logprob: -1.6648746728897095
    3. ' in' → logprob: -2.164874792098999
    4. ' if' → logprob: -4.53987455368042
    5. '       ' → logprob: -4.53987455368042
    6. ',' → logprob: -5.03987455368042
    7. '
' → logprob: -6.78987455368042
    8. ':' → logprob: -6.78987455368042
    9. 'in' → logprob: -6.91487455368042
    10. 'if' → logprob: -7.03987455368042

Token 997: ' path' (ID: 3104)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.47896808385849
    2. 'path' → logprob: -0.97896808385849
    3. ' range' → logprob: -5.728968143463135
    4. ' path' → logprob: -6.478968143463135
    5. 'the' → logprob: -9.728967666625977
    6. 'enumer' → logprob: -11.478967666625977
    7. 'zip' → logprob: -11.603967666625977
    8. '
' → logprob: -11.853967666625977
    9. ' the' → logprob: -13.103967666625977
    10. 're' → logprob: -13.728967666625977

Token 998: ' perform' (ID: 3347)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.499578058719635
    2. ',' → logprob: -1.7495779991149902
    3. ':
' → logprob: -2.7495779991149902
    4. ':' → logprob: -2.8745779991149902
    5. ' for' → logprob: -3.1245779991149902
    6. '
' → logprob: -3.4995779991149902
    7. 'for' → logprob: -4.12457799911499
    8. '   ' → logprob: -5.49957799911499
    9. '        
' → logprob: -6.62457799911499
    10. ' if' → logprob: -7.62457799911499

Token 999: ' swap' (ID: 25489)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.6413915157318115
    2. ' self' → logprob: -2.2663915157318115
    3. 'for' → logprob: -2.2663915157318115
    4. ' for' → logprob: -2.6413915157318115
    5. '       ' → logprob: -3.3913915157318115
    6. '   ' → logprob: -3.5163915157318115
    7. ' the' → logprob: -3.6413915157318115
    8. 'score' → logprob: -3.7663915157318115
    9. 'range' → logprob: -3.8913915157318115
    10. 'if' → logprob: -4.016391754150391

Token 1000: ' then' (ID: 1815)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5553091764450073
    2. '
' → logprob: -1.0553091764450073
    3. 'for' → logprob: -3.305309295654297
    4. ' for' → logprob: -3.430309295654297
    5. ',' → logprob: -5.805309295654297
    6. 'score' → logprob: -5.930309295654297
    7. ' and' → logprob: -6.305309295654297
    8. ' if' → logprob: -7.805309295654297
    9. 'if' → logprob: -8.430309295654297
    10. '
' → logprob: -8.805309295654297

Token 1001: ' do' (ID: 621)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.5993697047233582
    2. 'self' → logprob: -0.9743697047233582
    3. '           ' → logprob: -3.849369764328003
    4. '       ' → logprob: -3.974369764328003
    5. ' self' → logprob: -4.849369525909424
    6. 'matches' → logprob: -5.474369525909424
    7. 'if' → logprob: -5.724369525909424
    8. 'do' → logprob: -5.974369525909424
    9. 'for' → logprob: -6.224369525909424
    10. 'check' → logprob: -6.474369525909424

Token 1002: ' elimination' (ID: 77324)
  Prédit: '_full'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_full' → logprob: -0.7521726489067078
    2. 'self' → logprob: -1.0021727085113525
    3. 'full' → logprob: -2.0021727085113525
    4. '
' → logprob: -4.127172470092773
    5. '```' → logprob: -5.627172470092773
    6. ' full' → logprob: -5.877172470092773
    7. '       ' → logprob: -6.502172470092773
    8. 'a' → logprob: -7.127172470092773
    9. 'Full' → logprob: -7.627172470092773
    10. ' self' → logprob: -7.752172470092773

Token 1003: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.024025309830904007
    2. ',' → logprob: -4.3990254402160645
    3. '
' → logprob: -4.6490254402160645
    4. ' and' → logprob: -7.2740254402160645
    5. 'score' → logprob: -7.2740254402160645
    6. '        
' → logprob: -9.274024963378906
    7. 'for' → logprob: -9.524024963378906
    8. ' score' → logprob: -9.774024963378906
    9. ';' → logprob: -10.149024963378906
    10. ' for' → logprob: -10.649024963378906

Token 1004: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.010109718888998032
    2. '
' → logprob: -4.635109901428223
    3. ',' → logprob: -8.385109901428223
    4. '   ' → logprob: -10.260109901428223
    5. '        
' → logprob: -10.385109901428223
    6. '```' → logprob: -10.760109901428223
    7. ' for' → logprob: -11.635109901428223
    8. 'n' → logprob: -12.010109901428223
    9. '
' → logprob: -12.260109901428223
    10. ' and' → logprob: -12.760109901428223

Token 1005: ' b' (ID: 287)
  Prédit: 'score'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'score' → logprob: -0.9759637713432312
    2. '       ' → logprob: -1.100963830947876
    3. 'temp' → logprob: -2.475963830947876
    4. 'board' → logprob: -3.350963830947876
    5. ' temp' → logprob: -3.350963830947876
    6. ' if' → logprob: -3.350963830947876
    7. ' score' → logprob: -3.850963830947876
    8. 'if' → logprob: -4.225963592529297
    9. 'self' → logprob: -4.225963592529297
    10. ' total' → logprob: -4.600963592529297

Token 1006: ' =' (ID: 314)
  Prédit: 'oard'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'oard' → logprob: -0.0009856504620984197
    2. '       ' → logprob: -7.250985622406006
    3. ' =' → logprob: -8.375986099243164
    4. '=' → logprob: -11.625986099243164
    5. 'o' → logprob: -11.750986099243164
    6. '   ' → logprob: -11.750986099243164
    7. 'board' → logprob: -11.750986099243164
    8. 'current' → logprob: -12.875986099243164
    9. 'temp' → logprob: -13.375986099243164
    10. '_board' → logprob: -13.375986099243164

Token 1007: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0009194392478093505
    2. ' self' → logprob: -7.000919342041016
    3. '       ' → logprob: -12.000919342041016
    4. 'Board' → logprob: -13.875919342041016
    5. 'deep' → logprob: -14.375919342041016
    6. ' deepcopy' → logprob: -15.500919342041016
    7. '   ' → logprob: -16.625919342041016
    8. '	self' → logprob: -17.125919342041016
    9. 'b' → logprob: -17.250919342041016
    10. ' Board' → logprob: -18.250919342041016

Token 1008: '.clone' (ID: 29419)
  Prédit: '.clone'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.clone' → logprob: -0.002818312495946884
    2. 'clone' → logprob: -5.8778181076049805
    3. 'self' → logprob: -12.00281810760498
    4. '   ' → logprob: -13.62781810760498
    5. ' clone' → logprob: -13.75281810760498
    6. '.deepcopy' → logprob: -13.75281810760498
    7. '.Clone' → logprob: -14.25281810760498
    8. '.' → logprob: -14.25281810760498
    9. '_clone' → logprob: -14.37781810760498
    10. '       ' → logprob: -14.75281810760498

Token 1009: '()
' (ID: 1234)
  Prédit: '()
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()
' → logprob: -0.4702646732330322
    2. '()' → logprob: -1.8452646732330322
    3. '
' → logprob: -2.2202646732330322
    4. '       ' → logprob: -2.3452646732330322
    5. '<|end|>' → logprob: -5.345264434814453
    6. ')' → logprob: -5.595264434814453
    7. ')
' → logprob: -6.220264434814453
    8. '   ' → logprob: -6.970264434814453
    9. '        
' → logprob: -8.095264434814453
    10. '<|end|>' → logprob: -8.595264434814453

Token 1010: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6194269061088562
    2. ' for' → logprob: -1.369426965713501
    3. '
' → logprob: -1.994426965713501
    4. 'for' → logprob: -2.744426965713501
    5. '```' → logprob: -6.244426727294922
    6. 'n' → logprob: -6.494426727294922
    7. 'prev' → logprob: -6.744426727294922
    8. '
' → logprob: -7.369426727294922
    9. 'b' → logprob: -7.619426727294922
    10. ' prev' → logprob: -7.619426727294922

Token 1011: ' score' (ID: 8429)
  Prédit: 'score'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'score' (adapté à ' score') → logprob: -0.5939391851425171
    2. 'for' → logprob: -0.8439391851425171
    3. 'prev' → logprob: -4.218939304351807
    4. 'total' → logprob: -6.843939304351807
    5. 'b' → logprob: -7.093939304351807
    6. 'last' → logprob: -7.843939304351807
    7. '       ' → logprob: -8.718938827514648
    8. 'current' → logprob: -8.843938827514648
    9. 'previous' → logprob: -8.968938827514648
    10. 'if' → logprob: -9.093938827514648

Token 1012: '_before' (ID: 56638)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.009824560023844242
    2. '=' → logprob: -4.634824752807617
    3. '_' → logprob: -9.759824752807617
    4. ' ' → logprob: -12.634824752807617
    5. ',' → logprob: -13.259824752807617
    6. '_acc' → logprob: -13.384824752807617
    7. ':' → logprob: -13.509824752807617
    8. '_gain' → logprob: -14.759824752807617
    9. ' +=' → logprob: -14.759824752807617
    10. '_current' → logprob: -15.134824752807617

Token 1013: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6931481957435608
    2. ' =' → logprob: -0.6931481957435608
    3. '=b' → logprob: -15.068148612976074
    4. ':' → logprob: -15.568148612976074
    5. ' ' → logprob: -15.818148612976074
    6. ',' → logprob: -15.818148612976074
    7. '_score' → logprob: -16.443147659301758
    8. 'score' → logprob: -17.318147659301758
    9. '＝' → logprob: -18.068147659301758
    10. '=None' → logprob: -18.193147659301758

Token 1014: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -1.4617256056226324e-05
    2. ' b' → logprob: -11.375014305114746
    3. '0' → logprob: -12.750014305114746
    4. '       ' → logprob: -15.375014305114746
    5. 'self' → logprob: -17.125015258789062
    6. '
' → logprob: -17.875015258789062
    7. '   ' → logprob: -18.250015258789062
    8. '```' → logprob: -19.875015258789062
    9. '	b' → logprob: -20.250015258789062
    10. '=' → logprob: -20.375015258789062

Token 1015: '.total' (ID: 23374)
  Prédit: '.total'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.total' → logprob: -3.4121114822482923e-06
    2. '.' → logprob: -13.000003814697266
    3. 'total' → logprob: -14.250003814697266
    4. '.score' → logprob: -15.625003814697266
    5. '.current' → logprob: -15.875003814697266
    6. '.b' → logprob: -15.875003814697266
    7. ' .' → logprob: -18.000003814697266
    8. '.Total' → logprob: -18.500003814697266
    9. '.t' → logprob: -18.875003814697266
    10. ').' → logprob: -19.000003814697266

Token 1016: '_score' (ID: 22555)
  Prédit: '_score'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_score' → logprob: -2.45848218582978e-06
    2. 'score' → logprob: -13.00000286102295
    3. '_' → logprob: -15.75000286102295
    4. 'Score' → logprob: -18.625001907348633
    5. '_code' → logprob: -18.750001907348633
    6. '
' → logprob: -19.250001907348633
    7. '_scores' → logprob: -19.500001907348633
    8. '_SCORE' → logprob: -19.500001907348633
    9. '   ' → logprob: -20.125001907348633
    10. '```' → logprob: -20.250001907348633

Token 1017: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.029245736077427864
    2. '       ' → logprob: -4.029245853424072
    3. ' for' → logprob: -5.654245853424072
    4. '        
' → logprob: -5.904245853424072
    5. '<|end|>' → logprob: -6.279245853424072
    6. ' 
' → logprob: -6.529245853424072
    7. 'for' → logprob: -7.904245853424072
    8. '
' → logprob: -8.404245376586914
    9. '<|end|>' → logprob: -8.904245376586914
    10. '  
' → logprob: -9.154245376586914

Token 1018: '       ' (ID: 309)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.8329747915267944
    2. '       ' → logprob: -0.9579747915267944
    3. 'for' → logprob: -1.7079747915267944
    4. '```' → logprob: -8.707974433898926
    5. 'prev' → logprob: -9.207974433898926
    6. ' prev' → logprob: -10.832974433898926
    7. '
' → logprob: -11.207974433898926
    8. 'n' → logprob: -11.582974433898926
    9. 'path' → logprob: -11.832974433898926
    10. 'score' → logprob: -12.457974433898926

Token 1019: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.002545697148889303
    2. ' for' → logprob: -6.2525458335876465
    3. '       ' → logprob: -7.6275458335876465
    4. 'prev' → logprob: -9.127545356750488
    5. 'b' → logprob: -11.502545356750488
    6. 'last' → logprob: -12.377545356750488
    7. '```' → logprob: -12.627545356750488
    8. 'valid' → logprob: -14.377545356750488
    9. 'score' → logprob: -14.502545356750488
    10. 'result' → logprob: -15.002545356750488

Token 1020: ' The' (ID: 623)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0001552665780764073
    2. 'prev' → logprob: -9.250155448913574
    3. 'b' → logprob: -10.375155448913574
    4. 'if' → logprob: -11.250155448913574
    5. 'last' → logprob: -12.375155448913574
    6. '       ' → logprob: -12.500155448913574
    7. 'valid' → logprob: -12.750155448913574
    8. 'previous' → logprob: -14.000155448913574
    9. ' for' → logprob: -14.375155448913574
    10. 'current' → logprob: -14.750155448913574

Token 1021: ' selected' (ID: 6386)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.1859036684036255
    2. 'if' → logprob: -2.560903549194336
    3. 'prev' → logprob: -2.810903549194336
    4. ' for' → logprob: -3.810903549194336
    5. ' if' → logprob: -5.560903549194336
    6. 'previous' → logprob: -6.310903549194336
    7. 'n' → logprob: -6.560903549194336
    8. 'block' → logprob: -7.060903549194336
    9. '       ' → logprob: -7.935903549194336
    10. 'last' → logprob: -8.060903549194336

Token 1022: ' block' (ID: 4355)
  Prédit: 'block'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'block' → logprob: -0.39781373739242554
    2. 'r' → logprob: -1.6478137969970703
    3. 'for' → logprob: -2.1478137969970703
    4. 'pos' → logprob: -4.64781379699707
    5. ' for' → logprob: -5.64781379699707
    6. 'token' → logprob: -6.52281379699707
    7. ' block' → logprob: -7.02281379699707
    8. 'prev' → logprob: -7.27281379699707
    9. '_block' → logprob: -7.27281379699707
    10. 'b' → logprob: -7.52281379699707

Token 1023: ' moves' (ID: 19523)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.567406177520752
    2. 'pos' → logprob: -1.192406177520752
    3. ' =' → logprob: -3.567406177520752
    4. 'row' → logprob: -4.192406177520752
    5. 'is' → logprob: -4.317406177520752
    6. 'current' → logprob: -4.442406177520752
    7. '=' → logprob: -4.567406177520752
    8. 'positions' → logprob: -4.942406177520752
    9. 'for' → logprob: -5.067406177520752
    10. 'prev' → logprob: -5.192406177520752

Token 1024: ' along' (ID: 4251)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0629979744553566
    2. ' for' → logprob: -3.062998056411743
    3. 'along' → logprob: -5.187997817993164
    4. ' along' → logprob: -5.312997817993164
    5. 'through' → logprob: -6.312997817993164
    6. 'from' → logprob: -7.187997817993164
    7. ' through' → logprob: -7.562997817993164
    8. 'positions' → logprob: -9.062997817993164
    9. 'pos' → logprob: -9.187997817993164
    10. 'step' → logprob: -9.187997817993164

Token 1025: ' the' (ID: 290)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.05957181379199028
    2. 'path' → logprob: -3.4345717430114746
    3. 'range' → logprob: -4.059571743011475
    4. ' for' → logprob: -4.809571743011475
    5. ' path' → logprob: -9.184572219848633
    6. ' range' → logprob: -10.184572219848633
    7. 'the' → logprob: -10.934572219848633
    8. 'b' → logprob: -12.684572219848633
    9. '   ' → logprob: -12.684572219848633
    10. '
' → logprob: -12.684572219848633

Token 1026: ' path' (ID: 3104)
  Prédit: 'path'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'path' → logprob: -0.013299643062055111
    2. 'for' → logprob: -5.263299465179443
    3. 'range' → logprob: -5.263299465179443
    4. ' path' → logprob: -6.263299465179443
    5. 'len' → logprob: -7.638299465179443
    6. ' for' → logprob: -8.513299942016602
    7. '1' → logprob: -8.888299942016602
    8. ' range' → logprob: -10.763299942016602
    9. '[path' → logprob: -11.138299942016602
    10. '0' → logprob: -11.388299942016602

Token 1027: ' exchanging' (ID: 127640)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.21876046061515808
    2. '       ' → logprob: -1.7187604904174805
    3. ' for' → logprob: -4.0937604904174805
    4. 'prev' → logprob: -7.8437604904174805
    5. ',' → logprob: -10.09376049041748
    6. '
' → logprob: -10.21876049041748
    7. 'current' → logprob: -10.59376049041748
    8. 'previous' → logprob: -11.59376049041748
    9. 'score' → logprob: -12.34376049041748
    10. 'r' → logprob: -13.34376049041748

Token 1028: ' blocks' (ID: 18125)
  Prédit: 'positions'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'positions' → logprob: -0.37819981575012207
    2. 'blocks' → logprob: -1.753199815750122
    3. 'tokens' → logprob: -2.878199815750122
    4. 'with' → logprob: -3.128199815750122
    5. 'places' → logprob: -4.253199577331543
    6. ' positions' → logprob: -4.753199577331543
    7. ' blocks' → logprob: -5.378199577331543
    8. 'adj' → logprob: -5.753199577331543
    9. 'block' → logprob: -6.378199577331543
    10. 'neighbors' → logprob: -6.378199577331543

Token 1029: ' step' (ID: 5983)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.4123707413673401
    2. 'for' → logprob: -1.2873706817626953
    3. '       ' → logprob: -2.7873706817626953
    4. ' with' → logprob: -9.287370681762695
    5. ',' → logprob: -9.912370681762695
    6. 'with' → logprob: -10.162370681762695
    7. 'prev' → logprob: -10.412370681762695
    8. ' (' → logprob: -11.037370681762695
    9. ' and' → logprob: -11.162370681762695
    10. ' in' → logprob: -11.912370681762695

Token 1030: ' by' (ID: 656)
  Prédit: 'by'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'by' → logprob: -0.0353647880256176
    2. ' by' → logprob: -3.785364866256714
    3. '=' → logprob: -5.160364627838135
    4. '1' → logprob: -5.660364627838135
    5. '       ' → logprob: -6.160364627838135
    6. 'for' → logprob: -9.035365104675293
    7. '-by' → logprob: -9.160365104675293
    8. '```' → logprob: -9.160365104675293
    9. '           ' → logprob: -9.410365104675293
    10. ':' → logprob: -9.910365104675293

Token 1031: ' step' (ID: 5983)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.2259620577096939
    2. 'step' → logprob: -1.6009620428085327
    3. ' step' → logprob: -7.600962162017822
    4. '
' → logprob: -11.100961685180664
    5. '0' → logprob: -11.475961685180664
    6. ' ' → logprob: -11.850961685180664
    7. '```' → logprob: -12.475961685180664
    8. '   ' → logprob: -12.600961685180664
    9. 'path' → logprob: -12.850961685180664
    10. 'one' → logprob: -13.475961685180664

Token 1032: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.006520325783640146
    2. ' for' → logprob: -5.3815202713012695
    3. 'for' → logprob: -6.6315202713012695
    4. '
' → logprob: -7.5065202713012695
    5. ',' → logprob: -11.13152027130127
    6. '```' → logprob: -12.38152027130127
    7. '        
' → logprob: -12.88152027130127
    8. ' and' → logprob: -13.00652027130127
    9. '
' → logprob: -13.38152027130127
    10. '           ' → logprob: -14.00652027130127

Token 1033: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5656392574310303
    2. ' for' → logprob: -1.0656392574310303
    3. 'for' → logprob: -2.4406392574310303
    4. 'prev' → logprob: -8.31563949584961
    5. ' prev' → logprob: -9.94063949584961
    6. '```' → logprob: -10.56563949584961
    7. '
' → logprob: -10.94063949584961
    8. ',' → logprob: -11.06563949584961
    9. 'n' → logprob: -11.81563949584961
    10. '   ' → logprob: -12.06563949584961

Token 1034: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.003563846228644252
    2. 'prev' → logprob: -6.50356388092041
    3. '       ' → logprob: -6.87856388092041
    4. ' for' → logprob: -7.37856388092041
    5. 'current' → logprob: -8.12856388092041
    6. 'curr' → logprob: -9.87856388092041
    7. 'cur' → logprob: -11.00356388092041
    8. 'pos' → logprob: -11.00356388092041
    9. 'last' → logprob: -11.25356388092041
    10. 'previous' → logprob: -12.75356388092041

Token 1035: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -9.13388703338569e-06
    2. ' i' → logprob: -11.750009536743164
    3. 'idx' → logprob: -13.750009536743164
    4. '_i' → logprob: -16.000009536743164
    5. '   ' → logprob: -17.500009536743164
    6. '(i' → logprob: -18.625009536743164
    7. 'index' → logprob: -18.750009536743164
    8. ' ' → logprob: -19.000009536743164
    9. '1' → logprob: -20.125009536743164
    10. '	i' → logprob: -20.125009536743164

Token 1036: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.043005481362342834
    2. 'in' → logprob: -3.1680054664611816
    3. '	in' → logprob: -12.91800594329834
    4. ' ' → logprob: -13.41800594329834
    5. ',' → logprob: -13.91800594329834
    6. '_in' → logprob: -15.29300594329834
    7. '   ' → logprob: -15.41800594329834
    8. '```' → logprob: -15.54300594329834
    9. 'In' → logprob: -15.66800594329834
    10. '1' → logprob: -16.043004989624023

Token 1037: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0015023599844425917
    2. ' range' → logprob: -6.501502513885498
    3. '   ' → logprob: -17.251502990722656
    4. '(range' → logprob: -17.626502990722656
    5. ' ' → logprob: -17.876502990722656
    6. '	range' → logprob: -18.751502990722656
    7. '  ' → logprob: -19.001502990722656
    8. '
' → logprob: -19.001502990722656
    9. '```' → logprob: -19.501502990722656
    10. 'r' → logprob: -20.376502990722656

Token 1038: '(len' (ID: 14990)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.038517288863658905
    2. '(len' → logprob: -3.2885172367095947
    3. '1' → logprob: -8.038516998291016
    4. 'len' → logprob: -8.788516998291016
    5. ' ' → logprob: -15.413516998291016
    6. ' len' → logprob: -15.413516998291016
    7. ' (' → logprob: -16.413516998291016
    8. '   ' → logprob: -17.913516998291016
    9. '[len' → logprob: -19.413516998291016
    10. ',len' → logprob: -19.413516998291016

Token 1039: '(path' (ID: 10993)
  Prédit: '(path'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(path' → logprob: -2.45848218582978e-06
    2. 'path' → logprob: -13.00000286102295
    3. ' path' → logprob: -16.250001907348633
    4. '(' → logprob: -17.375001907348633
    5. '(
' → logprob: -20.000001907348633
    6. ' (' → logprob: -20.750001907348633
    7. '[path' → logprob: -21.000001907348633
    8. ',path' → logprob: -21.375001907348633
    9. '	path' → logprob: -21.875001907348633
    10. '"path' → logprob: -22.000001907348633

Token 1040: ')-' (ID: 14080)
  Prédit: ' -'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.6011825799942017
    2. '-' → logprob: -0.9761825799942017
    3. ')' → logprob: -2.601182460784912
    4. ')-' → logprob: -7.726182460784912
    5. '   ' → logprob: -8.35118293762207
    6. ' ' → logprob: -8.85118293762207
    7. '1' → logprob: -10.47618293762207
    8. '()' → logprob: -10.60118293762207
    9. '()-' → logprob: -11.72618293762207
    10. ' )' → logprob: -12.22618293762207

Token 1041: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.1517960956552997e-05
    2. ' ' → logprob: -11.375011444091797
    3. '   ' → logprob: -20.750011444091797
    4. '0' → logprob: -21.000011444091797
    5. '１' → logprob: -21.500011444091797
    6. '```' → logprob: -22.000011444091797
    7. '2' → logprob: -22.125011444091797
    8. ')' → logprob: -22.250011444091797
    9. '  ' → logprob: -22.875011444091797
    10. '۱' → logprob: -22.937511444091797

Token 1042: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.03858989104628563
    2. '):
' → logprob: -3.2885899543762207
    3. ' ):' → logprob: -7.663589954376221
    4. '):
' → logprob: -9.663589477539062
    5. ' ):
' → logprob: -11.663589477539062
    6. ':' → logprob: -12.163589477539062
    7. '):

' → logprob: -15.413589477539062
    8. ')' → logprob: -15.663589477539062
    9. ' ' → logprob: -15.663589477539062
    10. '   ' → logprob: -15.913589477539062

Token 1043: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0018892568768933415
    2. 'r' → logprob: -6.876889228820801
    3. ',' → logprob: -7.501889228820801
    4. ' r' → logprob: -8.5018892288208
    5. '```' → logprob: -10.7518892288208
    6. '       ' → logprob: -10.8768892288208
    7. '   ' → logprob: -11.3768892288208
    8. 'b' → logprob: -11.8768892288208
    9. '            
' → logprob: -12.0018892288208
    10. ' (' → logprob: -12.0018892288208

Token 1044: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' (adapté à ' r') → logprob: -0.0043727983720600605
    2. '           ' → logprob: -5.879372596740723
    3. ' r' → logprob: -6.754372596740723
    4. 'b' → logprob: -8.504372596740723
    5. '               ' → logprob: -8.754372596740723
    6. 'pr' → logprob: -11.004372596740723
    7. 'pos' → logprob: -12.129372596740723
    8. '   ' → logprob: -12.129372596740723
    9. '(r' → logprob: -12.254372596740723
    10. 'p' → logprob: -13.379372596740723

Token 1045: '1' (ID: 16)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.02156967483460903
    2. '1' → logprob: -4.021569728851318
    3. ',c' → logprob: -6.271569728851318
    4. ' =' → logprob: -7.021569728851318
    5. 'c' → logprob: -8.64656925201416
    6. ' ,' → logprob: -8.77156925201416
    7. '=' → logprob: -8.89656925201416
    8. '_,' → logprob: -9.39656925201416
    9. 'a' → logprob: -10.64656925201416
    10. ',r' → logprob: -11.77156925201416

Token 1046: ',c' (ID: 22261)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.005994325038045645
    2. ',c' → logprob: -5.1309943199157715
    3. ',r' → logprob: -10.00599479675293
    4. ',
' → logprob: -11.75599479675293
    5. ' ,' → logprob: -12.50599479675293
    6. 'c' → logprob: -13.00599479675293
    7. ',b' → logprob: -13.63099479675293
    8. '<|end|>' → logprob: -13.88099479675293
    9. ',C' → logprob: -14.75599479675293
    10. '=' → logprob: -14.75599479675293

Token 1047: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.9724376797676086
    2. '=' → logprob: -1.0974376201629639
    3. ' =' → logprob: -1.4724376201629639
    4. ',' → logprob: -2.847437620162964
    5. '=r' → logprob: -8.472437858581543
    6. 'r' → logprob: -8.847437858581543
    7. ')' → logprob: -8.847437858581543
    8. 'i' → logprob: -9.972437858581543
    9. '<|end|>' → logprob: -10.347437858581543
    10. ',r' → logprob: -10.472437858581543

Token 1048: ' =' (ID: 314)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.10110986232757568
    2. '=' → logprob: -2.9761099815368652
    3. ' =' → logprob: -3.1011099815368652
    4. ',c' → logprob: -9.726109504699707
    5. ',r' → logprob: -9.976109504699707
    6. ')' → logprob: -10.351109504699707
    7. ' ,' → logprob: -10.851109504699707
    8. ')=' → logprob: -12.851109504699707
    9. '<|end|>' → logprob: -12.851109504699707
    10. ',
' → logprob: -12.976109504699707

Token 1049: ' path' (ID: 3104)
  Prédit: 'path'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'path' → logprob: -0.011047814972698689
    2. ' path' → logprob: -4.511047840118408
    3. '(path' → logprob: -21.63604736328125
    4. '	path' → logprob: -21.63604736328125
    5. '_path' → logprob: -21.76104736328125
    6. '[path' → logprob: -22.38604736328125
    7. '   ' → logprob: -22.63604736328125
    8. 'Path' → logprob: -23.26104736328125
    9. '"path' → logprob: -24.38604736328125
    10. 'pth' → logprob: -24.63604736328125

Token 1050: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -4.320199877838604e-07
    2. '[' → logprob: -15.25
    3. '[
' → logprob: -16.5
    4. 'i' → logprob: -17.625
    5. ',i' → logprob: -18.5
    6. '[I' → logprob: -19.125
    7. '   ' → logprob: -19.5
    8. ' [' → logprob: -19.625
    9. ',' → logprob: -19.625
    10. ')[' → logprob: -20.25

Token 1051: ']
' (ID: 1592)
  Prédit: ']
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']
' → logprob: -0.28400179743766785
    2. ']' → logprob: -1.4090018272399902
    3. '],' → logprob: -6.03400182723999
    4. ',' → logprob: -8.159001350402832
    5. ']
' → logprob: -9.409001350402832
    6. '];' → logprob: -10.284001350402832
    7. ']

' → logprob: -11.784001350402832
    8. ')
' → logprob: -11.909001350402832
    9. '   ' → logprob: -12.284001350402832
    10. ')' → logprob: -12.284001350402832

Token 1052: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.007948826067149639
    2. '<|end|>' → logprob: -5.882948875427246
    3. 'r' → logprob: -6.132948875427246
    4. '       ' → logprob: -7.382948875427246
    5. '            
' → logprob: -7.757948875427246
    6. ' ' → logprob: -7.757948875427246
    7. ',' → logprob: -8.382948875427246
    8. '            ' → logprob: -8.632948875427246
    9. ' 
' → logprob: -8.632948875427246
    10. '
' → logprob: -8.882948875427246

Token 1053: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' (adapté à ' r') → logprob: -1.676292231422849e-05
    2. '           ' → logprob: -11.250017166137695
    3. ' r' → logprob: -12.500017166137695
    4. '   ' → logprob: -19.875017166137695
    5. '	r' → logprob: -20.500017166137695
    6. '_r' → logprob: -20.875017166137695
    7. '          ' → logprob: -21.125017166137695
    8. '       ' → logprob: -21.375017166137695
    9. '               ' → logprob: -21.375017166137695
    10. '         ' → logprob: -22.000017166137695

Token 1054: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -2.951771421066951e-05
    2. ',c' → logprob: -11.125029563903809
    3. ',' → logprob: -11.250029563903809
    4. ' ' → logprob: -14.625029563903809
    5. '1' → logprob: -14.875029563903809
    6. ',r' → logprob: -15.125029563903809
    7. ' =' → logprob: -16.250028610229492
    8. '
' → logprob: -16.250028610229492
    9. 'c' → logprob: -16.375028610229492
    10. '```' → logprob: -16.750028610229492

Token 1055: ',c' (ID: 22261)
  Prédit: ',c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',c' → logprob: -0.5759713649749756
    2. ',' → logprob: -0.8259713649749756
    3. ',path' → logprob: -11.325971603393555
    4. '<|end|>' → logprob: -11.950971603393555
    5. ',
' → logprob: -12.075971603393555
    6. ' ,' → logprob: -12.700971603393555
    7. 'c' → logprob: -13.200971603393555
    8. ',r' → logprob: -14.825971603393555
    9. ',user' → logprob: -14.950971603393555
    10. ',\
' → logprob: -15.200971603393555

Token 1056: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.00021724513499066234
    2. '1' → logprob: -8.75021743774414
    3. ' ' → logprob: -10.75021743774414
    4. '```' → logprob: -10.75021743774414
    5. ',i' → logprob: -12.62521743774414
    6. ',' → logprob: -12.62521743774414
    7. '=' → logprob: -13.37521743774414
    8. ':' → logprob: -13.50021743774414
    9. 'i' → logprob: -13.75021743774414
    10. ' =' → logprob: -13.87521743774414

Token 1057: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.018150413408875465
    2. '=' → logprob: -4.018150329589844
    3. ' =
' → logprob: -14.893150329589844
    4. '=
' → logprob: -16.268150329589844
    5. ',' → logprob: -16.643150329589844
    6. ')' → logprob: -18.768150329589844
    7. '<|end|>' → logprob: -19.018150329589844
    8. ' ' → logprob: -19.393150329589844
    9. ' =
' → logprob: -19.768150329589844
    10. '=

' → logprob: -19.768150329589844

Token 1058: ' path' (ID: 3104)
  Prédit: 'path'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'path' → logprob: -0.3132616877555847
    2. ' path' → logprob: -1.3132617473602295
    3. '	path' → logprob: -19.313261032104492
    4. '(path' → logprob: -20.063261032104492
    5. 'pat' → logprob: -20.313261032104492
    6. '_path' → logprob: -20.813261032104492
    7. '[path' → logprob: -20.813261032104492
    8. 'Path' → logprob: -21.188261032104492
    9. '   ' → logprob: -21.563261032104492
    10. '"path' → logprob: -21.688261032104492

Token 1059: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -9.088346359931165e-07
    2. '[' → logprob: -14.875000953674316
    3. 'i' → logprob: -15.250000953674316
    4. '[
' → logprob: -15.875000953674316
    5. '{i' → logprob: -16.375
    6. '```' → logprob: -16.875
    7. '(i' → logprob: -17.5
    8. '[I' → logprob: -18.625
    9. '[j' → logprob: -19.0
    10. '[next' → logprob: -19.125

Token 1060: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.00011963568249484524
    2. ' +' → logprob: -9.12511920928955
    3. '1' → logprob: -11.87511920928955
    4. '+
' → logprob: -13.62511920928955
    5. ']' → logprob: -13.75011920928955
    6. ']+' → logprob: -14.00011920928955
    7. '[' → logprob: -14.87511920928955
    8. '+i' → logprob: -16.125120162963867
    9. '][' → logprob: -17.375120162963867
    10. '```' → logprob: -17.500120162963867

Token 1061: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -15.75
    3. '```' → logprob: -18.75
    4. '0' → logprob: -19.0
    5. 'i' → logprob: -19.125
    6. '   ' → logprob: -21.125
    7. '
' → logprob: -22.0
    8. '１' → logprob: -22.125
    9. '``' → logprob: -22.25
    10. ']' → logprob: -22.25

Token 1062: ']
' (ID: 1592)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5282223224639893
    2. ']' → logprob: -0.9032223224639893
    3. ']
' → logprob: -6.27822208404541
    4. '       ' → logprob: -6.65322208404541
    5. ')
' → logprob: -6.65322208404541
    6. '<|end|>' → logprob: -7.77822208404541
    7. '           ' → logprob: -9.15322208404541
    8. '}' → logprob: -11.02822208404541
    9. '   ' → logprob: -11.02822208404541
    10. ')]' → logprob: -11.15322208404541

Token 1063: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0042742770165205
    2. 'b' → logprob: -5.504274368286133
    3. '       ' → logprob: -9.379274368286133
    4. ' b' → logprob: -9.629274368286133
    5. '```' → logprob: -11.004274368286133
    6. '   ' → logprob: -11.254274368286133
    7. '
' → logprob: -11.254274368286133
    8. '               ' → logprob: -14.129274368286133
    9. ' if' → logprob: -14.129274368286133
    10. '            
' → logprob: -14.879274368286133

Token 1064: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' (adapté à ' b') → logprob: -0.08327867835760117
    2. '           ' → logprob: -2.5832786560058594
    3. 'if' → logprob: -5.458278656005859
    4. ' if' → logprob: -9.70827865600586
    5. ' b' → logprob: -10.20827865600586
    6. '       ' → logprob: -11.58327865600586
    7. '   ' → logprob: -12.20827865600586
    8. '
' → logprob: -13.20827865600586
    9. '```' → logprob: -13.45827865600586
    10. '               ' → logprob: -13.83327865600586

Token 1065: '.swap' (ID: 111356)
  Prédit: '.swap'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.swap' → logprob: -9.674858301877975e-05
    2. '.' → logprob: -9.250096321105957
    3. '   ' → logprob: -15.375096321105957
    4. '.sw' → logprob: -15.750096321105957
    5. ' .' → logprob: -16.000097274780273
    6. 'swap' → logprob: -16.750097274780273
    7. '	swap' → logprob: -17.625097274780273
    8. '.s' → logprob: -17.750097274780273
    9. ').' → logprob: -18.250097274780273
    10. '.switch' → logprob: -18.875097274780273

Token 1066: '(r' (ID: 4729)
  Prédit: '(r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(r' → logprob: -2.2200749754119897e-06
    2. 'r' → logprob: -13.625001907348633
    3. '(' → logprob: -13.875001907348633
    4. '(
' → logprob: -18.250001907348633
    5. ' r' → logprob: -19.625001907348633
    6. '((' → logprob: -20.500001907348633
    7. ' (' → logprob: -20.500001907348633
    8. '	r' → logprob: -21.250001907348633
    9. '[r' → logprob: -22.375001907348633
    10. '   ' → logprob: -22.500001907348633

Token 1067: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.531315314830863e-06
    2. ',' → logprob: -13.875003814697266
    3. '```' → logprob: -13.875003814697266
    4. '2' → logprob: -14.375003814697266
    5. '[' → logprob: -15.625003814697266
    6. 'r' → logprob: -15.750003814697266
    7. '   ' → logprob: -15.875003814697266
    8. ' ' → logprob: -16.125003814697266
    9. '[r' → logprob: -17.187503814697266
    10. ',r' → logprob: -17.312503814697266

Token 1068: ',c' (ID: 22261)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.04879855737090111
    2. ',c' → logprob: -3.0487985610961914
    3. ' ,' → logprob: -8.798798561096191
    4. ',
' → logprob: -10.173798561096191
    5. ',r' → logprob: -10.798798561096191
    6. 'c' → logprob: -14.548798561096191
    7. '   ' → logprob: -15.423798561096191
    8. ',
' → logprob: -16.048797607421875
    9. ',

' → logprob: -16.048797607421875
    10. ')' → logprob: -16.298797607421875

Token 1069: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.3438327843905427e-05
    2. '2' → logprob: -11.37502384185791
    3. ',c' → logprob: -12.00002384185791
    4. ',' → logprob: -13.00002384185791
    5. 'c' → logprob: -13.37502384185791
    6. 'r' → logprob: -14.00002384185791
    7. ',r' → logprob: -14.75002384185791
    8. ' ' → logprob: -15.68752384185791
    9. '
' → logprob: -16.312522888183594
    10. '```' → logprob: -16.375022888183594

Token 1070: ',r' (ID: 33654)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -2.5107177862082608e-05
    2. ',r' → logprob: -11.125024795532227
    3. ' ,' → logprob: -11.750024795532227
    4. ',c' → logprob: -13.250024795532227
    5. ',
' → logprob: -15.125024795532227
    6. 'r' → logprob: -15.750024795532227
    7. ')' → logprob: -17.125024795532227
    8. 'c' → logprob: -17.625024795532227
    9. ',
' → logprob: -18.375024795532227
    10. '```' → logprob: -18.375024795532227

Token 1071: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: 0.0
    2. '۲' → logprob: -17.375
    3. ' ' → logprob: -17.75
    4. '```' → logprob: -18.0625
    5. '1' → logprob: -18.1875
    6. 'w' → logprob: -18.375
    7. '
' → logprob: -18.6875
    8. ')' → logprob: -18.75
    9. '२' → logprob: -19.125
    10. '₂' → logprob: -19.1875

Token 1072: ',c' (ID: 22261)
  Prédit: ',c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',c' → logprob: -0.003608267055824399
    2. ',' → logprob: -6.003608226776123
    3. 'c' → logprob: -6.878608226776123
    4. '2' → logprob: -9.628608703613281
    5. ' ,' → logprob: -10.503608703613281
    6. ',r' → logprob: -12.128608703613281
    7. ',
' → logprob: -12.878608703613281
    8. '
' → logprob: -15.378608703613281
    9. ',b' → logprob: -15.753608703613281
    10. '_,' → logprob: -15.753608703613281

Token 1073: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -1.0280383548888494e-06
    2. 'c' → logprob: -14.500000953674316
    3. ')' → logprob: -15.125000953674316
    4. '```' → logprob: -16.250001907348633
    5. ' ' → logprob: -16.750001907348633
    6. '<|end|>' → logprob: -17.000001907348633
    7. '+' → logprob: -17.250001907348633
    8. '   ' → logprob: -18.250001907348633
    9. '۲' → logprob: -18.500001907348633
    10. 's' → logprob: -18.625001907348633

Token 1074: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.033851079642772675
    2. ')
' → logprob: -3.408851146697998
    3. '           ' → logprob: -9.40885066986084
    4. '       ' → logprob: -9.78385066986084
    5. ')b' → logprob: -10.28385066986084
    6. '
' → logprob: -11.90885066986084
    7. ')
' → logprob: -11.90885066986084
    8. ')

' → logprob: -12.53385066986084
    9. '<|end|>' → logprob: -12.53385066986084
    10. ')return' → logprob: -13.03385066986084

Token 1075: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7118474841117859
    2. '           ' → logprob: -0.8368474841117859
    3. 'b' → logprob: -2.7118475437164307
    4. '
' → logprob: -5.461847305297852
    5. ' b' → logprob: -5.836847305297852
    6. '```' → logprob: -6.086847305297852
    7. '        
' → logprob: -8.836847305297852
    8. '<|end|>' → logprob: -9.461847305297852
    9. '   ' → logprob: -10.086847305297852
    10. ',b' → logprob: -11.711847305297852

Token 1076: ' #' (ID: 1069)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.5601945519447327
    2. '           ' → logprob: -1.435194492340088
    3. '       ' → logprob: -1.685194492340088
    4. ' b' → logprob: -5.435194492340088
    5. '   ' → logprob: -7.810194492340088
    6. 'score' → logprob: -7.935194492340088
    7. '
' → logprob: -9.685194969177246
    8. '```' → logprob: -9.810194969177246
    9. 'result' → logprob: -10.185194969177246
    10. ' ' → logprob: -10.435194969177246

Token 1077: ' After' (ID: 6311)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.119578517973423
    2. '       ' → logprob: -2.6195785999298096
    3. 'score' → logprob: -3.3695785999298096
    4. '           ' → logprob: -5.7445783615112305
    5. 'result' → logprob: -6.7445783615112305
    6. '   ' → logprob: -7.8695783615112305
    7. ' b' → logprob: -7.9945783615112305
    8. 'for' → logprob: -8.99457836151123
    9. 'return' → logprob: -8.99457836151123
    10. ' score' → logprob: -10.49457836151123

Token 1078: ' final' (ID: 1721)
  Prédit: 'the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'the' → logprob: -0.42342835664749146
    2. 'perform' → logprob: -1.5484282970428467
    3. 'app' → logprob: -3.7984282970428467
    4. ' the' → logprob: -3.9234282970428467
    5. 'self' → logprob: -4.173428535461426
    6. 'all' → logprob: -4.173428535461426
    7. ' performing' → logprob: -4.298428535461426
    8. 'sw' → logprob: -4.423428535461426
    9. 'that' → logprob: -4.798428535461426
    10. 'b' → logprob: -5.048428535461426

Token 1079: ' move' (ID: 5275)
  Prédit: 'swap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'swap' → logprob: -0.7334991097450256
    2. ' swap' → logprob: -1.4834990501403809
    3. 'b' → logprob: -2.483499050140381
    4. '       ' → logprob: -2.858499050140381
    5. '           ' → logprob: -3.108499050140381
    6. 'el' → logprob: -3.358499050140381
    7. 'score' → logprob: -4.483499050140381
    8. ' b' → logprob: -4.483499050140381
    9. '_swap' → logprob: -4.983499050140381
    10. ' elimination' → logprob: -5.108499050140381

Token 1080: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.6023821234703064
    2. '       ' → logprob: -1.2273821830749512
    3. 'b' → logprob: -1.8523821830749512
    4. '           ' → logprob: -6.727382183074951
    5. ' b' → logprob: -7.102382183074951
    6. '   ' → logprob: -8.102381706237793
    7. ',b' → logprob: -8.852381706237793
    8. '
' → logprob: -9.852381706237793
    9. '```' → logprob: -11.227381706237793
    10. ':' → logprob: -11.727381706237793

Token 1081: ' do' (ID: 621)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.01980014145374298
    2. '       ' → logprob: -4.019800186157227
    3. ' b' → logprob: -6.519800186157227
    4. 'score' → logprob: -9.019800186157227
    5. '           ' → logprob: -10.644800186157227
    6. '   ' → logprob: -11.019800186157227
    7. '```' → logprob: -12.019800186157227
    8. 'result' → logprob: -13.019800186157227
    9. 'return' → logprob: -13.769800186157227
    10. ' score' → logprob: -13.894800186157227

Token 1082: ' all' (ID: 722)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.6708143353462219
    2. '_full' → logprob: -0.9208143353462219
    3. 'full' → logprob: -2.420814275741577
    4. ' b' → logprob: -7.170814514160156
    5. ' full' → logprob: -8.295814514160156
    6. 'Full' → logprob: -8.545814514160156
    7. 'the' → logprob: -8.545814514160156
    8. '       ' → logprob: -9.420814514160156
    9. '```' → logprob: -9.420814514160156
    10. 'score' → logprob: -10.295814514160156

Token 1083: ' elimination' (ID: 77324)
  Prédit: 'el'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'el' → logprob: -0.10911055654287338
    2. 'b' → logprob: -2.4841105937957764
    3. '           ' → logprob: -4.734110355377197
    4. 'full' → logprob: -5.859110355377197
    5. '_full' → logprob: -6.109110355377197
    6. 'matches' → logprob: -6.234110355377197
    7. '_el' → logprob: -6.359110355377197
    8. '       ' → logprob: -6.734110355377197
    9. ' elimination' → logprob: -7.609110355377197
    10. ' elimin' → logprob: -8.359110832214355

Token 1084: ' cycles' (ID: 41478)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.020934101194143295
    2. ',' → logprob: -4.395934104919434
    3. 'b' → logprob: -5.645934104919434
    4. '
' → logprob: -5.645934104919434
    5. ' and' → logprob: -7.395934104919434
    6. '        
' → logprob: -7.895934104919434
    7. '           ' → logprob: -9.270934104919434
    8. ' b' → logprob: -9.395934104919434
    9. ' cycle' → logprob: -9.895934104919434
    10. '<|end|>' → logprob: -10.895934104919434

Token 1085: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.02785933017730713
    2. '
' → logprob: -3.6528592109680176
    3. 'b' → logprob: -6.652859210968018
    4. ',' → logprob: -9.402859687805176
    5. '        
' → logprob: -9.777859687805176
    6. '           ' → logprob: -10.277859687805176
    7. ' b' → logprob: -10.652859687805176
    8. '
' → logprob: -11.277859687805176
    9. '   ' → logprob: -11.527859687805176
    10. '  
' → logprob: -11.652859687805176

Token 1086: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0043012225069105625
    2. 'b' → logprob: -5.754301071166992
    3. '
' → logprob: -6.879301071166992
    4. ' b' → logprob: -10.504301071166992
    5. '   ' → logprob: -10.504301071166992
    6. '           ' → logprob: -11.254301071166992
    7. '
' → logprob: -11.629301071166992
    8. '```' → logprob: -12.129301071166992
    9. '        
' → logprob: -12.629301071166992
    10. '\n' → logprob: -13.004301071166992

Token 1087: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' (adapté à ' b') → logprob: -0.016468670219182968
    2. '       ' → logprob: -4.141468524932861
    3. ' b' → logprob: -8.26646900177002
    4. 'score' → logprob: -9.51646900177002
    5. '
' → logprob: -9.76646900177002
    6. '   ' → logprob: -10.26646900177002
    7. '```' → logprob: -12.64146900177002
    8. '           ' → logprob: -12.64146900177002
    9. '        
' → logprob: -13.76646900177002
    10. 'result' → logprob: -13.89146900177002

Token 1088: '.do' (ID: 25750)
  Prédit: '.do'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.do' → logprob: -0.0003908735525328666
    2. '.' → logprob: -7.875391006469727
    3. '.b' → logprob: -12.375391006469727
    4. '.d' → logprob: -12.875391006469727
    5. '#do' → logprob: -13.875391006469727
    6. ' .' → logprob: -14.250391006469727
    7. '.perform' → logprob: -15.000391006469727
    8. '.done' → logprob: -15.000391006469727
    9. '.Do' → logprob: -15.375391006469727
    10. '   ' → logprob: -15.375391006469727

Token 1089: '_full' (ID: 36973)
  Prédit: '_full'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_full' → logprob: -1.9361264946837764e-07
    2. 'full' → logprob: -16.5
    3. '_' → logprob: -18.125
    4. '_FULL' → logprob: -18.625
    5. '_final' → logprob: -18.875
    6. '```' → logprob: -18.875
    7. '_f' → logprob: -19.125
    8. 'Full' → logprob: -19.625
    9. ')_' → logprob: -20.125
    10. '
' → logprob: -20.625

Token 1090: '_el' (ID: 55168)
  Prédit: '_el'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_el' → logprob: -7.3458322731312364e-06
    2. 'el' → logprob: -11.875007629394531
    3. '_er' → logprob: -15.750007629394531
    4. '_' → logprob: -17.12500762939453
    5. 'El' → logprob: -18.12500762939453
    6. 'elim' → logprob: -18.25000762939453
    7. ' elimination' → logprob: -18.50000762939453
    8. '_em' → logprob: -18.50000762939453
    9. '_en' → logprob: -19.37500762939453
    10. '```' → logprob: -19.75000762939453

Token 1091: 'imination' (ID: 34362)
  Prédit: 'imination'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'imination' → logprob: -9.102680633077398e-05
    2. 'im' → logprob: -9.375090599060059
    3. 'imin' → logprob: -13.250090599060059
    4. 'imation' → logprob: -13.875090599060059
    5. 'iminate' → logprob: -14.000090599060059
    6. 'imini' → logprob: -14.125090599060059
    7. 'min' → logprob: -14.375090599060059
    8. '
' → logprob: -15.250090599060059
    9. 'imi' → logprob: -15.375090599060059
    10. 'imina' → logprob: -15.625090599060059

Token 1092: '_cycle' (ID: 97714)
  Prédit: '_cycle'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_cycle' → logprob: -1.7954958821064793e-05
    2. 'cycle' → logprob: -11.000018119812012
    3. '_cycles' → logprob: -14.125018119812012
    4. '_' → logprob: -15.250018119812012
    5. '_c' → logprob: -16.500017166137695
    6. ' cycle' → logprob: -17.125017166137695
    7. '_
' → logprob: -17.500017166137695
    8. 'Cycle' → logprob: -17.625017166137695
    9. '_loop' → logprob: -17.750017166137695
    10. '
' → logprob: -17.875017166137695

Token 1093: '()
' (ID: 1234)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.3888082504272461
    2. '       ' → logprob: -1.138808250427246
    3. '   ' → logprob: -7.513808250427246
    4. 'return' → logprob: -7.638808250427246
    5. '        
' → logprob: -8.138808250427246
    6. ' return' → logprob: -8.388808250427246
    7. '<|end|>' → logprob: -8.638808250427246
    8. '
' → logprob: -9.638808250427246
    9. '  
' → logprob: -10.013808250427246
    10. '    
' → logprob: -10.888808250427246

Token 1094: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.029979458078742027
    2. 'return' → logprob: -3.5299794673919678
    3. ' return' → logprob: -8.404979705810547
    4. '```' → logprob: -13.029979705810547
    5. '   ' → logprob: -13.529979705810547
    6. '
' → logprob: -14.154979705810547
    7. '{return' → logprob: -14.529979705810547
    8. '	return' → logprob: -14.779979705810547
    9. 'b' → logprob: -17.529979705810547
    10. ':return' → logprob: -17.654979705810547

Token 1095: ' gained' (ID: 27841)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.008635488338768482
    2. '       ' → logprob: -4.758635520935059
    3. ' return' → logprob: -11.258635520935059
    4. '
' → logprob: -12.133635520935059
    5. 'score' → logprob: -13.508635520935059
    6. 'result' → logprob: -14.258635520935059
    7. '	return' → logprob: -15.133635520935059
    8. '   ' → logprob: -16.133634567260742
    9. '{return' → logprob: -16.383634567260742
    10. '```' → logprob: -16.383634567260742

Token 1096: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3896704912185669
    2. '=' → logprob: -1.139670491218567
    3. '_score' → logprob: -5.889670372009277
    4. 'score' → logprob: -11.264670372009277
    5. '_amount' → logprob: -12.014670372009277
    6. '_' → logprob: -12.639670372009277
    7. '_scores' → logprob: -13.264670372009277
    8. '   ' → logprob: -14.014670372009277
    9. '_points' → logprob: -14.264670372009277
    10. '	' → logprob: -14.514670372009277

Token 1097: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.3868785798549652
    2. ' b' → logprob: -1.1368786096572876
    3. '       ' → logprob: -11.886878967285156
    4. '   ' → logprob: -15.386878967285156
    5. '	b' → logprob: -15.636878967285156
    6. '
' → logprob: -15.886878967285156
    7. '(b' → logprob: -16.136878967285156
    8. '        ' → logprob: -17.886878967285156
    9. ' ' → logprob: -18.011878967285156
    10. ')b' → logprob: -18.011878967285156

Token 1098: '.total' (ID: 23374)
  Prédit: '.total'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.total' → logprob: -2.3915141355246305e-05
    2. 'total' → logprob: -11.00002384185791
    3. '.' → logprob: -11.87502384185791
    4. ' .' → logprob: -16.625024795532227
    5. '
' → logprob: -18.500024795532227
    6. ').' → logprob: -18.875024795532227
    7. ' total' → logprob: -19.000024795532227
    8. '	total' → logprob: -19.625024795532227
    9. '.score' → logprob: -20.250024795532227
    10. 'b' → logprob: -20.500024795532227

Token 1099: '_score' (ID: 22555)
  Prédit: '_score'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_score' → logprob: -1.1472419600977446e-06
    2. 'score' → logprob: -13.750000953674316
    3. 'Score' → logprob: -17.500001907348633
    4. '-score' → logprob: -18.125001907348633
    5. '_SCORE' → logprob: -19.250001907348633
    6. '_scores' → logprob: -19.500001907348633
    7. ' score' → logprob: -21.625001907348633
    8. 's' → logprob: -21.875001907348633
    9. '_code' → logprob: -22.000001907348633
    10. '	score' → logprob: -22.125001907348633

Token 1100: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.005240872036665678
    2. '-' → logprob: -5.2552409172058105
    3. '       ' → logprob: -12.005240440368652
    4. '   ' → logprob: -14.630240440368652
    5. ' ' → logprob: -15.880240440368652
    6. ' –' → logprob: -16.13024139404297
    7. '        ' → logprob: -16.13024139404297
    8. ' −' → logprob: -17.13024139404297
    9. '<|end|>' → logprob: -17.25524139404297
    10. ' =' → logprob: -17.75524139404297

Token 1101: ' score' (ID: 8429)
  Prédit: 'score'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'score' → logprob: -0.0004309076175559312
    2. ' score' → logprob: -7.750431060791016
    3. 'self' → logprob: -15.250431060791016
    4. '	score' → logprob: -20.125431060791016
    5. '(score' → logprob: -21.250431060791016
    6. '       ' → logprob: -21.250431060791016
    7. '   ' → logprob: -21.625431060791016
    8. 'code' → logprob: -23.125431060791016
    9. ' self' → logprob: -23.500431060791016
    10. 'scores' → logprob: -24.000431060791016

Token 1102: '_before' (ID: 56638)
  Prédit: '_before'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_before' → logprob: -5.9153885558771435e-06
    2. 'before' → logprob: -12.125005722045898
    3. '_after' → logprob: -15.250005722045898
    4. 'Before' → logprob: -15.750005722045898
    5. '_' → logprob: -18.5000057220459
    6. ' before' → logprob: -18.7500057220459
    7. '   ' → logprob: -19.1250057220459
    8. '_be' → logprob: -19.3750057220459
    9. '_for' → logprob: -20.2500057220459
    10. '_score' → logprob: -20.6250057220459

Token 1103: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.40728098154067993
    2. '
' → logprob: -1.1572809219360352
    3. 'return' → logprob: -4.032280921936035
    4. ' return' → logprob: -6.157280921936035
    5. '<|end|>' → logprob: -8.657280921936035
    6. '	return' → logprob: -9.407280921936035
    7. '   ' → logprob: -10.407280921936035
    8. '
' → logprob: -10.657280921936035
    9. '{return' → logprob: -11.907280921936035
    10. '```' → logprob: -12.157280921936035

Token 1104: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.02340957336127758
    2. 'return' → logprob: -3.773409605026245
    3. ' return' → logprob: -8.773409843444824
    4. '   ' → logprob: -11.773409843444824
    5. '	return' → logprob: -14.148409843444824
    6. '{return' → logprob: -15.023409843444824
    7. '```' → logprob: -15.398409843444824
    8. '
' → logprob: -15.648409843444824
    9. '           ' → logprob: -16.523408889770508
    10. '	' → logprob: -17.148408889770508

Token 1105: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.00020890454470645636
    2. '       ' → logprob: -8.500208854675293
    3. ' return' → logprob: -12.250208854675293
    4. '
' → logprob: -14.500208854675293
    5. 'self' → logprob: -16.25020980834961
    6. '	return' → logprob: -16.75020980834961
    7. '{return' → logprob: -18.00020980834961
    8. 'eturn' → logprob: -18.62520980834961
    9. 'b' → logprob: -19.37520980834961
    10. '```' → logprob: -19.75020980834961

Token 1106: ' gained' (ID: 27841)
  Prédit: 'g'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'g' → logprob: -0.0015040287980809808
    2. ' gained' → logprob: -6.501503944396973
    3. 'b' → logprob: -13.876503944396973
    4. '	g' → logprob: -14.876503944396973
    5. ' g' → logprob: -15.626503944396973
    6. 'got' → logprob: -16.00150489807129
    7. 'gain' → logprob: -16.25150489807129
    8. '   ' → logprob: -17.12650489807129
    9. '       ' → logprob: -18.62650489807129
    10. '_g' → logprob: -18.75150489807129

Token 1107: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1108: 'class' (ID: 1444)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1109: ' Game' (ID: 7022)
  Prédit: 'Move'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Move' → logprob: -1.467380404472351
    2. 'Board' → logprob: -1.717380404472351
    3. 'Solution' → logprob: -2.2173805236816406
    4. 'Solver' → logprob: -2.3423805236816406
    5. ' Move' → logprob: -2.7173805236816406
    6. ' Board' → logprob: -2.8423805236816406
    7. 'Player' → logprob: -2.9673805236816406
    8. ' Solver' → logprob: -3.0923805236816406
    9. 'Game' → logprob: -3.3423805236816406
    10. 'Block' → logprob: -3.9673805236816406

Token 1110: 'Move' (ID: 12707)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0013578521320596337
    2. ':
' → logprob: -6.8763580322265625
    3. '():' → logprob: -9.126358032226562
    4. '(object' → logprob: -10.126358032226562
    5. '(Game' → logprob: -10.251358032226562
    6. '(' → logprob: -10.376358032226562
    7. 'State' → logprob: -10.376358032226562
    8. '):' → logprob: -11.001358032226562
    9. 'Controller' → logprob: -11.626358032226562
    10. ':

' → logprob: -12.126358032226562

Token 1111: 'Planner' (ID: 120933)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.014367517083883286
    2. ':
' → logprob: -4.264367580413818
    3. '(List' → logprob: -9.26436710357666
    4. '(' → logprob: -9.76436710357666
    5. '(object' → logprob: -10.63936710357666
    6. ':

' → logprob: -12.51436710357666
    7. '):' → logprob: -12.88936710357666
    8. '(Block' → logprob: -12.88936710357666
    9. '```' → logprob: -13.13936710357666
    10. ' :' → logprob: -13.26436710357666

Token 1112: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.002813313389196992
    2. ':
' → logprob: -6.002813339233398
    3. '(' → logprob: -8.877813339233398
    4. '<|end|>' → logprob: -9.002813339233398
    5. ' :' → logprob: -10.127813339233398
    6. '):' → logprob: -11.627813339233398
    7. '(Abstract' → logprob: -12.127813339233398
    8. ':

' → logprob: -12.752813339233398
    9. '<|end|>' → logprob: -13.127813339233398
    10. '(object' → logprob: -13.127813339233398

Token 1113: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0032771718688309193
    2. 'def' → logprob: -6.25327730178833
    3. ' def' → logprob: -6.62827730178833
    4. 'class' → logprob: -10.753276824951172
    5. ':' → logprob: -13.628276824951172
    6. '    
' → logprob: -14.503276824951172
    7. '
' → logprob: -14.503276824951172
    8. '   ' → logprob: -15.003276824951172
    9. '	def' → logprob: -15.003276824951172
    10. '```' → logprob: -15.253276824951172

Token 1114: ' def' (ID: 1056)
  Prédit: ' def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' def' → logprob: -0.3255562484264374
    2. 'def' (adapté à ' def') → logprob: -1.3255562782287598
    3. '   ' → logprob: -4.45055627822876
    4. 'class' → logprob: -7.70055627822876
    5. 'from' → logprob: -10.075555801391602
    6. 'MAX' → logprob: -11.075555801391602
    7. '```' → logprob: -11.325555801391602
    8. '	def' → logprob: -12.825555801391602
    9. ' class' → logprob: -12.950555801391602
    10. ' ' → logprob: -12.950555801391602

Token 1115: ' __' (ID: 2516)
  Prédit: 'init'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: -0.33350324630737305
    2. 'def' → logprob: -1.583503246307373
    3. '__' → logprob: -2.958503246307373
    4. 'staticmethod' → logprob: -4.208503246307373
    5. ' def' → logprob: -4.958503246307373
    6. 'classmethod' → logprob: -6.458503246307373
    7. 'class' → logprob: -7.333503246307373
    8. ' __' → logprob: -7.583503246307373
    9. 'python' → logprob: -7.833503246307373
    10. 'int' → logprob: -7.958503246307373

Token 1116: 'init' (ID: 3287)
  Prédit: 'init'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: -0.3234328329563141
    2. 'def' → logprob: -2.4484329223632812
    3. 'self' → logprob: -3.1984329223632812
    4. 'it' → logprob: -3.1984329223632812
    5. 'Init' → logprob: -3.9484329223632812
    6. 'class' → logprob: -3.9484329223632812
    7. 'nit' → logprob: -4.198432922363281
    8. '```' → logprob: -4.323432922363281
    9. 'num' → logprob: -5.073432922363281
    10. 'List' → logprob: -5.448432922363281

Token 1117: '__(' (ID: 8241)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.004193675238639116
    2. ' (' → logprob: -5.6291937828063965
    3. '(' → logprob: -8.254193305969238
    4. '__(' → logprob: -8.254193305969238
    5. '   ' → logprob: -10.004193305969238
    6. 'self' → logprob: -11.004193305969238
    7. '(
' → logprob: -12.879193305969238
    8. ' self' → logprob: -13.254193305969238
    9. '
' → logprob: -13.504193305969238
    10. ' ' → logprob: -13.504193305969238

Token 1118: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -1.6405310816480778e-05
    2. ' self' → logprob: -11.875016212463379
    3. '       ' → logprob: -12.750016212463379
    4. '   ' → logprob: -12.875016212463379
    5. '
' → logprob: -13.375016212463379
    6. ')' → logprob: -13.625016212463379
    7. '):
' → logprob: -14.125016212463379
    8. '(self' → logprob: -15.625016212463379
    9. '0' → logprob: -16.625017166137695
    10. 'block' → logprob: -16.750017166137695

Token 1119: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0070868805050849915
    2. 'self' → logprob: -5.007086753845215
    3. '(self' → logprob: -8.882086753845215
    4. '):
' → logprob: -9.132086753845215
    5. ' self' → logprob: -10.257086753845215
    6. ' (' → logprob: -10.382086753845215
    7. ' ,' → logprob: -10.632086753845215
    8. '   ' → logprob: -11.632086753845215
    9. '       ' → logprob: -12.007086753845215
    10. '
' → logprob: -12.132086753845215

Token 1120: ' board' (ID: 6796)
  Prédit: 'board'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'board' → logprob: -0.02383814938366413
    2. 'initial' → logprob: -4.648838043212891
    3. 'max' → logprob: -5.023838043212891
    4. ' board' → logprob: -5.148838043212891
    5. ' initial' → logprob: -7.148838043212891
    6. 'block' → logprob: -7.773838043212891
    7. ' max' → logprob: -8.77383804321289
    8. 'start' → logprob: -9.14883804321289
    9. 'grid' → logprob: -10.02383804321289
    10. 'self' → logprob: -10.77383804321289

Token 1121: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -8.685467764735222e-05
    2. '):
' → logprob: -9.500086784362793
    3. '):' → logprob: -11.750086784362793
    4. ',' → logprob: -13.125086784362793
    5. '   ' → logprob: -14.000086784362793
    6. ' :' → logprob: -14.125086784362793
    7. '_:' → logprob: -16.25008773803711
    8. ':
' → logprob: -16.37508773803711
    9. ':'' → logprob: -16.50008773803711
    10. '       ' → logprob: -16.75008773803711

Token 1122: ' Board' (ID: 10837)
  Prédit: 'Board'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Board' → logprob: -0.0005541055579669774
    2. ' Board' → logprob: -7.500554084777832
    3. 'board' → logprob: -13.750554084777832
    4. ' board' → logprob: -16.50055503845215
    5. '_board' → logprob: -18.25055503845215
    6. '   ' → logprob: -18.37555503845215
    7. '(Board' → logprob: -18.37555503845215
    8. ')' → logprob: -18.62555503845215
    9. '.Board' → logprob: -19.62555503845215
    10. 'BOARD' → logprob: -20.12555503845215

Token 1123: ',' (ID: 11)
  Prédit: '):
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.06314916908740997
    2. '):' → logprob: -2.8131492137908936
    3. ',' → logprob: -6.9381489753723145
    4. '       ' → logprob: -9.188149452209473
    5. '   ' → logprob: -9.438149452209473
    6. '):
' → logprob: -11.563149452209473
    7. ')' → logprob: -11.688149452209473
    8. ' ):
' → logprob: -12.188149452209473
    9. ':' → logprob: -12.813149452209473
    10. ''):
' → logprob: -14.188149452209473

Token 1124: ' max' (ID: 2999)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.07849697023630142
    2. 'moves' → logprob: -3.7034969329833984
    3. 'block' → logprob: -4.078496932983398
    4. ' max' → logprob: -4.078496932983398
    5. 'listener' → logprob: -4.953496932983398
    6. 'move' → logprob: -5.703496932983398
    7. 'target' → logprob: -6.453496932983398
    8. 'path' → logprob: -6.828496932983398
    9. 'listeners' → logprob: -7.078496932983398
    10. ' moves' → logprob: -7.578496932983398

Token 1125: '_moves' (ID: 110706)
  Prédit: '_depth'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_depth' → logprob: -0.4553503096103668
    2. '_moves' → logprob: -1.0803502798080444
    3. '_steps' → logprob: -4.705350399017334
    4. '_move' → logprob: -5.205350399017334
    5. 'depth' → logprob: -5.330350399017334
    6. 'moves' → logprob: -5.830350399017334
    7. '_length' → logprob: -5.955350399017334
    8. '_path' → logprob: -6.830350399017334
    9. '_sw' → logprob: -9.705349922180176
    10. 'move' → logprob: -10.080349922180176

Token 1126: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.005652994383126497
    2. '=' → logprob: -5.255652904510498
    3. ' :' → logprob: -8.630653381347656
    4. ':int' → logprob: -9.255653381347656
    5. '):' → logprob: -9.505653381347656
    6. '):
' → logprob: -9.880653381347656
    7. ' =' → logprob: -11.130653381347656
    8. '   ' → logprob: -12.880653381347656
    9. '_:' → logprob: -14.755653381347656
    10. ' ):' → logprob: -15.130653381347656

Token 1127: ' int' (ID: 677)
  Prédit: '5'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '5' → logprob: -1.1008601188659668
    2. 'int' → logprob: -1.1008601188659668
    3. '3' → logprob: -1.6008601188659668
    4. '10' → logprob: -2.100860118865967
    5. ' int' → logprob: -5.225860118865967
    6. '4' → logprob: -5.725860118865967
    7. '6' → logprob: -7.850860118865967
    8. ' ' → logprob: -7.975860118865967
    9. '7' → logprob: -8.475860595703125
    10. '   ' → logprob: -8.475860595703125

Token 1128: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.3384489417076111
    2. '):
' → logprob: -1.4634490013122559
    3. ':' → logprob: -2.963449001312256
    4. '=' → logprob: -5.713449001312256
    5. ',' → logprob: -7.838449001312256
    6. ' ):' → logprob: -8.713448524475098
    7. ' ):
' → logprob: -9.713448524475098
    8. '):
' → logprob: -9.838448524475098
    9. ')' → logprob: -10.213448524475098
    10. ':int' → logprob: -10.963448524475098

Token 1129: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.002164890756830573
    2. 'self' → logprob: -6.252164840698242
    3. ' self' → logprob: -8.752164840698242
    4. '   ' → logprob: -9.752164840698242
    5. '	' → logprob: -11.627164840698242
    6. '	self' → logprob: -11.877164840698242
    7. ',' → logprob: -13.752164840698242
    8. '	   ' → logprob: -13.877164840698242
    9. ':' → logprob: -14.752164840698242
    10. '```' → logprob: -14.752164840698242

Token 1130: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.0003573919821064919
    2. '       ' → logprob: -8.250357627868652
    3. ' self' → logprob: -9.250357627868652
    4. '   ' → logprob: -17.875356674194336
    5. '	self' → logprob: -18.125356674194336
    6. 'super' → logprob: -19.500356674194336
    7. '
' → logprob: -19.875356674194336
    8. '(self' → logprob: -21.375356674194336
    9. 'from' → logprob: -21.875356674194336
    10. '```' → logprob: -22.000356674194336

Token 1131: '.board' (ID: 50264)
  Prédit: '.board'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.board' → logprob: -4.1557283111615106e-05
    2. 'board' → logprob: -10.125041961669922
    3. '.' → logprob: -14.375041961669922
    4. '	board' → logprob: -14.750041961669922
    5. ' .' → logprob: -15.875041961669922
    6. ' board' → logprob: -15.875041961669922
    7. '.Board' → logprob: -16.500041961669922
    8. '.bo' → logprob: -17.250041961669922
    9. '.b' → logprob: -17.375041961669922
    10. '.current' → logprob: -17.875041961669922

Token 1132: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.31331852078437805
    2. '=' → logprob: -1.3133184909820557
    3. ':' → logprob: -10.563318252563477
    4. '   ' → logprob: -10.813318252563477
    5. ' ' → logprob: -11.813318252563477
    6. '  ' → logprob: -13.438318252563477
    7. ',' → logprob: -14.313318252563477
    8. '.' → logprob: -14.813318252563477
    9. '    ' → logprob: -14.813318252563477
    10. '.board' → logprob: -15.938318252563477

Token 1133: ' board' (ID: 6796)
  Prédit: 'board'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'board' → logprob: -0.02630435861647129
    2. ' board' → logprob: -3.651304244995117
    3. '	board' → logprob: -13.026304244995117
    4. ' ' → logprob: -14.526304244995117
    5. 'b' → logprob: -15.026304244995117
    6. '   ' → logprob: -15.151304244995117
    7. '(board' → logprob: -15.401304244995117
    8. 'deep' → logprob: -15.526304244995117
    9. 'bo' → logprob: -15.901304244995117
    10. ' deepcopy' → logprob: -16.401304244995117

Token 1134: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0002836232597474009
    2. '
' → logprob: -8.250283241271973
    3. 'self' → logprob: -11.375283241271973
    4. ',' → logprob: -12.500283241271973
    5. ' self' → logprob: -12.875283241271973
    6. '<|end|>' → logprob: -13.000283241271973
    7. '   ' → logprob: -13.250283241271973
    8. '      ' → logprob: -15.500283241271973
    9. ' ' → logprob: -16.12528419494629
    10. '        
' → logprob: -16.75028419494629

Token 1135: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.008752365596592426
    2. 'self' → logprob: -4.758752346038818
    3. ' self' → logprob: -9.633752822875977
    4. '   ' → logprob: -10.008752822875977
    5. '	self' → logprob: -10.758752822875977
    6. '	' → logprob: -12.383752822875977
    7. '
' → logprob: -13.633752822875977
    8. '      ' → logprob: -15.008752822875977
    9. ' ' → logprob: -15.883752822875977
    10. '     ' → logprob: -16.133752822875977

Token 1136: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.004154379945248365
    2. '       ' → logprob: -5.504154205322266
    3. ' self' → logprob: -9.504154205322266
    4. '
' → logprob: -14.004154205322266
    5. '   ' → logprob: -14.754154205322266
    6. '	self' → logprob: -16.129154205322266
    7. 'max' → logprob: -18.004154205322266
    8. ' ' → logprob: -18.504154205322266
    9. '0' → logprob: -19.129154205322266
    10. '	' → logprob: -19.379154205322266

Token 1137: '.n' (ID: 1835)
  Prédit: '.max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.max' → logprob: -0.03807627409696579
    2. 'max' → logprob: -3.288076162338257
    3. ' max' → logprob: -10.413076400756836
    4. '
' → logprob: -13.788076400756836
    5. '.maximum' → logprob: -13.913076400756836
    6. '	max' → logprob: -14.663076400756836
    7. '.' → logprob: -14.788076400756836
    8. '_max' → logprob: -15.038076400756836
    9. '.MAX' → logprob: -15.163076400756836
    10. '.m' → logprob: -15.288076400756836

Token 1138: ' =' (ID: 314)
  Prédit: '_moves'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_moves' → logprob: -0.0038509091828018427
    2. 'um' → logprob: -6.128850936889648
    3. 'max' → logprob: -7.378850936889648
    4. '_max' → logprob: -7.753850936889648
    5. 'moves' → logprob: -8.878850936889648
    6. 'ax' → logprob: -8.878850936889648
    7. '   ' → logprob: -9.503850936889648
    8. '=' → logprob: -10.003850936889648
    9. ' =' → logprob: -10.128850936889648
    10. '_' → logprob: -10.253850936889648

Token 1139: ' max' (ID: 2999)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -5.157039049663581e-05
    2. ' max' → logprob: -9.875051498413086
    3. '0' → logprob: -18.250051498413086
    4. '5' → logprob: -19.625051498413086
    5. '(max' → logprob: -20.000051498413086
    6. 'len' → logprob: -20.125051498413086
    7. '   ' → logprob: -20.875051498413086
    8. '=max' → logprob: -20.875051498413086
    9. '	max' → logprob: -21.000051498413086
    10. '=' → logprob: -21.125051498413086

Token 1140: '_moves' (ID: 110706)
  Prédit: '_moves'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_moves' → logprob: -8.061054359131958e-06
    2. 'moves' → logprob: -12.125007629394531
    3. '_move' → logprob: -13.125007629394531
    4. 'Moves' → logprob: -15.000007629394531
    5. '_mov' → logprob: -16.37500762939453
    6. '   ' → logprob: -16.87500762939453
    7. '
' → logprob: -17.25000762939453
    8. '_' → logprob: -17.50000762939453
    9. ' moves' → logprob: -18.25000762939453
    10. '_depth' → logprob: -18.37500762939453

Token 1141: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3537137508392334
    2. '
' → logprob: -1.3537137508392334
    3. '       ' → logprob: -3.4787137508392334
    4. '<|end|>' → logprob: -5.3537139892578125
    5. 'def' → logprob: -5.8537139892578125
    6. ',' → logprob: -7.7287139892578125
    7. 'self' → logprob: -8.603713989257812
    8. ' def' → logprob: -8.728713989257812
    9. '    
' → logprob: -8.978713989257812
    10. ' ' → logprob: -9.728713989257812

Token 1142: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.004400086589157581
    2. '
' → logprob: -5.629400253295898
    3. 'def' → logprob: -7.379400253295898
    4. '    
' → logprob: -9.754400253295898
    5. ' def' → logprob: -9.754400253295898
    6. '<|end|>' → logprob: -11.129400253295898
    7. '       ' → logprob: -11.254400253295898
    8. '```' → logprob: -11.504400253295898
    9. ' ' → logprob: -12.379400253295898
    10. '        
' → logprob: -12.754400253295898

Token 1143: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.9591798782348633
    2. 'def' → logprob: -1.2091798782348633
    3. '       ' → logprob: -1.3341798782348633
    4. '   ' → logprob: -2.9591798782348633
    5. ' self' → logprob: -6.459179878234863
    6. '
' → logprob: -6.709179878234863
    7. ' def' → logprob: -8.584179878234863
    8. '	self' → logprob: -9.959179878234863
    9. 'from' → logprob: -10.834179878234863
    10. '        
' → logprob: -11.709179878234863

Token 1144: '.best' (ID: 95548)
  Prédit: '.best'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.best' → logprob: -0.011682739481329918
    2. 'best' → logprob: -4.761682510375977
    3. '.max' → logprob: -6.886682510375977
    4. ' best' → logprob: -7.011682510375977
    5. '.' → logprob: -7.511682510375977
    6. '.moves' → logprob: -9.261682510375977
    7. '.score' → logprob: -9.511682510375977
    8. 'max' → logprob: -9.761682510375977
    9. '.results' → logprob: -10.136682510375977
    10. '.current' → logprob: -10.261682510375977

Token 1145: '_score' (ID: 22555)
  Prédit: '_score'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_score' → logprob: -0.07090303301811218
    2. '_move' → logprob: -3.0709030628204346
    3. '_path' → logprob: -3.8209030628204346
    4. '_moves' → logprob: -9.195902824401855
    5. 'score' → logprob: -10.695902824401855
    6. '_sequence' → logprob: -11.070902824401855
    7. '_paths' → logprob: -11.820902824401855
    8. '_' → logprob: -12.445902824401855
    9. '_solution' → logprob: -12.945902824401855
    10. '_scores' → logprob: -13.195902824401855

Token 1146: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2519642114639282
    2. '=' → logprob: -1.5019642114639282
    3. ':' → logprob: -10.376964569091797
    4. '   ' → logprob: -13.501964569091797
    5. '=None' → logprob: -14.001964569091797
    6. ':int' → logprob: -14.001964569091797
    7. '<|end|>' → logprob: -15.376964569091797
    8. ' ' → logprob: -15.501964569091797
    9. ',' → logprob: -15.751964569091797
    10. '=int' → logprob: -16.376964569091797

Token 1147: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.9266199160483666e-05
    2. '-' → logprob: -10.875019073486328
    3. ' ' → logprob: -16.000019073486328
    4. 'float' → logprob: -16.500019073486328
    5. ' -' → logprob: -18.000019073486328
    6. '   ' → logprob: -20.500019073486328
    7. 'None' → logprob: -21.375019073486328
    8. '−' → logprob: -21.625019073486328
    9. '[' → logprob: -21.750019073486328
    10. '-(' → logprob: -22.375019073486328

Token 1148: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00020497082732617855
    2. '-' → logprob: -8.500205039978027
    3. 'float' → logprob: -13.500205039978027
    4. '-s' → logprob: -17.87520408630371
    5. '-(' → logprob: -19.12520408630371
    6. '-f' → logprob: -19.50020408630371
    7. '-m' → logprob: -20.12520408630371
    8. '-n' → logprob: -20.62520408630371
    9. '-p' → logprob: -20.75020408630371
    10. 'None' → logprob: -20.87520408630371

Token 1149: '

' (ID: 279)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0018098909640684724
    2. '
' → logprob: -7.251810073852539
    3. '       ' → logprob: -7.376810073852539
    4. 'def' → logprob: -7.876810073852539
    5. '    
' → logprob: -9.876810073852539
    6. '<|end|>' → logprob: -11.126810073852539
    7. '	def' → logprob: -11.376810073852539
    8. 'self' → logprob: -11.751810073852539
    9. ' def' → logprob: -13.001810073852539
    10. '	self' → logprob: -13.376810073852539

Token 1150: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.001164388144388795
    2. '       ' → logprob: -7.751164436340332
    3. 'def' → logprob: -7.751164436340332
    4. 'self' → logprob: -8.126164436340332
    5. '	self' → logprob: -13.251164436340332
    6. ' ' → logprob: -13.751164436340332
    7. '	def' → logprob: -13.751164436340332
    8. ' self' → logprob: -14.251164436340332
    9. ' def' → logprob: -14.251164436340332
    10. '```' → logprob: -14.501164436340332

Token 1151: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.00015478975547011942
    2. ' def' → logprob: -9.250154495239258
    3. '   ' → logprob: -9.750154495239258
    4. '
' → logprob: -15.625154495239258
    5. '	def' → logprob: -16.500154495239258
    6. '```' → logprob: -16.625154495239258
    7. 'from' → logprob: -18.250154495239258
    8. 'async' → logprob: -19.000154495239258
    9. 'class' → logprob: -19.625154495239258
    10. ' ' → logprob: -19.875154495239258

Token 1152: ' find' (ID: 1646)
  Prédit: 'plan'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'plan' → logprob: -0.7873724102973938
    2. ' plan' → logprob: -1.037372350692749
    3. 'search' → logprob: -2.412372350692749
    4. 'dfs' → logprob: -2.912372350692749
    5. 'try' → logprob: -4.287372589111328
    6. ' dfs' → logprob: -4.537372589111328
    7. ' search' → logprob: -4.662372589111328
    8. 'find' → logprob: -5.537372589111328
    9. ' find' → logprob: -5.662372589111328
    10. ' try' → logprob: -5.787372589111328

Token 1153: '_all' (ID: 13305)
  Prédit: '_best'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_best' → logprob: -0.021436426788568497
    2. '_moves' → logprob: -4.6464362144470215
    3. '_next' → logprob: -5.0214362144470215
    4. '(self' → logprob: -6.3964362144470215
    5. '_max' → logprob: -6.3964362144470215
    6. '_path' → logprob: -7.6464362144470215
    7. '_move' → logprob: -8.02143669128418
    8. '_paths' → logprob: -8.14643669128418
    9. '_' → logprob: -8.39643669128418
    10. '_possible' → logprob: -9.27143669128418

Token 1154: '_positions' (ID: 93193)
  Prédit: '_moves'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_moves' → logprob: -0.100129134953022
    2. '(self' → logprob: -3.7251291275024414
    3. '_paths' → logprob: -3.7251291275024414
    4. 'moves' → logprob: -3.9751291275024414
    5. '_valid' → logprob: -4.475129127502441
    6. '_possible' → logprob: -4.475129127502441
    7. '_sw' → logprob: -6.600129127502441
    8. '_positions' → logprob: -6.600129127502441
    9. '_best' → logprob: -6.725129127502441
    10. 'self' → logprob: -7.475129127502441

Token 1155: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -4.842555426876061e-06
    2. 'self' → logprob: -13.000004768371582
    3. '(' → logprob: -13.875004768371582
    4. '   ' → logprob: -14.125004768371582
    5. ' (' → logprob: -15.125004768371582
    6. '       ' → logprob: -15.125004768371582
    7. 'def' → logprob: -15.500004768371582
    8. '=self' → logprob: -19.6250057220459
    9. 's' → logprob: -19.7500057220459
    10. '(
' → logprob: -19.7500057220459

Token 1156: ')' (ID: 8)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.00011069540778407827
    2. 'self' → logprob: -9.625110626220703
    3. ')' → logprob: -10.750110626220703
    4. '(' → logprob: -11.625110626220703
    5. '   ' → logprob: -12.125110626220703
    6. '       ' → logprob: -12.875110626220703
    7. '):
' → logprob: -13.000110626220703
    8. '(s' → logprob: -13.875110626220703
    9. ' (' → logprob: -14.125110626220703
    10. '):' → logprob: -14.625110626220703

Token 1157: ' ->' (ID: 2747)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.00017421995289623737
    2. 'self' → logprob: -9.125174522399902
    3. '   ' → logprob: -10.500174522399902
    4. '       ' → logprob: -10.500174522399902
    5. '(' → logprob: -12.125174522399902
    6. 'def' → logprob: -13.500174522399902
    7. '```' → logprob: -14.125174522399902
    8. ' (' → logprob: -14.750174522399902
    9. '->' → logprob: -14.750174522399902
    10. ' self' → logprob: -14.875174522399902

Token 1158: ' List' (ID: 2655)
  Prédit: 'List'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'List' → logprob: -0.00012737659562844783
    2. ' List' → logprob: -9.000127792358398
    3. 'list' → logprob: -13.375127792358398
    4. '[List' → logprob: -13.500127792358398
    5. 'Set' → logprob: -13.875127792358398
    6. 'def' → logprob: -17.0001277923584
    7. '   ' → logprob: -17.1251277923584
    8. 'Generator' → logprob: -17.6251277923584
    9. '	List' → logprob: -18.0001277923584
    10. 'Iterator' → logprob: -18.3751277923584

Token 1159: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -3.8889261304575484e-06
    2. '[List' → logprob: -12.875003814697266
    3. '[
' → logprob: -14.375003814697266
    4. '[int' → logprob: -14.625003814697266
    5. '[(' → logprob: -16.625003814697266
    6. '   ' → logprob: -17.000003814697266
    7. ':
' → logprob: -18.000003814697266
    8. ' [' → logprob: -18.875003814697266
    9. 'Tuple' → logprob: -19.875003814697266
    10. '```' → logprob: -19.875003814697266

Token 1160: 'Tuple' (ID: 40048)
  Prédit: 'Tuple'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Tuple' → logprob: -9.73446003627032e-05
    2. '[' → logprob: -9.250097274780273
    3. ' Tuple' → logprob: -14.250097274780273
    4. '   ' → logprob: -15.375097274780273
    5. 'List' → logprob: -16.625097274780273
    6. '```' → logprob: -16.750097274780273
    7. 'tuple' → logprob: -16.875097274780273
    8. 'Tu' → logprob: -17.000097274780273
    9. '.Tuple' → logprob: -17.125097274780273
    10. '<Tuple' → logprob: -17.375097274780273

Token 1161: '[int' (ID: 40124)
  Prédit: '[int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[int' → logprob: -7.941850526549388e-06
    2. 'int' → logprob: -11.750007629394531
    3. '(int' → logprob: -18.87500762939453
    4. ',int' → logprob: -19.00000762939453
    5. ']int' → logprob: -19.12500762939453
    6. '   ' → logprob: -21.00000762939453
    7. '[' → logprob: -22.12500762939453
    8. '<int' → logprob: -22.25000762939453
    9. '	int' → logprob: -22.37500762939453
    10. '=int' → logprob: -22.37500762939453

Token 1162: ',int' (ID: 20909)
  Prédit: ',int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',int' → logprob: -0.014372693374752998
    2. ',' → logprob: -4.264372825622559
    3. 'int' → logprob: -8.514372825622559
    4. '[int' → logprob: -11.889372825622559
    5. ']int' → logprob: -13.889372825622559
    6. '(int' → logprob: -15.139372825622559
    7. ' ,' → logprob: -15.389372825622559
    8. '   ' → logprob: -16.014371871948242
    9. ':int' → logprob: -16.264371871948242
    10. '<int' → logprob: -17.389371871948242

Token 1163: ']]:
' (ID: 183340)
  Prédit: ']:
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']:
' → logprob: -0.026751074939966202
    2. ']:' → logprob: -3.6517510414123535
    3. ']:
' → logprob: -8.276751518249512
    4. ']' → logprob: -8.776751518249512
    5. ']:

' → logprob: -11.526751518249512
    6. ']]:
' → logprob: -11.651751518249512
    7. '']:
' → logprob: -11.901751518249512
    8. '"]:
' → logprob: -12.276751518249512
    9. '):
' → logprob: -12.401751518249512
    10. ']>' → logprob: -13.151751518249512

Token 1164: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0012514196569100022
    2. '[]' → logprob: -7.001251220703125
    3. '[' → logprob: -8.251251220703125
    4. '[
' → logprob: -10.501251220703125
    5. '```' → logprob: -11.001251220703125
    6. ' return' → logprob: -11.751251220703125
    7. 'return' → logprob: -11.751251220703125
    8. '   ' → logprob: -12.001251220703125
    9. '[]
' → logprob: -12.001251220703125
    10. '[(' → logprob: -13.751251220703125

Token 1165: ' return' (ID: 622)
  Prédit: 'positions'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'positions' → logprob: -0.5078399181365967
    2. '       ' → logprob: -1.5078399181365967
    3. 'return' (adapté à ' return') → logprob: -1.7578399181365967
    4. ' positions' → logprob: -6.257840156555176
    5. 'result' → logprob: -6.382840156555176
    6. 'points' → logprob: -7.757840156555176
    7. 'pos' → logprob: -9.007840156555176
    8. ' return' → logprob: -9.007840156555176
    9. 'res' → logprob: -10.757840156555176
    10. '[]' → logprob: -11.132840156555176

Token 1166: ' [(' (ID: 43900)
  Prédit: '[('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[(' → logprob: -4.842555426876061e-06
    2. ' [(' → logprob: -13.000004768371582
    3. '[
' → logprob: -13.250004768371582
    4. '[((' → logprob: -14.625004768371582
    5. '[' → logprob: -15.125004768371582
    6. '   ' → logprob: -18.5000057220459
    7. '[[' → logprob: -19.2500057220459
    8. '([(' → logprob: -19.2500057220459
    9. '[self' → logprob: -19.5000057220459
    10. '[\' → logprob: -20.1250057220459

Token 1167: 'r' (ID: 81)
  Prédit: 'r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -4.320199877838604e-07
    2. ' r' → logprob: -15.5
    3. '(r' → logprob: -15.875
    4. 'i' → logprob: -18.25
    5. 'row' → logprob: -19.125
    6. ')' → logprob: -19.25
    7. '_r' → logprob: -20.0
    8. 'rr' → logprob: -21.0
    9. '	r' → logprob: -21.125
    10. '0' → logprob: -21.125

Token 1168: ',c' (ID: 22261)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.06287685036659241
    2. ',c' → logprob: -2.8128769397735596
    3. ',r' → logprob: -7.3128767013549805
    4. ' ,' → logprob: -8.43787670135498
    5. ',n' → logprob: -12.43787670135498
    6. ',w' → logprob: -12.56287670135498
    7. ',s' → logprob: -12.93787670135498
    8. ',p' → logprob: -13.18787670135498
    9. ',row' → logprob: -13.18787670135498
    10. 'c' → logprob: -13.43787670135498

Token 1169: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.3265794515609741
    2. ' for' → logprob: -1.3265794515609741
    3. 'for' → logprob: -4.701579570770264
    4. ',' → logprob: -5.576579570770264
    5. ' )' → logprob: -8.951579093933105
    6. ' ,' → logprob: -9.701579093933105
    7. ' ' → logprob: -10.076579093933105
    8. '       ' → logprob: -10.701579093933105
    9. ',r' → logprob: -11.076579093933105
    10. '(r' → logprob: -11.201579093933105

Token 1170: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.3868962824344635
    2. 'for' → logprob: -1.1368962526321411
    3. '           ' → logprob: -10.886896133422852
    4. '	for' → logprob: -12.636896133422852
    5. '        ' → logprob: -13.636896133422852
    6. '       ' → logprob: -14.511896133422852
    7. '               ' → logprob: -14.886896133422852
    8. '            ' → logprob: -15.261896133422852
    9. '         ' → logprob: -15.261896133422852
    10. '   ' → logprob: -15.636896133422852

Token 1171: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.005234121344983578
    2. ' r' → logprob: -5.255234241485596
    3. 'range' → logprob: -15.130233764648438
    4. '	r' → logprob: -18.505233764648438
    5. '<|end|>' → logprob: -18.505233764648438
    6. '0' → logprob: -18.630233764648438
    7. ' range' → logprob: -19.130233764648438
    8. ' ' → logprob: -20.255233764648438
    9. ' in' → logprob: -20.505233764648438
    10. '_r' → logprob: -20.630233764648438

Token 1172: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.023282868787646294
    2. 'in' → logprob: -3.773282766342163
    3. 'range' → logprob: -11.023283004760742
    4. ' ' → logprob: -11.773283004760742
    5. ',' → logprob: -12.648283004760742
    6. '0' → logprob: -12.898283004760742
    7. '<|end|>' → logprob: -13.023283004760742
    8. ' range' → logprob: -13.773283004760742
    9. 'n' → logprob: -13.898283004760742
    10. 'r' → logprob: -14.148283004760742

Token 1173: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.004078401252627373
    2. ' range' → logprob: -5.504078388214111
    3. '   ' → logprob: -22.629077911376953
    4. '(range' → logprob: -22.754077911376953
    5. '	range' → logprob: -23.879077911376953
    6. 'r' → logprob: -24.254077911376953
    7. '
' → logprob: -24.379077911376953
    8. 'Range' → logprob: -24.629077911376953
    9. ' ' → logprob: -25.004077911376953
    10. '0' → logprob: -25.629077911376953

Token 1174: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.020628664642572403
    2. 'self' → logprob: -4.395628452301025
    3. ' self' → logprob: -5.270628452301025
    4. '(Board' → logprob: -5.895628452301025
    5. '(' → logprob: -9.020628929138184
    6. 'Board' → logprob: -10.395628929138184
    7. '0' → logprob: -10.645628929138184
    8. ')' → logprob: -12.145628929138184
    9. ' (' → logprob: -12.520628929138184
    10. ' Board' → logprob: -12.770628929138184

Token 1175: '.board' (ID: 50264)
  Prédit: '.board'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.board' → logprob: -0.4966805875301361
    2. '.Board' → logprob: -0.9966806173324585
    3. '.B' → logprob: -4.246680736541748
    4. 'board' → logprob: -5.371680736541748
    5. 'Board' → logprob: -5.871680736541748
    6. '.' → logprob: -7.996680736541748
    7. 'BOARD' → logprob: -9.37168025970459
    8. 'self' → logprob: -9.62168025970459
    9. '.Game' → logprob: -10.49668025970459
    10. ' board' → logprob: -11.74668025970459

Token 1176: '.' (ID: 13)
  Prédit: '.'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -1.4259644558478612e-05
    2. 'HEIGHT' → logprob: -11.375014305114746
    3. ' .' → logprob: -13.625014305114746
    4. '   ' → logprob: -13.750014305114746
    5. ',' → logprob: -15.625014305114746
    6. ')' → logprob: -16.62501335144043
    7. '0' → logprob: -17.50001335144043
    8. ').' → logprob: -17.50001335144043
    9. '(' → logprob: -17.62501335144043
    10. 'self' → logprob: -17.87501335144043

Token 1177: 'HEIGHT' (ID: 105934)
  Prédit: 'HEIGHT'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'HEIGHT' → logprob: -0.2558874487876892
    2. 'Board' → logprob: -1.505887508392334
    3. 'board' → logprob: -6.380887508392334
    4. 'height' → logprob: -7.505887508392334
    5. 'BOARD' → logprob: -7.505887508392334
    6. '5' → logprob: -7.505887508392334
    7. 'self' → logprob: -7.880887508392334
    8. 'WIDTH' → logprob: -8.880887031555176
    9. 'Game' → logprob: -10.880887031555176
    10. ' Board' → logprob: -11.005887031555176

Token 1178: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0002572865632828325
    2. ',' → logprob: -8.50025749206543
    3. ' )' → logprob: -10.25025749206543
    4. ' for' → logprob: -11.75025749206543
    5. '   ' → logprob: -12.50025749206543
    6. ')
' → logprob: -13.00025749206543
    7. '),' → logprob: -13.75025749206543
    8. 'for' → logprob: -14.12525749206543
    9. ' ' → logprob: -14.37525749206543
    10. ' ,' → logprob: -14.37525749206543

Token 1179: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.06307899951934814
    2. 'for' → logprob: -2.8130788803100586
    3. ')' → logprob: -7.313078880310059
    4. '           ' → logprob: -9.313078880310059
    5. '   ' → logprob: -9.438078880310059
    6. '	for' → logprob: -9.688078880310059
    7. '       ' → logprob: -9.813078880310059
    8. '               ' → logprob: -10.313078880310059
    9. '                ' → logprob: -11.063078880310059
    10. '        ' → logprob: -11.063078880310059

Token 1180: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.1602245420217514
    2. ' c' → logprob: -1.9102245569229126
    3. ')c' → logprob: -15.660224914550781
    4. '	c' → logprob: -16.53522491455078
    5. '   ' → logprob: -17.03522491455078
    6. '(c' → logprob: -17.28522491455078
    7. ' ' → logprob: -17.41022491455078
    8. '_c' → logprob: -18.28522491455078
    9. ',' → logprob: -18.28522491455078
    10. ')' → logprob: -18.41022491455078

Token 1181: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.004624391905963421
    2. 'in' → logprob: -5.379624366760254
    3. ' ' → logprob: -13.629624366760254
    4. ')' → logprob: -14.129624366760254
    5. '<|end|>' → logprob: -14.129624366760254
    6. 'self' → logprob: -14.879624366760254
    7. 'inthe' → logprob: -15.754624366760254
    8. 'range' → logprob: -16.25462532043457
    9. 'n' → logprob: -16.37962532043457
    10. '	in' → logprob: -16.50462532043457

Token 1182: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.011474648490548134
    2. ' range' → logprob: -4.511474609375
    3. 'self' → logprob: -7.761474609375
    4. ' self' → logprob: -14.261474609375
    5. '(range' → logprob: -15.761474609375
    6. '(self' → logprob: -16.136474609375
    7. ')' → logprob: -18.761474609375
    8. ' ' → logprob: -20.261474609375
    9. '
' → logprob: -20.386474609375
    10. '_range' → logprob: -20.636474609375

Token 1183: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.006923284847289324
    2. 'self' → logprob: -5.006923198699951
    3. 'range' → logprob: -8.88192367553711
    4. ' self' → logprob: -10.00692367553711
    5. '(' → logprob: -11.13192367553711
    6. ' range' → logprob: -12.25692367553711
    7. ' (' → logprob: -12.88192367553711
    8. '(range' → logprob: -13.75692367553711
    9. ')' → logprob: -14.75692367553711
    10. '=self' → logprob: -16.00692367553711

Token 1184: '.board' (ID: 50264)
  Prédit: '.board'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.board' → logprob: -0.0036439071409404278
    2. 'self' → logprob: -6.628643989562988
    3. '.W' → logprob: -7.003643989562988
    4. 'board' → logprob: -7.253643989562988
    5. '.B' → logprob: -8.503643989562988
    6. '.' → logprob: -8.503643989562988
    7. '(board' → logprob: -9.753643989562988
    8. ' .' → logprob: -10.003643989562988
    9. ').' → logprob: -10.128643989562988
    10. '
' → logprob: -10.503643989562988

Token 1185: '.W' (ID: 2342)
  Prédit: '.W'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.W' → logprob: -9.078839502763003e-05
    2. ')]' → logprob: -10.375090599060059
    3. '.' → logprob: -10.500090599060059
    4. ')' → logprob: -11.250090599060059
    5. ')])' → logprob: -12.125090599060059
    6. ' .' → logprob: -12.875090599060059
    7. ').' → logprob: -13.500090599060059
    8. 'WIDTH' → logprob: -13.625090599060059
    9. ')].' → logprob: -13.750090599060059
    10. '))' → logprob: -13.875090599060059

Token 1186: 'IDTH' (ID: 20688)
  Prédit: 'IDTH'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'IDTH' → logprob: -1.9146995327901095e-05
    2. 'ID' → logprob: -11.125019073486328
    3. 'idth' → logprob: -13.125019073486328
    4. ')' → logprob: -14.125019073486328
    5. 'ITH' → logprob: -14.250019073486328
    6. 'E' → logprob: -15.125019073486328
    7. 'IGHT' → logprob: -15.625019073486328
    8. 'IDE' → logprob: -16.250019073486328
    9. ')]' → logprob: -16.375019073486328
    10. '   ' → logprob: -16.875019073486328

Token 1187: ')]

' (ID: 56882)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')]' → logprob: -3.106736039626412e-05
    2. ')' → logprob: -10.875031471252441
    3. '       ' → logprob: -12.750031471252441
    4. ' )' → logprob: -12.875031471252441
    5. ']' → logprob: -13.125031471252441
    6. ')]
' → logprob: -13.125031471252441
    7. '   ' → logprob: -13.250031471252441
    8. '           ' → logprob: -15.250031471252441
    9. ')])' → logprob: -15.750031471252441
    10. ')],' → logprob: -16.250030517578125

Token 1188: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0545627735555172
    2. '
' → logprob: -3.55456280708313
    3. '```' → logprob: -3.80456280708313
    4. 'def' → logprob: -6.429562568664551
    5. '    
' → logprob: -8.17956256866455
    6. '<|end|>' → logprob: -8.67956256866455
    7. ' ' → logprob: -9.92956256866455
    8. ' def' → logprob: -11.17956256866455
    9. '``' → logprob: -11.30456256866455
    10. '<|end|>' → logprob: -11.55456256866455

Token 1189: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.023677729070186615
    2. '   ' → logprob: -3.7736778259277344
    3. ' def' → logprob: -7.773677825927734
    4. '```' → logprob: -11.773677825927734
    5. '	def' → logprob: -13.023677825927734
    6. '
' → logprob: -13.523677825927734
    7. '  ' → logprob: -16.273677825927734
    8. ' ' → logprob: -16.648677825927734
    9. '    
' → logprob: -17.523677825927734
    10. '    ' → logprob: -18.523677825927734

Token 1190: ' is' (ID: 382)
  Prédit: ' find'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' find' → logprob: -1.1175405979156494
    2. 'find' → logprob: -1.1175405979156494
    3. 'is' → logprob: -1.9925405979156494
    4. ' is' → logprob: -2.7425405979156494
    5. 'dfs' → logprob: -3.6175405979156494
    6. ' dfs' → logprob: -3.9925405979156494
    7. 'can' → logprob: -3.9925405979156494
    8. 'generate' → logprob: -4.49254035949707
    9. ' can' → logprob: -4.74254035949707
    10. 'search' → logprob: -4.74254035949707

Token 1191: '_adj' (ID: 117293)
  Prédit: '_valid'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_valid' → logprob: -0.31429633498191833
    2. '_adj' → logprob: -1.3142963647842407
    3. '_move' → logprob: -8.06429672241211
    4. 'adj' → logprob: -8.06429672241211
    5. 'valid' → logprob: -8.93929672241211
    6. '_ad' → logprob: -9.31429672241211
    7. '_' → logprob: -9.56429672241211
    8. '_possible' → logprob: -10.31429672241211
    9. '_safe' → logprob: -10.56429672241211
    10. '_in' → logprob: -10.68929672241211

Token 1192: 'acent' (ID: 28063)
  Prédit: 'acent'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'acent' → logprob: -0.0003135360311716795
    2. '(self' → logprob: -8.250313758850098
    3. 'ac' → logprob: -10.500313758850098
    4. 'acency' → logprob: -12.125313758850098
    5. '(a' → logprob: -12.500313758850098
    6. 'acet' → logprob: -12.750313758850098
    7. '```' → logprob: -12.750313758850098
    8. '(' → logprob: -12.750313758850098
    9. '   ' → logprob: -13.125313758850098
    10. 'a' → logprob: -14.375313758850098

Token 1193: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -6.73052782076411e-05
    2. '(' → logprob: -9.625067710876465
    3. 'self' → logprob: -14.250067710876465
    4. ' (' → logprob: -14.750067710876465
    5. '(sel' → logprob: -16.25006675720215
    6. '(
' → logprob: -16.50006675720215
    7. '((' → logprob: -17.50006675720215
    8. ' ' → logprob: -17.62506675720215
    9. '(s' → logprob: -17.87506675720215
    10. '   ' → logprob: -18.25006675720215

Token 1194: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0014121392741799355
    2. 'self' → logprob: -6.6264119148254395
    3. '(self' → logprob: -9.626412391662598
    4. ' ,' → logprob: -11.501412391662598
    5. ',self' → logprob: -12.001412391662598
    6. ' self' → logprob: -14.001412391662598
    7. ',r' → logprob: -14.126412391662598
    8. ',(' → logprob: -14.376412391662598
    9. '   ' → logprob: -14.501412391662598
    10. '       ' → logprob: -15.376412391662598

Token 1195: ' p' (ID: 275)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pos' → logprob: -0.37748727202415466
    2. 'p' → logprob: -1.377487301826477
    3. 'r' → logprob: -3.1274871826171875
    4. 'a' → logprob: -4.1274871826171875
    5. ' pos' → logprob: -6.3774871826171875
    6. ' p' → logprob: -8.252487182617188
    7. 'self' → logprob: -9.002487182617188
    8. '   ' → logprob: -9.252487182617188
    9. ' r' → logprob: -10.127487182617188
    10. ' a' → logprob: -11.002487182617188

Token 1196: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.08332254737615585
    2. ',' → logprob: -2.708322525024414
    3. ':' → logprob: -4.458322525024414
    4. '):' → logprob: -7.833322525024414
    5. 'a' → logprob: -8.208322525024414
    6. 'self' → logprob: -8.333322525024414
    7. '):
' → logprob: -8.708322525024414
    8. '_' → logprob: -9.833322525024414
    9. '_a' → logprob: -9.958322525024414
    10. ' :' → logprob: -9.958322525024414

Token 1197: ':' (ID: 25)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.02791486121714115
    2. ':' → logprob: -3.7779147624969482
    3. ' ,' → logprob: -6.027915000915527
    4. ',p' → logprob: -6.277915000915527
    5. '(p' → logprob: -9.277915000915527
    6. ' p' → logprob: -9.402915000915527
    7. 'p' → logprob: -9.652915000915527
    8. '   ' → logprob: -10.402915000915527
    9. ' :' → logprob: -10.402915000915527
    10. '       ' → logprob: -10.527915000915527

Token 1198: ' Tuple' (ID: 50841)
  Prédit: 'Tuple'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Tuple' → logprob: -0.018196653574705124
    2. ' Tuple' → logprob: -4.0181965827941895
    3. 'tuple' → logprob: -10.518197059631348
    4. ' ' → logprob: -11.893197059631348
    5. '   ' → logprob: -11.893197059631348
    6. ' tuple' → logprob: -12.768197059631348
    7. 'p' → logprob: -13.268197059631348
    8. '       ' → logprob: -14.768197059631348
    9. '  ' → logprob: -14.893197059631348
    10. ' p' → logprob: -14.893197059631348

Token 1199: '[int' (ID: 40124)
  Prédit: '[int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[int' → logprob: -6.704273118884885e-07
    2. 'int' → logprob: -14.500000953674316
    3. ',int' → logprob: -17.125
    4. '(int' → logprob: -18.75
    5. ',' → logprob: -20.125
    6. '[' → logprob: -20.875
    7. '   ' → logprob: -21.0
    8. ':int' → logprob: -21.375
    9. '<int' → logprob: -21.5
    10. '[Int' → logprob: -21.625

Token 1200: ',int' (ID: 20909)
  Prédit: '[int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[int' → logprob: -0.5933800339698792
    2. ',int' → logprob: -1.0933799743652344
    3. 'int' → logprob: -2.2183799743652344
    4. '(int' → logprob: -6.218379974365234
    5. ',' → logprob: -6.718379974365234
    6. '<int' → logprob: -8.468379974365234
    7. ']int' → logprob: -9.093379974365234
    8. ':int' → logprob: -9.343379974365234
    9. '   ' → logprob: -10.593379974365234
    10. '[' → logprob: -11.093379974365234

Token 1201: '],' (ID: 2155)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00010008628305513412
    2. ' ,' → logprob: -9.625100135803223
    3. ',p' → logprob: -10.625100135803223
    4. '   ' → logprob: -12.250100135803223
    5. 'p' → logprob: -13.500100135803223
    6. '),' → logprob: -13.750100135803223
    7. ')' → logprob: -14.000100135803223
    8. ',
' → logprob: -14.125100135803223
    9. ' p' → logprob: -15.500100135803223
    10. '       ' → logprob: -15.625100135803223

Token 1202: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.4743138551712036
    2. ' p' → logprob: -0.9743138551712036
    3. '   ' → logprob: -8.474313735961914
    4. ')' → logprob: -11.224313735961914
    5. '    ' → logprob: -11.974313735961914
    6. ' ' → logprob: -12.724313735961914
    7. '       ' → logprob: -13.224313735961914
    8. '  ' → logprob: -13.849313735961914
    9. '      ' → logprob: -15.099313735961914
    10. '     ' → logprob: -15.099313735961914

Token 1203: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.00011045700375689194
    2. '1' → logprob: -9.125110626220703
    3. ')' → logprob: -15.125110626220703
    4. '_' → logprob: -15.250110626220703
    5. '```' → logprob: -15.750110626220703
    6. ',' → logprob: -16.000110626220703
    7. '[' → logprob: -16.125110626220703
    8. ' ' → logprob: -16.250110626220703
    9. ':' → logprob: -16.875110626220703
    10. '₂' → logprob: -17.250110626220703

Token 1204: ':' (ID: 25)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.4201924502849579
    2. ',' → logprob: -1.2951924800872803
    3. '):' → logprob: -2.9201924800872803
    4. ':' → logprob: -5.670192241668701
    5. '   ' → logprob: -5.670192241668701
    6. '):
' → logprob: -6.045192241668701
    7. ' )' → logprob: -6.045192241668701
    8. '       ' → logprob: -7.045192241668701
    9. '[' → logprob: -7.420192241668701
    10. ' ,' → logprob: -7.545192241668701

Token 1205: ' Tuple' (ID: 50841)
  Prédit: 'Tuple'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Tuple' → logprob: -0.014219447039067745
    2. ' Tuple' → logprob: -4.264219284057617
    3. ')' → logprob: -9.889219284057617
    4. ' ' → logprob: -12.639219284057617
    5. 'int' → logprob: -14.389219284057617
    6. 'Tu' → logprob: -14.889219284057617
    7. 'tuple' → logprob: -15.014219284057617
    8. '   ' → logprob: -15.389219284057617
    9. '  ' → logprob: -16.514219284057617
    10. '<Tuple' → logprob: -16.514219284057617

Token 1206: '[int' (ID: 40124)
  Prédit: '[int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[int' → logprob: -9.491498531133402e-06
    2. '[' → logprob: -12.750009536743164
    3. ')' → logprob: -13.000009536743164
    4. 'int' → logprob: -13.375009536743164
    5. ',int' → logprob: -14.000009536743164
    6. ':int' → logprob: -14.000009536743164
    7. '(int' → logprob: -14.375009536743164
    8. '<int' → logprob: -15.625009536743164
    9. '1' → logprob: -16.250009536743164
    10. '   ' → logprob: -16.250009536743164

Token 1207: ',int' (ID: 20909)
  Prédit: ',int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',int' → logprob: -0.04866230860352516
    2. 'int' → logprob: -3.0486624240875244
    3. '[int' → logprob: -9.798662185668945
    4. ',' → logprob: -11.548662185668945
    5. ':int' → logprob: -11.798662185668945
    6. '(int' → logprob: -13.423662185668945
    7. ']int' → logprob: -15.173662185668945
    8. '=int' → logprob: -16.173662185668945
    9. '<int' → logprob: -16.423662185668945
    10. '
' → logprob: -16.798662185668945

Token 1208: '])' (ID: 4636)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.032226257026195526
    2. '):
' → logprob: -3.657226324081421
    3. '):' → logprob: -5.157226085662842
    4. ' )' → logprob: -9.1572265625
    5. '):

' → logprob: -11.2822265625
    6. ')=' → logprob: -11.6572265625
    7. '):
' → logprob: -11.7822265625
    8. ' ):
' → logprob: -11.9072265625
    9. ')>' → logprob: -13.1572265625
    10. ' ):' → logprob: -13.1572265625

Token 1209: ' ->' (ID: 2747)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.13238917291164398
    2. '->' → logprob: -2.5073890686035156
    3. ')' → logprob: -3.2573890686035156
    4. ')->' → logprob: -6.382389068603516
    5. ' ->' → logprob: -6.507389068603516
    6. ':
' → logprob: -7.882389068603516
    7. '>' → logprob: -9.007389068603516
    8. '):' → logprob: -9.507389068603516
    9. '   ' → logprob: -9.757389068603516
    10. '=' → logprob: -10.132389068603516

Token 1210: ' bool' (ID: 3792)
  Prédit: 'bool'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bool' → logprob: -0.0002217748697148636
    2. 'lambda' → logprob: -9.125222206115723
    3. ' bool' → logprob: -9.250222206115723
    4. '(bool' → logprob: -11.375222206115723
    5. '	bool' → logprob: -13.750222206115723
    6. '<bool' → logprob: -13.875222206115723
    7. '   ' → logprob: -14.000222206115723
    8. 'def' → logprob: -14.250222206115723
    9. '(lambda' → logprob: -14.250222206115723
    10. 'int' → logprob: -15.125222206115723

Token 1211: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.3003111481666565
    2. '       ' → logprob: -1.9253110885620117
    3. ':' → logprob: -2.3003110885620117
    4. '   ' → logprob: -5.425311088562012
    5. '):
' → logprob: -5.925311088562012
    6. '(' → logprob: -6.050311088562012
    7. '(
' → logprob: -6.675311088562012
    8. '(self' → logprob: -6.925311088562012
    9. ',' → logprob: -7.800311088562012
    10. ')' → logprob: -7.925311088562012

Token 1212: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.10091008991003036
    2. 'return' → logprob: -2.350910186767578
    3. ' return' → logprob: -7.350910186767578
    4. 'r' → logprob: -10.600910186767578
    5. '   ' → logprob: -11.600910186767578
    6. 'abs' → logprob: -12.225910186767578
    7. '	return' → logprob: -12.350910186767578
    8. '
' → logprob: -12.600910186767578
    9. '(r' → logprob: -12.975910186767578
    10. '(p' → logprob: -13.350910186767578

Token 1213: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' (adapté à ' r') → logprob: -0.4760417640209198
    2. 'return' → logprob: -0.9760417938232422
    3. '       ' → logprob: -6.601041793823242
    4. '(r' → logprob: -8.476041793823242
    5. ' return' → logprob: -8.601041793823242
    6. 'abs' → logprob: -8.726041793823242
    7. ' r' → logprob: -11.101041793823242
    8. '_r' → logprob: -11.476041793823242
    9. '```' → logprob: -11.726041793823242
    10. 'dr' → logprob: -12.351041793823242

Token 1214: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.027462979778647423
    2. 'diff' → logprob: -4.027462959289551
    3. ',' → logprob: -5.402462959289551
    4. '_diff' → logprob: -6.027462959289551
    5. '=' → logprob: -6.777462959289551
    6. 'def' → logprob: -7.527462959289551
    7. 'p' → logprob: -8.65246295928955
    8. ' =' → logprob: -8.90246295928955
    9. 'd' → logprob: -9.02746295928955
    10. 'dif' → logprob: -10.02746295928955

Token 1215: ',c' (ID: 22261)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.040704395622015
    2. ',p' → logprob: -4.540704250335693
    3. '==' → logprob: -4.540704250335693
    4. ',c' → logprob: -4.665704250335693
    5. ' ==' → logprob: -5.415704250335693
    6. '-' → logprob: -6.540704250335693
    7. ' -' → logprob: -6.665704250335693
    8. '=' → logprob: -7.290704250335693
    9. ',r' → logprob: -7.790704250335693
    10. 'diff' → logprob: -8.415704727172852

Token 1216: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.028001800179481506
    2. ' =' → logprob: -4.40300178527832
    3. '=' → logprob: -4.52800178527832
    4. ',' → logprob: -6.02800178527832
    5. 'r' → logprob: -6.65300178527832
    6. '=r' → logprob: -8.90300178527832
    7. '2' → logprob: -9.02800178527832
    8. ' r' → logprob: -9.27800178527832
    9. '   ' → logprob: -9.40300178527832
    10. ' ' → logprob: -9.65300178527832

Token 1217: ' =' (ID: 314)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.4951685965061188
    2. ' ==' → logprob: -1.9951685667037964
    3. ',' → logprob: -2.120168685913086
    4. '=' → logprob: -2.620168685913086
    5. ')' → logprob: -4.370168685913086
    6. ' =' → logprob: -4.370168685913086
    7. ' ' → logprob: -4.745168685913086
    8. '+' → logprob: -5.245168685913086
    9. ' in' → logprob: -5.495168685913086
    10. '
' → logprob: -5.745168685913086

Token 1218: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.00861456897109747
    2. ' p' → logprob: -4.758614540100098
    3. '   ' → logprob: -20.133615493774414
    4. '	p' → logprob: -21.383615493774414
    5. ')p' → logprob: -22.758615493774414
    6. '_p' → logprob: -23.883615493774414
    7. 'user' → logprob: -24.258615493774414
    8. '    ' → logprob: -24.508615493774414
    9. 'r' → logprob: -24.508615493774414
    10. '=p' → logprob: -24.758615493774414

Token 1219: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.021278776228427887
    2. 'p' → logprob: -3.8962788581848145
    3. ' p' → logprob: -7.2712788581848145
    4. '2' → logprob: -10.646278381347656
    5. ' ' → logprob: -12.396278381347656
    6. '   ' → logprob: -12.771278381347656
    7. '(p' → logprob: -13.458778381347656
    8. '
' → logprob: -13.771278381347656
    9. '    ' → logprob: -14.208778381347656
    10. '_' → logprob: -14.271278381347656

Token 1220: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.12279339879751205
    2. 'r' → logprob: -2.747793436050415
    3. ',' → logprob: -3.247793436050415
    4. '
' → logprob: -4.997793197631836
    5. ' r' → logprob: -6.122793197631836
    6. ',r' → logprob: -7.372793197631836
    7. 'return' → logprob: -7.622793197631836
    8. '<|end|>' → logprob: -7.872793197631836
    9. '   ' → logprob: -7.997793197631836
    10. '           ' → logprob: -7.997793197631836

Token 1221: '       ' (ID: 309)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.06256436556577682
    2. '       ' → logprob: -2.8125643730163574
    3. ' r' → logprob: -7.437564373016357
    4. 'return' → logprob: -12.1875638961792
    5. '   ' → logprob: -14.0625638961792
    6. '	r' → logprob: -14.4375638961792
    7. '(r' → logprob: -14.9375638961792
    8. '```' → logprob: -15.3125638961792
    9. ',r' → logprob: -15.3125638961792
    10. '_r' → logprob: -16.562564849853516

Token 1222: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' (adapté à ' r') → logprob: -1.9361264946837764e-07
    2. ' r' → logprob: -16.25
    3. '   ' → logprob: -17.5
    4. '	r' → logprob: -18.75
    5. '       ' → logprob: -19.625
    6. 'return' → logprob: -20.75
    7. '_r' → logprob: -22.5
    8. 'abs' → logprob: -23.125
    9. '  ' → logprob: -24.0
    10. '           ' → logprob: -24.25

Token 1223: '2' (ID: 17)
  Prédit: ',c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',c' → logprob: -0.22862660884857178
    2. ',' → logprob: -2.2286267280578613
    3. '1' → logprob: -2.9786267280578613
    4. '2' → logprob: -3.1036267280578613
    5. ',r' → logprob: -7.353626728057861
    6. 'c' → logprob: -8.853626251220703
    7. ' ,' → logprob: -9.478626251220703
    8. ' ' → logprob: -10.853626251220703
    9. '   ' → logprob: -10.978626251220703
    10. ' c' → logprob: -11.353626251220703

Token 1224: ',c' (ID: 22261)
  Prédit: ',c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',c' → logprob: -0.005294357892125845
    2. ',' → logprob: -5.255294322967529
    3. ' ,' → logprob: -9.880294799804688
    4. 'c' → logprob: -12.005294799804688
    5. ',
' → logprob: -13.380294799804688
    6. ',r' → logprob: -13.880294799804688
    7. ',p' → logprob: -15.505294799804688
    8. '   ' → logprob: -16.255294799804688
    9. '       ' → logprob: -16.630294799804688
    10. ',d' → logprob: -16.755294799804688

Token 1225: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -2.7252845029579476e-05
    2. 'r' → logprob: -11.000027656555176
    3. '1' → logprob: -12.250027656555176
    4. ' ' → logprob: -12.750027656555176
    5. '   ' → logprob: -14.250027656555176
    6. ',r' → logprob: -14.375027656555176
    7. '```' → logprob: -14.500027656555176
    8. '
' → logprob: -14.625027656555176
    9. ',' → logprob: -14.750027656555176
    10. '  ' → logprob: -16.00002670288086

Token 1226: ' =' (ID: 314)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.3496426343917847
    2. ' =' → logprob: -1.4746426343917847
    3. ' return' → logprob: -1.9746426343917847
    4. ')' → logprob: -2.349642753601074
    5. '=' → logprob: -2.474642753601074
    6. 'return' → logprob: -2.724642753601074
    7. '
' → logprob: -3.099642753601074
    8. '==' → logprob: -3.849642753601074
    9. ',' → logprob: -4.099642753601074
    10. '<|end|>' → logprob: -4.474642753601074

Token 1227: ' p' (ID: 275)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.01312116626650095
    2. ' r' → logprob: -4.763121128082275
    3. 'abs' → logprob: -5.763121128082275
    4. ' abs' → logprob: -6.638121128082275
    5. '(r' → logprob: -10.263121604919434
    6. '(abs' → logprob: -12.263121604919434
    7. '   ' → logprob: -12.888121604919434
    8. ' (' → logprob: -13.388121604919434
    9. 'p' → logprob: -13.638121604919434
    10. '	r' → logprob: -15.138121604919434

Token 1228: '2' (ID: 17)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.127406045794487
    2. '2' → logprob: -2.127406120300293
    3. 'r' → logprob: -9.377406120300293
    4. 'int' → logprob: -9.377406120300293
    5. '(' → logprob: -9.752406120300293
    6. 'abs' → logprob: -10.002406120300293
    7. '[' → logprob: -10.252406120300293
    8. ' ' → logprob: -10.627406120300293
    9. '   ' → logprob: -10.752406120300293
    10. 'p' → logprob: -11.127406120300293

Token 1229: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0072858501225709915
    2. 'return' → logprob: -5.257286071777344
    3. '
' → logprob: -6.507286071777344
    4. ' return' → logprob: -7.757286071777344
    5. '	return' → logprob: -10.132286071777344
    6. '<|end|>' → logprob: -10.132286071777344
    7. ',' → logprob: -11.257286071777344
    8. '        
' → logprob: -12.007286071777344
    9. '   ' → logprob: -12.132286071777344
    10. '	' → logprob: -12.382286071777344

Token 1230: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0029334835708141327
    2. 'return' → logprob: -5.877933502197266
    3. ' return' → logprob: -9.002933502197266
    4. '	return' → logprob: -13.502933502197266
    5. '```' → logprob: -13.502933502197266
    6. '   ' → logprob: -13.877933502197266
    7. '
' → logprob: -14.377933502197266
    8. '{return' → logprob: -14.877933502197266
    9. ':return' → logprob: -15.002933502197266
    10. '	' → logprob: -15.502933502197266

Token 1231: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.004343121778219938
    2. '       ' → logprob: -5.504343032836914
    3. ' return' → logprob: -8.254343032836914
    4. '	return' → logprob: -12.504343032836914
    5. 'if' → logprob: -15.129343032836914
    6. '
' → logprob: -15.504343032836914
    7. '{return' → logprob: -16.504343032836914
    8. ':return' → logprob: -16.504343032836914
    9. '   ' → logprob: -16.754343032836914
    10. '	' → logprob: -16.879343032836914

Token 1232: ' (' (ID: 350)
  Prédit: '(abs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(abs' → logprob: -0.0005463610286824405
    2. '(r' → logprob: -8.0005464553833
    3. 'abs' → logprob: -8.5005464553833
    4. '((' → logprob: -12.1255464553833
    5. ' abs' → logprob: -14.2505464553833
    6. ' (' → logprob: -14.2505464553833
    7. '(max' → logprob: -14.5005464553833
    8. '(' → logprob: -15.1255464553833
    9. '   ' → logprob: -17.375545501708984
    10. '(ab' → logprob: -18.000545501708984

Token 1233: 'abs' (ID: 6071)
  Prédit: 'abs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'abs' → logprob: -0.0041103423573076725
    2. '(abs' → logprob: -5.504110336303711
    3. '(r' → logprob: -10.879110336303711
    4. 'r' → logprob: -11.629110336303711
    5. ' abs' → logprob: -12.379110336303711
    6. '(' → logprob: -17.62911033630371
    7. '((' → logprob: -19.25411033630371
    8. '   ' → logprob: -19.62911033630371
    9. ' (' → logprob: -19.62911033630371
    10. '
' → logprob: -19.75411033630371

Token 1234: '(r' (ID: 4729)
  Prédit: '(r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(r' → logprob: 0.0
    2. 'r' → logprob: -18.75
    3. '((' → logprob: -19.25
    4. '(
' → logprob: -19.5
    5. '(' → logprob: -20.125
    6. ')' → logprob: -21.25
    7. ')(' → logprob: -21.5
    8. '
' → logprob: -21.5
    9. '   ' → logprob: -21.625
    10. '[r' → logprob: -22.5

Token 1235: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.024051612243056297
    2. 'r' → logprob: -4.024051666259766
    3. '(r' → logprob: -5.149051666259766
    4. '_r' → logprob: -9.774051666259766
    5. '(' → logprob: -12.149051666259766
    6. '[r' → logprob: -12.649051666259766
    7. '=r' → logprob: -13.024051666259766
    8. '-r' → logprob: -13.024051666259766
    9. ' r' → logprob: -13.649051666259766
    10. ')' → logprob: -13.774051666259766

Token 1236: '-r' (ID: 6335)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.09515365958213806
    2. '-r' → logprob: -3.095153570175171
    3. ' -' → logprob: -3.095153570175171
    4. '==' → logprob: -9.34515380859375
    5. '(r' → logprob: -9.84515380859375
    6. ')' → logprob: -10.22015380859375
    7. 'r' → logprob: -10.84515380859375
    8. '[' → logprob: -11.47015380859375
    9. ')==' → logprob: -11.72015380859375
    10. '-c' → logprob: -12.47015380859375

Token 1237: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.038068581372499466
    2. '1' → logprob: -3.2880685329437256
    3. 'c' → logprob: -11.288068771362305
    4. 'r' → logprob: -11.788068771362305
    5. 'p' → logprob: -13.538068771362305
    6. '```' → logprob: -13.788068771362305
    7. ' ' → logprob: -13.913068771362305
    8. ')' → logprob: -14.163068771362305
    9. '   ' → logprob: -14.163068771362305
    10. '{' → logprob: -14.663068771362305

Token 1238: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.005532081704586744
    2. ')==' → logprob: -5.255532264709473
    3. ')+' → logprob: -8.380532264709473
    4. '==' → logprob: -10.005532264709473
    5. ')<=' → logprob: -11.380532264709473
    6. '+' → logprob: -12.380532264709473
    7. ' ==' → logprob: -12.755532264709473
    8. '),' → logprob: -13.630532264709473
    9. ' )' → logprob: -14.130532264709473
    10. '+c' → logprob: -14.255532264709473

Token 1239: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.1094510406255722
    2. ' ==' → logprob: -2.3594510555267334
    3. '+' → logprob: -4.734450817108154
    4. ' +' → logprob: -7.859450817108154
    5. '<=' → logprob: -11.359451293945312
    6. '+c' → logprob: -11.984451293945312
    7. ',' → logprob: -12.984451293945312
    8. '1' → logprob: -13.234451293945312
    9. '=' → logprob: -13.609451293945312
    10. '```' → logprob: -13.984451293945312

Token 1240: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -7.107425062713446e-06
    2. ' ' → logprob: -11.875006675720215
    3. '0' → logprob: -16.62500762939453
    4. '   ' → logprob: -18.75000762939453
    5. '
' → logprob: -19.37500762939453
    6. '```' → logprob: -20.75000762939453
    7. '  ' → logprob: -21.75000762939453
    8. '=' → logprob: -22.25000762939453
    9. '۱' → logprob: -23.00000762939453
    10. '' → logprob: -23.06250762939453

Token 1241: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.1472419600977446e-06
    2. ' ' → logprob: -14.000000953674316
    3. '0' → logprob: -15.250000953674316
    4. '   ' → logprob: -18.750001907348633
    5. '
' → logprob: -19.875001907348633
    6. '  ' → logprob: -21.000001907348633
    7. '```' → logprob: -21.750001907348633
    8. '۱' → logprob: -21.875001907348633
    9. '	' → logprob: -22.125001907348633
    10. '=' → logprob: -22.500001907348633

Token 1242: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.38687241077423096
    2. 'and' → logprob: -1.136872410774231
    3. ')' → logprob: -14.011872291564941
    4. ' or' → logprob: -15.386872291564941
    5. '       ' → logprob: -16.136873245239258
    6. '	and' → logprob: -16.261873245239258
    7. ' ' → logprob: -16.761873245239258
    8. '   ' → logprob: -17.261873245239258
    9. '           ' → logprob: -17.636873245239258
    10. 'or' → logprob: -17.636873245239258

Token 1243: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.00033784625702537596
    2. ' c' → logprob: -8.000337600708008
    3. 'abs' → logprob: -13.000337600708008
    4. '(c' → logprob: -17.000337600708008
    5. '   ' → logprob: -17.500337600708008
    6. ' abs' → logprob: -17.875337600708008
    7. '	c' → logprob: -17.875337600708008
    8. ' ' → logprob: -18.750337600708008
    9. '
' → logprob: -18.750337600708008
    10. ')c' → logprob: -19.750337600708008

Token 1244: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.23917081207037e-05
    2. '==' → logprob: -10.625041961669922
    3. 'c' → logprob: -11.250041961669922
    4. '
' → logprob: -13.375041961669922
    5. 'abs' → logprob: -13.500041961669922
    6. ' ==' → logprob: -13.875041961669922
    7. '```' → logprob: -14.875041961669922
    8. '==
' → logprob: -15.375041961669922
    9. 'r' → logprob: -16.625041961669922
    10. ' ' → logprob: -16.750041961669922

Token 1245: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.0011873723706230521
    2. ' ==' → logprob: -6.751187324523926
    3. '=' → logprob: -11.251187324523926
    4. '==
' → logprob: -12.501187324523926
    5. '===' → logprob: -15.126187324523926
    6. ')==' → logprob: -17.251188278198242
    7. ')' → logprob: -17.626188278198242
    8. 'c' → logprob: -17.876188278198242
    9. '()==' → logprob: -18.126188278198242
    10. ']==' → logprob: -18.126188278198242

Token 1246: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -9.639096970204264e-05
    2. ' c' → logprob: -9.250096321105957
    3. '   ' → logprob: -15.875096321105957
    4. '	c' → logprob: -16.875097274780273
    5. '  ' → logprob: -17.625097274780273
    6. ')c' → logprob: -18.000097274780273
    7. '
' → logprob: -18.625097274780273
    8. ' ' → logprob: -18.625097274780273
    9. '    ' → logprob: -19.125097274780273
    10. '       ' → logprob: -19.500097274780273

Token 1247: '2' (ID: 17)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.037169843912124634
    2. '2' → logprob: -3.412169933319092
    3. '1' → logprob: -5.662169933319092
    4. ' c' → logprob: -10.287169456481934
    5. '	c' → logprob: -13.037169456481934
    6. '   ' → logprob: -13.287169456481934
    7. ' ' → logprob: -13.912169456481934
    8. ')c' → logprob: -13.912169456481934
    9. '```' → logprob: -14.287169456481934
    10. 'col' → logprob: -14.287169456481934

Token 1248: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.000204851632588543
    2. ' )' → logprob: -8.500205039978027
    3. ' or' → logprob: -13.875205039978027
    4. 'or' → logprob: -15.625205039978027
    5. '       ' → logprob: -16.37520408630371
    6. ' and' → logprob: -17.25020408630371
    7. '        ' → logprob: -17.75020408630371
    8. ')
' → logprob: -18.00020408630371
    9. '    ' → logprob: -18.50020408630371
    10. 'and' → logprob: -18.75020408630371

Token 1249: ' or' (ID: 503)
  Prédit: ' or'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' or' → logprob: -0.011049231514334679
    2. 'or' → logprob: -4.511049270629883
    3. '       ' → logprob: -14.636049270629883
    4. '	or' → logprob: -14.636049270629883
    5. ' ' → logprob: -15.136049270629883
    6. '    ' → logprob: -16.261049270629883
    7. ')' → logprob: -16.386049270629883
    8. '        ' → logprob: -16.511049270629883
    9. ' and' → logprob: -17.261049270629883
    10. '   ' → logprob: -17.636049270629883

Token 1250: ' (' (ID: 350)
  Prédit: '(abs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(abs' → logprob: -0.0004324573092162609
    2. ' (' → logprob: -7.75043249130249
    3. '(' → logprob: -14.125432014465332
    4. '   ' → logprob: -15.250432014465332
    5. '(ab' → logprob: -15.250432014465332
    6. '((' → logprob: -16.00043296813965
    7. '(c' → logprob: -16.12543296813965
    8. 'abs' → logprob: -16.50043296813965
    9. ' ' → logprob: -16.50043296813965
    10. '  ' → logprob: -17.62543296813965

Token 1251: 'abs' (ID: 6071)
  Prédit: '(abs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(abs' → logprob: -0.3163228929042816
    2. 'abs' → logprob: -1.316322922706604
    3. '(r' → logprob: -6.0663228034973145
    4. ' abs' → logprob: -7.8163228034973145
    5. ' (' → logprob: -8.441323280334473
    6. 'r' → logprob: -9.191323280334473
    7. '   ' → logprob: -11.941323280334473
    8. '(' → logprob: -13.066323280334473
    9. ' ' → logprob: -13.816323280334473
    10. '  ' → logprob: -14.191323280334473

Token 1252: '(c' (ID: 2410)
  Prédit: '(c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(c' → logprob: -0.049251217395067215
    2. '(r' → logprob: -3.0492513179779053
    3. '(' → logprob: -7.424251079559326
    4. 'c' → logprob: -9.674251556396484
    5. 'r' → logprob: -12.674251556396484
    6. ' (' → logprob: -14.424251556396484
    7. '1' → logprob: -16.049251556396484
    8. '((' → logprob: -16.424251556396484
    9. '   ' → logprob: -16.549251556396484
    10. '(
' → logprob: -17.174251556396484

Token 1253: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0034424378536641598
    2. '(c' → logprob: -5.878442287445068
    3. 'r' → logprob: -8.003442764282227
    4. 'c' → logprob: -8.753442764282227
    5. '(r' → logprob: -8.878442764282227
    6. '(' → logprob: -12.128442764282227
    7. 'def' → logprob: -16.003442764282227
    8. '   ' → logprob: -16.128442764282227
    9. '[c' → logprob: -16.753442764282227
    10. ')c' → logprob: -17.378442764282227

Token 1254: '-c' (ID: 3452)
  Prédit: '-c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-c' → logprob: -0.012056655250489712
    2. '(c' → logprob: -5.137056827545166
    3. '-r' → logprob: -5.887056827545166
    4. ' -' → logprob: -6.387056827545166
    5. '-' → logprob: -7.012056827545166
    6. 'c' → logprob: -7.387056827545166
    7. '(r' → logprob: -9.262056350708008
    8. '1' → logprob: -11.137056350708008
    9. 'r' → logprob: -12.012056350708008
    10. '[c' → logprob: -12.512056350708008

Token 1255: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.027424363419413567
    2. 'r' → logprob: -3.6524243354797363
    3. '1' → logprob: -6.902424335479736
    4. 'c' → logprob: -9.402424812316895
    5. ' ' → logprob: -10.902424812316895
    6. '   ' → logprob: -12.152424812316895
    7. '```' → logprob: -12.652424812316895
    8. ' r' → logprob: -13.027424812316895
    9. '  ' → logprob: -13.152424812316895
    10. 'p' → logprob: -14.152424812316895

Token 1256: ')' (ID: 8)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.14685127139091492
    2. ' ==' → logprob: -2.0218513011932373
    3. ')' → logprob: -5.646851062774658
    4. ')==' → logprob: -7.521851062774658
    5. '1' → logprob: -9.771851539611816
    6. ']==' → logprob: -11.146851539611816
    7. '()==' → logprob: -11.896851539611816
    8. '()' → logprob: -11.896851539611816
    9. '===' → logprob: -12.771851539611816
    10. '(' → logprob: -12.896851539611816

Token 1257: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.014169743284583092
    2. ' ==' → logprob: -4.264169692993164
    3. '1' → logprob: -13.139169692993164
    4. ')==' → logprob: -13.139169692993164
    5. ')' → logprob: -13.639169692993164
    6. '=' → logprob: -15.014169692993164
    7. ']==' → logprob: -15.514169692993164
    8. '===' → logprob: -15.514169692993164
    9. '()==' → logprob: -15.764169692993164
    10. '==
' → logprob: -16.514169692993164

Token 1258: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0001398929744027555
    2. ' ' → logprob: -8.875140190124512
    3. '   ' → logprob: -18.750139236450195
    4. '0' → logprob: -18.750139236450195
    5. '{' → logprob: -19.562639236450195
    6. '```' → logprob: -19.562639236450195
    7. '۱' → logprob: -20.125139236450195
    8. '
' → logprob: -20.375139236450195
    9. ')' → logprob: -20.625139236450195
    10. '{
' → logprob: -20.625139236450195

Token 1259: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.988221684878226e-06
    2. ' ' → logprob: -11.875006675720215
    3. '   ' → logprob: -19.12500762939453
    4. '0' → logprob: -20.25000762939453
    5. '
' → logprob: -20.37500762939453
    6. '```' → logprob: -20.37500762939453
    7. '{' → logprob: -20.87500762939453
    8. '  ' → logprob: -22.00000762939453
    9. 'abs' → logprob: -22.12500762939453
    10. '۱' → logprob: -22.37500762939453

Token 1260: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.12693114578723907
    2. 'and' → logprob: -2.1269311904907227
    3. ')' → logprob: -12.751931190490723
    4. '       ' → logprob: -16.751930236816406
    5. '           ' → logprob: -16.876930236816406
    6. ' ' → logprob: -16.876930236816406
    7. '   ' → logprob: -17.626930236816406
    8. 'def' → logprob: -18.501930236816406
    9. '```' → logprob: -18.626930236816406
    10. '	and' → logprob: -18.751930236816406

Token 1261: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -4.246537173457909e-06
    2. ' r' → logprob: -12.375003814697266
    3. '   ' → logprob: -20.625003814697266
    4. '
' → logprob: -22.000003814697266
    5. '(r' → logprob: -22.125003814697266
    6. '       ' → logprob: -22.250003814697266
    7. ')' → logprob: -22.625003814697266
    8. '_r' → logprob: -22.875003814697266
    9. '	r' → logprob: -22.875003814697266
    10. '$r' → logprob: -23.000003814697266

Token 1262: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.5776860184123507e-06
    2. 'r' → logprob: -13.37500286102295
    3. '<|end|>' → logprob: -14.62500286102295
    4. '2' → logprob: -14.87500286102295
    5. '==' → logprob: -17.125001907348633
    6. '[' → logprob: -17.500001907348633
    7. ' ' → logprob: -17.875001907348633
    8. ')' → logprob: -17.875001907348633
    9. '   ' → logprob: -18.000001907348633
    10. '```' → logprob: -18.125001907348633

Token 1263: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.0007232757634483278
    2. ' ==' → logprob: -7.250723361968994
    3. '==
' → logprob: -11.375722885131836
    4. '===' → logprob: -14.500722885131836
    5. '=' → logprob: -14.625722885131836
    6. ')==' → logprob: -14.875722885131836
    7. ']==' → logprob: -15.000722885131836
    8. 'r' → logprob: -16.250722885131836
    9. '()==' → logprob: -17.500722885131836
    10. '1' → logprob: -17.875722885131836

Token 1264: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -4.320199877838604e-07
    2. ' r' → logprob: -14.75
    3. '	r' → logprob: -20.375
    4. '_r' → logprob: -20.625
    5. '<|end|>' → logprob: -21.125
    6. '   ' → logprob: -21.75
    7. '[r' → logprob: -23.25
    8. '=r' → logprob: -23.25
    9. '­r' → logprob: -23.25
    10. '(r' → logprob: -23.625

Token 1265: '2' (ID: 17)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.2258433699607849
    2. '1' → logprob: -1.6008434295654297
    3. '2' → logprob: -7.85084342956543
    4. ' r' → logprob: -10.85084342956543
    5. ')' → logprob: -11.72584342956543
    6. '   ' → logprob: -12.47584342956543
    7. ' ' → logprob: -12.85084342956543
    8. '_r' → logprob: -13.10084342956543
    9. '<|end|>' → logprob: -13.85084342956543
    10. '```' → logprob: -14.47584342956543

Token 1266: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -4.723352049040841e-06
    2. ')
' → logprob: -13.500004768371582
    3. ' )' → logprob: -13.500004768371582
    4. '       ' → logprob: -14.625004768371582
    5. '))' → logprob: -15.125004768371582
    6. '   ' → logprob: -15.125004768371582
    7. ')return' → logprob: -15.375004768371582
    8. '<|end|>' → logprob: -15.500004768371582
    9. ')

' → logprob: -15.625004768371582
    10. ')#' → logprob: -15.750004768371582

Token 1267: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0011355738388374448
    2. '```' → logprob: -7.501135349273682
    3. 'def' → logprob: -7.626135349273682
    4. '    
' → logprob: -10.62613582611084
    5. '
' → logprob: -10.75113582611084
    6. '<|end|>' → logprob: -10.87613582611084
    7. '       ' → logprob: -12.00113582611084
    8. ' def' → logprob: -12.00113582611084
    9. ' ' → logprob: -12.75113582611084
    10. ')' → logprob: -12.75113582611084

Token 1268: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.39002320170402527
    2. '   ' → logprob: -1.1400232315063477
    3. ' def' → logprob: -5.765023231506348
    4. '```' → logprob: -12.765023231506348
    5. '	def' → logprob: -13.015023231506348
    6. '
' → logprob: -13.015023231506348
    7. '    
' → logprob: -13.640023231506348
    8. ' ' → logprob: -13.765023231506348
    9. '  ' → logprob: -14.390023231506348
    10. 'import' → logprob: -14.640023231506348

Token 1269: ' generate' (ID: 10419)
  Prédit: 'search'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'search' → logprob: -0.254472941160202
    2. 'dfs' → logprob: -1.7544729709625244
    3. 'find' → logprob: -3.3794729709625244
    4. '_search' → logprob: -4.879472732543945
    5. 'plan' → logprob: -5.004472732543945
    6. 'try' → logprob: -6.879472732543945
    7. ' dfs' → logprob: -7.379472732543945
    8. '_plan' → logprob: -7.879472732543945
    9. 'back' → logprob: -8.129472732543945
    10. '_find' → logprob: -8.754472732543945

Token 1270: '_all' (ID: 13305)
  Prédit: 'moves'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'moves' → logprob: -1.4271670579910278
    2. 'self' → logprob: -1.6771670579910278
    3. '_paths' → logprob: -1.8021670579910278
    4. '_moves' → logprob: -1.8021670579910278
    5. '(self' → logprob: -2.6771669387817383
    6. ' self' → logprob: -3.1771669387817383
    7. ' all' → logprob: -3.5521669387817383
    8. 'all' → logprob: -3.9271669387817383
    9. ' moves' → logprob: -4.177166938781738
    10. '_possible' → logprob: -4.552166938781738

Token 1271: '_paths' (ID: 56992)
  Prédit: '_paths'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_paths' → logprob: -0.18201008439064026
    2. '_moves' → logprob: -2.5570101737976074
    3. 'moves' → logprob: -2.9320101737976074
    4. 'paths' → logprob: -3.6820101737976074
    5. '(self' → logprob: -5.057010173797607
    6. 'self' → logprob: -6.682010173797607
    7. '_possible' → logprob: -7.057010173797607
    8. '_move' → logprob: -7.557010173797607
    9. 'possible' → logprob: -7.682010173797607
    10. '   ' → logprob: -8.05700969696045

Token 1272: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.00010521204239921644
    2. '(' → logprob: -9.750104904174805
    3. 'self' → logprob: -10.250104904174805
    4. '   ' → logprob: -11.625104904174805
    5. ' (' → logprob: -13.625104904174805
    6. '(
' → logprob: -14.125104904174805
    7. '       ' → logprob: -15.250104904174805
    8. ' self' → logprob: -15.375104904174805
    9. '	self' → logprob: -15.875104904174805
    10. 'def' → logprob: -17.125104904174805

Token 1273: ',' (ID: 11)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.00025001514586620033
    2. '(' → logprob: -8.500249862670898
    3. 'self' → logprob: -10.375249862670898
    4. ' (' → logprob: -11.500249862670898
    5. '   ' → logprob: -12.875249862670898
    6. '(
' → logprob: -13.375249862670898
    7. ' self' → logprob: -15.125249862670898
    8. '       ' → logprob: -15.375249862670898
    9. '```' → logprob: -16.1252498626709
    10. ' ' → logprob: -16.5002498626709

Token 1274: ' start' (ID: 1604)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.32360872626304626
    2. 'start' → logprob: -1.6986087560653687
    3. ' self' → logprob: -2.948608636856079
    4. ' start' → logprob: -3.448608636856079
    5. '   ' → logprob: -5.448608875274658
    6. 'length' → logprob: -6.573608875274658
    7. 'path' → logprob: -6.823608875274658
    8. 'current' → logprob: -7.198608875274658
    9. ' current' → logprob: -7.448608875274658
    10. 'pos' → logprob: -7.573608875274658

Token 1275: ':' (ID: 25)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.0342293456196785
    2. ',' → logprob: -4.409229278564453
    3. 'self' → logprob: -4.534229278564453
    4. '       ' → logprob: -5.409229278564453
    5. '   ' → logprob: -5.659229278564453
    6. ')' → logprob: -6.909229278564453
    7. '(' → logprob: -7.409229278564453
    8. 'def' → logprob: -8.159229278564453
    9. '):
' → logprob: -8.659229278564453
    10. ':' → logprob: -8.659229278564453

Token 1276: ' Tuple' (ID: 50841)
  Prédit: 'Tuple'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Tuple' → logprob: -0.04446020722389221
    2. ' Tuple' → logprob: -3.2944602966308594
    3. 'int' → logprob: -5.294460296630859
    4. 'self' → logprob: -7.544460296630859
    5. 'List' → logprob: -7.669460296630859
    6. '   ' → logprob: -8.66946029663086
    7. 'tuple' → logprob: -9.91946029663086
    8. ' int' → logprob: -10.16946029663086
    9. '(int' → logprob: -10.66946029663086
    10. '       ' → logprob: -10.66946029663086

Token 1277: '[int' (ID: 40124)
  Prédit: '[int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[int' → logprob: -2.2007883671903983e-05
    2. '(int' → logprob: -10.875021934509277
    3. 'int' → logprob: -13.375021934509277
    4. '[' → logprob: -14.375021934509277
    5. ',int' → logprob: -14.625021934509277
    6. ':int' → logprob: -15.125021934509277
    7. '<int' → logprob: -16.000022888183594
    8. '   ' → logprob: -16.500022888183594
    9. '=int' → logprob: -17.125022888183594
    10. '[(' → logprob: -17.625022888183594

Token 1278: ',int' (ID: 20909)
  Prédit: ',int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',int' → logprob: -0.003035939997062087
    2. 'int' → logprob: -6.003036022186279
    3. ',' → logprob: -8.128035545349121
    4. '[int' → logprob: -8.253035545349121
    5. ']int' → logprob: -13.253035545349121
    6. ':int' → logprob: -13.753035545349121
    7. '(int' → logprob: -14.003035545349121
    8. '<int' → logprob: -14.878035545349121
    9. ',
' → logprob: -15.253035545349121
    10. ' int' → logprob: -16.003036499023438

Token 1279: '],' (ID: 2155)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.026521820574998856
    2. ')' → logprob: -3.651521921157837
    3. '   ' → logprob: -9.651521682739258
    4. '       ' → logprob: -9.651521682739258
    5. ' ,' → logprob: -9.651521682739258
    6. '):
' → logprob: -11.526521682739258
    7. ' )' → logprob: -12.026521682739258
    8. '])' → logprob: -12.151521682739258
    9. '):' → logprob: -12.901521682739258
    10. ',)' → logprob: -13.651521682739258

Token 1280: ' max' (ID: 2999)
  Prédit: 'length'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'length' → logprob: -0.20737800002098083
    2. ' length' → logprob: -1.7073780298233032
    3. 'depth' → logprob: -6.082377910614014
    4. 'max' → logprob: -7.457377910614014
    5. 'steps' → logprob: -7.457377910614014
    6. ' depth' → logprob: -7.582377910614014
    7. ' current' → logprob: -7.707377910614014
    8. 'current' → logprob: -8.082378387451172
    9. ' steps' → logprob: -8.457378387451172
    10. 'path' → logprob: -8.707378387451172

Token 1281: '_len' (ID: 13683)
  Prédit: '_moves'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_moves' → logprob: -0.007334480062127113
    2. '_length' → logprob: -5.3823347091674805
    3. '_depth' → logprob: -6.5073347091674805
    4. '_len' → logprob: -7.6323347091674805
    5. '_steps' → logprob: -7.8823347091674805
    6. '_move' → logprob: -9.38233470916748
    7. 'moves' → logprob: -9.38233470916748
    8. 'len' → logprob: -10.25733470916748
    9. 'length' → logprob: -10.88233470916748
    10. '_tokens' → logprob: -10.88233470916748

Token 1282: ':' (ID: 25)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.24820499122142792
    2. ':' → logprob: -1.7482049465179443
    3. ')' → logprob: -4.123205184936523
    4. '   ' → logprob: -4.373205184936523
    5. 'self' → logprob: -5.248205184936523
    6. '):' → logprob: -5.498205184936523
    7. '(self' → logprob: -6.123205184936523
    8. '       ' → logprob: -6.248205184936523
    9. '=self' → logprob: -6.498205184936523
    10. ' self' → logprob: -7.373205184936523

Token 1283: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.015614787116646767
    2. 'self' → logprob: -4.390614986419678
    3. ' int' → logprob: -6.140614986419678
    4. '   ' → logprob: -7.765614986419678
    5. ' self' → logprob: -9.14061450958252
    6. ' ' → logprob: -9.51561450958252
    7. ')' → logprob: -9.64061450958252
    8. '[int' → logprob: -9.76561450958252
    9. '       ' → logprob: -10.01561450958252
    10. '=int' → logprob: -10.64061450958252

Token 1284: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00016599490481894463
    2. ' )' → logprob: -9.250165939331055
    3. '):
' → logprob: -10.000165939331055
    4. '   ' → logprob: -10.875165939331055
    5. ',' → logprob: -13.375165939331055
    6. '=' → logprob: -13.875165939331055
    7. '):' → logprob: -14.000165939331055
    8. ')->' → logprob: -14.000165939331055
    9. ':' → logprob: -15.000165939331055
    10. '       ' → logprob: -15.375165939331055

Token 1285: ' ->' (ID: 2747)
  Prédit: '->'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '->' → logprob: -0.24579118192195892
    2. ' ->' → logprob: -1.6207911968231201
    3. '   ' → logprob: -4.620790958404541
    4. ')' → logprob: -5.620790958404541
    5. ':
' → logprob: -5.995790958404541
    6. '       ' → logprob: -6.245790958404541
    7. ':' → logprob: -6.245790958404541
    8. ')->' → logprob: -8.2457914352417
    9. ' ' → logprob: -10.9957914352417
    10. '=' → logprob: -11.1207914352417

Token 1286: ' List' (ID: 2655)
  Prédit: 'List'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'List' → logprob: -0.002489926293492317
    2. ' List' → logprob: -6.002490043640137
    3. '[List' → logprob: -11.502490043640137
    4. 'int' → logprob: -12.877490043640137
    5. 'Set' → logprob: -14.252490043640137
    6. '   ' → logprob: -15.377490043640137
    7. 'list' → logprob: -15.627490043640137
    8. 'None' → logprob: -15.627490043640137
    9. '	List' → logprob: -15.752490043640137
    10. 'Generator' → logprob: -16.12748908996582

Token 1287: '[List' (ID: 113982)
  Prédit: '[List'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[List' → logprob: -0.00026205103495158255
    2. '[' → logprob: -8.250262260437012
    3. '[
' → logprob: -14.750262260437012
    4. 'List' → logprob: -15.625262260437012
    5. '[(' → logprob: -15.875262260437012
    6. '[int' → logprob: -16.500261306762695
    7. '   ' → logprob: -17.625261306762695
    8. '<List' → logprob: -18.250261306762695
    9. '[[' → logprob: -18.750261306762695
    10. ':
' → logprob: -19.250261306762695

Token 1288: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -1.0325924449716695e-05
    2. '[List' → logprob: -12.00001049041748
    3. '[int' → logprob: -13.00001049041748
    4. '[(' → logprob: -13.62501049041748
    5. ']' → logprob: -15.62501049041748
    6. '[
' → logprob: -15.75001049041748
    7. '```' → logprob: -15.87501049041748
    8. '<Tuple' → logprob: -16.000009536743164
    9. '   ' → logprob: -17.875009536743164
    10. '[[' → logprob: -18.125009536743164

Token 1289: 'Tuple' (ID: 40048)
  Prédit: 'Tuple'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Tuple' → logprob: -5.9795445849886164e-05
    2. 'int' → logprob: -10.250060081481934
    3. '[' → logprob: -10.750060081481934
    4. ' Tuple' → logprob: -13.125060081481934
    5. '[int' → logprob: -14.125060081481934
    6. 'Tu' → logprob: -17.375059127807617
    7. '   ' → logprob: -17.375059127807617
    8. '<Tuple' → logprob: -17.500059127807617
    9. ']' → logprob: -17.625059127807617
    10. '```' → logprob: -18.250059127807617

Token 1290: '[int' (ID: 40124)
  Prédit: '[int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[int' → logprob: -7.896309739408025e-07
    2. 'int' → logprob: -14.625000953674316
    3. ',int' → logprob: -15.875000953674316
    4. '(int' → logprob: -16.125
    5. ']int' → logprob: -17.625
    6. '[' → logprob: -18.25
    7. '   ' → logprob: -18.875
    8. '<int' → logprob: -18.875
    9. '=int' → logprob: -19.0
    10. ']' → logprob: -19.125

Token 1291: ',int' (ID: 20909)
  Prédit: ',int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',int' → logprob: -6.0033853515051305e-05
    2. '[int' → logprob: -10.000060081481934
    3. 'int' → logprob: -11.750060081481934
    4. ',' → logprob: -12.125060081481934
    5. ']int' → logprob: -13.875060081481934
    6. '(int' → logprob: -15.625060081481934
    7. '<int' → logprob: -16.500059127807617
    8. ':int' → logprob: -17.500059127807617
    9. ' int' → logprob: -17.875059127807617
    10. ' ,' → logprob: -18.750059127807617

Token 1292: ']]' (ID: 8928)
  Prédit: ']]:
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']]:
' → logprob: -0.02142849750816822
    2. ']]' → logprob: -3.8964285850524902
    3. ']' → logprob: -7.52142858505249
    4. '>' → logprob: -8.271428108215332
    5. ']:' → logprob: -10.521428108215332
    6. ']>' → logprob: -10.646428108215332
    7. ']:
' → logprob: -10.771428108215332
    8. ')]' → logprob: -12.521428108215332
    9. ' ]' → logprob: -12.771428108215332
    10. '   ' → logprob: -12.771428108215332

Token 1293: ']:
' (ID: 22152)
  Prédit: ':
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.24937504529953003
    2. ':' → logprob: -2.124375104904175
    3. '       ' → logprob: -2.499375104904175
    4. '):
' → logprob: -4.499374866485596
    5. '   ' → logprob: -5.124374866485596
    6. '):' → logprob: -7.124374866485596
    7. '[' → logprob: -7.874374866485596
    8. ']:
' → logprob: -7.874374866485596
    9. '():
' → logprob: -9.499375343322754
    10. ',' → logprob: -9.499375343322754

Token 1294: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -5.7530574849806726e-05
    2. '   ' → logprob: -10.500057220458984
    3. 'tokens' → logprob: -10.875057220458984
    4. '```' → logprob: -12.250057220458984
    5. '[' → logprob: -13.125057220458984
    6. 'result' → logprob: -13.375057220458984
    7. ' if' → logprob: -14.750057220458984
    8. 'generated' → logprob: -14.750057220458984
    9. ' tokens' → logprob: -14.875057220458984
    10. '	' → logprob: -15.250057220458984

Token 1295: ' #' (ID: 1069)
  Prédit: 'paths'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'paths' → logprob: -0.4736878573894501
    2. '       ' → logprob: -1.2236878871917725
    3. 'result' → logprob: -2.9736878871917725
    4. 'visited' → logprob: -3.9736878871917725
    5. 'if' → logprob: -4.973687648773193
    6. 'results' → logprob: -5.223687648773193
    7. 'def' → logprob: -7.473687648773193
    8. 'res' → logprob: -8.598688125610352
    9. 'all' → logprob: -9.348688125610352
    10. '   ' → logprob: -10.223688125610352

Token 1296: ' BFS' (ID: 190016)
  Prédit: 'paths'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'paths' → logprob: -0.02944079600274563
    2. 'results' → logprob: -4.029440879821777
    3. 'result' → logprob: -4.779440879821777
    4. 'if' → logprob: -6.029440879821777
    5. 'res' → logprob: -8.279440879821777
    6. '       ' → logprob: -9.154440879821777
    7. 'def' → logprob: -10.779440879821777
    8. '   ' → logprob: -11.029440879821777
    9. 'all' → logprob: -11.279440879821777
    10. 'visited' → logprob: -11.904440879821777

Token 1297: '/' (ID: 14)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.17007189989089966
    2. 'from' → logprob: -2.045071840286255
    3. '
' → logprob: -3.795071840286255
    4. ' from' → logprob: -5.920072078704834
    5. 'queue' → logprob: -7.045072078704834
    6. '```' → logprob: -7.920072078704834
    7. 'result' → logprob: -8.795071601867676
    8. '   ' → logprob: -9.170071601867676
    9. 'tokens' → logprob: -9.295071601867676
    10. ',' → logprob: -10.420071601867676

Token 1298: 'DFS' (ID: 109565)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.08192764967679977
    2. '[' → logprob: -3.581927537918091
    3. '[start' → logprob: -4.20692777633667
    4. 'from' → logprob: -4.58192777633667
    5. '[
' → logprob: -5.20692777633667
    6. 'self' → logprob: -5.83192777633667
    7. 'DFS' → logprob: -5.83192777633667
    8. 'dfs' → logprob: -5.83192777633667
    9. '       ' → logprob: -6.20692777633667
    10. ' def' → logprob: -6.70692777633667

Token 1299: ' for' (ID: 395)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3822649121284485
    2. 'result' → logprob: -1.3822648525238037
    3. 'paths' → logprob: -3.0072648525238037
    4. 'from' → logprob: -5.632265090942383
    5. '
' → logprob: -5.757265090942383
    6. '```' → logprob: -5.882265090942383
    7. 'visited' → logprob: -6.382265090942383
    8. 'stack' → logprob: -6.632265090942383
    9. 'results' → logprob: -7.007265090942383
    10. ' paths' → logprob: -7.132265090942383

Token 1300: ' paths' (ID: 23373)
  Prédit: '[start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[start' → logprob: -0.7767422199249268
    2. 'paths' → logprob: -0.9017422199249268
    3. '[' → logprob: -3.4017422199249268
    4. 'start' → logprob: -3.4017422199249268
    5. 'self' → logprob: -3.6517422199249268
    6. '[
' → logprob: -4.401741981506348
    7. 'def' → logprob: -4.901741981506348
    8. '[]
' → logprob: -5.526741981506348
    9. 'all' → logprob: -5.776741981506348
    10. '[]' → logprob: -5.776741981506348

Token 1301: ' of' (ID: 328)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.013336817733943462
    2. '   ' → logprob: -5.513336658477783
    3. '
' → logprob: -5.513336658477783
    4. '[' → logprob: -6.263336658477783
    5. '```' → logprob: -6.888336658477783
    6. 'result' → logprob: -7.388336658477783
    7. '[]' → logprob: -8.263337135314941
    8. '        
' → logprob: -8.388337135314941
    9. '[start' → logprob: -8.513337135314941
    10. ':' → logprob: -8.888337135314941

Token 1302: ' length' (ID: 5517)
  Prédit: 'length'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'length' → logprob: -0.019104499369859695
    2. 'all' → logprob: -5.269104480743408
    3. 'paths' → logprob: -5.644104480743408
    4. ' length' → logprob: -5.894104480743408
    5. 'max' → logprob: -6.269104480743408
    6. 'start' → logprob: -6.519104480743408
    7. 'up' → logprob: -6.769104480743408
    8. 'self' → logprob: -7.394104480743408
    9. 'len' → logprob: -7.519104480743408
    10. 'variable' → logprob: -7.644104480743408

Token 1303: ' up' (ID: 869)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.1400514394044876
    2. '(max' → logprob: -2.7650513648986816
    3. 'up' → logprob: -3.1400513648986816
    4. ' max' → logprob: -4.390051364898682
    5. '1' → logprob: -5.640051364898682
    6. ' up' → logprob: -6.015051364898682
    7. 'from' → logprob: -6.640051364898682
    8. '=' → logprob: -6.765051364898682
    9. '=max' → logprob: -6.890051364898682
    10. '
' → logprob: -7.140051364898682

Token 1304: ' to' (ID: 316)
  Prédit: 'to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'to' → logprob: -3.452426608419046e-05
    2. '_to' → logprob: -11.25003433227539
    3. ' to' → logprob: -11.37503433227539
    4. '   ' → logprob: -12.62503433227539
    5. 'To' → logprob: -13.12503433227539
    6. '1' → logprob: -14.00003433227539
    7. '       ' → logprob: -14.25003433227539
    8. '```' → logprob: -14.25003433227539
    9. 't' → logprob: -14.37503433227539
    10. 'o' → logprob: -15.12503433227539

Token 1305: ' max' (ID: 2999)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.0010479353368282318
    2. ' max' → logprob: -6.8760480880737305
    3. '(max' → logprob: -11.37604808807373
    4. '
' → logprob: -13.62604808807373
    5. '=max' → logprob: -14.37604808807373
    6. '[max' → logprob: -14.50104808807373
    7. '```' → logprob: -15.12604808807373
    8. '	max' → logprob: -15.25104808807373
    9. '   ' → logprob: -15.50104808807373
    10. '       ' → logprob: -15.75104808807373

Token 1306: '_len' (ID: 13683)
  Prédit: '_len'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_len' → logprob: -5.512236498361744e-07
    2. 'len' → logprob: -16.125
    3. 'Len' → logprob: -16.5
    4. '_LEN' → logprob: -16.625
    5. '_' → logprob: -16.75
    6. '(len' → logprob: -17.125
    7. '(_' → logprob: -17.375
    8. '   ' → logprob: -17.75
    9. '```' → logprob: -18.25
    10. ' _' → logprob: -18.75

Token 1307: ' +' (ID: 659)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0017582408618181944
    2. 'result' → logprob: -6.626758098602295
    3. '
' → logprob: -9.126758575439453
    4. '   ' → logprob: -9.376758575439453
    5. 'paths' → logprob: -9.376758575439453
    6. 'stack' → logprob: -10.376758575439453
    7. 'visited' → logprob: -10.376758575439453
    8. 'def' → logprob: -10.501758575439453
    9. '```' → logprob: -10.626758575439453
    10. 'results' → logprob: -11.626758575439453

Token 1308: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0017181389266625047
    2. '0' → logprob: -7.501718044281006
    3. ' ' → logprob: -7.501718044281006
    4. 'max' → logprob: -7.751718044281006
    5. 'start' → logprob: -9.501718521118164
    6. '```' → logprob: -10.126718521118164
    7. '+' → logprob: -11.126718521118164
    8. '
' → logprob: -11.251718521118164
    9. '[' → logprob: -11.501718521118164
    10. '(max' → logprob: -12.001718521118164

Token 1309: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.41512396931648254
    2. 'max' → logprob: -1.4151239395141602
    3. '0' → logprob: -2.41512393951416
    4. 'start' → logprob: -5.79012393951416
    5. '(max' → logprob: -6.41512393951416
    6. '[max' → logprob: -7.41512393951416
    7. '
' → logprob: -7.54012393951416
    8. ' max' → logprob: -7.66512393951416
    9. '```' → logprob: -7.66512393951416
    10. 'def' → logprob: -9.04012393951416

Token 1310: ' (' (ID: 350)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.015317216515541077
    2. '
' → logprob: -4.265317440032959
    3. '   ' → logprob: -7.015317440032959
    4. '```' → logprob: -10.0153169631958
    5. '	' → logprob: -10.1403169631958
    6. '):
' → logprob: -10.5153169631958
    7. ':
' → logprob: -10.6403169631958
    8. ',' → logprob: -10.6403169631958
    9. ':' → logprob: -10.8903169631958
    10. '        
' → logprob: -11.0153169631958

Token 1311: 'positions' (ID: 32297)
  Prédit: 'start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'start' → logprob: -0.5927984118461609
    2. '[start' → logprob: -1.8427984714508057
    3. '):
' → logprob: -2.4677984714508057
    4. ')' → logprob: -3.0927984714508057
    5. ' start' → logprob: -3.2177984714508057
    6. '1' → logprob: -4.217798233032227
    7. 'max' → logprob: -4.217798233032227
    8. 'def' → logprob: -4.342798233032227
    9. '       ' → logprob: -4.467798233032227
    10. '   ' → logprob: -4.592798233032227

Token 1312: ' count' (ID: 3605)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5434831976890564
    2. '):
' → logprob: -1.2934832572937012
    3. ' =' → logprob: -3.293483257293701
    4. ')' → logprob: -3.668483257293701
    5. '=' → logprob: -4.168483257293701
    6. '):' → logprob: -4.168483257293701
    7. 'def' → logprob: -4.543483257293701
    8. ',' → logprob: -4.793483257293701
    9. '...' → logprob: -5.668483257293701
    10. '<|end|>' → logprob: -5.668483257293701

Token 1313: ')
' (ID: 446)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.15603873133659363
    2. '):
' → logprob: -2.406038761138916
    3. '):' → logprob: -4.156038761138916
    4. ':' → logprob: -4.656038761138916
    5. ',' → logprob: -4.906038761138916
    6. ':
' → logprob: -5.781038761138916
    7. ')' → logprob: -6.031038761138916
    8. '
' → logprob: -6.031038761138916
    9. '           ' → logprob: -6.156038761138916
    10. '=' → logprob: -6.406038761138916

Token 1314: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0001549089647596702
    2. '   ' → logprob: -8.875154495239258
    3. '```' → logprob: -11.250154495239258
    4. '	' → logprob: -14.375154495239258
    5. 'tokens' → logprob: -14.750154495239258
    6. '
' → logprob: -15.125154495239258
    7. ',' → logprob: -15.625154495239258
    8. '           ' → logprob: -16.125154495239258
    9. '	   ' → logprob: -16.375154495239258
    10. 's' → logprob: -16.625154495239258

Token 1315: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0019075737800449133
    2. 'paths' → logprob: -6.8769073486328125
    3. 'result' → logprob: -7.5019073486328125
    4. 'stack' → logprob: -8.626907348632812
    5. 'visited' → logprob: -9.126907348632812
    6. 'results' → logprob: -11.001907348632812
    7. '   ' → logprob: -11.376907348632812
    8. 'from' → logprob: -13.251907348632812
    9. 'queue' → logprob: -13.626907348632812
    10. 'res' → logprob: -14.376907348632812

Token 1316: ' The' (ID: 623)
  Prédit: 'paths'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'paths' → logprob: -0.7951995134353638
    2. '       ' → logprob: -1.0451995134353638
    3. 'result' → logprob: -1.7951995134353638
    4. 'stack' → logprob: -4.420199394226074
    5. 'results' → logprob: -4.795199394226074
    6. 'visited' → logprob: -5.295199394226074
    7. 'from' → logprob: -5.670199394226074
    8. '```' → logprob: -6.795199394226074
    9. 'all' → logprob: -8.420199394226074
    10. 'res' → logprob: -8.545199394226074

Token 1317: ' path' (ID: 3104)
  Prédit: 'paths'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'paths' → logprob: -0.48740220069885254
    2. 'result' → logprob: -1.2374022006988525
    3. 'results' → logprob: -2.9874022006988525
    4. 'def' → logprob: -3.7374022006988525
    5. 'res' → logprob: -3.9874022006988525
    6. '   ' → logprob: -6.612401962280273
    7. 'stack' → logprob: -7.237401962280273
    8. ' result' → logprob: -8.612401962280273
    9. 'visited' → logprob: -8.737401962280273
    10. ' paths' → logprob: -8.862401962280273

Token 1318: ' represents' (ID: 18627)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.4921340346336365
    2. ' =' → logprob: -0.9921340346336365
    3. '=' → logprob: -5.242134094238281
    4. ':' → logprob: -5.492134094238281
    5. '.append' → logprob: -5.742134094238281
    6. '=[]' → logprob: -6.617134094238281
    7. 'def' → logprob: -6.742134094238281
    8. '_tokens' → logprob: -7.492134094238281
    9. ' is' → logprob: -7.992134094238281
    10. ' s' → logprob: -8.367134094238281

Token 1319: ' block' (ID: 4355)
  Prédit: 'paths'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'paths' → logprob: -0.6286661028862
    2. 'a' → logprob: -1.2536661624908447
    3. 'all' → logprob: -3.3786661624908447
    4. 'the' → logprob: -3.7536661624908447
    5. '[start' → logprob: -4.003665924072266
    6. 'moves' → logprob: -4.003665924072266
    7. '[' → logprob: -4.128665924072266
    8. 'se' → logprob: -4.253665924072266
    9. '[[' → logprob: -4.378665924072266
    10. 'positions' → logprob: -4.378665924072266

Token 1320: ''s' (ID: 885)
  Prédit: ' movements'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' movements' → logprob: -1.3789161443710327
    2. 'positions' → logprob: -1.5039161443710327
    3. ' positions' → logprob: -2.0039162635803223
    4. 'movement' → logprob: -2.0039162635803223
    5. '[' → logprob: -2.7539162635803223
    6. 'moves' → logprob: -2.8789162635803223
    7. ' movement' → logprob: -3.3789162635803223
    8. 's' → logprob: -3.7539162635803223
    9. '[start' → logprob: -3.8789162635803223
    10. '       ' → logprob: -4.003916263580322

Token 1321: ' successive' (ID: 97595)
  Prédit: 'movement'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'movement' → logprob: -0.17095887660980225
    2. 'positions' → logprob: -2.420958995819092
    3. 'current' → logprob: -3.920958995819092
    4. ' movement' → logprob: -4.045958995819092
    5. 'position' → logprob: -4.545958995819092
    6. 'moves' → logprob: -4.920958995819092
    7. 'path' → logprob: -5.295958995819092
    8. 'mov' → logprob: -6.170958995819092
    9. 'move' → logprob: -6.295958995819092
    10. 'steps' → logprob: -7.420958995819092

Token 1322: ' positions' (ID: 15897)
  Prédit: 'positions'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'positions' → logprob: -0.13588601350784302
    2. ' positions' → logprob: -2.5108859539031982
    3. 'moves' → logprob: -3.3858859539031982
    4. ' moves' → logprob: -5.385886192321777
    5. 'movement' → logprob: -5.760886192321777
    6. ' movements' → logprob: -6.760886192321777
    7. ' movement' → logprob: -7.135886192321777
    8. 'position' → logprob: -7.885886192321777
    9. 'steps' → logprob: -8.010886192321777
    10. 'mov' → logprob: -8.135886192321777

Token 1323: ' after' (ID: 1934)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.13906893134117126
    2. '
' → logprob: -2.139068841934204
    3. '   ' → logprob: -5.639069080352783
    4. '```' → logprob: -5.764069080352783
    5. '        
' → logprob: -6.889069080352783
    6. ':' → logprob: -7.389069080352783
    7. '[' → logprob: -7.389069080352783
    8. ' =' → logprob: -7.764069080352783
    9. '
' → logprob: -7.764069080352783
    10. '[start' → logprob: -8.139068603515625

Token 1324: ' swaps' (ID: 150699)
  Prédit: 'moves'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'moves' → logprob: -0.6604666709899902
    2. 'start' → logprob: -1.5354666709899902
    3. 'each' → logprob: -2.0354666709899902
    4. 'swap' → logprob: -3.0354666709899902
    5. ' moves' → logprob: -3.6604666709899902
    6. ' start' → logprob: -4.41046667098999
    7. ' each' → logprob: -4.66046667098999
    8. 'move' → logprob: -4.66046667098999
    9. 'moving' → logprob: -5.16046667098999
    10. 'the' → logprob: -5.28546667098999

Token 1325: '.
' (ID: 558)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0029472745954990387
    2. '
' → logprob: -6.6279473304748535
    3. '```' → logprob: -7.1279473304748535
    4. '   ' → logprob: -7.2529473304748535
    5. 'def' → logprob: -10.877946853637695
    6. ',' → logprob: -11.127946853637695
    7. 'tokens' → logprob: -11.127946853637695
    8. '	' → logprob: -11.377946853637695
    9. 'result' → logprob: -11.752946853637695
    10. ':' → logprob: -11.877946853637695

Token 1326: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0007543585379607975
    2. '```' → logprob: -7.375754356384277
    3. '
' → logprob: -9.500754356384277
    4. '   ' → logprob: -10.500754356384277
    5. '        
' → logprob: -11.875754356384277
    6. '	' → logprob: -11.875754356384277
    7. 'def' → logprob: -12.875754356384277
    8. 'tokens' → logprob: -13.375754356384277
    9. '``' → logprob: -14.000754356384277
    10. ',' → logprob: -14.000754356384277

Token 1327: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0005724519141949713
    2. 'result' → logprob: -8.250572204589844
    3. 'paths' → logprob: -8.875572204589844
    4. '   ' → logprob: -9.375572204589844
    5. 'stack' → logprob: -10.000572204589844
    6. 'visited' → logprob: -10.625572204589844
    7. 'from' → logprob: -12.375572204589844
    8. 'def' → logprob: -12.625572204589844
    9. 'tokens' → logprob: -12.875572204589844
    10. '	' → logprob: -13.250572204589844

Token 1328: ' Positions' (ID: 138312)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.49021095037460327
    2. 'paths' → logprob: -1.240211009979248
    3. 'result' → logprob: -2.490211009979248
    4. 'visited' → logprob: -4.740211009979248
    5. 'results' → logprob: -5.615211009979248
    6. 'stack' → logprob: -6.115211009979248
    7. 'res' → logprob: -8.11521053314209
    8. 'all' → logprob: -8.99021053314209
    9. '   ' → logprob: -9.11521053314209
    10. 'from' → logprob: -9.36521053314209

Token 1329: ' can' (ID: 665)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.37918341159820557
    2. 'visited' → logprob: -1.8791834115982056
    3. '=' → logprob: -2.004183292388916
    4. ',' → logprob: -5.004183292388916
    5. '=[]' → logprob: -5.879183292388916
    6. ':' → logprob: -6.004183292388916
    7. 'are' → logprob: -6.129183292388916
    8. '   ' → logprob: -6.129183292388916
    9. '.append' → logprob: -6.254183292388916
    10. 'def' → logprob: -6.629183292388916

Token 1330: ' be' (ID: 413)
  Prédit: 'be'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'be' → logprob: -0.4688861668109894
    2. ' be' → logprob: -1.593886137008667
    3. 'not' → logprob: -1.968886137008667
    4. ' not' → logprob: -3.718886137008667
    5. 'repeat' → logprob: -5.218886375427246
    6. 're' → logprob: -7.843886375427246
    7. ' only' → logprob: -8.718886375427246
    8. ' repeat' → logprob: -8.718886375427246
    9. 'continue' → logprob: -8.843886375427246
    10. 'already' → logprob: -8.968886375427246

Token 1331: ' revis' (ID: 19497)
  Prédit: 're'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 're' → logprob: -0.05675913766026497
    2. '[start' → logprob: -3.6817591190338135
    3. 'visited' → logprob: -3.9317591190338135
    4. '[' → logprob: -4.806759357452393
    5. ' revis' → logprob: -6.806759357452393
    6. ' repeated' → logprob: -8.556758880615234
    7. '[List' → logprob: -8.931758880615234
    8. 'over' → logprob: -8.931758880615234
    9. '[
' → logprob: -9.056758880615234
    10. '[path' → logprob: -9.306758880615234

Token 1332: 'ited' (ID: 2106)
  Prédit: 'ited'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ited' → logprob: -0.0007183883571997285
    2. 'isted' → logprob: -7.250718593597412
    3. '```' → logprob: -12.625718116760254
    4. '
' → logprob: -13.375718116760254
    5. 'iting' → logprob: -13.750718116760254
    6. 'ITED' → logprob: -14.375718116760254
    7. 'itted' → logprob: -15.000718116760254
    8. '   ' → logprob: -15.250718116760254
    9. 'it' → logprob: -15.375718116760254
    10. 'ite' → logprob: -15.375718116760254

Token 1333: ' -' (ID: 533)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.11885076016187668
    2. '
' → logprob: -2.2438507080078125
    3. ':
' → logprob: -6.3688507080078125
    4. ',' → logprob: -6.7438507080078125
    5. ':' → logprob: -6.8688507080078125
    6. '):
' → logprob: -7.2438507080078125
    7. '```' → logprob: -7.6188507080078125
    8. '   ' → logprob: -8.243850708007812
    9. '        
' → logprob: -8.743850708007812
    10. 'def' → logprob: -9.243850708007812

Token 1334: ' cycles' (ID: 41478)
  Prédit: 'paths'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'paths' → logprob: -0.5456019639968872
    2. 'def' → logprob: -1.5456019639968872
    3. 'result' → logprob: -1.9206019639968872
    4. ' paths' → logprob: -3.6706018447875977
    5. ' def' → logprob: -4.670601844787598
    6. 'results' → logprob: -4.920601844787598
    7. '[]' → logprob: -5.045601844787598
    8. ' result' → logprob: -5.045601844787598
    9. 'tokens' → logprob: -6.795601844787598
    10. 'res' → logprob: -7.295601844787598

Token 1335: ' allowed' (ID: 9279)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1150493174791336
    2. '
' → logprob: -2.240049362182617
    3. '   ' → logprob: -7.490049362182617
    4. '):
' → logprob: -7.990049362182617
    5. ':' → logprob: -8.240049362182617
    6. ':
' → logprob: -8.365049362182617
    7. '```' → logprob: -8.365049362182617
    8. 'def' → logprob: -8.740049362182617
    9. ',' → logprob: -8.990049362182617
    10. '        
' → logprob: -9.490049362182617

Token 1336: '.
' (ID: 558)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00015455135144293308
    2. '
' → logprob: -9.000154495239258
    3. '   ' → logprob: -10.875154495239258
    4. '```' → logprob: -12.000154495239258
    5. 'tokens' → logprob: -13.250154495239258
    6. 'result' → logprob: -13.625154495239258
    7. '        
' → logprob: -14.000154495239258
    8. ',' → logprob: -14.625154495239258
    9. 'def' → logprob: -15.125154495239258
    10. '	' → logprob: -15.125154495239258

Token 1337: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0007393499254249036
    2. '```' → logprob: -7.375739574432373
    3. '   ' → logprob: -9.375739097595215
    4. 'result' → logprob: -11.500739097595215
    5. 'tokens' → logprob: -11.875739097595215
    6. 'def' → logprob: -13.250739097595215
    7. '``' → logprob: -13.250739097595215
    8. '
' → logprob: -13.250739097595215
    9. '	' → logprob: -13.875739097595215
    10. '        
' → logprob: -14.125739097595215

Token 1338: ' paths' (ID: 23373)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.008586087264120579
    2. 'paths' (adapté à ' paths') → logprob: -5.3835859298706055
    3. 'result' → logprob: -5.6335859298706055
    4. 'stack' → logprob: -9.133585929870605
    5. 'def' → logprob: -9.383585929870605
    6. '```' → logprob: -9.758585929870605
    7. 'visited' → logprob: -9.883585929870605
    8. '   ' → logprob: -10.508585929870605
    9. 'results' → logprob: -10.758585929870605
    10. 'from' → logprob: -11.758585929870605

Token 1339: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.005342855118215084
    2. '=' → logprob: -5.255342960357666
    3. '       ' → logprob: -10.130342483520508
    4. '   ' → logprob: -10.255342483520508
    5. '=[]
' → logprob: -11.255342483520508
    6. '=[]' → logprob: -11.380342483520508
    7. ':' → logprob: -13.005342483520508
    8. '=[' → logprob: -13.130342483520508
    9. 'def' → logprob: -13.880342483520508
    10. ' ' → logprob: -14.380342483520508

Token 1340: ' []

' (ID: 32833)
  Prédit: '[['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[[' → logprob: -1.7120533811976202e-05
    2. '[(' → logprob: -11.625017166137695
    3. '[start' → logprob: -12.500017166137695
    4. '[' → logprob: -12.875017166137695
    5. ' [[' → logprob: -14.125017166137695
    6. '[]
' → logprob: -15.000017166137695
    7. '[]' → logprob: -15.000017166137695
    8. '   ' → logprob: -15.625017166137695
    9. '[['' → logprob: -15.750017166137695
    10. '([[' → logprob: -16.125017166137695

Token 1341: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -6.790129555156454e-05
    2. '   ' → logprob: -10.375067710876465
    3. '	' → logprob: -10.500067710876465
    4. '```' → logprob: -11.875067710876465
    5. 'def' → logprob: -13.500067710876465
    6. '	   ' → logprob: -15.250067710876465
    7. '
' → logprob: -15.625067710876465
    8. '           ' → logprob: -16.37506866455078
    9. ' def' → logprob: -16.37506866455078
    10. '	def' → logprob: -17.00006866455078

Token 1342: ' def' (ID: 1056)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.05945027992129326
    2. 'def' (adapté à ' def') → logprob: -3.059450387954712
    3. 'stack' → logprob: -4.559450149536133
    4. '   ' → logprob: -8.059450149536133
    5. 'from' → logprob: -12.184450149536133
    6. ' def' → logprob: -12.184450149536133
    7. ' stack' → logprob: -12.559450149536133
    8. '
' → logprob: -13.059450149536133
    9. '```' → logprob: -13.184450149536133
    10. '	stack' → logprob: -14.559450149536133

Token 1343: ' dfs' (ID: 51252)
  Prédit: 'dfs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dfs' → logprob: -0.00011546355381142348
    2. ' dfs' → logprob: -9.500115394592285
    3. '_d' → logprob: -10.500115394592285
    4. '_back' → logprob: -12.000115394592285
    5. 'back' → logprob: -12.000115394592285
    6. 'search' → logprob: -15.000115394592285
    7. '_helper' → logprob: -15.750115394592285
    8. 'helper' → logprob: -16.2501163482666
    9. '_search' → logprob: -16.7501163482666
    10. '_re' → logprob: -17.1251163482666

Token 1344: '(current' (ID: 15023)
  Prédit: '(path'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(path' → logprob: -0.5165082216262817
    2. '(current' → logprob: -1.0165082216262817
    3. '(pos' → logprob: -3.266508102416992
    4. '(position' → logprob: -6.516508102416992
    5. '(cur' → logprob: -6.641508102416992
    6. '(curr' → logprob: -7.766508102416992
    7. '(node' → logprob: -8.641508102416992
    8. 'current' → logprob: -12.141508102416992
    9. ' (' → logprob: -12.766508102416992
    10. '(depth' → logprob: -13.266508102416992

Token 1345: '_path' (ID: 5558)
  Prédit: '(path'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(path' → logprob: -0.1458462029695511
    2. '_path' → logprob: -2.395846128463745
    3. ',' → logprob: -3.770846128463745
    4. '(current' → logprob: -4.270846366882324
    5. ',path' → logprob: -5.895846366882324
    6. 'path' → logprob: -6.020846366882324
    7. '(pos' → logprob: -6.395846366882324
    8. '(position' → logprob: -8.145846366882324
    9. '_pos' → logprob: -9.020846366882324
    10. ' path' → logprob: -9.145846366882324

Token 1346: '):
' (ID: 1883)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.10770528763532639
    2. '(path' → logprob: -2.8577053546905518
    3. '(current' → logprob: -3.2327053546905518
    4. ',path' → logprob: -5.607705116271973
    5. ',current' → logprob: -6.857705116271973
    6. '       ' → logprob: -8.732705116271973
    7. 'path' → logprob: -9.482705116271973
    8. '           ' → logprob: -9.607705116271973
    9. ' path' → logprob: -9.982705116271973
    10. 'current' → logprob: -10.232705116271973

Token 1347: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00010962257510982454
    2. ',' → logprob: -9.875109672546387
    3. '   ' → logprob: -10.375109672546387
    4. '       ' → logprob: -11.375109672546387
    5. '```' → logprob: -12.750109672546387
    6. '
' → logprob: -12.875109672546387
    7. ':' → logprob: -12.875109672546387
    8. '               ' → logprob: -13.500109672546387
    9. '            
' → logprob: -14.125109672546387
    10. '          ' → logprob: -14.500109672546387

Token 1348: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.33462396264076233
    2. '           ' → logprob: -1.45962393283844
    3. ' if' → logprob: -3.0846240520477295
    4. '               ' → logprob: -5.45962381362915
    5. '   ' → logprob: -6.70962381362915
    6. 'length' → logprob: -7.70962381362915
    7. 'last' → logprob: -9.209624290466309
    8. 'next' → logprob: -9.959624290466309
    9. '	if' → logprob: -9.959624290466309
    10. 'current' → logprob: -10.084624290466309

Token 1349: ' len' (ID: 4631)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -4.008129963040119e-06
    2. ' len' → logprob: -12.500003814697266
    3. '           ' → logprob: -15.500003814697266
    4. '   ' → logprob: -18.000003814697266
    5. '               ' → logprob: -18.375003814697266
    6. '(len' → logprob: -18.875003814697266
    7. 'length' → logprob: -21.000003814697266
    8. '                   ' → logprob: -21.375003814697266
    9. '	len' → logprob: -21.500003814697266
    10. ' ' → logprob: -22.125003814697266

Token 1350: '(current' (ID: 15023)
  Prédit: '(current'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(current' → logprob: -0.00010700009443098679
    2. 'current' → logprob: -9.250106811523438
    3. '(' → logprob: -11.500106811523438
    4. ' current' → logprob: -15.375106811523438
    5. '(
' → logprob: -15.500106811523438
    6. '	current' → logprob: -16.500106811523438
    7. '=current' → logprob: -16.625106811523438
    8. '[current' → logprob: -16.750106811523438
    9. '$current' → logprob: -17.000106811523438
    10. ' (' → logprob: -17.125106811523438

Token 1351: '_path' (ID: 5558)
  Prédit: '_path'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_path' → logprob: -0.0003967071825172752
    2. '(current' → logprob: -8.500396728515625
    3. 'path' → logprob: -8.875396728515625
    4. '_paths' → logprob: -11.000396728515625
    5. '[current' → logprob: -11.125396728515625
    6. 'current' → logprob: -11.125396728515625
    7. 's' → logprob: -13.250396728515625
    8. ')' → logprob: -13.875396728515625
    9. 'paths' → logprob: -14.250396728515625
    10. '```' → logprob: -14.625396728515625

Token 1352: ')-' (ID: 14080)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.39341285824775696
    2. '==' → logprob: -1.3934128284454346
    3. ' >=' → logprob: -2.8934128284454346
    4. '>=' → logprob: -4.143413066864014
    5. ')' → logprob: -5.268413066864014
    6. '()==' → logprob: -8.518412590026855
    7. '()' → logprob: -8.643412590026855
    8. ')==' → logprob: -9.268412590026855
    9. ')>=' → logprob: -10.393412590026855
    10. '           ' → logprob: -10.643412590026855

Token 1353: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -9.13388703338569e-06
    2. ' ' → logprob: -11.625009536743164
    3. '<|end|>' → logprob: -16.750009536743164
    4. '-' → logprob: -17.750009536743164
    5. '<|end|>' → logprob: -18.125009536743164
    6. ')' → logprob: -18.125009536743164
    7. '
' → logprob: -18.500009536743164
    8. '   ' → logprob: -18.500009536743164
    9. '=' → logprob: -18.625009536743164
    10. '```' → logprob: -18.875009536743164

Token 1354: ' >' (ID: 1424)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.9674769639968872
    2. ' >=' → logprob: -0.9674769639968872
    3. ' <=' → logprob: -2.3424768447875977
    4. '>=' → logprob: -3.0924768447875977
    5. '==' → logprob: -3.4674768447875977
    6. ' >' → logprob: -3.7174768447875977
    7. '<=' → logprob: -4.092476844787598
    8. ' <' → logprob: -4.467476844787598
    9. '<' → logprob: -5.092476844787598
    10. '>' → logprob: -5.092476844787598

Token 1355: ' max' (ID: 2999)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.001704698195680976
    2. ' max' → logprob: -6.376704692840576
    3. '0' → logprob: -14.251705169677734
    4. '	max' → logprob: -14.376705169677734
    5. '(max' → logprob: -14.751705169677734
    6. 'self' → logprob: -15.251705169677734
    7. 'maxlength' → logprob: -15.751705169677734
    8. '   ' → logprob: -15.876705169677734
    9. '           ' → logprob: -16.001705169677734
    10. '
' → logprob: -16.126705169677734

Token 1356: '_len' (ID: 13683)
  Prédit: '_len'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_len' → logprob: -0.0003131784324068576
    2. '_paths' → logprob: -9.000312805175781
    3. 'len' → logprob: -9.125312805175781
    4. '_moves' → logprob: -11.375312805175781
    5. '_' → logprob: -11.500312805175781
    6. 'Len' → logprob: -11.875312805175781
    7. '```' → logprob: -12.125312805175781
    8. '0' → logprob: -12.375312805175781
    9. '   ' → logprob: -12.500312805175781
    10. '_path' → logprob: -12.625312805175781

Token 1357: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.7730421423912048
    2. ':' → logprob: -1.0230422019958496
    3. '           ' → logprob: -2.5230422019958496
    4. ':return' → logprob: -2.6480422019958496
    5. ' or' → logprob: -4.52304220199585
    6. '               ' → logprob: -4.77304220199585
    7. '):
' → logprob: -5.52304220199585
    8. ')' → logprob: -6.39804220199585
    9. 'return' → logprob: -6.77304220199585
    10. ')return' → logprob: -7.64804220199585

Token 1358: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0018465323373675346
    2. '           ' → logprob: -6.3768463134765625
    3. 'return' → logprob: -9.126846313476562
    4. ' return' → logprob: -10.626846313476562
    5. '   ' → logprob: -12.501846313476562
    6. '       ' → logprob: -12.876846313476562
    7. ':return' → logprob: -13.126846313476562
    8. '                   ' → logprob: -14.376846313476562
    9. '<|end|>' → logprob: -15.001846313476562
    10. ',' → logprob: -15.001846313476562

Token 1359: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.4002247750759125
    2. '           ' → logprob: -1.1502248048782349
    3. '               ' → logprob: -4.900224685668945
    4. ' return' → logprob: -5.150224685668945
    5. '	return' → logprob: -11.525224685668945
    6. '   ' → logprob: -11.900224685668945
    7. '       ' → logprob: -13.525224685668945
    8. ':return' → logprob: -13.650224685668945
    9. '{return' → logprob: -14.150224685668945
    10. '		' → logprob: -14.400224685668945

Token 1360: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.006324182264506817
    2. '
' → logprob: -5.131324291229248
    3. '<|end|>' → logprob: -8.63132381439209
    4. '            
' → logprob: -9.50632381439209
    5. '\n' → logprob: -9.75632381439209
    6. '       ' → logprob: -10.38132381439209
    7. '    
' → logprob: -11.13132381439209
    8. '        
' → logprob: -12.13132381439209
    9. '<|end|>' → logprob: -12.25632381439209
    10. '          ' → logprob: -12.38132381439209

Token 1361: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.06241218000650406
    2. '       ' → logprob: -2.8124122619628906
    3. '
' → logprob: -7.937412261962891
    4. '   ' → logprob: -10.18741226196289
    5. '        
' → logprob: -11.06241226196289
    6. '```' → logprob: -11.68741226196289
    7. 'tokens' → logprob: -12.43741226196289
    8. '            
' → logprob: -12.43741226196289
    9. 'token' → logprob: -13.06241226196289
    10. '         ' → logprob: -13.18741226196289

Token 1362: ' paths' (ID: 23373)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00013440960901789367
    2. '       ' → logprob: -9.250134468078613
    3. '   ' → logprob: -11.000134468078613
    4. 'tokens' → logprob: -11.625134468078613
    5. 'current' → logprob: -12.625134468078613
    6. 'if' → logprob: -13.250134468078613
    7. 'for' → logprob: -13.500134468078613
    8. '               ' → logprob: -13.750134468078613
    9. ' if' → logprob: -14.500134468078613
    10. ' for' → logprob: -14.500134468078613

Token 1363: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.0024826733861118555
    2. '.' → logprob: -6.002482891082764
    3. '.app' → logprob: -12.252482414245605
    4. '.extend' → logprob: -14.127482414245605
    5. ' .' → logprob: -14.377482414245605
    6. 'append' → logprob: -14.877482414245605
    7. '.ap' → logprob: -15.502482414245605
    8. '.Append' → logprob: -15.502482414245605
    9. '.push' → logprob: -17.002483367919922
    10. '.add' → logprob: -17.127483367919922

Token 1364: '(current' (ID: 15023)
  Prédit: '(current'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(current' → logprob: -0.039385803043842316
    2. '(de' → logprob: -3.7893857955932617
    3. '(list' → logprob: -4.164385795593262
    4. '(' → logprob: -8.039385795593262
    5. 'current' → logprob: -9.539385795593262
    6. 'list' → logprob: -10.664385795593262
    7. '(tuple' → logprob: -10.789385795593262
    8. '(depth' → logprob: -11.289385795593262
    9. 'deep' → logprob: -11.414385795593262
    10. '(cur' → logprob: -12.664385795593262

Token 1365: '_path' (ID: 5558)
  Prédit: '_path'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_path' → logprob: -0.0004388942907098681
    2. 'path' → logprob: -7.750438690185547
    3. '_paths' → logprob: -12.875438690185547
    4. 'Path' → logprob: -13.500438690185547
    5. ')' → logprob: -13.750438690185547
    6. '[current' → logprob: -14.500438690185547
    7. '_' → logprob: -14.625438690185547
    8. '```' → logprob: -14.875438690185547
    9. '[path' → logprob: -15.000438690185547
    10. '[-' → logprob: -15.250438690185547

Token 1366: '[:' (ID: 7808)
  Prédit: ' +'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.9090907573699951
    2. ')' → logprob: -1.1590907573699951
    3. '+' → logprob: -1.6590907573699951
    4. ')
' → logprob: -2.534090757369995
    5. '           ' → logprob: -5.534090995788574
    6. '[:' → logprob: -6.034090995788574
    7. '+[' → logprob: -6.034090995788574
    8. '[:-' → logprob: -6.159090995788574
    9. '[:]' → logprob: -7.284090995788574
    10. '[current' → logprob: -7.534090995788574

Token 1367: '])
' (ID: 5169)
  Prédit: ')
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.6301277875900269
    2. ')' → logprob: -1.2551277875900269
    3. '])
' → logprob: -2.0051279067993164
    4. '])' → logprob: -3.1301279067993164
    5. '           ' → logprob: -5.880127906799316
    6. '       ' → logprob: -8.005127906799316
    7. ' )
' → logprob: -8.255127906799316
    8. ' )' → logprob: -9.380127906799316
    9. ')]' → logprob: -9.380127906799316
    10. ' ])
' → logprob: -9.380127906799316

Token 1368: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -8.876193169271573e-05
    2. '       ' → logprob: -9.375088691711426
    3. '   ' → logprob: -13.500088691711426
    4. '
' → logprob: -13.875088691711426
    5. '```' → logprob: -13.875088691711426
    6. 'for' → logprob: -15.750088691711426
    7. '               ' → logprob: -16.250089645385742
    8. '            
' → logprob: -16.625089645385742
    9. '          ' → logprob: -16.750089645385742
    10. '		' → logprob: -17.250089645385742

Token 1369: ' last' (ID: 2174)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.022467490285634995
    2. 'for' → logprob: -4.022467613220215
    3. 'last' (adapté à ' last') → logprob: -6.022467613220215
    4. 'next' → logprob: -6.647467613220215
    5. 'if' → logprob: -8.022467613220215
    6. '   ' → logprob: -9.147467613220215
    7. '       ' → logprob: -10.147467613220215
    8. ' for' → logprob: -10.272467613220215
    9. 'neighbors' → logprob: -10.397467613220215
    10. 'pos' → logprob: -10.772467613220215

Token 1370: '_pos' (ID: 14692)
  Prédit: '_pos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_pos' → logprob: -0.13873444497585297
    2. ' =' → logprob: -3.2637343406677246
    3. 'pos' → logprob: -3.2637343406677246
    4. '=' → logprob: -3.8887343406677246
    5. '_position' → logprob: -4.388734340667725
    6. '_' → logprob: -4.513734340667725
    7. '_token' → logprob: -5.388734340667725
    8. ')' → logprob: -6.388734340667725
    9. '_r' → logprob: -7.013734340667725
    10. '_positions' → logprob: -7.638734340667725

Token 1371: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.4741683006286621
    2. ' =' → logprob: -0.9741683006286621
    3. '=current' → logprob: -9.34916877746582
    4. ')' → logprob: -13.72416877746582
    5. '=end' → logprob: -13.72416877746582
    6. ',' → logprob: -14.59916877746582
    7. '=
' → logprob: -14.97416877746582
    8. '=len' → logprob: -15.47416877746582
    9. ')=' → logprob: -15.72416877746582
    10. '.append' → logprob: -15.97416877746582

Token 1372: ' current' (ID: 2208)
  Prédit: 'current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'current' → logprob: -0.005234002135694027
    2. ' current' → logprob: -5.2552337646484375
    3. '(current' → logprob: -16.130233764648438
    4. '$current' → logprob: -17.005233764648438
    5. '[current' → logprob: -18.255233764648438
    6. '	current' → logprob: -18.755233764648438
    7. '=current' → logprob: -20.380233764648438
    8. '.current' → logprob: -20.380233764648438
    9. '   ' → logprob: -20.505233764648438
    10. '_current' → logprob: -20.505233764648438

Token 1373: '_path' (ID: 5558)
  Prédit: '_path'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_path' → logprob: -0.07894905656576157
    2. 'path' → logprob: -2.578948974609375
    3. '[-' → logprob: -10.203948974609375
    4. 'Path' → logprob: -11.953948974609375
    5. 'def' → logprob: -13.203948974609375
    6. '
' → logprob: -13.328948974609375
    7. '_paths' → logprob: -13.578948974609375
    8. ' path' → logprob: -13.578948974609375
    9. '_' → logprob: -14.078948974609375
    10. '```' → logprob: -14.203948974609375

Token 1374: '[-' (ID: 17503)
  Prédit: '[-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[-' → logprob: -1.9361264946837764e-07
    2. '           ' → logprob: -16.625
    3. '[
' → logprob: -17.25
    4. '```' → logprob: -17.625
    5. '[' → logprob: -18.375
    6. '   ' → logprob: -18.5
    7. '
' → logprob: -18.875
    8. '(-' → logprob: -18.875
    9. ' [-' → logprob: -19.0
    10. '][-' → logprob: -19.125

Token 1375: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.002730098320171237
    2. '()]' → logprob: -6.752729892730713
    3. '()' → logprob: -7.252729892730713
    4. '(' → logprob: -8.627730369567871
    5. ')' → logprob: -8.752730369567871
    6. '())' → logprob: -8.877730369567871
    7. ')]' → logprob: -9.752730369567871
    8. '])' → logprob: -9.752730369567871
    9. '(-' → logprob: -9.877730369567871
    10. ']' → logprob: -10.127730369567871

Token 1376: ']
' (ID: 1592)
  Prédit: ')
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.0356801375746727
    2. '           ' → logprob: -4.035680294036865
    3. ']
' → logprob: -4.535680294036865
    4. ')' → logprob: -5.410680294036865
    5. '       ' → logprob: -6.410680294036865
    6. ']' → logprob: -8.910679817199707
    7. '])
' → logprob: -9.035679817199707
    8. '   ' → logprob: -9.660679817199707
    9. '               ' → logprob: -10.160679817199707
    10. '
' → logprob: -10.160679817199707

Token 1377: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -9.579495235811919e-05
    2. '       ' → logprob: -9.37509536743164
    3. '   ' → logprob: -11.75009536743164
    4. 'for' → logprob: -13.00009536743164
    5. ' for' → logprob: -15.00009536743164
    6. '```' → logprob: -15.37509536743164
    7. '               ' → logprob: -16.75009536743164
    8. '	       ' → logprob: -17.00009536743164
    9. '          ' → logprob: -17.37509536743164
    10. 'import' → logprob: -17.50009536743164

Token 1378: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.024255363270640373
    2. '           ' → logprob: -3.7742552757263184
    3. 'r' → logprob: -7.524255275726318
    4. ' for' → logprob: -8.149255752563477
    5. '       ' → logprob: -9.149255752563477
    6. 'neighbors' → logprob: -9.899255752563477
    7. 'row' → logprob: -11.649255752563477
    8. 'rows' → logprob: -11.774255752563477
    9. '               ' → logprob: -13.024255752563477
    10. 'dire' → logprob: -13.274255752563477

Token 1379: ' delta' (ID: 18800)
  Prédit: 'dr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dr' → logprob: -0.11343476176261902
    2. 'nr' → logprob: -2.4884347915649414
    3. 'delta' → logprob: -4.113434791564941
    4. 'dir' → logprob: -6.113434791564941
    5. 'neighbor' → logprob: -6.363434791564941
    6. 'r' → logprob: -6.488434791564941
    7. 'd' → logprob: -6.613434791564941
    8. 'direction' → logprob: -7.988434791564941
    9. 'next' → logprob: -8.238434791564941
    10. 'dx' → logprob: -8.363434791564941

Token 1380: '_r' (ID: 3442)
  Prédit: '_r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_r' → logprob: -0.552799642086029
    2. ' in' → logprob: -1.3027997016906738
    3. 'r' → logprob: -2.052799701690674
    4. '_row' → logprob: -3.802799701690674
    5. 'in' → logprob: -6.177799701690674
    6. 'row' → logprob: -9.302799224853516
    7. '   ' → logprob: -11.802799224853516
    8. 'Row' → logprob: -11.927799224853516
    9. '```' → logprob: -11.927799224853516
    10. ',' → logprob: -12.302799224853516

Token 1381: ',' (ID: 11)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.1288982480764389
    2. 'in' → logprob: -2.1288981437683105
    3. ',' → logprob: -6.2538981437683105
    4. '   ' → logprob: -11.628898620605469
    5. '	in' → logprob: -12.003898620605469
    6. ' ,' → logprob: -12.253898620605469
    7. '    ' → logprob: -12.378898620605469
    8. ',in' → logprob: -12.503898620605469
    9. ' ' → logprob: -12.628898620605469
    10. 'd' → logprob: -13.128898620605469

Token 1382: ' delta' (ID: 18800)
  Prédit: 'delta'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'delta' → logprob: -0.13940870761871338
    2. '(' → logprob: -3.139408588409424
    3. '(delta' → logprob: -3.139408588409424
    4. '0' → logprob: -4.514408588409424
    5. '-' → logprob: -4.514408588409424
    6. ' delta' → logprob: -4.889408588409424
    7. '(-' → logprob: -5.139408588409424
    8. ' (' → logprob: -5.264408588409424
    9. '1' → logprob: -6.639408588409424
    10. ' -' → logprob: -7.139408588409424

Token 1383: '_c' (ID: 1303)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.04361962527036667
    2. '_c' → logprob: -3.1686196327209473
    3. ',c' → logprob: -7.918619632720947
    4. ' c' → logprob: -9.168619155883789
    5. ',' → logprob: -9.793619155883789
    6. '```' → logprob: -10.793619155883789
    7. '<|end|>' → logprob: -11.168619155883789
    8. '	c' → logprob: -11.418619155883789
    9. '[' → logprob: -11.543619155883789
    10. '<|end|>' → logprob: -12.168619155883789

Token 1384: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.01815614476799965
    2. 'in' → logprob: -4.018156051635742
    3. '	in' → logprob: -13.268156051635742
    4. ',' → logprob: -14.143156051635742
    5. '           ' → logprob: -14.393156051635742
    6. '   ' → logprob: -14.518156051635742
    7. '    ' → logprob: -14.518156051635742
    8. 'In' → logprob: -14.893156051635742
    9. '_in' → logprob: -15.393156051635742
    10. '        ' → logprob: -15.643156051635742

Token 1385: ' [(' (ID: 43900)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.12712611258029938
    2. '[(' → logprob: -2.1271262168884277
    3. '[-' → logprob: -8.87712574005127
    4. ' [' → logprob: -10.75212574005127
    5. '[((' → logprob: -11.25212574005127
    6. '(-' → logprob: -11.37712574005127
    7. '((' → logprob: -11.50212574005127
    8. '((-' → logprob: -13.50212574005127
    9. '[
' → logprob: -14.75212574005127
    10. ' [(' → logprob: -14.87712574005127

Token 1386: '1' (ID: 16)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.5950340032577515
    2. '-' → logprob: -0.8450340032577515
    3. '1' → logprob: -3.970034122467041
    4. '(' → logprob: -10.845033645629883
    5. '(-' → logprob: -11.220033645629883
    6. ' -' → logprob: -12.345033645629883
    7. ' ' → logprob: -12.720033645629883
    8. '−' → logprob: -15.720033645629883
    9. '   ' → logprob: -17.345033645629883
    10. '01' → logprob: -17.845033645629883

Token 1387: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -3.79811754100956e-05
    2. ' ,' → logprob: -10.500038146972656
    3. '0' → logprob: -11.500038146972656
    4. ',
' → logprob: -16.000038146972656
    5. '<|end|>' → logprob: -17.500038146972656
    6. '),' → logprob: -17.750038146972656
    7. ',-' → logprob: -18.375038146972656
    8. ' ' → logprob: -18.500038146972656
    9. '‌,' → logprob: -18.750038146972656
    10. '```' → logprob: -18.875038146972656

Token 1388: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.15310683415737e-05
    2. ' ' → logprob: -10.750021934509277
    3. '۰' → logprob: -17.37502098083496
    4. '   ' → logprob: -17.75002098083496
    5. '  ' → logprob: -18.62502098083496
    6. '00' → logprob: -19.62502098083496
    7. '-' → logprob: -20.12502098083496
    8. ')' → logprob: -20.12502098083496
    9. '٠' → logprob: -20.43752098083496
    10. ',' → logprob: -20.68752098083496

Token 1389: '),' (ID: 936)
  Prédit: '),'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),' → logprob: -0.10021626949310303
    2. '),(' → logprob: -2.3502163887023926
    3. ' ),' → logprob: -11.975215911865234
    4. '),
' → logprob: -12.975215911865234
    5. '           ' → logprob: -14.975215911865234
    6. ',),' → logprob: -15.850215911865234
    7. '(' → logprob: -15.975215911865234
    8. ',' → logprob: -16.100215911865234
    9. ')' → logprob: -16.725215911865234
    10. '()),' → logprob: -16.975215911865234

Token 1390: '(-' (ID: 8087)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.02382708713412285
    2. '(' → logprob: -3.773827075958252
    3. ' ' → logprob: -8.27382755279541
    4. '-' → logprob: -8.39882755279541
    5. '(-' → logprob: -9.52382755279541
    6. ' (' → logprob: -10.52382755279541
    7. ' -' → logprob: -14.27382755279541
    8. '   ' → logprob: -15.64882755279541
    9. '           ' → logprob: -16.023826599121094
    10. ' (-' → logprob: -16.273826599121094

Token 1391: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.9361264946837764e-07
    2. '0' → logprob: -16.5
    3. ' ' → logprob: -17.875
    4. '```' → logprob: -18.625
    5. '   ' → logprob: -18.875
    6. '
' → logprob: -19.875
    7. '2' → logprob: -20.4375
    8. '１' → logprob: -20.9375
    9. '-' → logprob: -21.0625
    10. ',' → logprob: -21.125

Token 1392: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00010688089241739362
    2. '0' → logprob: -9.375106811523438
    3. ' ,' → logprob: -10.750106811523438
    4. ',
' → logprob: -15.500106811523438
    5. '           ' → logprob: -16.875106811523438
    6. '),(' → logprob: -17.000106811523438
    7. '),' → logprob: -17.250106811523438
    8. '   ' → logprob: -17.375106811523438
    9. '```' → logprob: -17.375106811523438
    10. ' ' → logprob: -17.500106811523438

Token 1393: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -5.080963092041202e-06
    2. ' ' → logprob: -12.250004768371582
    3. ',' → logprob: -15.250004768371582
    4. '1' → logprob: -18.1250057220459
    5. '   ' → logprob: -18.5000057220459
    6. '۰' → logprob: -18.6250057220459
    7. '```' → logprob: -19.1875057220459
    8. '  ' → logprob: -19.8750057220459
    9. '00' → logprob: -19.9375057220459
    10. '
' → logprob: -20.1875057220459

Token 1394: '),(' (ID: 54876)
  Prédit: '),('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),(' → logprob: -0.000411011598771438
    2. ',(' → logprob: -8.250411033630371
    3. '),' → logprob: -9.000411033630371
    4. ',' → logprob: -10.875411033630371
    5. '(' → logprob: -12.000411033630371
    6. '),
' → logprob: -15.125411033630371
    7. '   ' → logprob: -15.500411033630371
    8. '],[' → logprob: -15.875411033630371
    9. '           ' → logprob: -15.875411033630371
    10. '       ' → logprob: -16.000410079956055

Token 1395: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.816093228830141e-06
    2. ' ' → logprob: -12.87500286102295
    3. '(' → logprob: -16.250001907348633
    4. '۰' → logprob: -18.000001907348633
    5. '1' → logprob: -18.250001907348633
    6. ',' → logprob: -18.687501907348633
    7. ')' → logprob: -19.250001907348633
    8. '00' → logprob: -19.312501907348633
    9. '
' → logprob: -19.562501907348633
    10. '   ' → logprob: -19.687501907348633

Token 1396: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.000511091377120465
    2. '1' → logprob: -7.875511169433594
    3. ',-' → logprob: -9.250511169433594
    4. ' ,' → logprob: -10.375511169433594
    5. ',
' → logprob: -13.375511169433594
    6. ',+' → logprob: -14.375511169433594
    7. '   ' → logprob: -14.500511169433594
    8. '
' → logprob: -15.250511169433594
    9. ' ' → logprob: -15.375511169433594
    10. '           ' → logprob: -16.000511169433594

Token 1397: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.8889261304575484e-06
    2. '-' → logprob: -12.500003814697266
    3. ' ' → logprob: -16.125003814697266
    4. '```' → logprob: -17.125003814697266
    5. '
' → logprob: -18.250003814697266
    6. '   ' → logprob: -19.250003814697266
    7. '+' → logprob: -19.500003814697266
    8. ' -' → logprob: -20.125003814697266
    9. ')' → logprob: -20.125003814697266
    10. '(' → logprob: -20.750003814697266

Token 1398: '),(' (ID: 54876)
  Prédit: '),('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),(' → logprob: -0.0009561245678924024
    2. ',(' → logprob: -7.250956058502197
    3. ',' → logprob: -8.750956535339355
    4. '),' → logprob: -9.500956535339355
    5. '(' → logprob: -11.750956535339355
    6. '   ' → logprob: -13.000956535339355
    7. '       ' → logprob: -14.250956535339355
    8. '           ' → logprob: -14.375956535339355
    9. '),
' → logprob: -14.625956535339355
    10. '               ' → logprob: -15.875956535339355

Token 1399: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -9.968312951968983e-06
    2. '-' → logprob: -11.625009536743164
    3. ' ' → logprob: -13.875009536743164
    4. ',' → logprob: -17.250009536743164
    5. '
' → logprob: -17.750009536743164
    6. '(' → logprob: -17.750009536743164
    7. '۰' → logprob: -17.875009536743164
    8. '   ' → logprob: -18.000009536743164
    9. '```' → logprob: -18.000009536743164
    10. ')' → logprob: -18.062509536743164

Token 1400: ',-' (ID: 8202)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00027420982951298356
    2. ',-' → logprob: -8.250274658203125
    3. '0' → logprob: -11.625274658203125
    4. ' ,' → logprob: -13.000274658203125
    5. ',
' → logprob: -14.375274658203125
    6. '   ' → logprob: -15.000274658203125
    7. '1' → logprob: -15.125274658203125
    8. ',(' → logprob: -15.250274658203125
    9. '           ' → logprob: -16.875274658203125
    10. '       ' → logprob: -17.000274658203125

Token 1401: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.961759259458631e-06
    2. '0' → logprob: -12.250004768371582
    3. ')]' → logprob: -16.3750057220459
    4. '```' → logprob: -18.5000057220459
    5. ' ' → logprob: -19.7500057220459
    6. ')' → logprob: -19.8750057220459
    7. '   ' → logprob: -20.0000057220459
    8. ')]
' → logprob: -20.2500057220459
    9. '
' → logprob: -21.2500057220459
    10. '``' → logprob: -22.0000057220459

Token 1402: ')]' (ID: 15710)
  Prédit: ')]'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.016569631174206734
    2. '):
' → logprob: -4.3915696144104
    3. ')' → logprob: -6.3915696144104
    4. '           ' → logprob: -6.5165696144104
    5. '               ' → logprob: -8.391570091247559
    6. ']]:
' → logprob: -8.391570091247559
    7. '       ' → logprob: -8.891570091247559
    8. ']):
' → logprob: -9.641570091247559
    9. ' )' → logprob: -9.891570091247559
    10. ']' → logprob: -10.016570091247559

Token 1403: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.37641653418540955
    2. ':' → logprob: -1.376416563987732
    3. '               ' → logprob: -3.5014164447784424
    4. '):
' → logprob: -4.2514166831970215
    5. '           ' → logprob: -5.0014166831970215
    6. ',' → logprob: -5.3764166831970215
    7. '<|end|>' → logprob: -5.7514166831970215
    8. '       ' → logprob: -7.1264166831970215
    9. '():
' → logprob: -7.7514166831970215
    10. '                   ' → logprob: -8.626416206359863

Token 1404: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0005612540990114212
    2. ' new' → logprob: -8.000561714172363
    3. 'new' → logprob: -9.625561714172363
    4. ' r' → logprob: -9.750561714172363
    5. 'r' → logprob: -10.000561714172363
    6. ' next' → logprob: -10.750561714172363
    7. 'next' → logprob: -11.625561714172363
    8. '                   ' → logprob: -12.000561714172363
    9. '	           ' → logprob: -12.375561714172363
    10. '              ' → logprob: -12.875561714172363

Token 1405: ' nr' (ID: 24055)
  Prédit: 'nr'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nr' (adapté à ' nr') → logprob: -0.6845405697822571
    2. ' nr' → logprob: -1.5595405101776123
    3. '                   ' → logprob: -1.6845405101776123
    4. ' r' → logprob: -3.4345405101776123
    5. ' new' → logprob: -3.5595405101776123
    6. 'r' → logprob: -3.8095405101776123
    7. 'new' → logprob: -4.809540748596191
    8. ' next' → logprob: -5.434540748596191
    9. ' nxt' → logprob: -6.559540748596191
    10. 'next' → logprob: -6.684540748596191

Token 1406: ',' (ID: 11)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.3507685661315918
    2. ' =' → logprob: -1.2257685661315918
    3. ',' → logprob: -6.225768566131592
    4. '=n' → logprob: -8.22576904296875
    5. ',n' → logprob: -10.22576904296875
    6. '=int' → logprob: -11.22576904296875
    7. ',next' → logprob: -12.10076904296875
    8. '=
' → logprob: -12.85076904296875
    9. '               ' → logprob: -12.85076904296875
    10. '                   ' → logprob: -13.22576904296875

Token 1407: ' nc' (ID: 39841)
  Prédit: 'nc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nc' → logprob: -0.0010478160111233592
    2. ' nc' → logprob: -6.876047611236572
    3. '_nc' → logprob: -11.62604808807373
    4. 'n' → logprob: -12.62604808807373
    5. 'mc' → logprob: -13.87604808807373
    6. '   ' → logprob: -14.62604808807373
    7. 'Nc' → logprob: -15.00104808807373
    8. 'new' → logprob: -15.25104808807373
    9. 'c' → logprob: -15.75104808807373
    10. '.nc' → logprob: -15.75104808807373

Token 1408: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.014165629632771015
    2. ' =' → logprob: -4.26416540145874
    3. '=current' → logprob: -13.264165878295898
    4. '=n' → logprob: -15.139165878295898
    5. '=
' → logprob: -17.0141658782959
    6. '=user' → logprob: -17.5141658782959
    7. '=int' → logprob: -17.7641658782959
    8. '=}' → logprob: -18.7641658782959
    9. '=c' → logprob: -19.0141658782959
    10. '=self' → logprob: -19.0141658782959

Token 1409: ' last' (ID: 2174)
  Prédit: 'last'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'last' → logprob: -0.0007106438861228526
    2. ' last' → logprob: -7.250710487365723
    3. '   ' → logprob: -14.750710487365723
    4. '           ' → logprob: -15.750710487365723
    5. '(last' → logprob: -16.62571144104004
    6. '               ' → logprob: -18.25071144104004
    7. '	last' → logprob: -18.87571144104004
    8. '       ' → logprob: -19.12571144104004
    9. '                   ' → logprob: -20.12571144104004
    10. '_last' → logprob: -20.25071144104004

Token 1410: '_pos' (ID: 14692)
  Prédit: '_pos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_pos' → logprob: -0.005601784214377403
    2. 'pos' → logprob: -5.25560188293457
    3. '[' → logprob: -8.13060188293457
    4. '+' → logprob: -11.25560188293457
    5. '1' → logprob: -11.63060188293457
    6. 'Pos' → logprob: -11.63060188293457
    7. 'r' → logprob: -11.88060188293457
    8. '```' → logprob: -11.88060188293457
    9. '(' → logprob: -12.50560188293457
    10. '_r' → logprob: -12.75560188293457

Token 1411: '[' (ID: 58)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.1355976164340973
    2. ' +' → logprob: -2.1355977058410645
    3. ',' → logprob: -5.2605977058410645
    4. '[' → logprob: -6.1355977058410645
    5. '=' → logprob: -7.7605977058410645
    6. '<|end|>' → logprob: -8.260597229003906
    7. '+,' → logprob: -8.510597229003906
    8. ')' → logprob: -9.760597229003906
    9. '+
' → logprob: -9.760597229003906
    10. '+c' → logprob: -10.135597229003906

Token 1412: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: 0.0
    2. '[' → logprob: -16.75
    3. '
' → logprob: -17.0
    4. 'r' → logprob: -17.5
    5. ' ' → logprob: -18.125
    6. '۰' → logprob: -18.375
    7. '1' → logprob: -18.5
    8. '(' → logprob: -19.75
    9. 'n' → logprob: -20.0
    10. '<|end|>' → logprob: -20.125

Token 1413: ']+' (ID: 15344)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.355365514755249
    2. ' +' → logprob: -1.230365514755249
    3. ']+' → logprob: -5.230365753173828
    4. ']' → logprob: -7.605365753173828
    5. '+n' → logprob: -7.730365753173828
    6. ')+' → logprob: -8.105365753173828
    7. '][' → logprob: -9.355365753173828
    8. ',' → logprob: -9.855365753173828
    9. '+r' → logprob: -9.980365753173828
    10. '],' → logprob: -10.730365753173828

Token 1414: 'delta' (ID: 42200)
  Prédit: 'delta'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'delta' → logprob: -8.2994620242971e-06
    2. ' delta' → logprob: -11.875008583068848
    3. '(delta' → logprob: -14.125008583068848
    4. '   ' → logprob: -15.250008583068848
    5. '
' → logprob: -16.37500762939453
    6. 'd' → logprob: -16.62500762939453
    7. '1' → logprob: -17.00000762939453
    8. '0' → logprob: -18.00000762939453
    9. '           ' → logprob: -18.12500762939453
    10. '
' → logprob: -18.25000762939453

Token 1415: '_r' (ID: 3442)
  Prédit: '_r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_r' → logprob: -6.551721889991313e-05
    2. 'r' → logprob: -9.750065803527832
    3. '[' → logprob: -12.125065803527832
    4. '```' → logprob: -14.500065803527832
    5. '_c' → logprob: -14.625065803527832
    6. ',' → logprob: -15.375065803527832
    7. '_' → logprob: -15.875065803527832
    8. '1' → logprob: -16.500064849853516
    9. '   ' → logprob: -16.875064849853516
    10. '
' → logprob: -17.250064849853516

Token 1416: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00029852005536668
    2. ',last' → logprob: -8.375298500061035
    3. ' ,' → logprob: -10.000298500061035
    4. ',n' → logprob: -10.875298500061035
    5. ',next' → logprob: -13.125298500061035
    6. ',current' → logprob: -14.875298500061035
    7. ',
' → logprob: -15.250298500061035
    8. ',new' → logprob: -15.500298500061035
    9. '               ' → logprob: -15.875298500061035
    10. '           ' → logprob: -16.25029945373535

Token 1417: ' last' (ID: 2174)
  Prédit: 'last'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'last' → logprob: -0.0002613358374219388
    2. ' last' → logprob: -8.250261306762695
    3. '	last' → logprob: -18.625261306762695
    4. '   ' → logprob: -19.250261306762695
    5. '           ' → logprob: -19.375261306762695
    6. '(last' → logprob: -20.375261306762695
    7. ' ' → logprob: -20.750261306762695
    8. '               ' → logprob: -20.875261306762695
    9. '       ' → logprob: -21.250261306762695
    10. '  ' → logprob: -21.875261306762695

Token 1418: '_pos' (ID: 14692)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pos' → logprob: -0.6480069160461426
    2. 'last' → logprob: -1.0230069160461426
    3. '1' → logprob: -2.3980069160461426
    4. '_pos' → logprob: -4.398006916046143
    5. 'c' → logprob: -5.273006916046143
    6. '[' → logprob: -5.523006916046143
    7. '_c' → logprob: -6.023006916046143
    8. 'Pos' → logprob: -7.398006916046143
    9. '0' → logprob: -7.898006916046143
    10. '[last' → logprob: -8.273006439208984

Token 1419: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.00043805985478684306
    2. '1' → logprob: -8.25043773651123
    3. '0' → logprob: -9.37543773651123
    4. 'last' → logprob: -9.75043773651123
    5. '[-' → logprob: -10.75043773651123
    6. '[last' → logprob: -11.75043773651123
    7. 'c' → logprob: -13.50043773651123
    8. '_c' → logprob: -14.00043773651123
    9. ' ' → logprob: -14.37543773651123
    10. '(last' → logprob: -15.00043773651123

Token 1420: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0011964209843426943
    2. 'last' → logprob: -6.751196384429932
    3. '[' → logprob: -11.25119686126709
    4. '0' → logprob: -12.12619686126709
    5. '[last' → logprob: -13.25119686126709
    6. ' ' → logprob: -13.37619686126709
    7. '-' → logprob: -13.37619686126709
    8. '   ' → logprob: -14.37619686126709
    9. '(last' → logprob: -14.50119686126709
    10. '[-' → logprob: -15.00119686126709

Token 1421: ']+' (ID: 15344)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0049651204608380795
    2. ' +' → logprob: -5.504965305328369
    3. '+n' → logprob: -8.129964828491211
    4. '+c' → logprob: -8.629964828491211
    5. ',' → logprob: -8.754964828491211
    6. ')+' → logprob: -9.379964828491211
    7. '[' → logprob: -10.254964828491211
    8. ')' → logprob: -10.629964828491211
    9. '+self' → logprob: -10.879964828491211
    10. '+C' → logprob: -11.004964828491211

Token 1422: 'delta' (ID: 42200)
  Prédit: 'delta'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'delta' → logprob: -5.5861724831629544e-05
    2. ' delta' → logprob: -9.875056266784668
    3. 'last' → logprob: -13.250056266784668
    4. '   ' → logprob: -14.125056266784668
    5. '           ' → logprob: -14.375056266784668
    6. '(delta' → logprob: -14.625056266784668
    7. '       ' → logprob: -15.375056266784668
    8. '                   ' → logprob: -15.750056266784668
    9. '               ' → logprob: -15.750056266784668
    10. '     ' → logprob: -16.87505531311035

Token 1423: '_c' (ID: 1303)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.10235287249088287
    2. '_c' → logprob: -2.3523528575897217
    3. '1' → logprob: -6.227353096008301
    4. 'nc' → logprob: -9.1023530960083
    5. ' ' → logprob: -11.3523530960083
    6. '<|end|>' → logprob: -11.7273530960083
    7. 'C' → logprob: -11.9773530960083
    8. 'cn' → logprob: -12.4773530960083
    9. ')' → logprob: -12.4773530960083
    10. '_nc' → logprob: -12.7273530960083

Token 1424: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.00014287306112237275
    2. '<|end|>' → logprob: -9.125143051147461
    3. '           ' → logprob: -11.250143051147461
    4. '                   ' → logprob: -12.750143051147461
    5. ',' → logprob: -12.750143051147461
    6. '			' → logprob: -13.000143051147461
    7. '	           ' → logprob: -13.125143051147461
    8. '		       ' → logprob: -13.250143051147461
    9. '<|end|>' → logprob: -13.625143051147461
    10. 'if' → logprob: -14.000143051147461

Token 1425: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -3.054500666621607e-06
    2. '           ' → logprob: -14.25000286102295
    3. '                   ' → logprob: -14.37500286102295
    4. 'if' → logprob: -14.87500286102295
    5. '			' → logprob: -15.00000286102295
    6. '		       ' → logprob: -15.37500286102295
    7. '	           ' → logprob: -15.50000286102295
    8. '       ' → logprob: -15.62500286102295
    9. '              ' → logprob: -15.87500286102295
    10. '```' → logprob: -16.125003814697266

Token 1426: ' if' (ID: 538)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0011823695385828614
    2. 'if' (adapté à ' if') → logprob: -6.751182556152344
    3. ' if' → logprob: -11.501182556152344
    4. '           ' → logprob: -13.751182556152344
    5. '       ' → logprob: -15.251182556152344
    6. '                   ' → logprob: -15.376182556152344
    7. '```' → logprob: -16.251182556152344
    8. '              ' → logprob: -16.376182556152344
    9. '			' → logprob: -16.501182556152344
    10. '   ' → logprob: -16.626182556152344

Token 1427: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0003047186473850161
    2. ' ' → logprob: -8.12530517578125
    3. '   ' → logprob: -12.87530517578125
    4. 'nr' → logprob: -13.00030517578125
    5. '               ' → logprob: -13.87530517578125
    6. '(' → logprob: -14.12530517578125
    7. '           ' → logprob: -14.37530517578125
    8. '                   ' → logprob: -14.37530517578125
    9. 'self' → logprob: -15.12530517578125
    10. '       ' → logprob: -16.25030517578125

Token 1428: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -3.292907877039397e-06
    2. '(' → logprob: -13.12500286102295
    3. 'nr' → logprob: -14.50000286102295
    4. ' ' → logprob: -15.50000286102295
    5. 'self' → logprob: -16.625003814697266
    6. '               ' → logprob: -17.125003814697266
    7. '   ' → logprob: -17.250003814697266
    8. '           ' → logprob: -17.375003814697266
    9. '(n' → logprob: -17.375003814697266
    10. '                   ' → logprob: -17.750003814697266

Token 1429: ' <=' (ID: 5017)
  Prédit: ' <='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <=' → logprob: -0.38687387108802795
    2. '<=' → logprob: -1.1368738412857056
    3. '<' → logprob: -14.011874198913574
    4. '   ' → logprob: -14.386874198913574
    5. '0' → logprob: -15.511874198913574
    6. '```' → logprob: -15.511874198913574
    7. ')<=' → logprob: -15.636874198913574
    8. ' <' → logprob: -15.761874198913574
    9. ' ' → logprob: -15.761874198913574
    10. '[' → logprob: -16.136873245239258

Token 1430: ' nr' (ID: 24055)
  Prédit: 'nr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nr' → logprob: -3.4121114822482923e-06
    2. ' nr' → logprob: -12.625003814697266
    3. 'nc' → logprob: -17.375003814697266
    4. 'n' → logprob: -18.625003814697266
    5. '_nr' → logprob: -18.875003814697266
    6. '.nr' → logprob: -19.375003814697266
    7. '   ' → logprob: -19.750003814697266
    8. 'nm' → logprob: -20.750003814697266
    9. '
' → logprob: -20.750003814697266
    10. 'nir' → logprob: -20.875003814697266

Token 1431: ' <' (ID: 464)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<' → logprob: -0.008722944185137749
    2. '<n' → logprob: -5.13372278213501
    3. ' <' → logprob: -6.00872278213501
    4. 'and' → logprob: -8.758723258972168
    5. ' and' → logprob: -9.758723258972168
    6. '<len' → logprob: -10.383723258972168
    7. '<num' → logprob: -10.383723258972168
    8. '<size' → logprob: -10.758723258972168
    9. '<N' → logprob: -11.008723258972168
    10. 'nr' → logprob: -11.508723258972168

Token 1432: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -1.3425219549390022e-05
    2. ' self' → logprob: -11.25001335144043
    3. '5' → logprob: -15.12501335144043
    4. 'Board' → logprob: -15.87501335144043
    5. '   ' → logprob: -18.25001335144043
    6. '       ' → logprob: -18.37501335144043
    7. '           ' → logprob: -19.50001335144043
    8. 'Game' → logprob: -19.50001335144043
    9. '(self' → logprob: -20.50001335144043
    10. '=self' → logprob: -20.75001335144043

Token 1433: '.board' (ID: 50264)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -2.081584716506768e-05
    2. ' self' → logprob: -11.000020980834961
    3. 'board' → logprob: -13.250020980834961
    4. 'Board' → logprob: -13.500020980834961
    5. '5' → logprob: -14.500020980834961
    6. '           ' → logprob: -15.875020980834961
    7. '
' → logprob: -16.25002098083496
    8. '=self' → logprob: -17.25002098083496
    9. '(self' → logprob: -17.62502098083496
    10. '.Board' → logprob: -17.87502098083496

Token 1434: '.' (ID: 13)
  Prédit: '.'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.0007200572872534394
    2. 'HEIGHT' → logprob: -7.250720024108887
    3. '   ' → logprob: -11.750720024108887
    4. '       ' → logprob: -14.250720024108887
    5. ' .' → logprob: -14.750720024108887
    6. '           ' → logprob: -15.125720024108887
    7. ',' → logprob: -15.875720024108887
    8. 'self' → logprob: -16.125720977783203
    9. '               ' → logprob: -16.500720977783203
    10. '```' → logprob: -16.750720977783203

Token 1435: 'HEIGHT' (ID: 105934)
  Prédit: 'HEIGHT'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'HEIGHT' → logprob: -0.00043519894825294614
    2. 'Board' → logprob: -7.7504353523254395
    3. ' HEIGHT' → logprob: -13.250434875488281
    4. 'WIDTH' → logprob: -13.500434875488281
    5. 'BOARD' → logprob: -14.125434875488281
    6. 'height' → logprob: -15.250434875488281
    7. '5' → logprob: -15.875434875488281
    8. 'self' → logprob: -16.00043487548828
    9. '   ' → logprob: -16.75043487548828
    10. ' Board' → logprob: -17.12543487548828

Token 1436: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.4742726683616638
    2. 'and' → logprob: -0.9742726683616638
    3. '               ' → logprob: -8.599272727966309
    4. '                   ' → logprob: -12.099272727966309
    5. '                ' → logprob: -12.474272727966309
    6. '                       ' → logprob: -14.599272727966309
    7. '           ' → logprob: -14.974272727966309
    8. '	and' → logprob: -15.349272727966309
    9. '                 ' → logprob: -15.599272727966309
    10. '              ' → logprob: -15.724272727966309

Token 1437: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.016088567674160004
    2. ' ' → logprob: -4.141088485717773
    3. 'nc' → logprob: -10.891088485717773
    4. '   ' → logprob: -12.266088485717773
    5. '               ' → logprob: -12.516088485717773
    6. '           ' → logprob: -12.766088485717773
    7. '                   ' → logprob: -12.766088485717773
    8. '    ' → logprob: -12.766088485717773
    9. '  ' → logprob: -12.766088485717773
    10. ' nc' → logprob: -13.016088485717773

Token 1438: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00019591135787777603
    2. ' ' → logprob: -8.750195503234863
    3. 'nc' → logprob: -10.250195503234863
    4. 'nr' → logprob: -13.875195503234863
    5. '   ' → logprob: -14.875195503234863
    6. '  ' → logprob: -15.625195503234863
    7. ' nc' → logprob: -15.625195503234863
    8. '(' → logprob: -16.62519645690918
    9. '
' → logprob: -16.68769645690918
    10. '    ' → logprob: -16.75019645690918

Token 1439: ' <=' (ID: 5017)
  Prédit: 'nc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nc' → logprob: -0.5830737948417664
    2. '<' → logprob: -2.208073854446411
    3. ' <' → logprob: -2.208073854446411
    4. 'nr' → logprob: -2.333073854446411
    5. '<=' → logprob: -3.333073854446411
    6. '<n' → logprob: -3.333073854446411
    7. ' <=' → logprob: -3.458073854446411
    8. ' nr' → logprob: -5.208073616027832
    9. ' nc' → logprob: -5.208073616027832
    10. ' ' → logprob: -5.833073616027832

Token 1440: ' nc' (ID: 39841)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.5838193893432617
    2. 'nc' → logprob: -0.8338193893432617
    3. 'nr' → logprob: -5.208819389343262
    4. ' self' → logprob: -6.083819389343262
    5. ' nc' → logprob: -9.583819389343262
    6. '0' → logprob: -11.458819389343262
    7. '(self' → logprob: -12.333819389343262
    8. '_nc' → logprob: -12.708819389343262
    9. ' nr' → logprob: -13.083819389343262
    10. 'n' → logprob: -13.083819389343262

Token 1441: ' <' (ID: 464)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<' → logprob: -0.1602349877357483
    2. ' <' → logprob: -1.9102349281311035
    3. '<n' → logprob: -13.035235404968262
    4. '<size' → logprob: -13.160235404968262
    5. 'self' → logprob: -13.660235404968262
    6. '<len' → logprob: -13.785235404968262
    7. '<Self' → logprob: -13.910235404968262
    8. '<int' → logprob: -13.910235404968262
    9. '<class' → logprob: -14.535235404968262
    10. '<num' → logprob: -15.285235404968262

Token 1442: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0004883344518020749
    2. ' self' → logprob: -7.62548828125
    3. '(self' → logprob: -15.50048828125
    4. '=self' → logprob: -17.00048828125
    5. '5' → logprob: -17.25048828125
    6. '0' → logprob: -17.37548828125
    7. '[self' → logprob: -17.37548828125
    8. ' ' → logprob: -18.50048828125
    9. '	self' → logprob: -18.62548828125
    10. 'this' → logprob: -19.00048828125

Token 1443: '.board' (ID: 50264)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.000597116129938513
    2. ' self' → logprob: -7.75059700012207
    3. 'board' → logprob: -8.75059700012207
    4. 'Board' → logprob: -12.62559700012207
    5. '.board' → logprob: -13.00059700012207
    6. 'BOARD' → logprob: -14.25059700012207
    7. '(self' → logprob: -14.75059700012207
    8. '[self' → logprob: -15.25059700012207
    9. ' board' → logprob: -15.25059700012207
    10. '
' → logprob: -15.50059700012207

Token 1444: '.W' (ID: 2342)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.09911611676216125
    2. ' self' → logprob: -3.224116086959839
    3. ' <' → logprob: -4.224116325378418
    4. '<' → logprob: -4.349116325378418
    5. '.board' → logprob: -5.099116325378418
    6. 'WIDTH' → logprob: -5.474116325378418
    7. 'and' → logprob: -5.849116325378418
    8. 'BOARD' → logprob: -5.849116325378418
    9. '.W' → logprob: -5.974116325378418
    10. ' and' → logprob: -6.724116325378418

Token 1445: 'IDTH' (ID: 20688)
  Prédit: 'IDTH'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'IDTH' → logprob: -0.00020067949662916362
    2. 'idth' → logprob: -9.375200271606445
    3. 'WIDTH' → logprob: -9.500200271606445
    4. '.W' → logprob: -11.000200271606445
    5. 'ID' → logprob: -11.750200271606445
    6. 'E' → logprob: -12.500200271606445
    7. 'IDE' → logprob: -13.375200271606445
    8. 'W' → logprob: -13.750200271606445
    9. 'INDOW' → logprob: -13.750200271606445
    10. '   ' → logprob: -13.750200271606445

Token 1446: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.8398712277412415
    2. ' and' → logprob: -1.2148711681365967
    3. ':' → logprob: -1.8398711681365967
    4. '                   ' → logprob: -2.2148711681365967
    5. 'and' → logprob: -6.089871406555176
    6. '               ' → logprob: -7.839871406555176
    7. '                       ' → logprob: -7.964871406555176
    8. '):
' → logprob: -8.464871406555176
    9. '                  ' → logprob: -9.714871406555176
    10. ',' → logprob: -10.089871406555176

Token 1447: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -7.290784560609609e-05
    2. '                       ' → logprob: -10.125072479248047
    3. '               ' → logprob: -10.875072479248047
    4. '                  ' → logprob: -12.125072479248047
    5. '           ' → logprob: -13.250072479248047
    6. '                    ' → logprob: -13.375072479248047
    7. '                    
' → logprob: -13.500072479248047
    8. '                           ' → logprob: -14.125072479248047
    9. '		           ' → logprob: -14.500072479248047
    10. '                ' → logprob: -14.625072479248047

Token 1448: ' dfs' (ID: 51252)
  Prédit: '                       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.7315015196800232
    2. '                   ' → logprob: -1.106501579284668
    3. 'dfs' (adapté à ' dfs') → logprob: -1.731501579284668
    4. 'current' → logprob: -4.856501579284668
    5. ' dfs' → logprob: -5.856501579284668
    6. '               ' → logprob: -8.606501579284668
    7. '                           ' → logprob: -10.106501579284668
    8. '           ' → logprob: -10.231501579284668
    9. '                    ' → logprob: -10.481501579284668
    10. ' current' → logprob: -10.481501579284668

Token 1449: '(current' (ID: 15023)
  Prédit: '(current'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(current' → logprob: -0.0054048653692007065
    2. 'current' → logprob: -5.255404949188232
    3. ' current' → logprob: -8.880404472351074
    4. '                       ' → logprob: -11.005404472351074
    5. '                   ' → logprob: -11.380404472351074
    6. '(' → logprob: -13.505404472351074
    7. '(
' → logprob: -13.755404472351074
    8. ' (' → logprob: -14.380404472351074
    9. '[current' → logprob: -15.380404472351074
    10. '       ' → logprob: -15.630404472351074

Token 1450: '_path' (ID: 5558)
  Prédit: '_path'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_path' → logprob: -7.584239938296378e-06
    2. 'path' → logprob: -11.875007629394531
    3. '[current' → logprob: -15.625007629394531
    4. 'Path' → logprob: -15.750007629394531
    5. '_paths' → logprob: -16.37500762939453
    6. '_PATH' → logprob: -17.12500762939453
    7. '   ' → logprob: -17.25000762939453
    8. ')' → logprob: -18.37500762939453
    9. '[path' → logprob: -18.50000762939453
    10. 'current' → logprob: -18.50000762939453

Token 1451: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.07621593028306961
    2. '+' → logprob: -2.701215982437134
    3. '+[' → logprob: -5.076215744018555
    4. '[:]' → logprob: -13.076215744018555
    5. '                       ' → logprob: -13.201215744018555
    6. '[current' → logprob: -13.701215744018555
    7. '                        ' → logprob: -13.826215744018555
    8. '(current' → logprob: -13.826215744018555
    9. '                           ' → logprob: -13.826215744018555
    10. '                    ' → logprob: -13.951215744018555

Token 1452: ' [(' (ID: 43900)
  Prédit: '[('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[(' → logprob: -4.60414821645827e-06
    2. ' [(' → logprob: -12.500004768371582
    3. '[((' → logprob: -14.000004768371582
    4. '([(' → logprob: -18.750003814697266
    5. '[' → logprob: -20.250003814697266
    6. '[n' → logprob: -21.000003814697266
    7. '[
' → logprob: -21.625003814697266
    8. '((' → logprob: -21.875003814697266
    9. '   ' → logprob: -23.875003814697266
    10. ' ' → logprob: -24.125003814697266

Token 1453: 'nr' (ID: 33357)
  Prédit: 'nr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nr' → logprob: -4.320199877838604e-07
    2. ' nr' → logprob: -15.125
    3. '_nr' → logprob: -17.125
    4. '
' → logprob: -18.5
    5. '.nr' → logprob: -19.0
    6. '   ' → logprob: -19.5
    7. '(n' → logprob: -20.25
    8. 'nc' → logprob: -21.125
    9. 'n' → logprob: -21.125
    10. 'Nr' → logprob: -21.25

Token 1454: ',n' (ID: 18103)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.006205004174262285
    2. ',n' → logprob: -5.131205081939697
    3. ',c' → logprob: -8.381204605102539
    4. ' ,' → logprob: -10.256204605102539
    5. ',
' → logprob: -11.381204605102539
    6. ',num' → logprob: -15.631204605102539
    7. ',new' → logprob: -15.881204605102539
    8. '
' → logprob: -16.50620460510254
    9. '‌,' → logprob: -17.00620460510254
    10. ',np' → logprob: -17.13120460510254

Token 1455: 'c' (ID: 66)
  Prédit: 'c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -4.8232690460281447e-05
    2. 'nc' → logprob: -10.125048637390137
    3. '   ' → logprob: -13.250048637390137
    4. '_nc' → logprob: -13.500048637390137
    5. ' nc' → logprob: -14.000048637390137
    6. '
' → logprob: -14.125048637390137
    7. '1' → logprob: -14.500048637390137
    8. ' c' → logprob: -14.625048637390137
    9. '  ' → logprob: -14.875048637390137
    10. ')' → logprob: -15.000048637390137

Token 1456: ')])

' (ID: 182226)
  Prédit: ')])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')])' → logprob: -0.3144961893558502
    2. '])' → logprob: -1.3144961595535278
    3. ')' → logprob: -7.814496040344238
    4. ')]' → logprob: -7.814496040344238
    5. '                   ' → logprob: -8.814496040344238
    6. '])]' → logprob: -9.564496040344238
    7. '])
' → logprob: -9.689496040344238
    8. ')])
' → logprob: -9.689496040344238
    9. ']))' → logprob: -10.689496040344238
    10. ']])' → logprob: -10.814496040344238

Token 1457: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.001004823949187994
    2. 'return' → logprob: -7.376004695892334
    3. '
' → logprob: -8.251005172729492
    4. 'dfs' → logprob: -9.626005172729492
    5. '```' → logprob: -10.501005172729492
    6. '        
' → logprob: -11.876005172729492
    7. '   ' → logprob: -12.376005172729492
    8. '           ' → logprob: -12.876005172729492
    9. ')' → logprob: -13.126005172729492
    10. '<|end|>' → logprob: -13.251005172729492

Token 1458: ' dfs' (ID: 51252)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0795138031244278
    2. 'dfs' (adapté à ' dfs') → logprob: -2.5795137882232666
    3. '
' → logprob: -7.954514026641846
    4. ' dfs' → logprob: -8.329513549804688
    5. '   ' → logprob: -11.829513549804688
    6. '```' → logprob: -11.954513549804688
    7. 'def' → logprob: -12.329513549804688
    8. 'return' → logprob: -12.579513549804688
    9. '        
' → logprob: -12.829513549804688
    10. '	' → logprob: -12.954513549804688

Token 1459: '([' (ID: 5194)
  Prédit: '(['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '([' → logprob: -0.00042447797022759914
    2. '(start' → logprob: -8.3754243850708
    3. '[start' → logprob: -9.0004243850708
    4. '([(' → logprob: -9.8754243850708
    5. '((' → logprob: -12.1254243850708
    6. '(' → logprob: -12.1254243850708
    7. '[' → logprob: -12.6254243850708
    8. '[(' → logprob: -13.2504243850708
    9. '([]' → logprob: -13.2504243850708
    10. '(([' → logprob: -14.1254243850708

Token 1460: 'start' (ID: 5236)
  Prédit: 'start'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'start' → logprob: -6.2729995988775045e-06
    2. '(start' → logprob: -12.375006675720215
    3. ' start' → logprob: -13.500006675720215
    4. '[start' → logprob: -14.500006675720215
    5. ')' → logprob: -16.6250057220459
    6. '(' → logprob: -17.8750057220459
    7. '   ' → logprob: -18.5000057220459
    8. 'star' → logprob: -18.7500057220459
    9. '
' → logprob: -19.0000057220459
    10. ',start' → logprob: -19.1250057220459

Token 1461: '])
' (ID: 5169)
  Prédit: '])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '])' → logprob: -4.930552313453518e-05
    2. '])
' → logprob: -10.625049591064453
    3. '       ' → logprob: -10.875049591064453
    4. '   ' → logprob: -13.500049591064453
    5. ')' → logprob: -13.750049591064453
    6. ' ])' → logprob: -13.750049591064453
    7. ')])' → logprob: -14.625049591064453
    8. ']))' → logprob: -14.750049591064453
    9. '])]' → logprob: -15.000049591064453
    10. '           ' → logprob: -15.125049591064453

Token 1462: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.017806299030780792
    2. '   ' → logprob: -4.392806529998779
    3. '	' → logprob: -5.892806529998779
    4. '	return' → logprob: -6.142806529998779
    5. '```' → logprob: -9.142806053161621
    6. '	   ' → logprob: -9.392806053161621
    7. 'return' → logprob: -9.892806053161621
    8. '<|end|>' → logprob: -10.142806053161621
    9. ' return' → logprob: -11.267806053161621
    10. '	def' → logprob: -11.392806053161621

Token 1463: ' return' (ID: 622)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0023563832510262728
    2. 'return' (adapté à ' return') → logprob: -6.12735652923584
    3. ' return' → logprob: -8.87735652923584
    4. '   ' → logprob: -11.25235652923584
    5. '
' → logprob: -11.75235652923584
    6. '	return' → logprob: -12.25235652923584
    7. '	' → logprob: -13.00235652923584
    8. '```' → logprob: -13.12735652923584
    9. '           ' → logprob: -14.25235652923584
    10. ')return' → logprob: -15.50235652923584

Token 1464: ' paths' (ID: 23373)
  Prédit: 'paths'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'paths' → logprob: -1.3902033970225602e-05
    2. ' paths' → logprob: -11.250014305114746
    3. '[' → logprob: -14.125014305114746
    4. '(paths' → logprob: -16.37501335144043
    5. 'path' → logprob: -17.62501335144043
    6. '[]' → logprob: -18.12501335144043
    7. '[path' → logprob: -19.00001335144043
    8. ' [' → logprob: -19.12501335144043
    9. '.paths' → logprob: -19.62501335144043
    10. '[
' → logprob: -20.25001335144043

Token 1465: '

' (ID: 279)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.002916618948802352
    2. '
' → logprob: -6.6279168128967285
    3. '<|end|>' → logprob: -7.2529168128967285
    4. '```' → logprob: -7.8779168128967285
    5. 'def' → logprob: -8.00291633605957
    6. '<|end|>' → logprob: -9.12791633605957
    7. '    
' → logprob: -10.62791633605957
    8. ')' → logprob: -12.00291633605957
    9. '>' → logprob: -12.12791633605957
    10. ' def' → logprob: -12.62791633605957

Token 1466: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0003478593716863543
    2. 'def' → logprob: -8.125348091125488
    3. '```' → logprob: -10.125348091125488
    4. '<|end|>' → logprob: -12.125348091125488
    5. '
' → logprob: -13.375348091125488
    6. ' def' → logprob: -13.625348091125488
    7. '<|end|>' → logprob: -13.625348091125488
    8. '    
' → logprob: -14.000348091125488
    9. ' ' → logprob: -14.875348091125488
    10. '  ' → logprob: -15.375348091125488

Token 1467: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.0487346388399601
    2. '   ' → logprob: -3.048734664916992
    3. ' def' → logprob: -8.923734664916992
    4. '```' → logprob: -12.048734664916992
    5. '
' → logprob: -12.173734664916992
    6. '	def' → logprob: -13.048734664916992
    7. ' ' → logprob: -14.923734664916992
    8. '  ' → logprob: -15.173734664916992
    9. '    
' → logprob: -16.173734664916992
    10. 'import' → logprob: -16.673734664916992

Token 1468: ' solve' (ID: 17722)
  Prédit: 'search'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'search' → logprob: -0.061413586139678955
    2. ' search' → logprob: -3.936413526535034
    3. 'find' → logprob: -4.186413764953613
    4. 'best' → logprob: -4.561413764953613
    5. 'plan' → logprob: -4.811413764953613
    6. ' find' → logprob: -5.561413764953613
    7. ' plan' → logprob: -6.936413764953613
    8. ' best' → logprob: -8.061413764953613
    9. 'maximize' → logprob: -8.061413764953613
    10. 'dfs' → logprob: -8.311413764953613

Token 1469: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.0036570802330970764
    2. '(' → logprob: -5.62865686416626
    3. '_(' → logprob: -10.378657341003418
    4. '   ' → logprob: -11.753657341003418
    5. 'self' → logprob: -11.753657341003418
    6. '_' → logprob: -12.128657341003418
    7. '(
' → logprob: -13.378657341003418
    8. ' (' → logprob: -13.628657341003418
    9. '       ' → logprob: -13.753657341003418
    10. '
' → logprob: -15.253657341003418

Token 1470: ')' (ID: 8)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.06542415171861649
    2. '(self' → logprob: -3.6904242038726807
    3. '   ' → logprob: -4.190423965454102
    4. '       ' → logprob: -4.190423965454102
    5. 'self' → logprob: -5.190423965454102
    6. '):
' → logprob: -6.440423965454102
    7. ')' → logprob: -7.940423965454102
    8. '
' → logprob: -8.815423965454102
    9. '):' → logprob: -8.940423965454102
    10. 'def' → logprob: -10.190423965454102

Token 1471: ' ->' (ID: 2747)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.00037466554204002023
    2. '   ' → logprob: -8.500374794006348
    3. '       ' → logprob: -9.000374794006348
    4. '(' → logprob: -10.625374794006348
    5. 'self' → logprob: -10.875374794006348
    6. 'def' → logprob: -12.625374794006348
    7. ' (' → logprob: -14.750374794006348
    8. '(
' → logprob: -15.000374794006348
    9. '```' → logprob: -15.375374794006348
    10. '
' → logprob: -16.25037384033203

Token 1472: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.0002534720697440207
    2. 'None' → logprob: -8.750253677368164
    3. 'Optional' → logprob: -9.750253677368164
    4. '(int' → logprob: -10.750253677368164
    5. ' int' → logprob: -12.000253677368164
    6. '   ' → logprob: -12.500253677368164
    7. 'List' → logprob: -13.125253677368164
    8. 'Tuple' → logprob: -13.250253677368164
    9. '[int' → logprob: -14.125253677368164
    10. '0' → logprob: -15.000253677368164

Token 1473: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.7656945586204529
    2. ':
' → logprob: -1.2656946182250977
    3. '       ' → logprob: -1.3906946182250977
    4. '   ' → logprob: -6.140694618225098
    5. '):
' → logprob: -7.140694618225098
    6. '```' → logprob: -7.765694618225098
    7. '():
' → logprob: -7.765694618225098
    8. '        
' → logprob: -10.015694618225098
    9. ',' → logprob: -10.390694618225098
    10. '():' → logprob: -10.515694618225098

Token 1474: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.01467098481953144
    2. '   ' → logprob: -4.2646708488464355
    3. 'result' → logprob: -9.014671325683594
    4. 'score' → logprob: -9.264671325683594
    5. 'max' → logprob: -9.264671325683594
    6. '```' → logprob: -9.264671325683594
    7. 'def' → logprob: -10.264671325683594
    8. '
' → logprob: -10.889671325683594
    9. 'visited' → logprob: -11.389671325683594
    10. 'self' → logprob: -11.389671325683594

Token 1475: ' initial' (ID: 4871)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.07565850764513016
    2. 'for' → logprob: -3.4506585597991943
    3. '       ' → logprob: -4.450658321380615
    4. 'visited' → logprob: -4.700658321380615
    5. 'best' → logprob: -4.950658321380615
    6. 'all' → logprob: -5.200658321380615
    7. 'from' → logprob: -5.450658321380615
    8. 'def' → logprob: -6.700658321380615
    9. 'positions' → logprob: -6.825658321380615
    10. 'start' → logprob: -7.950658321380615

Token 1476: '_score' (ID: 22555)
  Prédit: '_score'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_score' → logprob: -0.7432926893234253
    2. '_board' → logprob: -1.2432926893234253
    3. '_best' → logprob: -2.118292808532715
    4. '_positions' → logprob: -2.743292808532715
    5. ' =' → logprob: -3.618292808532715
    6. '   ' → logprob: -5.118292808532715
    7. 'score' → logprob: -5.743292808532715
    8. 'board' → logprob: -5.868292808532715
    9. '=' → logprob: -5.868292808532715
    10. '_grid' → logprob: -6.368292808532715

Token 1477: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2519311308860779
    2. '=' → logprob: -1.5019311904907227
    3. '=self' → logprob: -14.251931190490723
    4. ' ' → logprob: -14.251931190490723
    5. '   ' → logprob: -15.251931190490723
    6. '_' → logprob: -16.126930236816406
    7. ',' → logprob: -16.751930236816406
    8. '_=' → logprob: -16.751930236816406
    9. '0' → logprob: -17.126930236816406
    10. '  ' → logprob: -17.251930236816406

Token 1478: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.11357054859399796
    2. '0' → logprob: -2.23857045173645
    3. ' self' → logprob: -7.238570690155029
    4. ' ' → logprob: -10.738570213317871
    5. '       ' → logprob: -11.988570213317871
    6. '   ' → logprob: -14.113570213317871
    7. '	self' → logprob: -15.488570213317871
    8. '(self' → logprob: -15.738570213317871
    9. 'max' → logprob: -16.863571166992188
    10. '  ' → logprob: -16.988571166992188

Token 1479: '.compute' (ID: 60156)
  Prédit: '.board'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.board' → logprob: -0.1003073900938034
    2. '.best' → logprob: -2.9753074645996094
    3. '.total' → logprob: -3.2253074645996094
    4. 'board' → logprob: -6.225307464599609
    5. 'self' → logprob: -6.850307464599609
    6. '.' → logprob: -7.100307464599609
    7. '0' → logprob: -7.725307464599609
    8. '.self' → logprob: -9.22530746459961
    9. 'total' → logprob: -9.47530746459961
    10. '.b' → logprob: -10.10030746459961

Token 1480: '_score' (ID: 22555)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.5749763250350952
    2. 'self' → logprob: -1.1999763250350952
    3. '(' → logprob: -2.8249764442443848
    4. '0' → logprob: -3.1999764442443848
    5. '(self' → logprob: -3.5749764442443848
    6. '()
' → logprob: -5.949976444244385
    7. 'initial' → logprob: -6.824976444244385
    8. '(initial' → logprob: -6.824976444244385
    9. ' self' → logprob: -7.699976444244385
    10. '_initial' → logprob: -7.824976444244385

Token 1481: '_of' (ID: 8023)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0016323324525728822
    2. '()
' → logprob: -6.876632213592529
    3. '()+' → logprob: -8.376632690429688
    4. '       ' → logprob: -9.126632690429688
    5. '(' → logprob: -9.876632690429688
    6. ' ()' → logprob: -10.251632690429688
    7. '())' → logprob: -11.001632690429688
    8. '<|end|>' → logprob: -11.001632690429688
    9. '()[' → logprob: -11.126632690429688
    10. '[]' → logprob: -11.376632690429688

Token 1482: '_no' (ID: 13575)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.08375678211450577
    2. '[]' → logprob: -2.583756685256958
    3. '[]
' → logprob: -6.333756923675537
    4. '(self' → logprob: -6.833756923675537
    5. '([]' → logprob: -6.833756923675537
    6. '([])
' → logprob: -8.333756446838379
    7. '[])' → logprob: -8.708756446838379
    8. ' []' → logprob: -9.458756446838379
    9. '([],' → logprob: -9.458756446838379
    10. ' self' → logprob: -9.833756446838379

Token 1483: '_move' (ID: 39414)
  Prédit: '_moves'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_moves' → logprob: -0.5672215819358826
    2. 'moves' → logprob: -1.0672216415405273
    3. '_move' → logprob: -2.9422216415405273
    4. ' moves' → logprob: -3.9422216415405273
    5. 'move' → logprob: -4.817221641540527
    6. '   ' → logprob: -5.317221641540527
    7. '       ' → logprob: -6.692221641540527
    8. 'op' → logprob: -6.942221641540527
    9. ' move' → logprob: -7.942221641540527
    10. 'm' → logprob: -8.442221641540527

Token 1484: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.12736102938652039
    2. '()
' → logprob: -2.1273610591888428
    3. '       ' → logprob: -7.877360820770264
    4. 'self' → logprob: -11.377361297607422
    5. '_' → logprob: -11.502361297607422
    6. '()

' → logprob: -11.502361297607422
    7. '()
' → logprob: -12.002361297607422
    8. '   ' → logprob: -12.127361297607422
    9. '()`' → logprob: -12.877361297607422
    10. ' ()' → logprob: -13.877361297607422

Token 1485: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.006579304579645395
    2. '()' → logprob: -5.506579399108887
    3. '
' → logprob: -7.131579399108887
    4. '```' → logprob: -7.756579399108887
    5. '()
' → logprob: -8.256579399108887
    6. '   ' → logprob: -8.756579399108887
    7. '        
' → logprob: -8.756579399108887
    8. 'self' → logprob: -9.006579399108887
    9. 'def' → logprob: -9.131579399108887
    10. '#' → logprob: -9.506579399108887

Token 1486: ' self' (ID: 1051)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7135084271430969
    2. 'self' (adapté à ' self') → logprob: -0.7135084271430969
    3. 'if' → logprob: -3.963508367538452
    4. ' self' → logprob: -6.963508605957031
    5. 'result' → logprob: -9.838508605957031
    6. ' if' → logprob: -10.088508605957031
    7. 'max' → logprob: -10.338508605957031
    8. '
' → logprob: -10.713508605957031
    9. 'for' → logprob: -10.713508605957031
    10. 'best' → logprob: -10.713508605957031

Token 1487: '.best' (ID: 95548)
  Prédit: '.best'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.best' → logprob: -3.47626737493556e-05
    2. 'best' → logprob: -10.75003433227539
    3. '.' → logprob: -11.87503433227539
    4. ' .' → logprob: -13.37503433227539
    5. '	best' → logprob: -13.75003433227539
    6. ' best' → logprob: -14.00003433227539
    7. '.b' → logprob: -14.00003433227539
    8. '   ' → logprob: -14.25003433227539
    9. '.current' → logprob: -15.12503433227539
    10. '.
' → logprob: -15.25003433227539

Token 1488: '_score' (ID: 22555)
  Prédit: '_score'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_score' → logprob: -1.4736459888808895e-05
    2. '_' → logprob: -11.875014305114746
    3. '_scores' → logprob: -12.875014305114746
    4. ' _' → logprob: -13.125014305114746
    5. ' =' → logprob: -13.750014305114746
    6. '=' → logprob: -14.250014305114746
    7. '_SCORE' → logprob: -14.750014305114746
    8. 'Score' → logprob: -15.000014305114746
    9. '=_' → logprob: -15.250014305114746
    10. '   ' → logprob: -15.750014305114746

Token 1489: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.02975454181432724
    2. ' =' → logprob: -3.529754638671875
    3. '+=' → logprob: -12.654754638671875
    4. ' +=' → logprob: -14.029754638671875
    5. '   ' → logprob: -17.529754638671875
    6. '.=' → logprob: -18.029754638671875
    7. '=
' → logprob: -18.404754638671875
    8. '>=' → logprob: -18.904754638671875
    9. '==' → logprob: -19.404754638671875
    10. '>' → logprob: -19.529754638671875

Token 1490: ' initial' (ID: 4871)
  Prédit: 'initial'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'initial' → logprob: -0.20703867077827454
    2. '0' → logprob: -1.7070386409759521
    3. ' initial' → logprob: -5.582038879394531
    4. 'max' → logprob: -6.457038879394531
    5. ' ' → logprob: -8.457038879394531
    6. ' max' → logprob: -10.832038879394531
    7. 'self' → logprob: -10.957038879394531
    8. '   ' → logprob: -11.707038879394531
    9. '(initial' → logprob: -12.332038879394531
    10. '	initial' → logprob: -12.457038879394531

Token 1491: '_score' (ID: 22555)
  Prédit: '_score'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_score' → logprob: -7.40998875699006e-05
    2. '_' → logprob: -9.87507438659668
    3. '_move' → logprob: -11.00007438659668
    4. 'Score' → logprob: -13.25007438659668
    5. '_s' → logprob: -14.50007438659668
    6. '_scores' → logprob: -14.87507438659668
    7. '_SCORE' → logprob: -14.87507438659668
    8. 'score' → logprob: -15.12507438659668
    9. 'ized' → logprob: -15.62507438659668
    10. '_
' → logprob: -15.62507438659668

Token 1492: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.2276691496372223
    2. '       ' → logprob: -1.6026691198349
    3. '<|end|>' → logprob: -7.2276692390441895
    4. '        
' → logprob: -7.7276692390441895
    5. ' for' → logprob: -7.8526692390441895
    6. '#' → logprob: -8.352668762207031
    7. '
' → logprob: -9.227668762207031
    8. ',' → logprob: -9.352668762207031
    9. 'for' → logprob: -9.727668762207031
    10. '  
' → logprob: -10.477668762207031

Token 1493: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0013622589176520705
    2. '
' → logprob: -7.501362323760986
    3. 'for' → logprob: -7.751362323760986
    4. ' for' → logprob: -8.251361846923828
    5. '   ' → logprob: -9.501361846923828
    6. '        
' → logprob: -10.501361846923828
    7. '	' → logprob: -12.376361846923828
    8. '```' → logprob: -12.376361846923828
    9. ',' → logprob: -13.126361846923828
    10. '<|end|>' → logprob: -14.001361846923828

Token 1494: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.18814872205257416
    2. 'positions' → logprob: -2.0631487369537354
    3. 'all' → logprob: -3.5631487369537354
    4. 'from' → logprob: -4.563148498535156
    5. 'def' → logprob: -5.813148498535156
    6. '       ' → logprob: -7.188148498535156
    7. 'visited' → logprob: -7.563148498535156
    8. 'queue' → logprob: -7.813148498535156
    9. 'start' → logprob: -7.813148498535156
    10. 'self' → logprob: -8.813148498535156

Token 1495: ' start' (ID: 1604)
  Prédit: 'start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'start' → logprob: -0.09829366207122803
    2. 'r' → logprob: -3.0982937812805176
    3. 'move' → logprob: -3.5982937812805176
    4. 'pos' → logprob: -4.348293781280518
    5. 'max' → logprob: -5.223293781280518
    6. 'moves' → logprob: -6.598293781280518
    7. ' start' → logprob: -7.848293781280518
    8. 'path' → logprob: -8.34829330444336
    9. 'length' → logprob: -8.47329330444336
    10. 'self' → logprob: -8.59829330444336

Token 1496: '_pos' (ID: 14692)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.38932982087135315
    2. 'in' → logprob: -1.1393297910690308
    3. '_pos' → logprob: -6.38932991027832
    4. 'pos' → logprob: -8.01432991027832
    5. ',' → logprob: -8.13932991027832
    6. '   ' → logprob: -10.01432991027832
    7. '_r' → logprob: -10.88932991027832
    8. 'r' → logprob: -11.01432991027832
    9. '    ' → logprob: -11.38932991027832
    10. ')' → logprob: -11.63932991027832

Token 1497: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.014179613441228867
    2. 'in' → logprob: -4.264179706573486
    3. '        ' → logprob: -12.389179229736328
    4. ')' → logprob: -12.639179229736328
    5. ' ' → logprob: -13.139179229736328
    6. ',' → logprob: -13.639179229736328
    7. '       ' → logprob: -13.889179229736328
    8. '    ' → logprob: -14.514179229736328
    9. '_in' → logprob: -14.514179229736328
    10. '           ' → logprob: -14.639179229736328

Token 1498: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.002823062241077423
    2. ' self' → logprob: -5.8778228759765625
    3. 'range' → logprob: -11.377822875976562
    4. '(self' → logprob: -12.252822875976562
    5. '   ' → logprob: -14.627822875976562
    6. ' range' → logprob: -14.627822875976562
    7. '[self' → logprob: -14.627822875976562
    8. '       ' → logprob: -14.752822875976562
    9. '           ' → logprob: -16.002822875976562
    10. '[(' → logprob: -16.377822875976562

Token 1499: '.find' (ID: 4231)
  Prédit: '.find'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.find' → logprob: -0.0014756986638531089
    2. 'find' → logprob: -6.626475811004639
    3. '.board' → logprob: -9.62647533416748
    4. 'self' → logprob: -10.12647533416748
    5. ').' → logprob: -11.00147533416748
    6. '.' → logprob: -11.25147533416748
    7. '.range' → logprob: -12.50147533416748
    8. '.findall' → logprob: -13.37647533416748
    9. '.best' → logprob: -13.62647533416748
    10. ' .' → logprob: -13.62647533416748

Token 1500: '_all' (ID: 13305)
  Prédit: '_all'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_all' → logprob: -0.00011772842844948173
    2. 'all' → logprob: -9.125117301940918
    3. 'All' → logprob: -12.500117301940918
    4. '[(' → logprob: -13.250117301940918
    5. '(self' → logprob: -13.875117301940918
    6. 'self' → logprob: -14.375117301940918
    7. '_positions' → logprob: -15.000117301940918
    8. '()' → logprob: -15.500117301940918
    9. '((' → logprob: -15.625117301940918
    10. '(' → logprob: -15.750117301940918

Token 1501: '_positions' (ID: 93193)
  Prédit: '_positions'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_positions' → logprob: -0.0006457181880250573
    2. 'positions' → logprob: -7.875645637512207
    3. '_' → logprob: -9.125645637512207
    4. '(' → logprob: -9.125645637512207
    5. 'Positions' → logprob: -11.250645637512207
    6. '(_' → logprob: -11.875645637512207
    7. '_pos' → logprob: -11.875645637512207
    8. '(start' → logprob: -12.125645637512207
    9. ' positions' → logprob: -12.125645637512207
    10. '_position' → logprob: -13.375645637512207

Token 1502: '():
' (ID: 8595)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.14488694071769714
    2. ':
' → logprob: -2.0198869705200195
    3. '           ' → logprob: -6.6448869705200195
    4. '       ' → logprob: -7.3948869705200195
    5. ',' → logprob: -9.51988697052002
    6. '):
' → logprob: -9.51988697052002
    7. '):' → logprob: -9.89488697052002
    8. '():
' → logprob: -10.14488697052002
    9. '():' → logprob: -11.14488697052002
    10. '<|end|>' → logprob: -11.76988697052002

Token 1503: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0008924020221456885
    2. ' for' → logprob: -7.375892639160156
    3. 'for' → logprob: -8.875892639160156
    4. '       ' → logprob: -9.375892639160156
    5. '   ' → logprob: -11.625892639160156
    6. ',' → logprob: -11.750892639160156
    7. '	       ' → logprob: -11.750892639160156
    8. '		' → logprob: -11.875892639160156
    9. '               ' → logprob: -13.125892639160156
    10. '	   ' → logprob: -13.125892639160156

Token 1504: ' all' (ID: 722)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.1995328813791275
    2. 'for' → logprob: -2.074532985687256
    3. ' for' → logprob: -3.074532985687256
    4. 'paths' → logprob: -4.824532985687256
    5. '   ' → logprob: -7.574532985687256
    6. ' paths' → logprob: -8.449532508850098
    7. '       ' → logprob: -9.324532508850098
    8. '               ' → logprob: -9.824532508850098
    9. 'max' → logprob: -10.199532508850098
    10. ' ' → logprob: -10.324532508850098

Token 1505: '_paths' (ID: 56992)
  Prédit: '_paths'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_paths' → logprob: -0.001556759118102491
    2. '_' → logprob: -7.876556873321533
    3. '_positions' → logprob: -8.126556396484375
    4. ')' → logprob: -8.626556396484375
    5. '_moves' → logprob: -8.876556396484375
    6. '_path' → logprob: -9.626556396484375
    7. ' =' → logprob: -9.751556396484375
    8. '=[]' → logprob: -9.876556396484375
    9. ')_' → logprob: -9.876556396484375
    10. '_possible' → logprob: -10.001556396484375

Token 1506: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.05748533830046654
    2. '=' → logprob: -2.932485342025757
    3. '=start' → logprob: -6.432485103607178
    4. '(start' → logprob: -7.432485103607178
    5. '[start' → logprob: -8.182485580444336
    6. '=self' → logprob: -10.682485580444336
    7. ')' → logprob: -10.807485580444336
    8. '           ' → logprob: -10.932485580444336
    9. '=[' → logprob: -11.432485580444336
    10. ':' → logprob: -11.557485580444336

Token 1507: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.023265395313501358
    2. ' self' → logprob: -3.7732653617858887
    3. '(self' → logprob: -11.523265838623047
    4. '           ' → logprob: -12.023265838623047
    5. '[self' → logprob: -12.523265838623047
    6. '               ' → logprob: -16.148265838623047
    7. '       ' → logprob: -16.273265838623047
    8. '	self' → logprob: -16.398265838623047
    9. '=self' → logprob: -16.648265838623047
    10. '[' → logprob: -17.148265838623047

Token 1508: '.generate' (ID: 33917)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.9391345381736755
    2. 'generate' → logprob: -1.1891345977783203
    3. '.generate' → logprob: -1.1891345977783203
    4. ' self' → logprob: -9.93913459777832
    5. ' generate' → logprob: -12.18913459777832
    6. '[self' → logprob: -12.56413459777832
    7. '   ' → logprob: -13.18913459777832
    8. '_generate' → logprob: -13.81413459777832
    9. '
' → logprob: -13.93913459777832
    10. '.self' → logprob: -14.31413459777832

Token 1509: '_all' (ID: 13305)
  Prédit: '_all'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_all' → logprob: -0.5598828196525574
    2. '(start' → logprob: -1.0598828792572021
    3. 'all' → logprob: -2.684882879257202
    4. '([' → logprob: -4.934882640838623
    5. '[start' → logprob: -5.059882640838623
    6. 'All' → logprob: -8.684883117675781
    7. '(all' → logprob: -8.934883117675781
    8. '   ' → logprob: -10.309883117675781
    9. 'start' → logprob: -10.309883117675781
    10. '[' → logprob: -10.934883117675781

Token 1510: '_paths' (ID: 56992)
  Prédit: '_all'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_all' → logprob: -0.017175152897834778
    2. 'all' → logprob: -4.267175197601318
    3. '_paths' → logprob: -6.642175197601318
    4. '[start' → logprob: -6.642175197601318
    5. '(start' → logprob: -8.14217472076416
    6. 'start' → logprob: -10.64217472076416
    7. '_positions' → logprob: -11.14217472076416
    8. '([' → logprob: -11.26717472076416
    9. '[' → logprob: -11.39217472076416
    10. '[_' → logprob: -11.64217472076416

Token 1511: '(start' (ID: 20008)
  Prédit: '(start'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(start' → logprob: -2.3199920178740285e-05
    2. 'start' → logprob: -10.750022888183594
    3. '[start' → logprob: -13.875022888183594
    4. '(' → logprob: -14.625022888183594
    5. '           ' → logprob: -16.375022888183594
    6. ',start' → logprob: -16.750022888183594
    7. ' (' → logprob: -17.375022888183594
    8. '   ' → logprob: -17.750022888183594
    9. '       ' → logprob: -17.750022888183594
    10. '(
' → logprob: -18.125022888183594

Token 1512: '_pos' (ID: 14692)
  Prédit: '_pos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_pos' → logprob: -0.026598675176501274
    2. '=start' → logprob: -4.7765984535217285
    3. 'pos' → logprob: -4.9015984535217285
    4. '[start' → logprob: -5.1515984535217285
    5. '=[' → logprob: -6.5265984535217285
    6. '(start' → logprob: -6.6515984535217285
    7. 'start' → logprob: -7.0265984535217285
    8. '=' → logprob: -7.7765984535217285
    9. 'Pos' → logprob: -8.401598930358887
    10. '=(' → logprob: -9.651598930358887

Token 1513: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.009148047305643559
    2. '(start' → logprob: -4.884148120880127
    3. '           ' → logprob: -7.009148120880127
    4. ',start' → logprob: -7.759148120880127
    5. '[start' → logprob: -9.634147644042969
    6. ')' → logprob: -10.384147644042969
    7. '(' → logprob: -10.509147644042969
    8. ' ,' → logprob: -10.759147644042969
    9. 'start' → logprob: -10.884147644042969
    10. '```' → logprob: -11.384147644042969

Token 1514: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.002814982086420059
    2. ' self' → logprob: -5.877814769744873
    3. '           ' → logprob: -12.002815246582031
    4. '               ' → logprob: -13.752815246582031
    5. '2' → logprob: -13.877815246582031
    6. '(self' → logprob: -15.002815246582031
    7. '   ' → logprob: -15.377815246582031
    8. '
' → logprob: -15.377815246582031
    9. '	self' → logprob: -15.377815246582031
    10. '5' → logprob: -15.502815246582031

Token 1515: '.n' (ID: 1835)
  Prédit: '.n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.n' → logprob: -0.0015080781886354089
    2. 'n' → logprob: -6.5015082359313965
    3. 'self' → logprob: -12.501507759094238
    4. '
' → logprob: -13.751507759094238
    5. '_n' → logprob: -15.126507759094238
    6. '.' → logprob: -15.251507759094238
    7. '   ' → logprob: -16.501508712768555
    8. '<n' → logprob: -16.751508712768555
    9. '```' → logprob: -17.001508712768555
    10. '	n' → logprob: -17.126508712768555

Token 1516: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.7314457297325134
    2. ')
' → logprob: -1.2314457893371582
    3. '):
' → logprob: -1.7314457893371582
    4. '           ' → logprob: -3.231445789337158
    5. '):' → logprob: -4.606445789337158
    6. '       ' → logprob: -8.2314453125
    7. ')
' → logprob: -9.9814453125
    8. '               ' → logprob: -10.4814453125
    9. '):
' → logprob: -10.4814453125
    10. ':
' → logprob: -11.9814453125

Token 1517: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.07079609483480453
    2. 'for' → logprob: -3.445796012878418
    3. '       ' → logprob: -3.945796012878418
    4. ' for' → logprob: -4.070796012878418
    5. '               ' → logprob: -10.195796012878418
    6. '```' → logprob: -11.195796012878418
    7. '   ' → logprob: -11.320796012878418
    8. ' ' → logprob: -13.570796012878418
    9. ',' → logprob: -13.695796012878418
    10. '	for' → logprob: -14.195796012878418

Token 1518: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.026806436479091644
    2. '           ' → logprob: -3.776806354522705
    3. ' for' → logprob: -6.026806354522705
    4. '       ' → logprob: -6.776806354522705
    5. '   ' → logprob: -14.026806831359863
    6. '               ' → logprob: -14.901806831359863
    7. '```' → logprob: -15.026806831359863
    8. '	for' → logprob: -17.151805877685547
    9. '``' → logprob: -18.651805877685547
    10. ' ' → logprob: -18.651805877685547

Token 1519: ' path' (ID: 3104)
  Prédit: 'path'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'path' → logprob: -0.06200220435857773
    2. ' path' → logprob: -2.812002182006836
    3. '           ' → logprob: -10.437002182006836
    4. '   ' → logprob: -13.437002182006836
    5. '               ' → logprob: -14.312002182006836
    6. 'move' → logprob: -14.437002182006836
    7. '       ' → logprob: -14.562002182006836
    8. ' ' → logprob: -14.687002182006836
    9. '                   ' → logprob: -15.312002182006836
    10. 'p' → logprob: -15.562002182006836

Token 1520: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.693276584148407
    2. ' in' → logprob: -0.693276584148407
    3. '               ' → logprob: -9.318276405334473
    4. '           ' → logprob: -10.943276405334473
    5. '_in' → logprob: -12.068276405334473
    6. '[in' → logprob: -12.193276405334473
    7. '[' → logprob: -12.693276405334473
    8. ')' → logprob: -13.318276405334473
    9. 'len' → logprob: -14.068276405334473
    10. 'path' → logprob: -14.318276405334473

Token 1521: ' all' (ID: 722)
  Prédit: 'all'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'all' → logprob: -0.00011021859245374799
    2. ' all' → logprob: -9.125110626220703
    3. '[' → logprob: -14.750110626220703
    4. 'self' → logprob: -15.000110626220703
    5. '   ' → logprob: -15.750110626220703
    6. '           ' → logprob: -15.875110626220703
    7. '(all' → logprob: -16.000110626220703
    8. '
' → logprob: -16.875110626220703
    9. '               ' → logprob: -17.000110626220703
    10. '       ' → logprob: -17.625110626220703

Token 1522: '_paths' (ID: 56992)
  Prédit: '_paths'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_paths' → logprob: -0.3075346052646637
    2. 'all' → logprob: -1.9325345754623413
    3. ':
' → logprob: -3.057534694671631
    4. '[' → logprob: -4.057534694671631
    5. ':' → logprob: -4.307534694671631
    6. '           ' → logprob: -4.432534694671631
    7. '               ' → logprob: -5.057534694671631
    8. '):
' → logprob: -5.432534694671631
    9. '[:' → logprob: -5.557534694671631
    10. '[:-' → logprob: -5.807534694671631

Token 1523: ':
' (ID: 734)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0336255244910717
    2. ':' → logprob: -4.283625602722168
    3. ':
' → logprob: -4.408625602722168
    4. '           ' → logprob: -5.283625602722168
    5. ',' → logprob: -6.908625602722168
    6. '):
' → logprob: -7.908625602722168
    7. '                   ' → logprob: -8.908625602722168
    8. '<|end|>' → logprob: -9.158625602722168
    9. '<|end|>' → logprob: -9.408625602722168
    10. '                       ' → logprob: -9.658625602722168

Token 1524: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0002422779070911929
    2. 'score' → logprob: -8.750242233276367
    3. '           ' → logprob: -10.000242233276367
    4. 'if' → logprob: -11.500242233276367
    5. '                   ' → logprob: -11.875242233276367
    6. '```' → logprob: -12.250242233276367
    7. 'g' → logprob: -12.750242233276367
    8. 'result' → logprob: -13.125242233276367
    9. ' if' → logprob: -13.250242233276367
    10. '	           ' → logprob: -13.250242233276367

Token 1525: ' if' (ID: 538)
  Prédit: 'g'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'g' → logprob: -0.2949792146682739
    2. 'score' → logprob: -1.919979214668274
    3. '                   ' → logprob: -2.7949790954589844
    4. 'gain' → logprob: -3.4199790954589844
    5. ' gained' → logprob: -4.919979095458984
    6. 'if' (adapté à ' if') → logprob: -5.669979095458984
    7. '               ' → logprob: -6.544979095458984
    8. ' if' → logprob: -6.794979095458984
    9. ' score' → logprob: -6.919979095458984
    10. ' g' → logprob: -8.044979095458984

Token 1526: ' len' (ID: 4631)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -9.686778503237292e-05
    2. ' len' → logprob: -9.250097274780273
    3. '(len' → logprob: -14.375097274780273
    4. 'path' → logprob: -16.500097274780273
    5. '               ' → logprob: -16.875097274780273
    6. '                   ' → logprob: -17.125097274780273
    7. '
' → logprob: -20.500097274780273
    8. '                 ' → logprob: -20.625097274780273
    9. '	len' → logprob: -20.625097274780273
    10. '                           ' → logprob: -21.000097274780273

Token 1527: '(path' (ID: 10993)
  Prédit: '(path'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(path' → logprob: -0.0007678175461478531
    2. 'path' → logprob: -7.250767707824707
    3. '(' → logprob: -10.375767707824707
    4. ' (' → logprob: -10.750767707824707
    5. ' path' → logprob: -12.250767707824707
    6. '>' → logprob: -16.125768661499023
    7. '```' → logprob: -16.375768661499023
    8. '(
' → logprob: -16.500768661499023
    9. '[path' → logprob: -17.000768661499023
    10. '	path' → logprob: -17.125768661499023

Token 1528: ')' (ID: 8)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.9226759076118469
    2. ' ==' → logprob: -1.4226758480072021
    3. ' >' → logprob: -1.5476758480072021
    4. '==' → logprob: -2.297675848007202
    5. ' <=' → logprob: -4.547676086425781
    6. ' >=' → logprob: -4.672676086425781
    7. '>=' → logprob: -4.797676086425781
    8. '<=' → logprob: -4.922676086425781
    9. ' <' → logprob: -5.422676086425781
    10. ')' → logprob: -5.422676086425781

Token 1529: ' <' (ID: 464)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.29697591066360474
    2. '<' → logprob: -2.67197585105896
    3. ' >' → logprob: -2.79697585105896
    4. '==' → logprob: -3.17197585105896
    5. '>=' → logprob: -3.17197585105896
    6. ' <' → logprob: -4.046976089477539
    7. ' ==' → logprob: -4.171976089477539
    8. ' >=' → logprob: -5.046976089477539
    9. '<=' → logprob: -6.046976089477539
    10. ' <=' → logprob: -7.921976089477539

Token 1530: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -1.7432603272027336e-06
    2. ' ' → logprob: -14.250001907348633
    3. '   ' → logprob: -14.750001907348633
    4. '=' → logprob: -15.000001907348633
    5. '>' → logprob: -16.000001907348633
    6. '1' → logprob: -16.000001907348633
    7. '
' → logprob: -18.312501907348633
    8. '>=' → logprob: -18.437501907348633
    9. '```' → logprob: -18.687501907348633
    10. '۲' → logprob: -18.937501907348633

Token 1531: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -3.173704271830502e-06
    2. ' ' → logprob: -13.50000286102295
    3. '1' → logprob: -14.12500286102295
    4. '   ' → logprob: -15.25000286102295
    5. '>' → logprob: -15.37500286102295
    6. '```' → logprob: -16.312503814697266
    7. '3' → logprob: -16.437503814697266
    8. '=' → logprob: -16.750003814697266
    9. '
' → logprob: -17.062503814697266
    10. '>=' → logprob: -17.250003814697266

Token 1532: ':
' (ID: 734)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.7749361991882324
    2. ':
' → logprob: -1.3999361991882324
    3. ':' → logprob: -1.5249361991882324
    4. ' or' → logprob: -3.1499361991882324
    5. '               ' → logprob: -4.149936199188232
    6. ' and' → logprob: -4.274936199188232
    7. 'and' → logprob: -6.899936199188232
    8. '                       ' → logprob: -7.024936199188232
    9. 'continue' → logprob: -8.52493667602539
    10. ' continue' → logprob: -8.77493667602539

Token 1533: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.0019485102966427803
    2. 'continue' → logprob: -6.501948356628418
    3. ' continue' → logprob: -7.751948356628418
    4. '               ' → logprob: -12.001948356628418
    5. ':
' → logprob: -12.876948356628418
    6. ':' → logprob: -13.126948356628418
    7. '```' → logprob: -13.876948356628418
    8. '                       ' → logprob: -14.001948356628418
    9. '           ' → logprob: -14.001948356628418
    10. ' continues' → logprob: -14.501948356628418

Token 1534: ' #' (ID: 1069)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'continue' → logprob: -0.04016517847776413
    2. '                   ' → logprob: -3.2901651859283447
    3. '                       ' → logprob: -6.290164947509766
    4. ' continue' → logprob: -8.290164947509766
    5. '	continue' → logprob: -11.790164947509766
    6. '               ' → logprob: -12.665164947509766
    7. '_continue' → logprob: -13.040164947509766
    8. '   ' → logprob: -14.790164947509766
    9. 'contin' → logprob: -14.790164947509766
    10. '
' → logprob: -14.790164947509766

Token 1535: ' no' (ID: 860)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'continue' → logprob: -0.00021366903092712164
    2. '                   ' → logprob: -8.500213623046875
    3. ' continue' → logprob: -12.000213623046875
    4. '                       ' → logprob: -12.625213623046875
    5. '               ' → logprob: -15.000213623046875
    6. '	continue' → logprob: -15.500213623046875
    7. '   ' → logprob: -15.500213623046875
    8. 'continu' → logprob: -16.875213623046875
    9. '```' → logprob: -17.500213623046875
    10. '           ' → logprob: -17.750213623046875

Token 1536: ' move' (ID: 5275)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'continue' → logprob: -0.501603901386261
    2. ' continue' → logprob: -1.0016038417816162
    3. '                   ' → logprob: -4.126604080200195
    4. '               ' → logprob: -5.251604080200195
    5. '                       ' → logprob: -6.251604080200195
    6. ' move' → logprob: -6.501604080200195
    7. 'move' → logprob: -7.376604080200195
    8. '           ' → logprob: -8.126604080200195
    9. 't' → logprob: -8.376604080200195
    10. '_continue' → logprob: -8.626604080200195

Token 1537: ' or' (ID: 503)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.0005956856766715646
    2. '               ' → logprob: -8.000596046447754
    3. 'continue' → logprob: -8.500596046447754
    4. '                       ' → logprob: -10.250596046447754
    5. ' continue' → logprob: -11.000596046447754
    6. ':' → logprob: -13.500596046447754
    7. '				' → logprob: -13.875596046447754
    8. ',' → logprob: -13.875596046447754
    9. '           ' → logprob: -14.375596046447754
    10. ':
' → logprob: -14.875596046447754

Token 1538: ' zero' (ID: 12421)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'continue' → logprob: -0.3874625563621521
    2. ' continue' → logprob: -1.1374626159667969
    3. 'pass' → logprob: -7.762462615966797
    4. ' pass' → logprob: -10.387462615966797
    5. ' path' → logprob: -10.512462615966797
    6. 'len' → logprob: -10.637462615966797
    7. 'path' → logprob: -10.637462615966797
    8. ' not' → logprob: -10.762462615966797
    9. 'not' → logprob: -12.012462615966797
    10. '	continue' → logprob: -12.012462615966797

Token 1539: ' move' (ID: 5275)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'continue' → logprob: -0.12964366376399994
    2. ' continue' → logprob: -3.254643678665161
    3. ':' → logprob: -4.254643440246582
    4. '                   ' → logprob: -4.254643440246582
    5. ':
' → logprob: -4.504643440246582
    6. '               ' → logprob: -4.629643440246582
    7. '                       ' → logprob: -5.254643440246582
    8. ':return' → logprob: -5.629643440246582
    9. '	continue' → logprob: -5.879643440246582
    10. '                               ' → logprob: -6.129643440246582

Token 1540: '
' (ID: 198)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.011344417929649353
    2. '               ' → logprob: -5.6363444328308105
    3. 'continue' → logprob: -5.8863444328308105
    4. ':
' → logprob: -6.3863444328308105
    5. '                       ' → logprob: -6.3863444328308105
    6. ':' → logprob: -7.1363444328308105
    7. ' continue' → logprob: -7.3863444328308105
    8. ',' → logprob: -9.386343955993652
    9. '
' → logprob: -10.761343955993652
    10. '                  ' → logprob: -11.511343955993652

Token 1541: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.000940642727073282
    2. '                       ' → logprob: -7.250940799713135
    3. 'continue' → logprob: -8.750940322875977
    4. ':
' → logprob: -10.500940322875977
    5. ':' → logprob: -10.875940322875977
    6. ' continue' → logprob: -11.125940322875977
    7. '               ' → logprob: -11.875940322875977
    8. ',' → logprob: -13.250940322875977
    9. '				' → logprob: -14.500940322875977
    10. '                  ' → logprob: -14.625940322875977

Token 1542: ' #' (ID: 1069)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'continue' → logprob: -0.1560184508562088
    2. '                   ' → logprob: -2.1560184955596924
    3. '                       ' → logprob: -3.9060184955596924
    4. ' continue' → logprob: -4.781018257141113
    5. '	continue' → logprob: -9.281018257141113
    6. '               ' → logprob: -10.781018257141113
    7. '_continue' → logprob: -11.531018257141113
    8. '	                   ' → logprob: -11.906018257141113
    9. '           ' → logprob: -12.031018257141113
    10. '   ' → logprob: -12.281018257141113

Token 1543: ' consider' (ID: 3331)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'continue' → logprob: -0.3182462453842163
    2. '                   ' → logprob: -1.3182462453842163
    3. ' continue' → logprob: -5.568246364593506
    4. '                       ' → logprob: -6.818246364593506
    5. '               ' → logprob: -10.443245887756348
    6. '	continue' → logprob: -10.818245887756348
    7. '           ' → logprob: -12.443245887756348
    8. '   ' → logprob: -12.693245887756348
    9. '				' → logprob: -13.693245887756348
    10. '_continue' → logprob: -13.693245887756348

Token 1544: ' doing' (ID: 5306)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'continue' → logprob: -0.3652689754962921
    2. 'self' → logprob: -1.2402689456939697
    3. 'path' → logprob: -5.240269184112549
    4. '                   ' → logprob: -5.615269184112549
    5. ' continue' → logprob: -5.615269184112549
    6. '               ' → logprob: -6.740269184112549
    7. 'continu' → logprob: -7.365269184112549
    8. ' self' → logprob: -7.490269184112549
    9. '   ' → logprob: -7.865269184112549
    10. 'if' → logprob: -7.865269184112549

Token 1545: ' no' (ID: 860)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'continue' → logprob: -0.354464590549469
    2. 'nothing' → logprob: -1.6044645309448242
    3. 'pass' → logprob: -2.479464530944824
    4. ' nothing' → logprob: -4.979464530944824
    5. ' continue' → logprob: -6.229464530944824
    6. 'self' → logprob: -6.354464530944824
    7. 'move' → logprob: -6.729464530944824
    8. '
' → logprob: -8.479464530944824
    9. 'something' → logprob: -8.604464530944824
    10. 'next' → logprob: -8.729464530944824

Token 1546: ' move' (ID: 5275)
  Prédit: ' move'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' move' → logprob: -0.649779736995697
    2. 'move' → logprob: -0.774779736995697
    3. 'continue' → logprob: -5.274779796600342
    4. '               ' → logprob: -5.524779796600342
    5. 'moves' → logprob: -6.274779796600342
    6. 'nothing' → logprob: -6.399779796600342
    7. ' continue' → logprob: -6.524779796600342
    8. ' moves' → logprob: -7.024779796600342
    9. ' nothing' → logprob: -7.274779796600342
    10. '                   ' → logprob: -8.149779319763184

Token 1547: ' if' (ID: 538)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.17222489416599274
    2. '               ' → logprob: -2.047224998474121
    3. 'continue' → logprob: -3.922224998474121
    4. ' continue' → logprob: -5.047224998474121
    5. ':' → logprob: -6.672224998474121
    6. ',' → logprob: -7.297224998474121
    7. '                       ' → logprob: -8.047224998474121
    8. ':
' → logprob: -8.297224998474121
    9. 'self' → logprob: -9.922224998474121
    10. '           ' → logprob: -10.297224998474121

Token 1548: ' n' (ID: 297)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.5197495222091675
    2. 'path' → logprob: -1.2697495222091675
    3. 'self' → logprob: -2.144749641418457
    4. ' path' → logprob: -5.894749641418457
    5. ' len' → logprob: -6.394749641418457
    6. 'False' → logprob: -7.019749641418457
    7. 'not' → logprob: -7.394749641418457
    8. 'True' → logprob: -7.769749641418457
    9. ' self' → logprob: -7.894749641418457
    10. 'best' → logprob: -8.144749641418457

Token 1549: '=' (ID: 28)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.7140191793441772
    2. '==' → logprob: -1.0890191793441772
    3. ' ==' → logprob: -2.214019298553467
    4. ' >' → logprob: -3.089019298553467
    5. '>=' → logprob: -4.339019298553467
    6. ' >=' → logprob: -5.464019298553467
    7. '<=' → logprob: -7.964019298553467
    8. '=' → logprob: -8.589018821716309
    9. ' <' → logprob: -8.839018821716309
    10. ' <=' → logprob: -8.839018821716309

Token 1550: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00012701898231171072
    2. 'self' → logprob: -9.750126838684082
    3. '=' → logprob: -9.875126838684082
    4. '1' → logprob: -11.750126838684082
    5. ' ' → logprob: -12.125126838684082
    6. '           ' → logprob: -14.250126838684082
    7. '   ' → logprob: -14.750126838684082
    8. '2' → logprob: -14.875126838684082
    9. '                       ' → logprob: -14.875126838684082
    10. '               ' → logprob: -15.250126838684082

Token 1551: ' or' (ID: 503)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.016759198158979416
    2. '               ' → logprob: -4.266759395599365
    3. 'continue' → logprob: -7.016759395599365
    4. '                       ' → logprob: -7.141759395599365
    5. ':' → logprob: -8.016758918762207
    6. ' continue' → logprob: -8.266758918762207
    7. ':
' → logprob: -8.766758918762207
    8. ',' → logprob: -9.141758918762207
    9. ' and' → logprob: -11.766758918762207
    10. '```' → logprob: -11.766758918762207

Token 1552: ' allowed' (ID: 9279)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0739908218383789
    2. 'path' → logprob: -3.198990821838379
    3. 'len' → logprob: -3.698990821838379
    4. 'False' → logprob: -5.823990821838379
    5. 'not' → logprob: -6.698990821838379
    6. 'True' → logprob: -7.073990821838379
    7. ' self' → logprob: -8.823990821838379
    8. '(self' → logprob: -8.948990821838379
    9. '0' → logprob: -9.323990821838379
    10. '#' → logprob: -9.448990821838379

Token 1553: '
' (ID: 198)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.26025259494781494
    2. '               ' → logprob: -1.510252594947815
    3. 'continue' → logprob: -5.260252475738525
    4. ' continue' → logprob: -6.010252475738525
    5. ',' → logprob: -8.260252952575684
    6. '                       ' → logprob: -9.010252952575684
    7. ':' → logprob: -9.760252952575684
    8. ' and' → logprob: -10.135252952575684
    9. '```' → logprob: -10.260252952575684
    10. '           ' → logprob: -10.385252952575684

Token 1554: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.019126253202557564
    2. 'continue' → logprob: -4.0191264152526855
    3. '               ' → logprob: -7.6441264152526855
    4. ' continue' → logprob: -8.144125938415527
    5. '                       ' → logprob: -8.894125938415527
    6. '```' → logprob: -10.269125938415527
    7. ',' → logprob: -11.144125938415527
    8. ':' → logprob: -11.644125938415527
    9. ':
' → logprob: -13.144125938415527
    10. '
' → logprob: -13.394125938415527

Token 1555: ' if' (ID: 538)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'continue' → logprob: -0.5417013764381409
    2. '                   ' → logprob: -1.041701316833496
    3. 'g' → logprob: -3.291701316833496
    4. 'score' → logprob: -4.291701316833496
    5. 'self' → logprob: -5.291701316833496
    6. ' continue' → logprob: -5.541701316833496
    7. '                       ' → logprob: -6.041701316833496
    8. 'if' (adapté à ' if') → logprob: -6.166701316833496
    9. 'result' → logprob: -8.291701316833496
    10. '               ' → logprob: -8.416701316833496

Token 1556: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.057729654014110565
    2. 'len' → logprob: -3.057729721069336
    3. ' self' → logprob: -4.932729721069336
    4. 'path' → logprob: -7.307729721069336
    5. ' len' → logprob: -7.432729721069336
    6. 'not' → logprob: -8.182729721069336
    7. 'True' → logprob: -8.932729721069336
    8. ' path' → logprob: -9.932729721069336
    9. '0' → logprob: -10.557729721069336
    10. '                   ' → logprob: -10.557729721069336

Token 1557: '.n' (ID: 1835)
  Prédit: '.best'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.best' → logprob: -0.04431607201695442
    2. 'best' → logprob: -3.169316053390503
    3. '.n' → logprob: -7.169316291809082
    4. '.board' → logprob: -9.044316291809082
    5. '.is' → logprob: -9.169316291809082
    6. 'len' → logprob: -9.669316291809082
    7. ' best' → logprob: -9.669316291809082
    8. 'n' → logprob: -10.544316291809082
    9. '.len' → logprob: -10.669316291809082
    10. 'board' → logprob: -10.669316291809082

Token 1558: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.34401020407676697
    2. ' ==' → logprob: -1.4690102338790894
    3. '>=' → logprob: -3.3440101146698
    4. '>' → logprob: -3.8440101146698
    5. ' >=' → logprob: -5.844010353088379
    6. ' >' → logprob: -6.719010353088379
    7. '=' → logprob: -10.094010353088379
    8. '<' → logprob: -11.219010353088379
    9. '   ' → logprob: -11.594010353088379
    10. '[' → logprob: -11.844010353088379

Token 1559: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.8624639324116288e-06
    2. ' ' → logprob: -13.500001907348633
    3. '1' → logprob: -15.750001907348633
    4. 'path' → logprob: -16.375001907348633
    5. '=' → logprob: -17.375001907348633
    6. '   ' → logprob: -17.750001907348633
    7. ')' → logprob: -17.875001907348633
    8. '>' → logprob: -18.000001907348633
    9. '<|end|>' → logprob: -18.000001907348633
    10. '
' → logprob: -18.250001907348633

Token 1560: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -4.36574100604048e-06
    2. ' ' → logprob: -12.375004768371582
    3. '   ' → logprob: -17.125003814697266
    4. '1' → logprob: -17.250003814697266
    5. '=' → logprob: -18.250003814697266
    6. '۰' → logprob: -19.375003814697266
    7. '  ' → logprob: -19.500003814697266
    8. '<|end|>' → logprob: -20.000003814697266
    9. '[' → logprob: -20.625003814697266
    10. ')' → logprob: -20.750003814697266

Token 1561: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.6402778625488281
    2. ':
' → logprob: -0.7652778625488281
    3. '                       ' → logprob: -5.140277862548828
    4. ':return' → logprob: -7.015277862548828
    5. '                           ' → logprob: -8.015277862548828
    6. '                   ' → logprob: -8.140277862548828
    7. '):
' → logprob: -9.640277862548828
    8. '               ' → logprob: -10.140277862548828
    9. '                               ' → logprob: -10.265277862548828
    10. ' and' → logprob: -10.265277862548828

Token 1562: '                       ' (ID: 968)
  Prédit: '                       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.001722188200801611
    2. ':' → logprob: -6.87672233581543
    3. ':
' → logprob: -8.00172233581543
    4. '                   ' → logprob: -8.50172233581543
    5. 'continue' → logprob: -10.00172233581543
    6. 'self' → logprob: -10.62672233581543
    7. '                      ' → logprob: -11.25172233581543
    8. ',' → logprob: -11.37672233581543
    9. '                           ' → logprob: -11.62672233581543
    10. 'return' → logprob: -11.62672233581543

Token 1563: ' #' (ID: 1069)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.12898270785808563
    2. 'score' → logprob: -2.3789827823638916
    3. 'g' → logprob: -3.8789827823638916
    4. '                       ' → logprob: -5.8789825439453125
    5. '                   ' → logprob: -6.6289825439453125
    6. 'gain' → logprob: -6.8789825439453125
    7. 'result' → logprob: -7.3789825439453125
    8. '                           ' → logprob: -7.6289825439453125
    9. 'return' → logprob: -7.7539825439453125
    10. ' self' → logprob: -8.003982543945312

Token 1564: ' zero' (ID: 12421)
  Prédit: 'score'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'score' → logprob: -0.7460511326789856
    2. 'self' → logprob: -0.9960511326789856
    3. 'g' → logprob: -2.496051073074341
    4. 'if' → logprob: -3.246051073074341
    5. 'gain' → logprob: -3.621051073074341
    6. '                       ' → logprob: -6.12105131149292
    7. 'result' → logprob: -6.49605131149292
    8. 'move' → logprob: -6.99605131149292
    9. 'continue' → logprob: -7.24605131149292
    10. '                   ' → logprob: -7.37105131149292

Token 1565: ' moves' (ID: 19523)
  Prédit: 'move'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'move' → logprob: -0.9945932626724243
    2. '                   ' → logprob: -1.9945932626724243
    3. ')' → logprob: -2.6195931434631348
    4. 'if' → logprob: -2.7445931434631348
    5. '                       ' → logprob: -2.8695931434631348
    6. 'moves' → logprob: -2.8695931434631348
    7. 'self' → logprob: -3.1195931434631348
    8. 'return' → logprob: -3.1195931434631348
    9. '
' → logprob: -3.4945931434631348
    10. ')
' → logprob: -4.244593143463135

Token 1566: ',' (ID: 11)
  Prédit: ':
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.32915568351745605
    2. '                       ' → logprob: -1.829155683517456
    3. '                   ' → logprob: -2.704155683517456
    4. ':' → logprob: -3.329155683517456
    5. 'return' → logprob: -5.079155921936035
    6. 'self' → logprob: -5.829155921936035
    7. '                           ' → logprob: -5.954155921936035
    8. '               ' → logprob: -6.079155921936035
    9. ':return' → logprob: -7.329155921936035
    10. 'continue' → logprob: -7.454155921936035

Token 1567: ' direct' (ID: 2823)
  Prédit: 'score'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'score' → logprob: -0.488057941198349
    2. 'self' → logprob: -1.3630579710006714
    3. 'g' → logprob: -2.238057851791382
    4. 'gain' → logprob: -4.738058090209961
    5. '                       ' → logprob: -5.363058090209961
    6. 'continue' → logprob: -5.613058090209961
    7. 'if' → logprob: -6.113058090209961
    8. 'result' → logprob: -6.613058090209961
    9. 'best' → logprob: -7.488058090209961
    10. ' gained' → logprob: -7.613058090209961

Token 1568: ' elimination' (ID: 77324)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.11362908035516739
    2. 'self' → logprob: -2.738629102706909
    3. 'g' → logprob: -4.36362886428833
    4. 'score' → logprob: -4.48862886428833
    5. 'yield' → logprob: -4.48862886428833
    6. 'gain' → logprob: -5.86362886428833
    7. '_score' → logprob: -5.98862886428833
    8. ' return' → logprob: -6.86362886428833
    9. 'move' → logprob: -8.863629341125488
    10. 'continue' → logprob: -8.988629341125488

Token 1569: '
' (ID: 198)
  Prédit: '                       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.5122004747390747
    2. '                   ' → logprob: -1.1372004747390747
    3. ':
' → logprob: -3.762200355529785
    4. '               ' → logprob: -3.887200355529785
    5. '():
' → logprob: -4.012200355529785
    6. ':' → logprob: -4.887200355529785
    7. '           ' → logprob: -5.387200355529785
    8. '                           ' → logprob: -6.637200355529785
    9. ',' → logprob: -6.762200355529785
    10. '):
' → logprob: -7.262200355529785

Token 1570: '                       ' (ID: 968)
  Prédit: '                       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.030197156593203545
    2. '                   ' → logprob: -4.4051971435546875
    3. 'self' → logprob: -4.9051971435546875
    4. ':' → logprob: -5.6551971435546875
    5. ':
' → logprob: -5.9051971435546875
    6. 'return' → logprob: -6.1551971435546875
    7. '                           ' → logprob: -7.5301971435546875
    8. ',' → logprob: -8.280197143554688
    9. 'b' → logprob: -8.530197143554688
    10. '           ' → logprob: -8.655197143554688

Token 1571: ' b' (ID: 287)
  Prédit: 'g'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'g' → logprob: -0.7886319160461426
    2. 'self' → logprob: -0.7886319160461426
    3. 'return' → logprob: -3.1636319160461426
    4. 'score' → logprob: -4.038631916046143
    5. '                       ' → logprob: -5.163631916046143
    6. ' self' → logprob: -5.288631916046143
    7. 'result' → logprob: -5.413631916046143
    8. ' gained' → logprob: -5.538631916046143
    9. 'b' (adapté à ' b') → logprob: -6.038631916046143
    10. '                           ' → logprob: -6.663631916046143

Token 1572: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.08906684070825577
    2. '=' → logprob: -2.464066743850708
    3. '           ' → logprob: -10.089066505432129
    4. '               ' → logprob: -10.339066505432129
    5. '=self' → logprob: -11.089066505432129
    6. 'oard' → logprob: -11.339066505432129
    7. '=b' → logprob: -11.714066505432129
    8. '                   ' → logprob: -12.339066505432129
    9. 'b' → logprob: -12.589066505432129
    10. '       ' → logprob: -12.714066505432129

Token 1573: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.000526938121765852
    2. 'deep' → logprob: -8.250527381896973
    3. 'Board' → logprob: -8.500527381896973
    4. ' self' → logprob: -10.000527381896973
    5. '                       ' → logprob: -12.250527381896973
    6. ' deepcopy' → logprob: -12.750527381896973
    7. '                   ' → logprob: -12.875527381896973
    8. 'b' → logprob: -13.125527381896973
    9. '               ' → logprob: -13.375527381896973
    10. 'Deep' → logprob: -14.250527381896973

Token 1574: '.board' (ID: 50264)
  Prédit: '.board'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.board' → logprob: -0.4508099853992462
    2. 'board' → logprob: -1.8258099555969238
    3. 'clone' → logprob: -2.075809955596924
    4. '.clone' → logprob: -2.575809955596924
    5. '       ' → logprob: -9.450810432434082
    6. '           ' → logprob: -9.950810432434082
    7. '.copy' → logprob: -10.700810432434082
    8. '               ' → logprob: -10.825810432434082
    9. '   ' → logprob: -11.450810432434082
    10. '(board' → logprob: -11.700810432434082

Token 1575: '.clone' (ID: 29419)
  Prédit: '.clone'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.clone' → logprob: -0.020194975659251213
    2. '.try' → logprob: -4.395195007324219
    3. '.' → logprob: -5.645195007324219
    4. '                       ' → logprob: -6.270195007324219
    5. '                   ' → logprob: -7.395195007324219
    6. '.deepcopy' → logprob: -7.520195007324219
    7. '               ' → logprob: -8.145195007324219
    8. '                           ' → logprob: -8.770195007324219
    9. '
' → logprob: -9.270195007324219
    10. 'clone' → logprob: -9.395195007324219

Token 1576: '()
' (ID: 1234)
  Prédit: '                       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.004645026754587889
    2. 'b' → logprob: -5.629644870758057
    3. '                   ' → logprob: -8.004645347595215
    4. '               ' → logprob: -8.254645347595215
    5. '           ' → logprob: -8.754645347595215
    6. '
' → logprob: -9.379645347595215
    7. ')' → logprob: -9.754645347595215
    8. ' b' → logprob: -10.879645347595215
    9. '       ' → logprob: -10.879645347595215
    10. '                        
' → logprob: -11.254645347595215

Token 1577: '                       ' (ID: 968)
  Prédit: '                       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.0013052374124526978
    2. 'b' → logprob: -7.001305103302002
    3. '                   ' → logprob: -8.75130558013916
    4. '
' → logprob: -9.50130558013916
    5. ' b' → logprob: -10.12630558013916
    6. '           ' → logprob: -10.12630558013916
    7. '               ' → logprob: -10.25130558013916
    8. '       ' → logprob: -10.37630558013916
    9. '
' → logprob: -12.12630558013916
    10. 'self' → logprob: -13.50130558013916

Token 1578: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' (adapté à ' b') → logprob: -0.10245541483163834
    2. '                       ' → logprob: -2.3524553775787354
    3. ' b' → logprob: -6.2274556159973145
    4. '                   ' → logprob: -9.227455139160156
    5. '               ' → logprob: -9.477455139160156
    6. '           ' → logprob: -10.102455139160156
    7. '```' → logprob: -10.352455139160156
    8. '       ' → logprob: -11.852455139160156
    9. '                           ' → logprob: -11.977455139160156
    10. '
' → logprob: -13.227455139160156

Token 1579: '.do' (ID: 25750)
  Prédit: '.do'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.do' → logprob: -6.587483221665025e-05
    2. '.' → logprob: -11.125065803527832
    3. ').' → logprob: -11.250065803527832
    4. '#do' → logprob: -11.625065803527832
    5. '   ' → logprob: -11.750065803527832
    6. 'do' → logprob: -12.000065803527832
    7. '.d' → logprob: -12.375065803527832
    8. '().' → logprob: -13.000065803527832
    9. '{}.' → logprob: -13.500065803527832
    10. '].' → logprob: -13.500065803527832

Token 1580: '_full' (ID: 36973)
  Prédit: '_full'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_full' → logprob: -5.512236498361744e-07
    2. 'full' → logprob: -15.000000953674316
    3. 'Full' → logprob: -16.5
    4. '```' → logprob: -17.625
    5. '_FULL' → logprob: -17.75
    6. '_final' → logprob: -18.75
    7. '_' → logprob: -19.125
    8. '`' → logprob: -19.25
    9. 'def' → logprob: -19.375
    10. '
' → logprob: -19.5

Token 1581: '_el' (ID: 55168)
  Prédit: '_el'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_el' → logprob: -0.007105701137334108
    2. 'el' → logprob: -5.132105827331543
    3. '_full' → logprob: -6.757105827331543
    4. 'full' → logprob: -11.757105827331543
    5. 'elim' → logprob: -12.632105827331543
    6. '_er' → logprob: -14.132105827331543
    7. '```' → logprob: -14.382105827331543
    8. 'def' → logprob: -15.007105827331543
    9. ' elimination' → logprob: -15.382105827331543
    10. '
' → logprob: -15.507105827331543

Token 1582: 'imination' (ID: 34362)
  Prédit: 'imination'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'imination' → logprob: -0.0005103797884657979
    2. 'im' → logprob: -7.750510215759277
    3. 'imin' → logprob: -10.375510215759277
    4. 'min' → logprob: -11.000510215759277
    5. 'iminate' → logprob: -11.125510215759277
    6. 'imation' → logprob: -12.000510215759277
    7. 'imini' → logprob: -12.250510215759277
    8. '```' → logprob: -13.875510215759277
    9. 'imi' → logprob: -14.000510215759277
    10. '...' → logprob: -14.375510215759277

Token 1583: '_cycle' (ID: 97714)
  Prédit: '_cycle'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_cycle' → logprob: -0.00033665422233752906
    2. 'cycle' → logprob: -8.000336647033691
    3. '()' → logprob: -14.500336647033691
    4. '()
' → logprob: -15.125336647033691
    5. '_' → logprob: -15.375336647033691
    6. ' cycle' → logprob: -16.500337600708008
    7. '_cycles' → logprob: -16.750337600708008
    8. 'Cycle' → logprob: -17.625337600708008
    9. '_chain' → logprob: -18.625337600708008
    10. '       ' → logprob: -18.875337600708008

Token 1584: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.030103925615549088
    2. '()
' → logprob: -3.530103921890259
    3. '                       ' → logprob: -8.03010368347168
    4. '()
' → logprob: -11.53010368347168
    5. '()

' → logprob: -12.15510368347168
    6. '();' → logprob: -12.28010368347168
    7. '()\' → logprob: -12.90510368347168
    8. '           ' → logprob: -13.65510368347168
    9. '()`' → logprob: -13.78010368347168
    10. '(),' → logprob: -14.15510368347168

Token 1585: '                       ' (ID: 968)
  Prédit: '                       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.0017019602237269282
    2. '                   ' → logprob: -6.876701831817627
    3. 'return' → logprob: -8.001702308654785
    4. '               ' → logprob: -8.626702308654785
    5. '           ' → logprob: -9.001702308654785
    6. '```' → logprob: -11.876702308654785
    7. '       ' → logprob: -12.251702308654785
    8. 'b' → logprob: -12.376702308654785
    9. '
' → logprob: -12.501702308654785
    10. 'continue' → logprob: -13.001702308654785

Token 1586: ' if' (ID: 538)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.1343178153038025
    2. '                       ' → logprob: -2.5093178749084473
    3. 'score' → logprob: -3.5093178749084473
    4. 'if' (adapté à ' if') → logprob: -4.759317874908447
    5. 'result' → logprob: -5.884317874908447
    6. 'final' → logprob: -6.634317874908447
    7. 'return' → logprob: -7.009317874908447
    8. 'current' → logprob: -8.134317398071289
    9. 'g' → logprob: -9.009317398071289
    10. '                   ' → logprob: -9.384317398071289

Token 1587: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.0003347506280988455
    2. 'self' → logprob: -8.750334739685059
    3. ' b' → logprob: -8.875334739685059
    4. '   ' → logprob: -11.125334739685059
    5. '       ' → logprob: -12.000334739685059
    6. '(b' → logprob: -12.375334739685059
    7. '           ' → logprob: -12.500334739685059
    8. '0' → logprob: -13.125334739685059
    9. ' self' → logprob: -13.750334739685059
    10. 'True' → logprob: -14.250334739685059

Token 1588: '.total' (ID: 23374)
  Prédit: '.total'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.total' → logprob: -0.0009380202973261476
    2. '.best' → logprob: -7.1259379386901855
    3. 'total' → logprob: -9.625938415527344
    4. '.' → logprob: -9.750938415527344
    5. ').' → logprob: -12.250938415527344
    6. '       ' → logprob: -14.375938415527344
    7. '   ' → logprob: -14.375938415527344
    8. '].' → logprob: -14.625938415527344
    9. '}.' → logprob: -14.750938415527344
    10. '
' → logprob: -14.750938415527344

Token 1589: '_score' (ID: 22555)
  Prédit: '_score'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_score' → logprob: -4.320199877838604e-07
    2. 'score' → logprob: -15.25
    3. '
' → logprob: -17.375
    4. '_scores' → logprob: -17.375
    5. '_SCORE' → logprob: -17.75
    6. '_' → logprob: -17.75
    7. '_code' → logprob: -18.0
    8. '_s' → logprob: -18.125
    9. '```' → logprob: -18.125
    10. ' _' → logprob: -18.875

Token 1590: ' >' (ID: 1424)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.108397476375103
    2. ' >' → logprob: -2.3583974838256836
    3. '>=' → logprob: -5.233397483825684
    4. ' >=' → logprob: -6.108397483825684
    5. ')' → logprob: -8.983397483825684
    6. '           ' → logprob: -9.108397483825684
    7. '>b' → logprob: -9.483397483825684
    8. '   ' → logprob: -9.983397483825684
    9. '()>' → logprob: -9.983397483825684
    10. '          ' → logprob: -10.608397483825684

Token 1591: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.00012403888104017824
    2. ' self' → logprob: -9.000123977661133
    3. '                       ' → logprob: -15.250123977661133
    4. '                               ' → logprob: -16.125123977661133
    5. '                           ' → logprob: -16.500123977661133
    6. '                   ' → logprob: -16.500123977661133
    7. '           ' → logprob: -16.500123977661133
    8. '(self' → logprob: -17.500123977661133
    9. '	self' → logprob: -17.750123977661133
    10. '               ' → logprob: -17.750123977661133

Token 1592: '.best' (ID: 95548)
  Prédit: '.best'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.best' → logprob: -0.31326642632484436
    2. 'best' → logprob: -1.313266396522522
    3. '	best' → logprob: -12.68826675415039
    4. ' best' → logprob: -13.56326675415039
    5. '(best' → logprob: -16.06326675415039
    6. '
' → logprob: -16.43826675415039
    7. '.' → logprob: -16.93826675415039
    8. '_best' → logprob: -17.06326675415039
    9. 'Best' → logprob: -18.31326675415039
    10. '   ' → logprob: -18.31326675415039

Token 1593: '_score' (ID: 22555)
  Prédit: '_score'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_score' → logprob: -8.061054359131958e-06
    2. 'score' → logprob: -12.000007629394531
    3. 'self' → logprob: -14.875007629394531
    4. '   ' → logprob: -14.875007629394531
    5. '_s' → logprob: -14.875007629394531
    6. '_move' → logprob: -15.875007629394531
    7. 'Score' → logprob: -16.00000762939453
    8. '_' → logprob: -16.00000762939453
    9. ')' → logprob: -16.25000762939453
    10. '_scores' → logprob: -16.37500762939453

Token 1594: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.4299505949020386
    2. ':' → logprob: -1.3049505949020386
    3. '                           ' → logprob: -2.554950714111328
    4. '                       ' → logprob: -8.054950714111328
    5. '):
' → logprob: -9.804950714111328
    6. '                               ' → logprob: -9.929950714111328
    7. '           ' → logprob: -10.179950714111328
    8. '                   ' → logprob: -11.054950714111328
    9. 'self' → logprob: -11.179950714111328
    10. ',' → logprob: -11.429950714111328

Token 1595: '                           ' (ID: 1686)
  Prédit: '                           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                           ' → logprob: -0.0009633887093514204
    2. 'self' → logprob: -7.12596321105957
    3. '                       ' → logprob: -8.87596321105957
    4. '                               ' → logprob: -11.37596321105957
    5. ' self' → logprob: -12.75096321105957
    6. '                   ' → logprob: -13.75096321105957
    7. '                          ' → logprob: -13.75096321105957
    8. '           ' → logprob: -13.87596321105957
    9. '                         ' → logprob: -14.62596321105957
    10. '```' → logprob: -14.87596321105957

Token 1596: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.0004092235758434981
    2. '                           ' → logprob: -8.000409126281738
    3. ' self' → logprob: -9.750409126281738
    4. '                               ' → logprob: -11.125409126281738
    5. '                       ' → logprob: -14.875409126281738
    6. '                                   ' → logprob: -16.250410079956055
    7. '                   ' → logprob: -16.750410079956055
    8. '   ' → logprob: -17.125410079956055
    9. '               ' → logprob: -17.250410079956055
    10. '           ' → logprob: -17.375410079956055

Token 1597: '.best' (ID: 95548)
  Prédit: '.best'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.best' → logprob: -0.10021691024303436
    2. 'best' → logprob: -2.350216865539551
    3. '	best' → logprob: -11.72521686553955
    4. ' best' → logprob: -13.35021686553955
    5. '_best' → logprob: -14.60021686553955
    6. '.' → logprob: -17.100217819213867
    7. '
' → logprob: -17.350217819213867
    8. 'Best' → logprob: -17.475217819213867
    9. '(best' → logprob: -17.600217819213867
    10. '-best' → logprob: -17.975217819213867

Token 1598: '_score' (ID: 22555)
  Prédit: '_score'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_score' → logprob: -1.306760805164231e-05
    2. 'score' → logprob: -11.75001335144043
    3. 'best' → logprob: -13.25001335144043
    4. '_s' → logprob: -14.00001335144043
    5. 'Score' → logprob: -14.75001335144043
    6. '_best' → logprob: -14.75001335144043
    7. '_scores' → logprob: -15.00001335144043
    8. '_move' → logprob: -15.25001335144043
    9. '_code' → logprob: -15.50001335144043
    10. 'self' → logprob: -15.50001335144043

Token 1599: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.001502717612311244
    2. ' =' → logprob: -6.501502513885498
    3. '=
' → logprob: -14.751502990722656
    4. '=

' → logprob: -17.376502990722656
    5. '                           ' → logprob: -17.501502990722656
    6. '                               ' → logprob: -18.501502990722656
    7. '=self' → logprob: -18.876502990722656
    8. '.=' → logprob: -19.001502990722656
    9. '                            ' → logprob: -19.126502990722656
    10. '+=' → logprob: -19.126502990722656

Token 1600: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.00861456897109747
    2. ' b' → logprob: -4.758614540100098
    3. '	b' → logprob: -18.258615493774414
    4. '                           ' → logprob: -18.383615493774414
    5. '                       ' → logprob: -18.633615493774414
    6. '                   ' → logprob: -19.258615493774414
    7. '                               ' → logprob: -20.133615493774414
    8. '_b' → logprob: -20.758615493774414
    9. '           ' → logprob: -21.258615493774414
    10. '               ' → logprob: -21.258615493774414

Token 1601: '.total' (ID: 23374)
  Prédit: '.total'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.total' → logprob: -0.009810040704905987
    2. 'total' → logprob: -4.634809970855713
    3. '.' → logprob: -10.134810447692871
    4. '.best' → logprob: -12.259810447692871
    5. '
' → logprob: -12.509810447692871
    6. '	total' → logprob: -13.384810447692871
    7. 'otal' → logprob: -14.009810447692871
    8. '_total' → logprob: -14.009810447692871
    9. ' total' → logprob: -14.259810447692871
    10. '   ' → logprob: -15.259810447692871

Token 1602: '_score' (ID: 22555)
  Prédit: '_score'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_score' → logprob: -5.931863051955588e-05
    2. 'score' → logprob: -9.875059127807617
    3. 'Score' → logprob: -12.500059127807617
    4. '_SCORE' → logprob: -13.250059127807617
    5. '       ' → logprob: -14.250059127807617
    6. '   ' → logprob: -14.750059127807617
    7. '.score' → logprob: -15.375059127807617
    8. '           ' → logprob: -15.750059127807617
    9. '_code' → logprob: -15.750059127807617
    10. 'total' → logprob: -16.125059127807617

Token 1603: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.02608093060553074
    2. '                   ' → logprob: -4.026081085205078
    3. '                       ' → logprob: -5.151081085205078
    4. '           ' → logprob: -6.401081085205078
    5. '                           ' → logprob: -8.901081085205078
    6. 'return' → logprob: -9.151081085205078
    7. '
' → logprob: -9.276081085205078
    8. '```' → logprob: -10.276081085205078
    9. 'continue' → logprob: -10.526081085205078
    10. '       ' → logprob: -10.901081085205078

Token 1604: '                   ' (ID: 699)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.055009786039590836
    2. '                   ' → logprob: -3.1800098419189453
    3. '                       ' → logprob: -4.555009841918945
    4. '           ' → logprob: -7.555009841918945
    5. '                           ' → logprob: -8.305009841918945
    6. 'return' → logprob: -8.555009841918945
    7. '
' → logprob: -8.805009841918945
    8. 'continue' → logprob: -8.805009841918945
    9. '```' → logprob: -9.180009841918945
    10. '       ' → logprob: -10.805009841918945

Token 1605: ' continue' (ID: 4901)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.1924450397491455
    2. 'continue' (adapté à ' continue') → logprob: -2.4424450397491455
    3. '               ' → logprob: -2.5674450397491455
    4. 'else' → logprob: -4.692444801330566
    5. ' continue' → logprob: -6.817444801330566
    6. '                       ' → logprob: -6.942444801330566
    7. '           ' → logprob: -9.942444801330566
    8. ' else' → logprob: -9.942444801330566
    9. '   ' → logprob: -10.817444801330566
    10. '       ' → logprob: -11.817444801330566

Token 1606: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.00019197762594558299
    2. '           ' → logprob: -9.375191688537598
    3. '
' → logprob: -10.125191688537598
    4. '                
' → logprob: -10.375191688537598
    5. '                   ' → logprob: -11.750191688537598
    6. 'for' → logprob: -12.000191688537598
    7. 'r' → logprob: -12.750191688537598
    8. '       ' → logprob: -12.750191688537598
    9. ' for' → logprob: -13.000191688537598
    10. '```' → logprob: -13.500191688537598

Token 1607: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.00031854258850216866
    2. '           ' → logprob: -8.50031852722168
    3. '```' → logprob: -9.62531852722168
    4. '                   ' → logprob: -11.12531852722168
    5. '                
' → logprob: -11.25031852722168
    6. '
' → logprob: -12.00031852722168
    7. '       ' → logprob: -12.00031852722168
    8. '              ' → logprob: -13.37531852722168
    9. 'for' → logprob: -13.50031852722168
    10. '                ' → logprob: -14.37531852722168

Token 1608: ' #' (ID: 1069)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.060290899127721786
    2. 'g' → logprob: -3.185290813446045
    3. 'score' → logprob: -4.310290813446045
    4. 'gain' → logprob: -6.185290813446045
    5. 'b' → logprob: -7.560290813446045
    6. ' gained' → logprob: -7.810290813446045
    7. '                   ' → logprob: -8.310291290283203
    8. '           ' → logprob: -9.060291290283203
    9. 'move' → logprob: -9.435291290283203
    10. ' g' → logprob: -9.685291290283203

Token 1609: ' try' (ID: 2075)
  Prédit: 'g'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'g' → logprob: -0.16890887916088104
    2. 'gain' → logprob: -1.9189088344573975
    3. 'score' → logprob: -4.793909072875977
    4. ' gained' → logprob: -8.918909072875977
    5. 'move' → logprob: -9.043909072875977
    6. '                   ' → logprob: -9.543909072875977
    7. '               ' → logprob: -11.543909072875977
    8. 'earned' → logprob: -11.543909072875977
    9. 'points' → logprob: -12.168909072875977
    10. 'moves' → logprob: -12.418909072875977

Token 1610: ' moving' (ID: 10067)
  Prédit: 'score'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'score' → logprob: -0.4027642011642456
    2. '_move' → logprob: -1.5277642011642456
    3. '                   ' → logprob: -2.527764320373535
    4. ':
' → logprob: -4.652764320373535
    5. 'move' → logprob: -5.027764320373535
    6. '               ' → logprob: -5.777764320373535
    7. 'Move' → logprob: -5.902764320373535
    8. ':' → logprob: -6.027764320373535
    9. 'g' → logprob: -6.152764320373535
    10. 'self' → logprob: -6.902764320373535

Token 1611: ' along' (ID: 4251)
  Prédit: 'score'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'score' → logprob: -0.011473464779555798
    2. '                   ' → logprob: -4.761473655700684
    3. 'b' → logprob: -6.386473655700684
    4. 'r' → logprob: -7.761473655700684
    5. 'g' → logprob: -8.136473655700684
    6. '                       ' → logprob: -8.636473655700684
    7. '
' → logprob: -8.761473655700684
    8. '               ' → logprob: -10.261473655700684
    9. 'gain' → logprob: -11.511473655700684
    10. 'points' → logprob: -11.511473655700684

Token 1612: ' path' (ID: 3104)
  Prédit: 'path'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'path' → logprob: -0.0024802929256111383
    2. ' path' → logprob: -6.002480506896973
    3. '   ' → logprob: -13.002480506896973
    4. '           ' → logprob: -13.877480506896973
    5. '               ' → logprob: -15.127480506896973
    6. 'the' → logprob: -15.252480506896973
    7. '       ' → logprob: -15.502480506896973
    8. '
' → logprob: -15.752480506896973
    9. '[path' → logprob: -15.752480506896973
    10. '                   ' → logprob: -15.877480506896973

Token 1613: '
' (ID: 198)
  Prédit: 'score'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'score' → logprob: -0.2976607382297516
    2. '               ' → logprob: -1.5476607084274292
    3. '                   ' → logprob: -3.5476608276367188
    4. 'b' → logprob: -4.422660827636719
    5. ' score' → logprob: -6.422660827636719
    6. 'result' → logprob: -7.672660827636719
    7. 'scores' → logprob: -7.922660827636719
    8. ',' → logprob: -8.547660827636719
    9. ' gained' → logprob: -8.922660827636719
    10. '                       ' → logprob: -9.047660827636719

Token 1614: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.12571629881858826
    2. 'b' → logprob: -2.375716209411621
    3. '                   ' → logprob: -3.750716209411621
    4. 'score' → logprob: -6.750716209411621
    5. ' b' → logprob: -8.125716209411621
    6. '           ' → logprob: -9.375716209411621
    7. '```' → logprob: -10.000716209411621
    8. 'r' → logprob: -10.125716209411621
    9. '   ' → logprob: -11.250716209411621
    10. ' score' → logprob: -11.500716209411621

Token 1615: ' gained' (ID: 27841)
  Prédit: 'g'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'g' → logprob: -0.4471309781074524
    2. 'score' → logprob: -1.1971309185028076
    3. 'gain' → logprob: -2.9471309185028076
    4. ' gained' → logprob: -5.572131156921387
    5. '               ' → logprob: -7.072131156921387
    6. '                   ' → logprob: -7.197131156921387
    7. 'b' → logprob: -8.197131156921387
    8. ' score' → logprob: -8.947131156921387
    9. 'earned' → logprob: -9.822131156921387
    10. 'result' → logprob: -10.447131156921387

Token 1616: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2524605393409729
    2. '=' → logprob: -1.5024604797363281
    3. '_score' → logprob: -7.627460479736328
    4. 'score' → logprob: -10.627460479736328
    5. '_points' → logprob: -11.252460479736328
    6. '   ' → logprob: -13.377460479736328
    7. '_scores' → logprob: -13.377460479736328
    8. '=g' → logprob: -13.752460479736328
    9. ' ' → logprob: -14.002460479736328
    10. ')' → logprob: -15.252460479736328

Token 1617: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.023246407508850098
    2. ' self' → logprob: -3.7732462882995605
    3. '       ' → logprob: -14.773246765136719
    4. '(self' → logprob: -15.148246765136719
    5. '               ' → logprob: -15.898246765136719
    6. '	self' → logprob: -16.64824676513672
    7. '=self' → logprob: -17.14824676513672
    8. '           ' → logprob: -17.52324676513672
    9. 'b' → logprob: -18.02324676513672
    10. '[self' → logprob: -18.14824676513672

Token 1618: '.board' (ID: 50264)
  Prédit: 'board'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'board' → logprob: -0.5857837796211243
    2. 'try' → logprob: -1.4607837200164795
    3. '.board' → logprob: -1.5857837200164795
    4. '.try' → logprob: -5.085783958435059
    5. 'best' → logprob: -8.960783958435059
    6. '.best' → logprob: -9.210783958435059
    7. ' board' → logprob: -11.085783958435059
    8. ' try' → logprob: -11.585783958435059
    9. 'Try' → logprob: -11.835783958435059
    10. '_try' → logprob: -11.960783958435059

Token 1619: '.try' (ID: 85688)
  Prédit: '.try'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.try' → logprob: -0.07889904081821442
    2. 'try' → logprob: -2.5788991451263428
    3. '.' → logprob: -11.953899383544922
    4. ' try' → logprob: -13.453899383544922
    5. '_try' → logprob: -14.453899383544922
    6. '   ' → logprob: -14.578899383544922
    7. ' .' → logprob: -15.453899383544922
    8. '       ' → logprob: -17.078899383544922
    9. '               ' → logprob: -17.203899383544922
    10. ').' → logprob: -17.203899383544922

Token 1620: '_move' (ID: 39414)
  Prédit: '_move'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_move' → logprob: -6.749814019713085e-06
    2. 'move' → logprob: -12.500006675720215
    3. 'Move' → logprob: -13.125006675720215
    4. '_MOVE' → logprob: -14.250006675720215
    5. '_Move' → logprob: -16.00000762939453
    6. '_path' → logprob: -16.37500762939453
    7. '_moves' → logprob: -17.37500762939453
    8. '```' → logprob: -17.50000762939453
    9. '_' → logprob: -17.75000762939453
    10. '
' → logprob: -17.87500762939453

Token 1621: '_path' (ID: 5558)
  Prédit: '_path'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_path' → logprob: -0.0017233692342415452
    2. 'path' → logprob: -6.376723289489746
    3. '_move' → logprob: -11.251723289489746
    4. '_score' → logprob: -12.626723289489746
    5. 'score' → logprob: -13.126723289489746
    6. '(path' → logprob: -13.876723289489746
    7. ' path' → logprob: -14.001723289489746
    8. '```' → logprob: -15.501723289489746
    9. 'move' → logprob: -15.626723289489746
    10. '
' → logprob: -15.626723289489746

Token 1622: '(path' (ID: 10993)
  Prédit: '(path'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(path' → logprob: -0.0006000961875542998
    2. 'path' → logprob: -7.7505998611450195
    3. ' path' → logprob: -9.12559986114502
    4. ' (' → logprob: -9.87559986114502
    5. '(' → logprob: -11.62559986114502
    6. '[path' → logprob: -16.125600814819336
    7. ',path' → logprob: -17.500600814819336
    8. '"path' → logprob: -18.125600814819336
    9. '   ' → logprob: -18.250600814819336
    10. '	path' → logprob: -18.375600814819336

Token 1623: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.2608058750629425
    2. '               ' → logprob: -1.5108058452606201
    3. '           ' → logprob: -5.385806083679199
    4. ')
' → logprob: -6.635806083679199
    5. '+' → logprob: -7.135806083679199
    6. ' +' → logprob: -7.260806083679199
    7. '                   ' → logprob: -8.3858060836792
    8. '                ' → logprob: -8.3858060836792
    9. ' )' → logprob: -8.5108060836792
    10. '              ' → logprob: -9.0108060836792

Token 1624: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -9.9728669738397e-05
    2. '           ' → logprob: -9.500100135803223
    3. '                   ' → logprob: -11.375100135803223
    4. 'if' → logprob: -12.250100135803223
    5. ' if' → logprob: -12.875100135803223
    6. '```' → logprob: -13.000100135803223
    7. '       ' → logprob: -13.125100135803223
    8. '              ' → logprob: -14.250100135803223
    9. '   ' → logprob: -15.000100135803223
    10. '                               ' → logprob: -15.250100135803223

Token 1625: ' if' (ID: 538)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.4743006229400635
    2. 'if' (adapté à ' if') → logprob: -0.9743006229400635
    3. ' if' → logprob: -8.474300384521484
    4. '                   ' → logprob: -11.474300384521484
    5. '           ' → logprob: -12.474300384521484
    6. '              ' → logprob: -15.724300384521484
    7. '                       ' → logprob: -16.099300384521484
    8. '   ' → logprob: -16.224300384521484
    9. 'If' → logprob: -16.474300384521484
    10. ';if' → logprob: -16.724300384521484

Token 1626: ' gained' (ID: 27841)
  Prédit: 'g'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'g' → logprob: -1.7120533811976202e-05
    2. ' gained' → logprob: -11.000017166137695
    3. '   ' → logprob: -15.625017166137695
    4. 'gain' → logprob: -16.625017166137695
    5. '	g' → logprob: -17.375017166137695
    6. 'got' → logprob: -18.250017166137695
    7. ' g' → logprob: -18.625017166137695
    8. '           ' → logprob: -18.625017166137695
    9. '_g' → logprob: -19.125017166137695
    10. '       ' → logprob: -19.125017166137695

Token 1627: ' >' (ID: 1424)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.048594869673252106
    2. ' >' → logprob: -3.0485949516296387
    3. '   ' → logprob: -12.92359447479248
    4. ')' → logprob: -14.04859447479248
    5. '           ' → logprob: -14.04859447479248
    6. '               ' → logprob: -14.04859447479248
    7. '                   ' → logprob: -14.29859447479248
    8. ' ' → logprob: -14.42359447479248
    9. '  ' → logprob: -14.54859447479248
    10. ')>' → logprob: -14.92359447479248

Token 1628: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0046657994389534
    2. ' self' → logprob: -6.004665851593018
    3. '0' → logprob: -6.129665851593018
    4. '(self' → logprob: -11.87966537475586
    5. '   ' → logprob: -13.62966537475586
    6. '=self' → logprob: -13.75466537475586
    7. ' ' → logprob: -15.00466537475586
    8. '           ' → logprob: -15.00466537475586
    9. '       ' → logprob: -15.50466537475586
    10. '	self' → logprob: -16.00466537475586

Token 1629: '.best' (ID: 95548)
  Prédit: 'best'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'best' → logprob: -0.13058196008205414
    2. '.best' → logprob: -2.380581855773926
    3. 'self' → logprob: -4.255581855773926
    4. '0' → logprob: -4.255581855773926
    5. ' best' → logprob: -6.755581855773926
    6. ' ' → logprob: -8.255581855773926
    7. '	best' → logprob: -10.130581855773926
    8. '_best' → logprob: -10.630581855773926
    9. '   ' → logprob: -11.380581855773926
    10. '(best' → logprob: -11.880581855773926

Token 1630: '_score' (ID: 22555)
  Prédit: '_score'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_score' → logprob: -1.0325924449716695e-05
    2. 'score' → logprob: -12.37501049041748
    3. '
' → logprob: -13.87501049041748
    4. '_' → logprob: -14.00001049041748
    5. '_
' → logprob: -14.37501049041748
    6. '   ' → logprob: -14.50001049041748
    7. '_scores' → logprob: -14.50001049041748
    8. 'self' → logprob: -15.00001049041748
    9. '_SCORE' → logprob: -15.12501049041748
    10. ')' → logprob: -15.12501049041748

Token 1631: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.5362808704376221
    2. ':' → logprob: -1.161280870437622
    3. '                   ' → logprob: -3.036280870437622
    4. '                       ' → logprob: -3.536280870437622
    5. '                           ' → logprob: -4.286280632019043
    6. '               ' → logprob: -4.786280632019043
    7. '           ' → logprob: -6.536280632019043
    8. '                               ' → logprob: -8.036280632019043
    9. '):
' → logprob: -8.411280632019043
    10. '=' → logprob: -9.161280632019043

Token 1632: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.003966078162193298
    2. ' =' → logprob: -6.128965854644775
    3. '                       ' → logprob: -6.753965854644775
    4. '               ' → logprob: -8.003966331481934
    5. 'self' → logprob: -9.253966331481934
    6. ' self' → logprob: -9.503966331481934
    7. '=' → logprob: -9.878966331481934
    8. '                           ' → logprob: -10.878966331481934
    9. ':
' → logprob: -11.003966331481934
    10. '                    ' → logprob: -12.253966331481934

Token 1633: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.41465434432029724
    2. ' self' → logprob: -1.6646543741226196
    3. '                   ' → logprob: -1.9146543741226196
    4. '                       ' → logprob: -5.91465425491333
    5. '                           ' → logprob: -10.539654731750488
    6. '   ' → logprob: -10.664654731750488
    7. '               ' → logprob: -11.164654731750488
    8. '           ' → logprob: -12.539654731750488
    9. '                               ' → logprob: -12.539654731750488
    10. '       ' → logprob: -12.539654731750488

Token 1634: '.best' (ID: 95548)
  Prédit: '.best'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.best' → logprob: -0.000498701527249068
    2. '_best' → logprob: -8.25049877166748
    3. 'best' → logprob: -8.50049877166748
    4. ' best' → logprob: -11.12549877166748
    5. '	best' → logprob: -11.62549877166748
    6. '=' → logprob: -12.37549877166748
    7. ' =' → logprob: -13.00049877166748
    8. '.' → logprob: -13.62549877166748
    9. '                   ' → logprob: -14.37549877166748
    10. '(best' → logprob: -14.62549877166748

Token 1635: '_score' (ID: 22555)
  Prédit: '_score'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_score' → logprob: -1.981667537620524e-06
    2. 'score' → logprob: -13.625001907348633
    3. '_scores' → logprob: -15.375001907348633
    4. 'Score' → logprob: -15.500001907348633
    5. '_code' → logprob: -15.625001907348633
    6. '_SCORE' → logprob: -16.250001907348633
    7. '_s' → logprob: -18.125001907348633
    8. '_move' → logprob: -19.375001907348633
    9. '   ' → logprob: -19.500001907348633
    10. '\' → logprob: -19.625001907348633

Token 1636: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.006719163153320551
    2. ' =' → logprob: -5.00671911239624
    3. '                   ' → logprob: -13.256719589233398
    4. '                       ' → logprob: -13.381719589233398
    5. '                    ' → logprob: -15.131719589233398
    6. '                        ' → logprob: -16.5067195892334
    7. '=
' → logprob: -16.8817195892334
    8. '.=' → logprob: -17.0067195892334
    9. '＝' → logprob: -17.1317195892334
    10. '=

' → logprob: -17.2567195892334

Token 1637: ' gained' (ID: 27841)
  Prédit: 'g'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'g' → logprob: -9.674858301877975e-05
    2. ' gained' → logprob: -9.250096321105957
    3. 'got' → logprob: -15.125096321105957
    4. 'gain' → logprob: -15.250096321105957
    5. '	g' → logprob: -17.250097274780273
    6. ' g' → logprob: -17.750097274780273
    7. '   ' → logprob: -18.750097274780273
    8. 'grown' → logprob: -19.000097274780273
    9. 'gone' → logprob: -19.250097274780273
    10. '_g' → logprob: -19.250097274780273

Token 1638: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.05178194120526314
    2. '
' → logprob: -3.1767818927764893
    3. 'return' → logprob: -4.926782131195068
    4. ' return' → logprob: -8.30178165435791
    5. '               ' → logprob: -8.55178165435791
    6. '           ' → logprob: -8.92678165435791
    7. '        
' → logprob: -9.17678165435791
    8. '<|end|>' → logprob: -9.17678165435791
    9. '+' → logprob: -9.30178165435791
    10. '+
' → logprob: -9.67678165435791

Token 1639: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.07738611102104187
    2. '
' → logprob: -2.7023861408233643
    3. 'return' → logprob: -5.077385902404785
    4. ' return' → logprob: -6.952385902404785
    5. '        
' → logprob: -9.827385902404785
    6. '
' → logprob: -10.327385902404785
    7. '+
' → logprob: -10.702385902404785
    8. '               ' → logprob: -10.827385902404785
    9. '           ' → logprob: -11.077385902404785
    10. '```' → logprob: -11.327385902404785

Token 1640: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.20389489829540253
    2. '       ' → logprob: -1.703894853591919
    3. ' return' → logprob: -6.078895092010498
    4. '   ' → logprob: -8.82889461517334
    5. '	return' → logprob: -10.32889461517334
    6. '```' → logprob: -12.45389461517334
    7. '	' → logprob: -12.95389461517334
    8. '
' → logprob: -14.32889461517334
    9. 'eturn' → logprob: -15.32889461517334
    10. ' ' → logprob: -15.32889461517334

Token 1641: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -1.676292231422849e-05
    2. ' self' → logprob: -11.000017166137695
    3. '       ' → logprob: -18.875017166137695
    4. '
' → logprob: -19.625017166137695
    5. '   ' → logprob: -19.750017166137695
    6. '0' → logprob: -19.750017166137695
    7. '(self' → logprob: -20.875017166137695
    8. 'max' → logprob: -20.875017166137695
    9. '	self' → logprob: -22.500017166137695
    10. '[self' → logprob: -23.250017166137695

Token 1642: '.best' (ID: 95548)
  Prédit: '.best'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.best' → logprob: -5.438573680294212e-06
    2. 'best' → logprob: -12.500005722045898
    3. '.' → logprob: -14.375005722045898
    4. '	best' → logprob: -14.500005722045898
    5. ' best' → logprob: -15.375005722045898
    6. ' .' → logprob: -15.500005722045898
    7. '.b' → logprob: -16.2500057220459
    8. '_best' → logprob: -16.7500057220459
    9. '
' → logprob: -19.0000057220459
    10. '```' → logprob: -19.1250057220459

Token 1643: '_score' (ID: 22555)
  Prédit: '_score'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_score' → logprob: -2.45848218582978e-06
    2. 'Score' → logprob: -13.62500286102295
    3. 'score' → logprob: -14.37500286102295
    4. '_scores' → logprob: -15.00000286102295
    5. '_SCORE' → logprob: -16.125001907348633
    6. '_code' → logprob: -16.500001907348633
    7. '   ' → logprob: -17.625001907348633
    8. '_s' → logprob: -17.875001907348633
    9. '\' → logprob: -18.375001907348633
    10. 's' → logprob: -18.625001907348633

Token 1644: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1645: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0018207201501354575
    2. 'def' → logprob: -6.3768205642700195
    3. '
' → logprob: -9.50182056427002
    4. ' def' → logprob: -10.75182056427002
    5. '+' → logprob: -11.37682056427002
    6. '    
' → logprob: -12.62682056427002
    7. '       ' → logprob: -13.37682056427002
    8. '<|end|>' → logprob: -13.62682056427002
    9. '	def' → logprob: -13.87682056427002
    10. ')' → logprob: -14.50182056427002

Token 1646: ' def' (ID: 1056)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.10058685392141342
    2. 'def' (adapté à ' def') → logprob: -2.3505868911743164
    3. ' def' → logprob: -8.100586891174316
    4. '
' → logprob: -10.225586891174316
    5. '+' → logprob: -10.850586891174316
    6. '	def' → logprob: -11.850586891174316
    7. ')' → logprob: -12.725586891174316
    8. '<|end|>' → logprob: -12.975586891174316
    9. '```' → logprob: -13.350586891174316
    10. ' ' → logprob: -13.350586891174316

Token 1647: ' compute' (ID: 23864)
  Prédit: 'compute'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'compute' → logprob: -9.088346359931165e-07
    2. ' compute' → logprob: -14.625000953674316
    3. 'calculate' → logprob: -16.125
    4. '_compute' → logprob: -16.25
    5. 'computer' → logprob: -16.75
    6. 'get' → logprob: -17.625
    7. 'heur' → logprob: -18.375
    8. 'evaluate' → logprob: -18.625
    9. 'can' → logprob: -19.125
    10. 'find' → logprob: -19.5

Token 1648: '_score' (ID: 22555)
  Prédit: '_score'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_score' → logprob: -6.630610641877865e-06
    2. 'score' → logprob: -12.000006675720215
    3. '_no' → logprob: -15.500006675720215
    4. '_' → logprob: -16.0000057220459
    5. '_initial' → logprob: -17.1250057220459
    6. '_scores' → logprob: -17.2500057220459
    7. '_best' → logprob: -17.5000057220459
    8. '_s' → logprob: -17.5000057220459
    9. '_current' → logprob: -19.0000057220459
    10. '_move' → logprob: -19.1250057220459

Token 1649: '_of' (ID: 8023)
  Prédit: '_of'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_of' → logprob: -7.827200897736475e-05
    2. '(self' → logprob: -10.125078201293945
    3. 'of' → logprob: -11.000078201293945
    4. 'self' → logprob: -11.125078201293945
    5. '   ' → logprob: -12.000078201293945
    6. 's' → logprob: -15.875078201293945
    7. ' of' → logprob: -16.250078201293945
    8. '_self' → logprob: -16.625078201293945
    9. 'def' → logprob: -16.750078201293945
    10. 'Of' → logprob: -17.000078201293945

Token 1650: '_no' (ID: 13575)
  Prédit: 'no'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'no' → logprob: -0.014173032715916634
    2. '_no' → logprob: -4.2641730308532715
    3. 'self' → logprob: -11.76417350769043
    4. ' no' → logprob: -14.26417350769043
    5. '(no' → logprob: -14.88917350769043
    6. 'def' → logprob: -15.13917350769043
    7. '(self' → logprob: -15.88917350769043
    8. 'No' → logprob: -16.13917350769043
    9. '   ' → logprob: -16.88917350769043
    10. '	no' → logprob: -17.13917350769043

Token 1651: '_move' (ID: 39414)
  Prédit: '_move'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_move' → logprob: -5.88418151892256e-05
    2. 'move' → logprob: -9.750059127807617
    3. 'Move' → logprob: -15.625059127807617
    4. '_moves' → logprob: -16.125059127807617
    5. '_MOVE' → logprob: -16.625059127807617
    6. 'def' → logprob: -17.000059127807617
    7. '   ' → logprob: -17.125059127807617
    8. '_change' → logprob: -17.500059127807617
    9. '_Move' → logprob: -18.000059127807617
    10. '_' → logprob: -18.875059127807617

Token 1652: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -4.246537173457909e-06
    2. 'self' → logprob: -12.500003814697266
    3. '(' → logprob: -15.250003814697266
    4. '   ' → logprob: -15.625003814697266
    5. 'def' → logprob: -17.875003814697266
    6. ' (' → logprob: -18.125003814697266
    7. '       ' → logprob: -18.500003814697266
    8. ' self' → logprob: -20.875003814697266
    9. '=self' → logprob: -21.000003814697266
    10. '```' → logprob: -21.000003814697266

Token 1653: ')' (ID: 8)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -6.813969957875088e-05
    2. 'self' → logprob: -9.625067710876465
    3. '   ' → logprob: -13.750067710876465
    4. ')' → logprob: -15.125067710876465
    5. '       ' → logprob: -15.750067710876465
    6. '(' → logprob: -15.875067710876465
    7. ')(' → logprob: -16.12506866455078
    8. 'def' → logprob: -16.50006866455078
    9. ' (' → logprob: -17.37506866455078
    10. '```' → logprob: -17.87506866455078

Token 1654: ' ->' (ID: 2747)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(self' → logprob: -7.660315895918757e-05
    2. '   ' → logprob: -10.125076293945312
    3. '       ' → logprob: -10.625076293945312
    4. 'self' → logprob: -11.625076293945312
    5. '(' → logprob: -13.250076293945312
    6. 'def' → logprob: -13.625076293945312
    7. ' (' → logprob: -16.250076293945312
    8. '(
' → logprob: -17.250076293945312
    9. '```' → logprob: -17.500076293945312
    10. ' self' → logprob: -17.625076293945312

Token 1655: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.004810303915292025
    2. 'self' → logprob: -5.379810333251953
    3. 'def' → logprob: -9.254810333251953
    4. '0' → logprob: -9.629810333251953
    5. '(int' → logprob: -11.129810333251953
    6. 'return' → logprob: -11.754810333251953
    7. ' int' → logprob: -13.254810333251953
    8. '(self' → logprob: -13.379810333251953
    9. '   ' → logprob: -14.004810333251953
    10. '[int' → logprob: -14.254810333251953

Token 1656: ':
' (ID: 734)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.0005381396040320396
    2. '       ' → logprob: -7.750538349151611
    3. '   ' → logprob: -9.750537872314453
    4. 'self' → logprob: -10.125537872314453
    5. '(' → logprob: -12.250537872314453
    6. '(
' → logprob: -12.875537872314453
    7. ':
' → logprob: -14.625537872314453
    8. ' (' → logprob: -15.125537872314453
    9. '(s' → logprob: -15.125537872314453
    10. 'def' → logprob: -15.500537872314453

Token 1657: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0067548020742833614
    2. 'b' → logprob: -5.0067548751831055
    3. '   ' → logprob: -10.256754875183105
    4. 'def' → logprob: -13.006754875183105
    5. '```' → logprob: -13.631754875183105
    6. 'return' → logprob: -14.881754875183105
    7. ' b' → logprob: -14.881754875183105
    8. 'result' → logprob: -17.50675392150879
    9. 'empty' → logprob: -17.88175392150879
    10. 'grid' → logprob: -17.88175392150879

Token 1658: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' (adapté à ' b') → logprob: -7.600714161526412e-05
    2. '       ' → logprob: -9.500076293945312
    3. 'board' → logprob: -14.375076293945312
    4. 'def' → logprob: -14.875076293945312
    5. ' b' → logprob: -15.875076293945312
    6. '```' → logprob: -18.000076293945312
    7. '   ' → logprob: -18.250076293945312
    8. 'return' → logprob: -18.625076293945312
    9. 'temp' → logprob: -19.875076293945312
    10. '	b' → logprob: -20.500076293945312

Token 1659: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.1269678920507431
    2. '=' → logprob: -2.1269679069519043
    3. '       ' → logprob: -11.001967430114746
    4. '=b' → logprob: -11.251967430114746
    5. '=self' → logprob: -12.626967430114746
    6. '   ' → logprob: -12.751967430114746
    7. 'b' → logprob: -12.751967430114746
    8. ' b' → logprob: -15.001967430114746
    9. 'def' → logprob: -15.501967430114746
    10. ' ' → logprob: -15.876967430114746

Token 1660: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0053256661631166935
    2. ' self' → logprob: -5.255325794219971
    3. '       ' → logprob: -10.505325317382812
    4. 'Board' → logprob: -10.755325317382812
    5. ' deepcopy' → logprob: -10.755325317382812
    6. 'b' → logprob: -11.130325317382812
    7. 'deep' → logprob: -12.130325317382812
    8. ' Board' → logprob: -14.380325317382812
    9. 'Deep' → logprob: -14.630325317382812
    10. 'board' → logprob: -14.755325317382812

Token 1661: '.board' (ID: 50264)
  Prédit: '.board'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.board' → logprob: -0.48199009895324707
    2. 'board' → logprob: -0.9819900989532471
    3. 'self' → logprob: -4.856989860534668
    4. 'Board' → logprob: -9.981989860534668
    5. '       ' → logprob: -10.981989860534668
    6. 'clone' → logprob: -11.356989860534668
    7. '.clone' → logprob: -11.481989860534668
    8. 'b' → logprob: -11.981989860534668
    9. ' board' → logprob: -12.606989860534668
    10. '	board' → logprob: -12.731989860534668

Token 1662: '.clone' (ID: 29419)
  Prédit: '.clone'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.clone' → logprob: -0.7114322781562805
    2. ' =' → logprob: -1.2114322185516357
    3. '=' → logprob: -1.8364322185516357
    4. '       ' → logprob: -3.7114322185516357
    5. 'b' → logprob: -3.9614322185516357
    6. '.' → logprob: -5.961432456970215
    7. 'def' → logprob: -6.836432456970215
    8. 'clone' → logprob: -6.961432456970215
    9. '   ' → logprob: -7.086432456970215
    10. '.deepcopy' → logprob: -7.086432456970215

Token 1663: '()
' (ID: 1234)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.01848130114376545
    2. 'b' → logprob: -4.018481254577637
    3. '   ' → logprob: -8.268481254577637
    4. ' b' → logprob: -9.643481254577637
    5. '
' → logprob: -12.143481254577637
    6. '           ' → logprob: -14.018481254577637
    7. '```' → logprob: -14.268481254577637
    8. 'def' → logprob: -14.518481254577637
    9. '#' → logprob: -14.768481254577637
    10. ')' → logprob: -14.893481254577637

Token 1664: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0486784353852272
    2. 'b' → logprob: -3.048678398132324
    3. '   ' → logprob: -9.673678398132324
    4. ' b' → logprob: -10.548678398132324
    5. '```' → logprob: -13.673678398132324
    6. ' ' → logprob: -15.548678398132324
    7. '	b' → logprob: -15.673678398132324
    8. '
' → logprob: -16.17367935180664
    9. '           ' → logprob: -16.29867935180664
    10. '#' → logprob: -16.92367935180664

Token 1665: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' (adapté à ' b') → logprob: -9.088346359931165e-07
    2. '       ' → logprob: -14.000000953674316
    3. ' b' → logprob: -17.5
    4. '   ' → logprob: -18.375
    5. '```' → logprob: -20.75
    6. 'return' → logprob: -21.75
    7. '
' → logprob: -21.875
    8. '#' → logprob: -22.625
    9. '	b' → logprob: -22.75
    10. '           ' → logprob: -23.25

Token 1666: '.do' (ID: 25750)
  Prédit: '.do'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.do' → logprob: -2.2723104848410003e-05
    2. 'do' → logprob: -11.250022888183594
    3. '.' → logprob: -12.875022888183594
    4. '#do' → logprob: -13.000022888183594
    5. '   ' → logprob: -13.625022888183594
    6. ' .' → logprob: -13.875022888183594
    7. '.perform' → logprob: -14.125022888183594
    8. '       ' → logprob: -14.375022888183594
    9. ').' → logprob: -15.250022888183594
    10. '().' → logprob: -15.375022888183594

Token 1667: '_full' (ID: 36973)
  Prédit: '_full'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_full' → logprob: -2.935296834039036e-06
    2. 'full' → logprob: -13.00000286102295
    3. '_' → logprob: -15.62500286102295
    4. 'Full' → logprob: -15.87500286102295
    5. 'do' → logprob: -16.125003814697266
    6. 'f' → logprob: -16.750003814697266
    7. '__' → logprob: -17.000003814697266
    8. 'b' → logprob: -17.125003814697266
    9. 'def' → logprob: -17.625003814697266
    10. '```' → logprob: -17.875003814697266

Token 1668: '_el' (ID: 55168)
  Prédit: '_full'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_full' → logprob: -6.869017852295656e-06
    2. 'full' → logprob: -12.000006675720215
    3. '_el' → logprob: -14.625006675720215
    4. 'el' → logprob: -16.25000762939453
    5. 'Full' → logprob: -16.37500762939453
    6. ' full' → logprob: -18.12500762939453
    7. '_FULL' → logprob: -19.00000762939453
    8. '_' → logprob: -19.87500762939453
    9. 'def' → logprob: -20.12500762939453
    10. '```' → logprob: -20.75000762939453

Token 1669: 'imination' (ID: 34362)
  Prédit: 'imination'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'imination' → logprob: -0.00018852073117159307
    2. 'im' → logprob: -9.125188827514648
    3. 'imation' → logprob: -10.375188827514648
    4. 'min' → logprob: -10.875188827514648
    5. 'iminate' → logprob: -11.000188827514648
    6. 'ination' → logprob: -12.500188827514648
    7. 'imin' → logprob: -13.000188827514648
    8. 'imini' → logprob: -13.375188827514648
    9. '   ' → logprob: -14.000188827514648
    10. '
' → logprob: -14.500188827514648

Token 1670: '_cycle' (ID: 97714)
  Prédit: '_cycle'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_cycle' → logprob: -1.8550976164988242e-05
    2. 'cycle' → logprob: -11.125018119812012
    3. '_' → logprob: -13.125018119812012
    4. '()' → logprob: -14.250018119812012
    5. '_cycles' → logprob: -14.625018119812012
    6. '       ' → logprob: -15.500018119812012
    7. '()
' → logprob: -15.750018119812012
    8. 'Cycle' → logprob: -16.500019073486328
    9. '_loop' → logprob: -16.625019073486328
    10. '_chain' → logprob: -17.000019073486328

Token 1671: '()
' (ID: 1234)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.031978752464056015
    2. 'return' → logprob: -4.031978607177734
    3. '()
' → logprob: -4.781978607177734
    4. '
' → logprob: -5.906978607177734
    5. '()' → logprob: -6.156978607177734
    6. ' return' → logprob: -7.906978607177734
    7. '   ' → logprob: -9.281978607177734
    8. '(' → logprob: -11.156978607177734
    9. '#' → logprob: -11.906978607177734
    10. ',' → logprob: -12.281978607177734

Token 1672: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.018490076065063477
    2. 'return' → logprob: -4.018489837646484
    3. '   ' → logprob: -8.143489837646484
    4. ' return' → logprob: -10.018489837646484
    5. 'b' → logprob: -12.643489837646484
    6. '
' → logprob: -14.268489837646484
    7. '	return' → logprob: -14.518489837646484
    8. '{return' → logprob: -16.143489837646484
    9. '```' → logprob: -16.268489837646484
    10. '           ' → logprob: -16.518489837646484

Token 1673: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -1.1472419600977446e-06
    2. '       ' → logprob: -14.625000953674316
    3. 'b' → logprob: -14.750000953674316
    4. ' return' → logprob: -16.250001907348633
    5. '
' → logprob: -17.375001907348633
    6. 'self' → logprob: -18.875001907348633
    7. '   ' → logprob: -19.500001907348633
    8. 'result' → logprob: -19.750001907348633
    9. '        
' → logprob: -20.375001907348633
    10. '	return' → logprob: -20.750001907348633

Token 1674: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -1.676292231422849e-05
    2. ' b' → logprob: -11.000017166137695
    3. '	b' → logprob: -23.000017166137695
    4. '   ' → logprob: -23.125017166137695
    5. '0' → logprob: -24.750017166137695
    6. '(b' → logprob: -24.875017166137695
    7. '
' → logprob: -25.375017166137695
    8. ')b' → logprob: -26.000017166137695
    9. '       ' → logprob: -26.375017166137695
    10. '\b' → logprob: -27.000017166137695

Token 1675: '.total' (ID: 23374)
  Prédit: '.total'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.total' → logprob: -1.2664456789934775e-06
    2. '.' → logprob: -14.125000953674316
    3. 'total' → logprob: -15.750000953674316
    4. '.best' → logprob: -16.375001907348633
    5. '.t' → logprob: -16.500001907348633
    6. '.b' → logprob: -16.875001907348633
    7. '.current' → logprob: -17.750001907348633
    8. '.Total' → logprob: -18.000001907348633
    9. ' .' → logprob: -18.375001907348633
    10. '	total' → logprob: -18.500001907348633

Token 1676: '_score' (ID: 22555)
  Prédit: '_score'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_score' → logprob: -2.176947600673884e-05
    2. 'score' → logprob: -10.750021934509277
    3. '   ' → logprob: -16.87502098083496
    4. '_SCORE' → logprob: -16.87502098083496
    5. 'b' → logprob: -17.25002098083496
    6. '.score' → logprob: -17.37502098083496
    7. 'Score' → logprob: -17.75002098083496
    8. '_code' → logprob: -18.25002098083496
    9. '	score' → logprob: -18.37502098083496
    10. '       ' → logprob: -18.37502098083496

Token 1677: '


' (ID: 2499)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1678: 'def' (ID: 1314)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1679: ' parse' (ID: 8420)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.14947214722633362
    2. ' test' → logprob: -3.024472236633301
    3. ' run' → logprob: -3.274472236633301
    4. ' example' → logprob: -3.774472236633301
    5. 'main' → logprob: -4.024472236633301
    6. 'example' → logprob: -4.899472236633301
    7. 'test' → logprob: -6.399472236633301
    8. 'run' → logprob: -6.774472236633301
    9. ' play' → logprob: -8.1494722366333
    10. ' solve' → logprob: -8.3994722366333

Token 1680: '_input' (ID: 12507)
  Prédit: '_input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_input' → logprob: -0.9925446510314941
    2. '(input' → logprob: -1.1175446510314941
    3. 'def' → logprob: -2.367544651031494
    4. 'input' → logprob: -2.492544651031494
    5. '(data' → logprob: -3.367544651031494
    6. '(lines' → logprob: -4.117544651031494
    7. '_line' → logprob: -4.242544651031494
    8. '_code' → logprob: -4.867544651031494
    9. '_' → logprob: -4.992544651031494
    10. 'data' → logprob: -5.617544651031494

Token 1681: '()' (ID: 416)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.07903420925140381
    2. '():
' → logprob: -2.5790343284606934
    3. '()' → logprob: -9.579033851623535
    4. '(input' → logprob: -10.829033851623535
    5. '(lines' → logprob: -10.954033851623535
    6. ' ():' → logprob: -11.079033851623535
    7. '(line' → logprob: -11.204033851623535
    8. '():

' → logprob: -12.829033851623535
    9. '():
' → logprob: -13.579033851623535
    10. '_line' → logprob: -13.954033851623535

Token 1682: ' ->' (ID: 2747)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '():' → logprob: -0.5135048031806946
    2. '():
' → logprob: -1.0135047435760498
    3. '()' → logprob: -3.26350474357605
    4. '()->' → logprob: -7.888504981994629
    5. '(lines' → logprob: -10.888504981994629
    6. '(input' → logprob: -12.888504981994629
    7. '():
' → logprob: -13.013504981994629
    8. ' ():' → logprob: -13.638504981994629
    9. '():

' → logprob: -13.638504981994629
    10. '->' → logprob: -14.263504981994629

Token 1683: ' List' (ID: 2655)
  Prédit: 'Tuple'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Tuple' → logprob: -0.011878556571900845
    2. 'List' → logprob: -4.761878490447998
    3. 'Board' → logprob: -6.011878490447998
    4. ' Tuple' → logprob: -8.261878967285156
    5. 'tuple' → logprob: -8.261878967285156
    6. 'None' → logprob: -8.511878967285156
    7. 'int' → logprob: -10.261878967285156
    8. 'Dict' → logprob: -10.261878967285156
    9. ''' → logprob: -11.761878967285156
    10. '(Board' → logprob: -12.386878967285156

Token 1684: '[' (ID: 58)
  Prédit: '[List'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[List' → logprob: -0.050467103719711304
    2. '[str' → logprob: -3.050467014312744
    3. '[int' → logprob: -6.300467014312744
    4. '[' → logprob: -10.300467491149902
    5. 'str' → logprob: -12.175467491149902
    6. 'List' → logprob: -13.175467491149902
    7. '[
' → logprob: -14.425467491149902
    8. 'int' → logprob: -15.300467491149902
    9. '```' → logprob: -15.300467491149902
    10. '[]' → logprob: -15.425467491149902

Token 1685: 'Tuple' (ID: 40048)
  Prédit: 'List'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'List' → logprob: -0.0006567967939190567
    2. 'int' → logprob: -7.500656604766846
    3. 'Tuple' → logprob: -9.500657081604004
    4. '[List' → logprob: -11.375657081604004
    5. 'str' → logprob: -11.500657081604004
    6. 'list' → logprob: -12.000657081604004
    7. ' List' → logprob: -14.000657081604004
    8. '<List' → logprob: -16.750656127929688
    9. '[int' → logprob: -16.750656127929688
    10. '	List' → logprob: -16.750656127929688

Token 1686: '[int' (ID: 40124)
  Prédit: '[int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[int' → logprob: -0.05692548677325249
    2. '[List' → logprob: -3.3069255352020264
    3. 'int' → logprob: -4.681925296783447
    4. 'List' → logprob: -5.056925296783447
    5. '[str' → logprob: -5.806925296783447
    6. '[' → logprob: -10.931925773620605
    7. ']:
' → logprob: -10.931925773620605
    8. ']' → logprob: -11.431925773620605
    9. 'str' → logprob: -12.056925773620605
    10. '[]' → logprob: -12.181925773620605

Token 1687: ',' (ID: 11)
  Prédit: ',int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',int' → logprob: -0.006945414934307337
    2. ',List' → logprob: -5.006945610046387
    3. ',' → logprob: -8.506945610046387
    4. 'int' → logprob: -10.631945610046387
    5. '[int' → logprob: -12.631945610046387
    6. ',str' → logprob: -15.256945610046387
    7. ']]' → logprob: -16.00694465637207
    8. 'List' → logprob: -17.13194465637207
    9. ']]:
' → logprob: -17.13194465637207
    10. ',list' → logprob: -17.25694465637207

Token 1688: ' List' (ID: 2655)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.07962168753147125
    2. 'List' → logprob: -2.5796217918395996
    3. '...' → logprob: -7.9546217918396
    4. ']]' → logprob: -8.579621315002441
    5. ' int' → logprob: -10.454621315002441
    6. '
' → logprob: -10.829621315002441
    7. 'str' → logprob: -10.829621315002441
    8. 'Optional' → logprob: -10.954621315002441
    9. '[int' → logprob: -10.954621315002441
    10. ']])' → logprob: -11.329621315002441

Token 1689: '[List' (ID: 113982)
  Prédit: '[List'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[List' → logprob: -0.20186986029148102
    2. '[int' → logprob: -1.9518698453903198
    3. '[' → logprob: -3.2018699645996094
    4. 'List' → logprob: -9.45186996459961
    5. 'int' → logprob: -11.20186996459961
    6. 'Tuple' → logprob: -12.07686996459961
    7. '[str' → logprob: -12.70186996459961
    8. ']]' → logprob: -13.32686996459961
    9. '[
' → logprob: -14.07686996459961
    10. ',List' → logprob: -14.82686996459961

Token 1690: '[int' (ID: 40124)
  Prédit: '[int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[int' → logprob: -5.6457742175552994e-05
    2. '[' → logprob: -10.500056266784668
    3. 'int' → logprob: -10.500056266784668
    4. '[List' → logprob: -13.625056266784668
    5. ']]' → logprob: -16.250057220458984
    6. '[Int' → logprob: -17.875057220458984
    7. '[
' → logprob: -19.125057220458984
    8. '<int' → logprob: -19.625057220458984
    9. '[str' → logprob: -19.750057220458984
    10. '(int' → logprob: -20.000057220458984

Token 1691: ']],' (ID: 37171)
  Prédit: '[int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[int' → logprob: -0.07577753067016602
    2. '],' → logprob: -3.325777530670166
    3. ']]' → logprob: -3.325777530670166
    4. ']]]' → logprob: -7.450777530670166
    5. ']])' → logprob: -8.450777053833008
    6. ',int' → logprob: -9.200777053833008
    7. '[' → logprob: -9.450777053833008
    8. '[str' → logprob: -10.075777053833008
    9. ']],' → logprob: -10.700777053833008
    10. 'int' → logprob: -11.075777053833008

Token 1692: ' List' (ID: 2655)
  Prédit: 'Dict'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Dict' → logprob: -0.003483301028609276
    2. 'int' → logprob: -6.378483295440674
    3. 'List' → logprob: -6.378483295440674
    4. ' Dict' → logprob: -9.753483772277832
    5. '   ' → logprob: -11.378483772277832
    6. 'dict' → logprob: -12.378483772277832
    7. '           ' → logprob: -13.503483772277832
    8. '[' → logprob: -13.753483772277832
    9. '[int' → logprob: -13.753483772277832
    10. '       ' → logprob: -13.878483772277832

Token 1693: '[int' (ID: 40124)
  Prédit: '[int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[int' → logprob: -0.04401051625609398
    2. '[' → logprob: -3.1690104007720947
    3. '[List' → logprob: -6.919010639190674
    4. 'int' → logprob: -11.044010162353516
    5. '[str' → logprob: -12.669010162353516
    6. '[
' → logprob: -13.919010162353516
    7. 'Tuple' → logprob: -13.919010162353516
    8. '[Int' → logprob: -14.419010162353516
    9. '<int' → logprob: -15.419010162353516
    10. '(int' → logprob: -16.669010162353516

Token 1694: ']]' (ID: 8928)
  Prédit: ']]:
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']]:
' → logprob: -0.09961260855197906
    2. '[int' → logprob: -2.5996127128601074
    3. ']]' → logprob: -4.224612712860107
    4. ',' → logprob: -5.849612712860107
    5. '[' → logprob: -6.099612712860107
    6. ',int' → logprob: -7.849612712860107
    7. '[List' → logprob: -8.97461223602295
    8. ',List' → logprob: -9.47461223602295
    9. ']]]' → logprob: -9.84961223602295
    10. 'int' → logprob: -10.09961223602295

Token 1695: ']:
' (ID: 22152)
  Prédit: '():
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():
' → logprob: -0.3619541525840759
    2. ':
' → logprob: -1.9869542121887207
    3. ']:
' → logprob: -2.6119542121887207
    4. '):
' → logprob: -3.7369542121887207
    5. ':' → logprob: -3.8619542121887207
    6. '():' → logprob: -4.486954212188721
    7. ']:' → logprob: -4.861954212188721
    8. ')' → logprob: -4.986954212188721
    9. ']' → logprob: -5.111954212188721
    10. '   ' → logprob: -5.611954212188721

Token 1696: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.010802560485899448
    2. 'data' → logprob: -5.635802745819092
    3. 'n' → logprob: -6.010802745819092
    4. 'import' → logprob: -6.635802745819092
    5. 'inputs' → logprob: -6.635802745819092
    6. 'test' → logprob: -7.260802745819092
    7. 'tests' → logprob: -7.885802745819092
    8. '```' → logprob: -7.885802745819092
    9. 'input' → logprob: -8.760802268981934
    10. ' n' → logprob: -9.260802268981934

Token 1697: ' datasets' (ID: 57711)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.20558182895183563
    2. 'tests' → logprob: -3.0805819034576416
    3. 'data' → logprob: -3.4555819034576416
    4. 'import' → logprob: -3.7055819034576416
    5. 'n' → logprob: -3.9555819034576416
    6. 't' → logprob: -4.0805816650390625
    7. 'results' → logprob: -4.3305816650390625
    8. 'cases' → logprob: -4.5805816650390625
    9. 'inputs' → logprob: -4.5805816650390625
    10. 'test' → logprob: -4.8305816650390625

Token 1698: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.21172651648521423
    2. '=' → logprob: -1.7117265462875366
    3. '=[]' → logprob: -5.086726665496826
    4. '   ' → logprob: -6.086726665496826
    5. '=[]
' → logprob: -7.336726665496826
    6. 'def' → logprob: -7.586726665496826
    7. ':' → logprob: -7.586726665496826
    8. '[]' → logprob: -9.836726188659668
    9. 'import' → logprob: -10.711726188659668
    10. '():' → logprob: -10.836726188659668

Token 1699: ' []
' (ID: 8911)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.0005601812736131251
    2. '[]
' → logprob: -7.500560283660889
    3. ' []' → logprob: -12.00055980682373
    4. '[]

' → logprob: -15.00055980682373
    5. '[' → logprob: -15.37555980682373
    6. '[int' → logprob: -15.50055980682373
    7. '[]"' → logprob: -16.500560760498047
    8. '[])' → logprob: -17.000560760498047
    9. '[
' → logprob: -17.250560760498047
    10. '[]}' → logprob: -17.250560760498047

Token 1700: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.019826428964734077
    2. 'import' → logprob: -4.519826412200928
    3. 'n' → logprob: -5.144826412200928
    4. 'while' → logprob: -6.394826412200928
    5. 'try' → logprob: -8.019826889038086
    6. '
' → logprob: -8.019826889038086
    7. '```' → logprob: -8.019826889038086
    8. 'num' → logprob: -9.519826889038086
    9. ' n' → logprob: -9.644826889038086
    10. ' while' → logprob: -10.394826889038086

Token 1701: ' while' (ID: 2049)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.21879464387893677
    2. 'n' → logprob: -2.468794584274292
    3. 'try' → logprob: -2.718794584274292
    4. 'while' (adapté à ' while') → logprob: -3.468794584274292
    5. 'num' → logprob: -4.718794822692871
    6. 't' → logprob: -5.468794822692871
    7. 'T' → logprob: -6.843794822692871
    8. 'for' → logprob: -7.968794822692871
    9. '   ' → logprob: -9.718794822692871
    10. ' import' → logprob: -10.093794822692871

Token 1702: ' True' (ID: 6432)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'True' → logprob: -0.0005806732806377113
    2. ' True' → logprob: -7.500580787658691
    3. '(True' → logprob: -10.500580787658691
    4. '1' → logprob: -17.375579833984375
    5. 'true' → logprob: -17.375579833984375
    6. '
' → logprob: -17.375579833984375
    7. '=True' → logprob: -17.625579833984375
    8. '   ' → logprob: -18.750579833984375
    9. '_true' → logprob: -19.875579833984375
    10. '.True' → logprob: -20.125579833984375

Token 1703: ':
' (ID: 734)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.49277105927467346
    2. '   ' → logprob: -1.492771029472351
    3. ':' → logprob: -1.992771029472351
    4. '():' → logprob: -4.617771148681641
    5. ':
' → logprob: -5.117771148681641
    6. ',' → logprob: -5.617771148681641
    7. '():
' → logprob: -5.992771148681641
    8. '(line' → logprob: -6.117771148681641
    9. ' line' → logprob: -6.617771148681641
    10. '(' → logprob: -8.49277114868164

Token 1704: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0021559724118560553
    2. '       ' → logprob: -6.752155780792236
    3. 'line' → logprob: -7.877155780792236
    4. ' line' → logprob: -8.002156257629395
    5. 'try' → logprob: -8.252156257629395
    6. ' try' → logprob: -12.002156257629395
    7. '	line' → logprob: -12.627156257629395
    8. '   ' → logprob: -14.127156257629395
    9. '	try' → logprob: -16.127155303955078
    10. '```' → logprob: -16.627155303955078

Token 1705: ' n' (ID: 297)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'line' → logprob: -0.0021086246706545353
    2. 'try' → logprob: -6.502108573913574
    3. 'n' (adapté à ' n') → logprob: -7.752108573913574
    4. '   ' → logprob: -9.002108573913574
    5. 'N' → logprob: -10.502108573913574
    6. ' line' → logprob: -10.752108573913574
    7. 's' → logprob: -13.127108573913574
    8. 'raw' → logprob: -14.002108573913574
    9. 'size' → logprob: -14.877108573913574
    10. '	line' → logprob: -15.127108573913574

Token 1706: '_line' (ID: 14418)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.14344900846481323
    2. ' =' → logprob: -2.018449068069458
    3. '=int' → logprob: -7.518448829650879
    4. '=input' → logprob: -8.643448829650879
    5. ',' → logprob: -11.018448829650879
    6. '=line' → logprob: -11.768448829650879
    7. '=
' → logprob: -12.018448829650879
    8. '_input' → logprob: -12.768448829650879
    9. '_str' → logprob: -12.768448829650879
    10. 'input' → logprob: -12.893448829650879

Token 1707: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0067156096920371056
    2. ' =' → logprob: -5.006715774536133
    3. '=input' → logprob: -16.256715774536133
    4. '=line' → logprob: -16.381715774536133
    5. '   ' → logprob: -17.006715774536133
    6. '＝' → logprob: -17.881715774536133
    7. '=
' → logprob: -18.131715774536133
    8. 's' → logprob: -18.381715774536133
    9. '.=' → logprob: -18.506715774536133
    10. 'n' → logprob: -19.131715774536133

Token 1708: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -9.698698704596609e-05
    2. ' input' → logprob: -9.250097274780273
    3. '(input' → logprob: -14.125097274780273
    4. '=input' → logprob: -16.000097274780273
    5. '<input' → logprob: -20.250097274780273
    6. '_input' → logprob: -21.000097274780273
    7. '	input' → logprob: -21.125097274780273
    8. '
' → logprob: -21.875097274780273
    9. 'inp' → logprob: -22.000097274780273
    10. 'import' → logprob: -22.250097274780273

Token 1709: '().' (ID: 1454)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.8272396326065063
    2. '().' → logprob: -0.8272396326065063
    3. '()
' → logprob: -2.577239513397217
    4. '=' → logprob: -3.327239513397217
    5. ' =' → logprob: -4.327239513397217
    6. '.strip' → logprob: -9.202239990234375
    7. '       ' → logprob: -9.827239990234375
    8. '()
' → logprob: -9.827239990234375
    9. '.' → logprob: -10.077239990234375
    10. 'strip' → logprob: -10.452239990234375

Token 1710: 'strip' (ID: 23905)
  Prédit: 'strip'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'strip' → logprob: -0.000158842682139948
    2. 'rstrip' → logprob: -8.75015926361084
    3. '_strip' → logprob: -15.87515926361084
    4. ' strip' → logprob: -17.250158309936523
    5. 'startswith' → logprob: -17.375158309936523
    6. 'isdigit' → logprob: -17.375158309936523
    7. '.strip' → logprob: -17.500158309936523
    8. 'str' → logprob: -17.625158309936523
    9. 'split' → logprob: -18.000158309936523
    10. '(strip' → logprob: -18.875158309936523

Token 1711: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.5234531164169312
    2. '()
' → logprob: -0.8984531164169312
    3. '       ' → logprob: -8.773452758789062
    4. '())' → logprob: -10.148452758789062
    5. '():
' → logprob: -10.273452758789062
    6. ')' → logprob: -11.148452758789062
    7. '=' → logprob: -11.148452758789062
    8. '()
' → logprob: -11.148452758789062
    9. ' =' → logprob: -11.523452758789062
    10. 'def' → logprob: -11.773452758789062

Token 1712: '       ' (ID: 309)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.004345379304140806
    2. '       ' → logprob: -5.754345417022705
    3. ' if' → logprob: -6.754345417022705
    4. '   ' → logprob: -14.254344940185547
    5. 'If' → logprob: -15.004344940185547
    6. '	if' → logprob: -15.379344940185547
    7. '```' → logprob: -17.754344940185547
    8. ';if' → logprob: -17.754344940185547
    9. '           ' → logprob: -17.879344940185547
    10. '@if' → logprob: -19.879344940185547

Token 1713: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -1.9361264946837764e-07
    2. ' if' → logprob: -15.75
    3. 'If' → logprob: -18.625
    4. '
' → logprob: -21.25
    5. ';if' → logprob: -21.5
    6. '```' → logprob: -22.375
    7. '	if' → logprob: -22.875
    8. '#' → logprob: -24.0
    9. '   ' → logprob: -24.875
    10. 'i' → logprob: -25.125

Token 1714: ' n' (ID: 297)
  Prédit: 'not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'not' → logprob: -0.3896462023258209
    2. 'n' → logprob: -1.1396461725234985
    3. ' not' → logprob: -5.889646053314209
    4. ' n' → logprob: -13.639646530151367
    5. '==' → logprob: -14.014646530151367
    6. 'n't' → logprob: -14.514646530151367
    7. '   ' → logprob: -15.139646530151367
    8. '	not' → logprob: -15.889646530151367
    9. '
' → logprob: -16.389646530151367
    10. '```' → logprob: -16.639646530151367

Token 1715: '_line' (ID: 14418)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '==' → logprob: -0.0033871950581669807
    2. ' ==' → logprob: -5.753386974334717
    3. 'n' → logprob: -9.253387451171875
    4. '=' → logprob: -9.503387451171875
    5. '()==' → logprob: -11.128387451171875
    6. '```' → logprob: -12.378387451171875
    7. '=='' → logprob: -12.753387451171875
    8. '===' → logprob: -12.753387451171875
    9. ' n' → logprob: -13.378387451171875
    10. 'if' → logprob: -13.628387451171875

Token 1716: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.003236536169424653
    2. ' ==' → logprob: -5.753236770629883
    3. '=' → logprob: -10.003236770629883
    4. '===' → logprob: -11.753236770629883
    5. '()==' → logprob: -12.503236770629883
    6. '==
' → logprob: -13.503236770629883
    7. ']==' → logprob: -15.378236770629883
    8. '=='' → logprob: -15.878236770629883
    9. ')==' → logprob: -16.128236770629883
    10. '=="' → logprob: -16.503236770629883

Token 1717: ' '':
' (ID: 125614)
  Prédit: ''''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '''' → logprob: -0.6173784732818604
    2. ''' → logprob: -1.1173784732818604
    3. '"' → logprob: -2.1173784732818604
    4. '""' → logprob: -4.492378234863281
    5. '"":' → logprob: -6.367378234863281
    6. '0' → logprob: -9.117378234863281
    7. ''end' → logprob: -9.742378234863281
    8. ''#' → logprob: -10.617378234863281
    9. ''-' → logprob: -11.242378234863281
    10. ''S' → logprob: -12.617378234863281

Token 1718: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.003537351731210947
    2. 'break' → logprob: -6.003537178039551
    3. '       ' → logprob: -7.128537178039551
    4. ' break' → logprob: -9.00353717803955
    5. '   ' → logprob: -10.25353717803955
    6. ' or' → logprob: -10.50353717803955
    7. ':' → logprob: -11.00353717803955
    8. '               ' → logprob: -11.12853717803955
    9. ':
' → logprob: -11.12853717803955
    10. 'continue' → logprob: -11.50353717803955

Token 1719: ' continue' (ID: 4901)
  Prédit: 'break'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'break' → logprob: -2.2603901015827432e-05
    2. '       ' → logprob: -11.500022888183594
    3. ' break' → logprob: -11.500022888183594
    4. '           ' → logprob: -13.750022888183594
    5. 'return' → logprob: -13.750022888183594
    6. '	break' → logprob: -15.875022888183594
    7. 'continue' (adapté à ' continue') → logprob: -16.875022888183594
    8. '
' → logprob: -18.125022888183594
    9. 'Break' → logprob: -18.125022888183594
    10. '_break' → logprob: -19.000022888183594

Token 1720: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0007647183374501765
    2. 'if' → logprob: -8.250764846801758
    3. '
' → logprob: -8.875764846801758
    4. '<|end|>' → logprob: -8.875764846801758
    5. 'n' → logprob: -9.125764846801758
    6. 'try' → logprob: -9.250764846801758
    7. 'import' → logprob: -12.250764846801758
    8. ' if' → logprob: -12.375764846801758
    9. '<|end|>' → logprob: -13.500764846801758
    10. '```' → logprob: -13.625764846801758

Token 1721: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.34958478808403015
    2. 'if' → logprob: -1.3495848178863525
    3. 'try' → logprob: -3.3495848178863525
    4. ' if' → logprob: -7.974584579467773
    5. '```' → logprob: -8.474584579467773
    6. '           ' → logprob: -11.974584579467773
    7. ' try' → logprob: -12.224584579467773
    8. '   ' → logprob: -12.724584579467773
    9. 'n' → logprob: -13.474584579467773
    10. '
' → logprob: -14.099584579467773

Token 1722: ' n' (ID: 297)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.084988072514534
    2. 'try' → logprob: -3.0849881172180176
    3. 'n' (adapté à ' n') → logprob: -3.3349881172180176
    4. 'num' → logprob: -9.20998764038086
    5. '       ' → logprob: -10.58498764038086
    6. ' if' → logprob: -12.95998764038086
    7. 'break' → logprob: -13.20998764038086
    8. 'N' → logprob: -14.08498764038086
    9. '   ' → logprob: -15.20998764038086
    10. ' try' → logprob: -15.58498764038086

Token 1723: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.00013500562636181712
    2. ' =' → logprob: -9.00013542175293
    3. '=int' → logprob: -11.50013542175293
    4. 'int' → logprob: -13.62513542175293
    5. 'n' → logprob: -16.25013542175293
    6. '=
' → logprob: -16.87513542175293
    7. '_=' → logprob: -17.62513542175293
    8. '_int' → logprob: -18.37513542175293
    9. '=

' → logprob: -18.87513542175293
    10. ',' → logprob: -19.00013542175293

Token 1724: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -9.639096970204264e-05
    2. ' int' → logprob: -9.250096321105957
    3. '0' → logprob: -15.500096321105957
    4. '
' → logprob: -18.125097274780273
    5. '(int' → logprob: -20.875097274780273
    6. '   ' → logprob: -21.625097274780273
    7. '[int' → logprob: -21.750097274780273
    8. '=int' → logprob: -22.000097274780273
    9. '<int' → logprob: -22.875097274780273
    10. '       ' → logprob: -23.250097274780273

Token 1725: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.0007164848502725363
    2. 'n' → logprob: -7.250716686248779
    3. '(' → logprob: -12.250716209411621
    4. ' n' → logprob: -13.875716209411621
    5. ' (' → logprob: -15.250716209411621
    6. '()' → logprob: -15.375716209411621
    7. '(input' → logprob: -16.375717163085938
    8. '(
' → logprob: -16.375717163085938
    9. ')n' → logprob: -17.000717163085938
    10. '((' → logprob: -17.875717163085938

Token 1726: '_line' (ID: 14418)
  Prédit: '_line'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_line' → logprob: -0.5720009207725525
    2. '(n' → logprob: -1.9470009803771973
    3. '()' → logprob: -2.3220009803771973
    4. '())' → logprob: -2.4470009803771973
    5. ')' → logprob: -2.9470009803771973
    6. '()
' → logprob: -3.5720009803771973
    7. '())
' → logprob: -4.697000980377197
    8. '_n' → logprob: -5.322000980377197
    9. 'n' → logprob: -5.447000980377197
    10. '(' → logprob: -5.947000980377197

Token 1727: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0019452953711152077
    2. ')
' → logprob: -6.251945495605469
    3. '())' → logprob: -12.126945495605469
    4. ' )' → logprob: -12.751945495605469
    5. '       ' → logprob: -13.126945495605469
    6. '()' → logprob: -13.626945495605469
    7. '   ' → logprob: -13.751945495605469
    8. ')
' → logprob: -14.376945495605469
    9. '<|end|>' → logprob: -14.376945495605469
    10. ')return' → logprob: -14.626945495605469

Token 1728: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1629011034965515
    2. 'if' → logprob: -2.1629011631011963
    3. ' if' → logprob: -3.4129011631011963
    4. '<|end|>' → logprob: -6.162900924682617
    5. '   ' → logprob: -8.537900924682617
    6. '	if' → logprob: -10.537900924682617
    7. 'If' → logprob: -11.412900924682617
    8. '<|end|>' → logprob: -11.662900924682617
    9. '           ' → logprob: -11.787900924682617
    10. ' ' → logprob: -11.912900924682617

Token 1729: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -2.463036435074173e-05
    2. '       ' → logprob: -10.875024795532227
    3. 'grid' → logprob: -13.000024795532227
    4. 'block' → logprob: -13.250024795532227
    5. ' if' → logprob: -13.375024795532227
    6. 'break' → logprob: -17.125024795532227
    7. 'blocks' → logprob: -17.500024795532227
    8. 'If' → logprob: -17.875024795532227
    9. '   ' → logprob: -18.125024795532227
    10. '           ' → logprob: -18.250024795532227

Token 1730: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -9.65101717156358e-05
    2. ' n' → logprob: -9.250096321105957
    3. 'not' → logprob: -15.875096321105957
    4. '
' → logprob: -17.125097274780273
    5. '	n' → logprob: -17.250097274780273
    6. '0' → logprob: -17.500097274780273
    7. '   ' → logprob: -18.125097274780273
    8. ' not' → logprob: -18.750097274780273
    9. '(n' → logprob: -18.875097274780273
    10. 'n't' → logprob: -19.250097274780273

Token 1731: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.5759978294372559
    2. ' ==' → logprob: -0.8259978294372559
    3. '<=' → logprob: -10.575998306274414
    4. '=' → logprob: -10.825998306274414
    5. ' <=' → logprob: -12.075998306274414
    6. '===' → logprob: -13.450998306274414
    7. '==-' → logprob: -13.575998306274414
    8. '==
' → logprob: -13.700998306274414
    9. '<' → logprob: -13.825998306274414
    10. '```' → logprob: -14.450998306274414

Token 1732: ' -' (ID: 533)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.008648726157844067
    2. '-' → logprob: -4.758648872375488
    3. ' ' → logprob: -10.383648872375488
    4. ' -' → logprob: -12.633648872375488
    5. '
' → logprob: -17.383647918701172
    6. '   ' → logprob: -18.133647918701172
    7. '=' → logprob: -19.508647918701172
    8. ')' → logprob: -20.008647918701172
    9. '```' → logprob: -20.633647918701172
    10. '  ' → logprob: -20.883647918701172

Token 1733: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: 0.0
    2. ' ' → logprob: -18.75
    3. '１' → logprob: -19.5
    4. '۱' → logprob: -19.5
    5. '
' → logprob: -19.625
    6. '```' → logprob: -20.5
    7. '2' → logprob: -20.875
    8. '১' → logprob: -22.125
    9. '१' → logprob: -22.25
    10. '0' → logprob: -22.5

Token 1734: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.5345271229743958
    2. ':' → logprob: -0.9095271229743958
    3. '           ' → logprob: -4.53452730178833
    4. '       ' → logprob: -7.65952730178833
    5. '   ' → logprob: -10.284526824951172
    6. ':return' → logprob: -10.284526824951172
    7. '):
' → logprob: -10.534526824951172
    8. ':
' → logprob: -11.909526824951172
    9. '          ' → logprob: -12.284526824951172
    10. ' break' → logprob: -12.409526824951172

Token 1735: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.011382488533854485
    2. '       ' → logprob: -4.511382579803467
    3. 'break' → logprob: -8.636382102966309
    4. ' break' → logprob: -9.511382102966309
    5. '   ' → logprob: -9.886382102966309
    6. '		' → logprob: -11.261382102966309
    7. '               ' → logprob: -11.886382102966309
    8. '	break' → logprob: -12.386382102966309
    9. '                   ' → logprob: -13.511382102966309
    10. '```' → logprob: -13.636382102966309

Token 1736: ' break' (ID: 2338)
  Prédit: 'break'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'break' (adapté à ' break') → logprob: -0.0042577809654176235
    2. ' break' → logprob: -6.004257678985596
    3. 'return' → logprob: -6.504257678985596
    4. '           ' → logprob: -8.879258155822754
    5. '       ' → logprob: -9.004258155822754
    6. '	break' → logprob: -11.129258155822754
    7. '               ' → logprob: -13.004258155822754
    8. '_break' → logprob: -13.004258155822754
    9. '
' → logprob: -13.879258155822754
    10. ' return' → logprob: -14.504258155822754

Token 1737: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0011780819622799754
    2. '
' → logprob: -6.87617826461792
    3. '        
' → logprob: -9.876177787780762
    4. '<|end|>' → logprob: -10.501177787780762
    5. '```' → logprob: -10.876177787780762
    6. ')' → logprob: -11.751177787780762
    7. ',' → logprob: -11.751177787780762
    8. 'data' → logprob: -12.001177787780762
    9. '   ' → logprob: -12.126177787780762
    10. '           ' → logprob: -12.626177787780762

Token 1738: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5468380451202393
    2. 'grid' → logprob: -0.9218380451202393
    3. '   ' → logprob: -3.9218380451202393
    4. ' grid' → logprob: -6.54683780670166
    5. 'blocks' → logprob: -7.04683780670166
    6. 'block' → logprob: -7.54683780670166
    7. 'rows' → logprob: -8.04683780670166
    8. '	grid' → logprob: -9.04683780670166
    9. 'num' → logprob: -9.79683780670166
    10. '```' → logprob: -9.79683780670166

Token 1739: ' grid' (ID: 10586)
  Prédit: 'block'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'block' → logprob: -0.08219835162162781
    2. 'grid' (adapté à ' grid') → logprob: -2.58219838142395
    3. 'scores' → logprob: -6.332198143005371
    4. 'score' → logprob: -6.707198143005371
    5. 'blocks' → logprob: -8.582198143005371
    6. 'b' → logprob: -10.707198143005371
    7. 'id' → logprob: -10.957198143005371
    8. '       ' → logprob: -11.207198143005371
    9. 'sc' → logprob: -11.207198143005371
    10. 'for' → logprob: -11.457198143005371

Token 1740: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.16335974633693695
    2. ' =' → logprob: -1.9133597612380981
    3. '=[]' → logprob: -5.788359642028809
    4. '=[]
' → logprob: -10.038359642028809
    5. '   ' → logprob: -12.413359642028809
    6. ',' → logprob: -12.413359642028809
    7. '       ' → logprob: -12.913359642028809
    8. ':' → logprob: -13.163359642028809
    9. '=[]
' → logprob: -13.163359642028809
    10. '[]' → logprob: -13.288359642028809

Token 1741: ' []
' (ID: 8911)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.000918008794542402
    2. '[int' → logprob: -8.5009183883667
    3. '[n' → logprob: -8.7509183883667
    4. '[]
' → logprob: -9.2509183883667
    5. '[row' → logprob: -9.6259183883667
    6. '[List' → logprob: -9.6259183883667
    7. '[]' → logprob: -9.6259183883667
    8. '[str' → logprob: -9.8759183883667
    9. '[class' → logprob: -10.1259183883667
    10. '[line' → logprob: -10.7509183883667

Token 1742: '       ' (ID: 309)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.006003925576806068
    2. '       ' → logprob: -5.5060038566589355
    3. ' for' → logprob: -6.2560038566589355
    4. '           ' → logprob: -13.256004333496094
    5. '	for' → logprob: -13.381004333496094
    6. '   ' → logprob: -13.756004333496094
    7. '```' → logprob: -15.881004333496094
    8. '[' → logprob: -16.131004333496094
    9. '
' → logprob: -16.131004333496094
    10. '               ' → logprob: -17.381004333496094

Token 1743: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -2.45848218582978e-06
    2. ' for' → logprob: -13.00000286102295
    3. '       ' → logprob: -15.75000286102295
    4. '	for' → logprob: -18.750001907348633
    5. '   ' → logprob: -20.125001907348633
    6. '
' → logprob: -20.500001907348633
    7. '           ' → logprob: -21.125001907348633
    8. '```' → logprob: -21.875001907348633
    9. 'while' → logprob: -23.125001907348633
    10. '        
' → logprob: -23.375001907348633

Token 1744: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.006992065813392401
    2. '_r' → logprob: -5.006991863250732
    3. '_i' → logprob: -8.88199234008789
    4. '_row' → logprob: -9.75699234008789
    5. '_range' → logprob: -10.63199234008789
    6. 'r' → logprob: -10.88199234008789
    7. '_rows' → logprob: -11.63199234008789
    8. '_
' → logprob: -11.88199234008789
    9. ' _' → logprob: -12.00699234008789
    10. '_in' → logprob: -13.00699234008789

Token 1745: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -6.587483221665025e-05
    2. 'range' → logprob: -9.750065803527832
    3. 'in' → logprob: -11.875065803527832
    4. ' range' → logprob: -14.625065803527832
    5. ' ' → logprob: -17.62506675720215
    6. '_' → logprob: -17.75006675720215
    7. 'r' → logprob: -19.12506675720215
    8. 'i' → logprob: -19.12506675720215
    9. '
' → logprob: -19.25006675720215
    10. ' _' → logprob: -19.37506675720215

Token 1746: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -6.392202976712724e-06
    2. ' range' → logprob: -12.000006675720215
    3. '_' → logprob: -16.8750057220459
    4. '_range' → logprob: -17.0000057220459
    5. '
' → logprob: -17.1250057220459
    6. '   ' → logprob: -20.0000057220459
    7. '[' → logprob: -20.1250057220459
    8. '	range' → logprob: -21.0000057220459
    9. '(range' → logprob: -21.5000057220459
    10. 'rang' → logprob: -21.5000057220459

Token 1747: '(' (ID: 7)
  Prédit: 'Board'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Board' → logprob: -0.7507142424583435
    2. '5' → logprob: -0.8757142424583435
    3. '(Board' → logprob: -2.6257143020629883
    4. '(' → logprob: -3.3757143020629883
    5. 'self' → logprob: -6.125714302062988
    6. ' Board' → logprob: -7.000714302062988
    7. '(self' → logprob: -7.125714302062988
    8. '(Game' → logprob: -8.625714302062988
    9. '10' → logprob: -8.875714302062988
    10. 'Game' → logprob: -8.875714302062988

Token 1748: '5' (ID: 20)
  Prédit: 'Board'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Board' → logprob: -0.3917866051197052
    2. '5' → logprob: -1.1417865753173828
    3. 'self' → logprob: -5.391786575317383
    4. 'Game' → logprob: -9.016786575317383
    5. ' Board' → logprob: -9.141786575317383
    6. 'Block' → logprob: -9.516786575317383
    7. '(Board' → logprob: -10.766786575317383
    8. 'board' → logprob: -12.266786575317383
    9. '   ' → logprob: -12.266786575317383
    10. 'BOARD' → logprob: -12.891786575317383

Token 1749: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.0004038593906443566
    2. '):' → logprob: -8.12540340423584
    3. '       ' → logprob: -9.87540340423584
    4. ':
' → logprob: -10.37540340423584
    5. '):
' → logprob: -11.00040340423584
    6. '           ' → logprob: -12.37540340423584
    7. '   ' → logprob: -13.12540340423584
    8. ')' → logprob: -14.37540340423584
    9. ':' → logprob: -14.75040340423584
    10. '():
' → logprob: -14.87540340423584

Token 1750: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -7.743758760625497e-05
    2. '   ' → logprob: -10.375077247619629
    3. 'row' → logprob: -11.000077247619629
    4. '	       ' → logprob: -11.875077247619629
    5. ' line' → logprob: -12.250077247619629
    6. '```' → logprob: -12.875077247619629
    7. '		' → logprob: -13.000077247619629
    8. '	   ' → logprob: -13.125077247619629
    9. 'line' → logprob: -13.625077247619629
    10. '               ' → logprob: -14.000077247619629

Token 1751: ' row' (ID: 5225)
  Prédit: 'row'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'row' (adapté à ' row') → logprob: -0.008433723822236061
    2. 'grid' → logprob: -5.883433818817139
    3. ' row' → logprob: -6.133433818817139
    4. '           ' → logprob: -6.258433818817139
    5. 'line' → logprob: -6.508433818817139
    6. '       ' → logprob: -11.38343334197998
    7. '   ' → logprob: -11.75843334197998
    8. 'nums' → logprob: -12.13343334197998
    9. 'rows' → logprob: -12.75843334197998
    10. ' grid' → logprob: -13.00843334197998

Token 1752: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.13484694063663483
    2. ' =' → logprob: -2.1348469257354736
    3. '.append' → logprob: -4.884847164154053
    4. '           ' → logprob: -8.634846687316895
    5. '=row' → logprob: -9.884846687316895
    6. '=line' → logprob: -9.884846687316895
    7. '.extend' → logprob: -11.259846687316895
    8. '=input' → logprob: -11.634846687316895
    9. 'row' → logprob: -12.009846687316895
    10. '_line' → logprob: -12.759846687316895

Token 1753: ' list' (ID: 1562)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -3.8889261304575484e-06
    2. ' list' → logprob: -12.500003814697266
    3. '[list' → logprob: -16.000003814697266
    4. '=list' → logprob: -20.125003814697266
    5. '[' → logprob: -20.125003814697266
    6. '	list' → logprob: -21.000003814697266
    7. '   ' → logprob: -21.750003814697266
    8. '
' → logprob: -22.000003814697266
    9. '(list' → logprob: -22.375003814697266
    10. ':list' → logprob: -22.500003814697266

Token 1754: '(map' (ID: 16946)
  Prédit: '(map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(map' → logprob: -7.517272024415433e-05
    2. 'map' → logprob: -9.500075340270996
    3. '(' → logprob: -15.750075340270996
    4. '(int' → logprob: -16.12507438659668
    5. '.map' → logprob: -17.50007438659668
    6. ' map' → logprob: -18.00007438659668
    7. '	map' → logprob: -18.62507438659668
    8. '_map' → logprob: -19.00007438659668
    9. '(
' → logprob: -19.00007438659668
    10. '
' → logprob: -19.25007438659668

Token 1755: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.005237668287009001
    2. 'int' → logprob: -5.255237579345703
    3. '[int' → logprob: -13.255237579345703
    4. '(' → logprob: -13.880237579345703
    5. '(lambda' → logprob: -14.255237579345703
    6. '<int' → logprob: -15.755237579345703
    7. '(
' → logprob: -16.505237579345703
    8. ',int' → logprob: -16.880237579345703
    9. ' int' → logprob: -17.130237579345703
    10. '(str' → logprob: -17.505237579345703

Token 1756: ',' (ID: 11)
  Prédit: ',input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',input' → logprob: -0.04627875238656998
    2. '(input' → logprob: -3.796278715133667
    3. ',' → logprob: -4.171278953552246
    4. 'input' → logprob: -4.921278953552246
    5. '=input' → logprob: -10.796278953552246
    6. '   ' → logprob: -11.921278953552246
    7. ' input' → logprob: -11.921278953552246
    8. '(' → logprob: -12.671278953552246
    9. '[input' → logprob: -12.796278953552246
    10. '           ' → logprob: -13.421278953552246

Token 1757: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -5.836499985889532e-05
    2. ' input' → logprob: -9.7500581741333
    3. '(input' → logprob: -18.250059127807617
    4. ',input' → logprob: -18.750059127807617
    5. '_input' → logprob: -18.875059127807617
    6. '<input' → logprob: -19.250059127807617
    7. '=input' → logprob: -20.375059127807617
    8. '           ' → logprob: -21.000059127807617
    9. '[input' → logprob: -21.000059127807617
    10. 'Input' → logprob: -21.500059127807617

Token 1758: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -9.968312951968983e-06
    2. '()' → logprob: -11.625009536743164
    3. '.strip' → logprob: -15.000009536743164
    4. '()
' → logprob: -15.625009536743164
    5. ' ().' → logprob: -15.625009536743164
    6. '(' → logprob: -15.875009536743164
    7. '   ' → logprob: -16.625009536743164
    8. '.' → logprob: -16.875009536743164
    9. '.split' → logprob: -17.000009536743164
    10. '()[' → logprob: -17.250009536743164

Token 1759: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.3869200050830841
    2. 'strip' → logprob: -1.1369199752807617
    3. 'read' → logprob: -10.261919975280762
    4. 'rstrip' → logprob: -11.386919975280762
    5. '().' → logprob: -13.261919975280762
    6. 'str' → logprob: -14.636919975280762
    7. '.strip' → logprob: -15.136919975280762
    8. '(split' → logprob: -16.261920928955078
    9. ' strip' → logprob: -16.511920928955078
    10. ' split' → logprob: -17.011920928955078

Token 1760: '()))
' (ID: 24521)
  Prédit: '()))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()))' → logprob: -0.06271474063396454
    2. '()))
' → logprob: -2.8127148151397705
    3. '()' → logprob: -7.437714576721191
    4. '))' → logprob: -8.937714576721191
    5. '()))
' → logprob: -11.687714576721191
    6. '(' → logprob: -12.062714576721191
    7. '()))

' → logprob: -12.562714576721191
    8. '().' → logprob: -13.187714576721191
    9. '()));' → logprob: -13.312714576721191
    10. '())))' → logprob: -13.437714576721191

Token 1761: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -2.2842308680992573e-05
    2. '<|end|>' → logprob: -11.500022888183594
    3. '       ' → logprob: -12.625022888183594
    4. ')' → logprob: -13.000022888183594
    5. '[' → logprob: -13.125022888183594
    6. '               ' → logprob: -13.625022888183594
    7. '          ' → logprob: -14.000022888183594
    8. '<|end|>' → logprob: -14.375022888183594
    9. '		' → logprob: -14.500022888183594
    10. '	       ' → logprob: -14.750022888183594

Token 1762: ' grid' (ID: 10586)
  Prédit: 'grid'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'grid' (adapté à ' grid') → logprob: -4.4060561776859686e-05
    2. '           ' → logprob: -10.500043869018555
    3. ' grid' → logprob: -11.250043869018555
    4. '       ' → logprob: -12.625043869018555
    5. '	grid' → logprob: -16.125043869018555
    6. '   ' → logprob: -17.000043869018555
    7. '(grid' → logprob: -17.125043869018555
    8. '
' → logprob: -17.875043869018555
    9. '.grid' → logprob: -18.000043869018555
    10. '          ' → logprob: -19.875043869018555

Token 1763: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -6.110668618930504e-05
    2. '.' → logprob: -10.50006103515625
    3. '           ' → logprob: -10.62506103515625
    4. 'append' → logprob: -11.87506103515625
    5. '       ' → logprob: -13.75006103515625
    6. ').' → logprob: -15.12506103515625
    7. '.extend' → logprob: -15.62506103515625
    8. '=' → logprob: -15.75006103515625
    9. ' =' → logprob: -16.00006103515625
    10. '.app' → logprob: -16.75006103515625

Token 1764: '(row' (ID: 15945)
  Prédit: '(row'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(row' → logprob: -0.0788901224732399
    2. 'row' → logprob: -2.578890085220337
    3. '[row' → logprob: -15.953889846801758
    4. ' row' → logprob: -16.203889846801758
    5. '=row' → logprob: -16.203889846801758
    6. ',row' → logprob: -16.703889846801758
    7. '(' → logprob: -17.703889846801758
    8. '	row' → logprob: -18.203889846801758
    9. '(
' → logprob: -18.578889846801758
    10. '
' → logprob: -18.953889846801758

Token 1765: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0016657774103805423
    2. '       ' → logprob: -6.7516655921936035
    3. ')
' → logprob: -7.6266655921936035
    4. ')return' → logprob: -12.376666069030762
    5. '<|end|>' → logprob: -12.876666069030762
    6. '
' → logprob: -15.126666069030762
    7. '<|end|>' → logprob: -15.751666069030762
    8. ')#' → logprob: -15.876666069030762
    9. '),' → logprob: -16.001665115356445
    10. ' )' → logprob: -16.376665115356445

Token 1766: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00025526012177579105
    2. 'block' → logprob: -8.750255584716797
    3. '
' → logprob: -10.000255584716797
    4. '   ' → logprob: -11.000255584716797
    5. 'scores' → logprob: -11.125255584716797
    6. ' block' → logprob: -11.875255584716797
    7. '```' → logprob: -12.375255584716797
    8. 'score' → logprob: -12.750255584716797
    9. '           ' → logprob: -13.250255584716797
    10. 'b' → logprob: -14.000255584716797

Token 1767: ' scores' (ID: 18923)
  Prédit: 'scores'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'scores' (adapté à ' scores') → logprob: -0.6375625729560852
    2. 'block' → logprob: -0.7625625729560852
    3. 'score' → logprob: -5.3875627517700195
    4. 'blocks' → logprob: -9.38756275177002
    5. 'sc' → logprob: -9.51256275177002
    6. 'line' → logprob: -9.88756275177002
    7. 'bs' → logprob: -10.13756275177002
    8. '   ' → logprob: -10.63756275177002
    9. 'points' → logprob: -11.01256275177002
    10. '_scores' → logprob: -11.13756275177002

Token 1768: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.16022981703281403
    2. '=' → logprob: -1.9102298021316528
    3. '_line' → logprob: -13.035229682922363
    4. '   ' → logprob: -13.535229682922363
    5. '           ' → logprob: -14.035229682922363
    6. '=line' → logprob: -14.285229682922363
    7. '       ' → logprob: -14.785229682922363
    8. 'line' → logprob: -16.78523063659668
    9. '    ' → logprob: -16.91023063659668
    10. ' ' → logprob: -17.28523063659668

Token 1769: ' list' (ID: 1562)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.0001234428636962548
    2. ' list' → logprob: -9.000123023986816
    3. '[list' → logprob: -19.750123977661133
    4. '=list' → logprob: -20.250123977661133
    5. 'List' → logprob: -21.625123977661133
    6. '(list' → logprob: -21.750123977661133
    7. '   ' → logprob: -23.000123977661133
    8. ':list' → logprob: -23.250123977661133
    9. '	list' → logprob: -23.625123977661133
    10. '
' → logprob: -24.375123977661133

Token 1770: '(map' (ID: 16946)
  Prédit: '(map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(map' → logprob: -9.662937372922897e-05
    2. 'map' → logprob: -9.250096321105957
    3. '.map' → logprob: -15.500096321105957
    4. '(' → logprob: -15.750096321105957
    5. ' map' → logprob: -17.000097274780273
    6. '(
' → logprob: -17.125097274780273
    7. '	map' → logprob: -17.500097274780273
    8. '   ' → logprob: -17.500097274780273
    9. ',map' → logprob: -17.875097274780273
    10. '(int' → logprob: -18.000097274780273

Token 1771: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.002477677771821618
    2. 'int' → logprob: -6.002477645874023
    3. '[int' → logprob: -13.252477645874023
    4. ' int' → logprob: -16.502477645874023
    5. '<int' → logprob: -16.627477645874023
    6. '=int' → logprob: -16.627477645874023
    7. '   ' → logprob: -17.252477645874023
    8. '(' → logprob: -17.377477645874023
    9. ',int' → logprob: -17.627477645874023
    10. '(
' → logprob: -18.252477645874023

Token 1772: ',' (ID: 11)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.011585425585508347
    2. ',input' → logprob: -5.136585235595703
    3. 'input' → logprob: -5.386585235595703
    4. '(int' → logprob: -7.136585235595703
    5. ',' → logprob: -8.511585235595703
    6. ' (' → logprob: -10.511585235595703
    7. '(' → logprob: -11.011585235595703
    8. ' input' → logprob: -11.386585235595703
    9. '[input' → logprob: -12.761585235595703
    10. '=input' → logprob: -13.386585235595703

Token 1773: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -4.842555426876061e-06
    2. ' input' → logprob: -12.250004768371582
    3. '(input' → logprob: -19.0000057220459
    4. '   ' → logprob: -21.2500057220459
    5. '<input' → logprob: -22.3750057220459
    6. '[input' → logprob: -23.0000057220459
    7. '	input' → logprob: -23.2500057220459
    8. ',input' → logprob: -23.3750057220459
    9. 'Input' → logprob: -23.5000057220459
    10. 'lambda' → logprob: -23.5000057220459

Token 1774: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -4.704065213445574e-05
    2. '()' → logprob: -10.000046730041504
    3. '.split' → logprob: -14.375046730041504
    4. '()[' → logprob: -15.125046730041504
    5. ' ().' → logprob: -15.125046730041504
    6. '(' → logprob: -15.250046730041504
    7. '   ' → logprob: -15.875046730041504
    8. '()
' → logprob: -16.37504768371582
    9. '())' → logprob: -17.00004768371582
    10. 'split' → logprob: -18.00004768371582

Token 1775: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -1.318681188422488e-05
    2. 'strip' → logprob: -11.25001335144043
    3. ' split' → logprob: -15.75001335144043
    4. '(split' → logprob: -17.87501335144043
    5. '.split' → logprob: -18.37501335144043
    6. 'rstrip' → logprob: -18.87501335144043
    7. 'spl' → logprob: -19.75001335144043
    8. '_split' → logprob: -21.00001335144043
    9. 'input' → logprob: -22.37501335144043
    10. '
' → logprob: -22.87501335144043

Token 1776: '()))
' (ID: 24521)
  Prédit: '()))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()))' → logprob: -0.38719767332077026
    2. '()))
' → logprob: -1.137197732925415
    3. '()' → logprob: -8.387197494506836
    4. '))' → logprob: -10.012197494506836
    5. '(' → logprob: -11.012197494506836
    6. '()))
' → logprob: -11.512197494506836
    7. '()
' → logprob: -12.012197494506836
    8. '()))

' → logprob: -12.387197494506836
    9. '()));' → logprob: -12.512197494506836
    10. '())' → logprob: -12.512197494506836

Token 1777: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -9.729906196298543e-06
    2. '   ' → logprob: -12.125009536743164
    3. '<|end|>' → logprob: -12.750009536743164
    4. 'datasets' → logprob: -14.875009536743164
    5. '           ' → logprob: -15.125009536743164
    6. '```' → logprob: -15.625009536743164
    7. '      ' → logprob: -16.500009536743164
    8. '        
' → logprob: -16.750009536743164
    9. '	' → logprob: -16.750009536743164
    10. '[' → logprob: -16.875009536743164

Token 1778: ' datasets' (ID: 57711)
  Prédit: 'datasets'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'datasets' (adapté à ' datasets') → logprob: -0.0006826493190601468
    2. '       ' → logprob: -7.375682830810547
    3. '   ' → logprob: -10.000682830810547
    4. 'data' → logprob: -12.625682830810547
    5. 'datas' → logprob: -12.750682830810547
    6. ' datasets' → logprob: -13.375682830810547
    7. 'd' → logprob: -14.000682830810547
    8. 'scores' → logprob: -14.125682830810547
    9. 'dat' → logprob: -14.375682830810547
    10. 'dataset' → logprob: -14.625682830810547

Token 1779: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.0002882721892092377
    2. '.' → logprob: -8.875288009643555
    3. 'append' → logprob: -9.875288009643555
    4. '       ' → logprob: -10.000288009643555
    5. '           ' → logprob: -10.125288009643555
    6. '.app' → logprob: -12.625288009643555
    7. '<|end|>' → logprob: -13.875288009643555
    8. '.extend' → logprob: -13.875288009643555
    9. 'Append' → logprob: -14.000288009643555
    10. '<|end|>' → logprob: -14.000288009643555

Token 1780: '((' (ID: 2054)
  Prédit: '(('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '((' → logprob: -0.014302179217338562
    2. '(' → logprob: -4.2643022537231445
    3. '(n' → logprob: -9.139302253723145
    4. '(
' → logprob: -11.139302253723145
    5. '   ' → logprob: -11.389302253723145
    6. '((-' → logprob: -12.389302253723145
    7. '([' → logprob: -15.139302253723145
    8. '(((' → logprob: -15.139302253723145
    9. '       ' → logprob: -15.639302253723145
    10. ' (' → logprob: -15.889302253723145

Token 1781: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -7.896309739408025e-07
    2. ' n' → logprob: -14.500000953674316
    3. '   ' → logprob: -16.25
    4. '
' → logprob: -16.25
    5. '	n' → logprob: -18.375
    6. '(n' → logprob: -18.5
    7. ')n' → logprob: -18.875
    8. '       ' → logprob: -20.0
    9. '_n' → logprob: -20.5
    10. '           ' → logprob: -21.25

Token 1782: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -4.9186317482963204e-05
    2. ',
' → logprob: -11.000049591064453
    3. ' ,' → logprob: -11.000049591064453
    4. ',List' → logprob: -12.125049591064453
    5. ',n' → logprob: -12.750049591064453
    6. ',[' → logprob: -13.500049591064453
    7. '[' → logprob: -13.750049591064453
    8. '<|end|>' → logprob: -13.750049591064453
    9. ',...' → logprob: -14.875049591064453
    10. ',None' → logprob: -15.000049591064453

Token 1783: ' grid' (ID: 10586)
  Prédit: 'grid'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'grid' → logprob: -0.00027230256819166243
    2. ' grid' → logprob: -8.750272750854492
    3. '[' → logprob: -9.125272750854492
    4. '[
' → logprob: -12.875272750854492
    5. '
' → logprob: -14.125272750854492
    6. ' [' → logprob: -14.625272750854492
    7. '(grid' → logprob: -15.250272750854492
    8. 'scores' → logprob: -15.500272750854492
    9. '5' → logprob: -16.000272750854492
    10. '[[' → logprob: -16.000272750854492

Token 1784: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -4.3226136767771095e-05
    2. ',s' → logprob: -11.000042915344238
    3. ',
' → logprob: -11.250042915344238
    4. ' ,' → logprob: -11.875042915344238
    5. '       ' → logprob: -13.500042915344238
    6. '   ' → logprob: -13.625042915344238
    7. ',)' → logprob: -14.250042915344238
    8. '           ' → logprob: -14.750042915344238
    9. ',List' → logprob: -15.000042915344238
    10. 'scores' → logprob: -15.750042915344238

Token 1785: ' scores' (ID: 18923)
  Prédit: 'scores'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'scores' → logprob: -0.0001593195047462359
    2. ' scores' → logprob: -8.75015926361084
    3. 'score' → logprob: -15.00015926361084
    4. 's' → logprob: -15.12515926361084
    5. '
' → logprob: -15.87515926361084
    6. '(scores' → logprob: -18.000160217285156
    7. '   ' → logprob: -18.125160217285156
    8. '      ' → logprob: -19.250160217285156
    9. ' ' → logprob: -19.375160217285156
    10. '       ' → logprob: -19.500160217285156

Token 1786: '))
' (ID: 2210)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.04260664060711861
    2. '))
' → logprob: -3.2926065921783447
    3. ')' → logprob: -5.542606830596924
    4. '       ' → logprob: -7.417606830596924
    5. ')
' → logprob: -10.917606353759766
    6. '   ' → logprob: -11.042606353759766
    7. '           ' → logprob: -13.917606353759766
    8. '))

' → logprob: -14.667606353759766
    9. ')))' → logprob: -14.792606353759766
    10. '));' → logprob: -14.917606353759766

Token 1787: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1038636714220047
    2. 'return' → logprob: -2.3538637161254883
    3. '
' → logprob: -5.853863716125488
    4. ' return' → logprob: -7.478863716125488
    5. '```' → logprob: -9.353863716125488
    6. ')' → logprob: -9.603863716125488
    7. '<|end|>' → logprob: -10.978863716125488
    8. '	return' → logprob: -11.103863716125488
    9. '    
' → logprob: -11.353863716125488
    10. ')
' → logprob: -12.478863716125488

Token 1788: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.049477361142635345
    2. 'return' (adapté à ' return') → logprob: -3.0494773387908936
    3. ' return' → logprob: -7.174477577209473
    4. '
' → logprob: -9.674477577209473
    5. ')' → logprob: -11.174477577209473
    6. '<|end|>' → logprob: -11.174477577209473
    7. '	return' → logprob: -11.424477577209473
    8. '       ' → logprob: -11.924477577209473
    9. '```' → logprob: -12.174477577209473
    10. ' ' → logprob: -12.674477577209473

Token 1789: ' datasets' (ID: 57711)
  Prédit: 'datasets'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'datasets' → logprob: -1.5048530030981055e-06
    2. ' datasets' → logprob: -13.500001907348633
    3. '.datasets' → logprob: -18.250001907348633
    4. 'datas' → logprob: -18.500001907348633
    5. 'dat' → logprob: -19.875001907348633
    6. 'dataset' → logprob: -20.125001907348633
    7. 'data' → logprob: -21.625001907348633
    8. 'd' → logprob: -22.750001907348633
    9. 'atasets' → logprob: -23.375001907348633
    10. '
' → logprob: -24.750001907348633

Token 1790: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1791: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0022571911104023457
    2. 'if' → logprob: -6.377257347106934
    3. 'for' → logprob: -7.752257347106934
    4. '<|end|>' → logprob: -10.002257347106934
    5. '
' → logprob: -10.377257347106934
    6. '#' → logprob: -10.627257347106934
    7. '```' → logprob: -11.377257347106934
    8. 'class' → logprob: -12.502257347106934
    9. '@dat' → logprob: -12.502257347106934
    10. 'import' → logprob: -13.002257347106934

Token 1792: ' main' (ID: 2758)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.0041166311129927635
    2. ' main' → logprob: -5.504116535186768
    3. 'def' → logprob: -10.504117012023926
    4. 'run' → logprob: -11.504117012023926
    5. ' run' → logprob: -14.254117012023926
    6. '_main' → logprob: -18.25411605834961
    7. 'solve' → logprob: -18.25411605834961
    8. ' def' → logprob: -19.37911605834961
    9. 'parse' → logprob: -20.00411605834961
    10. 'read' → logprob: -20.25411605834961

Token 1793: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.02324967086315155
    2. '():
' → logprob: -3.773249626159668
    3. '()' → logprob: -12.773249626159668
    4. '():
' → logprob: -14.273249626159668
    5. ' ():' → logprob: -14.398249626159668
    6. '():

' → logprob: -15.898249626159668
    7. 'def' → logprob: -16.773250579833984
    8. '()>' → logprob: -17.773250579833984
    9. '();' → logprob: -18.898250579833984
    10. '_' → logprob: -19.023250579833984

Token 1794: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.014686614274978638
    2. 'datasets' → logprob: -4.264686584472656
    3. ' datasets' → logprob: -8.889686584472656
    4. 'data' → logprob: -9.014686584472656
    5. 'def' → logprob: -9.139686584472656
    6. '```' → logprob: -9.764686584472656
    7. 'import' → logprob: -10.014686584472656
    8. '
' → logprob: -10.764686584472656
    9. '    
' → logprob: -11.264686584472656
    10. 'n' → logprob: -12.264686584472656

Token 1795: ' datasets' (ID: 57711)
  Prédit: 'datasets'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'datasets' (adapté à ' datasets') → logprob: -0.0002707529056351632
    2. '   ' → logprob: -8.25027084350586
    3. 'data' → logprob: -12.25027084350586
    4. ' datasets' → logprob: -12.50027084350586
    5. 'import' → logprob: -14.00027084350586
    6. 'dataset' → logprob: -16.62527084350586
    7. 'datas' → logprob: -16.62527084350586
    8. 'for' → logprob: -16.87527084350586
    9. 'test' → logprob: -18.87527084350586
    10. 'tests' → logprob: -19.00027084350586

Token 1796: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.7446252703666687
    2. '   ' → logprob: -1.2446253299713135
    3. ':' → logprob: -1.4946253299713135
    4. '=' → logprob: -5.119625091552734
    5. '():' → logprob: -5.994625091552734
    6. '()' → logprob: -6.869625091552734
    7. '():
' → logprob: -6.869625091552734
    8. '       ' → logprob: -7.869625091552734
    9. ':
' → logprob: -7.869625091552734
    10. '    
' → logprob: -8.494625091552734

Token 1797: ' parse' (ID: 8420)
  Prédit: 'parse'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'parse' → logprob: -9.615255839889869e-05
    2. ' parse' → logprob: -9.250096321105957
    3. '(parse' → logprob: -18.75009536743164
    4. '	parse' → logprob: -19.25009536743164
    5. '.parse' → logprob: -20.75009536743164
    6. '=parse' → logprob: -21.00009536743164
    7. 'parser' → logprob: -21.50009536743164
    8. '[]' → logprob: -22.00009536743164
    9. '[]
' → logprob: -22.37509536743164
    10. '   ' → logprob: -23.12509536743164

Token 1798: '_input' (ID: 12507)
  Prédit: '_input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_input' → logprob: -0.0003107943630311638
    2. 'input' → logprob: -8.125310897827148
    3. 'Input' → logprob: -12.625310897827148
    4. '(_' → logprob: -13.000310897827148
    5. '(input' → logprob: -13.000310897827148
    6. 'datasets' → logprob: -13.250310897827148
    7. 'd' → logprob: -13.375310897827148
    8. '(' → logprob: -13.750310897827148
    9. '
' → logprob: -14.500310897827148
    10. '_inputs' → logprob: -15.000310897827148

Token 1799: '()
' (ID: 1234)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06224808841943741
    2. 'for' → logprob: -2.8122479915618896
    3. ' for' → logprob: -8.187248229980469
    4. '
' → logprob: -13.312248229980469
    5. '    
' → logprob: -15.437248229980469
    6. '```' → logprob: -15.562248229980469
    7. '<|end|>' → logprob: -16.43724822998047
    8. '	for' → logprob: -16.93724822998047
    9. 'def' → logprob: -18.18724822998047
    10. '       ' → logprob: -18.18724822998047

Token 1800: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.38696688413619995
    2. 'for' → logprob: -1.1369669437408447
    3. ' for' → logprob: -9.261966705322266
    4. '```' → logprob: -14.386966705322266
    5. '	for' → logprob: -15.136966705322266
    6. '
' → logprob: -16.761966705322266
    7. '       ' → logprob: -18.261966705322266
    8. '    
' → logprob: -18.636966705322266
    9. ' ' → logprob: -19.511966705322266
    10. '<|end|>' → logprob: -20.011966705322266

Token 1801: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.0015477105043828487
    2. '   ' → logprob: -6.501547813415527
    3. ' for' → logprob: -10.001547813415527
    4. '```' → logprob: -16.62654685974121
    5. '
' → logprob: -17.62654685974121
    6. '``' → logprob: -19.50154685974121
    7. ' ' → logprob: -19.62654685974121
    8. '	for' → logprob: -19.75154685974121
    9. '    
' → logprob: -20.25154685974121
    10. '  ' → logprob: -20.75154685974121

Token 1802: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.01035939808934927
    2. ' n' → logprob: -4.760359287261963
    3. '   ' → logprob: -6.635359287261963
    4. '(n' → logprob: -7.885359287261963
    5. ' (' → logprob: -10.260359764099121
    6. 'dataset' → logprob: -11.885359764099121
    7. '_n' → logprob: -12.260359764099121
    8. '(' → logprob: -13.385359764099121
    9. 'data' → logprob: -13.510359764099121
    10. '```' → logprob: -13.760359764099121

Token 1803: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0801105722784996
    2. ',d' → logprob: -2.580110549926758
    3. ',n' → logprob: -7.955110549926758
    4. 'in' → logprob: -7.955110549926758
    5. ' in' → logprob: -8.080110549926758
    6. ' ,' → logprob: -9.330110549926758
    7. ',data' → logprob: -9.705110549926758
    8. ',(' → logprob: -10.705110549926758
    9. '   ' → logprob: -11.080110549926758
    10. 'dataset' → logprob: -12.580110549926758

Token 1804: ' grid' (ID: 10586)
  Prédit: 'grid'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'grid' → logprob: -0.0002614550176076591
    2. ' grid' → logprob: -8.250261306762695
    3. '   ' → logprob: -15.875261306762695
    4. '	grid' → logprob: -18.000261306762695
    5. '(grid' → logprob: -19.125261306762695
    6. '.grid' → logprob: -19.375261306762695
    7. '_grid' → logprob: -20.000261306762695
    8. '
' → logprob: -20.250261306762695
    9. 'graph' → logprob: -20.375261306762695
    10. '  ' → logprob: -20.625261306762695

Token 1805: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -9.341087570646778e-05
    2. ' ,' → logprob: -9.875093460083008
    3. ',s' → logprob: -10.125093460083008
    4. '   ' → logprob: -13.375093460083008
    5. '_,' → logprob: -16.375093460083008
    6. 'scores' → logprob: -16.750093460083008
    7. ',
' → logprob: -17.375093460083008
    8. '‌,' → logprob: -17.625093460083008
    9. ',n' → logprob: -18.375093460083008
    10. '  ' → logprob: -18.750093460083008

Token 1806: ' scores' (ID: 18923)
  Prédit: 'scores'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'scores' → logprob: -0.0005668530357070267
    2. 'block' → logprob: -7.6255669593811035
    3. ' scores' → logprob: -9.875566482543945
    4. 'score' → logprob: -10.750566482543945
    5. '   ' → logprob: -12.500566482543945
    6. ' block' → logprob: -14.625566482543945
    7. '(scores' → logprob: -14.875566482543945
    8. '
' → logprob: -15.000566482543945
    9. 'sc' → logprob: -15.000566482543945
    10. '_scores' → logprob: -15.625566482543945

Token 1807: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.014265522360801697
    2. 'in' → logprob: -4.264265537261963
    3. '   ' → logprob: -9.514265060424805
    4. '       ' → logprob: -11.514265060424805
    5. ',' → logprob: -12.014265060424805
    6. ':
' → logprob: -12.514265060424805
    7. ':' → logprob: -12.514265060424805
    8. '	in' → logprob: -13.764265060424805
    9. '    ' → logprob: -14.014265060424805
    10. '_in' → logprob: -14.264265060424805

Token 1808: ' datasets' (ID: 57711)
  Prédit: 'datasets'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'datasets' → logprob: -0.0001831565605243668
    2. ' datasets' → logprob: -9.12518310546875
    3. '
' → logprob: -10.00018310546875
    4. '   ' → logprob: -11.62518310546875
    5. 'scores' → logprob: -11.87518310546875
    6. 'data' → logprob: -13.00018310546875
    7. 'dataset' → logprob: -13.25018310546875
    8. '[' → logprob: -13.37518310546875
    9. ' ' → logprob: -13.50018310546875
    10. '[
' → logprob: -13.50018310546875

Token 1809: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.32646653056144714
    2. ':' → logprob: -1.5764665603637695
    3. '       ' → logprob: -2.7014665603637695
    4. '   ' → logprob: -5.8264665603637695
    5. ',' → logprob: -6.7014665603637695
    6. '):
' → logprob: -7.8264665603637695
    7. '():
' → logprob: -9.57646656036377
    8. ':

' → logprob: -11.07646656036377
    9. '        
' → logprob: -11.32646656036377
    10. '<|end|>' → logprob: -11.45146656036377

Token 1810: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.28147149085998535
    2. '       ' → logprob: -1.4064714908599854
    3. '```' → logprob: -8.156471252441406
    4. '`' → logprob: -11.406471252441406
    5. '    
' → logprob: -11.656471252441406
    6. '        
' → logprob: -12.281471252441406
    7. '
' → logprob: -12.781471252441406
    8. '<|end|>' → logprob: -13.031471252441406
    9. '``' → logprob: -13.781471252441406
    10. '           ' → logprob: -14.656471252441406

Token 1811: ' block' (ID: 4355)
  Prédit: 'block'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'block' (adapté à ' block') → logprob: -0.03539677709341049
    2. '       ' → logprob: -3.4103968143463135
    3. 'board' → logprob: -6.660396575927734
    4. '   ' → logprob: -8.410396575927734
    5. 'b' → logprob: -9.535396575927734
    6. ' block' → logprob: -9.660396575927734
    7. 'bt' → logprob: -10.160396575927734
    8. 'score' → logprob: -10.535396575927734
    9. 'blocks' → logprob: -11.035396575927734
    10. '	block' → logprob: -11.910396575927734

Token 1812: '_scores' (ID: 63345)
  Prédit: '_scores'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_scores' → logprob: -5.431207682704553e-05
    2. '_type' → logprob: -10.125054359436035
    3. '_types' → logprob: -12.375054359436035
    4. 'scores' → logprob: -12.625054359436035
    5. 'type' → logprob: -12.875054359436035
    6. '   ' → logprob: -12.875054359436035
    7. '_score' → logprob: -14.625054359436035
    8. '_sizes' → logprob: -14.875054359436035
    9. '       ' → logprob: -15.750054359436035
    10. '_sc' → logprob: -16.00005340576172

Token 1813: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.7083847522735596
    2. ' =' → logprob: -0.7083847522735596
    3. '_dict' → logprob: -4.2083845138549805
    4. '_map' → logprob: -8.83338451385498
    5. 'dict' → logprob: -9.95838451385498
    6. '   ' → logprob: -10.33338451385498
    7. '=dict' → logprob: -11.33338451385498
    8. ':' → logprob: -12.08338451385498
    9. '_mapping' → logprob: -13.33338451385498
    10. 'Dict' → logprob: -13.58338451385498

Token 1814: ' {' (ID: 354)
  Prédit: '{'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '{' → logprob: -0.0002622894535306841
    2. '{}
' → logprob: -8.500262260437012
    3. '{id' → logprob: -10.500262260437012
    4. '{i' → logprob: -10.750262260437012
    5. '{s' → logprob: -12.625262260437012
    6. '{}' → logprob: -12.750262260437012
    7. 'dict' → logprob: -13.875262260437012
    8. '{x' → logprob: -14.125262260437012
    9. '{
' → logprob: -14.375262260437012
    10. ' {' → logprob: -14.750262260437012

Token 1815: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -2.057743949990254e-05
    2. 'id' → logprob: -12.000020980834961
    3. ' i' → logprob: -12.125020980834961
    4. '(i' → logprob: -12.375020980834961
    5. 'k' → logprob: -12.625020980834961
    6. 'idx' → logprob: -13.875020980834961
    7. 'block' → logprob: -16.12502098083496
    8. 'bid' → logprob: -16.37502098083496
    9. '   ' → logprob: -16.62502098083496
    10. 'tid' → logprob: -17.25002098083496

Token 1816: '+' (ID: 10)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.5288496613502502
    2. '+' → logprob: -0.9038496613502502
    3. ':i' → logprob: -5.5288496017456055
    4. ' +' → logprob: -6.6538496017456055
    5. ' :' → logprob: -8.278849601745605
    6. ':block' → logprob: -9.278849601745605
    7. 'for' → logprob: -10.403849601745605
    8. 'i' → logprob: -11.028849601745605
    9. '1' → logprob: -11.153849601745605
    10. '+i' → logprob: -11.278849601745605

Token 1817: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00018518301658332348
    2. ' ' → logprob: -8.625185012817383
    3. '   ' → logprob: -12.625185012817383
    4. '
' → logprob: -13.875185012817383
    5. '0' → logprob: -14.125185012817383
    6. '  ' → logprob: -16.000185012817383
    7. '```' → logprob: -16.250185012817383
    8. '=' → logprob: -16.375185012817383
    9. ':' → logprob: -16.625185012817383
    10. ',' → logprob: -16.625185012817383

Token 1818: ':s' (ID: 31023)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.00033665422233752906
    2. ':s' → logprob: -8.125336647033691
    3. ' :' → logprob: -10.500336647033691
    4. ':i' → logprob: -11.625336647033691
    5. ':block' → logprob: -12.500336647033691
    6. '(scores' → logprob: -15.375336647033691
    7. ':n' → logprob: -16.000337600708008
    8. 'scores' → logprob: -17.250337600708008
    9. ':
' → logprob: -17.625337600708008
    10. '   ' → logprob: -17.750337600708008

Token 1819: 'cores' (ID: 12071)
  Prédit: 'cores'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cores' → logprob: -0.2543015480041504
    2. 'scores' → logprob: -1.5043015480041504
    3. '(scores' → logprob: -6.62930154800415
    4. 'core' → logprob: -7.50430154800415
    5. ' scores' → logprob: -7.75430154800415
    6. '   ' → logprob: -11.254301071166992
    7. 'for' → logprob: -11.254301071166992
    8. '_scores' → logprob: -11.379301071166992
    9. 's' → logprob: -11.879301071166992
    10. 'score' → logprob: -12.254301071166992

Token 1820: '[i' (ID: 1768)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.35180211067199707
    2. 'for' → logprob: -1.226802110671997
    3. '[i' → logprob: -5.851801872253418
    4. '}' → logprob: -8.726801872253418
    5. '       ' → logprob: -9.601801872253418
    6. '<|end|>' → logprob: -9.601801872253418
    7. '	for' → logprob: -10.351801872253418
    8. '
' → logprob: -10.601801872253418
    9. ' i' → logprob: -10.851801872253418
    10. 'i' → logprob: -11.226801872253418

Token 1821: ']' (ID: 60)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.033782511949539185
    2. 'for' → logprob: -3.408782482147217
    3. '       ' → logprob: -9.158782958984375
    4. '           ' → logprob: -11.908782958984375
    5. '}' → logprob: -12.158782958984375
    6. '   ' → logprob: -12.283782958984375
    7. '        ' → logprob: -12.408782958984375
    8. '	for' → logprob: -12.533782958984375
    9. ',' → logprob: -13.283782958984375
    10. '
' → logprob: -13.783782958984375

Token 1822: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.03240353986620903
    2. 'for' → logprob: -3.5324034690856934
    3. '       ' → logprob: -6.407403469085693
    4. '           ' → logprob: -7.157403469085693
    5. '        ' → logprob: -9.532403945922852
    6. '
' → logprob: -10.157403945922852
    7. '	for' → logprob: -10.532403945922852
    8. ',' → logprob: -11.282403945922852
    9. '          ' → logprob: -11.282403945922852
    10. '         ' → logprob: -11.657403945922852

Token 1823: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.0040785204619169235
    2. ' i' → logprob: -5.504078388214111
    3. '	i' → logprob: -16.629077911376953
    4. '
' → logprob: -19.879077911376953
    5. '_i' → logprob: -20.754077911376953
    6. ')i' → logprob: -21.004077911376953
    7. '(i' → logprob: -21.629077911376953
    8. ',i' → logprob: -21.754077911376953
    9. '<|end|>' → logprob: -21.879077911376953
    10. ' ' → logprob: -22.004077911376953

Token 1824: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.11334557086229324
    2. ' in' → logprob: -2.7383456230163574
    3. 'i' → logprob: -3.2383456230163574
    4. ' i' → logprob: -6.488345623016357
    5. 'range' → logprob: -6.488345623016357
    6. ' range' → logprob: -8.4883451461792
    7. '
' → logprob: -13.6133451461792
    8. ' ' → logprob: -14.1133451461792
    9. '0' → logprob: -14.7383451461792
    10. ',' → logprob: -14.7383451461792

Token 1825: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -4.5491004129871726e-05
    2. ' range' → logprob: -10.000045776367188
    3. '(range' → logprob: -20.000045776367188
    4. '	range' → logprob: -21.375045776367188
    5. '
' → logprob: -21.500045776367188
    6. '_range' → logprob: -25.000045776367188
    7. 'rang' → logprob: -25.500045776367188
    8. '.range' → logprob: -25.500045776367188
    9. '0' → logprob: -25.875045776367188
    10. ' ' → logprob: -26.000045776367188

Token 1826: '(' (ID: 7)
  Prédit: '5'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '5' → logprob: -0.04868638142943382
    2. 'len' → logprob: -3.0486862659454346
    3. '(len' → logprob: -9.298686027526855
    4. ' len' → logprob: -12.423686027526855
    5. '(' → logprob: -12.923686027526855
    6. '   ' → logprob: -14.548686027526855
    7. '```' → logprob: -16.548686981201172
    8. ' ' → logprob: -16.798686981201172
    9. 'self' → logprob: -17.173686981201172
    10. 'length' → logprob: -17.298686981201172

Token 1827: '5' (ID: 20)
  Prédit: '5'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '5' → logprob: -0.10021626949310303
    2. 'len' → logprob: -2.3502163887023926
    3. '(len' → logprob: -12.225215911865234
    4. ' len' → logprob: -12.850215911865234
    5. '4' → logprob: -14.475215911865234
    6. '10' → logprob: -15.100215911865234
    7. 'max' → logprob: -15.475215911865234
    8. 'self' → logprob: -15.912715911865234
    9. '3' → logprob: -15.975215911865234
    10. '6' → logprob: -16.037715911865234

Token 1828: ')}
' (ID: 19324)
  Prédit: '}'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '}' → logprob: -0.07245606184005737
    2. ')}' → logprob: -2.697456121444702
    3. ')' → logprob: -6.572455883026123
    4. '       ' → logprob: -7.322455883026123
    5. '}
' → logprob: -8.072456359863281
    6. ' }' → logprob: -9.572456359863281
    7. ')}
' → logprob: -11.072456359863281
    8. ']}' → logprob: -11.197456359863281
    9. '```' → logprob: -11.572456359863281
    10. '   ' → logprob: -11.697456359863281

Token 1829: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -3.7697225252486533e-06
    2. '   ' → logprob: -13.625003814697266
    3. '<|end|>' → logprob: -14.500003814697266
    4. '           ' → logprob: -14.625003814697266
    5. '        
' → logprob: -14.875003814697266
    6. '
' → logprob: -14.875003814697266
    7. 'board' → logprob: -15.375003814697266
    8. '      ' → logprob: -15.875003814697266
    9. ',' → logprob: -16.375003814697266
    10. 'b' → logprob: -16.500003814697266

Token 1830: ' board' (ID: 6796)
  Prédit: 'board'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'board' (adapté à ' board') → logprob: -0.00029041420202702284
    2. ' board' → logprob: -8.625290870666504
    3. '       ' → logprob: -9.875290870666504
    4. 'b' → logprob: -10.000290870666504
    5. 'game' → logprob: -12.000290870666504
    6. 'block' → logprob: -12.500290870666504
    7. '   ' → logprob: -12.875290870666504
    8. '	board' → logprob: -14.375290870666504
    9. 'initial' → logprob: -15.250290870666504
    10. '
' → logprob: -15.375290870666504

Token 1831: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.03804183006286621
    2. '=' → logprob: -3.288041830062866
    3. '   ' → logprob: -14.913042068481445
    4. '=
' → logprob: -17.913042068481445
    5. ' ' → logprob: -18.163042068481445
    6. ' =
' → logprob: -18.413042068481445
    7. '    ' → logprob: -19.163042068481445
    8. '  ' → logprob: -19.288042068481445
    9. ',' → logprob: -19.538042068481445
    10. '	' → logprob: -19.663042068481445

Token 1832: ' Board' (ID: 10837)
  Prédit: 'Board'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Board' → logprob: -0.0002613358374219388
    2. ' Board' → logprob: -8.250261306762695
    3. 'Block' → logprob: -19.875261306762695
    4. '(Board' → logprob: -19.875261306762695
    5. '   ' → logprob: -20.625261306762695
    6. '       ' → logprob: -22.375261306762695
    7. '.Board' → logprob: -22.625261306762695
    8. '_board' → logprob: -23.000261306762695
    9. 'board' → logprob: -23.000261306762695
    10. 'BOARD' → logprob: -24.000261306762695

Token 1833: '(grid' (ID: 51818)
  Prédit: '(grid'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(grid' → logprob: -7.941850526549388e-06
    2. 'grid' → logprob: -11.750007629394531
    3. '(' → logprob: -17.25000762939453
    4. '(board' → logprob: -17.87500762939453
    5. ' grid' → logprob: -20.25000762939453
    6. '.grid' → logprob: -20.62500762939453
    7. '(
' → logprob: -21.00000762939453
    8. ' (' → logprob: -21.25000762939453
    9. '(Grid' → logprob: -21.25000762939453
    10. '(graph' → logprob: -21.37500762939453

Token 1834: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -2.451116051815916e-05
    2. ',s' → logprob: -11.125024795532227
    3. ' ,' → logprob: -12.375024795532227
    4. '=' → logprob: -12.750024795532227
    5. 'scores' → logprob: -14.250024795532227
    6. ',b' → logprob: -14.250024795532227
    7. '   ' → logprob: -14.250024795532227
    8. ')' → logprob: -15.250024795532227
    9. ',
' → logprob: -15.625024795532227
    10. '  ' → logprob: -17.250024795532227

Token 1835: ' block' (ID: 4355)
  Prédit: 'block'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'block' → logprob: -2.4987974029500037e-05
    2. ' block' → logprob: -10.625024795532227
    3. '           ' → logprob: -15.000024795532227
    4. '       ' → logprob: -16.125024795532227
    5. '               ' → logprob: -16.625024795532227
    6. '   ' → logprob: -17.125024795532227
    7. '{' → logprob: -17.625024795532227
    8. '	block' → logprob: -18.000024795532227
    9. '          ' → logprob: -18.125024795532227
    10. 'bloc' → logprob: -18.250024795532227

Token 1836: '_scores' (ID: 63345)
  Prédit: '_scores'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_scores' → logprob: -6.630610641877865e-06
    2. 'scores' → logprob: -12.125006675720215
    3. 'block' → logprob: -14.000006675720215
    4. 'type' → logprob: -15.750006675720215
    5. '{' → logprob: -16.1250057220459
    6. 's' → logprob: -18.2500057220459
    7. 'Scores' → logprob: -18.8750057220459
    8. '
' → logprob: -19.0000057220459
    9. '   ' → logprob: -19.1250057220459
    10. ')' → logprob: -19.6250057220459

Token 1837: ')
' (ID: 446)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.07181388139724731
    2. ')' → logprob: -2.6968138217926025
    3. ')
' → logprob: -6.321814060211182
    4. ',' → logprob: -9.571813583374023
    5. '<|end|>' → logprob: -12.821813583374023
    6. '   ' → logprob: -12.946813583374023
    7. '           ' → logprob: -13.946813583374023
    8. '),' → logprob: -14.321813583374023
    9. '
' → logprob: -14.446813583374023
    10. ')
' → logprob: -14.696813583374023

Token 1838: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.05890849977731705
    2. '   ' → logprob: -3.058908462524414
    3. 'planner' → logprob: -4.683908462524414
    4. ' planner' → logprob: -7.058908462524414
    5. 'plan' → logprob: -8.808908462524414
    6. '           ' → logprob: -12.308908462524414
    7. 'pl' → logprob: -12.308908462524414
    8. 'solver' → logprob: -12.933908462524414
    9. '
' → logprob: -13.683908462524414
    10. '```' → logprob: -14.558908462524414

Token 1839: ' planner' (ID: 66791)
  Prédit: 'planner'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'planner' (adapté à ' planner') → logprob: -1.0683535037969705e-05
    2. ' planner' → logprob: -12.37501049041748
    3. 'plan' → logprob: -12.87501049041748
    4. 'solver' → logprob: -13.00001049041748
    5. '   ' → logprob: -13.62501049041748
    6. 'game' → logprob: -15.50001049041748
    7. '       ' → logprob: -17.750011444091797
    8. 'pl' → logprob: -18.250011444091797
    9. 'Planner' → logprob: -18.625011444091797
    10. '    
' → logprob: -18.625011444091797

Token 1840: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.004632572643458843
    2. '=' → logprob: -5.379632472991943
    3. '.solve' → logprob: -11.629632949829102
    4. '   ' → logprob: -13.004632949829102
    5. '       ' → logprob: -13.879632949829102
    6. '=find' → logprob: -15.879632949829102
    7. '.find' → logprob: -17.0046329498291
    8. ' ' → logprob: -17.5046329498291
    9. '    ' → logprob: -17.6296329498291
    10. '.' → logprob: -17.6296329498291

Token 1841: ' Game' (ID: 7022)
  Prédit: 'Game'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Game' → logprob: -0.0007099286303855479
    2. ' Game' → logprob: -7.2507100105285645
    3. '	Game' → logprob: -19.625709533691406
    4. '(Game' → logprob: -20.125709533691406
    5. '_Game' → logprob: -20.625709533691406
    6. '<Game' → logprob: -21.625709533691406
    7. '.Game' → logprob: -21.625709533691406
    8. '   ' → logprob: -24.375709533691406
    9. 'Gameplay' → logprob: -24.500709533691406
    10. '_game' → logprob: -25.125709533691406

Token 1842: 'Move' (ID: 12707)
  Prédit: 'Move'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Move' → logprob: 0.0
    2. 'Planner' → logprob: -19.0
    3. ' Move' → logprob: -19.0
    4. '_Move' → logprob: -19.125
    5. '_move' → logprob: -19.25
    6. 'Moves' → logprob: -19.5
    7. 'Mover' → logprob: -19.5
    8. '.Move' → logprob: -20.125
    9. 'move' → logprob: -20.25
    10. '
' → logprob: -20.25

Token 1843: 'Planner' (ID: 120933)
  Prédit: 'Planner'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Planner' → logprob: -1.759734732331708e-05
    2. 'planner' → logprob: -11.000017166137695
    3. 'Plan' → logprob: -15.000017166137695
    4. ' Planner' → logprob: -15.500017166137695
    5. 'Mover' → logprob: -15.625017166137695
    6. ' planner' → logprob: -16.375017166137695
    7. 'Pl' → logprob: -18.625017166137695
    8. '
' → logprob: -19.125017166137695
    9. 'Solver' → logprob: -19.625017166137695
    10. 'Player' → logprob: -20.250017166137695

Token 1844: '(board' (ID: 41261)
  Prédit: '(board'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(board' → logprob: -0.00020950057660229504
    2. 'board' → logprob: -8.50020980834961
    3. '       ' → logprob: -12.87520980834961
    4. '(' → logprob: -13.62520980834961
    5. '(pl' → logprob: -14.12520980834961
    6. '(Board' → logprob: -14.12520980834961
    7. '   ' → logprob: -15.62520980834961
    8. '	board' → logprob: -15.75020980834961
    9. '(plan' → logprob: -15.87520980834961
    10. 'planner' → logprob: -16.12520980834961

Token 1845: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0002087853499688208
    2. ',n' → logprob: -8.750208854675293
    3. '(pl' → logprob: -10.750208854675293
    4. '       ' → logprob: -11.250208854675293
    5. 'pl' → logprob: -11.875208854675293
    6. ' ,' → logprob: -12.500208854675293
    7. '(board' → logprob: -13.375208854675293
    8. 'planner' → logprob: -13.750208854675293
    9. '(n' → logprob: -14.375208854675293
    10. 'board' → logprob: -14.750208854675293

Token 1846: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.00033546582562848926
    2. ' n' → logprob: -8.000335693359375
    3. ')n' → logprob: -18.125335693359375
    4. '	n' → logprob: -18.375335693359375
    5. '   ' → logprob: -19.875335693359375
    6. '_n' → logprob: -20.625335693359375
    7. '       ' → logprob: -21.000335693359375
    8. '(n' → logprob: -21.375335693359375
    9. '$n' → logprob: -21.750335693359375
    10. '?n' → logprob: -22.125335693359375

Token 1847: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.5850176215171814
    2. ')' → logprob: -0.8350176215171814
    3. '       ' → logprob: -4.710017681121826
    4. ')
' → logprob: -10.585017204284668
    5. '   ' → logprob: -12.335017204284668
    6. '<|end|>' → logprob: -13.960017204284668
    7. ')

' → logprob: -14.835017204284668
    8. '),' → logprob: -15.335017204284668
    9. '<|end|>' → logprob: -15.460017204284668
    10. ' )
' → logprob: -15.835017204284668

Token 1848: '       ' (ID: 309)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.42078015208244324
    2. '       ' → logprob: -1.4207801818847656
    3. 'score' → logprob: -2.5457801818847656
    4. 'print' → logprob: -3.7957801818847656
    5. 'best' → logprob: -7.545780181884766
    6. ' result' → logprob: -8.545780181884766
    7. 'res' → logprob: -8.795780181884766
    8. '```' → logprob: -9.545780181884766
    9. '   ' → logprob: -9.920780181884766
    10. 'answer' → logprob: -10.795780181884766

Token 1849: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.26970165967941284
    2. 'result' → logprob: -1.7697017192840576
    3. 'best' → logprob: -2.7697017192840576
    4. 'res' → logprob: -5.7697014808654785
    5. 'ans' → logprob: -9.144701957702637
    6. 'score' → logprob: -9.394701957702637
    7. 'answer' → logprob: -11.269701957702637
    8. '
' → logprob: -13.394701957702637
    9. 'max' → logprob: -13.644701957702637
    10. ' print' → logprob: -14.644701957702637

Token 1850: '(pl' (ID: 81738)
  Prédit: '(pl'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(pl' → logprob: -1.9361264946837764e-07
    2. 'planner' → logprob: -16.5
    3. '(plan' → logprob: -19.0
    4. '(' → logprob: -19.0
    5. '(p' → logprob: -20.625
    6. 'pl' → logprob: -21.125
    7. '	pl' → logprob: -21.5
    8. '(pr' → logprob: -22.25
    9. '((' → logprob: -22.625
    10. ' planner' → logprob: -22.875

Token 1851: 'anner' (ID: 6237)
  Prédit: 'anner'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'anner' → logprob: -0.046035513281822205
    2. 'an' → logprob: -3.2960355281829834
    3. 'planner' → logprob: -5.046035289764404
    4. 'aner' → logprob: -6.671035289764404
    5. ' planner' → logprob: -8.796035766601562
    6. '(pl' → logprob: -10.046035766601562
    7. '(' → logprob: -10.546035766601562
    8. 'plan' → logprob: -11.921035766601562
    9. 'ann' → logprob: -11.921035766601562
    10. '(plan' → logprob: -12.421035766601562

Token 1852: '.solve' (ID: 151960)
  Prédit: '.solve'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.solve' → logprob: -0.31385692954063416
    2. '.find' → logprob: -1.5638569593429565
    3. '.best' → logprob: -2.813856840133667
    4. 'best' → logprob: -9.813857078552246
    5. ').' → logprob: -12.063857078552246
    6. 'find' → logprob: -12.563857078552246
    7. ' .' → logprob: -12.563857078552246
    8. 'solve' → logprob: -12.813857078552246
    9. '.' → logprob: -13.188857078552246
    10. '.sol' → logprob: -13.813857078552246

Token 1853: '())

' (ID: 27654)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '())' → logprob: -4.620622712536715e-05
    2. '()' → logprob: -10.000045776367188
    3. '())
' → logprob: -14.625045776367188
    4. ' ())' → logprob: -16.000045776367188
    5. ')' → logprob: -16.625045776367188
    6. '(' → logprob: -19.125045776367188
    7. '()))' → logprob: -19.500045776367188
    8. '(),' → logprob: -19.625045776367188
    9. '();)' → logprob: -19.625045776367188
    10. '()
' → logprob: -19.750045776367188

Token 1854: 'if' (ID: 366)
  Prédit: 'if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.18556489050388336
    2. '```' → logprob: -2.1855649948120117
    3. '<|end|>' → logprob: -3.4355649948120117
    4. '#' → logprob: -4.185564994812012
    5. ' if' → logprob: -4.810564994812012
    6. '
' → logprob: -7.685564994812012
    7. '__' → logprob: -8.060564994812012
    8. ')' → logprob: -9.060564994812012
    9. '``' → logprob: -9.435564994812012
    10. '<|end|>' → logprob: -9.560564994812012

Token 1855: ' __' (ID: 2516)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.0003410647332202643
    2. ' __' → logprob: -8.000341415405273
    3. 'if' → logprob: -12.250341415405273
    4. 'name' → logprob: -14.125341415405273
    5. '```' → logprob: -16.500341415405273
    6. '.__' → logprob: -17.250341415405273
    7. '_name' → logprob: -17.250341415405273
    8. '/__' → logprob: -17.875341415405273
    9. '___' → logprob: -18.375341415405273
    10. '(__' → logprob: -18.625341415405273

Token 1856: 'name' (ID: 897)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.014349774457514286
    2. '==' → logprob: -4.889349937438965
    3. ' ==' → logprob: -5.389349937438965
    4. 'name' → logprob: -6.514349937438965
    5. 'if' → logprob: -8.389349937438965
    6. '=="' → logprob: -8.514349937438965
    7. ' __' → logprob: -9.764349937438965
    8. '=='' → logprob: -10.014349937438965
    9. '[' → logprob: -10.514349937438965
    10. 'main' → logprob: -10.764349937438965

Token 1857: '__' (ID: 771)
  Prédit: '__'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -7.465036105713807e-06
    2. '==' → logprob: -12.375007629394531
    3. '__.__' → logprob: -13.000007629394531
    4. '__.' → logprob: -14.625007629394531
    5. ' ==' → logprob: -15.125007629394531
    6. '___' → logprob: -16.50000762939453
    7. '__
' → logprob: -16.87500762939453
    8. 'name' → logprob: -17.00000762939453
    9. '____' → logprob: -17.25000762939453
    10. '=="' → logprob: -17.62500762939453

Token 1858: ' ==' (ID: 951)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.1631656438112259
    2. '==' → logprob: -1.9131656885147095
    3. ' ==' → logprob: -6.78816556930542
    4. '=='' → logprob: -6.91316556930542
    5. '=="' → logprob: -7.16316556930542
    6. '=' → logprob: -11.663166046142578
    7. '===' → logprob: -12.038166046142578
    8. '__.__' → logprob: -12.288166046142578
    9. '==
' → logprob: -12.413166046142578
    10. '[' → logprob: -12.413166046142578

Token 1859: ' '__' (ID: 28278)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.0788951888680458
    2. '"' → logprob: -2.578895092010498
    3. '__' → logprob: -12.203895568847656
    4. ' '__' → logprob: -15.578895568847656
    5. ' "__' → logprob: -16.203895568847656
    6. ''name' → logprob: -17.453895568847656
    7. '('__' → logprob: -17.703895568847656
    8. ''post' → logprob: -18.078895568847656
    9. ''"' → logprob: -18.578895568847656
    10. ''default' → logprob: -18.703895568847656

Token 1860: 'main' (ID: 7731)
  Prédit: 'main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -8.137130498653278e-05
    2. '__' → logprob: -9.500081062316895
    3. 'name' → logprob: -12.000081062316895
    4. 'm' → logprob: -16.50008201599121
    5. 'built' → logprob: -17.12508201599121
    6. ' main' → logprob: -17.50008201599121
    7. '_main' → logprob: -17.62508201599121
    8. '__.' → logprob: -18.37508201599121
    9. 'ma' → logprob: -18.37508201599121
    10. '7' → logprob: -18.62508201599121

Token 1861: '__':
' (ID: 39314)
  Prédit: '__':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__':
' → logprob: -0.3133217394351959
    2. '__' → logprob: -1.3133217096328735
    3. '__":
' → logprob: -10.438322067260742
    4. '_' → logprob: -11.313322067260742
    5. '__.' → logprob: -11.563322067260742
    6. '__:' → logprob: -12.813322067260742
    7. '('__' → logprob: -13.063322067260742
    8. '__.__' → logprob: -13.688322067260742
    9. '___' → logprob: -14.188322067260742
    10. '__('' → logprob: -14.313322067260742

Token 1862: '   ' (ID: 271)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.006228933110833168
    2. '   ' → logprob: -5.131228923797607
    3. '	main' → logprob: -8.881229400634766
    4. ' main' → logprob: -9.006229400634766
    5. '__' → logprob: -10.381229400634766
    6. '_main' → logprob: -13.006229400634766
    7. '(main' → logprob: -13.131229400634766
    8. 'import' → logprob: -13.881229400634766
    9. '```' → logprob: -13.881229400634766
    10. '    
' → logprob: -14.256229400634766

Token 1863: ' main' (ID: 2758)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' (adapté à ' main') → logprob: 0.0
    2. ' main' → logprob: -18.25
    3. '   ' → logprob: -19.5
    4. 'import' → logprob: -20.75
    5. '	main' → logprob: -21.625
    6. '_main' → logprob: -22.625
    7. '(main' → logprob: -24.75
    8. '.main' → logprob: -25.125
    9. '__' → logprob: -27.25
    10. 'Main' → logprob: -27.375

Token 1864: '()' (ID: 416)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 1862
Tokens correctement prédits (1ère position, stricte): 844
Tokens correctement prédits (1ère position, avec adaptation): 952
Tokens correctement prédits (top 10): 1614
Précision stricte (1ère position): 45.33%
Précision adaptée (1ère position): 51.13%
Précision (top 10): 86.68%
================================================================================
