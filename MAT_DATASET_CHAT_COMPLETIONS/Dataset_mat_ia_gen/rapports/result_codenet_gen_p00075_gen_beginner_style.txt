================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 17:10:03
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
import sys

for line in sys.stdin:
    line = line.strip()
    if line == "":
        break
    parts = line.split(",")
    s = int(parts[0])
    w = float(parts[1])
    h = float(parts[2])
    bmi = w / (h * h)
    if bmi >= 25:
        print(s)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'import' (ID: 561)
  → Token d'amorce (pas de prédiction)

Token 1: ' sys' (ID: 12228)
  → Token d'amorce (pas de prédiction)

Token 2: '

' (ID: 279)
  → Token d'amorce (pas de prédiction)

Token 3: 'for' (ID: 1938)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.06772785633802414
    2. '\n' → logprob: -3.44272780418396
    3. 'import' → logprob: -3.81772780418396
    4. '<|end|>' → logprob: -5.817728042602539
    5. '\' → logprob: -6.317728042602539
    6. 'newline' → logprob: -6.692728042602539
    7. ',' → logprob: -6.942728042602539
    8. '' → logprob: -7.442728042602539
    9. '
' → logprob: -7.692728042602539
    10. '<|end|>' → logprob: -7.692728042602539

Token 4: ' line' (ID: 2543)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.0005637573776766658
    2. '  ' → logprob: -7.750563621520996
    3. ' i' → logprob: -9.000563621520996
    4. '_' → logprob: -13.750563621520996
    5. ' space' → logprob: -13.875563621520996
    6. ' ```' → logprob: -14.000563621520996
    7. ' ‌' → logprob: -14.125563621520996
    8. ' )' → logprob: -14.250563621520996
    9. ' ' → logprob: -14.500563621520996
    10. ' ﻿' → logprob: -14.750563621520996

Token 5: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.11878649145364761
    2. 'in' → logprob: -2.493786573410034
    3. '[' → logprob: -3.993786573410034
    4. ':' → logprob: -5.118786334991455
    5. ' ' → logprob: -6.493786334991455
    6. '.' → logprob: -7.493786334991455
    7. '[:]' → logprob: -7.493786334991455
    8. '(' → logprob: -7.868786334991455
    9. '[]' → logprob: -8.368786811828613
    10. '  ' → logprob: -8.493786811828613

Token 6: ' sys' (ID: 12228)
  Prédit: ' sys'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sys' → logprob: -0.0622611939907074
    2. 'sys' → logprob: -2.8122611045837402
    3. '=sys' → logprob: -9.062261581420898
    4. ' ' → logprob: -10.062261581420898
    5. ' iter' → logprob: -10.562261581420898
    6. ' file' → logprob: -10.687261581420898
    7. '	sys' → logprob: -10.812261581420898
    8. '(sys' → logprob: -11.062261581420898
    9. ' open' → logprob: -11.812261581420898
    10. '```' → logprob: -11.937261581420898

Token 7: '.stdin' (ID: 93480)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.11120092123746872
    2. '.readline' → logprob: -2.3612008094787598
    3. '.stdin' → logprob: -4.98620080947876
    4. ' .' → logprob: -6.48620080947876
    5. ':' → logprob: -7.23620080947876
    6. '.stdout' → logprob: -7.48620080947876
    7. '.readlines' → logprob: -7.48620080947876
    8. '.argv' → logprob: -8.361201286315918
    9. '```' → logprob: -8.986201286315918
    10. '.:' → logprob: -9.236201286315918

Token 8: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -7.457669562427327e-05
    2. ':
' → logprob: -10.50007438659668
    3. ' :' → logprob: -11.37507438659668
    4. '[:]' → logprob: -11.37507438659668
    5. ':**' → logprob: -11.75007438659668
    6. '):' → logprob: -12.62507438659668
    7. '>:' → logprob: -12.87507438659668
    8. '':' → logprob: -13.25007438659668
    9. '():' → logprob: -13.37507438659668
    10. '.readline' → logprob: -13.75007438659668

Token 9: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0003065030323341489
    2. '   ' → logprob: -9.000306129455566
    3. 'print' → logprob: -9.625306129455566
    4. '    
' → logprob: -9.750306129455566
    5. ' print' → logprob: -10.750306129455566
    6. '```' → logprob: -11.500306129455566
    7. '.strip' → logprob: -12.250306129455566
    8. '\t' → logprob: -12.625306129455566
    9. ':' → logprob: -12.875306129455566
    10. '    ' → logprob: -13.125306129455566

Token 10: ' line' (ID: 2543)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.11841689050197601
    2. 'print' → logprob: -2.2434167861938477
    3. ' print' → logprob: -5.243416786193848
    4. '    ' → logprob: -8.993416786193848
    5. ' if' → logprob: -9.868416786193848
    6. 'pass' → logprob: -10.493416786193848
    7. '       ' → logprob: -10.618416786193848
    8. '```' → logprob: -10.868416786193848
    9. 'if' → logprob: -10.993416786193848
    10. ' pass' → logprob: -11.743416786193848

Token 11: ' =' (ID: 314)
  Prédit: '.strip'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.strip' → logprob: -0.14257529377937317
    2. '.' → logprob: -2.142575263977051
    3. '.rstrip' → logprob: -4.517575263977051
    4. '.split' → logprob: -5.767575263977051
    5. '.readline' → logprob: -8.01757526397705
    6. '=' → logprob: -8.39257526397705
    7. '<|end|>' → logprob: -8.51757526397705
    8. '.startswith' → logprob: -8.76757526397705
    9. ')' → logprob: -9.14257526397705
    10. '   ' → logprob: -9.51757526397705

Token 12: ' line' (ID: 2543)
  Prédit: ' line'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' line' → logprob: -0.016076600179076195
    2. 'line' → logprob: -4.141076564788818
    3. '	line' → logprob: -10.641077041625977
    4. '   ' → logprob: -12.016077041625977
    5. '=line' → logprob: -12.266077041625977
    6. '#line' → logprob: -13.141077041625977
    7. ' ' → logprob: -13.641077041625977
    8. '(line' → logprob: -13.766077041625977
    9. '    ' → logprob: -13.891077041625977
    10. ' readline' → logprob: -14.141077041625977

Token 13: '.strip' (ID: 40613)
  Prédit: '.strip'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.strip' → logprob: -0.07024028152227402
    2. '.rstrip' → logprob: -2.8202402591705322
    3. '.' → logprob: -4.820240497589111
    4. '.lower' → logprob: -9.320240020751953
    5. 'rstrip' → logprob: -10.695240020751953
    6. '.upper' → logprob: -11.195240020751953
    7. 'strip' → logprob: -11.320240020751953
    8. ' .' → logprob: -11.445240020751953
    9. '.replace' → logprob: -11.570240020751953
    10. '.split' → logprob: -11.570240020751953

Token 14: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.12720201909542084
    2. '(' → logprob: -2.127202033996582
    3. '`()' → logprob: -10.502202033996582
    4. '()`' → logprob: -10.627202033996582
    5. '('' → logprob: -10.752202033996582
    6. '(
' → logprob: -10.752202033996582
    7. '().' → logprob: -10.752202033996582
    8. ' ()' → logprob: -11.127202033996582
    9. '()
' → logprob: -11.127202033996582
    10. '"' → logprob: -11.252202033996582

Token 15: '   ' (ID: 271)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.6128670573234558
    2. ' if' → logprob: -0.9878670573234558
    3. '   ' → logprob: -2.8628671169281006
    4. '<|end|>' → logprob: -3.8628671169281006
    5. ')' → logprob: -6.2378668785095215
    6. ':' → logprob: -6.4878668785095215
    7. '```' → logprob: -6.7378668785095215
    8. '<|end|>' → logprob: -7.2378668785095215
    9. ' ' → logprob: -7.7378668785095215
    10. ',' → logprob: -7.8628668785095215

Token 16: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.04580942913889885
    2. ' if' → logprob: -3.295809507369995
    3. '   ' → logprob: -5.295809268951416
    4. 'print' → logprob: -5.920809268951416
    5. 'for' → logprob: -11.545809745788574
    6. '```' → logprob: -11.670809745788574
    7. '#' → logprob: -11.795809745788574
    8. ' print' → logprob: -12.420809745788574
    9. 'i' → logprob: -13.170809745788574
    10. '    ' → logprob: -13.420809745788574

Token 17: ' line' (ID: 2543)
  Prédit: ' not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.22339169681072235
    2. ' line' → logprob: -1.7233916521072388
    3. 'not' → logprob: -4.223391532897949
    4. 'line' → logprob: -5.098391532897949
    5. ' len' → logprob: -7.473391532897949
    6. 'len' → logprob: -9.09839153289795
    7. ' ' → logprob: -9.22339153289795
    8. ''' → logprob: -10.09839153289795
    9. '(line' → logprob: -10.09839153289795
    10. '   ' → logprob: -10.22339153289795

Token 18: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.6069850325584412
    2. '.startswith' → logprob: -0.8569850325584412
    3. '==' → logprob: -3.606985092163086
    4. '.endswith' → logprob: -5.981985092163086
    5. ':' → logprob: -8.106985092163086
    6. '.' → logprob: -8.481985092163086
    7. '<|end|>' → logprob: -9.356985092163086
    8. '<|end|>' → logprob: -9.606985092163086
    9. '.split' → logprob: -9.731985092163086
    10. 'startswith' → logprob: -10.231985092163086

Token 19: ' "":
' (ID: 132826)
  Prédit: ''''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '''' → logprob: -1.1354318857192993
    2. '""' → logprob: -1.1354318857192993
    3. '"":' → logprob: -1.5104318857192993
    4. ''' → logprob: -2.3854317665100098
    5. '"' → logprob: -3.1354317665100098
    6. ' '' → logprob: -7.88543176651001
    7. ' ""' → logprob: -8.385432243347168
    8. ' "' → logprob: -9.135432243347168
    9. ' ''' → logprob: -9.385432243347168
    10. '":' → logprob: -10.135432243347168

Token 20: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0042500621639192104
    2. '   ' → logprob: -5.6292500495910645
    3. ' continue' → logprob: -8.504250526428223
    4. ' break' → logprob: -8.629250526428223
    5. 'continue' → logprob: -8.754250526428223
    6. 'break' → logprob: -10.129250526428223
    7. '	break' → logprob: -10.754250526428223
    8. ':' → logprob: -10.879250526428223
    9. '    ' → logprob: -12.004250526428223
    10. '	continue' → logprob: -12.129250526428223

Token 21: ' break' (ID: 2338)
  Prédit: 'break'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'break' (adapté à ' break') → logprob: -0.4611525535583496
    2. ' break' → logprob: -1.3361525535583496
    3. '       ' → logprob: -2.8361525535583496
    4. '   ' → logprob: -3.0861525535583496
    5. 'continue' → logprob: -6.46115255355835
    6. '	break' → logprob: -7.71115255355835
    7. ' continue' → logprob: -8.711153030395508
    8. ' ' → logprob: -10.586153030395508
    9. '```' → logprob: -10.836153030395508
    10. '           ' → logprob: -10.961153030395508

Token 22: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0016653041820973158
    2. '    
' → logprob: -7.126665115356445
    3. 'print' → logprob: -7.251665115356445
    4. ' print' → logprob: -10.001665115356445
    5. '```' → logprob: -10.376665115356445
    6. '
' → logprob: -11.126665115356445
    7. '    ' → logprob: -11.376665115356445
    8. '\n' → logprob: -11.751665115356445
    9. '       ' → logprob: -12.126665115356445
    10. '   ' → logprob: -12.626665115356445

Token 23: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0012286811834201217
    2. 'print' → logprob: -6.8762288093566895
    3. ' print' → logprob: -9.001228332519531
    4. 'for' → logprob: -10.626228332519531
    5. ' for' → logprob: -11.251228332519531
    6. '    
' → logprob: -11.376228332519531
    7. '```' → logprob: -11.376228332519531
    8. '    ' → logprob: -12.751228332519531
    9. ' if' → logprob: -13.376228332519531
    10. '       ' → logprob: -13.751228332519531

Token 24: ' parts' (ID: 7881)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.20407123863697052
    2. 'print' → logprob: -1.704071283340454
    3. 'try' → logprob: -6.329071044921875
    4. ' print' → logprob: -7.829071044921875
    5. 'for' → logprob: -9.579071044921875
    6. '#' → logprob: -9.579071044921875
    7. 'if' → logprob: -9.954071044921875
    8. 'data' → logprob: -10.079071044921875
    9. '       ' → logprob: -10.204071044921875
    10. 'result' → logprob: -10.579071044921875

Token 25: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.01116207055747509
    2. '=' → logprob: -4.511162281036377
    3. '[' → logprob: -9.386161804199219
    4. '.' → logprob: -11.636161804199219
    5. ')' → logprob: -12.136161804199219
    6. '.split' → logprob: -12.261161804199219
    7. '.append' → logprob: -13.011161804199219
    8. '   ' → logprob: -13.011161804199219
    9. '[:]' → logprob: -13.511161804199219
    10. ' ' → logprob: -14.136161804199219

Token 26: ' line' (ID: 2543)
  Prédit: ' line'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' line' → logprob: -0.02325444668531418
    2. 'line' → logprob: -3.77325439453125
    3. '   ' → logprob: -11.89825439453125
    4. '	line' → logprob: -13.27325439453125
    5. ' ' → logprob: -16.14825439453125
    6. '=line' → logprob: -16.27325439453125
    7. '[line' → logprob: -16.52325439453125
    8. '(line' → logprob: -17.64825439453125
    9. '#line' → logprob: -17.64825439453125
    10. ' parts' → logprob: -17.89825439453125

Token 27: '.split' (ID: 10347)
  Prédit: '.split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.split' → logprob: -0.023298121988773346
    2. '.' → logprob: -3.7732980251312256
    3. '.strip' → logprob: -10.023298263549805
    4. ' .' → logprob: -12.273298263549805
    5. '.rstrip' → logprob: -13.523298263549805
    6. '.startswith' → logprob: -14.398298263549805
    7. 'split' → logprob: -14.523298263549805
    8. '.Split' → logprob: -15.023298263549805
    9. '   ' → logprob: -15.148298263549805
    10. '.s' → logprob: -15.273298263549805

Token 28: '(",' (ID: 23824)
  Prédit: '(''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '('' → logprob: -0.5811728239059448
    2. '("("' → logprob: -0.8311728239059448
    3. '(' → logprob: -5.331172943115234
    4. '("' → logprob: -8.081172943115234
    5. ''' → logprob: -10.081172943115234
    6. '()' → logprob: -11.581172943115234
    7. '("(' → logprob: -12.081172943115234
    8. '"' → logprob: -12.456172943115234
    9. '(',' → logprob: -13.081172943115234
    10. '('.')' → logprob: -13.581172943115234

Token 29: '")
' (ID: 1896)
  Prédit: '")'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '")' → logprob: -0.12571357190608978
    2. ' ")' → logprob: -2.625713586807251
    3. ')' → logprob: -3.250713586807251
    4. ' )' → logprob: -5.875713348388672
    5. '')' → logprob: -6.375713348388672
    6. '"' → logprob: -6.875713348388672
    7. ' ')' → logprob: -7.000713348388672
    8. ' ")
' → logprob: -9.250713348388672
    9. '")
' → logprob: -9.625713348388672
    10. '   ' → logprob: -9.875713348388672

Token 30: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.005571202374994755
    2. ' print' → logprob: -5.755571365356445
    3. ' if' → logprob: -7.505571365356445
    4. 'print' → logprob: -7.630571365356445
    5. ' parts' → logprob: -8.005571365356445
    6. ' name' → logprob: -8.505571365356445
    7. ' for' → logprob: -8.880571365356445
    8. ' key' → logprob: -9.255571365356445
    9. ' first' → logprob: -9.255571365356445
    10. 'name' → logprob: -9.380571365356445

Token 31: ' s' (ID: 265)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5075105428695679
    2. ' print' → logprob: -2.6325106620788574
    3. ' parts' → logprob: -2.8825106620788574
    4. ' count' → logprob: -3.0075106620788574
    5. ' if' → logprob: -3.5075106620788574
    6. ' key' → logprob: -3.8825106620788574
    7. 'print' → logprob: -4.007510662078857
    8. ' value' → logprob: -4.132510662078857
    9. ' num' → logprob: -4.257510662078857
    10. 'count' → logprob: -4.382510662078857

Token 32: ' =' (ID: 314)
  Prédit: 'um'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'um' → logprob: -0.04582066088914871
    2. 'tr' → logprob: -4.295820713043213
    3. ' =' → logprob: -4.920820713043213
    4. 'ize' → logprob: -5.920820713043213
    5. 'ums' → logprob: -6.045820713043213
    6. 'trs' → logprob: -6.045820713043213
    7. '1' → logprob: -6.295820713043213
    8. 'cores' → logprob: -6.420820713043213
    9. 'ales' → logprob: -6.420820713043213
    10. 'et' → logprob: -6.545820713043213

Token 33: ' int' (ID: 677)
  Prédit: ' parts'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' parts' → logprob: -0.5441405773162842
    2. ' int' → logprob: -1.2941405773162842
    3. 'int' → logprob: -2.419140577316284
    4. 'parts' → logprob: -2.919140577316284
    5. ' float' → logprob: -6.419140815734863
    6. 'float' → logprob: -7.794140815734863
    7. ' len' → logprob: -9.044140815734863
    8. ' str' → logprob: -9.419140815734863
    9. 'str' → logprob: -9.794140815734863
    10. '(parts' → logprob: -9.919140815734863

Token 34: '(parts' (ID: 102573)
  Prédit: '(parts'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(parts' → logprob: -0.0031812789384275675
    2. '(' → logprob: -5.753181457519531
    3. 'parts' → logprob: -13.378181457519531
    4. ' (' → logprob: -13.878181457519531
    5. '(part' → logprob: -15.003181457519531
    6. ' parts' → logprob: -15.253181457519531
    7. '(s' → logprob: -15.378181457519531
    8. '(
' → logprob: -16.25318145751953
    9. '("("' → logprob: -16.50318145751953
    10. '('' → logprob: -17.00318145751953

Token 35: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -1.6047699318733066e-05
    2. '0' → logprob: -11.625016212463379
    3. '1' → logprob: -12.625016212463379
    4. ' [' → logprob: -12.750016212463379
    5. '\[' → logprob: -15.250016212463379
    6. ')' → logprob: -15.375016212463379
    7. '(' → logprob: -15.750016212463379
    8. '[-' → logprob: -16.875015258789062
    9. ')[' → logprob: -17.250015258789062
    10. '[
' → logprob: -17.375015258789062

Token 36: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0003392767102923244
    2. '1' → logprob: -8.00033950805664
    3. '[' → logprob: -13.25033950805664
    4. ' ' → logprob: -13.75033950805664
    5. '2' → logprob: -14.37533950805664
    6. ')' → logprob: -15.00033950805664
    7. '3' → logprob: -16.62533950805664
    8. '-' → logprob: -16.62533950805664
    9. '   ' → logprob: -17.75033950805664
    10. '```' → logprob: -17.75033950805664

Token 37: '])
' (ID: 5169)
  Prédit: '])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '])' → logprob: -0.016194138675928116
    2. ')' → logprob: -4.3911943435668945
    3. ']' → logprob: -5.6411943435668945
    4. '[' → logprob: -9.516194343566895
    5. ' ])' → logprob: -11.516194343566895
    6. '])
' → logprob: -11.641194343566895
    7. '))' → logprob: -12.141194343566895
    8. ')]' → logprob: -12.266194343566895
    9. '"])' → logprob: -12.391194343566895
    10. ']))' → logprob: -12.641194343566895

Token 38: '   ' (ID: 271)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.5035111904144287
    2. ')' → logprob: -1.8785111904144287
    3. '<|end|>' → logprob: -2.3785111904144287
    4. '   ' → logprob: -2.8785111904144287
    5. ' ' → logprob: -3.3785111904144287
    6. ' +' → logprob: -3.3785111904144287
    7. '-' → logprob: -4.878511428833008
    8. '    ' → logprob: -5.503511428833008
    9. ' *' → logprob: -6.253511428833008
    10. '*' → logprob: -6.253511428833008

Token 39: ' w' (ID: 286)
  Prédit: ' t'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' t' → logprob: -1.2515923976898193
    2. 't' → logprob: -1.6265923976898193
    3. 'n' → logprob: -2.0015923976898193
    4. ' n' → logprob: -2.3765923976898193
    5. 'd' → logprob: -3.1265923976898193
    6. ' d' → logprob: -3.5015923976898193
    7. 'e' → logprob: -3.5015923976898193
    8. ' e' → logprob: -3.6265923976898193
    9. 'k' → logprob: -4.126592636108398
    10. 'x' → logprob: -4.251592636108398

Token 40: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.03825642168521881
    2. '=' → logprob: -3.2882564067840576
    3. ' ' → logprob: -9.163256645202637
    4. ')' → logprob: -9.538256645202637
    5. ' )' → logprob: -11.663256645202637
    6. ',' → logprob: -12.038256645202637
    7. 's' → logprob: -12.288256645202637
    8. '[' → logprob: -12.288256645202637
    9. '.' → logprob: -12.788256645202637
    10. ']' → logprob: -13.163256645202637

Token 41: ' float' (ID: 4428)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.01815052703022957
    2. ' int' → logprob: -4.018150329589844
    3. '(int' → logprob: -15.393150329589844
    4. '=int' → logprob: -15.643150329589844
    5. '[int' → logprob: -15.893150329589844
    6. ' ' → logprob: -16.768150329589844
    7. '   ' → logprob: -17.268150329589844
    8. '1' → logprob: -17.893150329589844
    9. '<int' → logprob: -18.018150329589844
    10. 'nt' → logprob: -18.393150329589844

Token 42: '(parts' (ID: 102573)
  Prédit: '(parts'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(parts' → logprob: -0.0003386806638445705
    2. '(' → logprob: -8.000338554382324
    3. '(part' → logprob: -13.375338554382324
    4. ' (' → logprob: -13.500338554382324
    5. '(par' → logprob: -16.25033950805664
    6. '("("' → logprob: -16.37533950805664
    7. 'parts' → logprob: -16.75033950805664
    8. ' parts' → logprob: -17.12533950805664
    9. '(paren' → logprob: -18.25033950805664
    10. ')' → logprob: -18.87533950805664

Token 43: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -4.246537173457909e-06
    2. ' [' → logprob: -13.625003814697266
    3. ')' → logprob: -13.875003814697266
    4. '1' → logprob: -14.000003814697266
    5. '[
' → logprob: -15.375003814697266
    6. '```' → logprob: -15.375003814697266
    7. 's' → logprob: -15.750003814697266
    8. ']' → logprob: -15.875003814697266
    9. '(' → logprob: -16.125003814697266
    10. ')[' → logprob: -16.375003814697266

Token 44: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.0033853515051305e-05
    2. '0' → logprob: -10.375060081481934
    3. ' ' → logprob: -11.500060081481934
    4. '2' → logprob: -11.625060081481934
    5. '[' → logprob: -12.750060081481934
    6. '])' → logprob: -13.500060081481934
    7. '3' → logprob: -13.875060081481934
    8. ')' → logprob: -13.937560081481934
    9. ']' → logprob: -14.250060081481934
    10. '-' → logprob: -14.562560081481934

Token 45: '])
' (ID: 5169)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -2.2007883671903983e-05
    2. ')
' → logprob: -11.125021934509277
    3. ' )' → logprob: -12.500021934509277
    4. '))' → logprob: -14.125021934509277
    5. '")' → logprob: -14.250021934509277
    6. ')

' → logprob: -14.750021934509277
    7. ']' → logprob: -15.375021934509277
    8. '   ' → logprob: -15.750021934509277
    9. ')`' → logprob: -15.750021934509277
    10. '])' → logprob: -15.875021934509277

Token 46: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.15914875268936157
    2. ')' → logprob: -2.534148693084717
    3. ' ' → logprob: -3.159148693084717
    4. '#' → logprob: -5.409148693084717
    5. ' if' → logprob: -5.659148693084717
    6. '<|end|>' → logprob: -5.784148693084717
    7. '  ' → logprob: -6.159148693084717
    8. 'if' → logprob: -6.534148693084717
    9. '    
' → logprob: -6.659148693084717
    10. '\n' → logprob: -6.659148693084717

Token 47: ' h' (ID: 312)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.478659987449646
    2. ' if' → logprob: -1.728659987449646
    3. 'print' → logprob: -1.853659987449646
    4. 'if' → logprob: -2.2286601066589355
    5. '   ' → logprob: -2.2286601066589355
    6. '<|end|>' → logprob: -2.4786601066589355
    7. ')' → logprob: -3.4786601066589355
    8. ',' → logprob: -4.1036601066589355
    9. '+' → logprob: -4.2286601066589355
    10. '#' → logprob: -4.2286601066589355

Token 48: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3512667715549469
    2. '=' → logprob: -1.2262667417526245
    3. ')' → logprob: -6.101266860961914
    4. ' ' → logprob: -8.351266860961914
    5. '<|end|>' → logprob: -9.476266860961914
    6. '_' → logprob: -10.226266860961914
    7. ',' → logprob: -10.601266860961914
    8. '=int' → logprob: -10.601266860961914
    9. '=float' → logprob: -10.726266860961914
    10. '<|end|>' → logprob: -10.851266860961914

Token 49: ' float' (ID: 4428)
  Prédit: ' float'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' float' → logprob: -0.5256796479225159
    2. 'float' → logprob: -0.9006796479225159
    3. 'int' → logprob: -6.525679588317871
    4. ' int' → logprob: -6.900679588317871
    5. ' ' → logprob: -10.525679588317871
    6. '(float' → logprob: -11.150679588317871
    7. '2' → logprob: -12.025679588317871
    8. '=float' → logprob: -12.025679588317871
    9. '   ' → logprob: -12.150679588317871
    10. '  ' → logprob: -12.650679588317871

Token 50: '(parts' (ID: 102573)
  Prédit: '(parts'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(parts' → logprob: -1.3782830137643032e-05
    2. '(' → logprob: -11.25001335144043
    3. '(part' → logprob: -14.62501335144043
    4. 'parts' → logprob: -15.87501335144043
    5. ' (' → logprob: -15.87501335144043
    6. '(points' → logprob: -17.12501335144043
    7. ' parts' → logprob: -18.12501335144043
    8. '(s' → logprob: -18.75001335144043
    9. '(lines' → logprob: -19.00001335144043
    10. '(p' → logprob: -19.25001335144043

Token 51: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -1.6166903151315637e-05
    2. '2' → logprob: -11.250016212463379
    3. '(' → logprob: -13.125016212463379
    4. ']' → logprob: -14.625016212463379
    5. '0' → logprob: -15.625016212463379
    6. ')' → logprob: -15.750016212463379
    7. '```' → logprob: -16.000015258789062
    8. '1' → logprob: -16.875015258789062
    9. '])' → logprob: -17.250015258789062
    10. ' [' → logprob: -17.375015258789062

Token 52: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -8.256334695033729e-05
    2. '1' → logprob: -9.500082969665527
    3. '0' → logprob: -12.750082969665527
    4. ' ' → logprob: -13.125082969665527
    5. '[' → logprob: -13.750082969665527
    6. '])' → logprob: -14.750082969665527
    7. '   ' → logprob: -15.125082969665527
    8. ']' → logprob: -15.125082969665527
    9. '```' → logprob: -15.375082969665527
    10. '3' → logprob: -15.875082969665527

Token 53: '])
' (ID: 5169)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -2.816093228830141e-06
    2. ' )' → logprob: -14.00000286102295
    3. ')
' → logprob: -14.12500286102295
    4. '")' → logprob: -15.50000286102295
    5. '   ' → logprob: -15.75000286102295
    6. '）' → logprob: -15.75000286102295
    7. ')`' → logprob: -15.75000286102295
    8. '))' → logprob: -15.87500286102295
    9. ']' → logprob: -16.125001907348633
    10. '')' → logprob: -16.625001907348633

Token 54: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.037977445870637894
    2. '<|end|>' → logprob: -4.41297721862793
    3. '
' → logprob: -4.78797721862793
    4. ' if' → logprob: -5.03797721862793
    5. ')' → logprob: -5.41297721862793
    6. 'if' → logprob: -6.16297721862793
    7. '    
' → logprob: -6.91297721862793
    8. 's' → logprob: -7.78797721862793
    9. ',' → logprob: -7.91297721862793
    10. ' ' → logprob: -8.03797721862793

Token 55: ' bmi' (ID: 186346)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1429460197687149
    2. ' if' → logprob: -2.6429460048675537
    3. 'if' → logprob: -3.8929460048675537
    4. ')' → logprob: -4.517946243286133
    5. 'n' → logprob: -5.267946243286133
    6. '    ' → logprob: -5.392946243286133
    7. ' ' → logprob: -6.267946243286133
    8. ',' → logprob: -6.392946243286133
    9. '    
' → logprob: -6.392946243286133
    10. '#' → logprob: -6.642946243286133

Token 56: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.014195947907865047
    2. '=' → logprob: -4.264195919036865
    3. '_' → logprob: -11.389196395874023
    4. 's' → logprob: -12.264196395874023
    5. ' =)' → logprob: -12.889196395874023
    6. '.' → logprob: -13.139196395874023
    7. ' ' → logprob: -13.139196395874023
    8. ' =
' → logprob: -13.389196395874023
    9. ' ' → logprob: -13.639196395874023
    10. '_space' → logprob: -13.889196395874023

Token 57: ' w' (ID: 286)
  Prédit: 'w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' → logprob: -0.2279142439365387
    2. ' w' → logprob: -1.6029142141342163
    3. 's' → logprob: -6.352914333343506
    4. ' s' → logprob: -7.227914333343506
    5. ' ' → logprob: -11.352913856506348
    6. '   ' → logprob: -11.852913856506348
    7. '	w' → logprob: -12.727913856506348
    8. 'round' → logprob: -13.477913856506348
    9. '  ' → logprob: -13.727913856506348
    10. '(s' → logprob: -13.977913856506348

Token 58: ' /' (ID: 820)
  Prédit: ' /'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' /' → logprob: -0.5234971046447754
    2. '/' → logprob: -0.8984971046447754
    3. '/(' → logprob: -8.148496627807617
    4. ' /(' → logprob: -9.648496627807617
    5. '*' → logprob: -11.273496627807617
    6. ' ' → logprob: -13.273496627807617
    7. ' /
' → logprob: -13.523496627807617
    8. ' *' → logprob: -14.023496627807617
    9. 's' → logprob: -14.648496627807617
    10. ' ' → logprob: -15.023496627807617

Token 59: ' (' (ID: 350)
  Prédit: '(h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(h' → logprob: -0.00208126287907362
    2. '(s' → logprob: -6.502081394195557
    3. '(' → logprob: -7.877081394195557
    4. '((' → logprob: -9.252080917358398
    5. ' (' → logprob: -9.377080917358398
    6. 'h' → logprob: -11.002080917358398
    7. ' h' → logprob: -14.002080917358398
    8. '(height' → logprob: -14.877080917358398
    9. '(pow' → logprob: -15.002080917358398
    10. '(w' → logprob: -15.502080917358398

Token 60: 'h' (ID: 71)
  Prédit: '(h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(h' → logprob: -0.28333544731140137
    2. 'h' → logprob: -1.4083354473114014
    3. ' (' → logprob: -6.9083356857299805
    4. '(' → logprob: -7.2833356857299805
    5. ' h' → logprob: -7.7833356857299805
    6. '((' → logprob: -9.78333568572998
    7. '(s' → logprob: -11.65833568572998
    8. ' ' → logprob: -12.90833568572998
    9. '   ' → logprob: -13.03333568572998
    10. '	h' → logprob: -13.28333568572998

Token 61: ' *' (ID: 425)
  Prédit: '**'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '**' → logprob: -0.634396493434906
    2. '*' → logprob: -0.884396493434906
    3. ' *' → logprob: -3.509396553039551
    4. ' **' → logprob: -3.634396553039551
    5. '*h' → logprob: -8.00939655303955
    6. ')**' → logprob: -10.13439655303955
    7. '*w' → logprob: -10.63439655303955
    8. ')' → logprob: -11.00939655303955
    9. ' ' → logprob: -11.13439655303955
    10. '*b' → logprob: -11.50939655303955

Token 62: ' h' (ID: 312)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'h' → logprob: -0.0017475310014560819
    2. ' h' → logprob: -6.3767476081848145
    3. '2' → logprob: -10.126747131347656
    4. ' ' → logprob: -12.376747131347656
    5. '	h' → logprob: -14.251747131347656
    6. ' ' → logprob: -16.626747131347656
    7. ')' → logprob: -16.751747131347656
    8. '   ' → logprob: -17.251747131347656
    9. '  ' → logprob: -17.501747131347656
    10. '1' → logprob: -17.501747131347656

Token 63: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -2.5941604690160602e-05
    2. ')
' → logprob: -10.625025749206543
    3. ' )' → logprob: -14.625025749206543
    4. ')**' → logprob: -15.625025749206543
    5. ')`' → logprob: -15.625025749206543
    6. '))' → logprob: -15.875025749206543
    7. ')

' → logprob: -16.12502670288086
    8. '),' → logprob: -16.25002670288086
    9. '   ' → logprob: -16.37502670288086
    10. ')*' → logprob: -16.50002670288086

Token 64: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.015361008234322071
    2. 'if' → logprob: -4.8903608322143555
    3. '
' → logprob: -5.8903608322143555
    4. 'print' → logprob: -6.3903608322143555
    5. ' if' → logprob: -6.5153608322143555
    6. '<|end|>' → logprob: -6.8903608322143555
    7. '    
' → logprob: -7.5153608322143555
    8. '```' → logprob: -9.265360832214355
    9. '\n' → logprob: -10.890360832214355
    10. ')' → logprob: -11.140360832214355

Token 65: ' if' (ID: 538)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.04585379362106323
    2. 'if' (adapté à ' if') → logprob: -3.545853853225708
    3. 'print' → logprob: -5.295853614807129
    4. ' if' → logprob: -5.295853614807129
    5. '    
' → logprob: -6.045853614807129
    6. '
' → logprob: -6.045853614807129
    7. '\n' → logprob: -7.670853614807129
    8. '  ' → logprob: -8.670853614807129
    9. '    ' → logprob: -9.045853614807129
    10. ' ' → logprob: -9.420853614807129

Token 66: ' bmi' (ID: 186346)
  Prédit: ' bmi'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' bmi' → logprob: -0.06853742152452469
    2. ' b' → logprob: -3.068537473678589
    3. 'b' → logprob: -4.19353723526001
    4. ' ' → logprob: -6.19353723526001
    5. ' bm' → logprob: -7.06853723526001
    6. ' s' → logprob: -7.06853723526001
    7. 's' → logprob: -7.31853723526001
    8. '	b' → logprob: -9.568537712097168
    9. '   ' → logprob: -10.318537712097168
    10. '(b' → logprob: -10.568537712097168

Token 67: ' >=' (ID: 5064)
  Prédit: ' <'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.16510488092899323
    2. ' >=' → logprob: -2.040104866027832
    3. '<' → logprob: -4.415104866027832
    4. ' >' → logprob: -4.790104866027832
    5. '>=' → logprob: -6.915104866027832
    6. ' <=' → logprob: -7.790104866027832
    7. '>' → logprob: -8.290104866027832
    8. ' ' → logprob: -9.665104866027832
    9. ' ' → logprob: -11.040104866027832
    10. '   ' → logprob: -11.290104866027832

Token 68: ' ' (ID: 220)
  Prédit: '25'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '25' → logprob: -0.3496567904949188
    2. '18' → logprob: -1.8496568202972412
    3. '30' → logprob: -2.224656820297241
    4. '35' → logprob: -4.099656581878662
    5. '40' → logprob: -4.599656581878662
    6. ' ' → logprob: -6.724656581878662
    7. '23' → logprob: -7.724656581878662
    8. '2' → logprob: -8.22465705871582
    9. '24' → logprob: -8.22465705871582
    10. '20' → logprob: -8.34965705871582

Token 69: '25' (ID: 1161)
  Prédit: '25'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '25' → logprob: -0.5159382224082947
    2. '18' → logprob: -1.2659382820129395
    3. '30' → logprob: -2.2659382820129395
    4. '35' → logprob: -4.5159382820129395
    5. '40' → logprob: -5.3909382820129395
    6. '23' → logprob: -7.3909382820129395
    7. '20' → logprob: -8.140937805175781
    8. '2' → logprob: -8.140937805175781
    9. '24' → logprob: -8.515937805175781
    10. '28' → logprob: -9.515937805175781

Token 70: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.000815466046333313
    2. ':
' → logprob: -7.125815391540527
    3. ' :' → logprob: -12.500815391540527
    4. '.' → logprob: -13.250815391540527
    5. '):' → logprob: -13.375815391540527
    6. '   ' → logprob: -14.250815391540527
    7. ':
' → logprob: -14.375815391540527
    8. ':

' → logprob: -14.500815391540527
    9. ' and' → logprob: -14.750815391540527
    10. '":' → logprob: -14.875815391540527

Token 71: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0004388942907098681
    2. ' print' → logprob: -8.875438690185547
    3. 'print' → logprob: -9.250438690185547
    4. '   ' → logprob: -9.375438690185547
    5. '```' → logprob: -11.000438690185547
    6. '      ' → logprob: -11.125438690185547
    7. '        
' → logprob: -11.375438690185547
    8. '           ' → logprob: -11.375438690185547
    9. '\n' → logprob: -11.500438690185547
    10. '     ' → logprob: -11.875438690185547

Token 72: ' print' (ID: 2123)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.842426598072052
    2. 'print' (adapté à ' print') → logprob: -1.0924265384674072
    3. ' print' → logprob: -1.8424265384674072
    4. '       ' → logprob: -2.5924265384674072
    5. ' sys' → logprob: -8.842426300048828
    6. ' continue' → logprob: -9.342426300048828
    7. '	print' → logprob: -9.592426300048828
    8. 'continue' → logprob: -9.592426300048828
    9. '```' → logprob: -9.842426300048828
    10. ' ' → logprob: -9.967426300048828

Token 73: '(s' (ID: 1858)
  Prédit: '("'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '("' → logprob: -0.04442553594708443
    2. '(' → logprob: -3.2944254875183105
    3. '(s' → logprob: -5.2944254875183105
    4. '('' → logprob: -7.7944254875183105
    5. '(f' → logprob: -7.9194254875183105
    6. '(parts' → logprob: -8.669425964355469
    7. '(line' → logprob: -8.919425964355469
    8. '("("' → logprob: -9.794425964355469
    9. '("*' → logprob: -10.169425964355469
    10. '(":' → logprob: -10.419425964355469

Token 74: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0009112251573242247
    2. ',' → logprob: -7.250911235809326
    3. '")' → logprob: -9.375910758972168
    4. ' )' → logprob: -9.750910758972168
    5. '   ' → logprob: -11.000910758972168
    6. '))' → logprob: -11.500910758972168
    7. ')
' → logprob: -11.625910758972168
    8. ',)' → logprob: -12.375910758972168
    9. ')")' → logprob: -12.750910758972168
    10. '),' → logprob: -13.125910758972168


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 72
Tokens correctement prédits (1ère position, stricte): 33
Tokens correctement prédits (1ère position, avec adaptation): 35
Tokens correctement prédits (top 10): 58
Précision stricte (1ère position): 45.83%
Précision adaptée (1ère position): 48.61%
Précision (top 10): 80.56%
================================================================================
