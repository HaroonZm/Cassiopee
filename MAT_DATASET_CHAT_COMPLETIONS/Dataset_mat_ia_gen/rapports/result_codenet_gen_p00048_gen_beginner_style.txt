================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 17:17:04
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
while True:
    try:
        w = float(input())
        if w <= 48.00:
            print("light fly")
        elif w <= 51.00:
            print("fly")
        elif w <= 54.00:
            print("bantam")
        elif w <= 57.00:
            print("feather")
        elif w <= 60.00:
            print("light")
        elif w <= 64.00:
            print("light welter")
        elif w <= 69.00:
            print("welter")
        elif w <= 75.00:
            print("light middle")
        elif w <= 81.00:
            print("middle")
        elif w <= 91.00:
            print("light heavy")
        else:
            print("heavy")
    except EOFError:
        break
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'while' (ID: 7032)
  → Token d'amorce (pas de prédiction)

Token 1: ' True' (ID: 6432)
  → Token d'amorce (pas de prédiction)

Token 2: ':
' (ID: 734)
  → Token d'amorce (pas de prédiction)

Token 3: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5957265496253967
    2. '\' → logprob: -2.220726490020752
    3. ' ' → logprob: -2.470726490020752
    4. '```' → logprob: -2.845726490020752
    5. '    ' → logprob: -2.970726490020752
    6. '    
' → logprob: -3.220726490020752
    7. '\n' → logprob: -3.720726490020752
    8. ' 
' → logprob: -3.845726490020752
    9. '<|end|>' → logprob: -3.970726490020752
    10. '  
' → logprob: -5.095726490020752

Token 4: ' try' (ID: 2075)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.26106780767440796
    2. '    ' → logprob: -1.7610678672790527
    3. ' ' → logprob: -3.7610678672790527
    4. '```' → logprob: -3.8860678672790527
    5. '    
' → logprob: -5.636067867279053
    6. '       ' → logprob: -6.386067867279053
    7. '  ' → logprob: -6.386067867279053
    8. ' pass' → logprob: -6.761067867279053
    9. 'pass' → logprob: -6.886067867279053
    10. ' 
' → logprob: -7.386067867279053

Token 5: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0006892018136568367
    2. ' :' → logprob: -7.3756890296936035
    3. ':
' → logprob: -10.625689506530762
    4. '   ' → logprob: -11.500689506530762
    5. '):' → logprob: -11.750689506530762
    6. '       ' → logprob: -12.000689506530762
    7. '    ' → logprob: -12.625689506530762
    8. '():' → logprob: -13.000689506530762
    9. '':' → logprob: -13.750689506530762
    10. '":' → logprob: -14.250689506530762

Token 6: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.09211695939302444
    2. '   ' → logprob: -2.9671170711517334
    3. ':' → logprob: -3.3421170711517334
    4. '    ' → logprob: -7.842116832733154
    5. ' :' → logprob: -8.592117309570312
    6. ' ' → logprob: -8.967117309570312
    7. '```' → logprob: -9.092117309570312
    8. '<|end|>' → logprob: -9.467117309570312
    9. '        
' → logprob: -9.967117309570312
    10. '     ' → logprob: -10.342117309570312

Token 7: ' w' (ID: 286)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.011268154717981815
    2. '            ' → logprob: -5.886268138885498
    3. 'print' → logprob: -6.261268138885498
    4. '   ' → logprob: -6.386268138885498
    5. '       ' → logprob: -6.761268138885498
    6. 'input' → logprob: -7.386268138885498
    7. '        ' → logprob: -7.886268138885498
    8. ' ' → logprob: -8.261268615722656
    9. '               ' → logprob: -8.261268615722656
    10. '          ' → logprob: -8.386268615722656

Token 8: ' =' (ID: 314)
  Prédit: 'hile'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'hile' → logprob: -0.272021621465683
    2. 'h' → logprob: -1.5220216512680054
    3. 'a' → logprob: -4.772021770477295
    4. 'e' → logprob: -5.397021770477295
    5. '   ' → logprob: -5.647021770477295
    6. '=' → logprob: -6.897021770477295
    7. 'i' → logprob: -7.022021770477295
    8. 'w' → logprob: -7.647021770477295
    9. '       ' → logprob: -9.022021293640137
    10. 'r' → logprob: -9.022021293640137

Token 9: ' float' (ID: 4428)
  Prédit: ' input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' input' → logprob: -1.3253487348556519
    2. ' open' → logprob: -1.7003487348556519
    3. ' int' → logprob: -2.0753488540649414
    4. 'input' → logprob: -2.4503488540649414
    5. 'int' → logprob: -3.2003488540649414
    6. ' next' → logprob: -3.5753488540649414
    7. ' requests' → logprob: -3.7003488540649414
    8. ' websocket' → logprob: -3.9503488540649414
    9. ' socket' → logprob: -4.075348854064941
    10. ' w' → logprob: -4.200348854064941

Token 10: '(input' (ID: 10054)
  Prédit: '(input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.2014816552400589
    2. '(' → logprob: -1.7014816999435425
    3. '(w' → logprob: -11.076481819152832
    4. 'input' → logprob: -11.701481819152832
    5. '('' → logprob: -12.076481819152832
    6. '(
' → logprob: -12.326481819152832
    7. ' (' → logprob: -12.451481819152832
    8. '(user' → logprob: -12.576481819152832
    9. '(line' → logprob: -12.701481819152832
    10. '(raw' → logprob: -12.701481819152832

Token 11: '())
' (ID: 4574)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.017682861536741257
    2. '('' → logprob: -5.142683029174805
    3. '()' → logprob: -5.142683029174805
    4. '("("' → logprob: -5.517683029174805
    5. ')' → logprob: -7.642683029174805
    6. '(""))' → logprob: -7.892683029174805
    7. '("")' → logprob: -8.017683029174805
    8. '(()' → logprob: -8.392683029174805
    9. '(
' → logprob: -9.267683029174805
    10. '("' → logprob: -9.517683029174805

Token 12: '       ' (ID: 309)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.020409563556313515
    2. '       ' → logprob: -4.27040958404541
    3. '\n' → logprob: -6.52040958404541
    4. '   ' → logprob: -6.77040958404541
    5. '(' → logprob: -7.52040958404541
    6. '           ' → logprob: -7.64540958404541
    7. '()' → logprob: -7.64540958404541
    8. '\' → logprob: -7.77040958404541
    9. ':' → logprob: -8.52040958404541
    10. '#' → logprob: -8.89540958404541

Token 13: ' if' (ID: 538)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0008228530059568584
    2. '           ' → logprob: -8.125823020935059
    3. ')' → logprob: -8.375823020935059
    4. ' if' → logprob: -9.375823020935059
    5. 'break' → logprob: -9.750823020935059
    6. 'if' (adapté à ' if') → logprob: -10.375823020935059
    7. '   ' → logprob: -10.375823020935059
    8. '        
' → logprob: -11.375823020935059
    9. 'except' → logprob: -11.500823020935059
    10. '      ' → logprob: -11.750823020935059

Token 14: ' w' (ID: 286)
  Prédit: ' w'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' w' → logprob: -0.004125419072806835
    2. ' ' → logprob: -6.004125595092773
    3. 'w' → logprob: -6.504125595092773
    4. ' not' → logprob: -9.004125595092773
    5. ' ' → logprob: -11.129125595092773
    6. ' isinstance' → logprob: -12.254125595092773
    7. ' (' → logprob: -12.379125595092773
    8. '  ' → logprob: -14.254125595092773
    9. 'not' → logprob: -14.379125595092773
    10. '(' → logprob: -14.754125595092773

Token 15: ' <=' (ID: 5017)
  Prédit: ' >'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.4437897205352783
    2. ' <' → logprob: -1.9437897205352783
    3. ' >=' → logprob: -2.1937897205352783
    4. ' <=' → logprob: -2.6937897205352783
    5. ' ' → logprob: -4.068789482116699
    6. '>' → logprob: -4.318789482116699
    7. ' ==' → logprob: -6.193789482116699
    8. '<' → logprob: -6.693789482116699
    9. '>=' → logprob: -7.193789482116699
    10. '  ' → logprob: -7.943789482116699

Token 16: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.1853163242340088
    2. '0' → logprob: -1.8103163242340088
    3. '20' → logprob: -6.68531608581543
    4. '100' → logprob: -6.68531608581543
    5. '10' → logprob: -6.93531608581543
    6. '50' → logprob: -7.18531608581543
    7. '1' → logprob: -8.43531608581543
    8. '40' → logprob: -9.06031608581543
    9. '30' → logprob: -9.18531608581543
    10. '5' → logprob: -9.43531608581543

Token 17: '48' (ID: 3519)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.05148487165570259
    2. ' ' → logprob: -3.3014848232269287
    3. '50' → logprob: -5.551485061645508
    4. '100' → logprob: -6.176485061645508
    5. '10' → logprob: -6.426485061645508
    6. '1' → logprob: -6.801485061645508
    7. '20' → logprob: -6.801485061645508
    8. '500' → logprob: -7.676485061645508
    9. '200' → logprob: -7.926485061645508
    10. '250' → logprob: -7.926485061645508

Token 18: '.' (ID: 13)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.015094500966370106
    2. ' :' → logprob: -4.26509428024292
    3. ' or' → logprob: -8.265094757080078
    4. '0' → logprob: -8.765094757080078
    5. ':
' → logprob: -8.765094757080078
    6. ' and' → logprob: -9.140094757080078
    7. '.' → logprob: -9.640094757080078
    8. '       ' → logprob: -10.015094757080078
    9. '           ' → logprob: -10.515094757080078
    10. '6' → logprob: -11.015094757080078

Token 19: '00' (ID: 504)
  Prédit: '5'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '5' → logprob: -0.6643795371055603
    2. '2' → logprob: -2.039379596710205
    3. '0' → logprob: -2.164379596710205
    4. '4' → logprob: -2.664379596710205
    5. '9' → logprob: -2.914379596710205
    6. '6' → logprob: -3.039379596710205
    7. '7' → logprob: -3.914379596710205
    8. '8' → logprob: -4.539379596710205
    9. '3' → logprob: -4.664379596710205
    10. '999' → logprob: -5.164379596710205

Token 20: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.001032095868140459
    2. ' :' → logprob: -7.126031875610352
    3. ':
' → logprob: -9.376031875610352
    4. ' or' → logprob: -9.751031875610352
    5. ' and' → logprob: -10.376031875610352
    6. '):' → logprob: -10.751031875610352
    7. ':return' → logprob: -11.376031875610352
    8. '       ' → logprob: -12.376031875610352
    9. '.' → logprob: -12.376031875610352
    10. '   ' → logprob: -12.751031875610352

Token 21: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.45530304312705994
    2. ':' → logprob: -1.0803030729293823
    3. '       ' → logprob: -3.8303029537200928
    4. '\n' → logprob: -6.705303192138672
    5. '\' → logprob: -7.830303192138672
    6. '               ' → logprob: -7.830303192138672
    7. ':
' → logprob: -8.080303192138672
    8. ' continue' → logprob: -8.205303192138672
    9. ' :' → logprob: -8.455303192138672
    10. '            ' → logprob: -8.455303192138672

Token 22: ' print' (ID: 2123)
  Prédit: ' print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' print' → logprob: -1.322935700416565
    2. ' break' → logprob: -1.697935700416565
    3. '       ' → logprob: -1.947935700416565
    4. '           ' → logprob: -1.947935700416565
    5. 'print' (adapté à ' print') → logprob: -2.3229355812072754
    6. '\n' → logprob: -2.8229355812072754
    7. ' 
' → logprob: -3.8229355812072754
    8. ' continue' → logprob: -3.9479355812072754
    9. '               ' → logprob: -4.572935581207275
    10. ' ' → logprob: -4.572935581207275

Token 23: '("' (ID: 568)
  Prédit: '("'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '("' → logprob: -0.5455785393714905
    2. '(' → logprob: -0.9205785393714905
    3. '('' → logprob: -4.045578479766846
    4. '(w' → logprob: -6.170578479766846
    5. '("")' → logprob: -7.420578479766846
    6. '()' → logprob: -7.545578479766846
    7. '("("' → logprob: -7.545578479766846
    8. '(round' → logprob: -9.170578956604004
    9. '(":' → logprob: -9.170578956604004
    10. ' ("' → logprob: -9.170578956604004

Token 24: 'light' (ID: 6038)
  Prédit: 'Under'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Under' → logprob: -2.1543829441070557
    2. 'ok' → logprob: -2.8418829441070557
    3. 'Weight' → logprob: -3.0293829441070557
    4. 'No' → logprob: -3.1543829441070557
    5. 'light' → logprob: -3.2168829441070557
    6. '0' → logprob: -3.4043829441070557
    7. 'Normal' → logprob: -3.5293829441070557
    8. 'Good' → logprob: -3.6543829441070557
    9. 'OK' → logprob: -3.8418829441070557
    10. 'Accepted' → logprob: -3.8418829441070557

Token 25: ' fly' (ID: 14360)
  Prédit: ' ")'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ")' → logprob: -0.07175618410110474
    2. 'weight' → logprob: -3.32175612449646
    3. '")' → logprob: -3.57175612449646
    4. ' weight' → logprob: -6.196756362915039
    5. ' )' → logprob: -7.446756362915039
    6. ' "' → logprob: -7.571756362915039
    7. ' ")
' → logprob: -8.071756362915039
    8. ' "))' → logprob: -8.321756362915039
    9. ' ' → logprob: -8.446756362915039
    10. '"' → logprob: -8.571756362915039

Token 26: '")
' (ID: 1896)
  Prédit: 'weight'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'weight' → logprob: -0.00026634239475242794
    2. ' weight' → logprob: -9.125266075134277
    3. 'weig' → logprob: -10.125266075134277
    4. '```' → logprob: -10.625266075134277
    5. 'we' → logprob: -11.250266075134277
    6. 'w' → logprob: -11.375266075134277
    7. '   ' → logprob: -11.375266075134277
    8. 'wei' → logprob: -12.000266075134277
    9. 'ight' → logprob: -12.375266075134277
    10. 'weights' → logprob: -12.750266075134277

Token 27: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5849252343177795
    2. 'elif' → logprob: -1.4599251747131348
    3. '\n' → logprob: -2.4599251747131348
    4. '   ' → logprob: -3.3349251747131348
    5. '
' → logprob: -3.3349251747131348
    6. ' elif' → logprob: -3.5849251747131348
    7. '-' → logprob: -5.459925174713135
    8. 'else' → logprob: -5.834925174713135
    9. '           ' → logprob: -5.959925174713135
    10. '    
' → logprob: -6.084925174713135

Token 28: ' elif' (ID: 9497)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.443169504404068
    2. 'elif' (adapté à ' elif') → logprob: -1.3181694746017456
    3. ' elif' → logprob: -3.193169593811035
    4. '   ' → logprob: -4.318169593811035
    5. '\n' → logprob: -4.568169593811035
    6. '           ' → logprob: -5.068169593811035
    7. '
' → logprob: -5.443169593811035
    8. ' else' → logprob: -5.568169593811035
    9. 'else' → logprob: -5.568169593811035
    10. '    
' → logprob: -6.943169593811035

Token 29: ' w' (ID: 286)
  Prédit: ' w'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' w' → logprob: -0.008761702105402946
    2. ' ' → logprob: -4.758761882781982
    3. 'w' → logprob: -9.258761405944824
    4. ' ' → logprob: -10.258761405944824
    5. '<|end|>' → logprob: -11.883761405944824
    6. '  ' → logprob: -13.008761405944824
    7. ' (' → logprob: -13.508761405944824
    8. '0' → logprob: -13.758761405944824
    9. '(w' → logprob: -14.133761405944824
    10. '	w' → logprob: -14.508761405944824

Token 30: ' <=' (ID: 5017)
  Prédit: ' <='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <=' → logprob: -0.08411358296871185
    2. ' <' → logprob: -2.959113597869873
    3. ' ' → logprob: -3.709113597869873
    4. '<=' → logprob: -6.459113597869873
    5. ' >' → logprob: -6.709113597869873
    6. '<' → logprob: -7.459113597869873
    7. ' >=' → logprob: -7.584113597869873
    8. '.' → logprob: -8.584113121032715
    9. '   ' → logprob: -9.959113121032715
    10. ' ==' → logprob: -10.209113121032715

Token 31: ' ' (ID: 220)
  Prédit: '51'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '51' → logprob: -0.08927150070667267
    2. ' ' → logprob: -3.0892715454101562
    3. '52' → logprob: -3.9642715454101562
    4. '50' → logprob: -3.9642715454101562
    5. '49' → logprob: -7.339271545410156
    6. '	' → logprob: -7.589271545410156
    7. '   ' → logprob: -8.464271545410156
    8. '  ' → logprob: -8.964271545410156
    9. '53' → logprob: -9.339271545410156
    10. ' ' → logprob: -9.839271545410156

Token 32: '51' (ID: 6231)
  Prédit: '51'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '51' → logprob: -0.010202585719525814
    2. '52' → logprob: -5.385202407836914
    3. '50' → logprob: -5.885202407836914
    4. ' ' → logprob: -6.510202407836914
    5. '49' → logprob: -7.135202407836914
    6. '	' → logprob: -8.885202407836914
    7. '   ' → logprob: -9.260202407836914
    8. '53' → logprob: -9.510202407836914
    9. '  ' → logprob: -10.135202407836914
    10. '5' → logprob: -10.760202407836914

Token 33: '.' (ID: 13)
  Prédit: '.'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -6.2729995988775045e-06
    2. ' .' → logprob: -13.250006675720215
    3. '0' → logprob: -13.750006675720215
    4. ':' → logprob: -14.125006675720215
    5. '.
' → logprob: -15.125006675720215
    6. '7' → logprob: -15.375006675720215
    7. '6' → logprob: -15.625006675720215
    8. '4' → logprob: -16.2500057220459
    9. '2' → logprob: -16.2500057220459
    10. '00' → logprob: -16.2500057220459

Token 34: '00' (ID: 504)
  Prédit: '5'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '5' → logprob: -1.2167655229568481
    2. '00' → logprob: -1.4667655229568481
    3. '50' → logprob: -1.4667655229568481
    4. '999' → logprob: -2.8417654037475586
    5. '0' → logprob: -3.0917654037475586
    6. '80' → logprob: -3.8417654037475586
    7. '163' → logprob: -3.8417654037475586
    8. '16' → logprob: -3.8417654037475586
    9. '8' → logprob: -3.9667654037475586
    10. '99' → logprob: -4.966765403747559

Token 35: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -6.861651490908116e-05
    2. ' :' → logprob: -10.125068664550781
    3. ':
' → logprob: -10.875068664550781
    4. '):' → logprob: -12.250068664550781
    5. '       ' → logprob: -13.125068664550781
    6. '   ' → logprob: -14.000068664550781
    7. ' and' → logprob: -14.875068664550781
    8. '           ' → logprob: -15.500068664550781
    9. ':**' → logprob: -15.625068664550781
    10. ' or' → logprob: -15.750068664550781

Token 36: '           ' (ID: 352)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.6359230279922485
    2. '           ' → logprob: -0.7609230279922485
    3. ' :' → logprob: -6.510922908782959
    4. ':
' → logprob: -7.260922908782959
    5. '       ' → logprob: -7.760922908782959
    6. '               ' → logprob: -8.385923385620117
    7. '            ' → logprob: -9.010923385620117
    8. '          ' → logprob: -9.510923385620117
    9. ' ' → logprob: -10.010923385620117
    10. '   ' → logprob: -10.260923385620117

Token 37: ' print' (ID: 2123)
  Prédit: ' print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' print' → logprob: -0.10045208036899567
    2. '           ' → logprob: -3.225452184677124
    3. 'print' (adapté à ' print') → logprob: -3.225452184677124
    4. '               ' → logprob: -4.225451946258545
    5. ' ' → logprob: -6.850451946258545
    6. '            ' → logprob: -9.100452423095703
    7. ' ' → logprob: -9.725452423095703
    8. '	print' → logprob: -9.975452423095703
    9. '   ' → logprob: -10.225452423095703
    10. '             ' → logprob: -10.600452423095703

Token 38: '("' (ID: 568)
  Prédit: '("'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '("' → logprob: -0.029761025682091713
    2. '(' → logprob: -3.5297610759735107
    3. '("("' → logprob: -11.77976131439209
    4. '"' → logprob: -13.65476131439209
    5. '("(' → logprob: -14.27976131439209
    6. '('' → logprob: -14.77976131439209
    7. '("")' → logprob: -15.40476131439209
    8. '(
' → logprob: -16.154760360717773
    9. '(""' → logprob: -16.279760360717773
    10. '(

' → logprob: -16.529760360717773

Token 39: 'fly' (ID: 28305)
  Prédit: 'fly'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fly' → logprob: -0.14672712981700897
    2. ' fly' → logprob: -2.0217270851135254
    3. 'b' → logprob: -6.396727085113525
    4. ' bant' → logprob: -7.146727085113525
    5. 'light' → logprob: -7.396727085113525
    6. '"' → logprob: -7.771727085113525
    7. 'fl' → logprob: -8.521727561950684
    8. '   ' → logprob: -9.146727561950684
    9. '```' → logprob: -9.396727561950684
    10. ' ' → logprob: -10.396727561950684

Token 40: '")
' (ID: 1896)
  Prédit: '")'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '")' → logprob: -0.0057127466425299644
    2. ')' → logprob: -6.380712509155273
    3. 'weight' → logprob: -6.755712509155273
    4. '"' → logprob: -7.005712509155273
    5. ' ")' → logprob: -7.255712509155273
    6. '")
' → logprob: -7.755712509155273
    7. '")
' → logprob: -8.755712509155273
    8. 's' → logprob: -8.755712509155273
    9. '   ' → logprob: -9.005712509155273
    10. ' weight' → logprob: -9.505712509155273

Token 41: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0031465813517570496
    2. 'elif' → logprob: -5.878146648406982
    3. '<|end|>' → logprob: -9.378146171569824
    4. ' elif' → logprob: -9.503146171569824
    5. 'else' → logprob: -9.753146171569824
    6. ')' → logprob: -10.378146171569824
    7. ' else' → logprob: -11.003146171569824
    8. '   ' → logprob: -11.503146171569824
    9. '```' → logprob: -11.503146171569824
    10. '           ' → logprob: -11.753146171569824

Token 42: ' elif' (ID: 9497)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.023560136556625366
    2. 'elif' (adapté à ' elif') → logprob: -3.898560047149658
    3. ' elif' → logprob: -6.023560047149658
    4. 'else' → logprob: -8.273560523986816
    5. ' else' → logprob: -8.648560523986816
    6. '```' → logprob: -10.023560523986816
    7. '   ' → logprob: -10.148560523986816
    8. '	elif' → logprob: -11.273560523986816
    9. '           ' → logprob: -11.648560523986816
    10. '<|end|>' → logprob: -11.648560523986816

Token 43: ' w' (ID: 286)
  Prédit: ' w'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' w' → logprob: -0.0012090419186279178
    2. 'w' → logprob: -6.751209259033203
    3. ' ' → logprob: -10.501209259033203
    4. ' ' → logprob: -12.001209259033203
    5. '48' → logprob: -14.001209259033203
    6. '    ' → logprob: -14.126209259033203
    7. '(w' → logprob: -14.501209259033203
    8. '	w' → logprob: -15.063709259033203
    9. ' (' → logprob: -15.188709259033203
    10. '47' → logprob: -15.251209259033203

Token 44: ' <=' (ID: 5017)
  Prédit: ' <='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <=' → logprob: -0.0026307078078389168
    2. '<=' → logprob: -6.002630710601807
    3. ' ' → logprob: -9.002630233764648
    4. ' <' → logprob: -11.127630233764648
    5. '   ' → logprob: -12.627630233764648
    6. ' ≤' → logprob: -12.752630233764648
    7. ' ' → logprob: -12.877630233764648
    8. '  ' → logprob: -13.377630233764648
    9. '    ' → logprob: -13.377630233764648
    10. '.' → logprob: -14.127630233764648

Token 45: ' ' (ID: 220)
  Prédit: '54'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '54' → logprob: -0.03222637251019478
    2. ' ' → logprob: -3.782226324081421
    3. '53' → logprob: -4.7822265625
    4. '55' → logprob: -8.5322265625
    5. '52' → logprob: -8.7822265625
    6. '   ' → logprob: -9.2822265625
    7. '	' → logprob: -10.1572265625
    8. '56' → logprob: -10.7822265625
    9. '  ' → logprob: -11.0322265625
    10. '5' → logprob: -12.3447265625

Token 46: '54' (ID: 6733)
  Prédit: '54'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '54' → logprob: -0.0007696056272834539
    2. '53' → logprob: -7.37576961517334
    3. ' ' → logprob: -9.50076961517334
    4. '55' → logprob: -10.25076961517334
    5. '52' → logprob: -11.37576961517334
    6. '   ' → logprob: -12.25076961517334
    7. '5' → logprob: -12.87576961517334
    8. '	' → logprob: -12.87576961517334
    9. '56' → logprob: -13.06326961517334
    10. '  ' → logprob: -13.81326961517334

Token 47: '.' (ID: 13)
  Prédit: '.'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -5.8961017202818766e-05
    2. ':' → logprob: -10.875059127807617
    3. ' ' → logprob: -11.125059127807617
    4. '0' → logprob: -12.500059127807617
    5. '   ' → logprob: -12.500059127807617
    6. '40' → logprob: -13.000059127807617
    7. '6' → logprob: -13.500059127807617
    8. '60' → logprob: -13.625059127807617
    9. '<|end|>' → logprob: -13.875059127807617
    10. '3' → logprob: -14.125059127807617

Token 48: '00' (ID: 504)
  Prédit: '00'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '00' → logprob: -0.0057414257898926735
    2. '50' → logprob: -5.380741596221924
    3. '34' → logprob: -8.005741119384766
    4. '99' → logprob: -8.380741119384766
    5. '35' → logprob: -9.380741119384766
    6. '90' → logprob: -9.505741119384766
    7. '30' → logprob: -9.880741119384766
    8. '```' → logprob: -10.005741119384766
    9. '40' → logprob: -10.130741119384766
    10. '60' → logprob: -10.255741119384766

Token 49: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -3.054500666621607e-06
    2. '):' → logprob: -13.37500286102295
    3. '       ' → logprob: -14.50000286102295
    4. '           ' → logprob: -15.00000286102295
    5. ':
' → logprob: -15.00000286102295
    6. ' :' → logprob: -15.87500286102295
    7. '   ' → logprob: -16.625003814697266
    8. ')' → logprob: -16.875003814697266
    9. ':**' → logprob: -17.125003814697266
    10. '=' → logprob: -18.250003814697266

Token 50: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00894851703196764
    2. '       ' → logprob: -4.75894832611084
    3. '               ' → logprob: -9.25894832611084
    4. 'print' → logprob: -9.38394832611084
    5. '   ' → logprob: -10.50894832611084
    6. ' ' → logprob: -10.63394832611084
    7. '```' → logprob: -10.75894832611084
    8. '<|end|>' → logprob: -11.00894832611084
    9. '	       ' → logprob: -11.13394832611084
    10. ' ' → logprob: -11.25894832611084

Token 51: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.5084661245346069
    2. '           ' → logprob: -1.258466124534607
    3. ' print' → logprob: -2.3834662437438965
    4. '       ' → logprob: -4.5084662437438965
    5. '               ' → logprob: -4.6334662437438965
    6. '   ' → logprob: -7.5084662437438965
    7. ' ' → logprob: -7.7584662437438965
    8. ' ' → logprob: -8.508465766906738
    9. '```' → logprob: -9.258465766906738
    10. '          ' → logprob: -9.883465766906738

Token 52: '("' (ID: 568)
  Prédit: '("'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '("' → logprob: -0.10025293380022049
    2. '(' → logprob: -2.350252866744995
    3. '("("' → logprob: -10.100253105163574
    4. '('' → logprob: -13.225253105163574
    5. '"' → logprob: -13.725253105163574
    6. '("")' → logprob: -14.225253105163574
    7. '(
' → logprob: -14.350253105163574
    8. '("(' → logprob: -15.225253105163574
    9. '("""' → logprob: -15.225253105163574
    10. '()' → logprob: -15.850253105163574

Token 53: 'b' (ID: 65)
  Prédit: 'b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.002649855799973011
    2. ' bant' → logprob: -6.502649784088135
    3. 'fe' → logprob: -7.877649784088135
    4. '"' → logprob: -8.127650260925293
    5. '   ' → logprob: -8.127650260925293
    6. ' feather' → logprob: -10.127650260925293
    7. '  ' → logprob: -10.752650260925293
    8. ''b' → logprob: -11.127650260925293
    9. 'light' → logprob: -11.252650260925293
    10. '	b' → logprob: -11.752650260925293

Token 54: 'ant' (ID: 493)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.5368083119392395
    2. 'ant' → logprob: -0.9118083119392395
    3. 'an' → logprob: -4.411808490753174
    4. 'antt' → logprob: -8.411808013916016
    5. '```' → logprob: -8.411808013916016
    6. 'r' → logprob: -8.536808013916016
    7. ' bant' → logprob: -9.286808013916016
    8. ' Bant' → logprob: -9.411808013916016
    9. '``' → logprob: -9.536808013916016
    10. ''ant' → logprob: -9.911808013916016

Token 55: 'am' (ID: 313)
  Prédit: 'am'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'am' → logprob: -0.0003631137660704553
    2. 'a' → logprob: -8.12536334991455
    3. 'er' → logprob: -10.62536334991455
    4. 'ам' → logprob: -11.75036334991455
    5. 'em' → logprob: -12.37536334991455
    6. 'ams' → logprob: -12.62536334991455
    7. '   ' → logprob: -13.12536334991455
    8. 'eam' → logprob: -13.25036334991455
    9. '```' → logprob: -13.37536334991455
    10. 'ham' → logprob: -13.62536334991455

Token 56: '")
' (ID: 1896)
  Prédit: '")'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '")' → logprob: -0.06285480409860611
    2. '   ' → logprob: -3.687854766845703
    3. ')' → logprob: -4.312854766845703
    4. '')' → logprob: -4.562854766845703
    5. '```' → logprob: -5.937854766845703
    6. '  ' → logprob: -6.062854766845703
    7. '\n' → logprob: -6.562854766845703
    8. 'weight' → logprob: -6.562854766845703
    9. '"' → logprob: -7.312854766845703
    10. '")
' → logprob: -7.687854766845703

Token 57: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0009544557542540133
    2. 'elif' → logprob: -7.250954627990723
    3. ' elif' → logprob: -9.875954627990723
    4. '<|end|>' → logprob: -10.000954627990723
    5. '```' → logprob: -10.125954627990723
    6. '_' → logprob: -10.375954627990723
    7. ')' → logprob: -11.000954627990723
    8. 'else' → logprob: -11.375954627990723
    9. '   ' → logprob: -11.875954627990723
    10. '           ' → logprob: -11.875954627990723

Token 58: ' elif' (ID: 9497)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.04596070572733879
    2. 'elif' (adapté à ' elif') → logprob: -3.1709606647491455
    3. ' elif' → logprob: -6.045960903167725
    4. '```' → logprob: -8.170960426330566
    5. 'else' → logprob: -9.420960426330566
    6. '   ' → logprob: -9.420960426330566
    7. '           ' → logprob: -9.920960426330566
    8. '<|end|>' → logprob: -10.420960426330566
    9. '	elif' → logprob: -11.045960426330566
    10. ' else' → logprob: -11.170960426330566

Token 59: ' w' (ID: 286)
  Prédit: ' w'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' w' → logprob: -0.002493256703019142
    2. 'w' → logprob: -6.002493381500244
    3. ' ' → logprob: -11.752492904663086
    4. ' ' → logprob: -11.877492904663086
    5. '<|end|>' → logprob: -13.252492904663086
    6. '(w' → logprob: -15.002492904663086
    7. ' (' → logprob: -16.002492904663086
    8. '    ' → logprob: -16.127492904663086
    9. '	w' → logprob: -16.127492904663086
    10. '<w' → logprob: -16.127492904663086

Token 60: ' <=' (ID: 5017)
  Prédit: ' <='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <=' → logprob: -0.011129883117973804
    2. '<=' → logprob: -4.511129856109619
    3. ' ' → logprob: -9.636130332946777
    4. '   ' → logprob: -12.136130332946777
    5. '.' → logprob: -13.386130332946777
    6. ' ≤' → logprob: -13.386130332946777
    7. '<|end|>' → logprob: -13.386130332946777
    8. ' ' → logprob: -13.761130332946777
    9. ' <' → logprob: -13.761130332946777
    10. '  ' → logprob: -13.886130332946777

Token 61: ' ' (ID: 220)
  Prédit: '57'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '57' → logprob: -0.023524748161435127
    2. ' ' → logprob: -3.773524761199951
    3. '56' → logprob: -8.898524284362793
    4. '58' → logprob: -9.523524284362793
    5. '   ' → logprob: -11.023524284362793
    6. '```' → logprob: -11.273524284362793
    7. '``' → logprob: -11.898524284362793
    8. '  ' → logprob: -11.898524284362793
    9. '5' → logprob: -12.398524284362793
    10. '	' → logprob: -12.523524284362793

Token 62: '57' (ID: 5085)
  Prédit: '57'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '57' → logprob: -0.0006012882222421467
    2. '58' → logprob: -7.625601291656494
    3. '56' → logprob: -9.500600814819336
    4. '59' → logprob: -11.000600814819336
    5. ' ' → logprob: -11.125600814819336
    6. '``' → logprob: -13.375600814819336
    7. '```' → logprob: -13.375600814819336
    8. '   ' → logprob: -14.250600814819336
    9. '5' → logprob: -14.500600814819336
    10. '	' → logprob: -14.500600814819336

Token 63: '.' (ID: 13)
  Prédit: '.'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.006733965128660202
    2. ':' → logprob: -5.0067338943481445
    3. '.:' → logprob: -12.256733894348145
    4. '6' → logprob: -12.631733894348145
    5. '   ' → logprob: -13.256733894348145
    6. '0' → logprob: -13.756733894348145
    7. '7' → logprob: -13.881733894348145
    8. ' :' → logprob: -14.131733894348145
    9. '{' → logprob: -14.381733894348145
    10. '4' → logprob: -14.631733894348145

Token 64: '00' (ID: 504)
  Prédit: '50'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '50' → logprob: -0.6381736397743225
    2. '00' → logprob: -1.2631735801696777
    3. '15' → logprob: -2.3881735801696777
    4. '5' → logprob: -2.6381735801696777
    5. '0' → logprob: -4.013173580169678
    6. '500' → logprob: -6.013173580169678
    7. '000' → logprob: -7.138173580169678
    8. '.' → logprob: -7.638173580169678
    9. '150' → logprob: -7.638173580169678
    10. '60' → logprob: -7.638173580169678

Token 65: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -4.096126576769166e-05
    2. ':
' → logprob: -10.750041007995605
    3. '):' → logprob: -11.375041007995605
    4. '       ' → logprob: -12.500041007995605
    5. '           ' → logprob: -12.875041007995605
    6. ' :' → logprob: -14.125041007995605
    7. '   ' → logprob: -15.125041007995605
    8. '>:' → logprob: -15.875041007995605
    9. '<|end|>' → logprob: -16.25004005432129
    10. '```' → logprob: -16.37504005432129

Token 66: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0013913080329075456
    2. 'print' → logprob: -6.751391410827637
    3. '       ' → logprob: -9.251391410827637
    4. ' print' → logprob: -9.751391410827637
    5. '               ' → logprob: -10.501391410827637
    6. '```' → logprob: -11.126391410827637
    7. '          ' → logprob: -11.626391410827637
    8. '   ' → logprob: -12.751391410827637
    9. '         ' → logprob: -12.876391410827637
    10. '	       ' → logprob: -12.876391410827637

Token 67: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.030562113970518112
    2. '           ' → logprob: -3.655562162399292
    3. ' print' → logprob: -5.530561923980713
    4. '       ' → logprob: -8.405562400817871
    5. '   ' → logprob: -10.405562400817871
    6. '               ' → logprob: -11.155562400817871
    7. '```' → logprob: -11.405562400817871
    8. ' ' → logprob: -12.780562400817871
    9. '          ' → logprob: -13.030562400817871
    10. '	print' → logprob: -13.155562400817871

Token 68: '("' (ID: 568)
  Prédit: '("'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '("' → logprob: -0.0006278486107476056
    2. '(' → logprob: -7.3756279945373535
    3. '()' → logprob: -14.250627517700195
    4. '('' → logprob: -14.750627517700195
    5. '("")' → logprob: -15.625627517700195
    6. '("("' → logprob: -15.875627517700195
    7. ' ("' → logprob: -17.750627517700195
    8. '(("' → logprob: -18.000627517700195
    9. '("\' → logprob: -18.500627517700195
    10. '("(' → logprob: -18.500627517700195

Token 69: 'fe' (ID: 2302)
  Prédit: 'fe'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fe' → logprob: -0.0017195657128468156
    2. ' feather' → logprob: -6.5017194747924805
    3. 'light' → logprob: -8.50171947479248
    4. 'Fe' → logprob: -12.50171947479248
    5. '-fe' → logprob: -12.50171947479248
    6. '   ' → logprob: -14.00171947479248
    7. '```' → logprob: -14.12671947479248
    8. 'f' → logprob: -14.37671947479248
    9. '_fe' → logprob: -14.37671947479248
    10. '        ' → logprob: -14.50171947479248

Token 70: 'ather' (ID: 2508)
  Prédit: 'ather'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ather' → logprob: -0.023808348923921585
    2. 'ther' → logprob: -4.273808479309082
    3. 'der' → logprob: -5.273808479309082
    4. 'ath' → logprob: -7.148808479309082
    5. 'male' → logprob: -7.398808479309082
    6. 'the' → logprob: -7.773808479309082
    7. 'd' → logprob: -7.898808479309082
    8. 'r' → logprob: -8.148808479309082
    9. 'athe' → logprob: -8.648808479309082
    10. 'th' → logprob: -8.773808479309082

Token 71: '")
' (ID: 1896)
  Prédit: '")'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '")' → logprob: -0.016031669452786446
    2. 'weight' → logprob: -4.391031742095947
    3. '")
' → logprob: -6.516031742095947
    4. '')' → logprob: -7.266031742095947
    5. ')' → logprob: -7.766031742095947
    6. '   ' → logprob: -8.266031265258789
    7. ' ")' → logprob: -9.141031265258789
    8. '\n' → logprob: -9.391031265258789
    9. '```' → logprob: -9.641031265258789
    10. '`)' → logprob: -9.641031265258789

Token 72: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00047511752927675843
    2. '```' → logprob: -8.50047492980957
    3. 'elif' → logprob: -8.62547492980957
    4. '<|end|>' → logprob: -10.37547492980957
    5. ' elif' → logprob: -10.75047492980957
    6. 'else' → logprob: -11.50047492980957
    7. '\n' → logprob: -11.87547492980957
    8. '   ' → logprob: -12.62547492980957
    9. '\' → logprob: -12.75047492980957
    10. ')' → logprob: -13.12547492980957

Token 73: ' elif' (ID: 9497)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.31801140308380127
    2. 'elif' (adapté à ' elif') → logprob: -1.3180114030838013
    3. ' elif' → logprob: -5.568011283874512
    4. 'else' → logprob: -7.693011283874512
    5. '<|end|>' → logprob: -8.318011283874512
    6. '	elif' → logprob: -9.568011283874512
    7. '   ' → logprob: -9.943011283874512
    8. '```' → logprob: -10.318011283874512
    9. ' else' → logprob: -10.568011283874512
    10. '           ' → logprob: -11.568011283874512

Token 74: ' w' (ID: 286)
  Prédit: ' w'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' w' → logprob: -0.001940057729370892
    2. 'w' → logprob: -6.2519402503967285
    3. ' ' → logprob: -11.75193977355957
    4. ' ' → logprob: -12.75193977355957
    5. '    ' → logprob: -15.25193977355957
    6. '<|end|>' → logprob: -16.00193977355957
    7. '(w' → logprob: -16.37693977355957
    8. ' ' → logprob: -16.62693977355957
    9. '	w' → logprob: -16.75193977355957
    10. '<w' → logprob: -16.75193977355957

Token 75: ' <=' (ID: 5017)
  Prédit: ' <='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <=' → logprob: -0.005991128273308277
    2. '<=' → logprob: -5.130990982055664
    3. ' ' → logprob: -10.130990982055664
    4. '   ' → logprob: -11.380990982055664
    5. '    ' → logprob: -12.130990982055664
    6. '  ' → logprob: -13.505990982055664
    7. '      ' → logprob: -13.755990982055664
    8. '.' → logprob: -14.630990982055664
    9. ' ' → logprob: -14.630990982055664
    10. ' ≤' → logprob: -14.630990982055664

Token 76: ' ' (ID: 220)
  Prédit: '60'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '60' → logprob: -0.0023622133303433657
    2. ' ' → logprob: -6.252362251281738
    3. '61' → logprob: -7.877362251281738
    4. '59' → logprob: -10.002362251281738
    5. '   ' → logprob: -12.377362251281738
    6. '```' → logprob: -13.377362251281738
    7. '	' → logprob: -13.877362251281738
    8. '6' → logprob: -14.377362251281738
    9. ' ' → logprob: -15.377362251281738
    10. '     ' → logprob: -15.502362251281738

Token 77: '60' (ID: 1910)
  Prédit: '60'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '60' → logprob: -0.0008313055150210857
    2. '61' → logprob: -7.750831127166748
    3. ' ' → logprob: -8.125831604003906
    4. '59' → logprob: -9.375831604003906
    5. '6' → logprob: -11.000831604003906
    6. '   ' → logprob: -14.375831604003906
    7. '600' → logprob: -14.500831604003906
    8. '``' → logprob: -14.875831604003906
    9. '```' → logprob: -15.000831604003906
    10. '６' → logprob: -15.250831604003906

Token 78: '.' (ID: 13)
  Prédit: '.'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.00039170795935206115
    2. ':' → logprob: -7.875391483306885
    3. '.:' → logprob: -12.375391960144043
    4. '0' → logprob: -13.750391960144043
    5. '   ' → logprob: -14.125391960144043
    6. ' .' → logprob: -14.125391960144043
    7. '<|end|>' → logprob: -14.250391960144043
    8. '6' → logprob: -14.375391960144043
    9. ' ' → logprob: -14.375391960144043
    10. '60' → logprob: -15.187891960144043

Token 79: '00' (ID: 504)
  Prédit: '00'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '00' → logprob: -0.010835462249815464
    2. '0' → logprob: -5.010835647583008
    3. '50' → logprob: -5.635835647583008
    4. '99' → logprob: -7.760835647583008
    5. '5' → logprob: -9.635835647583008
    6. '49' → logprob: -11.635835647583008
    7. ' ' → logprob: -11.760835647583008
    8. '60' → logprob: -12.260835647583008
    9. '```' → logprob: -12.510835647583008
    10. '9' → logprob: -12.823335647583008

Token 80: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -8.220573363360018e-05
    2. ':
' → logprob: -9.500082015991211
    3. '           ' → logprob: -12.625082015991211
    4. '       ' → logprob: -13.125082015991211
    5. '):' → logprob: -13.625082015991211
    6. ' :' → logprob: -15.000082015991211
    7. '   ' → logprob: -15.250082015991211
    8. ':

' → logprob: -16.87508201599121
    9. '=' → logprob: -17.25008201599121
    10. '      ' → logprob: -17.87508201599121

Token 81: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.002107198117300868
    2. 'print' → logprob: -6.2521071434021
    3. '       ' → logprob: -9.252107620239258
    4. ' print' → logprob: -10.252107620239258
    5. '               ' → logprob: -10.877107620239258
    6. '          ' → logprob: -11.627107620239258
    7. '```' → logprob: -11.752107620239258
    8. '   ' → logprob: -12.252107620239258
    9. '         ' → logprob: -13.127107620239258
    10. '            ' → logprob: -13.752107620239258

Token 82: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.1041797325015068
    2. '           ' → logprob: -2.604179620742798
    3. ' print' → logprob: -3.729179620742798
    4. '       ' → logprob: -7.354179859161377
    5. '   ' → logprob: -8.979179382324219
    6. '               ' → logprob: -9.479179382324219
    7. '```' → logprob: -9.479179382324219
    8. ' ' → logprob: -11.354179382324219
    9. '          ' → logprob: -11.729179382324219
    10. '         ' → logprob: -12.479179382324219

Token 83: '("' (ID: 568)
  Prédit: '("'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '("' → logprob: -0.2519835829734802
    2. '(' → logprob: -1.501983642578125
    3. '"' → logprob: -10.501983642578125
    4. '("("' → logprob: -10.876983642578125
    5. '('' → logprob: -12.626983642578125
    6. ' ("' → logprob: -13.626983642578125
    7. '()' → logprob: -13.876983642578125
    8. '("")' → logprob: -13.876983642578125
    9. '(
' → logprob: -15.126983642578125
    10. '("(' → logprob: -15.251983642578125

Token 84: 'light' (ID: 6038)
  Prédit: 'light'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'light' → logprob: -0.000418040988733992
    2. 'lighter' → logprob: -9.125417709350586
    3. 'w' → logprob: -9.750417709350586
    4. '   ' → logprob: -10.125417709350586
    5. '```' → logprob: -10.375417709350586
    6. 'lig' → logprob: -10.750417709350586
    7. 'lights' → logprob: -11.125417709350586
    8. '        ' → logprob: -11.250417709350586
    9. '``' → logprob: -11.250417709350586
    10. 'l' → logprob: -11.375417709350586

Token 85: '")
' (ID: 1896)
  Prédit: ' wel'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' wel' → logprob: -0.24783074855804443
    2. ' fly' → logprob: -2.247830867767334
    3. ' feather' → logprob: -3.247830867767334
    4. ' middle' → logprob: -4.247830867767334
    5. ' ' → logprob: -4.372830867767334
    6. ' ' → logprob: -4.372830867767334
    7. ' bant' → logprob: -5.122830867767334
    8. 'weight' → logprob: -5.372830867767334
    9. '```' → logprob: -5.622830867767334
    10. ' heavyweight' → logprob: -5.872830867767334

Token 86: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.017106711864471436
    2. 'elif' → logprob: -4.517106533050537
    3. ':' → logprob: -5.642106533050537
    4. ' elif' → logprob: -7.517106533050537
    5. '```' → logprob: -7.642106533050537
    6. '           ' → logprob: -7.642106533050537
    7. 'else' → logprob: -8.017107009887695
    8. '   ' → logprob: -8.017107009887695
    9. '<|end|>' → logprob: -9.892107009887695
    10. ' else' → logprob: -10.142107009887695

Token 87: ' elif' (ID: 9497)
  Prédit: 'elif'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'elif' (adapté à ' elif') → logprob: -0.5920193195343018
    2. '       ' → logprob: -0.8420193195343018
    3. ' elif' → logprob: -4.217019081115723
    4. 'else' → logprob: -7.717019081115723
    5. '   ' → logprob: -7.967019081115723
    6. '```' → logprob: -8.592019081115723
    7. '	elif' → logprob: -9.217019081115723
    8. ' else' → logprob: -10.217019081115723
    9. '<|end|>' → logprob: -11.092019081115723
    10. '    
' → logprob: -11.592019081115723

Token 88: ' w' (ID: 286)
  Prédit: ' w'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' w' → logprob: -0.0052588991820812225
    2. 'w' → logprob: -5.255259037017822
    3. ' ' → logprob: -10.880258560180664
    4. ' ' → logprob: -12.255258560180664
    5. '<|end|>' → logprob: -14.630258560180664
    6. '	w' → logprob: -15.630258560180664
    7. '47' → logprob: -16.130258560180664
    8. '  ' → logprob: -16.130258560180664
    9. '64' → logprob: -16.380258560180664
    10. ' (' → logprob: -16.630258560180664

Token 89: ' <=' (ID: 5017)
  Prédit: ' <='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <=' → logprob: -0.0035785723011940718
    2. '<=' → logprob: -5.7535786628723145
    3. ' ' → logprob: -7.8785786628723145
    4. '  ' → logprob: -12.003578186035156
    5. '   ' → logprob: -12.253578186035156
    6. ' <' → logprob: -12.628578186035156
    7. ' ' → logprob: -13.253578186035156
    8. '    ' → logprob: -13.878578186035156
    9. ' ≤' → logprob: -13.878578186035156
    10. '      ' → logprob: -14.003578186035156

Token 90: ' ' (ID: 220)
  Prédit: '63'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '63' → logprob: -0.2259894460439682
    2. ' ' → logprob: -1.8509894609451294
    3. '64' → logprob: -3.10098934173584
    4. '65' → logprob: -10.22598934173584
    5. '   ' → logprob: -10.35098934173584
    6. '	' → logprob: -10.47598934173584
    7. '66' → logprob: -10.72598934173584
    8. '  ' → logprob: -11.10098934173584
    9. '```' → logprob: -11.47598934173584
    10. '67' → logprob: -11.97598934173584

Token 91: '64' (ID: 2220)
  Prédit: '63'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '63' → logprob: -0.11350691318511963
    2. '64' → logprob: -2.23850679397583
    3. ' ' → logprob: -8.238507270812988
    4. '66' → logprob: -8.863507270812988
    5. '65' → logprob: -9.363507270812988
    6. '6' → logprob: -10.113507270812988
    7. '67' → logprob: -10.238507270812988
    8. '	' → logprob: -10.363507270812988
    9. '
' → logprob: -11.363507270812988
    10. '６' → logprob: -11.613507270812988

Token 92: '.' (ID: 13)
  Prédit: '.'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -1.318681188422488e-05
    2. ' ' → logprob: -12.50001335144043
    3. ' .' → logprob: -12.75001335144043
    4. '0' → logprob: -13.25001335144043
    5. '6' → logprob: -14.25001335144043
    6. ':' → logprob: -14.37501335144043
    7. '60' → logprob: -15.00001335144043
    8. '.

' → logprob: -15.12501335144043
    9. '46' → logprob: -15.12501335144043
    10. '.
' → logprob: -15.25001335144043

Token 93: '00' (ID: 504)
  Prédit: '00'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '00' → logprob: -0.00024323153775185347
    2. '0' → logprob: -8.500243186950684
    3. '50' → logprob: -10.625243186950684
    4. '```' → logprob: -12.125243186950684
    5. '99' → logprob: -13.312743186950684
    6. '5' → logprob: -13.812743186950684
    7. '80' → logprob: -14.250243186950684
    8. '25' → logprob: -14.625243186950684
    9. '40' → logprob: -14.812743186950684
    10. '75' → logprob: -14.875243186950684

Token 94: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0005352786974981427
    2. ':
' → logprob: -7.625535488128662
    3. '       ' → logprob: -10.750535011291504
    4. '           ' → logprob: -10.750535011291504
    5. '   ' → logprob: -13.500535011291504
    6. ' :' → logprob: -13.625535011291504
    7. '):' → logprob: -13.875535011291504
    8. ':

' → logprob: -15.750535011291504
    9. 'print' → logprob: -16.37553596496582
    10. '          ' → logprob: -16.62553596496582

Token 95: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.015800897032022476
    2. '       ' → logprob: -4.390800952911377
    3. ' ' → logprob: -6.765800952911377
    4. ' ' → logprob: -7.015800952911377
    5. 'print' → logprob: -7.265800952911377
    6. '   ' → logprob: -9.265800476074219
    7. '               ' → logprob: -9.390800476074219
    8. '          ' → logprob: -10.140800476074219
    9. '<|end|>' → logprob: -10.265800476074219
    10. ' 
' → logprob: -10.390800476074219

Token 96: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.0010981805389747024
    2. ' print' → logprob: -7.501098155975342
    3. '           ' → logprob: -7.751098155975342
    4. '       ' → logprob: -9.1260986328125
    5. '   ' → logprob: -12.5010986328125
    6. '	print' → logprob: -14.3760986328125
    7. '```' → logprob: -14.5010986328125
    8. ' ' → logprob: -14.6260986328125
    9. '               ' → logprob: -15.2510986328125
    10. '          ' → logprob: -16.5010986328125

Token 97: '("' (ID: 568)
  Prédit: '("'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '("' → logprob: -0.10060948133468628
    2. '(' → logprob: -2.350609540939331
    3. '("("' → logprob: -7.850609302520752
    4. '"' → logprob: -11.72560977935791
    5. '("(' → logprob: -12.97560977935791
    6. '('' → logprob: -13.22560977935791
    7. '("")' → logprob: -15.10060977935791
    8. '(""' → logprob: -15.60060977935791
    9. '()' → logprob: -16.225608825683594
    10. '(

' → logprob: -16.225608825683594

Token 98: 'light' (ID: 6038)
  Prédit: 'light'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'light' → logprob: -0.383060097694397
    2. 'wel' → logprob: -1.258060097694397
    3. 'medium' → logprob: -4.258059978485107
    4. 'middle' → logprob: -5.508059978485107
    5. 'super' → logprob: -5.633059978485107
    6. 'moder' → logprob: -5.758059978485107
    7. 'first' → logprob: -6.633059978485107
    8. '```' → logprob: -6.633059978485107
    9. 'w' → logprob: -6.758059978485107
    10. '   ' → logprob: -7.383059978485107

Token 99: ' wel' (ID: 4234)
  Prédit: 'middle'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'middle' → logprob: -0.6713541150093079
    2. '	' → logprob: -2.046354055404663
    3. ' heavyweight' → logprob: -2.796354055404663
    4. '```' → logprob: -2.921354055404663
    5. '	m' → logprob: -3.171354055404663
    6. 'm' → logprob: -3.171354055404663
    7. 'heavy' → logprob: -3.421354055404663
    8. ' middle' → logprob: -3.546354055404663
    9. ' wel' → logprob: -3.671354055404663
    10. ' ' → logprob: -4.546354293823242

Token 100: 'ter' (ID: 399)
  Prédit: 'ter'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ter' → logprob: -0.0009214656893163919
    2. 't' → logprob: -7.000921249389648
    3. 'd' → logprob: -12.750921249389648
    4. 'te' → logprob: -13.375921249389648
    5. 'term' → logprob: -13.500921249389648
    6. 'tern' → logprob: -13.625921249389648
    7. '```' → logprob: -14.375921249389648
    8. 'der' → logprob: -14.625921249389648
    9. 'terne' → logprob: -14.625921249389648
    10. 'ters' → logprob: -14.625921249389648

Token 101: '")
' (ID: 1896)
  Prédit: '")'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '")' → logprob: -0.310061514377594
    2. 'weight' → logprob: -1.6850614547729492
    3. ')' → logprob: -2.685061454772949
    4. '<|end|>' → logprob: -5.060061454772949
    5. '')' → logprob: -6.435061454772949
    6. '")
' → logprob: -6.685061454772949
    7. '```' → logprob: -7.685061454772949
    8. '"' → logprob: -7.935061454772949
    9. ' ")' → logprob: -7.935061454772949
    10. 'w' → logprob: -8.06006145477295

Token 102: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0002670575922820717
    2. 'elif' → logprob: -8.375267028808594
    3. ' elif' → logprob: -10.500267028808594
    4. 'else' → logprob: -12.375267028808594
    5. ' else' → logprob: -13.250267028808594
    6. '   ' → logprob: -13.375267028808594
    7. '```' → logprob: -14.250267028808594
    8. '<|end|>' → logprob: -15.625267028808594
    9. ' ' → logprob: -16.125267028808594
    10. '\n' → logprob: -16.250267028808594

Token 103: ' elif' (ID: 9497)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.049744170159101486
    2. 'elif' (adapté à ' elif') → logprob: -3.049744129180908
    3. ' elif' → logprob: -6.799744129180908
    4. '   ' → logprob: -10.674744606018066
    5. '```' → logprob: -11.549744606018066
    6. 'else' → logprob: -12.299744606018066
    7. ' ' → logprob: -14.049744606018066
    8. ')' → logprob: -14.424744606018066
    9. '<|end|>' → logprob: -14.424744606018066
    10. ' else' → logprob: -14.549744606018066

Token 104: ' w' (ID: 286)
  Prédit: ' w'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' w' → logprob: -0.00672804145142436
    2. 'w' → logprob: -5.006728172302246
    3. ' ' → logprob: -11.881728172302246
    4. ' ' → logprob: -12.506728172302246
    5. '64' → logprob: -14.631728172302246
    6. '   ' → logprob: -15.006728172302246
    7. '65' → logprob: -16.13172721862793
    8. '    ' → logprob: -16.38172721862793
    9. '(w' → logprob: -16.38172721862793
    10. '	w' → logprob: -16.44422721862793

Token 105: ' <=' (ID: 5017)
  Prédit: ' <='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <=' → logprob: -0.0015484257601201534
    2. '<=' → logprob: -6.5015482902526855
    3. ' ' → logprob: -10.251548767089844
    4. '  ' → logprob: -12.376548767089844
    5. '   ' → logprob: -12.876548767089844
    6. '    ' → logprob: -13.501548767089844
    7. ' ≤' → logprob: -14.376548767089844
    8. ' <' → logprob: -14.376548767089844
    9. '      ' → logprob: -14.501548767089844
    10. ' ' → logprob: -14.876548767089844

Token 106: ' ' (ID: 220)
  Prédit: '69'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '69' → logprob: -0.02501440793275833
    2. ' ' → logprob: -3.7750144004821777
    3. '67' → logprob: -6.400014400482178
    4. '68' → logprob: -9.400014877319336
    5. '70' → logprob: -11.275014877319336
    6. '66' → logprob: -11.775014877319336
    7. '  ' → logprob: -14.400014877319336
    8. '   ' → logprob: -14.525014877319336
    9. '```' → logprob: -14.900014877319336
    10. '	' → logprob: -15.025014877319336

Token 107: '69' (ID: 5759)
  Prédit: '69'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '69' → logprob: -0.0037786972243338823
    2. '67' → logprob: -6.00377893447876
    3. '68' → logprob: -7.12877893447876
    4. ' ' → logprob: -7.62877893447876
    5. '70' → logprob: -11.503778457641602
    6. '66' → logprob: -13.003778457641602
    7. '   ' → logprob: -15.253778457641602
    8. '690' → logprob: -15.253778457641602
    9. '``' → logprob: -15.378778457641602
    10. '  ' → logprob: -15.753778457641602

Token 108: '.' (ID: 13)
  Prédit: '.'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.002491118386387825
    2. ':' → logprob: -6.002490997314453
    3. '<|end|>' → logprob: -12.252490997314453
    4. ' ' → logprob: -12.752490997314453
    5. '   ' → logprob: -13.127490997314453
    6. ' .' → logprob: -13.252490997314453
    7. '6' → logprob: -14.127490997314453
    8. '0' → logprob: -14.752490997314453
    9. '  ' → logprob: -15.127490997314453
    10. '<|end|>' → logprob: -15.252490997314453

Token 109: '00' (ID: 504)
  Prédit: '00'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '00' → logprob: -0.0002004410926019773
    2. '0' → logprob: -9.125200271606445
    3. ' ' → logprob: -9.625200271606445
    4. '99' → logprob: -10.875200271606445
    5. '50' → logprob: -13.250200271606445
    6. '   ' → logprob: -13.875200271606445
    7. 'print' → logprob: -14.000200271606445
    8. '```' → logprob: -14.125200271606445
    9. '  ' → logprob: -14.750200271606445
    10. ':' → logprob: -15.437700271606445

Token 110: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0004754751571454108
    2. ':
' → logprob: -7.8754754066467285
    3. '       ' → logprob: -9.500475883483887
    4. '           ' → logprob: -11.000475883483887
    5. '):' → logprob: -12.875475883483887
    6. ' :' → logprob: -14.375475883483887
    7. '   ' → logprob: -15.750475883483887
    8. '<|end|>' → logprob: -16.12547492980957
    9. ':

' → logprob: -16.37547492980957
    10. ',' → logprob: -16.37547492980957

Token 111: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0007559045334346592
    2. '       ' → logprob: -7.250755786895752
    3. 'print' → logprob: -10.12575626373291
    4. '               ' → logprob: -13.12575626373291
    5. ' print' → logprob: -13.50075626373291
    6. '          ' → logprob: -13.87575626373291
    7. '   ' → logprob: -14.62575626373291
    8. '         ' → logprob: -14.87575626373291
    9. '```' → logprob: -15.00075626373291
    10. '		' → logprob: -15.87575626373291

Token 112: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.12278696894645691
    2. ' print' → logprob: -2.2477869987487793
    3. '           ' → logprob: -4.872786998748779
    4. '       ' → logprob: -6.122786998748779
    5. '   ' → logprob: -10.247786521911621
    6. '               ' → logprob: -11.372786521911621
    7. ' ' → logprob: -11.747786521911621
    8. '	print' → logprob: -12.622786521911621
    9. '          ' → logprob: -12.872786521911621
    10. '         ' → logprob: -13.122786521911621

Token 113: '("' (ID: 568)
  Prédit: '("'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '("' → logprob: -0.005234594456851482
    2. '(' → logprob: -5.255234718322754
    3. '('' → logprob: -14.755234718322754
    4. '"' → logprob: -16.005233764648438
    5. '()' → logprob: -16.130233764648438
    6. '("("' → logprob: -16.880233764648438
    7. '("")' → logprob: -17.005233764648438
    8. '(("' → logprob: -17.255233764648438
    9. '("""' → logprob: -17.255233764648438
    10. '(
' → logprob: -17.380233764648438

Token 114: 'wel' (ID: 19663)
  Prédit: 'wel'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'wel' → logprob: -0.010339342057704926
    2. 'w' → logprob: -5.260339260101318
    3. 'light' → logprob: -5.885339260101318
    4. 'medium' → logprob: -6.635339260101318
    5. 'regular' → logprob: -8.260339736938477
    6. ' wel' → logprob: -8.260339736938477
    7. 'normal' → logprob: -8.885339736938477
    8. 'm' → logprob: -9.010339736938477
    9. 'moder' → logprob: -9.885339736938477
    10. 'mid' → logprob: -9.885339736938477

Token 115: 'ter' (ID: 399)
  Prédit: 'ter'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ter' → logprob: -7.584239938296378e-06
    2. 't' → logprob: -12.750007629394531
    3. 'der' → logprob: -12.875007629394531
    4. 'ters' → logprob: -14.375007629394531
    5. 'tert' → logprob: -14.375007629394531
    6. 'er' → logprob: -14.625007629394531
    7. 'term' → logprob: -16.12500762939453
    8. '```' → logprob: -16.37500762939453
    9. 'ighter' → logprob: -16.50000762939453
    10. 'tered' → logprob: -16.75000762939453

Token 116: '")
' (ID: 1896)
  Prédit: '")'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '")' → logprob: -0.3493818938732147
    2. '")
' → logprob: -1.224381923675537
    3. '")
' → logprob: -7.724381923675537
    4. '       ' → logprob: -8.349381446838379
    5. '"):
' → logprob: -8.849381446838379
    6. '   ' → logprob: -10.099381446838379
    7. '"):' → logprob: -10.974381446838379
    8. ')' → logprob: -11.224381446838379
    9. ' ")' → logprob: -11.349381446838379
    10. '")

' → logprob: -12.099381446838379

Token 117: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0003078142472077161
    2. 'elif' → logprob: -8.3753080368042
    3. 'else' → logprob: -9.8753080368042
    4. ' else' → logprob: -11.5003080368042
    5. ' elif' → logprob: -11.8753080368042
    6. '```' → logprob: -12.7503080368042
    7. '<|end|>' → logprob: -12.8753080368042
    8. '   ' → logprob: -13.2503080368042
    9. '      ' → logprob: -14.7503080368042
    10. ')' → logprob: -15.1253080368042

Token 118: ' elif' (ID: 9497)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.08473465591669083
    2. 'elif' (adapté à ' elif') → logprob: -2.5847346782684326
    3. ' elif' → logprob: -5.2097344398498535
    4. 'else' → logprob: -8.334734916687012
    5. '   ' → logprob: -9.959734916687012
    6. ' else' → logprob: -10.084734916687012
    7. '```' → logprob: -10.709734916687012
    8. ' ' → logprob: -12.834734916687012
    9. '	elif' → logprob: -12.834734916687012
    10. '           ' → logprob: -13.209734916687012

Token 119: ' w' (ID: 286)
  Prédit: ' w'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' w' → logprob: -0.008622493594884872
    2. 'w' → logprob: -4.758622646331787
    3. ' ' → logprob: -12.508622169494629
    4. ' ' → logprob: -13.008622169494629
    5. '    ' → logprob: -14.383622169494629
    6. '   ' → logprob: -15.196122169494629
    7. '0' → logprob: -15.696122169494629
    8. '64' → logprob: -16.133623123168945
    9. '(w' → logprob: -16.258623123168945
    10. '	w' → logprob: -16.446123123168945

Token 120: ' <=' (ID: 5017)
  Prédit: ' <='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <=' → logprob: -0.007634078152477741
    2. '<=' → logprob: -4.882634162902832
    3. '   ' → logprob: -11.507634162902832
    4. ' ' → logprob: -11.507634162902832
    5. '  ' → logprob: -12.632634162902832
    6. '      ' → logprob: -13.382634162902832
    7. '    ' → logprob: -14.382634162902832
    8. ' <' → logprob: -14.507634162902832
    9. ' ' → logprob: -15.257634162902832
    10. '.' → logprob: -15.257634162902832

Token 121: ' ' (ID: 220)
  Prédit: '75'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '75' → logprob: -0.08626944571733475
    2. ' ' → logprob: -2.5862693786621094
    3. '72' → logprob: -5.211269378662109
    4. '76' → logprob: -6.836269378662109
    5. '	' → logprob: -8.46126937866211
    6. '73' → logprob: -8.58626937866211
    7. '74' → logprob: -8.58626937866211
    8. '   ' → logprob: -8.83626937866211
    9. '  ' → logprob: -10.21126937866211
    10. '77' → logprob: -11.46126937866211

Token 122: '75' (ID: 3384)
  Prédit: '75'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '75' → logprob: -0.00019126241386402398
    2. ' ' → logprob: -8.750191688537598
    3. '72' → logprob: -11.125191688537598
    4. '76' → logprob: -11.625191688537598
    5. '   ' → logprob: -12.750191688537598
    6. '	' → logprob: -13.000191688537598
    7. '74' → logprob: -13.500191688537598
    8. '  ' → logprob: -14.500191688537598
    9. '73' → logprob: -14.750191688537598
    10. '
' → logprob: -14.875191688537598

Token 123: '.' (ID: 13)
  Prédit: '.'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.048618365079164505
    2. ':' → logprob: -3.0486183166503906
    3. '<|end|>' → logprob: -11.29861831665039
    4. ' .' → logprob: -12.17361831665039
    5. '   ' → logprob: -12.79861831665039
    6. '):' → logprob: -13.17361831665039
    7. ' :' → logprob: -13.17361831665039
    8. ' ' → logprob: -13.54861831665039
    9. '0' → logprob: -13.67361831665039
    10. ':
' → logprob: -14.17361831665039

Token 124: '00' (ID: 504)
  Prédit: '00'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '00' → logprob: -5.383526149671525e-05
    2. '0' → logprob: -10.125053405761719
    3. '50' → logprob: -11.625053405761719
    4. '```' → logprob: -13.625053405761719
    5. '60' → logprob: -14.000053405761719
    6. '99' → logprob: -14.500053405761719
    7. '000' → logprob: -15.000053405761719
    8. 'print' → logprob: -15.250053405761719
    9. '90' → logprob: -15.500053405761719
    10. '   ' → logprob: -15.500053405761719

Token 125: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.02057587541639805
    2. ':
' → logprob: -3.895575761795044
    3. '):' → logprob: -11.145575523376465
    4. '       ' → logprob: -11.395575523376465
    5. '           ' → logprob: -12.770575523376465
    6. '):
' → logprob: -13.020575523376465
    7. '<|end|>' → logprob: -13.645575523376465
    8. ':

' → logprob: -14.145575523376465
    9. ':
' → logprob: -14.895575523376465
    10. '   ' → logprob: -15.520575523376465

Token 126: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0004595055361278355
    2. '       ' → logprob: -8.000459671020508
    3. 'print' → logprob: -9.625459671020508
    4. '               ' → logprob: -10.000459671020508
    5. '          ' → logprob: -12.375459671020508
    6. ' print' → logprob: -12.750459671020508
    7. '   ' → logprob: -13.375459671020508
    8. '         ' → logprob: -13.750459671020508
    9. '```' → logprob: -14.000459671020508
    10. ':' → logprob: -14.250459671020508

Token 127: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.003700200468301773
    2. '           ' → logprob: -6.253700256347656
    3. ' print' → logprob: -6.378700256347656
    4. '       ' → logprob: -9.628700256347656
    5. '   ' → logprob: -12.628700256347656
    6. '```' → logprob: -13.628700256347656
    7. '               ' → logprob: -14.003700256347656
    8. ' ' → logprob: -14.378700256347656
    9. '          ' → logprob: -14.878700256347656
    10. '	print' → logprob: -15.253700256347656

Token 128: '("' (ID: 568)
  Prédit: '("'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '("' → logprob: -0.0003377270477358252
    2. '(' → logprob: -8.000337600708008
    3. ' ("' → logprob: -13.875337600708008
    4. '"' → logprob: -14.375337600708008
    5. '('' → logprob: -14.625337600708008
    6. '(
' → logprob: -15.750337600708008
    7. ' ' → logprob: -16.625337600708008
    8. '   ' → logprob: -16.625337600708008
    9. '("
' → logprob: -17.500337600708008
    10. '(("' → logprob: -17.875337600708008

Token 129: 'light' (ID: 6038)
  Prédit: 'middle'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'middle' → logprob: -0.012728013098239899
    2. 'light' → logprob: -4.887728214263916
    3. 'mid' → logprob: -5.887728214263916
    4. ' middle' → logprob: -6.887728214263916
    5. 'medium' → logprob: -7.012728214263916
    6. '```' → logprob: -8.387727737426758
    7. 'm' → logprob: -9.387727737426758
    8. 'super' → logprob: -9.762727737426758
    9. 'midd' → logprob: -11.762727737426758
    10. 'moder' → logprob: -12.012727737426758

Token 130: ' middle' (ID: 10006)
  Prédit: ' middle'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' middle' → logprob: -0.5905420184135437
    2. ' heavyweight' → logprob: -1.4655420780181885
    3. 'middle' → logprob: -1.5905420780181885
    4. 'heavy' → logprob: -4.965541839599609
    5. '_middle' → logprob: -6.965541839599609
    6. ' heavy' → logprob: -6.965541839599609
    7. '	m' → logprob: -7.590541839599609
    8. '	' → logprob: -7.715541839599609
    9. '-middle' → logprob: -7.965541839599609
    10. '.middle' → logprob: -8.71554183959961

Token 131: '")
' (ID: 1896)
  Prédit: '")'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '")' → logprob: -0.6446497440338135
    2. '"):
' → logprob: -0.8946497440338135
    3. '")
' → logprob: -3.1446497440338135
    4. '"):' → logprob: -3.8946497440338135
    5. '   ' → logprob: -6.519649505615234
    6. '"):
' → logprob: -7.644649505615234
    7. 'weight' → logprob: -8.019649505615234
    8. '```' → logprob: -8.519649505615234
    9. ' ")' → logprob: -9.144649505615234
    10. ''):
' → logprob: -9.769649505615234

Token 132: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0008682293118909001
    2. 'elif' → logprob: -7.250868320465088
    3. 'else' → logprob: -9.25086784362793
    4. ' else' → logprob: -10.37586784362793
    5. ' elif' → logprob: -10.87586784362793
    6. '   ' → logprob: -12.50086784362793
    7. ':' → logprob: -13.00086784362793
    8. '<|end|>' → logprob: -13.12586784362793
    9. '```' → logprob: -13.62586784362793
    10. '      ' → logprob: -13.87586784362793

Token 133: ' elif' (ID: 9497)
  Prédit: 'elif'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'elif' (adapté à ' elif') → logprob: -0.023785300552845
    2. '       ' → logprob: -3.898785352706909
    3. 'else' → logprob: -6.02378511428833
    4. ' elif' → logprob: -7.14878511428833
    5. '   ' → logprob: -11.148785591125488
    6. ' else' → logprob: -11.523785591125488
    7. '```' → logprob: -12.773785591125488
    8. '	elif' → logprob: -13.773785591125488
    9. '           ' → logprob: -14.273785591125488
    10. ' ' → logprob: -14.773785591125488

Token 134: ' w' (ID: 286)
  Prédit: ' w'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' w' → logprob: -0.01815778948366642
    2. 'w' → logprob: -4.018157958984375
    3. ' ' → logprob: -12.393157958984375
    4. ' ' → logprob: -13.643157958984375
    5. '(w' → logprob: -14.393157958984375
    6. '   ' → logprob: -14.768157958984375
    7. '	w' → logprob: -14.893157958984375
    8. '  ' → logprob: -15.580657958984375
    9. '    ' → logprob: -15.955657958984375
    10. '<w' → logprob: -16.143157958984375

Token 135: ' <=' (ID: 5017)
  Prédit: ' <='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <=' → logprob: -0.012520251795649529
    2. '<=' → logprob: -4.3875203132629395
    3. ' ' → logprob: -12.387519836425781
    4. '   ' → logprob: -12.637519836425781
    5. '      ' → logprob: -13.762519836425781
    6. '  ' → logprob: -14.512519836425781
    7. '    ' → logprob: -15.012519836425781
    8. ' ≤' → logprob: -15.387519836425781
    9. ')<=' → logprob: -15.512519836425781
    10. '<|end|>' → logprob: -15.512519836425781

Token 136: ' ' (ID: 220)
  Prédit: '81'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '81' → logprob: -0.00104305159766227
    2. ' ' → logprob: -7.12604284286499
    3. '82' → logprob: -8.376043319702148
    4. '83' → logprob: -12.751043319702148
    5. '   ' → logprob: -13.126043319702148
    6. '
' → logprob: -14.001043319702148
    7. '```' → logprob: -14.376043319702148
    8. '80' → logprob: -14.501043319702148
    9. '	' → logprob: -15.126043319702148
    10. '  ' → logprob: -15.376043319702148

Token 137: '81' (ID: 9989)
  Prédit: '81'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '81' → logprob: -0.00026848804554902017
    2. '82' → logprob: -8.625268936157227
    3. ' ' → logprob: -9.375268936157227
    4. '83' → logprob: -13.250268936157227
    5. '   ' → logprob: -14.000268936157227
    6. '
' → logprob: -14.875268936157227
    7. '80' → logprob: -15.000268936157227
    8. '```' → logprob: -15.625268936157227
    9. '``' → logprob: -16.000268936157227
    10. '	' → logprob: -16.375268936157227

Token 138: '.' (ID: 13)
  Prédit: '.'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.007612544111907482
    2. ':' → logprob: -4.882612705230713
    3. '   ' → logprob: -13.132612228393555
    4. ':
' → logprob: -13.632612228393555
    5. '):' → logprob: -14.507612228393555
    6. '0' → logprob: -14.757612228393555
    7. ')' → logprob: -15.132612228393555
    8. '[' → logprob: -15.382612228393555
    9. ' :' → logprob: -15.507612228393555
    10. '       ' → logprob: -15.507612228393555

Token 139: '00' (ID: 504)
  Prédit: '00'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '00' → logprob: -0.0007304243044927716
    2. '0' → logprob: -7.625730514526367
    3. ' ' → logprob: -8.500730514526367
    4. ':' → logprob: -11.500730514526367
    5. '50' → logprob: -12.000730514526367
    6. '   ' → logprob: -12.000730514526367
    7. '  ' → logprob: -12.250730514526367
    8. '    ' → logprob: -13.125730514526367
    9. '         ' → logprob: -13.375730514526367
    10. '        ' → logprob: -13.500730514526367

Token 140: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.002822943264618516
    2. ':
' → logprob: -5.8778228759765625
    3. '           ' → logprob: -11.252822875976562
    4. '       ' → logprob: -12.502822875976562
    5. '):' → logprob: -14.252822875976562
    6. ' :' → logprob: -14.752822875976562
    7. ':

' → logprob: -16.002822875976562
    8. ':
' → logprob: -16.502822875976562
    9. '   ' → logprob: -16.752822875976562
    10. '):
' → logprob: -16.877822875976562

Token 141: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00021629150433000177
    2. '       ' → logprob: -8.625216484069824
    3. 'print' → logprob: -10.625216484069824
    4. '               ' → logprob: -12.125216484069824
    5. '          ' → logprob: -13.000216484069824
    6. '```' → logprob: -13.750216484069824
    7. '   ' → logprob: -13.875216484069824
    8. ' ' → logprob: -14.500216484069824
    9. '         ' → logprob: -14.625216484069824
    10. ' print' → logprob: -14.875216484069824

Token 142: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.0031899516470730305
    2. '           ' → logprob: -6.003190040588379
    3. ' print' → logprob: -7.253190040588379
    4. '       ' → logprob: -12.253190040588379
    5. '               ' → logprob: -14.503190040588379
    6. '   ' → logprob: -14.628190040588379
    7. '```' → logprob: -15.628190040588379
    8. '	print' → logprob: -16.378189086914062
    9. ' ' → logprob: -16.753189086914062
    10. '          ' → logprob: -16.878189086914062

Token 143: '("' (ID: 568)
  Prédit: '("'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '("' → logprob: -0.002806417876854539
    2. '(' → logprob: -5.877806186676025
    3. ' ("' → logprob: -14.127806663513184
    4. '"' → logprob: -14.877806663513184
    5. '('' → logprob: -15.502806663513184
    6. '(
' → logprob: -16.377805709838867
    7. '("""' → logprob: -18.002805709838867
    8. '(("' → logprob: -18.377805709838867
    9. '()' → logprob: -18.502805709838867
    10. '("")' → logprob: -19.377805709838867

Token 144: 'middle' (ID: 42122)
  Prédit: 'middle'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'middle' → logprob: -0.006571126636117697
    2. 'medium' → logprob: -5.131571292877197
    3. 'mid' → logprob: -7.631571292877197
    4. 'light' → logprob: -9.256570816040039
    5. ' middle' → logprob: -10.756570816040039
    6. 'midd' → logprob: -11.631570816040039
    7. 'cr' → logprob: -12.006570816040039
    8. 'medio' → logprob: -12.256570816040039
    9. 'heavy' → logprob: -12.256570816040039
    10. '_middle' → logprob: -12.881570816040039

Token 145: '")
' (ID: 1896)
  Prédit: '")
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '")
' → logprob: -0.2520546317100525
    2. '")' → logprob: -1.5020546913146973
    3. '       ' → logprob: -10.002054214477539
    4. '")
' → logprob: -10.127054214477539
    5. ' ")
' → logprob: -11.502054214477539
    6. '   ' → logprob: -12.002054214477539
    7. '"' → logprob: -12.127054214477539
    8. ' ")' → logprob: -12.377054214477539
    9. '```' → logprob: -12.502054214477539
    10. ')
' → logprob: -13.002054214477539

Token 146: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -3.023293538717553e-05
    2. 'elif' → logprob: -10.625030517578125
    3. '<|end|>' → logprob: -13.125030517578125
    4. 'else' → logprob: -13.375030517578125
    5. ' elif' → logprob: -13.625030517578125
    6. ' else' → logprob: -14.500030517578125
    7. '      ' → logprob: -15.500030517578125
    8. '   ' → logprob: -15.875030517578125
    9. '```' → logprob: -16.125030517578125
    10. '           ' → logprob: -16.750030517578125

Token 147: ' elif' (ID: 9497)
  Prédit: 'elif'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'elif' (adapté à ' elif') → logprob: -0.2555563151836395
    2. '       ' → logprob: -1.505556344985962
    3. ' elif' → logprob: -5.880556106567383
    4. 'else' → logprob: -7.130556106567383
    5. '   ' → logprob: -11.005556106567383
    6. ' else' → logprob: -12.005556106567383
    7. '	elif' → logprob: -13.880556106567383
    8. '```' → logprob: -14.130556106567383
    9. '      ' → logprob: -14.380556106567383
    10. ' ' → logprob: -14.505556106567383

Token 148: ' w' (ID: 286)
  Prédit: ' w'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' w' → logprob: -0.005241937469691038
    2. 'w' → logprob: -5.255241870880127
    3. ' ' → logprob: -12.630242347717285
    4. ' ' → logprob: -13.005242347717285
    5. '   ' → logprob: -14.505242347717285
    6. '	w' → logprob: -14.880242347717285
    7. '    ' → logprob: -15.255242347717285
    8. '(w' → logprob: -15.505242347717285
    9. ' True' → logprob: -15.692742347717285
    10. '64' → logprob: -15.755242347717285

Token 149: ' <=' (ID: 5017)
  Prédit: ' <='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <=' → logprob: -0.004110934678465128
    2. '<=' → logprob: -5.504110813140869
    3. ' ' → logprob: -10.629111289978027
    4. '<|end|>' → logprob: -12.629111289978027
    5. '   ' → logprob: -13.754111289978027
    6. ' ≤' → logprob: -13.754111289978027
    7. ' ' → logprob: -14.629111289978027
    8. '.' → logprob: -14.754111289978027
    9. '[' → logprob: -14.879111289978027
    10. '  ' → logprob: -14.879111289978027

Token 150: ' ' (ID: 220)
  Prédit: '91'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '91' → logprob: -0.7329428195953369
    2. ' ' → logprob: -0.8579428195953369
    3. '86' → logprob: -2.357942819595337
    4. '90' → logprob: -7.357942581176758
    5. '   ' → logprob: -9.607942581176758
    6. '89' → logprob: -9.732942581176758
    7. '  ' → logprob: -10.982942581176758
    8. '88' → logprob: -11.482942581176758
    9. '     ' → logprob: -11.607942581176758
    10. '	' → logprob: -11.857942581176758

Token 151: '91' (ID: 8956)
  Prédit: '91'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '91' → logprob: -0.0007575734634883702
    2. '86' → logprob: -7.625757694244385
    3. '90' → logprob: -8.750757217407227
    4. ' ' → logprob: -9.250757217407227
    5. '   ' → logprob: -12.250757217407227
    6. '
' → logprob: -13.125757217407227
    7. '

' → logprob: -13.125757217407227
    8. '     ' → logprob: -14.125757217407227
    9. '``' → logprob: -14.125757217407227
    10. '	' → logprob: -14.250757217407227

Token 152: '.' (ID: 13)
  Prédit: '.'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.002813194179907441
    2. ':' → logprob: -5.877813339233398
    3. ' ' → logprob: -14.002813339233398
    4. ' .' → logprob: -14.002813339233398
    5. '   ' → logprob: -14.127813339233398
    6. '0' → logprob: -14.252813339233398
    7. '.:' → logprob: -14.252813339233398
    8. ':
' → logprob: -14.752813339233398
    9. ' :' → logprob: -14.877813339233398
    10. '[' → logprob: -14.877813339233398

Token 153: '00' (ID: 504)
  Prédit: '00'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '00' → logprob: -0.0003255719493608922
    2. '0' → logprob: -8.125325202941895
    3. ' ' → logprob: -10.625325202941895
    4. ':' → logprob: -13.375325202941895
    5. '   ' → logprob: -13.750325202941895
    6. '  ' → logprob: -14.250325202941895
    7. '        ' → logprob: -14.750325202941895
    8. '000' → logprob: -14.750325202941895
    9. '    ' → logprob: -15.250325202941895
    10. '       ' → logprob: -15.750325202941895

Token 154: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.029798392206430435
    2. ':
' → logprob: -3.5297985076904297
    3. '       ' → logprob: -10.52979850769043
    4. '           ' → logprob: -11.02979850769043
    5. '):' → logprob: -13.15479850769043
    6. ':

' → logprob: -13.90479850769043
    7. '):
' → logprob: -14.40479850769043
    8. ':
' → logprob: -14.52979850769043
    9. ' :' → logprob: -15.27979850769043
    10. '<|end|>' → logprob: -15.27979850769043

Token 155: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0007386347278952599
    2. 'print' → logprob: -7.375738620758057
    3. '               ' → logprob: -9.250739097595215
    4. '       ' → logprob: -12.000739097595215
    5. ' print' → logprob: -12.250739097595215
    6. '          ' → logprob: -13.125739097595215
    7. '            ' → logprob: -14.000739097595215
    8. '```' → logprob: -14.125739097595215
    9. '		' → logprob: -14.625739097595215
    10. '         ' → logprob: -15.000739097595215

Token 156: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.027822230011224747
    2. ' print' → logprob: -3.777822256088257
    3. '           ' → logprob: -5.402822017669678
    4. '               ' → logprob: -10.027822494506836
    5. '       ' → logprob: -12.152822494506836
    6. '```' → logprob: -12.277822494506836
    7. ' ' → logprob: -12.652822494506836
    8. '   ' → logprob: -13.652822494506836
    9. '          ' → logprob: -13.652822494506836
    10. '	print' → logprob: -14.027822494506836

Token 157: '("' (ID: 568)
  Prédit: '("'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '("' → logprob: -0.014220856130123138
    2. '(' → logprob: -4.264220714569092
    3. ' ("' → logprob: -9.88922119140625
    4. ' (' → logprob: -13.26422119140625
    5. '(
' → logprob: -13.26422119140625
    6. '"' → logprob: -13.38922119140625
    7. '('' → logprob: -14.26422119140625
    8. ' "' → logprob: -14.76422119140625
    9. ' ' → logprob: -15.38922119140625
    10. '   ' → logprob: -15.88922119140625

Token 158: 'light' (ID: 6038)
  Prédit: 'heavy'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'heavy' → logprob: -0.531071662902832
    2. 'light' → logprob: -1.531071662902832
    3. 'cr' → logprob: -1.781071662902832
    4. ' cruiser' → logprob: -4.031071662902832
    5. 'middle' → logprob: -5.156071662902832
    6. 'medium' → logprob: -6.656071662902832
    7. 'Cru' → logprob: -7.781071662902832
    8. '```' → logprob: -7.906071662902832
    9. '	' → logprob: -8.531071662902832
    10. '`' → logprob: -8.656071662902832

Token 159: ' heavy' (ID: 12914)
  Prédit: ' heavyweight'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' heavyweight' → logprob: -0.04016036167740822
    2. 'heavy' → logprob: -3.6651604175567627
    3. '-heavy' → logprob: -4.415160179138184
    4. '	' → logprob: -7.790160179138184
    5. ' heavy' → logprob: -7.790160179138184
    6. '
' → logprob: -8.915160179138184
    7. '   ' → logprob: -9.290160179138184
    8. '+' → logprob: -9.290160179138184
    9. ' ' → logprob: -9.415160179138184
    10. '```' → logprob: -9.665160179138184

Token 160: '")
' (ID: 1896)
  Prédit: '")'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '")' → logprob: -0.02702181041240692
    2. '")
' → logprob: -3.652021884918213
    3. ')' → logprob: -8.152021408081055
    4. ' ")' → logprob: -8.652021408081055
    5. 'weight' → logprob: -9.277021408081055
    6. '"):
' → logprob: -9.902021408081055
    7. '")
' → logprob: -10.652021408081055
    8. ')
' → logprob: -11.527021408081055
    9. '   ' → logprob: -11.527021408081055
    10. '"' → logprob: -11.652021408081055

Token 161: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -4.954393079970032e-05
    2. 'else' → logprob: -10.250049591064453
    3. ' else' → logprob: -12.000049591064453
    4. 'elif' → logprob: -12.875049591064453
    5. '           ' → logprob: -13.250049591064453
    6. '```' → logprob: -14.000049591064453
    7. ')' → logprob: -14.250049591064453
    8. ':' → logprob: -14.500049591064453
    9. '<|end|>' → logprob: -14.625049591064453
    10. '               ' → logprob: -14.875049591064453

Token 162: ' else' (ID: 1203)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.21282054483890533
    2. 'else' (adapté à ' else') → logprob: -2.087820529937744
    3. 'elif' → logprob: -2.962820529937744
    4. ' else' → logprob: -4.337820529937744
    5. ' elif' → logprob: -5.837820529937744
    6. '   ' → logprob: -9.962821006774902
    7. '           ' → logprob: -11.337821006774902
    8. '```' → logprob: -11.962821006774902
    9. 'except' → logprob: -12.462821006774902
    10. '      ' → logprob: -12.712821006774902

Token 163: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.016056541353464127
    2. ':
' → logprob: -4.141056537628174
    3. ':
' → logprob: -11.391057014465332
    4. ' :' → logprob: -12.516057014465332
    5. '       ' → logprob: -12.641057014465332
    6. '           ' → logprob: -13.266057014465332
    7. ':

' → logprob: -14.391057014465332
    8. '   ' → logprob: -14.641057014465332
    9. ':return' → logprob: -14.766057014465332
    10. ' :
' → logprob: -15.266057014465332

Token 164: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.014323215931653976
    2. 'print' → logprob: -4.5143232345581055
    3. '       ' → logprob: -6.5143232345581055
    4. '               ' → logprob: -7.0143232345581055
    5. ' print' → logprob: -7.1393232345581055
    6. '          ' → logprob: -10.889323234558105
    7. ' ' → logprob: -11.014323234558105
    8. '            ' → logprob: -11.139323234558105
    9. '   ' → logprob: -11.389323234558105
    10. '```' → logprob: -11.764323234558105

Token 165: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.3981725573539734
    2. ' print' → logprob: -1.1481726169586182
    3. ' break' → logprob: -4.898172378540039
    4. 'break' → logprob: -5.648172378540039
    5. '           ' → logprob: -8.648172378540039
    6. '       ' → logprob: -10.648172378540039
    7. '        ' → logprob: -11.648172378540039
    8. ' ' → logprob: -11.773172378540039
    9. 'pr' → logprob: -12.023172378540039
    10. '            ' → logprob: -12.023172378540039

Token 166: '("' (ID: 568)
  Prédit: '("'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '("' → logprob: -0.10021314769983292
    2. '(' → logprob: -2.350213050842285
    3. '('' → logprob: -13.100213050842285
    4. '(
' → logprob: -13.100213050842285
    5. '("")' → logprob: -13.975213050842285
    6. '("("' → logprob: -14.475213050842285
    7. '()' → logprob: -15.475213050842285
    8. '"' → logprob: -15.725213050842285
    9. ' ("' → logprob: -16.2252140045166
    10. '(""' → logprob: -16.3502140045166

Token 167: 'heavy' (ID: 191395)
  Prédit: 'heavy'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'heavy' → logprob: -0.05526779964566231
    2. 'cr' → logprob: -3.055267810821533
    3. ' cruiser' → logprob: -5.805267810821533
    4. 'super' → logprob: -5.930267810821533
    5. ' heavyweight' → logprob: -7.430267810821533
    6. 'Heavy' → logprob: -8.805267333984375
    7. 'Cru' → logprob: -9.555267333984375
    8. 'unknown' → logprob: -10.680267333984375
    9. ' heavy' → logprob: -11.055267333984375
    10. '	' → logprob: -11.180267333984375

Token 168: '")
' (ID: 1896)
  Prédit: '")'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '")' → logprob: -0.02335973083972931
    2. '")
' → logprob: -3.773359775543213
    3. '")
' → logprob: -9.523359298706055
    4. 'weight' → logprob: -11.023359298706055
    5. ')' → logprob: -11.773359298706055
    6. '"' → logprob: -12.273359298706055
    7. ' ")' → logprob: -12.398359298706055
    8. '")

' → logprob: -12.523359298706055
    9. 'w' → logprob: -14.148359298706055
    10. 'weights' → logprob: -14.523359298706055

Token 169: '   ' (ID: 271)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.29351136088371277
    2. '   ' → logprob: -1.4185113906860352
    3. 'except' → logprob: -5.043511390686035
    4. ' except' → logprob: -5.418511390686035
    5. '<|end|>' → logprob: -7.418511390686035
    6. '	except' → logprob: -7.543511390686035
    7. '#' → logprob: -9.418511390686035
    8. '           ' → logprob: -10.543511390686035
    9. 'break' → logprob: -11.043511390686035
    10. '	' → logprob: -11.043511390686035

Token 170: ' except' (ID: 6384)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.295693963766098
    2. 'except' (adapté à ' except') → logprob: -1.7956939935684204
    3. ' except' → logprob: -2.795693874359131
    4. '       ' → logprob: -3.545693874359131
    5. '	except' → logprob: -10.420694351196289
    6. 'break' → logprob: -11.420694351196289
    7. ' break' → logprob: -12.295694351196289
    8. ' ' → logprob: -13.420694351196289
    9. '    
' → logprob: -13.920694351196289
    10. '  ' → logprob: -14.045694351196289

Token 171: ' EOF' (ID: 72412)
  Prédit: ' EOF'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' EOF' → logprob: -0.056167080998420715
    2. ' Value' → logprob: -2.9311671257019043
    3. ' Exception' → logprob: -7.556167125701904
    4. 'EOF' → logprob: -7.681167125701904
    5. ' ' → logprob: -8.931166648864746
    6. '(Value' → logprob: -9.806166648864746
    7. ' Keyboard' → logprob: -10.056166648864746
    8. ' (' → logprob: -10.181166648864746
    9. ':' → logprob: -11.931166648864746
    10. 'Value' → logprob: -12.056166648864746

Token 172: 'Error' (ID: 2255)
  Prédit: 'Error'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Error' → logprob: 0.0
    2. 'E' → logprob: -17.75
    3. 'error' → logprob: -17.875
    4. 'rror' → logprob: -18.75
    5. 'Er' → logprob: -18.75
    6. 'EOF' → logprob: -18.875
    7. 'ERROR' → logprob: -19.375
    8. 'Erro' → logprob: -19.375
    9. ' Error' → logprob: -19.5
    10. '	Error' → logprob: -20.25

Token 173: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.006928612012416124
    2. ':
' → logprob: -5.006928443908691
    3. '       ' → logprob: -8.506928443908691
    4. '   ' → logprob: -12.756928443908691
    5. '():' → logprob: -12.881928443908691
    6. '():
' → logprob: -13.131928443908691
    7. '):' → logprob: -13.381928443908691
    8. '):
' → logprob: -15.006928443908691
    9. '<|end|>' → logprob: -15.381928443908691
    10. '.' → logprob: -15.506928443908691

Token 174: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0016893428983166814
    2. ' break' → logprob: -6.751689434051514
    3. '   ' → logprob: -7.751689434051514
    4. 'break' → logprob: -10.376688957214355
    5. '           ' → logprob: -10.876688957214355
    6. '	break' → logprob: -11.001688957214355
    7. '    ' → logprob: -11.751688957214355
    8. '      ' → logprob: -12.001688957214355
    9. '        ' → logprob: -12.751688957214355
    10. '     ' → logprob: -13.376688957214355

Token 175: ' break' (ID: 2338)
  Prédit: ' break'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' break' → logprob: -0.044288016855716705
    2. 'break' (adapté à ' break') → logprob: -3.669287919998169
    3. '       ' → logprob: -4.044288158416748
    4. '   ' → logprob: -8.54428768157959
    5. '	break' → logprob: -9.41928768157959
    6. '           ' → logprob: -11.79428768157959
    7. '        
' → logprob: -12.41928768157959
    8. '    ' → logprob: -12.79428768157959
    9. '    
' → logprob: -12.79428768157959
    10. '_break' → logprob: -13.16928768157959


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 173
Tokens correctement prédits (1ère position, stricte): 98
Tokens correctement prédits (1ère position, avec adaptation): 110
Tokens correctement prédits (top 10): 163
Précision stricte (1ère position): 56.65%
Précision adaptée (1ère position): 63.58%
Précision (top 10): 94.22%
================================================================================
