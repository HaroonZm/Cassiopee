================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:59:13
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
from typing import List, Tuple, Dict, Iterator
from dataclasses import dataclass
from functools import lru_cache


@dataclass(frozen=True)
class ProblemParameters:
    region_count: int
    days: int
    max_burden: int
    max_multi_live_days: int


@dataclass(frozen=True)
class LiveData:
    expected_profit: List[List[int]]  # [region][day]
    burden: List[List[int]]  # [region][day]


@dataclass(frozen=True)
class ScheduleState:
    day: int
    burden_used: int
    multi_live_days_used: int
    last_regions_bitset: int  # bitmask of regions visited today to avoid repeat within same day


class LiveScheduleSolver:
    def __init__(self, parameters: ProblemParameters, data: LiveData):
        self.p = parameters
        self.data = data
        # Precompute adjacency for regions
        self.adjacency_map = self._build_adjacency_map(self.p.region_count)

    @staticmethod
    def _build_adjacency_map(region_count: int) -> Dict[int, List[int]]:
        adjacency = {i: [] for i in range(region_count)}
        for i in range(region_count):
            if i > 0:
                adjacency[i].append(i - 1)
            if i < region_count - 1:
                adjacency[i].append(i + 1)
        return adjacency

    def solve(self) -> int:
        # Since multiple lives per day must be adjacent regions and cannot repeat same region same day,
        # we need to consider all sequences of regions (sets) per day with adjacency,
        # but this would be huge.
        # Instead, we consider combinations encoded as bitsets, but that too is large.
        # To reduce complexity, we do a stateful DP:
        # State: day, burden used, multi-live-days used
        # Transition: For each subset of regions on today's live (0 or more, but if more than 1 then adjacency and no duplicates)
        # We handle the condition of at most one multi-live day per state.

        # Given constraints:
        # C <= 15, D <= 30, W <= 50, X <= 5
        # We will enumerate for each day all valid "live sets" respecting adjacency and no duplicate regions same day

        valid_live_sets = self._generate_valid_live_sets()

        @lru_cache(maxsize=None)
        def dp(day: int, burden_left: int, multi_live_days_left: int) -> int:
            if day == self.p.days:
                return 0

            best_profit = 0
            # Try all valid live sets on this day
            for live_set in valid_live_sets:
                burden_sum = 0
                profit_sum = 0
                count_lives = bin(live_set).count('1')
                if count_lives == 0:
                    # skip no live (allowed?), problem states max 1 live per day principal, 0 live allowed is doubtful. Let's allow no live no burden no profit.
                    profit_sum = 0
                    burden_sum = 0
                    needed_multi = 0
                else:
                    needed_multi = 1 if count_lives > 1 else 0
                    if needed_multi > multi_live_days_left:
                        continue
                    # Sum burden and profit for selected regions
                    valid = True
                    for r in range(self.p.region_count):
                        if (live_set & (1 << r)) != 0:
                            e = self.data.expected_profit[r][day]
                            f = self.data.burden[r][day]
                            if e == 0:
                                valid = False
                                break
                            profit_sum += e
                            burden_sum += f
                    if not valid:
                        continue
                if burden_sum > burden_left:
                    continue
                candidate = profit_sum + dp(day + 1, burden_left - burden_sum, multi_live_days_left - needed_multi)
                if candidate > best_profit:
                    best_profit = candidate
            return best_profit

        return dp(0, self.p.max_burden, self.p.max_multi_live_days)

    def _generate_valid_live_sets(self) -> List[int]:
        # Generate all subsets of regions that are valid to be performed in one day:
        # - no duplicate region obviously (sets)
        # - if multiple regions, they form a connected chain by adjacency
        # Max regions = 15 -> 2^15 = 32768 subsets possible

        # We'll cache region adjacency bitmasks for quick checking
        adj_masks = []
        for i in range(self.p.region_count):
            mask = 0
            for adj in self.adjacency_map[i]:
                mask |= (1 << adj)
            adj_masks.append(mask)

        valid_sets = []
        # We rely on the fact that subsets with 0 or 1 region always valid
        # For > 1 region, must be connected adj.

        def is_connected_subset(s: int) -> bool:
            # BFS starting from any set bit
            if s == 0:
                return True
            # Find first set bit index
            start = (s & (-s)).bit_length() - 1
            visited = 0
            queue = [start]
            visited |= (1 << start)
            while queue:
                v = queue.pop()
                neighbors = adj_masks[v]
                # neighbors intersect s (regions in subset) not yet visited
                nbrs_in_s = neighbors & s & (~visited)
                # expand visited with nbrs_in_s
                while nbrs_in_s:
                    nxt = (nbrs_in_s & (-nbrs_in_s)).bit_length() - 1
                    nbrs_in_s &= ~(1 << nxt)
                    visited |= (1 << nxt)
                    queue.append(nxt)

            return visited == s

        for subset in range(1 << self.p.region_count):
            # check connectedness if size > 1
            if bin(subset).count('1') <= 1:
                valid_sets.append(subset)
            else:
                if is_connected_subset(subset):
                    valid_sets.append(subset)
        return valid_sets


class InputParser:
    def __init__(self, lines: Iterator[str]):
        self.lines = lines

    def parse_next_case(self) -> Tuple[ProblemParameters, LiveData]:
        # parse header line
        while True:
            header_line = next(self.lines).strip()
            if header_line:
                break
        C, D, W, X = map(int, header_line.split())
        if (C, D, W, X) == (0, 0, 0, 0):
            return None, None

        # parse E: C rows * D columns each (for profit)
        expected_profit = []
        for _ in range(C):
            profit_line = next(self.lines).strip()
            while not profit_line:
                profit_line = next(self.lines).strip()
            row = list(map(int, profit_line.split()))
            # There could be multiple lines if data array split per day?
            # Problem shows E i,j in lines, but sample input is presented concatenated.
            # We'll consider each line is C integers for a day (?), the sample input seems tricky.
            # Actually, from problem description, E i,j lines are C*D lines.
            # Each line is a single integer (expect profit) for region i and day j.
            # So we read C*D lines (not a single line).
            # Correction: we must read C * D lines, each line one integer.

        # Due to problem description structure, we must read C*D lines with one integer each for expected profit, then same for burden
        # So rewrite parsing accordingly

        # Rewind parsing for E:
        e_profit = [[0]*D for _ in range(C)]
        for i in range(C):
            for j in range(D):
                line = next(self.lines).strip()
                while not line:
                    line = next(self.lines).strip()
                e_profit[i][j] = int(line)

        # then F burden similarly
        f_burden = [[0]*D for _ in range(C)]
        for i in range(C):
            for j in range(D):
                line = next(self.lines).strip()
                while not line:
                    line = next(self.lines).strip()
                f_burden[i][j] = int(line)

        return ProblemParameters(C, D, W, X), LiveData(e_profit, f_burden)


class LiveScheduleProcessor:
    def __init__(self):
        self.results: List[int] = []

    def process(self, lines: Iterator[str]):
        parser = InputParser(lines)
        while True:
            params, data = parser.parse_next_case()
            if params is None:
                break
            solver = LiveScheduleSolver(params, data)
            ans = solver.solve()
            self.results.append(ans)

    def output_results(self):
        for res in self.results:
            print(res)


def main():
    import sys
    processor = LiveScheduleProcessor()
    processor.process(iter(sys.stdin))
    processor.output_results()


if __name__ == "__main__":
    main()
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'from' (ID: 2845)
  → Token d'amorce (pas de prédiction)

Token 1: ' typing' (ID: 34152)
  → Token d'amorce (pas de prédiction)

Token 2: ' import' (ID: 1588)
  → Token d'amorce (pas de prédiction)

Token 3: ' List' (ID: 2655)
  Prédit: ' List'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' List' → logprob: -0.33398276567459106
    2. 'List' → logprob: -1.8339827060699463
    3. 'Any' → logprob: -2.4589827060699463
    4. ' Any' → logprob: -3.3339827060699463
    5. ' Optional' → logprob: -6.708982944488525
    6. 'Optional' → logprob: -7.208982944488525
    7. ' Union' → logprob: -7.833982944488525
    8. 'Union' → logprob: -8.458982467651367
    9. 'Iterable' → logprob: -8.708982467651367
    10. ' Generator' → logprob: -9.208982467651367

Token 4: ',' (ID: 11)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '```' → logprob: -0.6117462515830994
    2. 'def' → logprob: -1.3617463111877441
    3. '<|end|>' → logprob: -2.986746311187744
    4. '
' → logprob: -3.611746311187744
    5. '[' → logprob: -3.736746311187744
    6. ',' → logprob: -3.861746311187744
    7. '\' → logprob: -3.986746311187744
    8. '\n' → logprob: -3.986746311187744
    9. 'import' → logprob: -4.611746311187744
    10. 'a' → logprob: -5.361746311187744

Token 5: ' Tuple' (ID: 50841)
  Prédit: ' Optional'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Optional' → logprob: -0.40772536396980286
    2. 'Optional' → logprob: -1.1577253341674805
    3. ' Dict' → logprob: -4.7827253341674805
    4. 'Dict' → logprob: -4.9077253341674805
    5. 'Tuple' → logprob: -5.7827253341674805
    6. ' Tuple' → logprob: -7.0327253341674805
    7. ' Union' → logprob: -7.4077253341674805
    8. 'Union' → logprob: -9.28272533416748
    9. 'Iterable' → logprob: -10.03272533416748
    10. 'Any' → logprob: -10.53272533416748

Token 6: ',' (ID: 11)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -1.098759412765503
    2. ',' → logprob: -1.723759412765503
    3. '```' → logprob: -1.973759412765503
    4. '\n' → logprob: -2.098759412765503
    5. 'import' → logprob: -3.098759412765503
    6. '\' → logprob: -3.098759412765503
    7. '[' → logprob: -3.473759412765503
    8. ':' → logprob: -3.723759412765503
    9. '(' → logprob: -3.848759412765503
    10. '
' → logprob: -4.098759651184082

Token 7: ' Dict' (ID: 55179)
  Prédit: ' Dict'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Dict' → logprob: -0.19282151758670807
    2. 'Dict' → logprob: -2.192821502685547
    3. ' Optional' → logprob: -3.692821502685547
    4. ' Union' → logprob: -3.817821502685547
    5. 'Optional' → logprob: -4.817821502685547
    6. 'Union' → logprob: -6.192821502685547
    7. ' Callable' → logprob: -6.192821502685547
    8. 'Iterable' → logprob: -6.942821502685547
    9. ' dict' → logprob: -7.317821502685547
    10. 'Set' → logprob: -7.442821502685547

Token 8: ',' (ID: 11)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '```' → logprob: -1.064244031906128
    2. 'def' → logprob: -1.314244031906128
    3. ',' → logprob: -1.814244031906128
    4. 'import' → logprob: -2.314244031906128
    5. '<|end|>' → logprob: -3.189244031906128
    6. '[' → logprob: -4.314244270324707
    7. '`' → logprob: -4.439244270324707
    8. 'a' → logprob: -4.564244270324707
    9. ':' → logprob: -4.689244270324707
    10. '\' → logprob: -5.064244270324707

Token 9: ' Iterator' (ID: 41994)
  Prédit: 'Set'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Set' → logprob: -0.5913087725639343
    2. 'Union' → logprob: -1.591308832168579
    3. 'Any' → logprob: -2.216308832168579
    4. ' Union' → logprob: -2.841308832168579
    5. 'Optional' → logprob: -2.966308832168579
    6. 'Iterable' → logprob: -5.21630859375
    7. ' Optional' → logprob: -5.34130859375
    8. ' Set' → logprob: -5.59130859375
    9. 'Callable' → logprob: -5.84130859375
    10. ' Any' → logprob: -5.96630859375

Token 10: '
' (ID: 198)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -1.213252305984497
    2. '(' → logprob: -1.338252305984497
    3. ':' → logprob: -1.588252305984497
    4. ',' → logprob: -1.838252305984497
    5. 'a' → logprob: -3.463252305984497
    6. 'def' → logprob: -4.463252067565918
    7. '```' → logprob: -4.463252067565918
    8. '\' → logprob: -5.463252067565918
    9. '\[' → logprob: -5.463252067565918
    10. '.' → logprob: -5.713252067565918

Token 11: 'from' (ID: 2845)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '```' → logprob: -1.0298296213150024
    2. ',' → logprob: -1.4048296213150024
    3. ':' → logprob: -2.154829502105713
    4. 'def' → logprob: -2.529829502105713
    5. 'a' → logprob: -3.029829502105713
    6. '`' → logprob: -3.654829502105713
    7. '<|end|>' → logprob: -3.779829502105713
    8. '[' → logprob: -3.779829502105713
    9. '\' → logprob: -3.904829502105713
    10. 'import' → logprob: -3.904829502105713

Token 12: ' dat' (ID: 1814)
  Prédit: ' collections'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' collections' → logprob: -0.6406580805778503
    2. ' typing' → logprob: -0.7656580805778503
    3. ' itertools' → logprob: -5.890657901763916
    4. 'collections' → logprob: -6.015657901763916
    5. ' ' → logprob: -6.390657901763916
    6. 'typing' → logprob: -8.265658378601074
    7. ' dat' → logprob: -8.640658378601074
    8. ' sys' → logprob: -9.140658378601074
    9. ' math' → logprob: -9.265658378601074
    10. ' io' → logprob: -9.640658378601074

Token 13: 'aclasses' (ID: 190044)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.45795372128486633
    2. 'aclasses' → logprob: -1.207953691482544
    3. 'etime' → logprob: -2.832953691482544
    4. 'as' → logprob: -5.457953929901123
    5. 'aclass' → logprob: -5.957953929901123
    6. 'e' → logprob: -6.082953929901123
    7. 'etimes' → logprob: -8.332953453063965
    8. 'aset' → logprob: -8.457953453063965
    9. 'al' → logprob: -10.582953453063965
    10. 'abase' → logprob: -10.707953453063965

Token 14: ' import' (ID: 1588)
  Prédit: ' import'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' import' → logprob: -0.013338114134967327
    2. 'import' → logprob: -4.388338088989258
    3. '.' → logprob: -7.263338088989258
    4. ' ' → logprob: -9.638338088989258
    5. '_import' → logprob: -11.138338088989258
    6. '.import' → logprob: -11.263338088989258
    7. ' .' → logprob: -11.388338088989258
    8. '	import' → logprob: -11.513338088989258
    9. '<|end|>' → logprob: -12.888338088989258
    10. ' ' → logprob: -13.138338088989258

Token 15: ' dat' (ID: 1814)
  Prédit: ' dat'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' dat' → logprob: -0.006734080612659454
    2. 'dat' → logprob: -5.0067338943481445
    3. ' ' → logprob: -11.756733894348145
    4. ' ' → logprob: -12.506733894348145
    5. '_dat' → logprob: -13.006733894348145
    6. ' data' → logprob: -13.506733894348145
    7. ' import' → logprob: -13.881733894348145
    8. '```' → logprob: -13.881733894348145
    9. '.dat' → logprob: -15.131733894348145
    10. ' field' → logprob: -15.256733894348145

Token 16: 'aclass' (ID: 88072)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.579986035823822
    2. 'aclass' → logprob: -0.829986035823822
    3. 'as' → logprob: -5.829986095428467
    4. 'aclasses' → logprob: -7.079986095428467
    5. '.' → logprob: -10.204985618591309
    6. 'а' → logprob: -10.329985618591309
    7. '.a' → logprob: -10.454985618591309
    8. 'abase' → logprob: -10.579985618591309
    9. ' a' → logprob: -10.829985618591309
    10. '\' → logprob: -11.079985618591309

Token 17: '
' (ID: 198)
  Prédit: '@dat'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '@dat' → logprob: -0.01879148744046688
    2. '
' → logprob: -4.518791675567627
    3. 'class' → logprob: -5.268791675567627
    4. '```' → logprob: -7.018791675567627
    5. '@' → logprob: -7.643791675567627
    6. '

' → logprob: -7.768791675567627
    7. '\n' → logprob: -8.518791198730469
    8. '@class' → logprob: -8.893791198730469
    9. '@
' → logprob: -9.393791198730469
    10. '@Data' → logprob: -9.518791198730469

Token 18: 'from' (ID: 2845)
  Prédit: '@dat'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '@dat' → logprob: -0.026054099202156067
    2. '@' → logprob: -4.2760539054870605
    3. 'class' → logprob: -5.2760539054870605
    4. '```' → logprob: -5.6510539054870605
    5. '\n' → logprob: -6.7760539054870605
    6. '
' → logprob: -7.1510539054870605
    7. '@
' → logprob: -8.401054382324219
    8. '@class' → logprob: -8.526054382324219
    9. '\' → logprob: -9.151054382324219
    10. 'import' → logprob: -9.401054382324219

Token 19: ' functools' (ID: 142636)
  Prédit: ' typing'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' typing' → logprob: -0.33700039982795715
    2. ' enum' → logprob: -1.3370003700256348
    3. ' collections' → logprob: -3.9620003700256348
    4. ' datetime' → logprob: -6.837000370025635
    5. ' dat' → logprob: -7.212000370025635
    6. ' abc' → logprob: -7.462000370025635
    7. ' ' → logprob: -7.712000370025635
    8. ' functools' → logprob: -7.962000370025635
    9. ' itertools' → logprob: -8.087000846862793
    10. 'typing' → logprob: -8.212000846862793

Token 20: ' import' (ID: 1588)
  Prédit: ' import'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' import' → logprob: -0.042521990835666656
    2. 'import' → logprob: -3.4175219535827637
    3. ' ' → logprob: -5.167521953582764
    4. '_import' → logprob: -6.292521953582764
    5. '_' → logprob: -6.792521953582764
    6. ' _' → logprob: -9.167522430419922
    7. '	import' → logprob: -10.917522430419922
    8. '.' → logprob: -11.042522430419922
    9. ' .' → logprob: -12.167522430419922
    10. ' ▁' → logprob: -13.292522430419922

Token 21: ' l' (ID: 305)
  Prédit: ' l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' l' → logprob: -0.04468114674091339
    2. ' wraps' → logprob: -3.5446810722351074
    3. 'l' → logprob: -5.169681072235107
    4. ' partial' → logprob: -5.794681072235107
    5. ' cache' → logprob: -6.169681072235107
    6. ' cached' → logprob: -6.294681072235107
    7. 'wrap' → logprob: -6.669681072235107
    8. ' reduce' → logprob: -7.919681072235107
    9. 'cache' → logprob: -8.794681549072266
    10. 'cached' → logprob: -8.919681549072266

Token 22: 'ru' (ID: 1942)
  Prédit: 'ru'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ru' → logprob: -7.314625690924004e-05
    2. 'r' → logprob: -9.750073432922363
    3. 'ruz' → logprob: -12.125073432922363
    4. 'ist' → logprob: -13.500073432922363
    5. 'is' → logprob: -13.750073432922363
    6. 'a' → logprob: -14.125073432922363
    7. '_ru' → logprob: -14.250073432922363
    8. 'fu' → logprob: -14.375073432922363
    9. '##' → logprob: -14.375073432922363
    10. 'RU' → logprob: -14.500073432922363

Token 23: '_cache' (ID: 27045)
  Prédit: '_cache'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_cache' → logprob: -0.2281477153301239
    2. 'cache' → logprob: -1.7281477451324463
    3. 'c' → logprob: -3.7281477451324463
    4. 't' → logprob: -6.603147506713867
    5. '_c' → logprob: -7.353147506713867
    6. 'cached' → logprob: -8.603147506713867
    7. '_cached' → logprob: -10.228147506713867
    8. 'ut' → logprob: -10.603147506713867
    9. 'ca' → logprob: -10.603147506713867
    10. '-cache' → logprob: -11.228147506713867

Token 24: '


' (ID: 2499)
  Prédit: '@'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '@' → logprob: -0.1327904909849167
    2. '
' → logprob: -2.6327905654907227
    3. '

' → logprob: -3.7577905654907227
    4. '@dat' → logprob: -4.257790565490723
    5. '\n' → logprob: -5.007790565490723
    6. '@
' → logprob: -6.132790565490723
    7. '@

' → logprob: -6.257790565490723
    8. '```' → logprob: -6.882790565490723
    9. '@app' → logprob: -7.757790565490723
    10. '\' → logprob: -7.757790565490723

Token 25: '@dat' (ID: 186544)
  Prédit: '@dat'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '@dat' → logprob: -0.4742339551448822
    2. '@' → logprob: -0.9742339849472046
    3. 'd' → logprob: -9.849233627319336
    4. '@
' → logprob: -10.599233627319336
    5. '@n' → logprob: -11.099233627319336
    6. 'def' → logprob: -11.349233627319336
    7. '@s' → logprob: -11.349233627319336
    8. '@class' → logprob: -11.474233627319336
    9. 'class' → logprob: -11.849233627319336
    10. '@app' → logprob: -12.099233627319336

Token 26: 'aclass' (ID: 88072)
  Prédit: 'aclass'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'aclass' → logprob: -0.0037583939265459776
    2. 'a' → logprob: -5.628758430480957
    3. 'aclasses' → logprob: -9.003758430480957
    4. 'class' → logprob: -11.003758430480957
    5. 'ac' → logprob: -11.753758430480957
    6. 'as' → logprob: -13.378758430480957
    7. 'acl' → logprob: -13.628758430480957
    8. 'abase' → logprob: -13.753758430480957
    9. 'acy' → logprob: -14.003758430480957
    10. 'al' → logprob: -14.003758430480957

Token 27: '(f' (ID: 1526)
  Prédit: 'class'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'class' → logprob: -0.07657087594270706
    2. '<|end|>' → logprob: -3.576570987701416
    3. '(' → logprob: -3.826570987701416
    4. ' class' → logprob: -4.076570987701416
    5. '<class' → logprob: -6.076570987701416
    6. '_class' → logprob: -6.951570987701416
    7. '-class' → logprob: -6.951570987701416
    8. '(class' → logprob: -7.201570987701416
    9. '<|end|>' → logprob: -8.076570510864258
    10. '```' → logprob: -8.451570510864258

Token 28: 'rozen' (ID: 50266)
  Prédit: 'rozen'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rozen' → logprob: -8.923874702304602e-05
    2. 'roz' → logprob: -9.875089645385742
    3. 'ield' → logprob: -10.625089645385742
    4. 'ields' → logprob: -12.250089645385742
    5. 'reeze' → logprob: -12.750089645385742
    6. '=' → logprob: -13.500089645385742
    7. 'alse' → logprob: -13.750089645385742
    8. '```' → logprob: -14.125089645385742
    9. 'ree' → logprob: -14.750089645385742
    10. 'ro' → logprob: -14.750089645385742

Token 29: '=True' (ID: 7827)
  Prédit: '=True'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=True' → logprob: -0.0038184872828423977
    2. '=' → logprob: -6.003818511962891
    3. '=False' → logprob: -7.253818511962891
    4. ')' → logprob: -8.00381851196289
    5. ')=' → logprob: -9.37881851196289
    6. '@dat' → logprob: -10.25381851196289
    7. '_set' → logprob: -10.62881851196289
    8. '=_' → logprob: -10.62881851196289
    9. '```' → logprob: -10.62881851196289
    10. '`)' → logprob: -11.37881851196289

Token 30: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -3.650518920039758e-06
    2. ' )' → logprob: -13.125003814697266
    3. ')
' → logprob: -14.625003814697266
    4. ')>' → logprob: -15.250003814697266
    5. '(' → logprob: -15.375003814697266
    6. ',' → logprob: -15.625003814697266
    7. '),' → logprob: -16.375003814697266
    8. 'class' → logprob: -16.500003814697266
    9. ')">' → logprob: -16.875003814697266
    10. 'def' → logprob: -17.125003814697266

Token 31: 'class' (ID: 1444)
  Prédit: 'class'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'class' → logprob: -0.016051966696977615
    2. ' class' → logprob: -4.141051769256592
    3. 'Class' → logprob: -11.89105224609375
    4. 'def' → logprob: -12.76605224609375
    5. '-class' → logprob: -14.01605224609375
    6. 'clas' → logprob: -14.01605224609375
    7. '<class' → logprob: -14.01605224609375
    8. 'Cl' → logprob: -14.26605224609375
    9. '_class' → logprob: -14.39105224609375
    10. '(class' → logprob: -14.76605224609375

Token 32: ' Problem' (ID: 26113)
  Prédit: ' Token'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' Token' → logprob: -1.163627028465271
    2. ' Space' → logprob: -1.788627028465271
    3. ' Vector' → logprob: -2.0386271476745605
    4. ' User' → logprob: -2.4136271476745605
    5. ' ' → logprob: -2.5386271476745605
    6. ' My' → logprob: -2.9136271476745605
    7. ' Point' → logprob: -3.0386271476745605
    8. ' Binary' → logprob: -3.9136271476745605
    9. ' Tree' → logprob: -4.4136271476745605
    10. ' Item' → logprob: -4.7886271476745605

Token 33: 'Parameters' (ID: 10167)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.001653878833167255
    2. '(' → logprob: -6.626653671264648
    3. ' :' → logprob: -9.251653671264648
    4. '):' → logprob: -9.251653671264648
    5. '():' → logprob: -10.376653671264648
    6. ':
' → logprob: -10.876653671264648
    7. 'Problem' → logprob: -11.501653671264648
    8. '(:' → logprob: -11.501653671264648
    9. 'Definition' → logprob: -11.626653671264648
    10. 'Type' → logprob: -11.876653671264648

Token 34: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.003030594205483794
    2. '(' → logprob: -5.878030776977539
    3. '(:' → logprob: -8.878030776977539
    4. '):' → logprob: -10.128030776977539
    5. '():' → logprob: -10.878030776977539
    6. ':**' → logprob: -11.128030776977539
    7. '(":' → logprob: -12.253030776977539
    8. ' :' → logprob: -13.128030776977539
    9. '(':' → logprob: -13.878030776977539
    10. ':
' → logprob: -13.878030776977539

Token 35: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.042337462306022644
    2. '    
' → logprob: -4.292337417602539
    3. '<|end|>' → logprob: -5.417337417602539
    4. 'n' → logprob: -5.667337417602539
    5. '\n' → logprob: -5.792337417602539
    6. '(' → logprob: -5.792337417602539
    7. '(n' → logprob: -6.042337417602539
    8. '
' → logprob: -6.292337417602539
    9. '```' → logprob: -6.417337417602539
    10. '    ' → logprob: -6.417337417602539

Token 36: ' region' (ID: 7967)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.167614459991455
    2. ' max' → logprob: -1.167614459991455
    3. ' n' → logprob: -1.417614459991455
    4. ' input' → logprob: -3.292614459991455
    5. ' num' → logprob: -3.417614459991455
    6. 'n' → logprob: -4.292614459991455
    7. 'max' → logprob: -4.542614459991455
    8. ' time' → logprob: -4.917614459991455
    9. ' total' → logprob: -5.667614459991455
    10. ' problem' → logprob: -6.042614459991455

Token 37: '_count' (ID: 7536)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.005892056506127119
    2. '_:' → logprob: -6.130892276763916
    3. '_name' → logprob: -6.380892276763916
    4. ' :' → logprob: -6.630892276763916
    5. '_id' → logprob: -8.255891799926758
    6. '=' → logprob: -8.880891799926758
    7. '_' → logprob: -9.255891799926758
    8. '_code' → logprob: -9.880891799926758
    9. 's' → logprob: -10.255891799926758
    10. '_size' → logprob: -10.380891799926758

Token 38: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0004158953088335693
    2. ' :' → logprob: -7.875415802001953
    3. ':int' → logprob: -10.500415802001953
    4. '_:' → logprob: -11.750415802001953
    5. '_count' → logprob: -16.625415802001953
    6. 's' → logprob: -16.625415802001953
    7. ':number' → logprob: -16.750415802001953
    8. '__:' → logprob: -17.125415802001953
    9. '=' → logprob: -17.375415802001953
    10. ':str' → logprob: -17.375415802001953

Token 39: ' int' (ID: 677)
  Prédit: ' int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.012515653856098652
    2. 'int' → logprob: -4.387515544891357
    3. ' ' → logprob: -12.637516021728516
    4. '[int' → logprob: -13.762516021728516
    5. '	int' → logprob: -14.637516021728516
    6. ':int' → logprob: -15.137516021728516
    7. ' space' → logprob: -15.512516021728516
    8. ' List' → logprob: -16.012516021728516
    9. ' ' → logprob: -16.012516021728516
    10. '(int' → logprob: -16.262516021728516

Token 40: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1796063631772995
    2. '<|end|>' → logprob: -2.0546064376831055
    3. '\n' → logprob: -4.4296064376831055
    4. ',' → logprob: -4.9296064376831055
    5. '    
' → logprob: -4.9296064376831055
    6. '
' → logprob: -6.3046064376831055
    7. ':' → logprob: -6.5546064376831055
    8. '  ' → logprob: -6.5546064376831055
    9. '<|end|>' → logprob: -6.9296064376831055
    10. ')' → logprob: -7.1796064376831055

Token 41: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.002392540453001857
    2. '<|end|>' → logprob: -6.627392768859863
    3. '    
' → logprob: -8.002392768859863
    4. ',' → logprob: -8.127392768859863
    5. '    ' → logprob: -8.877392768859863
    6. '
' → logprob: -9.627392768859863
    7. 'n' → logprob: -10.127392768859863
    8. '<|end|>' → logprob: -10.377392768859863
    9. '  ' → logprob: -10.502392768859863
    10. 'newline' → logprob: -10.627392768859863

Token 42: ' days' (ID: 3376)
  Prédit: ' max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' max' → logprob: -1.3149107694625854
    2. ' total' → logprob: -2.439910888671875
    3. ' cities' → logprob: -2.564910888671875
    4. ' regions' → logprob: -2.564910888671875
    5. ' region' → logprob: -2.689910888671875
    6. ' city' → logprob: -2.814910888671875
    7. 'max' → logprob: -2.939910888671875
    8. ' ' → logprob: -3.689910888671875
    9. 'region' → logprob: -3.814910888671875
    10. ' population' → logprob: -3.814910888671875

Token 43: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0015370006440207362
    2. ':int' → logprob: -7.126536846160889
    3. '_per' → logprob: -8.126537322998047
    4. '_:' → logprob: -8.626537322998047
    5. '_count' → logprob: -9.126537322998047
    6. ' :' → logprob: -9.751537322998047
    7. '_to' → logprob: -10.376537322998047
    8. '_in' → logprob: -11.626537322998047
    9. '   ' → logprob: -12.376537322998047
    10. '_' → logprob: -12.376537322998047

Token 44: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.061978891491889954
    2. ' int' → logprob: -2.811978816986084
    3. ':int' → logprob: -12.936979293823242
    4. '=int' → logprob: -13.186979293823242
    5. ' ' → logprob: -13.561979293823242
    6. '	int' → logprob: -13.936979293823242
    7. '  ' → logprob: -13.936979293823242
    8. '   ' → logprob: -14.061979293823242
    9. '[int' → logprob: -14.311979293823242
    10. 'in' → logprob: -15.061979293823242

Token 45: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6545959115028381
    2. '<|end|>' → logprob: -1.1545958518981934
    3. '
' → logprob: -2.1545958518981934
    4. '    
' → logprob: -4.029595851898193
    5. '<|end|>' → logprob: -4.654595851898193
    6. '\n' → logprob: -4.904595851898193
    7. 'newline' → logprob: -5.654595851898193
    8. '```' → logprob: -6.029595851898193
    9. ',' → logprob: -6.154595851898193
    10. '    ' → logprob: -6.279595851898193

Token 46: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.009973756037652493
    2. '
' → logprob: -5.384973526000977
    3. '    
' → logprob: -5.884973526000977
    4. '<|end|>' → logprob: -6.759973526000977
    5. '    ' → logprob: -7.259973526000977
    6. 'n' → logprob: -9.009973526000977
    7. '\n' → logprob: -9.009973526000977
    8. '  ' → logprob: -9.884973526000977
    9. ' 
' → logprob: -9.884973526000977
    10. ',' → logprob: -9.884973526000977

Token 47: ' max' (ID: 2999)
  Prédit: ' max'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' max' → logprob: -1.8102695941925049
    2. ' initial' → logprob: -1.8102695941925049
    3. ' starting' → logprob: -2.060269594192505
    4. 'max' (adapté à ' max') → logprob: -2.185269594192505
    5. '   ' → logprob: -2.185269594192505
    6. 'initial' → logprob: -2.685269594192505
    7. 'starting' → logprob: -3.685269594192505
    8. ' population' → logprob: -3.810269594192505
    9. 'population' → logprob: -4.060269355773926
    10. ' start' → logprob: -4.060269355773926

Token 48: '_b' (ID: 1535)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -1.5351879596710205
    2. '_tr' → logprob: -1.7851879596710205
    3. '_daily' → logprob: -2.1601879596710205
    4. '_in' → logprob: -3.0351879596710205
    5. '_days' → logprob: -3.4101879596710205
    6. '_workers' → logprob: -3.4101879596710205
    7. '_population' → logprob: -3.4101879596710205
    8. '_vis' → logprob: -3.6601879596710205
    9. '_day' → logprob: -3.7851879596710205
    10. '_cases' → logprob: -4.160187721252441

Token 49: 'ur' (ID: 330)
  Prédit: 'ikes'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ikes' → logprob: -1.4831138849258423
    2. 'uild' → logprob: -1.6081138849258423
    3. 'atch' → logprob: -2.2331137657165527
    4. 'ook' → logprob: -3.1081137657165527
    5. 'atches' → logprob: -3.3581137657165527
    6. 'ooking' → logprob: -3.4831137657165527
    7. 'ooks' → logprob: -3.6081137657165527
    8. 'e' → logprob: -3.7331137657165527
    9. 'udget' → logprob: -3.7331137657165527
    10. 'ike' → logprob: -3.7331137657165527

Token 50: 'den' (ID: 1660)
  Prédit: 'den'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'den' → logprob: -0.39437443017959595
    2. 'n' → logprob: -1.1443743705749512
    3. 'd' → logprob: -6.269374370574951
    4. 'dens' → logprob: -7.019374370574951
    5. 'nd' → logprob: -7.144374370574951
    6. 'e' → logprob: -7.394374370574951
    7. 's' → logprob: -7.769374370574951
    8. 'sts' → logprob: -7.894374370574951
    9. 'ned' → logprob: -8.01937484741211
    10. 'ning' → logprob: -8.14437484741211

Token 51: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.02237679809331894
    2. '_per' → logprob: -3.897376775741577
    3. ':int' → logprob: -6.647377014160156
    4. ' :' → logprob: -8.522377014160156
    5. '_level' → logprob: -9.272377014160156
    6. '_percent' → logprob: -10.272377014160156
    7. '_amount' → logprob: -10.397377014160156
    8. '_:' → logprob: -10.647377014160156
    9. '_capacity' → logprob: -10.897377014160156
    10. '_int' → logprob: -11.022377014160156

Token 52: ' int' (ID: 677)
  Prédit: ' int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.06491730362176895
    2. 'int' → logprob: -2.8149173259735107
    3. ' float' → logprob: -5.939917087554932
    4. ' ' → logprob: -8.43991756439209
    5. 'float' → logprob: -9.31491756439209
    6. ':int' → logprob: -13.18991756439209
    7. '  ' → logprob: -13.43991756439209
    8. '[int' → logprob: -13.81491756439209
    9. '	int' → logprob: -14.43991756439209
    10. '=int' → logprob: -14.56491756439209

Token 53: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 54: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6185858249664307
    2. '
' → logprob: -1.6185858249664307
    3. '\n' → logprob: -1.8685858249664307
    4. '    
' → logprob: -3.1185858249664307
    5. '<|end|>' → logprob: -3.7435858249664307
    6. 'n' → logprob: -4.243585586547852
    7. ' 
' → logprob: -5.743585586547852
    8. '

' → logprob: -5.868585586547852
    9. 'newline' → logprob: -5.993585586547852
    10. '@dat' → logprob: -6.243585586547852

Token 55: ' max' (ID: 2999)
  Prédit: ' max'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' max' → logprob: -1.8845778703689575
    2. 'max' (adapté à ' max') → logprob: -1.8845778703689575
    3. 'initial' → logprob: -1.8845778703689575
    4. ' initial' → logprob: -2.009577751159668
    5. ' starting' → logprob: -3.259577751159668
    6. ')' → logprob: -3.634577751159668
    7. 'min' → logprob: -3.634577751159668
    8. '   ' → logprob: -3.759577751159668
    9. 'threshold' → logprob: -3.884577751159668
    10. ' demands' → logprob: -4.259577751159668

Token 56: '_multi' (ID: 81207)
  Prédit: '_b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_b' → logprob: -1.24455726146698
    2. '_' → logprob: -1.99455726146698
    3. '_load' → logprob: -2.7445573806762695
    4. '_in' → logprob: -3.3695573806762695
    5. '_days' → logprob: -3.7445573806762695
    6. '_daily' → logprob: -3.7445573806762695
    7. '_capacity' → logprob: -3.9945573806762695
    8. '_duration' → logprob: -4.1195573806762695
    9. '_delay' → logprob: -4.4945573806762695
    10. '_day' → logprob: -4.4945573806762695

Token 57: '_live' (ID: 133570)
  Prédit: 'plier'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'plier' → logprob: -0.5636599659919739
    2. 'plic' → logprob: -1.938659906387329
    3. 'ply' → logprob: -2.063659906387329
    4. 'pl' → logprob: -3.188659906387329
    5. 'ple' → logprob: -3.188659906387329
    6. 'region' → logprob: -3.438659906387329
    7. 'p' → logprob: -3.688659906387329
    8. 'pliers' → logprob: -5.688660144805908
    9. 'task' → logprob: -6.063660144805908
    10. 'pli' → logprob: -6.438660144805908

Token 58: '_days' (ID: 67025)
  Prédit: '_region'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_region' → logprob: -1.3748432397842407
    2. 'region' → logprob: -1.9998432397842407
    3. 'hood' → logprob: -2.124843120574951
    4. '_live' → logprob: -2.624843120574951
    5. '_day' → logprob: -2.749843120574951
    6. 's' → logprob: -2.874843120574951
    7. '_in' → logprob: -3.124843120574951
    8. '_regions' → logprob: -3.499843120574951
    9. 'day' → logprob: -3.749843120574951
    10. '_' → logprob: -3.874843120574951

Token 59: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.00010485442908247933
    2. ' :' → logprob: -9.750104904174805
    3. ':int' → logprob: -10.750104904174805
    4. 's' → logprob: -11.250104904174805
    5. '_per' → logprob: -12.875104904174805
    6. '_days' → logprob: -13.125104904174805
    7. '_:' → logprob: -13.375104904174805
    8. 'd' → logprob: -13.625104904174805
    9. ',' → logprob: -13.750104904174805
    10. '_count' → logprob: -14.250104904174805

Token 60: ' int' (ID: 677)
  Prédit: ' int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.18002933263778687
    2. 'int' → logprob: -1.8050293922424316
    3. ' ' → logprob: -9.180028915405273
    4. '3' → logprob: -9.930028915405273
    5. ' List' → logprob: -10.430028915405273
    6. '5' → logprob: -11.180028915405273
    7. '[int' → logprob: -11.305028915405273
    8. '	int' → logprob: -11.555028915405273
    9. '10' → logprob: -11.805028915405273
    10. '1' → logprob: -11.805028915405273

Token 61: '


' (ID: 2499)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 62: '@dat' (ID: 186544)
  Prédit: 'class'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'class' → logprob: -0.6143031120300293
    2. '@dat' → logprob: -1.7393031120300293
    3. '@' → logprob: -1.9893031120300293
    4. '
' → logprob: -2.4893031120300293
    5. 'def' → logprob: -2.8643031120300293
    6. '

' → logprob: -6.489303112030029
    7. '```' → logprob: -6.864303112030029
    8. '@param' → logprob: -7.239303112030029
    9. '@property' → logprob: -7.239303112030029
    10. '\n' → logprob: -7.864303112030029

Token 63: 'aclass' (ID: 88072)
  Prédit: '@dat'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '@dat' → logprob: -0.9043368101119995
    2. 'aclass' → logprob: -1.1543368101119995
    3. 'class' → logprob: -1.2793368101119995
    4. 'aclasses' → logprob: -7.029336929321289
    5. 'dat' → logprob: -8.154336929321289
    6. 'classmethod' → logprob: -8.404336929321289
    7. 'def' → logprob: -10.154336929321289
    8. '_class' → logprob: -10.154336929321289
    9. 'data' → logprob: -10.404336929321289
    10. '_dat' → logprob: -10.529336929321289

Token 64: '(f' (ID: 1526)
  Prédit: '(f'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(f' → logprob: -0.013768645003437996
    2. '(' → logprob: -4.638768672943115
    3. '(class' → logprob: -7.013768672943115
    4. 'class' → logprob: -7.388768672943115
    5. 'Frozen' → logprob: -7.638768672943115
    6. '<|end|>' → logprob: -8.013768196105957
    7. ' frozen' → logprob: -8.388768196105957
    8. '<class' → logprob: -8.763768196105957
    9. ' Frozen' → logprob: -9.513768196105957
    10. '(classes' → logprob: -9.513768196105957

Token 65: 'rozen' (ID: 50266)
  Prédit: 'rozen'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rozen' → logprob: -0.00035846480750478804
    2. 'ro' → logprob: -8.125358581542969
    3. 'Problem' → logprob: -10.875358581542969
    4. 'roz' → logprob: -11.500358581542969
    5. 'reeze' → logprob: -12.000358581542969
    6. '=' → logprob: -12.125358581542969
    7. 'Frozen' → logprob: -12.375358581542969
    8. 'ixed' → logprob: -12.625358581542969
    9. 'alse' → logprob: -12.625358581542969
    10. 'r' → logprob: -13.250358581542969

Token 66: '=True' (ID: 7827)
  Prédit: '=True'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=True' → logprob: -0.048620518296957016
    2. '=' → logprob: -3.0486204624176025
    3. '=False' → logprob: -10.923620223999023
    4. '=T' → logprob: -12.548620223999023
    5. ')=' → logprob: -12.798620223999023
    6. '=str' → logprob: -13.173620223999023
    7. '=list' → logprob: -13.298620223999023
    8. '=int' → logprob: -14.298620223999023
    9. '=open' → logprob: -14.673620223999023
    10. '=}' → logprob: -14.798620223999023

Token 67: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00046546570956707
    2. ')
' → logprob: -8.000465393066406
    3. ' )' → logprob: -9.875465393066406
    4. '   ' → logprob: -10.000465393066406
    5. 'class' → logprob: -11.500465393066406
    6. ' ' → logprob: -12.000465393066406
    7. '()' → logprob: -12.500465393066406
    8. '<|end|>' → logprob: -12.500465393066406
    9. '
' → logprob: -13.250465393066406
    10. ',' → logprob: -14.125465393066406

Token 68: 'class' (ID: 1444)
  Prédit: 'class'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'class' → logprob: -3.6550729419104755e-05
    2. ' class' → logprob: -10.500036239624023
    3. '
' → logprob: -11.625036239624023
    4. '<class' → logprob: -17.625036239624023
    5. 'Class' → logprob: -17.750036239624023
    6. 'Problem' → logprob: -19.500036239624023
    7. 'def' → logprob: -19.500036239624023
    8. '	class' → logprob: -19.875036239624023
    9. '  
' → logprob: -20.250036239624023
    10. '    
' → logprob: -20.375036239624023

Token 69: ' Live' (ID: 13065)
  Prédit: ' Problem'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' Problem' → logprob: -1.0106539726257324
    2. 'Problem' → logprob: -2.0106539726257324
    3. ' Solution' → logprob: -3.1356539726257324
    4. ' Model' → logprob: -3.3856539726257324
    5. ' Infection' → logprob: -3.5106539726257324
    6. ' Simulation' → logprob: -3.6356539726257324
    7. ' Intervention' → logprob: -3.8856539726257324
    8. ' Vaccine' → logprob: -3.8856539726257324
    9. ' Policy' → logprob: -4.010653972625732
    10. ' Population' → logprob: -4.010653972625732

Token 70: 'Data' (ID: 1186)
  Prédit: 'Days'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Days' → logprob: -0.4638970196247101
    2. 'Data' → logprob: -1.7138969898223877
    3. 'Day' → logprob: -3.4638969898223877
    4. 'State' → logprob: -3.7138969898223877
    5. 'Range' → logprob: -4.088897228240967
    6. 'Region' → logprob: -4.088897228240967
    7. 'Cells' → logprob: -4.213897228240967
    8. 'Status' → logprob: -4.338897228240967
    9. 'Period' → logprob: -5.213897228240967
    10. 'Cycle' → logprob: -5.338897228240967

Token 71: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.00179846934042871
    2. ':
' → logprob: -6.376798629760742
    3. '(' → logprob: -9.376798629760742
    4. ' :' → logprob: -12.501798629760742
    5. '):' → logprob: -13.251798629760742
    6. ':

' → logprob: -13.876798629760742
    7. ':
' → logprob: -14.376798629760742
    8. ',' → logprob: -14.626798629760742
    9. '   ' → logprob: -14.751798629760742
    10. '():' → logprob: -14.876798629760742

Token 72: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00035095500061288476
    2. ' List' → logprob: -9.000350952148438
    3. 'List' → logprob: -9.125350952148438
    4. ' Tuple' → logprob: -10.875350952148438
    5. 'Dict' → logprob: -11.125350952148438
    6. '  ' → logprob: -11.375350952148438
    7. 'Iterator' → logprob: -11.625350952148438
    8. '   ' → logprob: -12.000350952148438
    9. 'Iterable' → logprob: -12.000350952148438
    10. ' Dict' → logprob: -12.000350952148438

Token 73: ' expected' (ID: 5930)
  Prédit: 'region'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'region' → logprob: -0.5236539244651794
    2. 'day' → logprob: -1.7736539840698242
    3. 'current' → logprob: -3.148653984069824
    4. ' day' → logprob: -3.398653984069824
    5. ' region' → logprob: -4.148653984069824
    6. 'date' → logprob: -4.148653984069824
    7. 'live' → logprob: -4.398653984069824
    8. 'active' → logprob: -4.523653984069824
    9. 'population' → logprob: -4.523653984069824
    10. 'regions' → logprob: -4.523653984069824

Token 74: '_profit' (ID: 186239)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.6516073942184448
    2. '_b' → logprob: -1.5266073942184448
    3. '_days' → logprob: -2.7766075134277344
    4. '_count' → logprob: -3.5266075134277344
    5. '_in' → logprob: -4.276607513427734
    6. '_regions' → logprob: -4.276607513427734
    7. '_region' → logprob: -4.401607513427734
    8. '_counts' → logprob: -4.401607513427734
    9. '_cases' → logprob: -4.526607513427734
    10. '_time' → logprob: -4.901607513427734

Token 75: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.00018411019118502736
    2. '_per' → logprob: -8.750184059143066
    3. 's' → logprob: -11.625184059143066
    4. ':int' → logprob: -12.250184059143066
    5. '_days' → logprob: -13.375184059143066
    6. '_amount' → logprob: -13.500184059143066
    7. 'per' → logprob: -13.625184059143066
    8. ' :' → logprob: -13.750184059143066
    9. '_percent' → logprob: -13.875184059143066
    10. '_:' → logprob: -14.000184059143066

Token 76: ' List' (ID: 2655)
  Prédit: ' float'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' float' → logprob: -0.320700466632843
    2. 'float' → logprob: -2.0707004070281982
    3. ' int' → logprob: -2.1957004070281982
    4. 'int' → logprob: -3.3207004070281982
    5. ' ' → logprob: -7.695700645446777
    6. ' List' → logprob: -8.445700645446777
    7. '   ' → logprob: -9.820700645446777
    8. 'List' → logprob: -9.945700645446777
    9. ' Dict' → logprob: -10.320700645446777
    10. 'Dict' → logprob: -11.070700645446777

Token 77: '[List' (ID: 113982)
  Prédit: '[int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[int' → logprob: -0.06198986992239952
    2. '[' → logprob: -2.8119897842407227
    3. '[List' → logprob: -11.186989784240723
    4. 'int' → logprob: -11.936989784240723
    5. '[Int' → logprob: -14.811989784240723
    6. '[str' → logprob: -14.936989784240723
    7. 'float' → logprob: -15.186989784240723
    8. '[
' → logprob: -15.311989784240723
    9. '   ' → logprob: -15.561989784240723
    10. '<int' → logprob: -15.686989784240723

Token 78: '[int' (ID: 40124)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.34852907061576843
    2. '[int' → logprob: -1.2235291004180908
    3. '[List' → logprob: -10.473528861999512
    4. ' [' → logprob: -10.973528861999512
    5. 'float' → logprob: -11.348528861999512
    6. 'int' → logprob: -11.473528861999512
    7. ']' → logprob: -11.723528861999512
    8. '   ' → logprob: -12.848528861999512
    9. '[str' → logprob: -13.098528861999512
    10. ' ' → logprob: -13.723528861999512

Token 79: ']]' (ID: 8928)
  Prédit: ']]'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']]' → logprob: -0.4130759835243225
    2. ']' → logprob: -1.2880759239196777
    3. ']>' → logprob: -2.9130759239196777
    4. '])' → logprob: -4.913075923919678
    5. ']])' → logprob: -7.663075923919678
    6. ')]' → logprob: -8.788076400756836
    7. ']]]' → logprob: -9.163076400756836
    8. '])]' → logprob: -9.538076400756836
    9. '],' → logprob: -10.663076400756836
    10. '>]' → logprob: -10.788076400756836

Token 80: ' ' (ID: 220)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0833747461438179
    2. '<|end|>' → logprob: -2.5833747386932373
    3. '
' → logprob: -6.708374977111816
    4. '    
' → logprob: -7.083374977111816
    5. ',' → logprob: -7.333374977111816
    6. ')' → logprob: -7.833374977111816
    7. '<|end|>' → logprob: -7.833374977111816
    8. '    ' → logprob: -8.208374977111816
    9. '[' → logprob: -8.458374977111816
    10. '  ' → logprob: -9.458374977111816

Token 81: ' #' (ID: 1069)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 82: ' [' (ID: 723)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'int' → logprob: -1.1625006198883057
    2. ' expected' → logprob: -1.6625006198883057
    3. ' List' → logprob: -2.1625006198883057
    4. ' int' → logprob: -2.1625006198883057
    5. 'expected' → logprob: -3.0375006198883057
    6. '[int' → logprob: -3.0375006198883057
    7. 'Expected' → logprob: -3.4125006198883057
    8. 'The' → logprob: -3.9125006198883057
    9. ' #' → logprob: -3.9125006198883057
    10. 'List' → logprob: -4.162500381469727

Token 83: 'region' (ID: 8073)
  Prédit: 'region'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'region' → logprob: -0.042398709803819656
    2. 'int' → logprob: -4.292398929595947
    3. ' region' → logprob: -4.417398929595947
    4. 'day' → logprob: -4.542398929595947
    5. ' day' → logprob: -5.917398929595947
    6. ' int' → logprob: -7.167398929595947
    7. 'regions' → logprob: -7.417398929595947
    8. 'days' → logprob: -7.792398929595947
    9. ' days' → logprob: -8.292398452758789
    10. '[int' → logprob: -9.792398452758789

Token 84: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.620306670665741
    2. ']' → logprob: -1.4953067302703857
    3. ',' → logprob: -1.6203067302703857
    4. '_index' → logprob: -4.995306491851807
    5. 's' → logprob: -5.245306491851807
    6. '_count' → logprob: -5.245306491851807
    7. ' ][' → logprob: -5.245306491851807
    8. '][]' → logprob: -5.495306491851807
    9. ' ,' → logprob: -5.620306491851807
    10. '_id' → logprob: -6.245306491851807

Token 85: 'day' (ID: 1635)
  Prédit: 'day'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'day' → logprob: -0.5767015218734741
    2. ' day' → logprob: -0.8267015218734741
    3. 'd' → logprob: -8.201701164245605
    4. 'days' → logprob: -8.951701164245605
    5. 'time' → logprob: -9.826701164245605
    6. '0' → logprob: -10.201701164245605
    7. ' days' → logprob: -10.389201164245605
    8. ']' → logprob: -10.451701164245605
    9. ' ' → logprob: -10.639201164245605
    10. 'live' → logprob: -11.201701164245605

Token 86: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0002366753324167803
    2. ' ]' → logprob: -8.375236511230469
    3. ']>' → logprob: -13.000236511230469
    4. '   ' → logprob: -14.000236511230469
    5. '],' → logprob: -14.625236511230469
    6. '])' → logprob: -14.875236511230469
    7. ',' → logprob: -15.000236511230469
    8. ')' → logprob: -15.125236511230469
    9. ']]' → logprob: -15.375236511230469
    10. '>]' → logprob: -15.500236511230469

Token 87: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.01182424183934927
    2. '    
' → logprob: -5.511824131011963
    3. '
' → logprob: -5.636824131011963
    4. '<|end|>' → logprob: -6.386824131011963
    5. ',' → logprob: -7.636824131011963
    6. '    ' → logprob: -8.136824607849121
    7. '[' → logprob: -8.636824607849121
    8. ' ' → logprob: -8.761824607849121
    9. '@dat' → logprob: -8.761824607849121
    10. '  ' → logprob: -8.761824607849121

Token 88: ' burden' (ID: 39183)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'max' → logprob: -1.3717883825302124
    2. 'expected' → logprob: -1.7467883825302124
    3. ' max' → logprob: -2.246788501739502
    4. ' expected' → logprob: -3.246788501739502
    5. 'bur' → logprob: -3.246788501739502
    6. 'actual' → logprob: -3.371788501739502
    7. 'current' → logprob: -3.559288501739502
    8. 'live' → logprob: -3.559288501739502
    9. 'prob' → logprob: -3.746788501739502
    10. ' current' → logprob: -4.309288501739502

Token 89: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0008321399218402803
    2. ' :' → logprob: -7.2508320808410645
    3. 's' → logprob: -9.250832557678223
    4. '_:' → logprob: -11.750832557678223
    5. ' ' → logprob: -12.500832557678223
    6. '  ' → logprob: -13.250832557678223
    7. '_counts' → logprob: -13.375832557678223
    8. '_count' → logprob: -13.625832557678223
    9. '_' → logprob: -13.750832557678223
    10. ':int' → logprob: -13.875832557678223

Token 90: ' List' (ID: 2655)
  Prédit: ' List'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' List' → logprob: -0.11298692971467972
    2. 'List' → logprob: -2.2379870414733887
    3. '[List' → logprob: -8.98798656463623
    4. ' ' → logprob: -10.86298656463623
    5. '	List' → logprob: -11.61298656463623
    6. '   ' → logprob: -12.73798656463623
    7. ' Dict' → logprob: -13.11298656463623
    8. 'Dict' → logprob: -13.36298656463623
    9. ' int' → logprob: -14.11298656463623
    10. 'int' → logprob: -14.23798656463623

Token 91: '[List' (ID: 113982)
  Prédit: '[List'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[List' → logprob: -0.0009980365866795182
    2. '[int' → logprob: -7.000998020172119
    3. '[' → logprob: -9.375998497009277
    4. '[[' → logprob: -14.500998497009277
    5. '<List' → logprob: -14.750998497009277
    6. '[Int' → logprob: -15.000998497009277
    7. '   ' → logprob: -16.25099754333496
    8. ' [' → logprob: -16.37599754333496
    9. 'List' → logprob: -16.62599754333496
    10. '(List' → logprob: -16.75099754333496

Token 92: '[int' (ID: 40124)
  Prédit: '[int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[int' → logprob: -8.256334695033729e-05
    2. 'int' → logprob: -9.750082969665527
    3. '<int' → logprob: -11.500082969665527
    4. '[' → logprob: -11.875082969665527
    5. ']int' → logprob: -12.375082969665527
    6. '[Int' → logprob: -13.375082969665527
    7. '(int' → logprob: -14.750082969665527
    8. ' [' → logprob: -15.125082969665527
    9. ' int' → logprob: -16.00008201599121
    10. ':int' → logprob: -16.37508201599121

Token 93: ']]' (ID: 8928)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.6849967837333679
    2. ']]' → logprob: -0.8099967837333679
    3. '])' → logprob: -3.0599968433380127
    4. ')]' → logprob: -6.059996604919434
    5. ']>' → logprob: -7.809996604919434
    6. ']])' → logprob: -7.809996604919434
    7. '[' → logprob: -8.684996604919434
    8. '])]' → logprob: -8.684996604919434
    9. '[int' → logprob: -8.809996604919434
    10. ']int' → logprob: -8.934996604919434

Token 94: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.34175971150398254
    2. ' #' → logprob: -1.4667596817016602
    3. '[' → logprob: -3.71675968170166
    4. '<|end|>' → logprob: -4.09175968170166
    5. '#' → logprob: -4.46675968170166
    6. '   ' → logprob: -5.59175968170166
    7. '  ' → logprob: -6.46675968170166
    8. '<|end|>' → logprob: -8.34175968170166
    9. ' [' → logprob: -8.71675968170166
    10. ']' → logprob: -8.96675968170166

Token 95: ' #' (ID: 1069)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.06077807769179344
    2. ' ' → logprob: -3.4357781410217285
    3. ' #' → logprob: -3.6857781410217285
    4. '[' → logprob: -6.6857781410217285
    5. '   ' → logprob: -9.06077766418457
    6. '#[' → logprob: -9.56077766418457
    7. '  ' → logprob: -9.68577766418457
    8. '<|end|>' → logprob: -10.18577766418457
    9. ')#' → logprob: -10.56077766418457
    10. '﻿#' → logprob: -10.93577766418457

Token 96: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.06584201753139496
    2. '[int' → logprob: -3.1908419132232666
    3. 'region' → logprob: -4.315842151641846
    4. '[List' → logprob: -4.815842151641846
    5. 'int' → logprob: -7.565842151641846
    6. ' region' → logprob: -8.190841674804688
    7. ' [' → logprob: -8.315841674804688
    8. '(region' → logprob: -10.440841674804688
    9. '[Int' → logprob: -10.815841674804688
    10. 'List' → logprob: -11.315841674804688

Token 97: 'region' (ID: 8073)
  Prédit: 'region'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'region' → logprob: -0.00018363336857873946
    2. ' region' → logprob: -8.625184059143066
    3. 'day' → logprob: -12.875184059143066
    4. '(region' → logprob: -15.250184059143066
    5. 'endregion' → logprob: -15.375184059143066
    6. ' ' → logprob: -15.375184059143066
    7. '   ' → logprob: -15.625184059143066
    8. '
' → logprob: -16.25018310546875
    9. 'int' → logprob: -16.37518310546875
    10. '.region' → logprob: -16.62518310546875

Token 98: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.03376280516386032
    2. ']' → logprob: -3.4087626934051514
    3. '][]' → logprob: -9.78376293182373
    4. ' ][' → logprob: -10.53376293182373
    5. ']int' → logprob: -11.40876293182373
    6. ']][' → logprob: -11.53376293182373
    7. '],' → logprob: -12.78376293182373
    8. ' ]' → logprob: -13.15876293182373
    9. ']>' → logprob: -13.53376293182373
    10. '<|end|>' → logprob: -14.03376293182373

Token 99: 'day' (ID: 1635)
  Prédit: 'day'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'day' → logprob: -0.01425364799797535
    2. ' day' → logprob: -4.264253616333008
    3. 'region' → logprob: -9.514253616333008
    4. ']' → logprob: -12.014253616333008
    5. ' ' → logprob: -12.639253616333008
    6. '   ' → logprob: -14.139253616333008
    7. '(day' → logprob: -14.201753616333008
    8. '_day' → logprob: -14.451753616333008
    9. '
' → logprob: -14.576753616333008
    10. 'days' → logprob: -14.639253616333008

Token 100: ']


' (ID: 52447)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -5.9153885558771435e-06
    2. ' ]' → logprob: -12.750005722045898
    3. ']>' → logprob: -14.250005722045898
    4. '])' → logprob: -14.375005722045898
    5. ']
' → logprob: -14.500005722045898
    6. ')' → logprob: -14.625005722045898
    7. '],' → logprob: -15.750005722045898
    8. '<|end|>' → logprob: -15.875005722045898
    9. '   ' → logprob: -16.0000057220459
    10. ')]' → logprob: -16.1250057220459

Token 101: '@dat' (ID: 186544)
  Prédit: '@dat'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '@dat' → logprob: -0.17326295375823975
    2. 'class' → logprob: -2.5482630729675293
    3. '
' → logprob: -2.6732630729675293
    4. '@' → logprob: -5.298263072967529
    5. '

' → logprob: -5.548263072967529
    6. 'def' → logprob: -6.048263072967529
    7. '```' → logprob: -8.798262596130371
    8. '


' → logprob: -8.798262596130371
    9. '    
' → logprob: -9.298262596130371
    10. 'from' → logprob: -10.423262596130371

Token 102: 'aclass' (ID: 88072)
  Prédit: '@dat'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '@dat' → logprob: -0.001450948417186737
    2. '<|end|>' → logprob: -7.001451015472412
    3. 'aclass' → logprob: -8.126450538635254
    4. 'class' → logprob: -9.626450538635254
    5. '_dat' → logprob: -9.626450538635254
    6. 'dat' → logprob: -10.126450538635254
    7. '@Data' → logprob: -10.126450538635254
    8. 'aclasses' → logprob: -12.001450538635254
    9. 'classmethod' → logprob: -12.751450538635254

Token 103: '(f' (ID: 1526)
  Prédit: '(f'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(f' → logprob: -2.935296834039036e-06
    2. 'class' → logprob: -13.50000286102295
    3. '```' → logprob: -15.00000286102295
    4. ' frozen' → logprob: -15.12500286102295
    5. 'Frozen' → logprob: -15.37500286102295
    6. '(' → logprob: -15.50000286102295
    7. '(class' → logprob: -15.62500286102295
    8. ' (' → logprob: -16.625003814697266
    9. 'f' → logprob: -16.625003814697266
    10. '\(' → logprob: -17.250003814697266

Token 104: 'rozen' (ID: 50266)
  Prédit: 'rozen'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rozen' → logprob: -9.507972572464496e-05
    2. 'Frozen' → logprob: -9.75009536743164
    3. 'roz' → logprob: -10.25009536743164
    4. 'ro' → logprob: -14.50009536743164
    5. 'f' → logprob: -15.50009536743164
    6. ' frozen' → logprob: -15.87509536743164
    7. ' Frozen' → logprob: -16.00009536743164
    8. '=True' → logprob: -16.25009536743164
    9. 'reeze' → logprob: -16.62509536743164
    10. '=' → logprob: -16.87509536743164

Token 105: '=True' (ID: 7827)
  Prédit: '=True'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=True' → logprob: -0.14401480555534363
    2. '=' → logprob: -2.019014835357666
    3. '=False' → logprob: -6.894014835357666
    4. '=f' → logprob: -8.394014358520508
    5. 'Frozen' → logprob: -10.019014358520508
    6. '=_' → logprob: -10.894014358520508
    7. '=str' → logprob: -11.894014358520508
    8. '=None' → logprob: -12.769014358520508
    9. '=int' → logprob: -13.019014358520508
    10. '```' → logprob: -13.019014358520508

Token 106: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.04875347763299942
    2. ')' → logprob: -3.048753499984741
    3. 'class' → logprob: -9.04875373840332
    4. ')
' → logprob: -10.17375373840332
    5. ')`
' → logprob: -13.17375373840332
    6. ')

' → logprob: -13.54875373840332
    7. '()
' → logprob: -13.67375373840332
    8. '())
' → logprob: -14.04875373840332
    9. '`)
' → logprob: -14.04875373840332
    10. '()' → logprob: -14.29875373840332

Token 107: 'class' (ID: 1444)
  Prédit: 'class'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'class' → logprob: -7.660315895918757e-05
    2. ' class' → logprob: -10.125076293945312
    3. '
' → logprob: -10.250076293945312
    4. 'Class' → logprob: -15.000076293945312
    5. 'def' → logprob: -15.625076293945312
    6. '@dat' → logprob: -16.375076293945312
    7. 'Problem' → logprob: -16.750076293945312
    8. '  
' → logprob: -17.125076293945312
    9. 'from' → logprob: -17.125076293945312
    10. 'Safe' → logprob: -17.250076293945312

Token 108: ' Schedule' (ID: 36691)
  Prédit: 'Problem'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Problem' → logprob: -1.0374208688735962
    2. 'Solution' → logprob: -1.6624208688735962
    3. ' Problem' → logprob: -2.4124207496643066
    4. 'Live' → logprob: -3.4124207496643066
    5. 'Optimal' → logprob: -3.6624207496643066
    6. ' Solution' → logprob: -3.9124207496643066
    7. 'Multi' → logprob: -4.162420749664307
    8. 'Strategy' → logprob: -4.412420749664307
    9. 'Policy' → logprob: -4.537420749664307
    10. 'Optimization' → logprob: -4.537420749664307

Token 109: 'State' (ID: 1881)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0013560713268816471
    2. ':
' → logprob: -6.62635612487793
    3. '):' → logprob: -11.25135612487793
    4. '(' → logprob: -11.75135612487793
    5. '():' → logprob: -13.12635612487793
    6. '(List' → logprob: -13.50135612487793
    7. ' :' → logprob: -14.25135612487793
    8. 'Entry' → logprob: -14.62635612487793
    9. '<|end|>' → logprob: -14.62635612487793
    10. ':

' → logprob: -14.75135612487793

Token 110: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.00027218335890211165
    2. ':
' → logprob: -8.500271797180176
    3. '(' → logprob: -10.000271797180176
    4. ' :' → logprob: -11.125271797180176
    5. '):' → logprob: -13.125271797180176
    6. '<|end|>' → logprob: -13.250271797180176
    7. '():' → logprob: -13.750271797180176
    8. ':

' → logprob: -13.875271797180176
    9. ',' → logprob: -14.125271797180176
    10. ':**' → logprob: -15.125271797180176

Token 111: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -5.2166411478538066e-05
    2. ' region' → logprob: -11.375052452087402
    3. ' current' → logprob: -11.875052452087402
    4. '@dat' → logprob: -11.875052452087402
    5. ' int' → logprob: -12.125052452087402
    6. ' Tuple' → logprob: -12.500052452087402
    7. '   ' → logprob: -12.875052452087402
    8. '  ' → logprob: -13.000052452087402
    9. 'int' → logprob: -13.250052452087402
    10. ' Iterator' → logprob: -13.625052452087402

Token 112: ' day' (ID: 2163)
  Prédit: 'region'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'region' → logprob: -0.9485337138175964
    2. 'current' → logprob: -1.3235337734222412
    3. 'day' (adapté à ' day') → logprob: -1.5735337734222412
    4. ' day' → logprob: -2.573533773422241
    5. ' region' → logprob: -3.948533773422241
    6. 'regions' → logprob: -4.573533535003662
    7. ' current' → logprob: -5.323533535003662
    8. 'last' → logprob: -5.823533535003662
    9. 'selected' → logprob: -5.948533535003662
    10. 'tuple' → logprob: -5.948533535003662

Token 113: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0003765727742575109
    2. '_index' → logprob: -8.37537670135498
    3. '_:' → logprob: -9.50037670135498
    4. '_idx' → logprob: -10.12537670135498
    5. '_count' → logprob: -11.50037670135498
    6. ':int' → logprob: -11.75037670135498
    7. ',' → logprob: -13.00037670135498
    8. ' :' → logprob: -13.25037670135498
    9. '   ' → logprob: -14.00037670135498
    10. 's' → logprob: -14.12537670135498

Token 114: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.03806409612298012
    2. ' int' → logprob: -3.2880640029907227
    3. '   ' → logprob: -11.663064002990723
    4. '[int' → logprob: -12.538064002990723
    5. '	int' → logprob: -12.538064002990723
    6. ':int' → logprob: -13.038064002990723
    7. ' ' → logprob: -13.413064002990723
    8. '<|end|>' → logprob: -14.038064002990723
    9. '  ' → logprob: -14.163064002990723
    10. ']int' → logprob: -14.663064002990723

Token 115: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.31576114892959595
    2. ',' → logprob: -1.5657610893249512
    3. ':' → logprob: -2.815761089324951
    4. ')' → logprob: -7.315761089324951
    5. '<|end|>' → logprob: -7.565761089324951
    6. '  ' → logprob: -8.81576156616211
    7. '[' → logprob: -8.94076156616211
    8. ' ,' → logprob: -9.19076156616211
    9. '    ' → logprob: -9.31576156616211
    10. ' ' → logprob: -9.31576156616211

Token 116: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.04292439669370651
    2. ',' → logprob: -3.292924404144287
    3. ' region' → logprob: -6.417924404144287
    4. ')' → logprob: -6.417924404144287
    5. 'region' → logprob: -6.917924404144287
    6. ',
' → logprob: -9.167923927307129
    7. '    ' → logprob: -9.542923927307129
    8. ' ,' → logprob: -9.542923927307129
    9. '  ' → logprob: -9.792923927307129
    10. ' ' → logprob: -10.292923927307129

Token 117: ' burden' (ID: 39183)
  Prédit: 'region'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'region' → logprob: -0.4938853979110718
    2. ' region' → logprob: -2.3688855171203613
    3. 'last' → logprob: -2.4938855171203613
    4. 'bur' → logprob: -3.4938855171203613
    5. 'live' → logprob: -3.6188855171203613
    6. 'current' → logprob: -3.6188855171203613
    7. 'selected' → logprob: -3.7438855171203613
    8. 'active' → logprob: -4.368885517120361
    9. 'schedule' → logprob: -4.368885517120361
    10. 'multi' → logprob: -4.493885517120361

Token 118: '_used' (ID: 67016)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0002525184245314449
    2. ':int' → logprob: -9.250252723693848
    3. '_:' → logprob: -10.125252723693848
    4. '_levels' → logprob: -10.500252723693848
    5. 's' → logprob: -10.875252723693848
    6. '_list' → logprob: -11.625252723693848
    7. '_counts' → logprob: -11.750252723693848
    8. ' :' → logprob: -12.000252723693848
    9. '_map' → logprob: -12.250252723693848
    10. '_count' → logprob: -12.250252723693848

Token 119: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -3.547789674485102e-05
    2. ':int' → logprob: -10.375035285949707
    3. ' :' → logprob: -12.875035285949707
    4. '_:' → logprob: -13.625035285949707
    5. 'int' → logprob: -16.625036239624023
    6. '<|end|>' → logprob: -16.750036239624023
    7. '_' → logprob: -17.000036239624023
    8. 'ed' → logprob: -17.125036239624023
    9. ')' → logprob: -17.125036239624023
    10. 's' → logprob: -17.250036239624023

Token 120: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.004691306967288256
    2. ' int' → logprob: -5.504691123962402
    3. 'List' → logprob: -7.879691123962402
    4. 'Dict' → logprob: -8.629691123962402
    5. '   ' → logprob: -11.004691123962402
    6. ' ' → logprob: -11.379691123962402
    7. ' List' → logprob: -11.879691123962402
    8. '[int' → logprob: -11.879691123962402
    9. 'Tuple' → logprob: -12.129691123962402
    10. '  ' → logprob: -12.754691123962402

Token 121: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.13555003702640533
    2. '<|end|>' → logprob: -2.260550022125244
    3. ',' → logprob: -4.010550022125244
    4. '
' → logprob: -6.135550022125244
    5. '<|end|>' → logprob: -6.885550022125244
    6. ')' → logprob: -7.635550022125244
    7. '    
' → logprob: -9.010550498962402
    8. '```' → logprob: -9.010550498962402
    9. '@dat' → logprob: -9.135550498962402
    10. ',
' → logprob: -9.260550498962402

Token 122: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.01517398003488779
    2. '<|end|>' → logprob: -4.51517391204834
    3. '    
' → logprob: -6.64017391204834
    4. ',' → logprob: -6.64017391204834
    5. ')' → logprob: -7.89017391204834
    6. '    ' → logprob: -8.01517391204834
    7. '
' → logprob: -8.51517391204834
    8. ' ' → logprob: -8.89017391204834
    9. '<|end|>' → logprob: -9.14017391204834
    10. '  ' → logprob: -9.51517391204834

Token 123: ' multi' (ID: 12151)
  Prédit: 'multi'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'multi' (adapté à ' multi') → logprob: -0.4501383304595947
    2. 'live' → logprob: -1.8251383304595947
    3. 'last' → logprob: -2.4501383304595947
    4. 'region' → logprob: -3.5751383304595947
    5. ' multi' → logprob: -3.8251383304595947
    6. 'current' → logprob: -3.8251383304595947
    7. 'bur' → logprob: -5.075138092041016
    8. 'mult' → logprob: -5.200138092041016
    9. 'prev' → logprob: -5.825138092041016
    10. ' last' → logprob: -5.950138092041016

Token 124: '_live' (ID: 133570)
  Prédit: '_live'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_live' → logprob: -6.158350151963532e-05
    2. '_' → logprob: -10.750061988830566
    3. '_line' → logprob: -11.125061988830566
    4. 'live' → logprob: -11.375061988830566
    5. '_day' → logprob: -12.500061988830566
    6. '_l' → logprob: -12.500061988830566
    7. '_multi' → logprob: -12.875061988830566
    8. '_active' → logprob: -13.875061988830566
    9. '_use' → logprob: -14.875061988830566
    10. '_alive' → logprob: -15.000061988830566

Token 125: '_days' (ID: 67025)
  Prédit: '_days'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_days' → logprob: -0.0005687602679245174
    2. '_' → logprob: -8.250568389892578
    3. '_day' → logprob: -8.750568389892578
    4. 'd' → logprob: -10.250568389892578
    5. '_count' → logprob: -10.375568389892578
    6. 's' → logprob: -11.125568389892578
    7. '_d' → logprob: -11.125568389892578
    8. '_live' → logprob: -11.250568389892578
    9. 'days' → logprob: -11.750568389892578
    10. 'ed' → logprob: -11.875568389892578

Token 126: '_used' (ID: 67016)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0001347672223346308
    2. ':int' → logprob: -9.125134468078613
    3. 'ed' → logprob: -10.750134468078613
    4. ' :' → logprob: -13.375134468078613
    5. 'int' → logprob: -14.250134468078613
    6. 'd' → logprob: -14.500134468078613
    7. 's' → logprob: -15.000134468078613
    8. '<|end|>' → logprob: -15.000134468078613
    9. '_:' → logprob: -15.500134468078613
    10. '_completed' → logprob: -15.875134468078613

Token 127: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0002096197713399306
    2. ':int' → logprob: -8.50020980834961
    3. 'int' → logprob: -12.12520980834961
    4. ' :' → logprob: -14.62520980834961
    5. '<|end|>' → logprob: -16.62520980834961
    6. '<|end|>' → logprob: -16.75020980834961
    7. ')' → logprob: -17.00020980834961
    8. ',' → logprob: -17.12520980834961
    9. ' int' → logprob: -17.25020980834961
    10. '=' → logprob: -17.62520980834961

Token 128: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -2.15310683415737e-05
    2. ' int' → logprob: -10.750021934509277
    3. '[int' → logprob: -17.50002098083496
    4. '	int' → logprob: -18.75002098083496
    5. ':int' → logprob: -19.50002098083496
    6. '<int' → logprob: -20.87502098083496
    7. '   ' → logprob: -21.00002098083496
    8. '(int' → logprob: -21.25002098083496
    9. '=int' → logprob: -21.50002098083496
    10. '0' → logprob: -21.75002098083496

Token 129: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.035869695246219635
    2. ',' → logprob: -3.410869598388672
    3. '<|end|>' → logprob: -6.535869598388672
    4. ')' → logprob: -8.660869598388672
    5. '    
' → logprob: -8.785869598388672
    6. '  ' → logprob: -9.535869598388672
    7. ',
' → logprob: -9.660869598388672
    8. '
' → logprob: -10.035869598388672
    9. '```' → logprob: -10.160869598388672
    10. '    ' → logprob: -10.160869598388672

Token 130: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.011898460797965527
    2. ',' → logprob: -5.386898517608643
    3. '@dat' → logprob: -5.761898517608643
    4. '    
' → logprob: -6.761898517608643
    5. '<|end|>' → logprob: -7.011898517608643
    6. '```' → logprob: -8.511898040771484
    7. 'class' → logprob: -8.511898040771484
    8. '    ' → logprob: -8.761898040771484
    9. 'tokens' → logprob: -9.011898040771484
    10. '
' → logprob: -9.136898040771484

Token 131: ' last' (ID: 2174)
  Prédit: 'last'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'last' (adapté à ' last') → logprob: -0.14918097853660583
    2. 'current' → logprob: -3.1491808891296387
    3. 'region' → logprob: -3.1491808891296387
    4. 'live' → logprob: -4.399180889129639
    5. 'previous' → logprob: -4.524180889129639
    6. 'prev' → logprob: -4.524180889129639
    7. 'schedule' → logprob: -4.649180889129639
    8. 'active' → logprob: -6.399180889129639
    9. ' last' → logprob: -6.524180889129639
    10. 'selected' → logprob: -7.399180889129639

Token 132: '_regions' (ID: 153218)
  Prédit: '_live'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_live' → logprob: -0.5541165471076965
    2. '_region' → logprob: -1.1791164875030518
    3. '_schedule' → logprob: -3.0541164875030518
    4. '_choice' → logprob: -3.3041164875030518
    5. '_action' → logprob: -5.179116725921631
    6. '_regions' → logprob: -5.304116725921631
    7. '_s' → logprob: -5.304116725921631
    8. '_option' → logprob: -5.679116725921631
    9. '_active' → logprob: -5.929116725921631
    10. '_' → logprob: -6.554116725921631

Token 133: '_bit' (ID: 39574)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -1.6240566083070007e-06
    2. '_:' → logprob: -14.125001907348633
    3. 's' → logprob: -15.375001907348633
    4. ' :' → logprob: -15.875001907348633
    5. '__:' → logprob: -15.875001907348633
    6. '<|end|>' → logprob: -16.250001907348633
    7. ':selected' → logprob: -16.375001907348633
    8. '```' → logprob: -17.000001907348633
    9. ',' → logprob: -17.125001907348633
    10. 'visited' → logprob: -17.750001907348633

Token 134: 'set' (ID: 977)
  Prédit: 'set'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'set' → logprob: -0.13186796009540558
    2. 'mask' → logprob: -2.7568678855895996
    3. 'field' → logprob: -3.1318678855895996
    4. 's' → logprob: -4.8818678855896
    5. '_' → logprob: -5.1318678855896
    6. '_mask' → logprob: -6.3818678855896
    7. '_set' → logprob: -8.506868362426758
    8. '_field' → logprob: -8.756868362426758
    9. 'vector' → logprob: -8.756868362426758
    10. 'shift' → logprob: -9.006868362426758

Token 135: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -8.41866585687967e-06
    2. ':int' → logprob: -12.000008583068848
    3. ' :' → logprob: -13.250008583068848
    4. ')' → logprob: -16.37500762939453
    5. '   ' → logprob: -16.50000762939453
    6. '_:' → logprob: -16.87500762939453
    7. ',' → logprob: -17.25000762939453
    8. '  ' → logprob: -17.37500762939453
    9. '__:' → logprob: -17.37500762939453
    10. 'int' → logprob: -17.75000762939453

Token 136: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.0008062947308644652
    2. ' int' → logprob: -7.1258063316345215
    3. '0' → logprob: -14.000805854797363
    4. '   ' → logprob: -14.125805854797363
    5. 'Int' → logprob: -15.625805854797363
    6. ' ' → logprob: -16.25080680847168
    7. '[int' → logprob: -16.87580680847168
    8. '  ' → logprob: -17.37580680847168
    9. '(int' → logprob: -17.75080680847168
    10. '<int' → logprob: -18.00080680847168

Token 137: ' ' (ID: 220)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.11207637190818787
    2. ',' → logprob: -2.3620762825012207
    3. '
' → logprob: -5.487076282501221
    4. ',
' → logprob: -6.237076282501221
    5. ':' → logprob: -6.362076282501221
    6. ')' → logprob: -6.362076282501221
    7. '@dat' → logprob: -7.487076282501221
    8. '    
' → logprob: -7.487076282501221
    9. '<|end|>' → logprob: -7.862076282501221
    10. '```' → logprob: -8.862076759338379

Token 138: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7297506928443909
    2. ')' → logprob: -0.9797506928443909
    3. '<|end|>' → logprob: -2.479750633239746
    4. ',' → logprob: -3.104750633239746
    5. ':' → logprob: -5.354750633239746
    6. '<|end|>' → logprob: -6.229750633239746
    7. ' ' → logprob: -6.354750633239746
    8. '
' → logprob: -6.479750633239746
    9. ']' → logprob: -6.729750633239746
    10. '}' → logprob: -6.979750633239746

Token 139: ' bit' (ID: 3546)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.03514854982495308
    2. ' int' → logprob: -3.4101486206054688
    3. '32' → logprob: -7.035148620605469
    4. '16' → logprob: -9.160148620605469
    5. '64' → logprob: -9.410148620605469
    6. ' ' → logprob: -9.535148620605469
    7. 'The' → logprob: -9.910148620605469
    8. '<int' → logprob: -9.910148620605469
    9. '[int' → logprob: -10.035148620605469
    10. '#' → logprob: -10.785148620605469

Token 140: 'mask' (ID: 22527)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.813705563545227
    2. '=' → logprob: -2.1887054443359375
    3. '<|end|>' → logprob: -2.3137054443359375
    4. ')' → logprob: -2.9387054443359375
    5. 's' → logprob: -2.9387054443359375
    6. ' _' → logprob: -3.0637054443359375
    7. 'set' → logprob: -3.1887054443359375
    8. '   ' → logprob: -3.3137054443359375
    9. 'mask' → logprob: -3.5637054443359375
    10. 'field' → logprob: -4.0637054443359375

Token 141: ' of' (ID: 328)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 142: ' regions' (ID: 21043)
  Prédit: 'regions'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'regions' → logprob: -0.10066445916891098
    2. 'last' → logprob: -2.9756643772125244
    3. ' regions' → logprob: -4.1006646156311035
    4. 'selected' → logprob: -4.6006646156311035
    5. 'scheduled' → logprob: -5.3506646156311035
    6. 'previous' → logprob: -5.6006646156311035
    7. 'active' → logprob: -6.1006646156311035
    8. 'the' → logprob: -6.3506646156311035
    9. ' last' → logprob: -6.4756646156311035
    10. 'currently' → logprob: -6.9756646156311035

Token 143: ' visited' (ID: 18416)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0415797084569931
    2. '<|end|>' → logprob: -4.166579723358154
    3. '}' → logprob: -4.541579723358154
    4. '   ' → logprob: -5.041579723358154
    5. ']' → logprob: -5.916579723358154
    6. '@dat' → logprob: -6.541579723358154
    7. ',' → logprob: -6.916579723358154
    8. ')>' → logprob: -7.041579723358154
    9. '<|end|>' → logprob: -7.416579723358154
    10. '>' → logprob: -7.541579723358154

Token 144: ' today' (ID: 4044)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2252117395401001
    2. ',' → logprob: -2.3502116203308105
    3. '<|end|>' → logprob: -2.6002116203308105
    4. ')' → logprob: -3.9752116203308105
    5. '
' → logprob: -5.6002116203308105
    6. '@dat' → logprob: -5.8502116203308105
    7. '<|end|>' → logprob: -5.9752116203308105
    8. ':' → logprob: -6.8502116203308105
    9. '    
' → logprob: -7.1002116203308105
    10. ',
' → logprob: -7.4752116203308105

Token 145: ' to' (ID: 316)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.7056889533996582
    2. '<|end|>' → logprob: -0.9556889533996582
    3. ':' → logprob: -2.830688953399658
    4. '   ' → logprob: -3.330688953399658
    5. '<|end|>' → logprob: -4.455688953399658
    6. ',' → logprob: -4.955688953399658
    7. '    
' → logprob: -6.205688953399658
    8. '\n' → logprob: -7.205688953399658
    9. '@dat' → logprob: -7.205688953399658
    10. '```' → logprob: -7.580688953399658

Token 146: ' avoid' (ID: 8397)
  Prédit: ' avoid'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' avoid' → logprob: -1.264707088470459
    2. 'day' → logprob: -1.514707088470459
    3. ' prevent' → logprob: -1.639707088470459
    4. 'prevent' → logprob: -1.889707088470459
    5. 'avoid' → logprob: -2.514707088470459
    6. 'reduce' → logprob: -5.139707088470459
    7. ' optimize' → logprob: -5.264707088470459
    8. ' continue' → logprob: -5.639707088470459
    9. 'get' → logprob: -5.639707088470459
    10. 'continue' → logprob: -5.639707088470459

Token 147: ' repeat' (ID: 22962)
  Prédit: ' duplicates'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' duplicates' → logprob: -1.0578951835632324
    2. ' double' → logprob: -1.6828951835632324
    3. ' overlap' → logprob: -1.9328951835632324
    4. 'duplicates' → logprob: -2.3078951835632324
    5. ' repeats' → logprob: -3.1828951835632324
    6. ' overlaps' → logprob: -3.3078951835632324
    7. 'double' → logprob: -3.6828951835632324
    8. ' revis' → logprob: -3.8078951835632324
    9. ' duplicate' → logprob: -4.057895183563232
    10. ' overlapping' → logprob: -4.682895183563232

Token 148: ' within' (ID: 3518)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 149: ' same' (ID: 2684)
  Prédit: 'day'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'day' → logprob: -0.4276486337184906
    2. 'the' → logprob: -1.927648663520813
    3. ' day' → logprob: -2.8026485443115234
    4. ' the' → logprob: -2.9276485443115234
    5. 'a' → logprob: -3.0526485443115234
    6. ' a' → logprob: -3.9276485443115234
    7. 'same' → logprob: -4.427648544311523
    8. ' same' → logprob: -5.927648544311523
    9. '1' → logprob: -6.302648544311523
    10. '<|end|>' → logprob: -6.677648544311523

Token 150: ' day' (ID: 2163)
  Prédit: 'day'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'day' → logprob: -0.1280042976140976
    2. ' day' → logprob: -2.128004312515259
    3. 'schedule' → logprob: -7.75300407409668
    4. '_day' → logprob: -8.50300407409668
    5. '<|end|>' → logprob: -8.62800407409668
    6. ' schedule' → logprob: -9.00300407409668
    7. 'line' → logprob: -9.75300407409668
    8. ' ' → logprob: -10.62800407409668
    9. 'token' → logprob: -11.25300407409668
    10. ' line' → logprob: -11.37800407409668

Token 151: '


' (ID: 2499)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.036716386675834656
    2. ')' → logprob: -3.9117164611816406
    3. '
' → logprob: -4.911716461181641
    4. '<|end|>' → logprob: -5.661716461181641
    5. '    
' → logprob: -6.411716461181641
    6. ',' → logprob: -6.411716461181641
    7. '@dat' → logprob: -7.661716461181641
    8. ',
' → logprob: -7.786716461181641
    9. '<|end|>' → logprob: -7.911716461181641
    10. ']' → logprob: -8.53671646118164

Token 152: 'class' (ID: 1444)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.8176982402801514
    2. '   ' → logprob: -1.5676982402801514
    3. ',' → logprob: -1.8176982402801514
    4. ':' → logprob: -2.1926982402801514
    5. '@dat' → logprob: -3.6926982402801514
    6. '
' → logprob: -4.3176984786987305
    7. '<|end|>' → logprob: -4.5676984786987305
    8. 'def' → logprob: -4.6926984786987305
    9. '):' → logprob: -5.5676984786987305
    10. ',
' → logprob: -5.6926984786987305

Token 153: ' Live' (ID: 13065)
  Prédit: ' Scheduler'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Scheduler' → logprob: -0.6216235160827637
    2. ' Schedule' → logprob: -1.1216235160827637
    3. ' Live' → logprob: -3.4966235160827637
    4. 'Schedule' → logprob: -3.4966235160827637
    5. 'Scheduler' → logprob: -3.9966235160827637
    6. ' Multi' → logprob: -4.246623516082764
    7. ' Solution' → logprob: -4.246623516082764
    8. ' Scheduling' → logprob: -5.121623516082764
    9. ' Problem' → logprob: -5.496623516082764
    10. 'Problem' → logprob: -6.246623516082764

Token 154: 'Schedule' (ID: 25891)
  Prédit: 'Data'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Data' → logprob: -0.06618616729974747
    2. 'Schedule' → logprob: -4.06618595123291
    3. 'Scheduler' → logprob: -4.19118595123291
    4. 'Event' → logprob: -4.94118595123291
    5. 'Strategy' → logprob: -5.19118595123291
    6. 'Action' → logprob: -5.81618595123291
    7. 'Planner' → logprob: -6.19118595123291
    8. 'Optimizer' → logprob: -6.44118595123291
    9. 'State' → logprob: -6.44118595123291
    10. 'Plan' → logprob: -6.56618595123291

Token 155: 'Solver' (ID: 70484)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.00015836587408557534
    2. '(' → logprob: -9.750158309936523
    3. ':
' → logprob: -9.750158309936523
    4. '():' → logprob: -11.000158309936523
    5. '):' → logprob: -11.250158309936523
    6. '>:' → logprob: -13.250158309936523
    7. 'Scheduler' → logprob: -13.500158309936523
    8. '<|end|>' → logprob: -13.750158309936523
    9. '(S' → logprob: -14.250158309936523
    10. '(List' → logprob: -14.375158309936523

Token 156: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -2.3676733690081164e-05
    2. '(' → logprob: -11.37502384185791
    3. ':
' → logprob: -12.00002384185791
    4. ':def' → logprob: -12.87502384185791
    5. '():' → logprob: -13.25002384185791
    6. ' :' → logprob: -13.87502384185791
    7. '):' → logprob: -15.12502384185791
    8. ':

' → logprob: -15.87502384185791
    9. ':**' → logprob: -16.250022888183594
    10. '>:' → logprob: -17.000022888183594

Token 157: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0105879046022892
    2. ':' → logprob: -5.385587692260742
    3. ' def' → logprob: -5.635587692260742
    4. '    
' → logprob: -6.635587692260742
    5. ' 
' → logprob: -8.135587692260742
    6. '    ' → logprob: -8.260587692260742
    7. '(' → logprob: -9.010587692260742
    8. 'def' → logprob: -9.135587692260742
    9. ' :' → logprob: -9.760587692260742
    10. ' ' → logprob: -10.010587692260742

Token 158: ' def' (ID: 1056)
  Prédit: ' def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' def' → logprob: -0.08517803251743317
    2. '   ' → logprob: -2.7101781368255615
    3. 'def' (adapté à ' def') → logprob: -4.210177898406982
    4. '    ' → logprob: -8.46017837524414
    5. ':' → logprob: -11.21017837524414
    6. ' ' → logprob: -11.71017837524414
    7. ')' → logprob: -11.96017837524414
    8. '   ' → logprob: -11.96017837524414
    9. ' indentation' → logprob: -12.08517837524414
    10. '    
' → logprob: -12.08517837524414

Token 159: ' __' (ID: 2516)
  Prédit: 'init'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: -0.15588656067848206
    2. '__' → logprob: -2.280886650085449
    3. '_init' → logprob: -3.405886650085449
    4. 'solve' → logprob: -5.280886650085449
    5. '_' → logprob: -6.155886650085449
    6. ' __' → logprob: -6.530886650085449
    7. ' init' → logprob: -9.65588665008545
    8. ' _' → logprob: -10.28088665008545
    9. 'def' → logprob: -10.40588665008545
    10. ' solve' → logprob: -10.78088665008545

Token 160: 'init' (ID: 3287)
  Prédit: 'init'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: 0.0
    2. 'in' → logprob: -17.5
    3. ' init' → logprob: -17.875
    4. 'ini' → logprob: -18.0
    5. 'inite' → logprob: -18.5
    6. 'int' → logprob: -18.625
    7. 'initi' → logprob: -19.125
    8. 'i' → logprob: -19.875
    9. 'post' → logprob: -20.375
    10. '_init' → logprob: -20.5

Token 161: '__(' (ID: 8241)
  Prédit: '__('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.0014232104877009988
    2. '__' → logprob: -6.751423358917236
    3. '__(
' → logprob: -8.876422882080078
    4. '(self' → logprob: -9.251422882080078
    5. '(' → logprob: -12.126422882080078
    6. '__('' → logprob: -12.251422882080078
    7. '__((' → logprob: -12.751422882080078
    8. '__(*' → logprob: -13.251422882080078
    9. '__("' → logprob: -14.126422882080078
    10. '<>(' → logprob: -14.626422882080078

Token 162: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.02377679944038391
    2. ' self' → logprob: -3.7737767696380615
    3. ')' → logprob: -7.648777008056641
    4. ' ' → logprob: -10.89877700805664
    5. ',' → logprob: -10.89877700805664
    6. '<|end|>' → logprob: -11.77377700805664
    7. ' )' → logprob: -12.52377700805664
    8. '
' → logprob: -13.14877700805664
    9. '(self' → logprob: -14.39877700805664
    10. 'space' → logprob: -14.52377700805664

Token 163: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0010303078452125192
    2. 'self' → logprob: -7.126030445098877
    3. ',
' → logprob: -8.876029968261719
    4. ' ,' → logprob: -9.751029968261719
    5. '(self' → logprob: -12.001029968261719
    6. ')' → logprob: -12.126029968261719
    7. ',self' → logprob: -12.251029968261719
    8. '):' → logprob: -12.751029968261719
    9. '   ' → logprob: -13.001029968261719
    10. ' self' → logprob: -13.251029968261719

Token 164: ' parameters' (ID: 9621)
  Prédit: 'params'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'params' → logprob: -0.21593977510929108
    2. ' params' → logprob: -2.59093976020813
    3. 'self' → logprob: -2.96593976020813
    4. 'parameters' → logprob: -3.09093976020813
    5. 'problem' → logprob: -4.590939998626709
    6. ' parameters' → logprob: -4.840939998626709
    7. ' self' → logprob: -5.715939998626709
    8. ' problem' → logprob: -7.090939998626709
    9. '   ' → logprob: -9.34093952178955
    10. 'param' → logprob: -11.59093952178955

Token 165: ':' (ID: 25)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.07304584980010986
    2. ',' → logprob: -3.1980457305908203
    3. ':' → logprob: -3.5730457305908203
    4. ')' → logprob: -7.07304573059082
    5. '):
' → logprob: -7.57304573059082
    6. ' ):' → logprob: -9.44804573059082
    7. '_params' → logprob: -10.57304573059082
    8. '   ' → logprob: -11.07304573059082
    9. '=' → logprob: -11.19804573059082
    10. '}:' → logprob: -11.69804573059082

Token 166: ' Problem' (ID: 26113)
  Prédit: 'Problem'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Problem' → logprob: -0.3133622705936432
    2. ' Problem' → logprob: -1.3133622407913208
    3. ')' → logprob: -9.313362121582031
    4. 'Parameters' → logprob: -12.813362121582031
    5. ' )' → logprob: -13.063362121582031
    6. ' problem' → logprob: -13.188362121582031
    7. '   ' → logprob: -13.813362121582031
    8. ' Parameters' → logprob: -14.063362121582031
    9. 'Live' → logprob: -14.813362121582031
    10. '):
' → logprob: -15.563362121582031

Token 167: 'Parameters' (ID: 10167)
  Prédit: 'Parameters'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Parameters' → logprob: -1.0280383548888494e-06
    2. '_parameters' → logprob: -14.625000953674316
    3. 'parameters' → logprob: -15.125000953674316
    4. '_PARAMETERS' → logprob: -16.625001907348633
    5. ' Parameters' → logprob: -16.750001907348633
    6. 'Parameter' → logprob: -16.875001907348633
    7. 'Params' → logprob: -17.250001907348633
    8. ')' → logprob: -17.875001907348633
    9. '.Parameters' → logprob: -18.250001907348633
    10. '_' → logprob: -18.750001907348633

Token 168: ',' (ID: 11)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.25962379574775696
    2. ',' → logprob: -1.5096237659454346
    3. ')' → logprob: -4.884624004364014
    4. '):
' → logprob: -10.134623527526855
    5. '   ' → logprob: -10.259623527526855
    6. ':' → logprob: -11.134623527526855
    7. ' ):' → logprob: -12.259623527526855
    8. ',
' → logprob: -13.009623527526855
    9. '       ' → logprob: -13.634623527526855
    10. ' ,' → logprob: -13.884623527526855

Token 169: ' data' (ID: 1238)
  Prédit: ' live'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' live' → logprob: -0.648703932762146
    2. 'live' → logprob: -0.773703932762146
    3. ' data' → logprob: -4.6487040519714355
    4. 'data' → logprob: -6.0237040519714355
    5. ' schedule' → logprob: -6.5237040519714355
    6. ' initial' → logprob: -7.3987040519714355
    7. 'initial' → logprob: -8.273703575134277
    8. 'schedule' → logprob: -8.273703575134277
    9. 'liv' → logprob: -8.398703575134277
    10. 'l' → logprob: -8.398703575134277

Token 170: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0005773392622359097
    2. '):' → logprob: -7.750577449798584
    3. ')' → logprob: -9.500576972961426
    4. '=' → logprob: -9.875576972961426
    5. ' :' → logprob: -11.625576972961426
    6. '):
' → logprob: -11.875576972961426
    7. '   ' → logprob: -13.250576972961426
    8. ' ):' → logprob: -14.250576972961426
    9. '_:' → logprob: -14.375576972961426
    10. ':
' → logprob: -15.125576972961426

Token 171: ' Live' (ID: 13065)
  Prédit: 'Live'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Live' → logprob: -0.0019287518225610256
    2. ' Live' → logprob: -6.251928806304932
    3. 'List' → logprob: -16.626928329467773
    4. ')' → logprob: -17.251928329467773
    5. ' ' → logprob: -17.751928329467773
    6. '   ' → logprob: -18.001928329467773
    7. 'live' → logprob: -18.626928329467773
    8. 'Living' → logprob: -19.126928329467773
    9. ' live' → logprob: -19.251928329467773
    10. '.Live' → logprob: -19.251928329467773

Token 172: 'Data' (ID: 1186)
  Prédit: 'Data'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Data' → logprob: -6.704273118884885e-07
    2. ' Data' → logprob: -15.125000953674316
    3. '_Data' → logprob: -16.125
    4. '<Data' → logprob: -16.75
    5. '	Data' → logprob: -16.875
    6. '@Data' → logprob: -16.875
    7. '_data' → logprob: -17.375
    8. '   ' → logprob: -18.125
    9. 'Dat' → logprob: -18.25
    10. 'data' → logprob: -19.25

Token 173: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.002195813925936818
    2. ')' → logprob: -6.377195835113525
    3. '):
' → logprob: -7.627195835113525
    4. ',' → logprob: -12.877195358276367
    5. '   ' → logprob: -13.377195358276367
    6. ':' → logprob: -13.502195358276367
    7. ' ):' → logprob: -14.377195358276367
    8. '):
' → logprob: -14.752195358276367
    9. ' ' → logprob: -17.877195358276367
    10. '       ' → logprob: -18.502195358276367

Token 174: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0016306709730997682
    2. 'self' → logprob: -6.876630783081055
    3. '   ' → logprob: -8.001630783081055
    4. ' self' → logprob: -8.876630783081055
    5. ':' → logprob: -10.001630783081055
    6. ')' → logprob: -11.126630783081055
    7. ',' → logprob: -11.376630783081055
    8. '        
' → logprob: -11.751630783081055
    9. '    ' → logprob: -12.001630783081055
    10. '```' → logprob: -12.126630783081055

Token 175: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.013497359119355679
    2. '       ' → logprob: -4.513497352600098
    3. ' self' → logprob: -6.013497352600098
    4. '   ' → logprob: -14.013497352600098
    5. '	self' → logprob: -15.263497352600098
    6. ' ' → logprob: -16.888498306274414
    7. 'super' → logprob: -18.013498306274414
    8. '           ' → logprob: -18.263498306274414
    9. 'parameters' → logprob: -18.763498306274414
    10. '     ' → logprob: -19.138498306274414

Token 176: '.p' (ID: 1201)
  Prédit: '.parameters'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.parameters' → logprob: -0.02343938499689102
    2. '.' → logprob: -3.773439407348633
    3. ' .' → logprob: -8.898439407348633
    4. 'parameters' → logprob: -10.398439407348633
    5. '._' → logprob: -11.273439407348633
    6. '.params' → logprob: -11.398439407348633
    7. '.
' → logprob: -14.398439407348633
    8. '.parameter' → logprob: -15.023439407348633
    9. '.Parameters' → logprob: -15.148439407348633
    10. '.data' → logprob: -15.273439407348633

Token 177: ' =' (ID: 314)
  Prédit: 'aram'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'aram' → logprob: -0.0034183163661509752
    2. 'ar' → logprob: -6.003418445587158
    3. ' ar' → logprob: -7.003418445587158
    4. 'parameters' → logprob: -10.50341796875
    5. 'ARAM' → logprob: -13.00341796875
    6. ' parameters' → logprob: -13.37841796875
    7. '
' → logprob: -14.37841796875
    8. '   ' → logprob: -14.87841796875
    9. ' =' → logprob: -15.00341796875
    10. '_parameters' → logprob: -15.50341796875

Token 178: ' parameters' (ID: 9621)
  Prédit: 'parameters'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'parameters' → logprob: -0.31326231360435486
    2. ' parameters' → logprob: -1.3132623434066772
    3. '(parameters' → logprob: -14.938261985778809
    4. '	parameters' → logprob: -15.563261985778809
    5. '.parameters' → logprob: -16.313262939453125
    6. '_parameters' → logprob: -18.063262939453125
    7. 'parameter' → logprob: -18.688262939453125
    8. 'aram' → logprob: -18.688262939453125
    9. 'params' → logprob: -19.813262939453125
    10. 'Parameters' → logprob: -20.063262939453125

Token 179: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.6954918503761292
    2. '       ' → logprob: -0.6954918503761292
    3. 'self' → logprob: -6.195491790771484
    4. '<|end|>' → logprob: -8.820491790771484
    5. '        
' → logprob: -9.695491790771484
    6. ' self' → logprob: -11.070491790771484
    7. '
' → logprob: -11.320491790771484
    8. ',' → logprob: -11.445491790771484
    9. '  
' → logprob: -11.695491790771484
    10. ',
' → logprob: -11.695491790771484

Token 180: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.031823452562093735
    2. '
' → logprob: -3.6568233966827393
    3. 'self' → logprob: -5.281823635101318
    4. ' self' → logprob: -8.65682315826416
    5. '<|end|>' → logprob: -9.03182315826416
    6. '        
' → logprob: -10.03182315826416
    7. '   ' → logprob: -11.03182315826416
    8. ' 
' → logprob: -11.40682315826416
    9. ' ' → logprob: -11.65682315826416
    10. '  
' → logprob: -12.03182315826416

Token 181: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.004088373854756355
    2. ' self' → logprob: -5.754088401794434
    3. '       ' → logprob: -7.004088401794434
    4. '
' → logprob: -13.379088401794434
    5. '   ' → logprob: -14.629088401794434
    6. '        
' → logprob: -16.629087448120117
    7. ' ' → logprob: -17.004087448120117
    8. '        ' → logprob: -17.504087448120117
    9. '     ' → logprob: -17.754087448120117
    10. ' 
' → logprob: -18.129087448120117

Token 182: '.data' (ID: 3885)
  Prédit: '.data'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.data' → logprob: -0.016146862879395485
    2. '.' → logprob: -4.266146659851074
    3. ' .' → logprob: -6.766146659851074
    4. '.d' → logprob: -7.641146659851074
    5. 'data' → logprob: -8.766146659851074
    6. '.s' → logprob: -9.766146659851074
    7. '._' → logprob: -10.016146659851074
    8. '
' → logprob: -11.391146659851074
    9. '   ' → logprob: -11.766146659851074
    10. '.dat' → logprob: -11.891146659851074

Token 183: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.3530445694923401
    2. ' =' → logprob: -1.2280445098876953
    3. '.' → logprob: -5.478044509887695
    4. ',' → logprob: -8.853044509887695
    5. ')' → logprob: -9.853044509887695
    6. '.=' → logprob: -9.853044509887695
    7. '   ' → logprob: -10.478044509887695
    8. '<|end|>' → logprob: -10.603044509887695
    9. ' ' → logprob: -10.853044509887695
    10. '  ' → logprob: -11.228044509887695

Token 184: ' data' (ID: 1238)
  Prédit: 'data'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'data' → logprob: -0.07889000326395035
    2. ' data' → logprob: -2.578890085220337
    3. '	data' → logprob: -16.078889846801758
    4. '   ' → logprob: -17.078889846801758
    5. 'dat' → logprob: -17.203889846801758
    6. ' ' → logprob: -17.453889846801758
    7. '(data' → logprob: -18.078889846801758
    8. '.data' → logprob: -18.453889846801758
    9. '$data' → logprob: -18.703889846801758
    10. '
' → logprob: -18.953889846801758

Token 185: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 186: '       ' (ID: 309)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.2722954750061035
    2. '       ' → logprob: -2.6472954750061035
    3. '   ' → logprob: -2.6472954750061035
    4. '<|end|>' → logprob: -2.7722954750061035
    5. '    
' → logprob: -3.7722954750061035
    6. '        
' → logprob: -6.1472954750061035
    7. '  
' → logprob: -6.2722954750061035
    8. ')' → logprob: -6.3972954750061035
    9. ',' → logprob: -6.6472954750061035
    10. 'def' → logprob: -6.7722954750061035

Token 187: ' #' (ID: 1069)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.33440640568733215
    2. '       ' → logprob: -1.9594063758850098
    3. 'def' → logprob: -2.7094063758850098
    4. ' self' → logprob: -3.0844063758850098
    5. '
' → logprob: -4.20940637588501
    6. '   ' → logprob: -4.58440637588501
    7. '@' → logprob: -5.58440637588501
    8. '```' → logprob: -7.83440637588501
    9. '@property' → logprob: -7.95940637588501
    10. ' def' → logprob: -7.95940637588501

Token 188: ' Pre' (ID: 4659)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.034365732222795486
    2. ' self' → logprob: -4.159365653991699
    3. '       ' → logprob: -4.284365653991699
    4. '@' → logprob: -6.159365653991699
    5. 'from' → logprob: -7.159365653991699
    6. 'def' → logprob: -7.659365653991699
    7. '   ' → logprob: -7.784365653991699
    8. 'cache' → logprob: -8.0343656539917
    9. '#' → logprob: -9.2843656539917
    10. ' @' → logprob: -10.1593656539917

Token 189: 'compute' (ID: 54521)
  Prédit: 'compute'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'compute' → logprob: -0.024054987356066704
    2. 'comput' → logprob: -5.899055004119873
    3. 'dict' → logprob: -5.899055004119873
    4. 'pare' → logprob: -6.024055004119873
    5. 'cache' → logprob: -6.149055004119873
    6. 'computed' → logprob: -6.399055004119873
    7. 'serve' → logprob: -6.524055004119873
    8. 'sum' → logprob: -6.524055004119873
    9. '_compute' → logprob: -6.774055004119873
    10. 'fix' → logprob: -6.774055004119873

Token 190: ' adjacency' (ID: 177015)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.1661374568939209
    2. ' self' → logprob: -1.916137456893921
    3. '       ' → logprob: -5.1661376953125
    4. '   ' → logprob: -10.1661376953125
    5. 'max' → logprob: -10.1661376953125
    6. '[self' → logprob: -11.2911376953125
    7. ' the' → logprob: -11.6661376953125
    8. ' max' → logprob: -11.6661376953125
    9. 'region' → logprob: -11.9161376953125
    10. '        ' → logprob: -12.0411376953125

Token 191: ' for' (ID: 395)
  Prédit: '_list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_list' → logprob: -0.4937896430492401
    2. '_matrix' → logprob: -0.9937896728515625
    3. 'self' → logprob: -5.1187896728515625
    4. '_' → logprob: -5.2437896728515625
    5. '_lists' → logprob: -6.4937896728515625
    6. '_map' → logprob: -6.7437896728515625
    7. 's' → logprob: -7.1187896728515625
    8. ' =' → logprob: -7.2437896728515625
    9. 'matrix' → logprob: -7.2437896728515625
    10. ' ' → logprob: -7.7437896728515625

Token 192: ' regions' (ID: 21043)
  Prédit: ' self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.6801337003707886
    2. 'self' → logprob: -0.9301337003707886
    3. ' regions' → logprob: -3.055133819580078
    4. ' region' → logprob: -3.680133819580078
    5. ' each' → logprob: -4.430133819580078
    6. ' all' → logprob: -5.180133819580078
    7. 'regions' → logprob: -5.930133819580078
    8. 'each' → logprob: -6.680133819580078
    9. 'region' → logprob: -6.680133819580078
    10. ' range' → logprob: -7.180133819580078

Token 193: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.054441869258880615
    2. 'self' → logprob: -3.8044419288635254
    3. '
' → logprob: -4.554441928863525
    4. ' self' → logprob: -4.804441928863525
    5. '   ' → logprob: -5.679441928863525
    6. '<|end|>' → logprob: -5.804441928863525
    7. ',' → logprob: -5.929441928863525
    8. '        
' → logprob: -7.304441928863525
    9. '        ' → logprob: -7.554441928863525
    10. ':' → logprob: -8.179441452026367

Token 194: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.01620117388665676
    2. 'self' → logprob: -5.016201019287109
    3. '   ' → logprob: -5.141201019287109
    4. ' self' → logprob: -6.766201019287109
    5. ',' → logprob: -7.266201019287109
    6. '
' → logprob: -8.01620101928711
    7. '        ' → logprob: -8.14120101928711
    8. '<|end|>' → logprob: -8.14120101928711
    9. '        
' → logprob: -8.76620101928711
    10. '    ' → logprob: -9.26620101928711

Token 195: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.5561400651931763
    2. ' self' → logprob: -0.9311400651931763
    3. '       ' → logprob: -3.4311399459838867
    4. 'from' → logprob: -9.806139945983887
    5. '
' → logprob: -10.806139945983887
    6. 'import' → logprob: -11.181139945983887
    7. '   ' → logprob: -11.931139945983887
    8. ' from' → logprob: -11.931139945983887
    9. ' ' → logprob: -12.681139945983887
    10. '[self' → logprob: -12.806139945983887

Token 196: '.ad' (ID: 19775)
  Prédit: '.ad'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.ad' → logprob: -0.018625343218445778
    2. '.region' → logprob: -4.268625259399414
    3. '.reg' → logprob: -5.893625259399414
    4. '.' → logprob: -6.893625259399414
    5. ' .' → logprob: -8.393625259399414
    6. '._' → logprob: -8.893625259399414
    7. '.ne' → logprob: -9.018625259399414
    8. 'adj' → logprob: -10.143625259399414
    9. '.graph' → logprob: -10.643625259399414
    10. '.edges' → logprob: -10.768625259399414

Token 197: 'jac' (ID: 77250)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.10024085640907288
    2. 'jac' → logprob: -2.35024094581604
    3. 'js' → logprob: -11.100240707397461
    4. '_j' → logprob: -11.850240707397461
    5. 'jc' → logprob: -12.100240707397461
    6. 'ja' → logprob: -12.600240707397461
    7. 'jec' → logprob: -13.850240707397461
    8. 'acency' → logprob: -14.975240707397461
    9. '_' → logprob: -15.100240707397461
    10. 'd' → logprob: -15.975240707397461

Token 198: 'ency' (ID: 2799)
  Prédit: 'ency'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ency' → logprob: -0.0014961723936721683
    2. 'acy' → logprob: -6.876496315002441
    3. 'encies' → logprob: -8.876496315002441
    4. 'acency' → logprob: -8.876496315002441
    5. '#' → logprob: -10.626496315002441
    6. 'ents' → logprob: -10.876496315002441
    7. '```' → logprob: -11.001496315002441
    8. '=' → logprob: -11.126496315002441
    9. '   ' → logprob: -11.251496315002441
    10. '[' → logprob: -11.376496315002441

Token 199: '_map' (ID: 11824)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.07227764278650284
    2. '=' → logprob: -2.697277545928955
    3. ':' → logprob: -6.072277545928955
    4. '   ' → logprob: -11.572278022766113
    5. 's' → logprob: -11.697278022766113
    6. '_list' → logprob: -12.572278022766113
    7. ' ' → logprob: -12.822278022766113
    8. '_matrix' → logprob: -13.322278022766113
    9. ' :' → logprob: -13.572278022766113
    10. '_map' → logprob: -13.572278022766113

Token 200: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.21330684423446655
    2. '=' → logprob: -1.9633069038391113
    3. ':' → logprob: -2.9633069038391113
    4. ' :' → logprob: -9.963306427001953
    5. '   ' → logprob: -13.713306427001953
    6. ' ' → logprob: -13.838306427001953
    7. '[' → logprob: -14.213306427001953
    8. '=[]' → logprob: -15.713306427001953
    9. ',' → logprob: -15.838306427001953
    10. '=[' → logprob: -16.338306427001953

Token 201: ' self' (ID: 1051)
  Prédit: '{'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '{' → logprob: -0.5375095009803772
    2. ' {' → logprob: -1.0375094413757324
    3. '[' → logprob: -3.1625094413757324
    4. ' [' → logprob: -4.287509441375732
    5. '{}' → logprob: -6.162509441375732
    6. '[{' → logprob: -6.287509441375732
    7. ' {}' → logprob: -7.037509441375732
    8. '[self' → logprob: -9.16250991821289
    9. ' [{}' → logprob: -9.16250991821289
    10. ' [[]' → logprob: -9.66250991821289

Token 202: '._' (ID: 2697)
  Prédit: '._'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '._' → logprob: -0.006949441507458687
    2. '.' → logprob: -6.006949424743652
    3. ' .' → logprob: -6.756949424743652
    4. '.compute' → logprob: -6.756949424743652
    5. '.__' → logprob: -7.006949424743652
    6. '{' → logprob: -8.381949424743652
    7. '.{' → logprob: -8.631949424743652
    8. '.generate' → logprob: -8.756949424743652
    9. 'self' → logprob: -9.256949424743652
    10. '.p' → logprob: -9.381949424743652

Token 203: 'build' (ID: 9242)
  Prédit: 'compute'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'compute' → logprob: -0.25455692410469055
    2. 'build' → logprob: -1.5045568943023682
    3. 'pre' → logprob: -6.129557132720947
    4. 'generate' → logprob: -8.129556655883789
    5. 'create' → logprob: -9.254556655883789
    6. '{' → logprob: -11.004556655883789
    7. 'init' → logprob: -11.129556655883789
    8. 'calculate' → logprob: -11.129556655883789
    9. 'get' → logprob: -12.879556655883789
    10. 'prepare' → logprob: -13.129556655883789

Token 204: '_ad' (ID: 23782)
  Prédit: '_ad'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_ad' → logprob: -0.0011939177056774497
    2. '_adj' → logprob: -7.001194000244141
    3. 'adj' → logprob: -8.87619400024414
    4. '_region' → logprob: -9.87619400024414
    5. ' adjacency' → logprob: -10.00119400024414
    6. '_regions' → logprob: -10.37619400024414
    7. '_graph' → logprob: -12.50119400024414
    8. 'region' → logprob: -12.50119400024414
    9. ')' → logprob: -13.75119400024414
    10. 'self' → logprob: -14.00119400024414

Token 205: 'jac' (ID: 77250)
  Prédit: 'jac'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'jac' → logprob: -0.00044092073221690953
    2. 'j' → logprob: -7.750441074371338
    3. 'acency' → logprob: -11.62544059753418
    4. '_j' → logprob: -14.75044059753418
    5. 'jc' → logprob: -15.37544059753418
    6. 'ja' → logprob: -15.50044059753418
    7. '
' → logprob: -16.12544059753418
    8. 'Jac' → logprob: -16.25044059753418
    9. ' jac' → logprob: -16.62544059753418
    10. 'd' → logprob: -17.00044059753418

Token 206: 'ency' (ID: 2799)
  Prédit: 'ency'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ency' → logprob: -7.874882430769503e-05
    2. 'y' → logprob: -10.250079154968262
    3. 'cy' → logprob: -10.875079154968262
    4. 'acency' → logprob: -12.250079154968262
    5. 'acy' → logprob: -12.500079154968262
    6. '#' → logprob: -12.625079154968262
    7. '```' → logprob: -13.250079154968262
    8. 'n' → logprob: -13.250079154968262
    9. 'ent' → logprob: -13.375079154968262
    10. 'ancy' → logprob: -13.875079154968262

Token 207: '_map' (ID: 11824)
  Prédit: '_map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_map' → logprob: -0.004497057758271694
    2. '()' → logprob: -5.504497051239014
    3. '_list' → logprob: -8.629497528076172
    4. '_' → logprob: -8.879497528076172
    5. '_matrix' → logprob: -10.004497528076172
    6. '_graph' → logprob: -10.629497528076172
    7. '(' → logprob: -11.379497528076172
    8. 'map' → logprob: -12.379497528076172
    9. '_maps' → logprob: -12.504497528076172
    10. '_mask' → logprob: -12.629497528076172

Token 208: '(self' (ID: 2402)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.012726835906505585
    2. '(' → logprob: -4.387726783752441
    3. '()
' → logprob: -9.262726783752441
    4. '(
' → logprob: -9.262726783752441
    5. '(self' → logprob: -11.387726783752441
    6. ' ()' → logprob: -12.387726783752441
    7. '()

' → logprob: -13.262726783752441
    8. '<|end|>' → logprob: -13.512726783752441
    9. '().' → logprob: -13.762726783752441
    10. '(

' → logprob: -13.887726783752441

Token 209: '.p' (ID: 1201)
  Prédit: '.p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.p' → logprob: -0.0004958406207151711
    2. '.' → logprob: -8.750495910644531
    3. '.data' → logprob: -8.750495910644531
    4. ')' → logprob: -9.250495910644531
    5. 'p' → logprob: -9.875495910644531
    6. '.parameters' → logprob: -11.750495910644531
    7. ' .' → logprob: -11.875495910644531
    8. ').' → logprob: -12.250495910644531
    9. 'data' → logprob: -12.375495910644531
    10. '.)' → logprob: -12.875495910644531

Token 210: '.region' (ID: 88305)
  Prédit: '.region'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.region' → logprob: -5.3596853831550106e-05
    2. ')' → logprob: -10.500053405761719
    3. '.reg' → logprob: -11.875053405761719
    4. '.' → logprob: -12.000053405761719
    5. 'region' → logprob: -12.250053405761719
    6. '.)' → logprob: -12.625053405761719
    7. ' .' → logprob: -13.375053405761719
    8. '.max' → logprob: -13.500053405761719
    9. '#region' → logprob: -14.875053405761719
    10. '.period' → logprob: -15.500053405761719

Token 211: '_count' (ID: 7536)
  Prédit: '_count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_count' → logprob: -9.729906196298543e-06
    2. 'count' → logprob: -11.875009536743164
    3. 's' → logprob: -13.125009536743164
    4. '_counts' → logprob: -14.875009536743164
    5. '_' → logprob: -15.500009536743164
    6. '_c' → logprob: -16.500009536743164
    7. '   ' → logprob: -17.000009536743164
    8. ' count' → logprob: -17.250009536743164
    9. ')' → logprob: -17.750009536743164
    10. ' _' → logprob: -17.875009536743164

Token 212: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -3.5120287066092715e-05
    2. ' )' → logprob: -10.625035285949707
    3. ')
' → logprob: -12.125035285949707
    4. '   ' → logprob: -13.000035285949707
    5. ',' → logprob: -13.125035285949707
    6. ')

' → logprob: -15.000035285949707
    7. ',)' → logprob: -16.25003433227539
    8. '),' → logprob: -16.37503433227539
    9. ')`' → logprob: -16.37503433227539
    10. 'def' → logprob: -16.50003433227539

Token 213: '   ' (ID: 271)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.52797532081604
    2. ')' → logprob: -1.77797532081604
    3. '_' → logprob: -2.77797532081604
    4. ':' → logprob: -3.15297532081604
    5. ' def' → logprob: -3.15297532081604
    6. '   ' → logprob: -3.40297532081604
    7. '\n' → logprob: -3.77797532081604
    8. '
' → logprob: -4.402975082397461
    9. '\' → logprob: -5.277975082397461
    10. '(' → logprob: -5.652975082397461

Token 214: ' @' (ID: 759)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.007880703546106815
    2. ' def' → logprob: -5.132880687713623
    3. ')' → logprob: -6.507880687713623
    4. '   ' → logprob: -8.007881164550781
    5. '```' → logprob: -9.757881164550781
    6. '
' → logprob: -10.632881164550781
    7. '    
' → logprob: -11.382881164550781
    8. ' 
' → logprob: -12.257881164550781
    9. '\n' → logprob: -12.382881164550781
    10. '_' → logprob: -12.382881164550781

Token 215: 'staticmethod' (ID: 53164)
  Prédit: 'staticmethod'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'staticmethod' → logprob: -0.21655437350273132
    2. 'property' → logprob: -1.7165544033050537
    3. 'l' → logprob: -4.216554164886475
    4. 'classmethod' → logprob: -8.216554641723633
    5. 'cache' → logprob: -12.716554641723633
    6. 'dat' → logprob: -12.966554641723633
    7. 'static' → logprob: -13.591554641723633
    8. 'cached' → logprob: -14.341554641723633
    9. 'fun' → logprob: -15.966554641723633
    10. ' property' → logprob: -17.341554641723633

Token 216: '
' (ID: 198)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.09376268833875656
    2. ' def' → logprob: -2.9687626361846924
    3. '   ' → logprob: -3.5937626361846924
    4. '
' → logprob: -4.8437628746032715
    5. '(' → logprob: -6.0937628746032715
    6. '_def' → logprob: -8.843762397766113
    7. '    
' → logprob: -9.093762397766113
    8. '(def' → logprob: -9.218762397766113
    9. '  
' → logprob: -10.218762397766113
    10. ' ' → logprob: -10.843762397766113

Token 217: '   ' (ID: 271)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.2827500104904175
    2. '
' → logprob: -1.4077500104904175
    3. ' def' → logprob: -7.032750129699707
    4. '   ' → logprob: -7.407750129699707
    5. '    
' → logprob: -9.532750129699707
    6. '_def' → logprob: -11.157750129699707
    7. '  
' → logprob: -11.532750129699707
    8. '
' → logprob: -12.282750129699707
    9. ' 
' → logprob: -13.032750129699707
    10. '	def' → logprob: -13.407750129699707

Token 218: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -1.0206720617134124e-05
    2. '
' → logprob: -12.37501049041748
    3. ' def' → logprob: -12.50001049041748
    4. 'l' → logprob: -13.87501049041748
    5. 'cache' → logprob: -15.50001049041748
    6. 'classmethod' → logprob: -15.50001049041748
    7. 'property' → logprob: -15.75001049041748
    8. '   ' → logprob: -16.000009536743164
    9. '```' → logprob: -16.125009536743164
    10. 'staticmethod' → logprob: -16.250009536743164

Token 219: ' _' (ID: 1175)
  Prédit: '_build'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_build' → logprob: -0.00011367550177965313
    2. ' _' → logprob: -9.875113487243652
    3. 'def' → logprob: -9.875113487243652
    4. ' def' → logprob: -12.250113487243652
    5. 'build' → logprob: -12.375113487243652
    6. '_' → logprob: -14.375113487243652
    7. ' build' → logprob: -14.750113487243652
    8. '_def' → logprob: -15.000113487243652
    9. '_b' → logprob: -15.500113487243652
    10. '_builder' → logprob: -16.12511444091797

Token 220: 'build' (ID: 9242)
  Prédit: 'build'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'build' → logprob: 0.0
    2. '_build' → logprob: -17.25
    3. ' build' → logprob: -17.875
    4. '(build' → logprob: -18.625
    5. 'bit' → logprob: -19.0
    6. 'generate' → logprob: -19.625
    7. 'compute' → logprob: -20.75
    8. 'get' → logprob: -20.75
    9. '.build' → logprob: -21.5
    10. 'is' → logprob: -21.75

Token 221: '_ad' (ID: 23782)
  Prédit: '_ad'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_ad' → logprob: -1.0325924449716695e-05
    2. '_adj' → logprob: -11.50001049041748
    3. ' adjacency' → logprob: -16.625009536743164
    4. '_' → logprob: -17.500009536743164
    5. ' _' → logprob: -18.250009536743164
    6. '_adapter' → logprob: -18.625009536743164
    7. 'adj' → logprob: -18.750009536743164
    8. '_ab' → logprob: -19.125009536743164
    9. '_a' → logprob: -19.125009536743164
    10. ''ad' → logprob: -20.000009536743164

Token 222: 'jac' (ID: 77250)
  Prédit: 'jac'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'jac' → logprob: -0.002370774047449231
    2. 'j' → logprob: -6.627370834350586
    3. 'acency' → logprob: -6.877370834350586
    4. '_j' → logprob: -11.627370834350586
    5. ' adjacency' → logprob: -12.752370834350586
    6. 'jc' → logprob: -14.377370834350586
    7. '
' → logprob: -15.252370834350586
    8. '```' → logprob: -15.627370834350586
    9. 'jax' → logprob: -16.377370834350586
    10. '_' → logprob: -16.877370834350586

Token 223: 'ency' (ID: 2799)
  Prédit: 'ency'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ency' → logprob: -0.02722751721739769
    2. 'acy' → logprob: -4.277227401733398
    3. 'acency' → logprob: -4.402227401733398
    4. 'ancy' → logprob: -7.902227401733398
    5. 'ac' → logprob: -9.902227401733398
    6. '   ' → logprob: -10.402227401733398
    7. 'n' → logprob: -10.527227401733398
    8. 'cy' → logprob: -10.652227401733398
    9. '
' → logprob: -10.777227401733398
    10. 'y' → logprob: -11.152227401733398

Token 224: '_map' (ID: 11824)
  Prédit: '_map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_map' → logprob: -2.2200749754119897e-06
    2. '_maps' → logprob: -13.250001907348633
    3. ' _' → logprob: -16.750001907348633
    4. '_mask' → logprob: -16.875001907348633
    5. '_' → logprob: -17.000001907348633
    6. '(' → logprob: -17.375001907348633
    7. '_list' → logprob: -17.500001907348633
    8. '_mapping' → logprob: -17.625001907348633
    9. '_m' → logprob: -18.500001907348633
    10. '(_' → logprob: -18.500001907348633

Token 225: '(region' (ID: 103309)
  Prédit: '(region'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(region' → logprob: -0.0020756712183356285
    2. '(' → logprob: -6.502075672149658
    3. '(cls' → logprob: -7.877075672149658
    4. '(n' → logprob: -9.5020751953125
    5. '(p' → logprob: -9.8770751953125
    6. '(reg' → logprob: -10.0020751953125
    7. '(self' → logprob: -11.5020751953125
    8. '(count' → logprob: -12.3770751953125
    9. ' (' → logprob: -12.6270751953125
    10. '(
' → logprob: -13.1270751953125

Token 226: '_count' (ID: 7536)
  Prédit: '_count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_count' → logprob: -0.0009196776081807911
    2. ')_' → logprob: -7.750919818878174
    3. '_counts' → logprob: -7.875919818878174
    4. 's' → logprob: -9.375919342041016
    5. ')' → logprob: -11.375919342041016
    6. '_s' → logprob: -11.750919342041016
    7. '_size' → logprob: -14.125919342041016
    8. ']_' → logprob: -14.125919342041016
    9. '_' → logprob: -14.500919342041016
    10. 'count' → logprob: -15.125919342041016

Token 227: ':' (ID: 25)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.4748498201370239
    2. ':' → logprob: -1.224849820137024
    3. '):' → logprob: -2.4748497009277344
    4. ':int' → logprob: -11.099849700927734
    5. '):
' → logprob: -11.474849700927734
    6. ':)' → logprob: -11.974849700927734
    7. ' )' → logprob: -12.224849700927734
    8. '   ' → logprob: -12.849849700927734
    9. ' ):' → logprob: -12.974849700927734
    10. ')->' → logprob: -14.224849700927734

Token 228: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -5.240481914370321e-05
    2. ' int' → logprob: -10.000052452087402
    3. ')' → logprob: -11.875052452087402
    4. '[int' → logprob: -18.375051498413086
    5. '
' → logprob: -18.875051498413086
    6. '(int' → logprob: -19.375051498413086
    7. ']int' → logprob: -19.625051498413086
    8. '   ' → logprob: -19.875051498413086
    9. '```' → logprob: -20.125051498413086
    10. '	int' → logprob: -20.750051498413086

Token 229: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.5690089639974758e-05
    2. '):' → logprob: -11.625015258789062
    3. ' )' → logprob: -12.500015258789062
    4. ',)' → logprob: -13.000015258789062
    5. '   ' → logprob: -14.875015258789062
    6. '`)' → logprob: -16.000015258789062
    7. ')->' → logprob: -16.500015258789062
    8. '):
' → logprob: -16.500015258789062
    9. ',' → logprob: -17.000015258789062
    10. '")' → logprob: -17.250015258789062

Token 230: ' ->' (ID: 2747)
  Prédit: '->'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '->' → logprob: -0.6259111762046814
    2. ':' → logprob: -0.8759111762046814
    3. ' ->' → logprob: -3.625911235809326
    4. ')' → logprob: -3.875911235809326
    5. ')->' → logprob: -6.875911235809326
    6. '   ' → logprob: -8.250910758972168
    7. ',' → logprob: -11.375910758972168
    8. '):' → logprob: -11.500910758972168
    9. '()->' → logprob: -11.500910758972168
    10. ':
' → logprob: -11.625910758972168

Token 231: ' Dict' (ID: 55179)
  Prédit: 'List'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'List' → logprob: -0.25194260478019714
    2. 'Dict' → logprob: -1.5019426345825195
    3. ' List' → logprob: -11.62694263458252
    4. '[List' → logprob: -13.25194263458252
    5. ' Dict' → logprob: -13.75194263458252
    6. 'dict' → logprob: -13.87694263458252
    7. 'list' → logprob: -14.12694263458252
    8. '	List' → logprob: -17.001941680908203
    9. 'Tuple' → logprob: -17.251941680908203
    10. '(List' → logprob: -17.751941680908203

Token 232: '[int' (ID: 40124)
  Prédit: '[int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[int' → logprob: -7.941850526549388e-06
    2. 'int' → logprob: -11.875007629394531
    3. '<int' → logprob: -14.125007629394531
    4. '[Int' → logprob: -16.00000762939453
    5. '[' → logprob: -16.87500762939453
    6. '   ' → logprob: -17.50000762939453
    7. '(int' → logprob: -18.87500762939453
    8. '	int' → logprob: -19.25000762939453
    9. '[
' → logprob: -19.25000762939453
    10. ']int' → logprob: -19.75000762939453

Token 233: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -9.13388703338569e-06
    2. ',List' → logprob: -11.750009536743164
    3. ' ,' → logprob: -13.750009536743164
    4. ',int' → logprob: -17.000009536743164
    5. '   ' → logprob: -18.125009536743164
    6. ' ' → logprob: -18.500009536743164
    7. ',
' → logprob: -18.500009536743164
    8. '[' → logprob: -19.125009536743164
    9. '```' → logprob: -19.375009536743164
    10. ',set' → logprob: -19.625009536743164

Token 234: ' List' (ID: 2655)
  Prédit: 'List'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'List' → logprob: -0.000873347744345665
    2. ' List' → logprob: -7.250873565673828
    3. 'set' → logprob: -9.375873565673828
    4. 'Set' → logprob: -9.875873565673828
    5. 'Iterator' → logprob: -11.000873565673828
    6. 'int' → logprob: -12.000873565673828
    7. 'Tuple' → logprob: -12.875873565673828
    8. '	List' → logprob: -14.250873565673828
    9. '[List' → logprob: -14.500873565673828
    10. 'list' → logprob: -14.875873565673828

Token 235: '[int' (ID: 40124)
  Prédit: '[int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[int' → logprob: -7.896309739408025e-07
    2. 'int' → logprob: -14.375000953674316
    3. '<int' → logprob: -15.500000953674316
    4. '[' → logprob: -17.625
    5. '[Int' → logprob: -17.75
    6. ']int' → logprob: -18.25
    7. '	int' → logprob: -20.75
    8. '   ' → logprob: -21.0
    9. ' int' → logprob: -21.125
    10. '[List' → logprob: -21.25

Token 236: ']]:
' (ID: 183340)
  Prédit: ']:'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']:' → logprob: -0.1628103405237198
    2. ']:
' → logprob: -1.9128103256225586
    3. ']:
' → logprob: -6.287810325622559
    4. ']' → logprob: -7.287810325622559
    5. ']]:
' → logprob: -10.787810325622559
    6. ']:

' → logprob: -11.162810325622559
    7. ']]' → logprob: -13.912810325622559
    8. '"]:' → logprob: -13.912810325622559
    9. '']:' → logprob: -14.412810325622559
    10. ' ]' → logprob: -14.412810325622559

Token 237: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.21830585598945618
    2. '   ' → logprob: -1.8433058261871338
    3. ':' → logprob: -3.343305826187134
    4. '):' → logprob: -7.218306064605713
    5. '    ' → logprob: -7.468306064605713
    6. ',' → logprob: -8.343305587768555
    7. ')' → logprob: -8.593305587768555
    8. '```' → logprob: -8.718305587768555
    9. '<|end|>' → logprob: -9.468305587768555
    10. '[' → logprob: -9.593305587768555

Token 238: ' adjacency' (ID: 177015)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5758652091026306
    2. ' adjacency' → logprob: -1.0758652687072754
    3. 'adj' → logprob: -2.7008652687072754
    4. '   ' → logprob: -3.9508652687072754
    5. ' adj' → logprob: -4.575865268707275
    6. ' adjacent' → logprob: -9.950864791870117
    7. ' return' → logprob: -12.075864791870117
    8. '_adj' → logprob: -12.075864791870117
    9. 'graph' → logprob: -12.075864791870117
    10. 'return' → logprob: -12.075864791870117

Token 239: ' =' (ID: 314)
  Prédit: '_map'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_map' → logprob: -0.04814315214753151
    2. ' =' → logprob: -3.673143148422241
    3. '=' → logprob: -3.923143148422241
    4. '_' → logprob: -6.79814338684082
    5. 's' → logprob: -7.42314338684082
    6. '_maps' → logprob: -9.92314338684082
    7. '_list' → logprob: -10.29814338684082
    8. ':' → logprob: -12.17314338684082
    9. '=[]' → logprob: -12.17314338684082
    10. '   ' → logprob: -12.42314338684082

Token 240: ' {' (ID: 354)
  Prédit: '{'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '{' → logprob: -0.00021188464597798884
    2. ' {' → logprob: -8.750211715698242
    3. '{}
' → logprob: -10.500211715698242
    4. '{}' → logprob: -10.750211715698242
    5. '{
' → logprob: -12.875211715698242
    6. '[' → logprob: -15.000211715698242
    7. 'default' → logprob: -15.125211715698242
    8. '{i' → logprob: -15.250211715698242
    9. '{k' → logprob: -15.250211715698242
    10. '{id' → logprob: -15.375211715698242

Token 241: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.0002800471556838602
    2. 'region' → logprob: -8.500280380249023
    3. 'r' → logprob: -9.625280380249023
    4. 'node' → logprob: -12.125280380249023
    5. 'k' → logprob: -12.375280380249023
    6. ' i' → logprob: -14.250280380249023
    7. ' region' → logprob: -16.500280380249023
    8. 'x' → logprob: -16.625280380249023
    9. '}' → logprob: -16.750280380249023
    10. 'idx' → logprob: -17.875280380249023

Token 242: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -2.1008713702030946e-06
    2. ' :' → logprob: -13.750001907348633
    3. ':[' → logprob: -14.125001907348633
    4. 'for' → logprob: -16.250001907348633
    5. ':list' → logprob: -16.250001907348633
    6. ':set' → logprob: -18.125001907348633
    7. '=' → logprob: -18.750001907348633
    8. '+' → logprob: -18.750001907348633
    9. '   ' → logprob: -18.750001907348633
    10. '[]' → logprob: -18.875001907348633

Token 243: ' []' (ID: 6126)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.32004180550575256
    2. '[i' → logprob: -2.0700418949127197
    3. '[j' → logprob: -2.8200418949127197
    4. '[]}' → logprob: -3.3200418949127197
    5. '[list' → logprob: -3.4450418949127197
    6. '[r' → logprob: -4.570041656494141
    7. '[' → logprob: -5.320041656494141
    8. 'list' → logprob: -6.320041656494141
    9. ' [' → logprob: -7.570041656494141
    10. '[]
' → logprob: -7.820041656494141

Token 244: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.11283603310585022
    2. 'for' → logprob: -2.2378361225128174
    3. ' ' → logprob: -11.987835884094238
    4. '   ' → logprob: -13.237835884094238
    5. '       ' → logprob: -13.612835884094238
    6. '    ' → logprob: -13.987835884094238
    7. '}' → logprob: -14.112835884094238
    8. '	for' → logprob: -14.362835884094238
    9. ',' → logprob: -14.487835884094238
    10. '        ' → logprob: -14.737835884094238

Token 245: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.0011109242914244533
    2. 'range' → logprob: -7.126111030578613
    3. ' i' → logprob: -8.251111030578613
    4. ' range' → logprob: -10.001111030578613
    5. '	i' → logprob: -18.126110076904297
    6. 'in' → logprob: -18.626110076904297
    7. '```' → logprob: -18.751110076904297
    8. ')' → logprob: -18.876110076904297
    9. ' ' → logprob: -19.251110076904297
    10. ')i' → logprob: -19.376110076904297

Token 246: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.3228079676628113
    2. 'in' → logprob: -1.322808027267456
    3. 'range' → logprob: -4.822807788848877
    4. ' range' → logprob: -6.572807788848877
    5. 'i' → logprob: -9.822808265686035
    6. 'ange' → logprob: -13.947808265686035
    7. ' i' → logprob: -13.947808265686035
    8. ' ' → logprob: -14.322808265686035
    9. 'n' → logprob: -14.822808265686035
    10. '(range' → logprob: -15.322808265686035

Token 247: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.00033546582562848926
    2. ' range' → logprob: -8.000335693359375
    3. '	range' → logprob: -18.875335693359375
    4. '(range' → logprob: -19.875335693359375
    5. '
' → logprob: -20.750335693359375
    6. '```' → logprob: -21.500335693359375
    7. 'Range' → logprob: -22.500335693359375
    8. '_range' → logprob: -23.375335693359375
    9. '   ' → logprob: -23.500335693359375
    10. '}' → logprob: -23.500335693359375

Token 248: '(region' (ID: 103309)
  Prédit: '(region'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(region' → logprob: -4.3822154111694545e-05
    2. 'region' → logprob: -10.125043869018555
    3. '(' → logprob: -12.625043869018555
    4. ' region' → logprob: -15.500043869018555
    5. ' (' → logprob: -16.375043869018555
    6. '(reg' → logprob: -17.250043869018555
    7. '   ' → logprob: -19.250043869018555
    8. '(
' → logprob: -20.000043869018555
    9. '.region' → logprob: -20.125043869018555
    10. '_region' → logprob: -20.250043869018555

Token 249: '_count' (ID: 7536)
  Prédit: '_count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_count' → logprob: -1.27099974633893e-05
    2. ' _' → logprob: -12.375012397766113
    3. 'count' → logprob: -12.750012397766113
    4. '_counts' → logprob: -13.250012397766113
    5. '_COUNT' → logprob: -13.500012397766113
    6. ')' → logprob: -14.125012397766113
    7. ')_' → logprob: -14.875012397766113
    8. 's' → logprob: -15.250012397766113
    9. '_' → logprob: -15.375012397766113
    10. '_cnt' → logprob: -15.500012397766113

Token 250: ')}
' (ID: 19324)
  Prédit: '}'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '}' → logprob: -0.03424501419067383
    2. '}
' → logprob: -3.409245014190674
    3. ')}' → logprob: -7.909245014190674
    4. '       ' → logprob: -9.284244537353516
    5. ')' → logprob: -9.409244537353516
    6. ' }' → logprob: -10.909244537353516
    7. '   ' → logprob: -10.909244537353516
    8. ')}
' → logprob: -11.659244537353516
    9. '}
' → logprob: -12.534244537353516
    10. '}

' → logprob: -12.534244537353516

Token 251: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.07207700610160828
    2. ' for' → logprob: -2.8220770359039307
    3. '<|end|>' → logprob: -4.947076797485352
    4. 'for' → logprob: -7.072076797485352
    5. '   ' → logprob: -7.322076797485352
    6. '
' → logprob: -7.322076797485352
    7. '        
' → logprob: -7.947076797485352
    8. '<|end|>' → logprob: -9.572076797485352
    9. '  
' → logprob: -9.822076797485352
    10. ' ' → logprob: -10.197076797485352

Token 252: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.03407290577888489
    2. ' for' → logprob: -4.0340728759765625
    3. '       ' → logprob: -4.1590728759765625
    4. 'return' → logprob: -8.909072875976562
    5. '#' → logprob: -10.409072875976562
    6. '   ' → logprob: -11.784072875976562
    7. ' return' → logprob: -14.284072875976562
    8. '```' → logprob: -14.659072875976562
    9. '	for' → logprob: -14.909072875976562
    10. ' ' → logprob: -16.284072875976562

Token 253: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.25436264276504517
    2. 'i' → logprob: -1.5043625831604004
    3. ' region' → logprob: -6.6293625831604
    4. 'region' → logprob: -6.8793625831604
    5. 'r' → logprob: -10.504363059997559
    6. ' current' → logprob: -12.004363059997559
    7. ' r' → logprob: -12.004363059997559
    8. '   ' → logprob: -12.379363059997559
    9. ' node' → logprob: -12.504363059997559
    10. 'u' → logprob: -12.629363059997559

Token 254: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0005874642520211637
    2. 'in' → logprob: -7.500587463378906
    3. '+' → logprob: -11.500587463378906
    4. ' ' → logprob: -11.625587463378906
    5. ',' → logprob: -12.000587463378906
    6. '_' → logprob: -12.625587463378906
    7. '-' → logprob: -13.250587463378906
    8. '1' → logprob: -13.375587463378906
    9. '```' → logprob: -14.625587463378906
    10. '_in' → logprob: -15.250587463378906

Token 255: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.06994087994098663
    2. ' range' → logprob: -2.6949408054351807
    3. 'region' → logprob: -13.694940567016602
    4. '   ' → logprob: -13.819940567016602
    5. ' ' → logprob: -13.944940567016602
    6. '	range' → logprob: -14.819940567016602
    7. '(range' → logprob: -15.319940567016602
    8. '```' → logprob: -15.319940567016602
    9. '  ' → logprob: -15.944940567016602
    10. ')' → logprob: -16.3199405670166

Token 256: '(region' (ID: 103309)
  Prédit: '(region'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(region' → logprob: -0.0001684981834841892
    2. '(' → logprob: -8.750168800354004
    3. 'region' → logprob: -11.625168800354004
    4. ' region' → logprob: -14.750168800354004
    5. ' (' → logprob: -15.375168800354004
    6. '(reg' → logprob: -15.500168800354004
    7. '1' → logprob: -15.875168800354004
    8. '(i' → logprob: -16.750167846679688
    9. ' ' → logprob: -17.625167846679688
    10. '(
' → logprob: -18.125167846679688

Token 257: '_count' (ID: 7536)
  Prédit: '_count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_count' → logprob: -0.00016206118743866682
    2. 's' → logprob: -9.250162124633789
    3. 'count' → logprob: -10.125162124633789
    4. '   ' → logprob: -12.125162124633789
    5. '_COUNT' → logprob: -12.125162124633789
    6. ')' → logprob: -12.250162124633789
    7. '_counts' → logprob: -12.500162124633789
    8. 'Count' → logprob: -13.250162124633789
    9. ' ' → logprob: -14.500162124633789
    10. 'region' → logprob: -14.750162124633789

Token 258: '):
' (ID: 1883)
  Prédit: ' -'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.5372580885887146
    2. '-' → logprob: -1.5372581481933594
    3. '):' → logprob: -2.0372581481933594
    4. '):
' → logprob: -2.6622581481933594
    5. ' ):' → logprob: -8.53725814819336
    6. '   ' → logprob: -8.91225814819336
    7. ' ):
' → logprob: -10.03725814819336
    8. ')' → logprob: -10.28725814819336
    9. ' ' → logprob: -10.28725814819336
    10. '+' → logprob: -11.16225814819336

Token 259: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.026961490511894226
    2. ' for' → logprob: -3.6519615650177
    3. 'for' → logprob: -8.276961326599121
    4. '   ' → logprob: -8.401961326599121
    5. ',' → logprob: -9.651961326599121
    6. '       ' → logprob: -9.776961326599121
    7. '	       ' → logprob: -11.401961326599121
    8. '    	   ' → logprob: -11.526961326599121
    9. '<|end|>' → logprob: -11.776961326599121
    10. ' if' → logprob: -11.901961326599121

Token 260: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.2601519823074341
    2. 'for' → logprob: -1.510151982307434
    3. '           ' → logprob: -5.6351518630981445
    4. 'adj' → logprob: -5.7601518630981445
    5. ' if' → logprob: -7.0101518630981445
    6. '   ' → logprob: -8.635151863098145
    7. '       ' → logprob: -8.760151863098145
    8. ' for' → logprob: -8.885151863098145
    9. 'j' → logprob: -9.760151863098145
    10. '#' → logprob: -11.635151863098145

Token 261: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.5232310891151428
    2. 'i' → logprob: -0.8982310891151428
    3. '(i' → logprob: -10.773231506347656
    4. '0' → logprob: -10.773231506347656
    5. 'abs' → logprob: -11.023231506347656
    6. ' ' → logprob: -11.273231506347656
    7. '	i' → logprob: -11.398231506347656
    8. '   ' → logprob: -12.023231506347656
    9. ' abs' → logprob: -12.523231506347656
    10. 'region' → logprob: -12.835731506347656

Token 262: ' >' (ID: 1424)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.5736836194992065
    2. ' >' → logprob: -0.9486836194992065
    3. '-' → logprob: -3.448683738708496
    4. ' -' → logprob: -4.448683738708496
    5. '+' → logprob: -5.198683738708496
    6. ' +' → logprob: -8.948683738708496
    7. ' ' → logprob: -9.698683738708496
    8. '1' → logprob: -11.073683738708496
    9. '   ' → logprob: -11.636183738708496
    10. ' <' → logprob: -11.698683738708496

Token 263: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.632631242275238
    2. ' ' → logprob: -0.757631242275238
    3. '=' → logprob: -10.507631301879883
    4. 'i' → logprob: -13.632631301879883
    5. '1' → logprob: -14.445131301879883
    6. '  ' → logprob: -14.945131301879883
    7. '<|end|>' → logprob: -14.945131301879883
    8. '>' → logprob: -15.007631301879883
    9. '   ' → logprob: -15.070131301879883
    10. ' i' → logprob: -15.507631301879883

Token 264: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0017049367306753993
    2. ' ' → logprob: -6.376705169677734
    3. 'i' → logprob: -13.876705169677734
    4. '   ' → logprob: -14.376705169677734
    5. '=' → logprob: -15.126705169677734
    6. '  ' → logprob: -16.126705169677734
    7. '```' → logprob: -16.501705169677734
    8. '
' → logprob: -16.564205169677734
    9. '1' → logprob: -16.751705169677734
    10. '    ' → logprob: -16.814205169677734

Token 265: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.2969159483909607
    2. ':' → logprob: -1.4219160079956055
    3. '               ' → logprob: -4.7969160079956055
    4. '           ' → logprob: -5.0469160079956055
    5. ' and' → logprob: -8.046916007995605
    6. ' :
' → logprob: -8.296916007995605
    7. '):
' → logprob: -8.796916007995605
    8. ',' → logprob: -9.171916007995605
    9. ' :' → logprob: -9.171916007995605
    10. '            ' → logprob: -11.671916007995605

Token 266: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.02908792905509472
    2. ' adjacency' → logprob: -4.154088020324707
    3. '           ' → logprob: -4.529088020324707
    4. ',' → logprob: -6.654088020324707
    5. 'adj' → logprob: -7.529088020324707
    6. '<|end|>' → logprob: -9.654088020324707
    7. ' adj' → logprob: -9.779088020324707
    8. '```' → logprob: -10.529088020324707
    9. ')' → logprob: -10.779088020324707
    10. ' ,' → logprob: -11.154088020324707

Token 267: ' adjacency' (ID: 177015)
  Prédit: ' adjacency'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' adjacency' → logprob: -0.01816035620868206
    2. 'adj' → logprob: -4.018160343170166
    3. '           ' → logprob: -12.268160820007324
    4. ' adj' → logprob: -13.143160820007324
    5. '               ' → logprob: -13.268160820007324
    6. 'ad' → logprob: -14.393160820007324
    7. ' adjacent' → logprob: -14.518160820007324
    8. '                   ' → logprob: -15.018160820007324
    9. 'Adj' → logprob: -15.393160820007324
    10. '   ' → logprob: -16.143159866333008

Token 268: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -9.491498531133402e-06
    2. '[' → logprob: -12.000009536743164
    3. ' [' → logprob: -13.000009536743164
    4. '   ' → logprob: -15.125009536743164
    5. '[I' → logprob: -15.500009536743164
    6. '           ' → logprob: -15.625009536743164
    7. 'i' → logprob: -16.000009536743164
    8. '       ' → logprob: -16.750009536743164
    9. '\[' → logprob: -17.875009536743164
    10. '][' → logprob: -18.000009536743164

Token 269: '].' (ID: 1651)
  Prédit: '].'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '].' → logprob: -0.018329152837395668
    2. '.append' → logprob: -4.51832914352417
    3. '[i' → logprob: -5.14332914352417
    4. '.' → logprob: -7.39332914352417
    5. '           ' → logprob: -8.143329620361328
    6. ' ].' → logprob: -8.643329620361328
    7. ' .' → logprob: -8.893329620361328
    8. '[' → logprob: -9.893329620361328
    9. '   ' → logprob: -10.018329620361328
    10. '       ' → logprob: -10.143329620361328

Token 270: 'append' (ID: 9132)
  Prédit: 'append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'append' → logprob: -5.5577775128767826e-06
    2. ' append' → logprob: -12.500005722045898
    3. '.append' → logprob: -13.250005722045898
    4. '	append' → logprob: -17.6250057220459
    5. 'appen' → logprob: -17.8750057220459
    6. '_append' → logprob: -19.1250057220459
    7. 'app' → logprob: -19.3750057220459
    8. '   ' → logprob: -21.0000057220459
    9. 'Append' → logprob: -21.3750057220459
    10. 'add' → logprob: -21.5000057220459

Token 271: '(i' (ID: 3649)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.011049470864236355
    2. ' i' → logprob: -4.511049270629883
    3. '(i' → logprob: -13.386049270629883
    4. '	i' → logprob: -16.761049270629883
    5. '   ' → logprob: -16.886049270629883
    6. '{i' → logprob: -17.136049270629883
    7. '[i' → logprob: -19.011049270629883
    8. ' ' → logprob: -19.136049270629883
    9. '    ' → logprob: -19.386049270629883
    10. '       ' → logprob: -19.636049270629883

Token 272: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.4740819036960602
    2. '-' → logprob: -0.9740818738937378
    3. ' ' → logprob: -12.349081993103027
    4. ')' → logprob: -15.349081993103027
    5. '   ' → logprob: -15.349081993103027
    6. ' ' → logprob: -16.59908103942871
    7. '1' → logprob: -17.09908103942871
    8. '  ' → logprob: -18.09908103942871
    9. '-)' → logprob: -18.97408103942871
    10. '       ' → logprob: -19.22408103942871

Token 273: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0003802680876106024
    2. ' ' → logprob: -7.875380039215088
    3. '```' → logprob: -17.12537956237793
    4. ')' → logprob: -17.37537956237793
    5. '<|end|>' → logprob: -17.87537956237793
    6. '   ' → logprob: -18.12537956237793
    7. ' ' → logprob: -19.81287956237793
    8. '  ' → logprob: -20.56287956237793
    9. '
' → logprob: -20.68787956237793
    10. '`' → logprob: -20.81287956237793

Token 274: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.688212614681106e-05
    2. ' ' → logprob: -11.000017166137695
    3. '```' → logprob: -17.125017166137695
    4. '   ' → logprob: -18.125017166137695
    5. '<|end|>' → logprob: -18.500017166137695
    6. ')' → logprob: -18.875017166137695
    7. '۱' → logprob: -19.750017166137695
    8. '
' → logprob: -19.937517166137695
    9. '`' → logprob: -20.062517166137695
    10. '2' → logprob: -20.125017166137695

Token 275: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.02067992277443409
    2. ')
' → logprob: -3.8956799507141113
    3. ' )' → logprob: -9.145679473876953
    4. '       ' → logprob: -11.270679473876953
    5. ' )
' → logprob: -11.395679473876953
    6. '           ' → logprob: -12.395679473876953
    7. ')

' → logprob: -14.145679473876953
    8. ')
' → logprob: -14.145679473876953
    9. '   ' → logprob: -14.645679473876953
    10. ' ' → logprob: -14.770679473876953

Token 276: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.05644991621375084
    2. '       ' → logprob: -2.9314498901367188
    3. '            
' → logprob: -8.056449890136719
    4. '
' → logprob: -8.181449890136719
    5. '<|end|>' → logprob: -8.306449890136719
    6. '   ' → logprob: -9.056449890136719
    7. '        
' → logprob: -9.181449890136719
    8. ' 
' → logprob: -9.181449890136719
    9. '    
' → logprob: -9.306449890136719
    10. '```' → logprob: -9.806449890136719

Token 277: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.20475327968597412
    2. 'if' (adapté à ' if') → logprob: -1.8297532796859741
    3. '           ' → logprob: -4.454753398895264
    4. '       ' → logprob: -4.704753398895264
    5. '
' → logprob: -6.329753398895264
    6. '        ' → logprob: -6.829753398895264
    7. ' ' → logprob: -7.329753398895264
    8. ' 
' → logprob: -8.204752922058105
    9. '    ' → logprob: -9.704752922058105
    10. '            ' → logprob: -9.954752922058105

Token 278: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.005234475247561932
    2. 'i' → logprob: -5.255234241485596
    3. ' ' → logprob: -15.005234718322754
    4. ' (' → logprob: -15.630234718322754
    5. '	i' → logprob: -16.505233764648438
    6. '  ' → logprob: -16.630233764648438
    7. '(i' → logprob: -16.755233764648438
    8. '    ' → logprob: -16.880233764648438
    9. '   ' → logprob: -17.505233764648438
    10. ' ' → logprob: -17.505233764648438

Token 279: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.08059833943843842
    2. '<' → logprob: -2.5805983543395996
    3. '+' → logprob: -6.7055983543396
    4. ' ' → logprob: -7.9555983543396
    5. ' +' → logprob: -9.080597877502441
    6. '[' → logprob: -11.955597877502441
    7. ' <
' → logprob: -13.455597877502441
    8. '<n' → logprob: -13.705597877502441
    9. '<size' → logprob: -14.080597877502441
    10. ')' → logprob: -14.143097877502441

Token 280: ' region' (ID: 7967)
  Prédit: ' region'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' region' → logprob: -0.142683207988739
    2. 'region' → logprob: -2.017683267593384
    3. '(region' → logprob: -12.142683029174805
    4. ' ' → logprob: -13.642683029174805
    5. ' self' → logprob: -15.017683029174805
    6. '   ' → logprob: -15.267683029174805
    7. '.region' → logprob: -15.267683029174805
    8. 'self' → logprob: -15.392683029174805
    9. 'endregion' → logprob: -16.517683029174805
    10. ' ' → logprob: -16.517683029174805

Token 281: '_count' (ID: 7536)
  Prédit: '_count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_count' → logprob: -0.0006111674592830241
    2. 'count' → logprob: -7.875611305236816
    3. 'Count' → logprob: -8.875611305236816
    4. '_COUNT' → logprob: -10.000611305236816
    5. '_counts' → logprob: -11.250611305236816
    6. '-' → logprob: -11.750611305236816
    7. 'user' → logprob: -12.125611305236816
    8. '.Count' → logprob: -12.500611305236816
    9. '_Count' → logprob: -12.500611305236816
    10. '   ' → logprob: -13.125611305236816

Token 282: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.03804286941885948
    2. '-' → logprob: -3.2880427837371826
    3. ' ' → logprob: -13.538043022155762
    4. ' ' → logprob: -17.663042068481445
    5. '1' → logprob: -17.913042068481445
    6. '   ' → logprob: -18.163042068481445
    7. ':' → logprob: -18.288042068481445
    8. '  ' → logprob: -19.163042068481445
    9. '
' → logprob: -19.413042068481445
    10. '()-' → logprob: -20.038042068481445

Token 283: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0076079354621469975
    2. ' ' → logprob: -4.882607936859131
    3. '   ' → logprob: -13.507607460021973
    4. '```' → logprob: -15.757607460021973
    5. '  ' → logprob: -16.13260841369629
    6. '<|end|>' → logprob: -16.88260841369629
    7. '       ' → logprob: -17.32010841369629
    8. '    ' → logprob: -17.44510841369629
    9. '           ' → logprob: -17.82010841369629
    10. '
' → logprob: -18.19510841369629

Token 284: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.451116051815916e-05
    2. ' ' → logprob: -10.625024795532227
    3. '<|end|>' → logprob: -16.375024795532227
    4. '```' → logprob: -17.250024795532227
    5. '   ' → logprob: -19.125024795532227
    6. '
' → logprob: -19.250024795532227
    7. '۱' → logprob: -19.812524795532227
    8. ',' → logprob: -19.937524795532227
    9. '  ' → logprob: -20.687524795532227
    10. '<|end|>' → logprob: -20.812524795532227

Token 285: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.9031350016593933
    2. ':
' → logprob: -1.028135061264038
    3. '):
' → logprob: -2.028135061264038
    4. '               ' → logprob: -2.778135061264038
    5. '):' → logprob: -3.528135061264038
    6. '           ' → logprob: -4.403134822845459
    7. ' :
' → logprob: -7.903134822845459
    8. ')' → logprob: -8.153135299682617
    9. ',' → logprob: -8.278135299682617
    10. ' :' → logprob: -8.403135299682617

Token 286: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.00619516521692276
    2. 'adj' → logprob: -5.506195068359375
    3. ' adjacency' → logprob: -6.506195068359375
    4. ' adj' → logprob: -8.006195068359375
    5. '           ' → logprob: -8.631195068359375
    6. ',' → logprob: -10.131195068359375
    7. ' ' → logprob: -11.131195068359375
    8. ' ,' → logprob: -11.881195068359375
    9. '```' → logprob: -11.881195068359375
    10. '   ' → logprob: -12.131195068359375

Token 287: ' adjacency' (ID: 177015)
  Prédit: ' adjacency'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' adjacency' → logprob: -0.0008077251841314137
    2. 'adj' → logprob: -7.125807762145996
    3. ' adj' → logprob: -12.875807762145996
    4. ' adjacent' → logprob: -14.500807762145996
    5. 'ad' → logprob: -17.00080680847168
    6. '.ad' → logprob: -17.37580680847168
    7. 'Adj' → logprob: -17.50080680847168
    8. '               ' → logprob: -18.25080680847168
    9. '_adj' → logprob: -18.25080680847168
    10. '           ' → logprob: -18.25080680847168

Token 288: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.003993034828454256
    2. '.append' → logprob: -6.378993034362793
    3. '.' → logprob: -6.503993034362793
    4. ' .' → logprob: -7.378993034362793
    5. '.i' → logprob: -9.253993034362793
    6. '].' → logprob: -10.128993034362793
    7. '           ' → logprob: -11.253993034362793
    8. ').' → logprob: -11.878993034362793
    9. '.setdefault' → logprob: -13.003993034362793
    10. '.ad' → logprob: -13.128993034362793

Token 289: '].' (ID: 1651)
  Prédit: '].'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '].' → logprob: -0.014399017207324505
    2. '.append' → logprob: -4.63939905166626
    3. '.' → logprob: -5.63939905166626
    4. ').' → logprob: -7.38939905166626
    5. ']' → logprob: -8.389398574829102
    6. '           ' → logprob: -9.389398574829102
    7. ' ].' → logprob: -9.889398574829102
    8. ' .' → logprob: -10.139398574829102
    9. '}.' → logprob: -10.139398574829102
    10. '>.' → logprob: -12.389398574829102

Token 290: 'append' (ID: 9132)
  Prédit: 'append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'append' → logprob: -1.2664456789934775e-06
    2. ' append' → logprob: -14.000000953674316
    3. '.append' → logprob: -14.875000953674316
    4. 'appen' → logprob: -17.250001907348633
    5. '	append' → logprob: -17.375001907348633
    6. 'add' → logprob: -18.500001907348633
    7. 'appe' → logprob: -19.500001907348633
    8. 'adj' → logprob: -19.625001907348633
    9. 'Append' → logprob: -20.000001907348633
    10. '```' → logprob: -20.750001907348633

Token 291: '(i' (ID: 3649)
  Prédit: '(i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.0008344047237187624
    2. '(' → logprob: -7.3758344650268555
    3. 'i' → logprob: -8.750834465026855
    4. ' i' → logprob: -10.125834465026855
    5. ' (' → logprob: -11.625834465026855
    6. '(
' → logprob: -14.875834465026855
    7. '((' → logprob: -16.75083351135254
    8. '{i' → logprob: -17.50083351135254
    9. '[i' → logprob: -17.62583351135254
    10. '	i' → logprob: -18.25083351135254

Token 292: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.1270279586315155
    2. '+' → logprob: -2.127027988433838
    3. ' i' → logprob: -9.75202751159668
    4. ' ' → logprob: -11.12702751159668
    5. '[i' → logprob: -11.62702751159668
    6. 'i' → logprob: -11.75202751159668
    7. '+i' → logprob: -12.12702751159668
    8. '1' → logprob: -12.75202751159668
    9. '(i' → logprob: -14.37702751159668
    10. ' plus' → logprob: -15.00202751159668

Token 293: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.029750952497124672
    2. ' ' → logprob: -3.5297510623931885
    3. ' ' → logprob: -16.40475082397461
    4. '0' → logprob: -16.40475082397461
    5. '```' → logprob: -16.40475082397461
    6. '   ' → logprob: -16.65475082397461
    7. ')' → logprob: -16.90475082397461
    8. '  ' → logprob: -17.65475082397461
    9. '
' → logprob: -17.90475082397461
    10. '<|end|>' → logprob: -18.52975082397461

Token 294: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00010926496179308742
    2. ' ' → logprob: -9.125109672546387
    3. '0' → logprob: -16.62510871887207
    4. '```' → logprob: -17.00010871887207
    5. '
' → logprob: -17.12510871887207
    6. '   ' → logprob: -17.62510871887207
    7. ')' → logprob: -17.87510871887207
    8. '  ' → logprob: -19.00010871887207
    9. '``' → logprob: -19.31260871887207
    10. 'int' → logprob: -19.56260871887207

Token 295: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0030458085238933563
    2. '       ' → logprob: -6.253046035766602
    3. ')
' → logprob: -6.878046035766602
    4. ' )' → logprob: -9.628046035766602
    5. ')return' → logprob: -11.378046035766602
    6. '           ' → logprob: -12.128046035766602
    7. '<|end|>' → logprob: -14.128046035766602
    8. '   ' → logprob: -14.878046035766602
    9. ')\
' → logprob: -15.003046035766602
    10. '),' → logprob: -15.128046035766602

Token 296: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00024168188974726945
    2. 'return' → logprob: -8.50024127960205
    3. ' return' → logprob: -10.87524127960205
    4. '   ' → logprob: -11.50024127960205
    5. '
' → logprob: -12.87524127960205
    6. '	return' → logprob: -13.00024127960205
    7. '	' → logprob: -13.62524127960205
    8. '           ' → logprob: -13.87524127960205
    9. '<|end|>' → logprob: -14.12524127960205
    10. ',' → logprob: -15.12524127960205

Token 297: ' return' (ID: 622)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.034820251166820526
    2. 'return' (adapté à ' return') → logprob: -3.534820318222046
    3. ' return' → logprob: -5.534820079803467
    4. '
' → logprob: -7.034820079803467
    5. '	return' → logprob: -9.034820556640625
    6. '   ' → logprob: -9.659820556640625
    7. '	' → logprob: -11.284820556640625
    8. ' ' → logprob: -11.909820556640625
    9. 'eturn' → logprob: -12.534820556640625
    10. '
' → logprob: -12.659820556640625

Token 298: ' adjacency' (ID: 177015)
  Prédit: 'adj'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'adj' → logprob: -0.005234002135694027
    2. ' adjacency' → logprob: -5.2552337646484375
    3. ' adj' → logprob: -15.505233764648438
    4. 'Adj' → logprob: -17.880233764648438
    5. '{' → logprob: -18.255233764648438
    6. ' adjacent' → logprob: -19.630233764648438
    7. '_adj' → logprob: -20.505233764648438
    8. '   ' → logprob: -21.880233764648438
    9. '(adj' → logprob: -21.880233764648438
    10. '
' → logprob: -22.005233764648438

Token 299: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 300: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1302727907896042
    2. '    
' → logprob: -2.75527286529541
    3. '@' → logprob: -4.00527286529541
    4. '<|end|>' → logprob: -4.50527286529541
    5. '```' → logprob: -4.50527286529541
    6. ' 
' → logprob: -5.38027286529541
    7. '  
' → logprob: -5.88027286529541
    8. ')' → logprob: -6.00527286529541
    9. 'def' → logprob: -6.25527286529541
    10. '
' → logprob: -6.63027286529541

Token 301: ' def' (ID: 1056)
  Prédit: '@'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '@' → logprob: -0.011477130465209484
    2. '   ' → logprob: -4.636476993560791
    3. ' @' → logprob: -7.011476993560791
    4. 'def' (adapté à ' def') → logprob: -7.136476993560791
    5. ' def' → logprob: -12.01147747039795
    6. '@property' → logprob: -12.51147747039795
    7. ')' → logprob: -13.13647747039795
    8. '```' → logprob: -13.13647747039795
    9. '@index' → logprob: -13.63647747039795
    10. ' ' → logprob: -13.63647747039795

Token 302: ' solve' (ID: 17722)
  Prédit: ' _'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' _' → logprob: -1.0867729187011719
    2. ' def' → logprob: -1.2117729187011719
    3. '_best' → logprob: -2.711772918701172
    4. '_schedule' → logprob: -2.711772918701172
    5. ' schedule' → logprob: -2.961772918701172
    6. ' ' → logprob: -2.961772918701172
    7. '_live' → logprob: -3.836772918701172
    8. '_max' → logprob: -3.836772918701172
    9. ' solve' → logprob: -3.961772918701172
    10. ' max' → logprob: -4.336772918701172

Token 303: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.024128183722496033
    2. '(' → logprob: -3.7741281986236572
    3. '(
' → logprob: -7.149127960205078
    4. ' (' → logprob: -9.274127960205078
    5. 'self' → logprob: -13.649127960205078
    6. '(

' → logprob: -14.774127960205078
    7. ' self' → logprob: -15.274127960205078
    8. '()' → logprob: -15.774127960205078
    9. ' ' → logprob: -15.774127960205078
    10. '   ' → logprob: -15.774127960205078

Token 304: ')' (ID: 8)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.16980373859405518
    2. '):' → logprob: -1.9198037385940552
    3. ')' → logprob: -5.044803619384766
    4. 'self' → logprob: -6.419803619384766
    5. '):
' → logprob: -6.919803619384766
    6. ',
' → logprob: -8.669803619384766
    7. '   ' → logprob: -9.419803619384766
    8. ' ,' → logprob: -10.169803619384766
    9. '(self' → logprob: -10.794803619384766
    10. '_' → logprob: -11.044803619384766

Token 305: ' ->' (ID: 2747)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.0160959605127573
    2. ' ->' → logprob: -4.641096115112305
    3. ':' → logprob: -5.766096115112305
    4. '(' → logprob: -6.516096115112305
    5. '->' → logprob: -6.766096115112305
    6. '   ' → logprob: -8.141096115112305
    7. 'self' → logprob: -9.516096115112305
    8. '       ' → logprob: -9.641096115112305
    9. ')' → logprob: -9.891096115112305
    10. ':self' → logprob: -11.141096115112305

Token 306: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.034196749329566956
    2. ' int' → logprob: -3.4091968536376953
    3. 'List' → logprob: -7.909196853637695
    4. 'Tuple' → logprob: -9.784196853637695
    5. 'Iterator' → logprob: -10.034196853637695
    6. ' List' → logprob: -10.284196853637695
    7. 'Dict' → logprob: -10.909196853637695
    8. 'Optional' → logprob: -11.284196853637695
    9. ' Tuple' → logprob: -12.409196853637695
    10. 'None' → logprob: -12.784196853637695

Token 307: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0005165747134014964
    2. ':
' → logprob: -8.000516891479492
    3. '       ' → logprob: -9.375516891479492
    4. '):' → logprob: -9.750516891479492
    5. '():' → logprob: -10.625516891479492
    6. '   ' → logprob: -11.500516891479492
    7. '(self' → logprob: -14.375516891479492
    8. ':def' → logprob: -14.375516891479492
    9. 'self' → logprob: -14.500516891479492
    10. '):
' → logprob: -14.750516891479492

Token 308: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00034654809860512614
    2. '@' → logprob: -8.000346183776855
    3. '   ' → logprob: -13.250346183776855
    4. ' @' → logprob: -13.250346183776855
    5. '```' → logprob: -13.250346183776855
    6. 'self' → logprob: -13.875346183776855
    7. 'from' → logprob: -13.875346183776855
    8. 'return' → logprob: -14.000346183776855
    9. '           ' → logprob: -14.375346183776855
    10. '        
' → logprob: -14.750346183776855

Token 309: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3138088583946228
    2. '@' → logprob: -1.3138089179992676
    3. 'return' → logprob: -8.43880844116211
    4. 'self' → logprob: -8.43880844116211
    5. ' @' → logprob: -9.81380844116211
    6. 'max' → logprob: -12.06380844116211
    7. 'cache' → logprob: -12.18880844116211
    8. 'initial' → logprob: -12.31380844116211
    9. 'dp' → logprob: -12.31380844116211
    10. '@return' → logprob: -12.31380844116211

Token 310: ' Since' (ID: 12265)
  Prédit: '@'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '@' → logprob: -0.0007872331188991666
    2. 'return' → logprob: -7.750787258148193
    3. '       ' → logprob: -8.625786781311035
    4. 'from' → logprob: -9.500786781311035
    5. 'cache' → logprob: -10.000786781311035
    6. '@return' → logprob: -10.375786781311035
    7. 'self' → logprob: -11.750786781311035
    8. '@n' → logprob: -12.750786781311035
    9. '@param' → logprob: -13.250786781311035
    10. 'max' → logprob: -13.250786781311035

Token 311: ' multiple' (ID: 7598)
  Prédit: '@'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '@' → logprob: -0.02385549061000347
    2. 'self' → logprob: -4.398855686187744
    3. ' @' → logprob: -5.523855686187744
    4. '       ' → logprob: -5.648855686187744
    5. ' self' → logprob: -6.273855686187744
    6. '@param' → logprob: -6.773855686187744
    7. '@dat' → logprob: -9.023855209350586
    8. '...' → logprob: -9.273855209350586
    9. '
' → logprob: -9.523855209350586
    10. '@return' → logprob: -9.648855209350586

Token 312: ' lives' (ID: 8354)
  Prédit: '_live'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_live' → logprob: -0.03875470533967018
    2. '   ' → logprob: -4.788754940032959
    3. '@' → logprob: -5.288754940032959
    4. 'live' → logprob: -5.538754940032959
    5. 'Live' → logprob: -5.663754940032959
    6. ' live' → logprob: -6.038754940032959
    7. '_visit' → logprob: -6.288754940032959
    8. '_cache' → logprob: -6.288754940032959
    9. '       ' → logprob: -6.538754940032959
    10. 'def' → logprob: -6.788754940032959

Token 313: ' per' (ID: 777)
  Prédit: '_possible'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_possible' → logprob: -1.574181318283081
    2. '   ' → logprob: -1.824181318283081
    3. ' are' → logprob: -2.574181318283081
    4. '_' → logprob: -2.699181318283081
    5. 'def' → logprob: -2.699181318283081
    6. '_live' → logprob: -2.949181318283081
    7. '_schedule' → logprob: -3.324181318283081
    8. '_per' → logprob: -3.449181318283081
    9. ' ' → logprob: -3.574181318283081
    10. ',' → logprob: -3.574181318283081

Token 314: ' day' (ID: 2163)
  Prédit: 'day'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'day' → logprob: -0.2835603654384613
    2. ' day' → logprob: -1.4085603952407837
    3. 'region' → logprob: -6.533560276031494
    4. 'def' → logprob: -7.408560276031494
    5. ' region' → logprob: -8.783560752868652
    6. ' def' → logprob: -10.408560752868652
    7. 'schedule' → logprob: -10.533560752868652
    8. ' schedule' → logprob: -10.908560752868652
    9. ' ' → logprob: -11.033560752868652
    10. '_day' → logprob: -11.158560752868652

Token 315: ' must' (ID: 2804)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5295416116714478
    2. ',' → logprob: -1.7795416116714478
    3. ' are' → logprob: -1.9045416116714478
    4. '   ' → logprob: -3.654541492462158
    5. ' can' → logprob: -3.654541492462158
    6. ' is' → logprob: -4.904541492462158
    7. 'are' → logprob: -5.029541492462158
    8. 'def' → logprob: -5.654541492462158
    9. ' possible' → logprob: -5.779541492462158
    10. '        
' → logprob: -5.904541492462158

Token 316: ' be' (ID: 413)
  Prédit: ' not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.9408446550369263
    2. 'not' → logprob: -1.1908446550369263
    3. ' be' → logprob: -1.6908446550369263
    4. 'be' → logprob: -2.1908445358276367
    5. '   ' → logprob: -6.065844535827637
    6. '       ' → logprob: -6.565844535827637
    7. 'continue' → logprob: -6.565844535827637
    8. 'start' → logprob: -6.690844535827637
    9. ' ' → logprob: -7.440844535827637
    10. ' start' → logprob: -8.315844535827637

Token 317: ' adjacent' (ID: 39069)
  Prédit: 'at'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'at' → logprob: -1.3367888927459717
    2. ' at' → logprob: -1.9617888927459717
    3. 'scheduled' → logprob: -2.3367888927459717
    4. '>' → logprob: -2.5867888927459717
    5. 'consider' → logprob: -2.8367888927459717
    6. 'planned' → logprob: -3.0867888927459717
    7. 'done' → logprob: -3.4617888927459717
    8. ' scheduled' → logprob: -3.8367888927459717
    9. 'started' → logprob: -3.8367888927459717
    10. 'used' → logprob: -3.9617888927459717

Token 318: ' regions' (ID: 21043)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.1507554054260254
    2. ' and' → logprob: -3.4007554054260254
    3. 'def' → logprob: -3.5257554054260254
    4. ' to' → logprob: -3.9007554054260254
    5. 'regions' → logprob: -4.275755405426025
    6. 'and' → logprob: -4.400755405426025
    7. ',
' → logprob: -5.150755405426025
    8. '       ' → logprob: -5.150755405426025
    9. ' regions' → logprob: -5.275755405426025
    10. ' def' → logprob: -5.900755405426025

Token 319: ' and' (ID: 326)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.11277619004249573
    2. '       ' → logprob: -2.362776279449463
    3. ',
' → logprob: -5.112776279449463
    4. ' ,' → logprob: -6.237776279449463
    5. ' and' → logprob: -6.487776279449463
    6. ':' → logprob: -7.487776279449463
    7. 'def' → logprob: -7.487776279449463
    8. ' to' → logprob: -8.237775802612305
    9. '...' → logprob: -8.237775802612305
    10. '.' → logprob: -8.862775802612305

Token 320: ' cannot' (ID: 6284)
  Prédit: 'visited'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'visited' → logprob: -1.8820087909698486
    2. '       ' → logprob: -2.2570087909698486
    3. ' no' → logprob: -2.6320087909698486
    4. 'no' → logprob: -3.0070087909698486
    5. '   ' → logprob: -3.1320087909698486
    6. '#' → logprob: -3.2570087909698486
    7. 'cannot' → logprob: -3.3820087909698486
    8. ' the' → logprob: -3.5070087909698486
    9. ' visited' → logprob: -3.6320087909698486
    10. 'not' → logprob: -3.7570087909698486

Token 321: ' repeat' (ID: 22962)
  Prédit: ' be'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' be' → logprob: -0.8924176096916199
    2. ' repeat' → logprob: -1.0174176692962646
    3. 'repeat' → logprob: -3.1424176692962646
    4. ' overlap' → logprob: -3.2674176692962646
    5. ' revisit' → logprob: -3.2674176692962646
    6. ' have' → logprob: -3.3924176692962646
    7. ' start' → logprob: -3.6424176692962646
    8. ' exceed' → logprob: -4.0174174308776855
    9. ' visit' → logprob: -5.0174174308776855
    10. ' continue' → logprob: -5.3924174308776855

Token 322: ' same' (ID: 2684)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.13574136793613434
    2. ' ,' → logprob: -3.0107414722442627
    3. ' visits' → logprob: -4.135741233825684
    4. ',
' → logprob: -4.385741233825684
    5. ' to' → logprob: -5.260741233825684
    6. ' visited' → logprob: -5.385741233825684
    7. '   ' → logprob: -5.385741233825684
    8. '       ' → logprob: -5.635741233825684
    9. ' ' → logprob: -5.885741233825684
    10. '    ' → logprob: -5.885741233825684

Token 323: ' region' (ID: 7967)
  Prédit: ' day'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' day' → logprob: -0.27848508954048157
    2. ' region' → logprob: -2.278485059738159
    3. 'day' → logprob: -3.153485059738159
    4. 'region' → logprob: -3.278485059738159
    5. ' regions' → logprob: -3.778485059738159
    6. '_day' → logprob: -4.153485298156738
    7. 'regions' → logprob: -5.278485298156738
    8. ' ' → logprob: -5.528485298156738
    9. '_region' → logprob: -5.653485298156738
    10. '_regions' → logprob: -5.778485298156738

Token 324: ' same' (ID: 2684)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.46622949838638306
    2. ' within' → logprob: -1.5912294387817383
    3. ' in' → logprob: -2.5912294387817383
    4. 'within' → logprob: -3.5912294387817383
    5. '       ' → logprob: -3.9662294387817383
    6. ',
' → logprob: -4.466229438781738
    7. ' on' → logprob: -4.716229438781738
    8. 'in' → logprob: -4.966229438781738
    9. 'visited' → logprob: -4.966229438781738
    10. 'def' → logprob: -5.841229438781738

Token 325: ' day' (ID: 2163)
  Prédit: ' day'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' day' → logprob: -0.38781294226646423
    2. 'day' → logprob: -1.1378129720687866
    3. '_day' → logprob: -7.512813091278076
    4. 'token' → logprob: -8.762812614440918
    5. ' token' → logprob: -9.762812614440918
    6. 'region' → logprob: -10.012812614440918
    7. ' ' → logprob: -10.512812614440918
    8. ' line' → logprob: -10.762812614440918
    9. 'line' → logprob: -10.762812614440918
    10. ' region' → logprob: -10.887812614440918

Token 326: ',
' (ID: 412)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.13795827329158783
    2. '       ' → logprob: -2.137958288192749
    3. ',
' → logprob: -4.63795804977417
    4. '        
' → logprob: -7.88795804977417
    5. ' ,' → logprob: -8.512958526611328
    6. '
' → logprob: -8.762958526611328
    7. ':' → logprob: -9.262958526611328
    8. 'def' → logprob: -9.387958526611328
    9. '.' → logprob: -9.387958526611328
    10. ' at' → logprob: -9.637958526611328

Token 327: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.000566137779969722
    2. ' self' → logprob: -8.500566482543945
    3. ' we' → logprob: -9.125566482543945
    4. '#' → logprob: -9.875566482543945
    5. 'self' → logprob: -10.125566482543945
    6. ' return' → logprob: -11.000566482543945
    7. '   ' → logprob: -11.125566482543945
    8. 'def' → logprob: -11.125566482543945
    9. ' the' → logprob: -11.250566482543945
    10. '      ' → logprob: -11.375566482543945

Token 328: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.09530344605445862
    2. '#' (adapté à ' #') → logprob: -3.345303535461426
    3. ' #' → logprob: -3.970303535461426
    4. ' we' → logprob: -4.345303535461426
    5. ' the' → logprob: -5.220303535461426
    6. ' result' → logprob: -5.720303535461426
    7. ' return' → logprob: -6.095303535461426
    8. 'we' → logprob: -6.345303535461426
    9. '
' → logprob: -6.470303535461426
    10. 'result' → logprob: -7.095303535461426

Token 329: ' we' (ID: 581)
  Prédit: '@'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '@' → logprob: -0.8063352704048157
    2. '       ' → logprob: -1.056335210800171
    3. '#' → logprob: -2.556335210800171
    4. '
' → logprob: -3.181335210800171
    5. 'cache' → logprob: -3.431335210800171
    6. 'return' → logprob: -4.30633544921875
    7. ' @' → logprob: -4.55633544921875
    8. 'initial' → logprob: -5.30633544921875
    9. ' cache' → logprob: -5.68133544921875
    10. ' return' → logprob: -5.80633544921875

Token 330: ' need' (ID: 1309)
  Prédit: ' def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' def' → logprob: -1.7656245231628418
    2. ' start' → logprob: -1.8906245231628418
    3. ' use' → logprob: -1.8906245231628418
    4. '       ' → logprob: -2.015624523162842
    5. ' will' → logprob: -2.640624523162842
    6. '   ' → logprob: -2.640624523162842
    7. ' need' → logprob: -3.015624523162842
    8. ' can' → logprob: -3.140624523162842
    9. 'def' → logprob: -3.265624523162842
    10. '    ' → logprob: -3.640624523162842

Token 331: ' to' (ID: 316)
  Prédit: ' to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' to' → logprob: -0.05763782560825348
    2. 'to' → logprob: -2.932637929916382
    3. '    ' → logprob: -6.432637691497803
    4. '        ' → logprob: -7.682637691497803
    5. '       ' → logprob: -8.307638168334961
    6. 'def' → logprob: -8.932638168334961
    7. ' ' → logprob: -9.307638168334961
    8. ' a' → logprob: -9.682638168334961
    9. '   ' → logprob: -9.682638168334961
    10. '  ' → logprob: -11.682638168334961

Token 332: ' consider' (ID: 3331)
  Prédit: 'expl'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'expl' → logprob: -0.8865000605583191
    2. 'define' → logprob: -2.011500120162964
    3. ' define' → logprob: -3.011500120162964
    4. ' explore' → logprob: -3.011500120162964
    5. 'implement' → logprob: -3.011500120162964
    6. ' use' → logprob: -3.261500120162964
    7. 'find' → logprob: -3.511500120162964
    8. 'def' → logprob: -3.636500120162964
    9. 'consider' → logprob: -3.761500120162964
    10. ' implement' → logprob: -3.761500120162964

Token 333: ' all' (ID: 722)
  Prédit: ' all'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' all' → logprob: -0.5280187129974365
    2. 'all' → logprob: -2.1530187129974365
    3. ' scheduling' → logprob: -2.9030187129974365
    4. ' self' → logprob: -3.1530187129974365
    5. ' sequences' → logprob: -3.5280187129974365
    6. 'self' → logprob: -3.9030187129974365
    7. ' the' → logprob: -4.028018951416016
    8. ' visiting' → logprob: -4.403018951416016
    9. ' schedules' → logprob: -4.403018951416016
    10. ' states' → logprob: -4.653018951416016

Token 334: ' sequences' (ID: 45665)
  Prédit: ' possible'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' possible' → logprob: -0.5723352432250977
    2. ' possibilities' → logprob: -2.3223352432250977
    3. ' valid' → logprob: -2.4473352432250977
    4. 'possible' → logprob: -2.6973352432250977
    5. ' sequences' → logprob: -2.9473352432250977
    6. ' days' → logprob: -3.8223352432250977
    7. ' combinations' → logprob: -4.072335243225098
    8. ' states' → logprob: -4.197335243225098
    9. ' schedules' → logprob: -4.447335243225098
    10. ' regions' → logprob: -4.447335243225098

Token 335: ' of' (ID: 328)
  Prédit: ' of'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' of' → logprob: -0.1969923973083496
    2. '       ' → logprob: -1.9469923973083496
    3. '<|end|>' → logprob: -4.32199239730835
    4. 'def' → logprob: -5.44699239730835
    5. '        ' → logprob: -5.57199239730835
    6. '   ' → logprob: -6.19699239730835
    7. ' that' → logprob: -6.32199239730835
    8. '<|end|>' → logprob: -6.44699239730835
    9. ',' → logprob: -6.57199239730835
    10. 'of' → logprob: -6.69699239730835

Token 336: ' regions' (ID: 21043)
  Prédit: ' regions'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' regions' → logprob: -0.9204740524291992
    2. 'regions' → logprob: -1.0454740524291992
    3. 'adj' → logprob: -2.920474052429199
    4. ' adjacent' → logprob: -2.920474052429199
    5. ' visits' → logprob: -3.045474052429199
    6. ' live' → logprob: -3.795474052429199
    7. 'live' → logprob: -4.170474052429199
    8. ' moves' → logprob: -4.170474052429199
    9. 'moves' → logprob: -5.045474052429199
    10. ' contiguous' → logprob: -5.170474052429199

Token 337: ' (' (ID: 350)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.34320735931396484
    2. '       ' → logprob: -1.9682073593139648
    3. ' on' → logprob: -3.468207359313965
    4. ' visited' → logprob: -3.843207359313965
    5. ' to' → logprob: -3.968207359313965
    6. ' that' → logprob: -4.093207359313965
    7. 'for' → logprob: -4.093207359313965
    8. ' per' → logprob: -4.468207359313965
    9. ' in' → logprob: -5.343207359313965
    10. ',' → logprob: -5.468207359313965

Token 338: 'sets' (ID: 7234)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.42021963000297546
    2. 'visited' → logprob: -1.9202196598052979
    3. ' visited' → logprob: -3.295219659805298
    4. ' for' → logprob: -3.795219659805298
    5. ' )' → logprob: -4.045219421386719
    6. ' per' → logprob: -4.420219421386719
    7. 'for' → logprob: -4.545219421386719
    8. 'selected' → logprob: -4.670219421386719
    9. ' that' → logprob: -4.795219421386719
    10. ' to' → logprob: -5.045219421386719

Token 339: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.3792073726654053
    2. ' )' → logprob: -1.2542073726654053
    3. ' of' → logprob: -4.004207611083984
    4. ',' → logprob: -5.129207611083984
    5. ' that' → logprob: -6.254207611083984
    6. '),' → logprob: -7.629207611083984
    7. ' ,' → logprob: -7.754207611083984
    8. ' to' → logprob: -7.879207611083984
    9. 'of' → logprob: -8.129207611083984
    10. ' or' → logprob: -8.254207611083984

Token 340: ' per' (ID: 777)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.542143702507019
    2. ',' → logprob: -1.792143702507019
    3. ' for' → logprob: -3.1671438217163086
    4. ' that' → logprob: -3.1671438217163086
    5. ' to' → logprob: -3.2921438217163086
    6. '        
' → logprob: -3.6671438217163086
    7. '<|end|>' → logprob: -4.042143821716309
    8. ' of' → logprob: -4.417143821716309
    9. '        ' → logprob: -4.542143821716309
    10. ' with' → logprob: -4.542143821716309

Token 341: ' day' (ID: 2163)
  Prédit: ' day'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' day' → logprob: -0.12697777152061462
    2. 'day' → logprob: -2.1269776821136475
    3. ' ' → logprob: -11.126977920532227
    4. 'def' → logprob: -11.751977920532227
    5. '<|end|>' → logprob: -12.001977920532227
    6. '_day' → logprob: -12.751977920532227
    7. '<|end|>' → logprob: -13.126977920532227
    8. ' days' → logprob: -13.251977920532227
    9. '(day' → logprob: -13.376977920532227
    10. 'd' → logprob: -13.501977920532227

Token 342: ' with' (ID: 483)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6136117577552795
    2. '
' → logprob: -1.6136116981506348
    3. ',' → logprob: -1.7386116981506348
    4. '        
' → logprob: -3.4886116981506348
    5. ',
' → logprob: -4.363611698150635
    6. ' with' → logprob: -4.863611698150635
    7. '.' → logprob: -5.113611698150635
    8. ' that' → logprob: -5.238611698150635
    9. '<|end|>' → logprob: -5.238611698150635
    10. ' and' → logprob: -5.238611698150635

Token 343: ' adjacency' (ID: 177015)
  Prédit: 'possible'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'possible' → logprob: -1.0005465745925903
    2. 'adj' → logprob: -2.125546455383301
    3. 'def' → logprob: -2.750546455383301
    4. 'the' → logprob: -3.125546455383301
    5. 'their' → logprob: -3.125546455383301
    6. 'length' → logprob: -3.500546455383301
    7. 'no' → logprob: -3.625546455383301
    8. 'valid' → logprob: -3.625546455383301
    9. 'vary' → logprob: -3.875546455383301
    10. 'live' → logprob: -4.125546455383301

Token 344: ',
' (ID: 412)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.6842394471168518
    2. ' constraints' → logprob: -1.934239387512207
    3. ' and' → logprob: -2.059239387512207
    4. '.' → logprob: -2.934239387512207
    5. ',
' → logprob: -3.309239387512207
    6. 'def' → logprob: -3.434239387512207
    7. 'and' → logprob: -3.559239387512207
    8. ' that' → logprob: -4.684239387512207
    9. '       ' → logprob: -4.809239387512207
    10. '
' → logprob: -4.934239387512207

Token 345: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.19649790227413177
    2. ' and' → logprob: -1.821497917175293
    3. 'and' → logprob: -4.821497917175293
    4. '#' → logprob: -6.196497917175293
    5. ' then' → logprob: -6.571497917175293
    6. ' tokens' → logprob: -6.946497917175293
    7. ' with' → logprob: -7.446497917175293
    8. 'def' → logprob: -7.821497917175293
    9. '        ' → logprob: -7.946497917175293
    10. ' considering' → logprob: -8.196497917175293

Token 346: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6165521740913391
    2. ' and' → logprob: -0.9915521740913391
    3. 'and' → logprob: -3.3665521144866943
    4. '#' (adapté à ' #') → logprob: -5.241552352905273
    5. ' self' → logprob: -5.366552352905273
    6. 'def' → logprob: -5.366552352905273
    7. 'self' → logprob: -5.616552352905273
    8. ' but' → logprob: -5.991552352905273
    9. ' starting' → logprob: -5.991552352905273
    10. ' tokens' → logprob: -5.991552352905273

Token 347: ' but' (ID: 889)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.38339367508888245
    2. 'and' → logprob: -1.75839364528656
    3. ' and' → logprob: -3.0083937644958496
    4. '#' → logprob: -3.2583937644958496
    5. 'starting' → logprob: -4.50839376449585
    6. 'def' → logprob: -4.88339376449585
    7. 'but' → logprob: -5.38339376449585
    8. '@' → logprob: -5.38339376449585
    9. 'from' → logprob: -5.38339376449585
    10. 'with' → logprob: -5.50839376449585

Token 348: ' this' (ID: 495)
  Prédit: ' the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' the' → logprob: -0.7395403981208801
    2. ' we' → logprob: -1.3645403385162354
    3. ' given' → logprob: -2.9895403385162354
    4. ' only' → logprob: -3.3645403385162354
    5. ' continue' → logprob: -3.6145403385162354
    6. '       ' → logprob: -3.8645403385162354
    7. ' for' → logprob: -4.2395405769348145
    8. ' self' → logprob: -4.7395405769348145
    9. ' since' → logprob: -4.7395405769348145
    10. 'the' → logprob: -4.8645405769348145

Token 349: ' would' (ID: 1481)
  Prédit: ' is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.37078914046287537
    2. 'is' → logprob: -2.745789051055908
    3. 'def' → logprob: -2.870789051055908
    4. ' will' → logprob: -3.370789051055908
    5. ' code' → logprob: -3.870789051055908
    6. ' line' → logprob: -3.995789051055908
    7. '   ' → logprob: -4.120789051055908
    8. ' def' → logprob: -4.495789051055908
    9. '#' → logprob: -4.745789051055908
    10. ' can' → logprob: -4.870789051055908

Token 350: ' be' (ID: 413)
  Prédit: ' be'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' be' → logprob: -0.16620832681655884
    2. 'be' → logprob: -2.291208267211914
    3. ' explode' → logprob: -4.666208267211914
    4. ' exceed' → logprob: -4.791208267211914
    5. 'explode' → logprob: -4.916208267211914
    6. 'ex' → logprob: -5.291208267211914
    7. ' require' → logprob: -5.291208267211914
    8. ' quickly' → logprob: -5.541208267211914
    9. ' lead' → logprob: -5.916208267211914
    10. ' grow' → logprob: -6.916208267211914

Token 351: ' huge' (ID: 9560)
  Prédit: ' too'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' too' → logprob: -0.7670357823371887
    2. ' very' → logprob: -1.767035722732544
    3. ' computational' → logprob: -1.892035722732544
    4. 'too' → logprob: -2.392035722732544
    5. 'ex' → logprob: -3.767035722732544
    6. ' extremely' → logprob: -3.767035722732544
    7. ' exponential' → logprob: -3.767035722732544
    8. 'very' → logprob: -4.142035961151123
    9. ' expensive' → logprob: -4.892035961151123
    10. ' infe' → logprob: -5.392035961151123

Token 352: '.
' (ID: 558)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.3451232314109802
    2. '.' → logprob: -2.220123291015625
    3. '       ' → logprob: -2.220123291015625
    4. '
' → logprob: -3.095123291015625
    5. ',
' → logprob: -4.095123291015625
    6. '<|end|>' → logprob: -5.720123291015625
    7. '<|end|>' → logprob: -6.220123291015625
    8. '.
' → logprob: -6.345123291015625
    9. '...' → logprob: -6.470123291015625
    10. '        
' → logprob: -6.970123291015625

Token 353: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.05931559577584267
    2. '        
' → logprob: -3.1843156814575195
    3. '        ' → logprob: -4.6843156814575195
    4. ' ' → logprob: -5.9343156814575195
    5. ' 
' → logprob: -6.1843156814575195
    6. '    ' → logprob: -7.6843156814575195
    7. ',' → logprob: -7.9343156814575195
    8. '<|end|>' → logprob: -8.18431568145752
    9. '
' → logprob: -8.68431568145752
    10. '         
' → logprob: -8.93431568145752

Token 354: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0072957901284098625
    2. '#' (adapté à ' #') → logprob: -5.757295608520508
    3. '@' → logprob: -6.757295608520508
    4. ' @' → logprob: -7.007295608520508
    5. '        
' → logprob: -7.007295608520508
    6. '
' → logprob: -8.382295608520508
    7. 'return' → logprob: -8.632295608520508
    8. 'Let's' → logprob: -8.632295608520508
    9. ' return' → logprob: -8.882295608520508
    10. ' #' → logprob: -9.632295608520508

Token 355: ' Instead' (ID: 21050)
  Prédit: '@'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '@' → logprob: -0.40046265721321106
    2. '       ' → logprob: -1.2754626274108887
    3. '#' → logprob: -3.4004626274108887
    4. ' @' → logprob: -5.275462627410889
    5. '
' → logprob: -5.525462627410889
    6. 'return' → logprob: -5.650462627410889
    7. 'We' → logprob: -7.150462627410889
    8. 'def' → logprob: -7.275462627410889
    9. '        
' → logprob: -7.275462627410889
    10. 'self' → logprob: -7.650462627410889

Token 356: ',' (ID: 11)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.47530990839004517
    2. ',' → logprob: -0.9753099083900452
    3. ' we' → logprob: -8.475310325622559
    4. 'def' → logprob: -8.600310325622559
    5. '        ' → logprob: -9.100310325622559
    6. ':' → logprob: -9.100310325622559
    7. '   ' → logprob: -9.225310325622559
    8. ',
' → logprob: -9.225310325622559
    9. ' def' → logprob: -9.225310325622559
    10. ' ,' → logprob: -9.725310325622559

Token 357: ' we' (ID: 581)
  Prédit: '@'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '@' → logprob: -0.3575151860713959
    2. '       ' → logprob: -1.7325152158737183
    3. 'we' → logprob: -3.1075150966644287
    4. ' @' → logprob: -3.8575150966644287
    5. '#' → logprob: -3.9825150966644287
    6. 'return' → logprob: -4.107515335083008
    7. 'def' → logprob: -4.482515335083008
    8. ' we' → logprob: -5.607515335083008
    9. 'self' → logprob: -5.732515335083008
    10. ' return' → logprob: -6.232515335083008

Token 358: ' consider' (ID: 3331)
  Prédit: ' def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' def' → logprob: -0.4253072440624237
    2. ' will' → logprob: -2.300307273864746
    3. 'def' → logprob: -2.300307273864746
    4. ''ll' → logprob: -2.925307273864746
    5. '   ' → logprob: -3.050307273864746
    6. ' use' → logprob: -3.925307273864746
    7. ' can' → logprob: -4.925307273864746
    8. ' proceed' → logprob: -5.175307273864746
    9. ' continue' → logprob: -5.800307273864746
    10. ' return' → logprob: -6.425307273864746

Token 359: ' combinations' (ID: 43835)
  Prédit: ' dynamic'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' dynamic' → logprob: -2.0184855461120605
    2. 'dp' → logprob: -2.2684855461120605
    3. ' single' → logprob: -2.2684855461120605
    4. ' dp' → logprob: -2.3934855461120605
    5. ' only' → logprob: -2.5184855461120605
    6. ' visiting' → logprob: -2.5184855461120605
    7. '@' → logprob: -3.1434855461120605
    8. 'def' → logprob: -3.3934855461120605
    9. 'single' → logprob: -3.3934855461120605
    10. 'only' → logprob: -4.0184855461120605

Token 360: ' encoded' (ID: 41096)
  Prédit: ' of'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' of' → logprob: -0.05088933929800987
    2. 'of' → logprob: -4.300889492034912
    3. '<|end|>' → logprob: -4.800889492034912
    4. ',' → logprob: -5.050889492034912
    5. '<|end|>' → logprob: -5.425889492034912
    6. ' and' → logprob: -5.550889492034912
    7. '       ' → logprob: -5.800889492034912
    8. ' that' → logprob: -5.925889492034912
    9. 'def' → logprob: -6.800889492034912
    10. '.' → logprob: -6.925889492034912

Token 361: ' as' (ID: 472)
  Prédit: ' as'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' as' → logprob: -0.07374503463506699
    2. 'as' → logprob: -2.948745012283325
    3. ' in' → logprob: -4.573745250701904
    4. 'in' → logprob: -4.823745250701904
    5. '_in' → logprob: -10.323744773864746
    6. ' into' → logprob: -10.448744773864746
    7. '_states' → logprob: -10.448744773864746
    8. 'bit' → logprob: -10.573744773864746
    9. '_as' → logprob: -10.698744773864746
    10. 's' → logprob: -10.698744773864746

Token 362: ' bit' (ID: 3546)
  Prédit: 'bit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bit' → logprob: -0.32024988532066345
    2. ' bit' → logprob: -1.3202499151229858
    3. ' integers' → logprob: -5.820250034332275
    4. 'bits' → logprob: -6.445250034332275
    5. 'inte' → logprob: -6.695250034332275
    6. ' bits' → logprob: -7.320250034332275
    7. 'int' → logprob: -7.945250034332275
    8. ' sets' → logprob: -10.445249557495117
    9. 'sets' → logprob: -10.695249557495117
    10. 'ints' → logprob: -11.570249557495117

Token 363: 'sets' (ID: 7234)
  Prédit: 'set'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'set' → logprob: -0.485311359167099
    2. 'sets' → logprob: -1.2353113889694214
    3. 'mask' → logprob: -2.610311269760132
    4. '_set' → logprob: -4.735311508178711
    5. '_mask' → logprob: -5.110311508178711
    6. 'm' → logprob: -5.735311508178711
    7. '_sets' → logprob: -6.985311508178711
    8. '_masks' → logprob: -7.110311508178711
    9. '_' → logprob: -9.110311508178711
    10. 's' → logprob: -9.235311508178711

Token 364: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.5318395495414734
    2. '.' → logprob: -2.031839609146118
    3. ':' → logprob: -2.531839609146118
    4. '       ' → logprob: -2.906839609146118
    5. '<|end|>' → logprob: -3.531839609146118
    6. '<|end|>' → logprob: -3.531839609146118
    7. ' of' → logprob: -3.906839609146118
    8. ' for' → logprob: -4.281839370727539
    9. '   ' → logprob: -4.406839370727539
    10. ' and' → logprob: -4.406839370727539

Token 365: ' but' (ID: 889)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5094732642173767
    2. ' and' → logprob: -1.0094733238220215
    3. 'and' → logprob: -4.8844733238220215
    4. ' so' → logprob: -5.5094733238220215
    5. ' def' → logprob: -5.6344733238220215
    6. 'def' → logprob: -5.7594733238220215
    7. ' representing' → logprob: -5.8844733238220215
    8. ' with' → logprob: -6.0094733238220215
    9. ' which' → logprob: -6.3844733238220215
    10. ' then' → logprob: -6.5094733238220215

Token 366: ' that' (ID: 484)
  Prédit: ' we'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' we' → logprob: -0.9533084630966187
    2. ' the' → logprob: -1.9533084630966187
    3. ' limit' → logprob: -2.703308582305908
    4. ' only' → logprob: -3.078308582305908
    5. ' due' → logprob: -3.203308582305908
    6. ' given' → logprob: -3.328308582305908
    7. ' def' → logprob: -3.578308582305908
    8. ' with' → logprob: -3.578308582305908
    9. ' for' → logprob: -4.078308582305908
    10. 'we' → logprob: -4.328308582305908

Token 367: ' too' (ID: 3101)
  Prédit: ' may'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' may' → logprob: -0.9508254528045654
    2. ' is' → logprob: -1.9508254528045654
    3. ' would' → logprob: -2.3258254528045654
    4. ' are' → logprob: -2.4508254528045654
    5. ' might' → logprob: -2.4508254528045654
    6. ' def' → logprob: -3.2008254528045654
    7. ' will' → logprob: -3.3258254528045654
    8. ' can' → logprob: -4.2008256912231445
    9. 'def' → logprob: -4.5758256912231445
    10. ' still' → logprob: -4.7008256912231445

Token 368: ' is' (ID: 382)
  Prédit: ' is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.33633455634117126
    2. ' would' → logprob: -1.9613345861434937
    3. ' will' → logprob: -2.836334466934204
    4. ' may' → logprob: -2.961334466934204
    5. ' might' → logprob: -4.586334705352783
    6. 'is' → logprob: -5.211334705352783
    7. 'would' → logprob: -5.336334705352783
    8. ' can' → logprob: -5.586334705352783
    9. ' could' → logprob: -6.086334705352783
    10. ' has' → logprob: -6.211334705352783

Token 369: ' large' (ID: 4410)
  Prédit: ' infe'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' infe' → logprob: -1.799004316329956
    2. ' not' → logprob: -1.924004316329956
    3. ' limited' → logprob: -1.924004316329956
    4. ' too' → logprob: -2.174004316329956
    5. ' expensive' → logprob: -2.549004316329956
    6. ' constrained' → logprob: -2.924004316329956
    7. ' exponential' → logprob: -3.049004316329956
    8. ' complex' → logprob: -3.424004316329956
    9. ' challenging' → logprob: -3.549004316329956
    10. ' impr' → logprob: -3.924004316329956

Token 370: '.
' (ID: 558)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.2488261461257935
    2. '.' → logprob: -1.3738261461257935
    3. '       ' → logprob: -1.3738261461257935
    4. '<|end|>' → logprob: -1.7488261461257935
    5. '<|end|>' → logprob: -4.248826026916504
    6. ',
' → logprob: -5.498826026916504
    7. '
' → logprob: -5.873826026916504
    8. ' and' → logprob: -5.873826026916504
    9. '...' → logprob: -6.248826026916504
    10. '.
' → logprob: -6.373826026916504

Token 371: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.013569574803113937
    2. '        
' → logprob: -4.888569355010986
    3. '<|end|>' → logprob: -5.888569355010986
    4. '
' → logprob: -6.263569355010986
    5. '<|end|>' → logprob: -7.763569355010986
    6. ',' → logprob: -8.388569831848145
    7. '#' → logprob: -9.513569831848145
    8. '    
' → logprob: -9.638569831848145
    9. '   ' → logprob: -9.763569831848145
    10. ' ' → logprob: -10.013569831848145

Token 372: ' #' (ID: 1069)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.5730735659599304
    2. '       ' → logprob: -1.0730736255645752
    3. '#' (adapté à ' #') → logprob: -3.448073625564575
    4. '        
' → logprob: -3.448073625564575
    5. ' 
' → logprob: -4.198073387145996
    6. '@' → logprob: -5.323073387145996
    7. '        ' → logprob: -6.573073387145996
    8. 'from' → logprob: -6.698073387145996
    9. 'def' → logprob: -6.823073387145996
    10. ' @' → logprob: -6.823073387145996

Token 373: ' To' (ID: 2514)
  Prédit: '@'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '@' → logprob: -0.2910395562648773
    2. '#' → logprob: -1.7910395860671997
    3. 'return' → logprob: -3.66603946685791
    4. 'from' → logprob: -4.16603946685791
    5. 'def' → logprob: -4.29103946685791
    6. '       ' → logprob: -4.79103946685791
    7. ' @' → logprob: -5.41603946685791
    8. 'cache' → logprob: -5.54103946685791
    9. 'max' → logprob: -5.66603946685791
    10. 'dp' → logprob: -5.91603946685791

Token 374: ' reduce' (ID: 10389)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.19117780029773712
    2. ' def' → logprob: -3.9411778450012207
    3. 'do' → logprob: -4.066177845001221
    4. 'expl' → logprob: -4.316177845001221
    5. 'implement' → logprob: -4.566177845001221
    6. 'continue' → logprob: -4.691177845001221
    7. 'handle' → logprob: -4.816177845001221
    8. 'o' → logprob: -4.816177845001221
    9. '#' → logprob: -5.066177845001221
    10. 'maximize' → logprob: -5.066177845001221

Token 375: ' complexity' (ID: 37588)
  Prédit: ' the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' the' → logprob: -0.3035387694835663
    2. 'state' → logprob: -2.9285387992858887
    3. ' memory' → logprob: -3.1785387992858887
    4. ' state' → logprob: -3.3035387992858887
    5. 'the' → logprob: -3.4285387992858887
    6. '   ' → logprob: -3.9285387992858887
    7. ' code' → logprob: -4.553538799285889
    8. ' space' → logprob: -4.553538799285889
    9. ' complexity' → logprob: -4.678538799285889
    10. '_' → logprob: -5.053538799285889

Token 376: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.01848820596933365
    2. '       ' → logprob: -4.01848840713501
    3. ' we' → logprob: -9.018487930297852
    4. '   ' → logprob: -9.768487930297852
    5. ',
' → logprob: -10.018487930297852
    6. 'we' → logprob: -10.268487930297852
    7. ' ,' → logprob: -10.768487930297852
    8. 'def' → logprob: -11.393487930297852
    9. '.' → logprob: -11.893487930297852
    10. ')' → logprob: -12.143487930297852

Token 377: ' we' (ID: 581)
  Prédit: '@'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '@' → logprob: -0.030420228838920593
    2. '       ' → logprob: -4.655420303344727
    3. 'return' → logprob: -5.155420303344727
    4. 'def' → logprob: -5.405420303344727
    5. '#' → logprob: -5.655420303344727
    6. 'self' → logprob: -5.905420303344727
    7. 'we' → logprob: -6.530420303344727
    8. 'from' → logprob: -7.530420303344727
    9. ' @' → logprob: -7.905420303344727
    10. '@return' → logprob: -7.905420303344727

Token 378: ' do' (ID: 621)
  Prédit: ' use'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' use' → logprob: -0.8318415284156799
    2. ' consider' → logprob: -2.206841468811035
    3. ' will' → logprob: -2.331841468811035
    4. ' can' → logprob: -2.456841468811035
    5. ' try' → logprob: -2.456841468811035
    6. ' proceed' → logprob: -3.081841468811035
    7. 'def' → logprob: -3.706841468811035
    8. ' def' → logprob: -4.081841468811035
    9. ' implement' → logprob: -4.331841468811035
    10. ' only' → logprob: -4.331841468811035

Token 379: ' a' (ID: 261)
  Prédit: ' not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.2813742160797119
    2. 'not' → logprob: -2.406374216079712
    3. ' a' → logprob: -3.531374216079712
    4. 'def' → logprob: -3.656374216079712
    5. ' dp' → logprob: -4.156373977661133
    6. 'n't' → logprob: -4.281373977661133
    7. ' def' → logprob: -4.281373977661133
    8. ' dynamic' → logprob: -4.656373977661133
    9. ' dfs' → logprob: -4.781373977661133
    10. ' the' → logprob: -5.281373977661133

Token 380: ' state' (ID: 2608)
  Prédit: ' dynamic'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' dynamic' → logprob: -1.6399399042129517
    2. 'p' → logprob: -1.8899399042129517
    3. 'dp' → logprob: -1.8899399042129517
    4. '@' → logprob: -2.764939785003662
    5. 'dynamic' → logprob: -2.889939785003662
    6. 'dfs' → logprob: -3.264939785003662
    7. 'def' → logprob: -3.514939785003662
    8. ' @' → logprob: -3.764939785003662
    9. 'd' → logprob: -3.764939785003662
    10. 'fs' → logprob: -4.139939785003662

Token 381: 'ful' (ID: 1500)
  Prédit: 'ful'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ful' → logprob: -0.7718591094017029
    2. ' space' → logprob: -1.6468591690063477
    3. '_space' → logprob: -2.8968591690063477
    4. '   ' → logprob: -3.0218591690063477
    5. '_' → logprob: -3.2718591690063477
    6. '-space' → logprob: -3.6468591690063477
    7. ' transition' → logprob: -3.8968591690063477
    8. ' ' → logprob: -4.021859169006348
    9. '-' → logprob: -4.396859169006348
    10. '_cache' → logprob: -4.396859169006348

Token 382: ' DP' (ID: 51992)
  Prédit: ' search'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' search' → logprob: -0.08791016042232513
    2. 'search' → logprob: -3.5879101753234863
    3. 'def' → logprob: -4.087910175323486
    4. ' approach' → logprob: -4.462910175323486
    5. 'dfs' → logprob: -4.962910175323486
    6. ' DFS' → logprob: -5.462910175323486
    7. ' recursion' → logprob: -5.587910175323486
    8. ' dynamic' → logprob: -5.587910175323486
    9. ' dfs' → logprob: -6.087910175323486
    10. 'dp' → logprob: -6.962910175323486

Token 383: ':
' (ID: 734)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3055986166000366
    2. '@' → logprob: -1.9305986166000366
    3. '   ' → logprob: -3.305598735809326
    4. ' with' → logprob: -3.680598735809326
    5. ' @' → logprob: -4.305598735809326
    6. ',' → logprob: -4.680598735809326
    7. '
' → logprob: -4.930598735809326
    8. ' and' → logprob: -5.430598735809326
    9. ' that' → logprob: -6.055598735809326
    10. 'with' → logprob: -6.180598735809326

Token 384: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0027468616608530283
    2. '@' → logprob: -6.502747058868408
    3. '        
' → logprob: -7.627747058868408
    4. ' @' → logprob: -8.00274658203125
    5. 'from' → logprob: -9.00274658203125
    6. '
' → logprob: -9.00274658203125
    7. '   ' → logprob: -9.37774658203125
    8. '```' → logprob: -10.87774658203125
    9. '           ' → logprob: -11.12774658203125
    10. ' from' → logprob: -11.50274658203125

Token 385: ' #' (ID: 1069)
  Prédit: '@'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '@' → logprob: -0.032744042575359344
    2. '       ' → logprob: -3.5327439308166504
    3. 'self' → logprob: -6.15774393081665
    4. 'from' → logprob: -7.90774393081665
    5. ' @' → logprob: -8.532744407653809
    6. 'cache' → logprob: -9.657744407653809
    7. 'pass' → logprob: -10.282744407653809
    8. 'return' → logprob: -10.532744407653809
    9. '   ' → logprob: -10.657744407653809
    10. 'dp' → logprob: -10.907744407653809

Token 386: ' State' (ID: 5388)
  Prédit: '@'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '@' → logprob: -0.03294326364994049
    2. '       ' → logprob: -3.6579432487487793
    3. ' @' → logprob: -5.657943248748779
    4. 'from' → logprob: -6.532943248748779
    5. '
' → logprob: -7.907943248748779
    6. '@return' → logprob: -8.657943725585938
    7. 'import' → logprob: -8.782943725585938
    8. '   ' → logprob: -8.782943725585938
    9. 'return' → logprob: -8.907943725585938
    10. 'def' → logprob: -9.032943725585938

Token 387: ':' (ID: 25)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.34889209270477295
    2. ':' → logprob: -1.348892092704773
    3. '=' → logprob: -3.5988922119140625
    4. ',' → logprob: -5.9738922119140625
    5. '   ' → logprob: -6.3488922119140625
    6. '<|end|>' → logprob: -7.3488922119140625
    7. ' ' → logprob: -7.4738922119140625
    8. '.' → logprob: -7.8488922119140625
    9. ' :' → logprob: -7.9738922119140625
    10. ')' → logprob: -8.223892211914062

Token 388: ' day' (ID: 2163)
  Prédit: 'Schedule'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Schedule' → logprob: -0.45248302817344666
    2. '(day' → logprob: -1.577483057975769
    3. ' Schedule' → logprob: -2.5774829387664795
    4. '(S' → logprob: -3.3274829387664795
    5. ' (' → logprob: -4.077483177185059
    6. ' day' → logprob: -4.577483177185059
    7. 'day' → logprob: -5.577483177185059
    8. '   ' → logprob: -5.702483177185059
    9. '(' → logprob: -6.077483177185059
    10. '       ' → logprob: -6.077483177185059

Token 389: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.007261350750923157
    2. '+' → logprob: -6.257261276245117
    3. ')' → logprob: -6.632261276245117
    4. '=' → logprob: -7.007261276245117
    5. ':' → logprob: -7.132261276245117
    6. '<|end|>' → logprob: -7.507261276245117
    7. '<|end|>' → logprob: -7.757261276245117
    8. '   ' → logprob: -7.757261276245117
    9. ' +' → logprob: -8.007261276245117
    10. ',
' → logprob: -8.757261276245117

Token 390: ' burden' (ID: 39183)
  Prédit: ' burden'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' burden' → logprob: -0.25315794348716736
    2. 'bur' → logprob: -1.5031579732894897
    3. ' burdens' → logprob: -7.128158092498779
    4. ' bur' → logprob: -8.753157615661621
    5. 'burst' → logprob: -9.753157615661621
    6. 'last' → logprob: -10.628157615661621
    7. '   ' → logprob: -10.878157615661621
    8. ' used' → logprob: -11.128157615661621
    9. ' ' → logprob: -11.128157615661621
    10. 'schedule' → logprob: -11.253157615661621

Token 391: ' used' (ID: 2061)
  Prédit: '_used'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_used' → logprob: -0.01297068502753973
    2. ',' → logprob: -4.512970447540283
    3. 'used' → logprob: -6.762970447540283
    4. '_' → logprob: -8.137970924377441
    5. '   ' → logprob: -8.137970924377441
    6. ' ,' → logprob: -10.262970924377441
    7. ')' → logprob: -10.637970924377441
    8. 'Used' → logprob: -10.762970924377441
    9. '_remaining' → logprob: -10.887970924377441
    10. '_USED' → logprob: -11.262970924377441

Token 392: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0061699324287474155
    2. '_used' → logprob: -5.50616979598999
    3. ')' → logprob: -7.13116979598999
    4. 'used' → logprob: -7.63116979598999
    5. ' ,' → logprob: -7.75616979598999
    6. '   ' → logprob: -8.756170272827148
    7. ',
' → logprob: -10.256170272827148
    8. '<|end|>' → logprob: -10.256170272827148
    9. '<|end|>' → logprob: -10.381170272827148
    10. '_,' → logprob: -11.256170272827148

Token 393: ' multi' (ID: 12151)
  Prédit: 'multi'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'multi' → logprob: -0.523282527923584
    2. ' multi' → logprob: -0.898282527923584
    3. 'last' → logprob: -10.148283004760742
    4. 'mult' → logprob: -10.523283004760742
    5. ' last' → logprob: -10.648283004760742
    6. '   ' → logprob: -11.648283004760742
    7. 'self' → logprob: -11.648283004760742
    8. ' ' → logprob: -11.773283004760742
    9. '...' → logprob: -12.148283004760742
    10. '
' → logprob: -12.648283004760742

Token 394: '-live' (ID: 154802)
  Prédit: '_live'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_live' → logprob: -5.080963092041202e-06
    2. '_multi' → logprob: -13.500004768371582
    3. '_' → logprob: -13.750004768371582
    4. 'live' → logprob: -14.000004768371582
    5. 'Live' → logprob: -15.375004768371582
    6. '_continue' → logprob: -15.375004768371582
    7. '_l' → logprob: -15.625004768371582
    8. '-live' → logprob: -15.750004768371582
    9. '_use' → logprob: -15.750004768371582
    10. '_day' → logprob: -15.750004768371582

Token 395: '-days' (ID: 163407)
  Prédit: '_days'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_days' → logprob: -0.00020389800192788243
    2. 'days' → logprob: -9.000204086303711
    3. 's' → logprob: -10.250204086303711
    4. ' _' → logprob: -11.500204086303711
    5. '```' → logprob: -11.750204086303711
    6. '_' → logprob: -12.250204086303711
    7. '   ' → logprob: -12.375204086303711
    8. ' days' → logprob: -12.375204086303711
    9. '_used' → logprob: -12.750204086303711
    10. '
' → logprob: -13.500204086303711

Token 396: ' used' (ID: 2061)
  Prédit: '_used'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_used' → logprob: -0.28554674983024597
    2. 'used' → logprob: -2.0355467796325684
    3. ',' → logprob: -2.1605467796325684
    4. ' used' → logprob: -6.285546779632568
    5. '   ' → logprob: -8.16054630279541
    6. ' ,' → logprob: -9.28554630279541
    7. '_USED' → logprob: -9.53554630279541
    8. ',
' → logprob: -10.78554630279541
    9. '_taken' → logprob: -10.78554630279541
    10. '_' → logprob: -10.91054630279541

Token 397: '
' (ID: 198)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0022565950639545918
    2. '       ' → logprob: -6.877256393432617
    3. ',
' → logprob: -7.502256393432617
    4. ' ,' → logprob: -7.627256393432617
    5. ')' → logprob: -9.377256393432617
    6. '   ' → logprob: -9.877256393432617
    7. '
' → logprob: -11.627256393432617
    8. '<|end|>' → logprob: -12.127256393432617
    9. ',state' → logprob: -12.377256393432617
    10. '...' → logprob: -12.627256393432617

Token 398: '       ' (ID: 309)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.05171322822570801
    2. '       ' → logprob: -3.051713228225708
    3. ' ,' → logprob: -6.801712989807129
    4. ')' → logprob: -7.426712989807129
    5. '<|end|>' → logprob: -8.051712989807129
    6. ',
' → logprob: -8.301712989807129
    7. '   ' → logprob: -8.426712989807129
    8. ':' → logprob: -8.551712989807129
    9. '        ' → logprob: -9.426712989807129
    10. '    ' → logprob: -9.801712989807129

Token 399: ' #' (ID: 1069)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.004671137779951096
    2. '       ' → logprob: -6.129671096801758
    3. ' ,' → logprob: -6.879671096801758
    4. ',
' → logprob: -7.004671096801758
    5. '#' (adapté à ' #') → logprob: -8.879671096801758
    6. '   ' → logprob: -9.379671096801758
    7. '
' → logprob: -9.504671096801758
    8. '<|end|>' → logprob: -9.754671096801758
    9. ')' → logprob: -10.254671096801758
    10. ' ' → logprob: -10.629671096801758

Token 400: ' Transition' (ID: 63887)
  Prédit: '@'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '@' → logprob: -1.1761630773544312
    2. '       ' → logprob: -1.4261630773544312
    3. ' @' → logprob: -2.0511631965637207
    4. '   ' → logprob: -2.3011631965637207
    5. 'def' → logprob: -2.6761631965637207
    6. 'cache' → logprob: -3.6761631965637207
    7. 'dp' → logprob: -3.8011631965637207
    8. ' def' → logprob: -4.051163196563721
    9. '
' → logprob: -4.301163196563721
    10. '#' → logprob: -4.426163196563721

Token 401: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.4054240882396698
    2. ' =' → logprob: -1.2804241180419922
    3. '=' → logprob: -3.780424118041992
    4. '_states' → logprob: -4.905424118041992
    5. 's' → logprob: -5.030424118041992
    6. ',' → logprob: -5.530424118041992
    7. '   ' → logprob: -5.905424118041992
    8. '(self' → logprob: -6.280424118041992
    9. 'self' → logprob: -6.405424118041992
    10. 'from' → logprob: -6.780424118041992

Token 402: ' For' (ID: 2214)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -1.3444633483886719
    2. ' result' → logprob: -1.4694633483886719
    3. ' def' → logprob: -1.9694633483886719
    4. 'def' → logprob: -2.469463348388672
    5. ' max' → logprob: -2.719463348388672
    6. 'max' → logprob: -3.094463348388672
    7. ' for' → logprob: -3.344463348388672
    8. ' best' → logprob: -3.969463348388672
    9. 'for' → logprob: -3.969463348388672
    10. ' res' → logprob: -4.094463348388672

Token 403: ' each' (ID: 2454)
  Prédit: ' day'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' day' → logprob: -0.29336345195770264
    2. ' region' → logprob: -2.043363571166992
    3. ' each' → logprob: -2.918363571166992
    4. ' next' → logprob: -3.668363571166992
    5. ' all' → logprob: -4.043363571166992
    6. 'day' → logprob: -4.543363571166992
    7. ' current' → logprob: -5.293363571166992
    8. ' regions' → logprob: -5.918363571166992
    9. 'region' → logprob: -6.168363571166992
    10. 'each' → logprob: -6.543363571166992

Token 404: ' subset' (ID: 58845)
  Prédit: ' region'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' region' → logprob: -1.0814650058746338
    2. ' day' → logprob: -1.3314650058746338
    3. ' next' → logprob: -1.8314650058746338
    4. 'region' → logprob: -2.331465005874634
    5. 'day' → logprob: -2.956465005874634
    6. ' possible' → logprob: -3.081465005874634
    7. 'possible' → logprob: -3.831465005874634
    8. 'next' → logprob: -4.331464767456055
    9. ' choice' → logprob: -6.956464767456055
    10. ' adjacent' → logprob: -7.331464767456055

Token 405: ' of' (ID: 328)
  Prédit: ' of'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' of' → logprob: -0.3525003492832184
    2. '<|end|>' → logprob: -1.727500319480896
    3. '<|end|>' → logprob: -2.3525004386901855
    4. ',' → logprob: -5.1025004386901855
    5. '_' → logprob: -5.7275004386901855
    6. '_regions' → logprob: -6.1025004386901855
    7. ' ,' → logprob: -6.1025004386901855
    8. ' ' → logprob: -6.1025004386901855
    9. ' (' → logprob: -6.4775004386901855
    10. 'of' → logprob: -6.6025004386901855

Token 406: ' regions' (ID: 21043)
  Prédit: 'regions'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'regions' → logprob: -0.3514684736728668
    2. ' regions' → logprob: -1.2264684438705444
    3. 'adj' → logprob: -5.976468563079834
    4. '{' → logprob: -9.101468086242676
    5. ' adjacent' → logprob: -9.726468086242676
    6. ' live' → logprob: -10.351468086242676
    7. ' {' → logprob: -10.351468086242676
    8. 'current' → logprob: -10.976468086242676
    9. ' the' → logprob: -10.976468086242676
    10. ' current' → logprob: -11.101468086242676

Token 407: ' on' (ID: 402)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -1.0413938760757446
    2. ',' → logprob: -1.1663938760757446
    3. ' in' → logprob: -1.9163938760757446
    4. ' visited' → logprob: -3.291393756866455
    5. ' for' → logprob: -3.416393756866455
    6. ' that' → logprob: -3.666393756866455
    7. ' ,' → logprob: -4.291393756866455
    8. ' (' → logprob: -4.416393756866455
    9. ' to' → logprob: -4.791393756866455
    10. ' on' → logprob: -4.916393756866455

Token 408: ' today's' (ID: 41482)
  Prédit: ' the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' the' → logprob: -1.1363850831985474
    2. ' current' → logprob: -1.5113850831985474
    3. ' that' → logprob: -2.011384963989258
    4. 'current' → logprob: -2.136384963989258
    5. 'the' → logprob: -2.261384963989258
    6. 'that' → logprob: -2.886384963989258
    7. ' day' → logprob: -4.011384963989258
    8. ' this' → logprob: -4.386384963989258
    9. 'this' → logprob: -4.886384963989258
    10. 'day' → logprob: -5.261384963989258

Token 409: ' live' (ID: 4561)
  Prédit: ' day'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' day' → logprob: -0.15407252311706543
    2. 'day' → logprob: -2.1540725231170654
    3. ' ' → logprob: -5.0290727615356445
    4. ' ,' → logprob: -5.9040727615356445
    5. ' live' → logprob: -6.0290727615356445
    6. '_day' → logprob: -6.1540727615356445
    7. ',' → logprob: -6.2790727615356445
    8. 'visited' → logprob: -6.2790727615356445
    9. 'live' → logprob: -6.7790727615356445
    10. ' schedule' → logprob: -6.9040727615356445

Token 410: ' (' (ID: 350)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.4006480574607849
    2. ' day' → logprob: -1.6506481170654297
    3. ' ,' → logprob: -3.6506481170654297
    4. 'day' → logprob: -3.6506481170654297
    5. '_day' → logprob: -3.9006481170654297
    6. '_days' → logprob: -4.40064811706543
    7. '   ' → logprob: -4.65064811706543
    8. '_,' → logprob: -4.90064811706543
    9. ' days' → logprob: -5.15064811706543
    10. '_' → logprob: -5.27564811706543

Token 411: '0' (ID: 15)
  Prédit: '),'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '),' → logprob: -0.1474081426858902
    2. ')' → logprob: -2.3974082469940186
    3. ' ),' → logprob: -3.5224082469940186
    4. 'self' → logprob: -5.1474080085754395
    5. ' )' → logprob: -5.7724080085754395
    6. ' day' → logprob: -6.3974080085754395
    7. 'day' → logprob: -6.7724080085754395
    8. '):
' → logprob: -7.2724080085754395
    9. ' the' → logprob: -7.3974080085754395
    10. ' self' → logprob: -7.5224080085754395

Token 412: ' or' (ID: 503)
  Prédit: '),'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '),' → logprob: -0.40479806065559387
    2. ',' → logprob: -1.9047980308532715
    3. ')' → logprob: -2.2797980308532715
    4. 'b' → logprob: -3.9047980308532715
    5. '<<' → logprob: -4.1547980308532715
    6. 'x' → logprob: -5.2797980308532715
    7. ' |' → logprob: -5.4047980308532715
    8. '       ' → logprob: -5.4047980308532715
    9. ' ),' → logprob: -5.4047980308532715
    10. '..' → logprob: -5.4047980308532715

Token 413: ' more' (ID: 945)
  Prédit: 'more'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'more' → logprob: -0.403981477022171
    2. '1' → logprob: -1.2789814472198486
    3. ' more' → logprob: -3.1539814472198486
    4. ' ' → logprob: -5.653981685638428
    5. ')' → logprob: -6.528981685638428
    6. '...' → logprob: -6.778981685638428
    7. 'none' → logprob: -7.028981685638428
    8. '>' → logprob: -7.403981685638428
    9. 'all' → logprob: -7.653981685638428
    10. 'bits' → logprob: -7.653981685638428

Token 414: ',' (ID: 11)
  Prédit: '),'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),' → logprob: -0.05907796323299408
    2. ')' → logprob: -3.4340779781341553
    3. ' ),' → logprob: -4.059077739715576
    4. ',' → logprob: -5.809077739715576
    5. ' regions' → logprob: -6.809077739715576
    6. ' )' → logprob: -7.184077739715576
    7. 'regions' → logprob: -7.309077739715576
    8. '):' → logprob: -8.184078216552734
    9. ' of' → logprob: -8.434078216552734
    10. '):
' → logprob: -8.559078216552734

Token 415: ' but' (ID: 889)
  Prédit: ' including'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' including' → logprob: -1.6023292541503906
    2. ')' → logprob: -1.7273292541503906
    3. '),' → logprob: -2.4773292541503906
    4. ' with' → logprob: -2.4773292541503906
    5. ' contiguous' → logprob: -2.7273292541503906
    6. ' but' → logprob: -2.8523292541503906
    7. ' possibly' → logprob: -2.9773292541503906
    8. ' not' → logprob: -3.6023292541503906
    9. ' considering' → logprob: -3.8523292541503906
    10. ' respecting' → logprob: -3.9773292541503906

Token 416: ' if' (ID: 538)
  Prédit: ' contiguous'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' contiguous' → logprob: -1.6041432619094849
    2. 'adj' → logprob: -2.1041431427001953
    3. ' not' → logprob: -2.2291431427001953
    4. ' at' → logprob: -2.2291431427001953
    5. ' only' → logprob: -2.4791431427001953
    6. ' adjacent' → logprob: -2.8541431427001953
    7. ' with' → logprob: -3.6041431427001953
    8. '   ' → logprob: -3.6041431427001953
    9. ' must' → logprob: -3.7291431427001953
    10. ')' → logprob: -4.104143142700195

Token 417: ' more' (ID: 945)
  Prédit: ' day'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' day' → logprob: -1.2775404453277588
    2. 'day' → logprob: -1.9025404453277588
    3. ' multi' → logprob: -2.027540445327759
    4. 'multi' → logprob: -2.152540445327759
    5. ' not' → logprob: -2.527540445327759
    6. 'subset' → logprob: -3.152540445327759
    7. ' subset' → logprob: -3.402540445327759
    8. 'not' → logprob: -3.652540445327759
    9. ' empty' → logprob: -3.902540445327759
    10. '>' → logprob: -4.02754020690918

Token 418: ' than' (ID: 1572)
  Prédit: ' than'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' than' → logprob: -0.015387294813990593
    2. 'than' → logprob: -4.390387058258057
    3. '>' → logprob: -6.765387058258057
    4. ' >' → logprob: -7.515387058258057
    5. '_than' → logprob: -7.765387058258057
    6. ')' → logprob: -7.765387058258057
    7. '),' → logprob: -9.015387535095215
    8. '==' → logprob: -9.765387535095215
    9. '=' → logprob: -10.390387535095215
    10. ')>' → logprob: -10.390387535095215

Token 419: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.007714990060776472
    2. '0' → logprob: -5.632715225219727
    3. ' ' → logprob: -6.257715225219727
    4. 'one' → logprob: -6.757715225219727
    5. ' one' → logprob: -6.882715225219727
    6. 'zero' → logprob: -14.132715225219727
    7. '
' → logprob: -14.257715225219727
    8. 'One' → logprob: -14.257715225219727
    9. '=' → logprob: -14.507715225219727
    10. '   ' → logprob: -15.007715225219727

Token 420: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0501672700047493
    2. '0' → logprob: -3.0501673221588135
    3. 'one' → logprob: -6.675167083740234
    4. ' ' → logprob: -8.425167083740234
    5. ' one' → logprob: -9.300167083740234
    6. 'zero' → logprob: -12.175167083740234
    7. '
' → logprob: -15.425167083740234
    8. '   ' → logprob: -15.675167083740234
    9. '=' → logprob: -15.675167083740234
    10. 'One' → logprob: -16.050167083740234

Token 421: ' then' (ID: 1815)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -1.1129132509231567
    2. '),' → logprob: -1.1129132509231567
    3. ')' → logprob: -2.112913131713867
    4. ' ),' → logprob: -2.237913131713867
    5. ' regions' → logprob: -3.362913131713867
    6. ' ,' → logprob: -3.362913131713867
    7. ' )' → logprob: -4.112913131713867
    8. '):' → logprob: -4.987913131713867
    9. ' bits' → logprob: -5.112913131713867
    10. ' of' → logprob: -5.862913131713867

Token 422: ' adjacency' (ID: 177015)
  Prédit: ' all'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' all' → logprob: -0.44995108246803284
    2. ' they' → logprob: -1.6999510526657104
    3. 'they' → logprob: -3.074951171875
    4. 'adj' → logprob: -3.199951171875
    5. ' regions' → logprob: -4.449951171875
    6. ' adjacent' → logprob: -4.449951171875
    7. 'all' → logprob: -4.449951171875
    8. ' adjacency' → logprob: -4.449951171875
    9. ' must' → logprob: -4.699951171875
    10. ')' → logprob: -5.199951171875

Token 423: ' and' (ID: 326)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.4702528119087219
    2. '),' → logprob: -2.220252752304077
    3. ' is' → logprob: -2.845252752304077
    4. 's' → logprob: -2.970252752304077
    5. ' constraints' → logprob: -3.470252752304077
    6. ' )' → logprob: -3.595252752304077
    7. ' and' → logprob: -3.595252752304077
    8. ' ),' → logprob: -4.470252990722656
    9. ',' → logprob: -4.720252990722656
    10. '_list' → logprob: -5.095252990722656

Token 424: ' no' (ID: 860)
  Prédit: ' no'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' no' → logprob: -0.2399076372385025
    2. 'no' → logprob: -1.6149076223373413
    3. ' repeats' → logprob: -5.489907741546631
    4. ' uniqueness' → logprob: -5.739907741546631
    5. ' repetition' → logprob: -6.489907741546631
    6. 'repeat' → logprob: -7.114907741546631
    7. ' unique' → logprob: -7.114907741546631
    8. 'non' → logprob: -7.239907741546631
    9. ' non' → logprob: -7.364907741546631
    10. '   ' → logprob: -7.489907741546631

Token 425: ' duplicates' (ID: 91135)
  Prédit: ' repeats'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' repeats' → logprob: -0.00793534331023693
    2. ' repeat' → logprob: -5.757935523986816
    3. 'repeat' → logprob: -6.007935523986816
    4. ' repetition' → logprob: -7.007935523986816
    5. ' repeated' → logprob: -7.507935523986816
    6. ' duplicates' → logprob: -7.882935523986816
    7. ' repetitions' → logprob: -8.507935523986816
    8. 're' → logprob: -9.257935523986816
    9. 'duplicates' → logprob: -10.257935523986816
    10. ' region' → logprob: -10.507935523986816

Token 426: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.48007506132125854
    2. '),' → logprob: -1.2300751209259033
    3. '):
' → logprob: -3.3550751209259033
    4. '):' → logprob: -4.230074882507324
    5. ' )' → logprob: -4.355074882507324
    6. ' ),' → logprob: -4.980074882507324
    7. ' set' → logprob: -5.980074882507324
    8. ').' → logprob: -6.230074882507324
    9. ',' → logprob: -6.355074882507324
    10. '),
' → logprob: -6.730074882507324

Token 427: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.006091253831982613
    2. ',' → logprob: -5.256091117858887
    3. '#' → logprob: -8.256091117858887
    4. ')' → logprob: -8.506091117858887
    5. '        
' → logprob: -9.631091117858887
    6. ' tokens' → logprob: -9.631091117858887
    7. '   ' → logprob: -9.756091117858887
    8. 'tokens' → logprob: -10.256091117858887
    9. '           ' → logprob: -10.756091117858887
    10. '.' → logprob: -10.881091117858887

Token 428: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3327362835407257
    2. ',' → logprob: -1.3327362537384033
    3. '        
' → logprob: -5.082736492156982
    4. '#' (adapté à ' #') → logprob: -5.707736492156982
    5. '
' → logprob: -5.957736492156982
    6. '<|end|>' → logprob: -6.332736492156982
    7. '<|end|>' → logprob: -6.832736492156982
    8. ',
' → logprob: -7.332736492156982
    9. ')' → logprob: -7.332736492156982
    10. ' ,' → logprob: -7.457736492156982

Token 429: ' We' (ID: 1416)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.022028302773833275
    2. ',' → logprob: -5.14702844619751
    3. 'def' → logprob: -5.27202844619751
    4. '        
' → logprob: -6.02202844619751
    5. '
' → logprob: -6.39702844619751
    6. '   ' → logprob: -6.52202844619751
    7. ':' → logprob: -6.64702844619751
    8. '#' → logprob: -7.02202844619751
    9. ' def' → logprob: -7.14702844619751
    10. ')' → logprob: -7.64702844619751

Token 430: ' handle' (ID: 5318)
  Prédit: ' def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' def' → logprob: -1.4150620698928833
    2. ' can' → logprob: -1.9150620698928833
    3. ' continue' → logprob: -2.1650619506835938
    4. '   ' → logprob: -2.5400619506835938
    5. ' will' → logprob: -2.5400619506835938
    6. ')' → logprob: -2.9150619506835938
    7. 'def' → logprob: -3.1650619506835938
    8. ' proceed' → logprob: -3.4150619506835938
    9. ' have' → logprob: -3.7900619506835938
    10. ' ' → logprob: -3.7900619506835938

Token 431: ' the' (ID: 290)
  Prédit: ' all'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' all' → logprob: -0.9786215424537659
    2. ' only' → logprob: -1.603621482849121
    3. ' the' → logprob: -2.603621482849121
    4. ' transitions' → logprob: -2.853621482849121
    5. ' subsets' → logprob: -2.978621482849121
    6. 'all' → logprob: -3.103621482849121
    7. ' day' → logprob: -3.603621482849121
    8. ' possible' → logprob: -3.728621482849121
    9. '       ' → logprob: -4.228621482849121
    10. '   ' → logprob: -4.478621482849121

Token 432: ' condition' (ID: 7060)
  Prédit: ' possibility'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' possibility' → logprob: -0.5558650493621826
    2. ' next' → logprob: -1.1808650493621826
    3. ' rest' → logprob: -3.3058650493621826
    4. ' day' → logprob: -4.680865287780762
    5. ' problem' → logprob: -4.805865287780762
    6. ' case' → logprob: -4.805865287780762
    7. 'next' → logprob: -4.930865287780762
    8. ' transitions' → logprob: -5.555865287780762
    9. ' scheduling' → logprob: -5.680865287780762
    10. ' possible' → logprob: -5.805865287780762

Token 433: ' of' (ID: 328)
  Prédit: ' that'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' that' → logprob: -0.16993029415607452
    2. ' for' → logprob: -3.4199302196502686
    3. ' of' → logprob: -3.6699302196502686
    4. '       ' → logprob: -3.7949302196502686
    5. 'that' → logprob: -4.669930458068848
    6. '    ' → logprob: -4.794930458068848
    7. '        
' → logprob: -4.794930458068848
    8. ',' → logprob: -4.919930458068848
    9. '   ' → logprob: -5.169930458068848
    10. 's' → logprob: -5.169930458068848

Token 434: ' at' (ID: 540)
  Prédit: ' regions'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' regions' → logprob: -1.8638135194778442
    2. ' adjacency' → logprob: -2.1138134002685547
    3. ' subsets' → logprob: -2.7388134002685547
    4. 'multi' → logprob: -2.9888134002685547
    5. 'adj' → logprob: -3.1138134002685547
    6. 'regions' → logprob: -3.1138134002685547
    7. ' not' → logprob: -3.1138134002685547
    8. ' selecting' → logprob: -3.1138134002685547
    9. ' multi' → logprob: -3.2388134002685547
    10. ' last' → logprob: -3.2388134002685547

Token 435: ' most' (ID: 1645)
  Prédit: 'least'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'least' → logprob: -0.46323779225349426
    2. 'most' → logprob: -1.2132377624511719
    3. '_le' → logprob: -3.213237762451172
    4. 'tempt' → logprob: -4.088237762451172
    5. ' least' → logprob: -4.713237762451172
    6. 'mos' → logprob: -6.588237762451172
    7. 'day' → logprob: -6.963237762451172
    8. 't' → logprob: -7.088237762451172
    9. ' most' → logprob: -7.338237762451172
    10. 'd' → logprob: -7.713237762451172

Token 436: ' one' (ID: 1001)
  Prédit: ' one'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' one' → logprob: -1.009818196296692
    2. 'one' → logprob: -1.134818196296692
    3. '1' → logprob: -1.509818196296692
    4. 'self' → logprob: -2.6348180770874023
    5. ' ' → logprob: -4.634818077087402
    6. ' self' → logprob: -4.759818077087402
    7. '2' → logprob: -7.009818077087402
    8. 'max' → logprob: -7.384818077087402
    9. 'multi' → logprob: -7.759818077087402
    10. 'the' → logprob: -8.634818077087402

Token 437: ' multi' (ID: 12151)
  Prédit: ' region'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' region' → logprob: -0.9978629350662231
    2. 'region' → logprob: -1.1228629350662231
    3. '_live' → logprob: -2.6228628158569336
    4. ' live' → logprob: -2.8728628158569336
    5. 'live' → logprob: -3.4978628158569336
    6. '_region' → logprob: -3.4978628158569336
    7. ' day' → logprob: -4.122862815856934
    8. ' ' → logprob: -4.247862815856934
    9. 'def' → logprob: -4.497862815856934
    10. ' multi' → logprob: -4.872862815856934

Token 438: '-live' (ID: 154802)
  Prédit: '_live'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_live' → logprob: -0.0006012882222421467
    2. '-live' → logprob: -8.500600814819336
    3. '_multi' → logprob: -9.250600814819336
    4. '_day' → logprob: -9.500600814819336
    5. 'live' → logprob: -9.875600814819336
    6. '_' → logprob: -10.250600814819336
    7. 'Live' → logprob: -10.500600814819336
    8. ' live' → logprob: -10.750600814819336
    9. ')' → logprob: -11.125600814819336
    10. ' _' → logprob: -11.500600814819336

Token 439: ' day' (ID: 2163)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.31336525082588196
    2. '       ' → logprob: -2.0633652210235596
    3. '_' → logprob: -2.5633652210235596
    4. '_regions' → logprob: -3.9383652210235596
    5. ',' → logprob: -5.063365459442139
    6. '    ' → logprob: -5.313365459442139
    7. ')' → logprob: -5.688365459442139
    8. '        
' → logprob: -6.063365459442139
    9. '  ' → logprob: -6.313365459442139
    10. 'def' → logprob: -6.438365459442139

Token 440: ' per' (ID: 777)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.4874683916568756
    2. '   ' → logprob: -1.6124683618545532
    3. '       ' → logprob: -2.3624684810638428
    4. ',' → logprob: -3.1124684810638428
    5. '):' → logprob: -3.9874684810638428
    6. '
' → logprob: -4.737468242645264
    7. ')' → logprob: -5.362468242645264
    8. '        
' → logprob: -5.612468242645264
    9. '    
' → logprob: -6.237468242645264
    10. ' ' → logprob: -6.737468242645264

Token 441: ' state' (ID: 2608)
  Prédit: 'day'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'day' → logprob: -0.14347854256629944
    2. ' day' → logprob: -2.0184786319732666
    3. 'def' → logprob: -8.393478393554688
    4. '_day' → logprob: -8.518478393554688
    5. 'region' → logprob: -9.018478393554688
    6. ' schedule' → logprob: -10.143478393554688
    7. 'code' → logprob: -10.643478393554688
    8. '_' → logprob: -10.643478393554688
    9. 'year' → logprob: -10.643478393554688
    10. 'schedule' → logprob: -10.893478393554688

Token 442: '.

' (ID: 364)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.061732251197099686
    2. '<|end|>' → logprob: -3.061732292175293
    3. '        
' → logprob: -5.186732292175293
    4. '<|end|>' → logprob: -6.061732292175293
    5. ',' → logprob: -6.186732292175293
    6. '
' → logprob: -7.311732292175293
    7. '.' → logprob: -7.686732292175293
    8. ')' → logprob: -7.936732292175293
    9. '   ' → logprob: -8.186732292175293
    10. '#' → logprob: -9.186732292175293

Token 443: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.013306700624525547
    2. '        
' → logprob: -4.638306617736816
    3. '
' → logprob: -6.138306617736816
    4. '   ' → logprob: -7.888306617736816
    5. '    
' → logprob: -8.763306617736816
    6. ',' → logprob: -8.763306617736816
    7. ')' → logprob: -9.138306617736816
    8. '<|end|>' → logprob: -9.263306617736816
    9. ' 
' → logprob: -9.388306617736816
    10. 'from' → logprob: -9.638306617736816

Token 444: ' #' (ID: 1069)
  Prédit: '@'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '@' → logprob: -0.44236186146736145
    2. '       ' → logprob: -1.067361831665039
    3. 'max' → logprob: -5.067361831665039
    4. 'return' → logprob: -6.442361831665039
    5. 'def' → logprob: -6.567361831665039
    6. ' @' → logprob: -6.692361831665039
    7. 'from' → logprob: -7.192361831665039
    8. '#' (adapté à ' #') → logprob: -7.442361831665039
    9. 'result' → logprob: -7.942361831665039
    10. 'initial' → logprob: -8.067361831665039

Token 445: ' Given' (ID: 29844)
  Prédit: '@'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '@' → logprob: -0.057168129831552505
    2. 'from' → logprob: -3.1821682453155518
    3. 'dp' → logprob: -5.057168006896973
    4. 'max' → logprob: -6.182168006896973
    5. 'cache' → logprob: -6.432168006896973
    6. 'import' → logprob: -6.932168006896973
    7. '#' → logprob: -7.307168006896973
    8. '       ' → logprob: -7.557168006896973
    9. 'memo' → logprob: -7.557168006896973
    10. 'return' → logprob: -7.807168006896973

Token 446: ' constraints' (ID: 31060)
  Prédit: ' self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.21748337149620056
    2. 'self' → logprob: -2.7174832820892334
    3. ' that' → logprob: -2.8424832820892334
    4. '   ' → logprob: -3.7174832820892334
    5. ' len' → logprob: -4.5924835205078125
    6. '0' → logprob: -4.8424835205078125
    7. ' ' → logprob: -4.8424835205078125
    8. ' the' → logprob: -4.9674835205078125
    9. '       ' → logprob: -5.8424835205078125
    10. '    ' → logprob: -6.2174835205078125

Token 447: ':
' (ID: 734)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2134249210357666
    2. ',' → logprob: -1.9634249210357666
    3. ':' → logprob: -3.3384249210357666
    4. '   ' → logprob: -4.9634246826171875
    5. ' ,' → logprob: -6.3384246826171875
    6. ' for' → logprob: -6.8384246826171875
    7. '#' → logprob: -7.2134246826171875
    8. ' and' → logprob: -7.3384246826171875
    9. '        
' → logprob: -7.4634246826171875
    10. '.' → logprob: -7.8384246826171875

Token 448: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.04764249175786972
    2. ' pass' → logprob: -3.922642469406128
    3. '#' → logprob: -5.297642707824707
    4. '        ' → logprob: -5.547642707824707
    5. ' max' → logprob: -5.672642707824707
    6. 'pass' → logprob: -6.047642707824707
    7. ' result' → logprob: -6.172642707824707
    8. ' return' → logprob: -6.547642707824707
    9. 'return' → logprob: -6.797642707824707
    10. 'result' → logprob: -6.922642707824707

Token 449: ' #' (ID: 1069)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.28703683614730835
    2. ' max' → logprob: -2.162036895751953
    3. 'dp' → logprob: -3.287036895751953
    4. '       ' → logprob: -3.537036895751953
    5. 'return' → logprob: -4.412036895751953
    6. 'result' → logprob: -4.662036895751953
    7. 'pass' → logprob: -5.037036895751953
    8. '#' (adapté à ' #') → logprob: -5.162036895751953
    9. 'p' → logprob: -5.412036895751953
    10. '   ' → logprob: -5.662036895751953

Token 450: ' C' (ID: 363)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.674972414970398
    2. ' max' → logprob: -1.174972414970398
    3. 'dp' → logprob: -2.7999725341796875
    4. '       ' → logprob: -3.4249725341796875
    5. 'def' → logprob: -4.1749725341796875
    6. '   ' → logprob: -4.4249725341796875
    7. ' dp' → logprob: -4.5499725341796875
    8. 'MAX' → logprob: -4.7999725341796875
    9. 'from' → logprob: -4.9249725341796875
    10. '#' → logprob: -5.0499725341796875

Token 451: ' <=' (ID: 5017)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7305995225906372
    2. 'urrent' → logprob: -1.7305995225906372
    3. 'OUNT' → logprob: -2.4805994033813477
    4. '#' → logprob: -2.9805994033813477
    5. 'ount' → logprob: -3.6055994033813477
    6. 'max' → logprob: -3.7305994033813477
    7. 'MAX' → logprob: -3.7305994033813477
    8. '       ' → logprob: -3.8555994033813477
    9. 'on' → logprob: -4.230599403381348
    10. 'URRENT' → logprob: -4.605599403381348

Token 452: ' ' (ID: 220)
  Prédit: '20'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '20' → logprob: -0.15277285873889923
    2. '10' → logprob: -2.277772903442383
    3. '50' → logprob: -4.527772903442383
    4. '100' → logprob: -4.902772903442383
    5. ' ' → logprob: -5.027772903442383
    6. 'self' → logprob: -5.402772903442383
    7. '15' → logprob: -5.402772903442383
    8. '30' → logprob: -6.027772903442383
    9. '12' → logprob: -6.902772903442383
    10. '5' → logprob: -7.777772903442383

Token 453: '15' (ID: 1055)
  Prédit: '20'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '20' → logprob: -0.6141104102134705
    2. '10' → logprob: -1.2391104698181152
    3. 'self' → logprob: -2.1141104698181152
    4. '15' → logprob: -4.364110469818115
    5. '50' → logprob: -4.364110469818115
    6. '100' → logprob: -4.739110469818115
    7. '12' → logprob: -5.614110469818115
    8. '5' → logprob: -5.739110469818115
    9. '16' → logprob: -6.114110469818115
    10. '30' → logprob: -6.364110469818115

Token 454: ',' (ID: 11)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.5721720457077026
    2. '       ' → logprob: -1.0721720457077026
    3. ',' → logprob: -3.197172164916992
    4. '<|end|>' → logprob: -3.822172164916992
    5. '        
' → logprob: -4.322172164916992
    6. '#' → logprob: -4.697172164916992
    7. ' 
' → logprob: -6.447172164916992
    8. ')' → logprob: -6.572172164916992
    9. '  
' → logprob: -7.197172164916992
    10. '<|end|>' → logprob: -7.197172164916992

Token 455: ' D' (ID: 415)
  Prédit: ' return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -1.4817852973937988
    2. ' max' → logprob: -1.9817852973937988
    3. 'return' → logprob: -2.356785297393799
    4. '#' → logprob: -2.606785297393799
    5. '       ' → logprob: -2.606785297393799
    6. ' days' → logprob: -2.606785297393799
    7. ' day' → logprob: -2.856785297393799
    8. ' D' → logprob: -3.106785297393799
    9. 'max' → logprob: -3.356785297393799
    10. 'D' → logprob: -3.356785297393799

Token 456: ' <=' (ID: 5017)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.929469108581543
    2. ':' → logprob: -1.929469108581543
    3. '   ' → logprob: -2.054469108581543
    4. ' ' → logprob: -2.929469108581543
    5. ',' → logprob: -3.054469108581543
    6. ' =' → logprob: -3.054469108581543
    7. ')' → logprob: -3.304469108581543
    8. ' <=' → logprob: -3.679469108581543
    9. '+' → logprob: -3.929469108581543
    10. '       ' → logprob: -4.054469108581543

Token 457: ' ' (ID: 220)
  Prédit: '15'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '15' → logprob: -0.6603190302848816
    2. '20' → logprob: -1.5353190898895264
    3. '30' → logprob: -1.5353190898895264
    4. '100' → logprob: -4.035318851470947
    5. '10' → logprob: -4.160318851470947
    6. '50' → logprob: -4.535318851470947
    7. '365' → logprob: -5.410318851470947
    8. '60' → logprob: -7.285318851470947
    9. '16' → logprob: -7.285318851470947
    10. '25' → logprob: -7.410318851470947

Token 458: '30' (ID: 1130)
  Prédit: '30'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '30' → logprob: -1.2539985179901123
    2. '15' → logprob: -1.3789985179901123
    3. '20' → logprob: -1.5039985179901123
    4. '10' → logprob: -2.5039985179901123
    5. '100' → logprob: -2.6289985179901123
    6. '50' → logprob: -2.7539985179901123
    7. '365' → logprob: -4.628998756408691
    8. '60' → logprob: -6.003998756408691
    9. '200' → logprob: -6.253998756408691
    10. '25' → logprob: -6.628998756408691

Token 459: ',' (ID: 11)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.6150938868522644
    2. '       ' → logprob: -0.9900938868522644
    3. '<|end|>' → logprob: -2.865093946456909
    4. '        
' → logprob: -4.24009370803833
    5. '#' → logprob: -4.99009370803833
    6. '<|end|>' → logprob: -5.61509370803833
    7. ',' → logprob: -5.74009370803833
    8. ')' → logprob: -7.74009370803833
    9. ',
' → logprob: -7.74009370803833
    10. '        ' → logprob: -7.86509370803833

Token 460: ' W' (ID: 486)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.9817027449607849
    2. ' max' → logprob: -1.3567028045654297
    3. 'max' → logprob: -1.4817028045654297
    4. 'return' → logprob: -3.8567028045654297
    5. 'dp' → logprob: -3.9817028045654297
    6. 'from' → logprob: -4.23170280456543
    7. ' return' → logprob: -4.48170280456543
    8. '
' → logprob: -4.48170280456543
    9. 'def' → logprob: -4.85670280456543
    10. '#' → logprob: -4.98170280456543

Token 461: ' <=' (ID: 5017)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5078150629997253
    2. '=' → logprob: -1.2578151226043701
    3. '   ' → logprob: -3.25781512260437
    4. ',' → logprob: -3.75781512260437
    5. ':' → logprob: -4.757814884185791
    6. ')' → logprob: -4.757814884185791
    7. ' <=' → logprob: -4.882814884185791
    8. '#' → logprob: -5.382814884185791
    9. '
' → logprob: -6.007814884185791
    10. ' ' → logprob: -6.382814884185791

Token 462: ' ' (ID: 220)
  Prédit: '100'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '100' → logprob: -0.29909583926200867
    2. '10' → logprob: -2.174095869064331
    3. '20' → logprob: -3.049095869064331
    4. '50' → logprob: -3.299095869064331
    5. 'self' → logprob: -3.799095869064331
    6. '15' → logprob: -4.924095630645752
    7. '30' → logprob: -4.924095630645752
    8. ' ' → logprob: -5.424095630645752
    9. '200' → logprob: -5.424095630645752
    10. '0' → logprob: -5.549095630645752

Token 463: '50' (ID: 1434)
  Prédit: '100'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '100' → logprob: -0.24488548934459686
    2. '10' → logprob: -2.7448854446411133
    3. '30' → logprob: -2.7448854446411133
    4. '15' → logprob: -3.6198854446411133
    5. '50' → logprob: -3.6198854446411133
    6. '20' → logprob: -4.119885444641113
    7. 'self' → logprob: -5.244885444641113
    8. '200' → logprob: -5.369885444641113
    9. '300' → logprob: -5.869885444641113
    10. '150' → logprob: -6.619885444641113

Token 464: ',' (ID: 11)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 465: ' X' (ID: 2127)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7872449159622192
    2. 'M' → logprob: -1.5372449159622192
    3. 'return' → logprob: -3.0372447967529297
    4. 'max' → logprob: -3.0372447967529297
    5. ' max' → logprob: -3.4122447967529297
    6. ' M' → logprob: -3.4122447967529297
    7. '   ' → logprob: -3.7872447967529297
    8. '#' → logprob: -3.7872447967529297
    9. 'def' → logprob: -3.7872447967529297
    10. 'B' → logprob: -4.28724479675293

Token 466: ' <=' (ID: 5017)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.7449705004692078
    2. '       ' → logprob: -1.4949705600738525
    3. '<|end|>' → logprob: -2.6199705600738525
    4. '<|end|>' → logprob: -2.6199705600738525
    5. '=' → logprob: -3.2449705600738525
    6. ',' → logprob: -3.4949705600738525
    7. '):' → logprob: -3.6199705600738525
    8. ')' → logprob: -4.369970321655273
    9. '   ' → logprob: -4.494970321655273
    10. ' =' → logprob: -4.619970321655273

Token 467: ' ' (ID: 220)
  Prédit: '50'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '50' → logprob: -1.1629551649093628
    2. '30' → logprob: -1.6629551649093628
    3. '15' → logprob: -1.7879551649093628
    4. '10' → logprob: -2.0379552841186523
    5. '2' → logprob: -2.7879552841186523
    6. '5' → logprob: -2.9129552841186523
    7. '1' → logprob: -3.0379552841186523
    8. '100' → logprob: -4.162955284118652
    9. '20' → logprob: -5.412955284118652
    10. '0' → logprob: -5.412955284118652

Token 468: '5' (ID: 20)
  Prédit: '30'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '30' → logprob: -0.7518696188926697
    2. '15' → logprob: -1.6268696784973145
    3. 'self' → logprob: -1.8768696784973145
    4. '10' → logprob: -2.5018696784973145
    5. '5' → logprob: -3.3768696784973145
    6. '2' → logprob: -3.6268696784973145
    7. '50' → logprob: -4.1268696784973145
    8. '1' → logprob: -4.7518696784973145
    9. '20' → logprob: -6.1268696784973145
    10. '100' → logprob: -6.2518696784973145

Token 469: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 470: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.05777859315276146
    2. '
' → logprob: -3.1827785968780518
    3. '        
' → logprob: -4.307778358459473
    4. ',' → logprob: -7.932778358459473
    5. '#' → logprob: -8.057778358459473
    6. '<|end|>' → logprob: -9.432778358459473
    7. '  
' → logprob: -9.682778358459473
    8. '    
' → logprob: -9.807778358459473
    9. ')' → logprob: -10.057778358459473
    10. ' 
' → logprob: -10.057778358459473

Token 471: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.07748925685882568
    2. 'max' → logprob: -3.8274893760681152
    3. 'from' → logprob: -4.077489376068115
    4. 'dp' → logprob: -4.327489376068115
    5. '@' → logprob: -4.452489376068115
    6. '#' (adapté à ' #') → logprob: -5.577489376068115
    7. 'import' → logprob: -5.827489376068115
    8. '        
' → logprob: -6.577489376068115
    9. 'return' → logprob: -7.077489376068115
    10. 'def' → logprob: -7.827489376068115

Token 472: ' We' (ID: 1416)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.15400364995002747
    2. 'dp' → logprob: -3.154003620147705
    3. '@' → logprob: -3.279003620147705
    4. 'max' → logprob: -3.529003620147705
    5. 'def' → logprob: -3.654003620147705
    6. 'from' → logprob: -5.654003620147705
    7. 'memo' → logprob: -6.529003620147705
    8. 'cache' → logprob: -7.279003620147705
    9. 'return' → logprob: -7.279003620147705
    10. 'import' → logprob: -8.529004096984863

Token 473: ' will' (ID: 738)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.48606863617897034
    2. ' def' → logprob: -1.361068606376648
    3. '       ' → logprob: -2.8610687255859375
    4. '   ' → logprob: -3.3610687255859375
    5. ' return' → logprob: -4.7360687255859375
    6. ' will' → logprob: -5.7360687255859375
    7. ''ll' → logprob: -5.7360687255859375
    8. ' continue' → logprob: -5.8610687255859375
    9. 'return' → logprob: -5.9860687255859375
    10. ' ' → logprob: -6.2360687255859375

Token 474: ' enumerate' (ID: 29671)
  Prédit: ' use'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' use' → logprob: -1.1372877359390259
    2. 'def' → logprob: -1.7622877359390259
    3. 'use' → logprob: -2.0122876167297363
    4. 'cache' → logprob: -2.2622876167297363
    5. '   ' → logprob: -2.5122876167297363
    6. 'from' → logprob: -2.5122876167297363
    7. '@' → logprob: -3.6372876167297363
    8. '       ' → logprob: -4.012287616729736
    9. 'return' → logprob: -4.012287616729736
    10. ' implement' → logprob: -4.637287616729736

Token 475: ' for' (ID: 395)
  Prédit: ' subsets'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' subsets' → logprob: -1.5354392528533936
    2. ' all' → logprob: -1.7854392528533936
    3. 'all' → logprob: -1.9104392528533936
    4. '       ' → logprob: -1.9104392528533936
    5. 'possible' → logprob: -2.5354392528533936
    6. ' possible' → logprob: -2.7854392528533936
    7. ' day' → logprob: -3.6604392528533936
    8. 'day' → logprob: -3.9104392528533936
    9. ' valid' → logprob: -3.9104392528533936
    10. ' for' → logprob: -4.035439491271973

Token 476: ' each' (ID: 2454)
  Prédit: ' day'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' day' → logprob: -0.029057126492261887
    2. 'day' → logprob: -3.779057025909424
    3. ' region' → logprob: -6.154057025909424
    4. ' days' → logprob: -6.529057025909424
    5. ' all' → logprob: -7.404057025909424
    6. ' bit' → logprob: -8.529057502746582
    7. ' each' → logprob: -8.529057502746582
    8. ' regions' → logprob: -8.779057502746582
    9. ' d' → logprob: -8.904057502746582
    10. 'days' → logprob: -9.279057502746582

Token 477: ' day' (ID: 2163)
  Prédit: ' day'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' day' → logprob: -0.06548366695642471
    2. 'day' → logprob: -2.815483570098877
    3. ' region' → logprob: -6.940483570098877
    4. ' subset' → logprob: -6.940483570098877
    5. 'def' → logprob: -7.690483570098877
    6. 'subset' → logprob: -7.940483570098877
    7. 'region' → logprob: -8.065484046936035
    8. ' def' → logprob: -9.315484046936035
    9. ' possible' → logprob: -9.815484046936035
    10. ' today' → logprob: -10.315484046936035

Token 478: ' all' (ID: 722)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.18978342413902283
    2. ',' → logprob: -2.8147833347320557
    3. '   ' → logprob: -3.6897833347320557
    4. ' possible' → logprob: -4.439783573150635
    5. ':' → logprob: -4.814783573150635
    6. '
' → logprob: -4.814783573150635
    7. ' for' → logprob: -4.939783573150635
    8. 'possible' → logprob: -5.314783573150635
    9. 'def' → logprob: -5.314783573150635
    10. ' all' → logprob: -5.814783573150635

Token 479: ' valid' (ID: 4529)
  Prédit: ' subsets'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' subsets' → logprob: -0.37177038192749023
    2. ' possible' → logprob: -1.4967703819274902
    3. ' valid' → logprob: -2.7467703819274902
    4. 'possible' → logprob: -4.49677038192749
    5. ' regions' → logprob: -5.62177038192749
    6. ' subset' → logprob: -6.62177038192749
    7. ' viable' → logprob: -6.87177038192749
    8. 'valid' → logprob: -6.99677038192749
    9. 'regions' → logprob: -7.12177038192749
    10. ' region' → logprob: -7.12177038192749

Token 480: ' "' (ID: 392)
  Prédit: ' subsets'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' subsets' → logprob: -0.07811436057090759
    2. 'sub' → logprob: -2.9531142711639404
    3. 'region' → logprob: -5.4531145095825195
    4. 'regions' → logprob: -5.7031145095825195
    5. ' region' → logprob: -5.8281145095825195
    6. 'm' → logprob: -6.5781145095825195
    7. 'multi' → logprob: -6.7031145095825195
    8. ' multi' → logprob: -6.8281145095825195
    9. ' bit' → logprob: -6.9531145095825195
    10. 'bit' → logprob: -7.0781145095825195

Token 481: 'live' (ID: 42460)
  Prédit: ' subsets'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' subsets' → logprob: -0.6075180768966675
    2. 'sub' → logprob: -1.8575180768966675
    3. 'm' → logprob: -2.107518196105957
    4. 'region' → logprob: -2.482518196105957
    5. 'regions' → logprob: -3.607518196105957
    6. ' region' → logprob: -4.232518196105957
    7. 'bit' → logprob: -4.357518196105957
    8. 'subset' → logprob: -4.732518196105957
    9. 'sets' → logprob: -4.982518196105957
    10. 'live' → logprob: -5.107518196105957

Token 482: ' sets' (ID: 11982)
  Prédit: '_regions'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_regions' → logprob: -0.9714166522026062
    2. '_sets' → logprob: -1.096416711807251
    3. 's' → logprob: -2.346416711807251
    4. 'sets' → logprob: -2.971416711807251
    5. 'regions' → logprob: -3.846416711807251
    6. '"' → logprob: -3.846416711807251
    7. ' sets' → logprob: -3.846416711807251
    8. ' subsets' → logprob: -4.596416473388672
    9. '_sub' → logprob: -4.721416473388672
    10. ' regions' → logprob: -5.096416473388672

Token 483: '"' (ID: 1)
  Prédit: '"'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.0947415828704834
    2. 's' → logprob: -2.7197415828704834
    3. ' "' → logprob: -4.7197418212890625
    4. '"s' → logprob: -4.9697418212890625
    5. '()"' → logprob: -5.3447418212890625
    6. '"
' → logprob: -6.9697418212890625
    7. '".' → logprob: -7.4697418212890625
    8. '",' → logprob: -7.4697418212890625
    9. '   ' → logprob: -7.8447418212890625
    10. '":' → logprob: -8.469741821289062

Token 484: ' respecting' (ID: 136775)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.19783350825309753
    2. ',' → logprob: -2.07283353805542
    3. 'def' → logprob: -4.82283353805542
    4. ' and' → logprob: -4.94783353805542
    5. '.' → logprob: -5.32283353805542
    6. '#' → logprob: -5.32283353805542
    7. '<|end|>' → logprob: -5.44783353805542
    8. ':' → logprob: -5.69783353805542
    9. ' with' → logprob: -5.69783353805542
    10. '        
' → logprob: -6.32283353805542

Token 485: ' adjacency' (ID: 177015)
  Prédit: ' adjacency'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' adjacency' → logprob: -0.6404500603675842
    2. 'adj' → logprob: -1.0154500007629395
    3. 'the' → logprob: -3.0154500007629395
    4. ' the' → logprob: -3.0154500007629395
    5. 'self' → logprob: -5.1404500007629395
    6. ' self' → logprob: -6.2654500007629395
    7. ' constraints' → logprob: -6.5154500007629395
    8. ' adj' → logprob: -7.1404500007629395
    9. 'constraints' → logprob: -7.2654500007629395
    10. '   ' → logprob: -7.2654500007629395

Token 486: ' and' (ID: 326)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2891700863838196
    2. ',' → logprob: -2.164170026779175
    3. ' and' → logprob: -2.414170026779175
    4. '        
' → logprob: -4.414170265197754
    5. '.' → logprob: -4.789170265197754
    6. '   ' → logprob: -5.289170265197754
    7. 'and' → logprob: -5.289170265197754
    8. 'def' → logprob: -6.164170265197754
    9. '<|end|>' → logprob: -6.414170265197754
    10. '
' → logprob: -6.914170265197754

Token 487: ' no' (ID: 860)
  Prédit: 'no'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'no' → logprob: -1.3782315254211426
    2. 'max' → logprob: -1.5032315254211426
    3. ' no' → logprob: -2.1282315254211426
    4. 'bur' → logprob: -2.1282315254211426
    5. ' burden' → logprob: -2.3782315254211426
    6. ' max' → logprob: -2.7532315254211426
    7. 'bit' → logprob: -3.2532315254211426
    8. 'size' → logprob: -3.8782315254211426
    9. ' size' → logprob: -4.003231525421143
    10. ' bit' → logprob: -4.753231525421143

Token 488: ' duplicate' (ID: 41010)
  Prédit: ' repeats'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' repeats' → logprob: -0.1473301649093628
    2. 'repeat' → logprob: -2.6473302841186523
    3. 're' → logprob: -3.2723302841186523
    4. ' duplicates' → logprob: -5.022330284118652
    5. ' repeat' → logprob: -5.147330284118652
    6. 'duplicates' → logprob: -5.397330284118652
    7. ' repetition' → logprob: -5.772330284118652
    8. ' repeated' → logprob: -6.272330284118652
    9. 'regions' → logprob: -7.272330284118652
    10. ' repetitions' → logprob: -7.272330284118652

Token 489: ' regions' (ID: 21043)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -1.1789262294769287
    2. '       ' → logprob: -2.0539262294769287
    3. '   ' → logprob: -2.1789262294769287
    4. ' subsets' → logprob: -2.3039262294769287
    5. '_live' → logprob: -2.5539262294769287
    6. ' regions' → logprob: -3.4289262294769287
    7. '_regions' → logprob: -3.8039262294769287
    8. 'def' → logprob: -3.9289262294769287
    9. ' sets' → logprob: -3.9289262294769287
    10. 'regions' → logprob: -4.303926467895508

Token 490: ' same' (ID: 2684)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1054702177643776
    2. ',' → logprob: -2.9804701805114746
    3. '.' → logprob: -3.4804701805114746
    4. '<|end|>' → logprob: -5.355470180511475
    5. ' and' → logprob: -5.480470180511475
    6. '#' → logprob: -6.230470180511475
    7. '        
' → logprob: -6.230470180511475
    8. '<|end|>' → logprob: -6.480470180511475
    9. 'def' → logprob: -7.230470180511475
    10. '...' → logprob: -7.355470180511475

Token 491: ' day' (ID: 2163)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.4893975853919983
    2. ' _' → logprob: -1.3643975257873535
    3. '_day' → logprob: -2.4893975257873535
    4. ' day' → logprob: -3.3643975257873535
    5. '_set' → logprob: -5.6143975257873535
    6. ' ' → logprob: -5.7393975257873535
    7. '_live' → logprob: -6.7393975257873535
    8. '_s' → logprob: -7.3643975257873535
    9. 'day' → logprob: -7.3643975257873535
    10. '_days' → logprob: -7.4893975257873535

Token 492: '

' (ID: 279)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.11659601330757141
    2. '
' → logprob: -3.116595983505249
    3. ',' → logprob: -3.491595983505249
    4. '<|end|>' → logprob: -4.116596221923828
    5. '        
' → logprob: -5.116596221923828
    6. '#' → logprob: -5.616596221923828
    7. '.' → logprob: -5.741596221923828
    8. '<|end|>' → logprob: -6.616596221923828
    9. ')' → logprob: -6.741596221923828
    10. ',
' → logprob: -7.491596221923828

Token 493: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.018638217821717262
    2. '        
' → logprob: -4.2686381340026855
    3. '
' → logprob: -6.1436381340026855
    4. 'def' → logprob: -7.3936381340026855
    5. ',' → logprob: -7.5186381340026855
    6. '#' → logprob: -7.7686381340026855
    7. '    
' → logprob: -9.518638610839844
    8. ':' → logprob: -9.768638610839844
    9. ')' → logprob: -9.768638610839844
    10. 'valid' → logprob: -9.768638610839844

Token 494: ' valid' (ID: 4529)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4376376271247864
    2. 'valid' (adapté à ' valid') → logprob: -1.5626375675201416
    3. 'max' → logprob: -2.1876375675201416
    4. 'def' → logprob: -5.187637805938721
    5. 'result' → logprob: -5.187637805938721
    6. 'all' → logprob: -5.312637805938721
    7. ' valid' → logprob: -5.562637805938721
    8. ' max' → logprob: -5.687637805938721
    9. 'possible' → logprob: -6.187637805938721
    10. '#' → logprob: -6.562637805938721

Token 495: '_live' (ID: 133570)
  Prédit: '_live'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_live' → logprob: -0.20290322601795197
    2. '_sets' → logprob: -1.7029032707214355
    3. '_sub' → logprob: -7.2029032707214355
    4. '_bit' → logprob: -8.202902793884277
    5. '_masks' → logprob: -8.577902793884277
    6. '_regions' → logprob: -8.952902793884277
    7. '_region' → logprob: -10.577902793884277
    8. '_states' → logprob: -10.577902793884277
    9. '_day' → logprob: -10.827902793884277
    10. '_' → logprob: -11.077902793884277

Token 496: '_sets' (ID: 56707)
  Prédit: '_sets'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sets' → logprob: -0.0017987078754231334
    2. 'sets' → logprob: -6.501798629760742
    3. '_sub' → logprob: -9.376798629760742
    4. '_set' → logprob: -10.001798629760742
    5. '_' → logprob: -10.376798629760742
    6. '_regions' → logprob: -10.501798629760742
    7. '_masks' → logprob: -10.626798629760742
    8. 's' → logprob: -11.001798629760742
    9. '_ranges' → logprob: -11.501798629760742
    10. '_states' → logprob: -11.751798629760742

Token 497: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.052097927778959274
    2. ':' → logprob: -3.052098035812378
    3. '=' → logprob: -5.677097797393799
    4. ' :' → logprob: -9.552098274230957
    5. '   ' → logprob: -12.427098274230957
    6. ' ' → logprob: -13.427098274230957
    7. 's' → logprob: -13.427098274230957
    8. '=[]' → logprob: -13.427098274230957
    9. '  ' → logprob: -14.677098274230957
    10. ')' → logprob: -14.927098274230957

Token 498: ' self' (ID: 1051)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.11150199174880981
    2. 'self' → logprob: -2.361501932144165
    3. '[' → logprob: -5.111502170562744
    4. '[self' → logprob: -5.861502170562744
    5. ' []' → logprob: -6.736502170562744
    6. '[]
' → logprob: -7.361502170562744
    7. 'set' → logprob: -8.111501693725586
    8. ' self' → logprob: -9.236501693725586
    9. '[{' → logprob: -10.236501693725586
    10. '[]}' → logprob: -10.861501693725586

Token 499: '._' (ID: 2697)
  Prédit: '._'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '._' → logprob: -0.3690192699432373
    2. ' =' → logprob: -1.9940192699432373
    3. '_generate' → logprob: -2.3690192699432373
    4. '_build' → logprob: -3.1190192699432373
    5. '=' → logprob: -4.369019508361816
    6. '.generate' → logprob: -5.244019508361816
    7. 'self' → logprob: -5.994019508361816
    8. '_set' → logprob: -6.119019508361816
    9. ' _' → logprob: -6.994019508361816
    10. 'def' → logprob: -7.119019508361816

Token 500: 'generate' (ID: 36386)
  Prédit: 'generate'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'generate' → logprob: -0.014590282924473286
    2. 'pre' → logprob: -5.264590263366699
    3. 'build' → logprob: -5.264590263366699
    4. 'compute' → logprob: -6.014590263366699
    5. 'enumer' → logprob: -6.639590263366699
    6. 'get' → logprob: -7.889590263366699
    7. 'prepare' → logprob: -11.8895902633667
    8. 'collect' → logprob: -12.8895902633667
    9. 'find' → logprob: -13.0145902633667
    10. 'gen' → logprob: -13.3895902633667

Token 501: '_valid' (ID: 23321)
  Prédit: '_live'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_live' → logprob: -0.3502016067504883
    2. '_valid' → logprob: -1.2252016067504883
    3. '_all' → logprob: -6.975201606750488
    4. 'live' → logprob: -7.975201606750488
    5. '_sets' → logprob: -8.975201606750488
    6. '_possible' → logprob: -9.475201606750488
    7. 'valid' → logprob: -9.725201606750488
    8. '_day' → logprob: -9.975201606750488
    9. '_bit' → logprob: -10.225201606750488
    10. '_daily' → logprob: -10.225201606750488

Token 502: '_live' (ID: 133570)
  Prédit: '_live'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_live' → logprob: -2.856408536899835e-05
    2. '_sets' → logprob: -10.750028610229492
    3. 'live' → logprob: -12.125028610229492
    4. '_daily' → logprob: -15.125028610229492
    5. '_' → logprob: -15.250028610229492
    6. '_multi' → logprob: -15.375028610229492
    7. '_regions' → logprob: -15.500028610229492
    8. 'Live' → logprob: -15.875028610229492
    9. '_day' → logprob: -16.500028610229492
    10. 'sets' → logprob: -16.500028610229492

Token 503: '_sets' (ID: 56707)
  Prédit: '_sets'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sets' → logprob: -3.607391408877447e-05
    2. '_' → logprob: -11.250036239624023
    3. 'sets' → logprob: -11.875036239624023
    4. '_set' → logprob: -12.000036239624023
    5. 's' → logprob: -12.375036239624023
    6. ')_' → logprob: -14.125036239624023
    7. ' _' → logprob: -14.250036239624023
    8. '_s' → logprob: -14.500036239624023
    9. ' sets' → logprob: -14.500036239624023
    10. '_lists' → logprob: -14.500036239624023

Token 504: '()

' (ID: 5874)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0006096287979744375
    2. '(self' → logprob: -7.500609397888184
    3. '(' → logprob: -10.125609397888184
    4. '()
' → logprob: -11.375609397888184
    5. ' ()' → logprob: -13.125609397888184
    6. '())' → logprob: -14.250609397888184
    7. '().' → logprob: -15.000609397888184
    8. 'self' → logprob: -15.250609397888184
    9. '()]' → logprob: -15.250609397888184
    10. '()

' → logprob: -15.375609397888184

Token 505: '       ' (ID: 309)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.05809010937809944
    2. '       ' → logprob: -3.1830902099609375
    3. '()
' → logprob: -5.0580902099609375
    4. ':' → logprob: -5.9330902099609375
    5. '(' → logprob: -6.4330902099609375
    6. '
' → logprob: -6.6830902099609375
    7. ')' → logprob: -6.9330902099609375
    8. '   ' → logprob: -7.6830902099609375
    9. ',' → logprob: -8.183090209960938
    10. '        
' → logprob: -8.183090209960938

Token 506: ' @' (ID: 759)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.4018602669239044
    2. '@' (adapté à ' @') → logprob: -1.151860237121582
    3. '       ' → logprob: -4.651860237121582
    4. 'return' → logprob: -6.276860237121582
    5. 'cache' → logprob: -6.776860237121582
    6. 'memo' → logprob: -7.151860237121582
    7. 'result' → logprob: -7.526860237121582
    8. 'def' → logprob: -7.776860237121582
    9. '   ' → logprob: -8.151860237121582
    10. 'results' → logprob: -9.526860237121582

Token 507: 'l' (ID: 75)
  Prédit: 'l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: 0.0
    2. 'staticmethod' → logprob: -17.875
    3. 'dat' → logprob: -17.875
    4. 'self' → logprob: -18.125
    5. 'property' → logprob: -19.375
    6. ' l' → logprob: -20.25
    7. 'cache' → logprob: -21.75
    8. '
' → logprob: -21.875
    9. '```' → logprob: -22.25
    10. 'lr' → logprob: -23.125

Token 508: 'ru' (ID: 1942)
  Prédit: 'ru'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ru' → logprob: -0.014265522360801697
    2. 'r' → logprob: -4.264265537261963
    3. '@' → logprob: -9.889265060424805
    4. 'rl' → logprob: -10.514265060424805
    5. '   ' → logprob: -11.889265060424805
    6. 'rt' → logprob: -12.389265060424805
    7. 'def' → logprob: -12.889265060424805
    8. '```' → logprob: -12.889265060424805
    9. 'rp' → logprob: -13.514265060424805
    10. 'p' → logprob: -13.639265060424805

Token 509: '_cache' (ID: 27045)
  Prédit: '_cache'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_cache' → logprob: -0.004111762158572674
    2. '_cached' → logprob: -5.5041117668151855
    3. 'cache' → logprob: -11.004111289978027
    4. 'cached' → logprob: -11.879111289978027
    5. ' _' → logprob: -13.004111289978027
    6. '_' → logprob: -13.254111289978027
    7. ')_' → logprob: -14.004111289978027
    8. '_c' → logprob: -14.129111289978027
    9. '```' → logprob: -14.504111289978027
    10. ')' → logprob: -15.129111289978027

Token 510: '(max' (ID: 17178)
  Prédit: '(None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(None' → logprob: -0.5014129281044006
    2. 'def' → logprob: -1.5014128684997559
    3. '(max' → logprob: -1.8764128684997559
    4. '[int' → logprob: -5.251412868499756
    5. '(int' → logprob: -5.251412868499756
    6. 'max' → logprob: -5.501412868499756
    7. '
' → logprob: -6.126412868499756
    8. '=None' → logprob: -7.751412868499756
    9. '(def' → logprob: -8.126413345336914
    10. '[max' → logprob: -8.251413345336914

Token 511: 'size' (ID: 4461)
  Prédit: 'size'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'size' → logprob: -0.2336949110031128
    2. ')' → logprob: -2.2336950302124023
    3. '_size' → logprob: -3.2336950302124023
    4. '=None' → logprob: -3.3586950302124023
    5. '(None' → logprob: -4.108695030212402
    6. 'None' → logprob: -5.983695030212402
    7. '_None' → logprob: -6.108695030212402
    8. '_none' → logprob: -6.483695030212402
    9. '_)' → logprob: -7.358695030212402
    10. ' None' → logprob: -7.483695030212402

Token 512: '=None' (ID: 12783)
  Prédit: '=None'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=None' → logprob: -0.005314635578542948
    2. '=' → logprob: -5.255314826965332
    3. 'None' → logprob: -9.755314826965332
    4. '(None' → logprob: -10.880314826965332
    5. ')' → logprob: -12.880314826965332
    6. ')=' → logprob: -13.880314826965332
    7. ' None' → logprob: -15.130314826965332
    8. ',None' → logprob: -16.630313873291016
    9. '=True' → logprob: -16.880313873291016
    10. '```' → logprob: -17.005313873291016

Token 513: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.28540652990341187
    2. ')
' → logprob: -1.4104065895080566
    3. 'def' → logprob: -5.535406589508057
    4. '   ' → logprob: -9.035406112670898
    5. ')
' → logprob: -9.535406112670898
    6. ' def' → logprob: -10.535406112670898
    7. '       ' → logprob: -10.785406112670898
    8. '):' → logprob: -11.160406112670898
    9. '):
' → logprob: -11.410406112670898
    10. ')return' → logprob: -11.535406112670898

Token 514: '       ' (ID: 309)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.08869034796953201
    2. '   ' → logprob: -2.5886902809143066
    3. '
' → logprob: -5.213690280914307
    4. '       ' → logprob: -5.463690280914307
    5. '	def' → logprob: -10.463690757751465
    6. ' def' → logprob: -11.213690757751465
    7. '(def' → logprob: -11.463690757751465
    8. '           ' → logprob: -12.338690757751465
    9. '    
' → logprob: -13.213690757751465
    10. '<|end|>' → logprob: -13.213690757751465

Token 515: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.01816035620868206
    2. '
' → logprob: -4.018160343170166
    3. '   ' → logprob: -12.643160820007324
    4. '       ' → logprob: -12.768160820007324
    5. '    
' → logprob: -14.018160820007324
    6. ' def' → logprob: -14.518160820007324
    7. '        
' → logprob: -14.643160820007324
    8. '	def' → logprob: -14.768160820007324
    9. '\' → logprob: -14.893160820007324
    10. '```' → logprob: -15.018160820007324

Token 516: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.03226873278617859
    2. 'dfs' → logprob: -3.532268762588501
    3. '_dp' → logprob: -6.282268524169922
    4. ' dp' → logprob: -7.907268524169922
    5. '   ' → logprob: -8.407268524169922
    6. ' dfs' → logprob: -10.532268524169922
    7. '       ' → logprob: -11.657268524169922
    8. 'search' → logprob: -12.157268524169922
    9. 'def' → logprob: -12.282268524169922
    10. '  ' → logprob: -13.407268524169922

Token 517: '(day' (ID: 73732)
  Prédit: '(state'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(state' → logprob: -0.058201681822538376
    2. '(day' → logprob: -3.058201789855957
    3. '(' → logprob: -5.433201789855957
    4. '(schedule' → logprob: -5.933201789855957
    5. '(self' → logprob: -6.183201789855957
    6. '(
' → logprob: -8.433201789855957
    7. '(current' → logprob: -9.183201789855957
    8. ' (' → logprob: -9.433201789855957
    9. '(s' → logprob: -10.683201789855957
    10. '(step' → logprob: -11.058201789855957

Token 518: ':' (ID: 25)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0001158211671281606
    2. ' ,' → logprob: -9.875115394592285
    3. '):' → logprob: -11.000115394592285
    4. ':' → logprob: -11.000115394592285
    5. ',
' → logprob: -11.875115394592285
    6. '<|end|>' → logprob: -12.250115394592285
    7. '+' → logprob: -12.375115394592285
    8. '   ' → logprob: -13.000115394592285
    9. ',int' → logprob: -13.000115394592285
    10. '<|end|>' → logprob: -13.250115394592285

Token 519: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.0011516480008140206
    2. ',' → logprob: -7.7511515617370605
    3. ' int' → logprob: -7.8761515617370605
    4. ')' → logprob: -8.501152038574219
    5. 'day' → logprob: -9.751152038574219
    6. ',int' → logprob: -10.251152038574219
    7. '(int' → logprob: -11.626152038574219
    8. '   ' → logprob: -11.751152038574219
    9. ':int' → logprob: -11.876152038574219
    10. '
' → logprob: -12.376152038574219

Token 520: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -5.676981345459353e-06
    2. ' ,' → logprob: -12.500005722045898
    3. ',
' → logprob: -13.875005722045898
    4. ',b' → logprob: -14.500005722045898
    5. ')' → logprob: -15.125005722045898
    6. ',int' → logprob: -15.875005722045898
    7. ',
' → logprob: -17.6250057220459
    8. ',

' → logprob: -18.1250057220459
    9. '   ' → logprob: -18.2500057220459
    10. '‌,' → logprob: -18.3750057220459

Token 521: ' burden' (ID: 39183)
  Prédit: 'bur'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bur' → logprob: -0.018164457753300667
    2. ' burden' → logprob: -4.01816463470459
    3. 'used' → logprob: -12.26816463470459
    4. 'burst' → logprob: -12.64316463470459
    5. ' bur' → logprob: -12.76816463470459
    6. ' burdens' → logprob: -13.39316463470459
    7. '   ' → logprob: -14.51816463470459
    8. 'Bur' → logprob: -14.76816463470459
    9. ' ' → logprob: -15.01816463470459
    10. ' used' → logprob: -15.51816463470459

Token 522: '_left' (ID: 22189)
  Prédit: '_used'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_used' → logprob: -2.8087270038668066e-05
    2. ',' → logprob: -12.125027656555176
    3. ':' → logprob: -12.250027656555176
    4. 'used' → logprob: -12.375027656555176
    5. '_' → logprob: -12.875027656555176
    6. '   ' → logprob: -13.125027656555176
    7. ')' → logprob: -13.375027656555176
    8. '_USED' → logprob: -13.375027656555176
    9. ' _' → logprob: -13.875027656555176
    10. '```' → logprob: -14.375027656555176

Token 523: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.14742131531238556
    2. ',' → logprob: -2.272421360015869
    3. '):' → logprob: -4.147421360015869
    4. '=' → logprob: -4.772421360015869
    5. ')' → logprob: -5.147421360015869
    6. ' ,' → logprob: -6.397421360015869
    7. ' :' → logprob: -7.147421360015869
    8. ':int' → logprob: -7.272421360015869
    9. ' ):' → logprob: -8.397420883178711
    10. '_used' → logprob: -9.022420883178711

Token 524: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.0022111583966761827
    2. ',' → logprob: -7.502211093902588
    3. ' int' → logprob: -7.502211093902588
    4. ')' → logprob: -8.127211570739746
    5. 'self' → logprob: -8.127211570739746
    6. ':int' → logprob: -8.252211570739746
    7. ',int' → logprob: -8.752211570739746
    8. ':' → logprob: -10.752211570739746
    9. '
' → logprob: -10.752211570739746
    10. '   ' → logprob: -11.127211570739746

Token 525: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -2.2842308680992573e-05
    2. ',
' → logprob: -11.625022888183594
    3. ' ,' → logprob: -11.875022888183594
    4. ')' → logprob: -12.500022888183594
    5. '   ' → logprob: -13.375022888183594
    6. ',m' → logprob: -14.375022888183594
    7. ',int' → logprob: -14.625022888183594
    8. ',

' → logprob: -16.375022888183594
    9. '):' → logprob: -16.750022888183594
    10. ',
' → logprob: -16.750022888183594

Token 526: ' multi' (ID: 12151)
  Prédit: 'multi'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'multi' → logprob: -0.0037410527002066374
    2. ' multi' → logprob: -5.628741264343262
    3. 'ml' → logprob: -9.753741264343262
    4. 'mult' → logprob: -10.128741264343262
    5. 'used' → logprob: -10.378741264343262
    6. '   ' → logprob: -12.253741264343262
    7. 'mul' → logprob: -13.003741264343262
    8. 'live' → logprob: -13.753741264343262
    9. ' ml' → logprob: -14.378741264343262
    10. ' ' → logprob: -14.378741264343262

Token 527: '_live' (ID: 133570)
  Prédit: '_live'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_live' → logprob: -2.7252845029579476e-05
    2. '_' → logprob: -11.000027656555176
    3. '_multi' → logprob: -12.250027656555176
    4. '_alive' → logprob: -13.125027656555176
    5. ' _' → logprob: -13.750027656555176
    6. 'Live' → logprob: -14.500027656555176
    7. '_continue' → logprob: -14.750027656555176
    8. '_l' → logprob: -14.875027656555176
    9. ')' → logprob: -15.000027656555176
    10. '<|end|>' → logprob: -15.750027656555176

Token 528: '_days' (ID: 67025)
  Prédit: '_days'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_days' → logprob: -4.47757811343763e-05
    2. '_' → logprob: -11.000044822692871
    3. 's' → logprob: -11.625044822692871
    4. ' _' → logprob: -12.250044822692871
    5. '```' → logprob: -12.375044822692871
    6. ')_' → logprob: -13.000044822692871
    7. '_tokens' → logprob: -13.500044822692871
    8. 'days' → logprob: -13.875044822692871
    9. '_day' → logprob: -13.875044822692871
    10. '_d' → logprob: -14.500044822692871

Token 529: '_left' (ID: 22189)
  Prédit: '_used'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_used' → logprob: -0.04042933136224747
    2. ':' → logprob: -3.4154293537139893
    3. 'used' → logprob: -5.04042911529541
    4. ')' → logprob: -9.79042911529541
    5. '_USED' → logprob: -9.79042911529541
    6. '   ' → logprob: -10.54042911529541
    7. '):' → logprob: -10.54042911529541
    8. '_done' → logprob: -11.16542911529541
    9. ':int' → logprob: -11.41542911529541
    10. '_left' → logprob: -11.54042911529541

Token 530: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0005377820343710482
    2. ')' → logprob: -7.750537872314453
    3. '):' → logprob: -9.625537872314453
    4. ':int' → logprob: -10.250537872314453
    5. ',' → logprob: -12.500537872314453
    6. ' :' → logprob: -14.250537872314453
    7. '   ' → logprob: -14.625537872314453
    8. '):
' → logprob: -14.625537872314453
    9. 'int' → logprob: -15.375537872314453
    10. ' )' → logprob: -17.000537872314453

Token 531: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.00015693542081862688
    2. ' int' → logprob: -9.250157356262207
    3. ':int' → logprob: -10.375157356262207
    4. 'self' → logprob: -11.000157356262207
    5. ')' → logprob: -12.125157356262207
    6. ':' → logprob: -13.000157356262207
    7. '
' → logprob: -13.625157356262207
    8. '   ' → logprob: -14.250157356262207
    9. '           ' → logprob: -14.375157356262207
    10. '=int' → logprob: -14.500157356262207

Token 532: ')' (ID: 8)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.2813679277896881
    2. ')' → logprob: -1.4063678979873657
    3. '):' → logprob: -9.156368255615234
    4. ' ,' → logprob: -10.281368255615234
    5. '   ' → logprob: -10.781368255615234
    6. ' )' → logprob: -10.781368255615234
    7. '):
' → logprob: -11.531368255615234
    8. ',)' → logprob: -11.531368255615234
    9. ',
' → logprob: -12.656368255615234
    10. '       ' → logprob: -12.656368255615234

Token 533: ' ->' (ID: 2747)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.10168418288230896
    2. ')' → logprob: -2.726684093475342
    3. '->' → logprob: -3.726684093475342
    4. '):' → logprob: -5.601684093475342
    5. ' ->' → logprob: -6.101684093475342
    6. ')->' → logprob: -6.851684093475342
    7. ':
' → logprob: -9.4766845703125
    8. ',' → logprob: -10.1016845703125
    9. '):
' → logprob: -10.6016845703125
    10. '   ' → logprob: -10.8516845703125

Token 534: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -8.2994620242971e-06
    2. ' int' → logprob: -12.500008583068848
    3. 'List' → logprob: -13.375008583068848
    4. '[int' → logprob: -13.750008583068848
    5. 'Iterator' → logprob: -13.875008583068848
    6. 'Tuple' → logprob: -14.500008583068848
    7. '   ' → logprob: -15.750008583068848
    8. '
' → logprob: -15.750008583068848
    9. '(int' → logprob: -16.12500762939453
    10. 'Int' → logprob: -17.00000762939453

Token 535: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.003623000578954816
    2. '):' → logprob: -6.128623008728027
    3. ':
' → logprob: -6.628623008728027
    4. '       ' → logprob: -9.503623008728027
    5. '):
' → logprob: -10.878623008728027
    6. ')' → logprob: -11.878623008728027
    7. ',' → logprob: -12.628623008728027
    8. '():' → logprob: -12.878623008728027
    9. '{' → logprob: -13.128623008728027
    10. '<|end|>' → logprob: -13.253623008728027

Token 536: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0064847953617572784
    2. 'if' → logprob: -5.6314849853515625
    3. ' if' → logprob: -5.8814849853515625
    4. '   ' → logprob: -10.006484985351562
    5. '<|end|>' → logprob: -10.631484985351562
    6. ',' → logprob: -11.756484985351562
    7. '	if' → logprob: -12.881484985351562
    8. ' ' → logprob: -13.631484985351562
    9. '    ' → logprob: -13.756484985351562
    10. '	' → logprob: -14.006484985351562

Token 537: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.0005664954078383744
    2. ' if' → logprob: -7.500566482543945
    3. '           ' → logprob: -11.250566482543945
    4. '       ' → logprob: -14.750566482543945
    5. '   ' → logprob: -16.625566482543945
    6. 'If' → logprob: -17.875566482543945
    7. '	if' → logprob: -18.375566482543945
    8. ' ' → logprob: -19.375566482543945
    9. '               ' → logprob: -19.625566482543945
    10. 'result' → logprob: -19.875566482543945

Token 538: ' day' (ID: 2163)
  Prédit: ' day'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' day' → logprob: -0.0004306692280806601
    2. 'day' → logprob: -7.750430583953857
    3. '_day' → logprob: -18.000431060791016
    4. '(day' → logprob: -18.125431060791016
    5. ' ' → logprob: -18.875431060791016
    6. ' ' → logprob: -20.125431060791016
    7. ' None' → logprob: -20.875431060791016
    8. ')' → logprob: -21.125431060791016
    9. '.day' → logprob: -21.125431060791016
    10. ' self' → logprob: -21.250431060791016

Token 539: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.25215405225753784
    2. '==' → logprob: -1.5021541118621826
    3. ' >=' → logprob: -9.252154350280762
    4. '>=' → logprob: -9.627154350280762
    5. '=' → logprob: -10.127154350280762
    6. ')' → logprob: -11.877154350280762
    7. '===' → logprob: -12.377154350280762
    8. ' >' → logprob: -12.752154350280762
    9. ')==' → logprob: -13.127154350280762
    10. '>' → logprob: -13.627154350280762

Token 540: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.20143333077430725
    2. ' self' → logprob: -1.7014333009719849
    3. '0' → logprob: -11.326433181762695
    4. '           ' → logprob: -13.451433181762695
    5. '[self' → logprob: -13.451433181762695
    6. '(self' → logprob: -13.576433181762695
    7. ' ' → logprob: -13.576433181762695
    8. '	self' → logprob: -14.326433181762695
    9. '               ' → logprob: -14.576433181762695
    10. '<|end|>' → logprob: -15.201433181762695

Token 541: '.p' (ID: 1201)
  Prédit: '.p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.p' → logprob: -0.0006522706826217473
    2. '.' → logprob: -7.875652313232422
    3. ' .' → logprob: -8.375652313232422
    4. 'p' → logprob: -11.125652313232422
    5. '.day' → logprob: -11.125652313232422
    6. '   ' → logprob: -12.500652313232422
    7. '.days' → logprob: -13.000652313232422
    8. '       ' → logprob: -13.750652313232422
    9. '           ' → logprob: -14.250652313232422
    10. ' p' → logprob: -14.250652313232422

Token 542: '.days' (ID: 118772)
  Prédit: '.days'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.days' → logprob: -1.2352385965641588e-05
    2. '.' → logprob: -12.000012397766113
    3. '.day' → logprob: -12.875012397766113
    4. '.d' → logprob: -13.000012397766113
    5. ' .' → logprob: -13.625012397766113
    6. '   ' → logprob: -16.500011444091797
    7. 'days' → logprob: -17.375011444091797
    8. '(days' → logprob: -17.750011444091797
    9. ').' → logprob: -18.375011444091797
    10. '       ' → logprob: -18.500011444091797

Token 543: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.04442348703742027
    2. ':
' → logprob: -3.1694235801696777
    3. ':return' → logprob: -6.669423580169678
    4. '           ' → logprob: -9.54442310333252
    5. '               ' → logprob: -10.04442310333252
    6. ' or' → logprob: -11.29442310333252
    7. 'return' → logprob: -11.41942310333252
    8. '       ' → logprob: -11.91942310333252
    9. ':
' → logprob: -13.04442310333252
    10. '):
' → logprob: -13.41942310333252

Token 544: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.038847241550683975
    2. '           ' → logprob: -3.2888472080230713
    3. 'return' → logprob: -7.66384744644165
    4. ' return' → logprob: -8.413846969604492
    5. '       ' → logprob: -10.038846969604492
    6. '                       ' → logprob: -10.788846969604492
    7. '<|end|>' → logprob: -10.788846969604492
    8. ':' → logprob: -11.538846969604492
    9. ':return' → logprob: -12.663846969604492
    10. '                   ' → logprob: -13.038846969604492

Token 545: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.051103103905916214
    2. '           ' → logprob: -3.551103115081787
    3. '               ' → logprob: -4.551103115081787
    4. ' return' → logprob: -4.551103115081787
    5. '                   ' → logprob: -12.426102638244629
    6. '   ' → logprob: -12.426102638244629
    7. '{return' → logprob: -12.676102638244629
    8. '	return' → logprob: -13.676102638244629
    9. ':return' → logprob: -13.801102638244629
    10. '       ' → logprob: -14.426102638244629

Token 546: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.8624639324116288e-06
    2. ' ' → logprob: -13.250001907348633
    3. '           ' → logprob: -17.625001907348633
    4. '               ' → logprob: -19.250001907348633
    5. '                   ' → logprob: -21.125001907348633
    6. '   ' → logprob: -21.500001907348633
    7. ' ' → logprob: -21.750001907348633
    8. '                       ' → logprob: -22.125001907348633
    9. '۰' → logprob: -23.625001907348633
    10. '             ' → logprob: -23.625001907348633

Token 547: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -16.0
    3. '   ' → logprob: -20.625
    4. '```' → logprob: -21.0
    5. '۰' → logprob: -22.25
    6. '``' → logprob: -22.75
    7. '000' → logprob: -23.125
    8. 'return' → logprob: -23.25
    9. '           ' → logprob: -23.375
    10. 'int' → logprob: -23.5

Token 548: '

' (ID: 279)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.055093176662921906
    2. '
' → logprob: -3.180093288421631
    3. '            
' → logprob: -4.680093288421631
    4. '    
' → logprob: -6.430093288421631
    5. '        
' → logprob: -7.930093288421631
    6. '\n' → logprob: -8.180092811584473
    7. '       ' → logprob: -8.680092811584473
    8. '  
' → logprob: -8.930092811584473
    9. '<|end|>' → logprob: -9.305092811584473
    10. ' 
' → logprob: -11.430092811584473

Token 549: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.013987663201987743
    2. '       ' → logprob: -5.0139875411987305
    3. '            
' → logprob: -5.7639875411987305
    4. '
' → logprob: -6.2639875411987305
    5. '        
' → logprob: -7.2639875411987305
    6. '    
' → logprob: -7.7639875411987305
    7. ' 
' → logprob: -8.01398754119873
    8. '   ' → logprob: -8.63898754119873
    9. '```' → logprob: -9.51398754119873
    10. '<|end|>' → logprob: -10.13898754119873

Token 550: ' best' (ID: 1636)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.4019564390182495
    2. 'best' (adapté à ' best') → logprob: -1.1519564390182495
    3. 'result' → logprob: -4.901956558227539
    4. 'res' → logprob: -5.401956558227539
    5. 'ans' → logprob: -6.401956558227539
    6. '           ' → logprob: -7.151956558227539
    7. 'answer' → logprob: -7.651956558227539
    8. ' max' → logprob: -9.651956558227539
    9. ' best' → logprob: -9.901956558227539
    10. ' result' → logprob: -14.901956558227539

Token 551: '_profit' (ID: 186239)
  Prédit: '_profit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_profit' → logprob: -0.002909488743171096
    2. '_score' → logprob: -6.1279096603393555
    3. '_value' → logprob: -8.377909660339355
    4. '_return' → logprob: -8.752909660339355
    5. '_val' → logprob: -9.502909660339355
    6. '_reward' → logprob: -9.627909660339355
    7. '_' → logprob: -10.127909660339355
    8. '_gain' → logprob: -10.252909660339355
    9. '_pro' → logprob: -10.627909660339355
    10. ' =' → logprob: -10.752909660339355

Token 552: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.31326398253440857
    2. '=' → logprob: -1.313264012336731
    3. ':' → logprob: -13.563263893127441
    4. ',' → logprob: -15.438263893127441
    5. ' ' → logprob: -15.563263893127441
    6. '_' → logprob: -15.813263893127441
    7. '           ' → logprob: -15.813263893127441
    8. ')' → logprob: -16.438264846801758
    9. '   ' → logprob: -16.563264846801758
    10. '    ' → logprob: -17.688264846801758

Token 553: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0008058178937062621
    2. ' ' → logprob: -7.375805854797363
    3. '-' → logprob: -9.375805854797363
    4. '           ' → logprob: -9.625805854797363
    5. 'float' → logprob: -11.000805854797363
    6. ' -' → logprob: -11.625805854797363
    7. '   ' → logprob: -14.000805854797363
    8. ' float' → logprob: -14.125805854797363
    9. '               ' → logprob: -14.250805854797363
    10. 'max' → logprob: -15.750805854797363

Token 554: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0033626044169068336
    2. 'float' → logprob: -5.753362655639648
    3. '-' → logprob: -8.628362655639648
    4. 'dp' → logprob: -12.753362655639648
    5. '-d' → logprob: -14.128362655639648
    6. '   ' → logprob: -14.628362655639648
    7. 'max' → logprob: -14.628362655639648
    8. ' ' → logprob: -15.003362655639648
    9. ' float' → logprob: -15.253362655639648
    10. '-s' → logprob: -15.753362655639648

Token 555: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0009592238930054009
    2. '            
' → logprob: -7.250959396362305
    3. '
' → logprob: -8.750959396362305
    4. ' for' → logprob: -10.375959396362305
    5. 'for' → logprob: -10.500959396362305
    6. '    
' → logprob: -11.625959396362305
    7. ',' → logprob: -12.500959396362305
    8. ' 
' → logprob: -12.625959396362305
    9. '        
' → logprob: -12.875959396362305
    10. '       ' → logprob: -13.125959396362305

Token 556: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0006304710987024009
    2. ' for' → logprob: -7.8756303787231445
    3. 'for' → logprob: -8.500630378723145
    4. '
' → logprob: -10.875630378723145
    5. '       ' → logprob: -11.125630378723145
    6. '            
' → logprob: -11.500630378723145
    7. '   ' → logprob: -14.125630378723145
    8. '               ' → logprob: -14.375630378723145
    9. ',' → logprob: -14.375630378723145
    10. '        
' → logprob: -14.875630378723145

Token 557: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0015740215312689543
    2. '           ' → logprob: -6.5015740394592285
    3. 'bur' → logprob: -10.37657356262207
    4. ' for' → logprob: -10.62657356262207
    5. '#' (adapté à ' #') → logprob: -11.25157356262207
    6. '            
' → logprob: -13.87657356262207
    7. 'params' → logprob: -14.12657356262207
    8. 'parameters' → logprob: -14.87657356262207
    9. '               ' → logprob: -15.00157356262207
    10. '
' → logprob: -15.75157356262207

Token 558: ' Try' (ID: 14720)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0034326924942433834
    2. '#' → logprob: -6.253432750701904
    3. '           ' → logprob: -6.878432750701904
    4. ' for' → logprob: -7.753432750701904
    5. 'valid' → logprob: -10.878432273864746
    6. 'bur' → logprob: -11.628432273864746
    7. 'live' → logprob: -12.628432273864746
    8. 'possible' → logprob: -12.753432273864746
    9. '               ' → logprob: -13.003432273864746
    10. ' #' → logprob: -13.628432273864746

Token 559: ' all' (ID: 722)
  Prédit: ' live'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' live' → logprob: -1.001656174659729
    2. 'live' → logprob: -1.376656174659729
    3. ' for' → logprob: -1.876656174659729
    4. 'for' → logprob: -2.5016560554504395
    5. '           ' → logprob: -2.7516560554504395
    6. 'valid' → logprob: -3.2516560554504395
    7. ' valid' → logprob: -3.7516560554504395
    8. '               ' → logprob: -4.8766560554504395
    9. ' subset' → logprob: -5.8766560554504395
    10. ' subsets' → logprob: -6.1266560554504395

Token 560: ' valid' (ID: 4529)
  Prédit: ' live'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' live' → logprob: -0.2359205186367035
    2. 'live' → logprob: -1.9859205484390259
    3. ' valid' → logprob: -2.9859204292297363
    4. 'valid' → logprob: -4.110920429229736
    5. '           ' → logprob: -6.235920429229736
    6. ' subsets' → logprob: -6.235920429229736
    7. ' possible' → logprob: -7.235920429229736
    8. ' sets' → logprob: -7.860920429229736
    9. 'possible' → logprob: -8.110920906066895
    10. ' next' → logprob: -8.985920906066895

Token 561: ' live' (ID: 4561)
  Prédit: '_live'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_live' → logprob: -0.00015419373812619597
    2. 'live' → logprob: -9.500154495239258
    3. '_sets' → logprob: -9.500154495239258
    4. ' live' → logprob: -13.000154495239258
    5. 'Live' → logprob: -14.375154495239258
    6. 'sets' → logprob: -15.000154495239258
    7. '_today' → logprob: -15.125154495239258
    8. '           ' → logprob: -15.125154495239258
    9. '       ' → logprob: -15.500154495239258
    10. '_set' → logprob: -15.750154495239258

Token 562: ' sets' (ID: 11982)
  Prédit: '_sets'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sets' → logprob: -0.0018103641923516989
    2. '_set' → logprob: -6.626810550689697
    3. '           ' → logprob: -8.751810073852539
    4. '_' → logprob: -9.126810073852539
    5. 'sets' → logprob: -9.876810073852539
    6. ' sets' → logprob: -10.126810073852539
    7. ' _' → logprob: -10.251810073852539
    8. '       ' → logprob: -10.876810073852539
    9. 's' → logprob: -11.251810073852539
    10. '               ' → logprob: -11.501810073852539

Token 563: ' on' (ID: 402)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.7045825123786926
    2. ' for' → logprob: -1.0795824527740479
    3. ':' → logprob: -2.079582452774048
    4. 'for' → logprob: -3.454582452774048
    5. ' in' → logprob: -5.704582691192627
    6. ',' → logprob: -6.204582691192627
    7. ' =' → logprob: -6.454582691192627
    8. ':
' → logprob: -7.829582691192627
    9. '=' → logprob: -7.954582691192627
    10. ' (' → logprob: -8.454582214355469

Token 564: ' this' (ID: 495)
  Prédit: 'day'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'day' → logprob: -0.10108572989702225
    2. ' day' → logprob: -2.351085662841797
    3. '(day' → logprob: -7.601085662841797
    4. '           ' → logprob: -8.726085662841797
    5. 'the' → logprob: -8.726085662841797
    6. ')' → logprob: -10.851085662841797
    7. ' the' → logprob: -11.476085662841797
    8. '_day' → logprob: -12.226085662841797
    9. 'today' → logprob: -13.101085662841797
    10. '```' → logprob: -13.101085662841797

Token 565: ' day' (ID: 2163)
  Prédit: ' day'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' day' → logprob: -0.23086819052696228
    2. 'day' → logprob: -1.6058682203292847
    3. '_day' → logprob: -6.105868339538574
    4. '(day' → logprob: -6.230868339538574
    5. '           ' → logprob: -6.980868339538574
    6. '[' → logprob: -9.605868339538574
    7. '               ' → logprob: -9.730868339538574
    8. ',' → logprob: -10.355868339538574
    9. '   ' → logprob: -10.480868339538574
    10. ')' → logprob: -10.980868339538574

Token 566: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.027515292167663574
    2. ' for' → logprob: -4.152515411376953
    3. 'for' → logprob: -4.527515411376953
    4. ',' → logprob: -8.152515411376953
    5. '            
' → logprob: -9.277515411376953
    6. ':' → logprob: -9.402515411376953
    7. '
' → logprob: -9.527515411376953
    8. '<|end|>' → logprob: -11.152515411376953
    9. '       ' → logprob: -11.402515411376953
    10. ':
' → logprob: -11.402515411376953

Token 567: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0024228678084909916
    2. ' for' → logprob: -6.87742280960083
    3. 'for' → logprob: -7.37742280960083
    4. ':' → logprob: -7.75242280960083
    5. ',' → logprob: -8.752423286437988
    6. '       ' → logprob: -9.002423286437988
    7. '            
' → logprob: -11.252423286437988
    8. '               ' → logprob: -11.877423286437988
    9. '   ' → logprob: -12.127423286437988
    10. ':
' → logprob: -12.502423286437988

Token 568: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.23670712113380432
    2. ' for' → logprob: -1.736707091331482
    3. '           ' → logprob: -3.3617072105407715
    4. '
' → logprob: -14.486706733703613
    5. '       ' → logprob: -14.611706733703613
    6. '               ' → logprob: -14.861706733703613
    7. '   ' → logprob: -15.361706733703613
    8. '            
' → logprob: -15.736706733703613
    9. '_for' → logprob: -15.861706733703613
    10. '	for' → logprob: -15.986706733703613

Token 569: ' live' (ID: 4561)
  Prédit: 'live'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'live' → logprob: -0.010410015471279621
    2. ' live' → logprob: -4.635409832000732
    3. 'regions' → logprob: -7.510409832000732
    4. ' regions' → logprob: -10.13541030883789
    5. 'subset' → logprob: -10.26041030883789
    6. 'mask' → logprob: -12.26041030883789
    7. 'region' → logprob: -12.38541030883789
    8. 'ls' → logprob: -12.63541030883789
    9. '_live' → logprob: -12.63541030883789
    10. 'current' → logprob: -13.01041030883789

Token 570: '_set' (ID: 5451)
  Prédit: '_set'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_set' → logprob: -0.009823736734688282
    2. '_sets' → logprob: -4.634823799133301
    3. '_regions' → logprob: -10.3848237991333
    4. 'set' → logprob: -10.8848237991333
    5. '_' → logprob: -11.7598237991333
    6. '_subset' → logprob: -12.5098237991333
    7. 's' → logprob: -13.2598237991333
    8. ' _' → logprob: -13.7598237991333
    9. '_region' → logprob: -14.7598237991333
    10. '```' → logprob: -15.0098237991333

Token 571: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.04211313650012016
    2. ',' → logprob: -3.5421130657196045
    3. 'in' → logprob: -4.792113304138184
    4. ' ,' → logprob: -5.917113304138184
    5. ' ' → logprob: -6.917113304138184
    6. '_bits' → logprob: -9.667113304138184
    7. '  ' → logprob: -9.917113304138184
    8. '_in' → logprob: -10.542113304138184
    9. '_bit' → logprob: -10.542113304138184
    10. ')' → logprob: -10.792113304138184

Token 572: ' valid' (ID: 4529)
  Prédit: 'valid'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'valid' → logprob: -4.5491004129871726e-05
    2. ' valid' → logprob: -10.000045776367188
    3. '	valid' → logprob: -19.375045776367188
    4. '(valid' → logprob: -19.625045776367188
    5. '   ' → logprob: -20.750045776367188
    6. '.valid' → logprob: -22.000045776367188
    7. '_valid' → logprob: -22.625045776367188
    8. 'validated' → logprob: -23.625045776367188
    9. '           ' → logprob: -23.750045776367188
    10. '
' → logprob: -23.875045776367188

Token 573: '_live' (ID: 133570)
  Prédit: '_live'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_live' → logprob: -0.2528534233570099
    2. '_sets' → logprob: -1.5028533935546875
    3. '_set' → logprob: -7.3778533935546875
    4. '_' → logprob: -8.377853393554688
    5. 'live' → logprob: -10.127853393554688
    6. 'sets' → logprob: -11.877853393554688
    7. '_valid' → logprob: -12.127853393554688
    8. '       ' → logprob: -13.252853393554688
    9. ' sets' → logprob: -13.377853393554688
    10. '```' → logprob: -13.502853393554688

Token 574: '_sets' (ID: 56707)
  Prédit: '_sets'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sets' → logprob: -0.0008934747893363237
    2. '_set' → logprob: -7.125893592834473
    3. 'sets' → logprob: -9.875893592834473
    4. '_' → logprob: -10.500893592834473
    5. ' sets' → logprob: -13.125893592834473
    6. '           ' → logprob: -13.250893592834473
    7. ')' → logprob: -13.375893592834473
    8. 's' → logprob: -13.875893592834473
    9. 'Sets' → logprob: -14.250893592834473
    10. '```' → logprob: -14.500893592834473

Token 575: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.04343884065747261
    2. ':
' → logprob: -3.1684389114379883
    3. '               ' → logprob: -8.043438911437988
    4. '):' → logprob: -10.793438911437988
    5. '):
' → logprob: -10.793438911437988
    6. ' :' → logprob: -10.793438911437988
    7. '           ' → logprob: -10.918438911437988
    8. ',' → logprob: -11.293438911437988
    9. ':
' → logprob: -11.543438911437988
    10. ':

' → logprob: -12.793438911437988

Token 576: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.06941207498311996
    2. ':' → logprob: -2.8194119930267334
    3. ':
' → logprob: -6.0694122314453125
    4. '<|end|>' → logprob: -6.3194122314453125
    5. '                
' → logprob: -6.4444122314453125
    6. '                ' → logprob: -8.194412231445312
    7. '           ' → logprob: -8.319412231445312
    8. ',' → logprob: -8.319412231445312
    9. ' :' → logprob: -8.569412231445312
    10. ' ' → logprob: -8.944412231445312

Token 577: ' burden' (ID: 39183)
  Prédit: 'bur'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'bur' → logprob: -0.4176832139492035
    2. '               ' → logprob: -2.0426831245422363
    3. '#' → logprob: -2.6676831245422363
    4. 'live' → logprob: -3.0426831245422363
    5. '                   ' → logprob: -3.4176831245422363
    6. 'total' → logprob: -3.7926831245422363
    7. 'day' → logprob: -4.042683124542236
    8. 'if' → logprob: -5.167683124542236
    9. 'regions' → logprob: -5.167683124542236
    10. 'days' → logprob: -6.042683124542236

Token 578: '_sum' (ID: 29859)
  Prédit: '_used'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_used' → logprob: -0.1172962635755539
    2. '_cost' → logprob: -2.8672962188720703
    3. ' =' → logprob: -3.2422962188720703
    4. '=' → logprob: -5.36729621887207
    5. '               ' → logprob: -6.24229621887207
    6. '_required' → logprob: -6.24229621887207
    7. '_needed' → logprob: -6.24229621887207
    8. '_consum' → logprob: -6.61729621887207
    9. 'used' → logprob: -7.49229621887207
    10. '                   ' → logprob: -7.74229621887207

Token 579: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6414189338684082
    2. ' =' → logprob: -0.7664189338684082
    3. '+' → logprob: -5.766418933868408
    4. ' +' → logprob: -6.266418933868408
    5. '                   ' → logprob: -6.391418933868408
    6. '               ' → logprob: -6.516418933868408
    7. ' +=' → logprob: -9.26641845703125
    8. '           ' → logprob: -9.39141845703125
    9. '                ' → logprob: -9.76641845703125
    10. '+=' → logprob: -9.89141845703125

Token 580: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.045343924313783646
    2. 'sum' → logprob: -3.1703438758850098
    3. ' sum' → logprob: -6.67034387588501
    4. ' ' → logprob: -6.92034387588501
    5. '               ' → logprob: -10.420344352722168
    6. '                   ' → logprob: -10.420344352722168
    7. 'self' → logprob: -11.170344352722168
    8. '   ' → logprob: -12.170344352722168
    9. '           ' → logprob: -12.920344352722168
    10. '                       ' → logprob: -13.420344352722168

Token 581: '0' (ID: 15)
  Prédit: 'sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sum' → logprob: -0.4744112193584442
    2. '0' → logprob: -0.9744112491607666
    3. ' sum' → logprob: -8.349411010742188
    4. 'self' → logprob: -10.224411010742188
    5. ' ' → logprob: -10.974411010742188
    6. '               ' → logprob: -11.349411010742188
    7. '                   ' → logprob: -11.474411010742188
    8. '   ' → logprob: -11.474411010742188
    9. '           ' → logprob: -13.099411010742188
    10. '                       ' → logprob: -13.724411010742188

Token 582: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0014311899431049824
    2. ' for' → logprob: -7.626430988311768
    3. '<|end|>' → logprob: -7.876430988311768
    4. 'for' → logprob: -8.001431465148926
    5. '                
' → logprob: -10.126431465148926
    6. '              ' → logprob: -10.126431465148926
    7. '                ' → logprob: -10.251431465148926
    8. ',' → logprob: -10.251431465148926
    9. ')' → logprob: -10.751431465148926
    10. '                   ' → logprob: -11.501431465148926

Token 583: '               ' (ID: 506)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.3519042432308197
    2. '               ' → logprob: -1.601904273033142
    3. ' for' → logprob: -2.4769041538238525
    4. '                   ' → logprob: -5.476904392242432
    5. '                ' → logprob: -6.851904392242432
    6. '
' → logprob: -7.101904392242432
    7. '<|end|>' → logprob: -7.101904392242432
    8. '           ' → logprob: -7.226904392242432
    9. '                       ' → logprob: -7.726904392242432
    10. ')' → logprob: -7.726904392242432

Token 584: ' profit' (ID: 15971)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.03842964768409729
    2. 'profit' (adapté à ' profit') → logprob: -3.4134297370910645
    3. '               ' → logprob: -5.7884297370910645
    4. 'regions' → logprob: -6.9134297370910645
    5. '                   ' → logprob: -8.663429260253906
    6. 'valid' → logprob: -9.038429260253906
    7. 'day' → logprob: -9.663429260253906
    8. ' for' → logprob: -9.788429260253906
    9. 'bit' → logprob: -9.913429260253906
    10. 'expected' → logprob: -10.163429260253906

Token 585: '_sum' (ID: 29859)
  Prédit: '_sum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sum' → logprob: -0.271192342042923
    2. ' =' → logprob: -1.7711923122406006
    3. '=' → logprob: -2.7711923122406006
    4. 'sum' → logprob: -7.14619255065918
    5. '_set' → logprob: -7.27119255065918
    6. '_' → logprob: -7.52119255065918
    7. 'for' → logprob: -7.77119255065918
    8. '_list' → logprob: -7.77119255065918
    9. '               ' → logprob: -7.77119255065918
    10. '                   ' → logprob: -8.27119255065918

Token 586: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.12709881365299225
    2. ' =' → logprob: -2.127098798751831
    3. '               ' → logprob: -9.00209903717041
    4. '                   ' → logprob: -10.37709903717041
    5. '           ' → logprob: -12.25209903717041
    6. '                ' → logprob: -12.50209903717041
    7. 'for' → logprob: -13.25209903717041
    8. ' ' → logprob: -13.75209903717041
    9. '   ' → logprob: -14.12709903717041
    10. ')' → logprob: -14.37709903717041

Token 587: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.001171056181192398
    2. ' ' → logprob: -6.751171112060547
    3. '               ' → logprob: -14.501171112060547
    4. '                   ' → logprob: -15.126171112060547
    5. '   ' → logprob: -18.126171112060547
    6. '                       ' → logprob: -18.376171112060547
    7. '                 ' → logprob: -18.626171112060547
    8. '           ' → logprob: -18.626171112060547
    9. '=' → logprob: -19.126171112060547
    10. 'sum' → logprob: -19.376171112060547

Token 588: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -9.014684110297821e-06
    2. ' ' → logprob: -11.625008583068848
    3. '               ' → logprob: -18.375009536743164
    4. '
' → logprob: -19.250009536743164
    5. '   ' → logprob: -19.625009536743164
    6. '                   ' → logprob: -19.750009536743164
    7. 'sum' → logprob: -20.000009536743164
    8. '           ' → logprob: -20.125009536743164
    9. 'self' → logprob: -21.625009536743164
    10. '  ' → logprob: -21.875009536743164

Token 589: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0017090904293581843
    2. ' for' → logprob: -6.751708984375
    3. 'for' → logprob: -8.001708984375
    4. '                
' → logprob: -9.626708984375
    5. '
' → logprob: -9.876708984375
    6. ',' → logprob: -10.376708984375
    7. '<|end|>' → logprob: -11.001708984375
    8. ')' → logprob: -11.501708984375
    9. '              ' → logprob: -12.251708984375
    10. '           ' → logprob: -12.501708984375

Token 590: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.15790733695030212
    2. ' for' → logprob: -2.157907247543335
    3. 'for' → logprob: -4.032907485961914
    4. '                
' → logprob: -4.782907485961914
    5. '
' → logprob: -6.407907485961914
    6. ' 
' → logprob: -6.782907485961914
    7. '                ' → logprob: -8.032907485961914
    8. '  
' → logprob: -8.157907485961914
    9. '              ' → logprob: -8.907907485961914
    10. '           ' → logprob: -9.282907485961914

Token 591: ' count' (ID: 3605)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.02407209388911724
    2. '               ' → logprob: -4.649072170257568
    3. ' for' → logprob: -4.774072170257568
    4. 'valid' → logprob: -6.274072170257568
    5. 'regions' → logprob: -6.274072170257568
    6. '                   ' → logprob: -6.524072170257568
    7. 'bit' → logprob: -8.39907169342041
    8. ' regions' → logprob: -9.77407169342041
    9. 'region' → logprob: -10.02407169342041
    10. '           ' → logprob: -10.52407169342041

Token 592: '_l' (ID: 1478)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.4016484022140503
    2. '=' → logprob: -1.2766484022140503
    3. '_regions' → logprob: -3.02664852142334
    4. 'regions' → logprob: -6.02664852142334
    5. '_tokens' → logprob: -8.90164852142334
    6. '=set' → logprob: -8.90164852142334
    7. '   ' → logprob: -9.27664852142334
    8. '_live' → logprob: -9.90164852142334
    9. ' ' → logprob: -9.90164852142334
    10. ',' → logprob: -10.02664852142334

Token 593: 'ives' (ID: 2264)
  Prédit: 'ive'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ive' → logprob: -0.0021416936069726944
    2. 'en' → logprob: -6.50214147567749
    3. '=' → logprob: -8.877141952514648
    4. ' =' → logprob: -9.002141952514648
    5. ' ive' → logprob: -9.127141952514648
    6. 'ist' → logprob: -9.377141952514648
    7. 'i' → logprob: -9.502141952514648
    8. 'ength' → logprob: -10.752141952514648
    9. 'ocal' → logprob: -11.002141952514648
    10. 'iv' → logprob: -11.127141952514648

Token 594: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.4741508662700653
    2. '=' → logprob: -0.9741508960723877
    3. '_regions' → logprob: -10.474150657653809
    4. 'regions' → logprob: -11.099150657653809
    5. '   ' → logprob: -11.849150657653809
    6. ' ' → logprob: -12.099150657653809
    7. ':' → logprob: -12.974150657653809
    8. 'd' → logprob: -12.974150657653809
    9. ',' → logprob: -13.224150657653809
    10. 'for' → logprob: -13.349150657653809

Token 595: ' bin' (ID: 6958)
  Prédit: 'bin'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bin' → logprob: -0.1590002179145813
    2. '0' → logprob: -2.1590001583099365
    3. ' bin' → logprob: -3.5340001583099365
    4. ' ' → logprob: -6.159000396728516
    5. 'len' → logprob: -8.784000396728516
    6. 'live' → logprob: -10.534000396728516
    7. '(bin' → logprob: -10.534000396728516
    8. '   ' → logprob: -10.909000396728516
    9. ' len' → logprob: -11.909000396728516
    10. ' live' → logprob: -12.034000396728516

Token 596: '(l' (ID: 4179)
  Prédit: '(l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(l' → logprob: -0.00597667321562767
    2. '(' → logprob: -5.130976676940918
    3. '(
' → logprob: -10.130976676940918
    4. 'live' → logprob: -12.755976676940918
    5. ' (' → logprob: -13.880976676940918
    6. ')' → logprob: -14.130976676940918
    7. '(

' → logprob: -14.380976676940918
    8. '[l' → logprob: -14.505976676940918
    9. ' live' → logprob: -14.630976676940918
    10. '[' → logprob: -15.130976676940918

Token 597: 'ive' (ID: 585)
  Prédit: '(l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(l' → logprob: -0.32472679018974304
    2. 'ive' → logprob: -1.4497268199920654
    3. 'live' → logprob: -3.4497268199920654
    4. '(' → logprob: -4.699726581573486
    5. '(
' → logprob: -7.699726581573486
    6. ')' → logprob: -8.074727058410645
    7. 'iven' → logprob: -8.324727058410645
    8. 'ives' → logprob: -9.074727058410645
    9. 'ove' → logprob: -9.199727058410645
    10. 'iving' → logprob: -9.324727058410645

Token 598: '_set' (ID: 5451)
  Prédit: '_set'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_set' → logprob: -0.0016086475225165486
    2. 'set' → logprob: -7.376608848571777
    3. '(l' → logprob: -7.501608848571777
    4. 'live' → logprob: -8.626608848571777
    5. '(' → logprob: -9.126608848571777
    6. ')' → logprob: -9.626608848571777
    7. '(set' → logprob: -11.126608848571777
    8. '(
' → logprob: -11.126608848571777
    9. '(_' → logprob: -11.751608848571777
    10. '_' → logprob: -12.001608848571777

Token 599: ').' (ID: 741)
  Prédit: ').'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ').' → logprob: -0.02644868940114975
    2. '()).' → logprob: -3.7764487266540527
    3. '(l' → logprob: -6.651448726654053
    4. '().' → logprob: -6.776448726654053
    5. ')' → logprob: -8.026448249816895
    6. '(' → logprob: -8.276448249816895
    7. '()' → logprob: -10.026448249816895
    8. '('' → logprob: -10.151448249816895
    9. 'live' → logprob: -10.901448249816895
    10. '   ' → logprob: -11.026448249816895

Token 600: 'count' (ID: 5420)
  Prédit: 'count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' → logprob: -3.7385154428193346e-05
    2. ' count' → logprob: -10.25003719329834
    3. ' ' → logprob: -14.00003719329834
    4. '   ' → logprob: -14.25003719329834
    5. '```' → logprob: -15.00003719329834
    6. 'bit' → logprob: -16.625038146972656
    7. '	count' → logprob: -17.500038146972656
    8. '.count' → logprob: -17.500038146972656
    9. 'ount' → logprob: -17.625038146972656
    10. '  ' → logprob: -18.375038146972656

Token 601: '('' (ID: 706)
  Prédit: '(''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('' → logprob: -0.018590712919831276
    2. '(' → logprob: -4.143590927124023
    3. '("("' → logprob: -6.268590927124023
    4. '("' → logprob: -7.393590927124023
    5. ''' → logprob: -10.893590927124023
    6. '(
' → logprob: -12.268590927124023
    7. '1' → logprob: -12.643590927124023
    8. '((' → logprob: -12.768590927124023
    9. '(',' → logprob: -12.893590927124023
    10. '()' → logprob: -13.018590927124023

Token 602: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: 0.0
    2. '')' → logprob: -22.75
    3. '１' → logprob: -22.875
    4. '('' → logprob: -23.125
    5. 'One' → logprob: -23.625
    6. 'one' → logprob: -24.125
    7. '۱' → logprob: -24.75
    8. ')' → logprob: -24.75
    9. ' ' → logprob: -25.125
    10. '_one' → logprob: -25.5

Token 603: '')
' (ID: 2515)
  Prédit: '')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '')' → logprob: -0.2083953469991684
    2. '()' → logprob: -1.9583953619003296
    3. '('' → logprob: -3.20839524269104
    4. ')' → logprob: -5.083395481109619
    5. '')
' → logprob: -8.708395004272461
    6. ''' → logprob: -8.833395004272461
    7. '(' → logprob: -10.333395004272461
    8. '())' → logprob: -10.583395004272461
    9. ' ')' → logprob: -11.458395004272461
    10. '")' → logprob: -11.833395004272461

Token 604: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.09159094840288162
    2. '<|end|>' → logprob: -3.4665908813476562
    3. '                
' → logprob: -3.8415908813476562
    4. ' for' → logprob: -4.341590881347656
    5. '                ' → logprob: -5.591590881347656
    6. '
' → logprob: -5.591590881347656
    7. ' 
' → logprob: -5.716590881347656
    8. ' ' → logprob: -5.841590881347656
    9. ')' → logprob: -6.341590881347656
    10. '  
' → logprob: -6.841590881347656

Token 605: ' if' (ID: 538)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.38452139496803284
    2. 'if' (adapté à ' if') → logprob: -1.7595213651657104
    3. ' for' → logprob: -2.509521484375
    4. '               ' → logprob: -3.384521484375
    5. ' if' → logprob: -3.884521484375
    6. '```' → logprob: -5.634521484375
    7. ' day' → logprob: -6.634521484375
    8. 'day' → logprob: -6.634521484375
    9. 'valid' → logprob: -6.884521484375
    10. '
' → logprob: -7.134521484375

Token 606: ' count' (ID: 3605)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.4363887310028076
    2. ' count' → logprob: -1.8113887310028076
    3. ' burden' → logprob: -1.8113887310028076
    4. 'live' → logprob: -4.686388969421387
    5. ' live' → logprob: -5.436388969421387
    6. '(count' → logprob: -5.561388969421387
    7. 'bur' → logprob: -5.686388969421387
    8. ' self' → logprob: -7.061388969421387
    9. ' (' → logprob: -7.436388969421387
    10. ' ' → logprob: -7.436388969421387

Token 607: '_l' (ID: 1478)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.16617682576179504
    2. '_l' → logprob: -2.6661767959594727
    3. '(l' → logprob: -2.9161767959594727
    4. '(' → logprob: -4.166176795959473
    5. '_set' → logprob: -5.041176795959473
    6. ')' → logprob: -5.791176795959473
    7. '_live' → logprob: -6.291176795959473
    8. '(set' → logprob: -7.666176795959473
    9. '(_' → logprob: -8.541176795959473
    10. '_(' → logprob: -8.541176795959473

Token 608: 'ives' (ID: 2264)
  Prédit: '_set'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_set' → logprob: -0.24584682285785675
    2. 'ive' → logprob: -1.7458468675613403
    3. 'set' → logprob: -3.620846748352051
    4. 'ives' → logprob: -4.995846748352051
    5. '>' → logprob: -5.745846748352051
    6. '_sets' → logprob: -6.370846748352051
    7. 've' → logprob: -6.995846748352051
    8. '   ' → logprob: -7.370846748352051
    9. 'live' → logprob: -7.745846748352051
    10. '       ' → logprob: -8.12084674835205

Token 609: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.11295637488365173
    2. '==' → logprob: -2.2379562854766846
    3. ' >' → logprob: -9.612956047058105
    4. '>' → logprob: -10.612956047058105
    5. ' <=' → logprob: -11.612956047058105
    6. '=' → logprob: -12.237956047058105
    7. '0' → logprob: -12.362956047058105
    8. ' ' → logprob: -12.487956047058105
    9. ')==' → logprob: -12.487956047058105
    10. ')' → logprob: -12.612956047058105

Token 610: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.027972588315606117
    2. ' ' → logprob: -3.65297269821167
    3. '1' → logprob: -6.40297269821167
    4. '2' → logprob: -13.402972221374512
    5. '   ' → logprob: -13.402972221374512
    6. '           ' → logprob: -13.840472221374512
    7. '  ' → logprob: -13.965472221374512
    8. '>' → logprob: -14.152972221374512
    9. '    ' → logprob: -14.215472221374512
    10. ')' → logprob: -14.340472221374512

Token 611: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.026807604357600212
    2. '1' → logprob: -3.7768075466156006
    3. ' ' → logprob: -5.65180778503418
    4. '2' → logprob: -11.27680778503418
    5. '   ' → logprob: -12.02680778503418
    6. '```' → logprob: -12.46430778503418
    7. '
' → logprob: -12.83930778503418
    8. '>' → logprob: -12.90180778503418
    9. '...' → logprob: -13.02680778503418
    10. ')' → logprob: -13.08930778503418

Token 612: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.5820678472518921
    2. ':' → logprob: -0.8320678472518921
    3. '                   ' → logprob: -5.582067966461182
    4. '               ' → logprob: -6.207067966461182
    5. ' continue' → logprob: -8.957067489624023
    6. 'continue' → logprob: -9.332067489624023
    7. '                       ' → logprob: -10.457067489624023
    8. '           ' → logprob: -10.457067489624023
    9. ' or' → logprob: -10.707067489624023
    10. ':
' → logprob: -12.457067489624023

Token 613: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.030304016545414925
    2. ' continue' → logprob: -3.905303955078125
    3. 'continue' → logprob: -5.155303955078125
    4. ':
' → logprob: -6.280303955078125
    5. '               ' → logprob: -6.655303955078125
    6. ':' → logprob: -7.780303955078125
    7. '   ' → logprob: -8.780303955078125
    8. '
' → logprob: -9.780303955078125
    9. '                       ' → logprob: -9.780303955078125
    10. '                    
' → logprob: -11.155303955078125

Token 614: ' #' (ID: 1069)
  Prédit: ' continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' continue' → logprob: -0.6565441489219666
    2. 'continue' → logprob: -1.4065442085266113
    3. '                   ' → logprob: -1.6565442085266113
    4. '
' → logprob: -3.4065442085266113
    5. '               ' → logprob: -5.406544208526611
    6. '                       ' → logprob: -6.406544208526611
    7. ':
' → logprob: -6.406544208526611
    8. '                    
' → logprob: -7.031544208526611
    9. '   ' → logprob: -7.531544208526611
    10. ' 
' → logprob: -7.656544208526611

Token 615: ' skip' (ID: 16677)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.40599730610847473
    2. 'best' → logprob: -1.1559972763061523
    3. 'profit' → logprob: -4.280997276306152
    4. 'continue' → logprob: -6.530997276306152
    5. '               ' → logprob: -6.530997276306152
    6. ' #' → logprob: -6.905997276306152
    7. ' best' → logprob: -7.780997276306152
    8. '                   ' → logprob: -8.530997276306152
    9. 'next' → logprob: -8.780997276306152
    10. ' profit' → logprob: -9.780997276306152

Token 616: ' no' (ID: 860)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'continue' → logprob: -0.3848637342453003
    2. '                   ' → logprob: -1.2598637342453003
    3. ' continue' → logprob: -4.00986385345459
    4. '               ' → logprob: -4.13486385345459
    5. '                       ' → logprob: -7.38486385345459
    6. '_continue' → logprob: -8.13486385345459
    7. '
' → logprob: -8.75986385345459
    8. '           ' → logprob: -9.00986385345459
    9. '```' → logprob: -9.50986385345459
    10. ' 
' → logprob: -9.88486385345459

Token 617: ' live' (ID: 4561)
  Prédit: 'live'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'live' → logprob: -1.29621422290802
    2. ' live' → logprob: -1.92121422290802
    3. 'op' → logprob: -2.6712141036987305
    4. 'continue' → logprob: -2.7962141036987305
    5. '               ' → logprob: -2.7962141036987305
    6. '_' → logprob: -2.9212141036987305
    7. ' continue' → logprob: -3.1712141036987305
    8. ' ' → logprob: -3.1712141036987305
    9. '           ' → logprob: -3.2962141036987305
    10. '-' → logprob: -3.2962141036987305

Token 618: ' (' (ID: 350)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.6878142356872559
    2. '               ' → logprob: -0.8128142356872559
    3. '                       ' → logprob: -3.937814235687256
    4. 'continue' → logprob: -4.312814235687256
    5. '                    
' → logprob: -5.187814235687256
    6. '           ' → logprob: -5.562814235687256
    7. '_continue' → logprob: -6.062814235687256
    8. ' continue' → logprob: -6.687814235687256
    9. '_set' → logprob: -7.062814235687256
    10. ' ' → logprob: -7.187814235687256

Token 619: 'allowed' (ID: 32510)
  Prédit: ' continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' continue' → logprob: -0.5149604678153992
    2. 'continue' → logprob: -1.014960527420044
    3. '                   ' → logprob: -3.389960527420044
    4. ')' → logprob: -5.764960289001465
    5. ' )' → logprob: -7.264960289001465
    6. ' day' → logprob: -7.514960289001465
    7. '               ' → logprob: -7.889960289001465
    8. ' ' → logprob: -8.264960289001465
    9. '```' → logprob: -8.264960289001465
    10. '                       ' → logprob: -8.639960289001465

Token 620: '?),' (ID: 95807)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.017331920564174652
    2. ')
' → logprob: -4.267332077026367
    3. ' )' → logprob: -6.642332077026367
    4. '):
' → logprob: -7.142332077026367
    5. '               ' → logprob: -7.642332077026367
    6. '                   ' → logprob: -8.392332077026367
    7. ' )
' → logprob: -9.017332077026367
    8. '),' → logprob: -10.017332077026367
    9. ',' → logprob: -10.392332077026367
    10. '
' → logprob: -11.017332077026367

Token 621: ' problem' (ID: 4792)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.767322838306427
    2. ' continue' → logprob: -0.767322838306427
    3. 'continue' → logprob: -2.8923227787017822
    4. '               ' → logprob: -4.517323017120361
    5. '                       ' → logprob: -5.392323017120361
    6. '
' → logprob: -8.517322540283203
    7. '                    
' → logprob: -9.267322540283203
    8. ' 
' → logprob: -9.642322540283203
    9. '   ' → logprob: -10.017322540283203
    10. ' ' → logprob: -10.267322540283203

Token 622: ' states' (ID: 9407)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -1.6255282163619995
    2. ')' → logprob: -1.7505282163619995
    3. '               ' → logprob: -1.7505282163619995
    4. '.' → logprob: -2.500528335571289
    5. ',' → logprob: -2.500528335571289
    6. '           ' → logprob: -3.250528335571289
    7. ':
' → logprob: -3.250528335571289
    8. '                   ' → logprob: -3.250528335571289
    9. '<|end|>' → logprob: -3.750528335571289
    10. '                       ' → logprob: -4.375528335571289

Token 623: ' max' (ID: 2999)
  Prédit: ' continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' continue' → logprob: -0.33283790946006775
    2. '                   ' → logprob: -1.9578379392623901
    3. 'continue' → logprob: -2.0828378200531006
    4. '               ' → logprob: -4.83283805847168
    5. '                    
' → logprob: -6.08283805847168
    6. '
' → logprob: -6.20783805847168
    7. '                       ' → logprob: -6.33283805847168
    8. ' pass' → logprob: -7.58283805847168
    9. ' 
' → logprob: -7.70783805847168
    10. 'pass' → logprob: -8.33283805847168

Token 624: ' ' (ID: 220)
  Prédit: '_b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_b' → logprob: -0.12078539282083511
    2. '_live' → logprob: -2.8707854747772217
    3. '_' → logprob: -3.9957854747772217
    4. ')' → logprob: -4.620785236358643
    5. 'live' → logprob: -5.120785236358643
    6. '.' → logprob: -5.620785236358643
    7. 'bur' → logprob: -5.995785236358643
    8. ' ' → logprob: -6.245785236358643
    9. '_days' → logprob: -6.495785236358643
    10. ' _' → logprob: -7.120785236358643

Token 625: '1' (ID: 16)
  Prédit: 'live'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'live' → logprob: -1.580185890197754
    2. '1' → logprob: -1.830185890197754
    3. 'bur' → logprob: -1.830185890197754
    4. 'one' → logprob: -2.455185890197754
    5. '_b' → logprob: -2.455185890197754
    6. '0' → logprob: -2.830185890197754
    7. 'multi' → logprob: -2.955185890197754
    8. 'days' → logprob: -3.455185890197754
    9. ' ' → logprob: -3.580185890197754
    10. '_live' → logprob: -3.955185890197754

Token 626: ' live' (ID: 4561)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.15149445831775665
    2. '                   ' → logprob: -2.4014945030212402
    3. ')' → logprob: -4.27649450302124
    4. 'continue' → logprob: -5.15149450302124
    5. '           ' → logprob: -5.27649450302124
    6. ',' → logprob: -5.52649450302124
    7. '.' → logprob: -6.27649450302124
    8. '                ' → logprob: -6.40149450302124
    9. '
' → logprob: -6.40149450302124
    10. '                       ' → logprob: -6.52649450302124

Token 627: ' per' (ID: 777)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.8583045601844788
    2. '
' → logprob: -1.983304500579834
    3. ':' → logprob: -2.358304500579834
    4. ')' → logprob: -2.483304500579834
    5. ':
' → logprob: -3.108304500579834
    6. '<|end|>' → logprob: -3.233304500579834
    7. ',' → logprob: -3.358304500579834
    8. '                   ' → logprob: -3.358304500579834
    9. '           ' → logprob: -4.108304500579834
    10. '_' → logprob: -4.108304500579834

Token 628: ' day' (ID: 2163)
  Prédit: 'day'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'day' → logprob: -0.023304525762796402
    2. ' day' → logprob: -3.7733044624328613
    3. 'region' → logprob: -10.64830493927002
    4. 'return' → logprob: -11.77330493927002
    5. ' ' → logprob: -12.02330493927002
    6. 'line' → logprob: -12.39830493927002
    7. '
' → logprob: -12.77330493927002
    8. 'def' → logprob: -12.89830493927002
    9. '```' → logprob: -13.39830493927002
    10. 'schedule' → logprob: -13.52330493927002

Token 629: ' principal' (ID: 10589)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.04925542324781418
    2. '               ' → logprob: -3.29925537109375
    3. 'continue' → logprob: -5.17425537109375
    4. ' continue' → logprob: -6.04925537109375
    5. '
' → logprob: -7.17425537109375
    6. ',' → logprob: -7.42425537109375
    7. '                       ' → logprob: -7.54925537109375
    8. '           ' → logprob: -8.17425537109375
    9. '                    
' → logprob: -8.67425537109375
    10. '_continue' → logprob: -8.79925537109375

Token 630: ',' (ID: 11)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.27048513293266296
    2. '               ' → logprob: -1.5204851627349854
    3. 'continue' → logprob: -4.645484924316406
    4. ' continue' → logprob: -6.145484924316406
    5. '
' → logprob: -6.520484924316406
    6. ',' → logprob: -6.770484924316406
    7. '                       ' → logprob: -7.145484924316406
    8. '           ' → logprob: -7.270484924316406
    9. '                    
' → logprob: -7.520484924316406
    10. ')' → logprob: -7.645484924316406

Token 631: ' ' (ID: 220)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'continue' → logprob: -0.8425536155700684
    2. ' continue' → logprob: -1.0925536155700684
    3. '                   ' → logprob: -1.4675536155700684
    4. '               ' → logprob: -6.217553615570068
    5. '                       ' → logprob: -6.967553615570068
    6. '#' → logprob: -8.342554092407227
    7. '   ' → logprob: -8.592554092407227
    8. '           ' → logprob: -10.217554092407227
    9. '```' → logprob: -10.842554092407227
    10. '
' → logprob: -11.092554092407227

Token 632: '0' (ID: 15)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'continue' → logprob: -0.12721417844295502
    2. '                   ' → logprob: -2.752214193344116
    3. ' continue' → logprob: -3.002214193344116
    4. '#' → logprob: -5.502213954925537
    5. '               ' → logprob: -6.377213954925537
    6. '                       ' → logprob: -10.127214431762695
    7. '   ' → logprob: -10.127214431762695
    8. '           ' → logprob: -10.502214431762695
    9. '	continue' → logprob: -10.752214431762695
    10. ' #' → logprob: -11.002214431762695

Token 633: ' live' (ID: 4561)
  Prédit: ' is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' is' → logprob: -1.2303656339645386
    2. '               ' → logprob: -1.2303656339645386
    3. ' or' → logprob: -1.7303656339645386
    4. 'or' → logprob: -2.605365753173828
    5. 'is' → logprob: -3.355365753173828
    6. '                   ' → logprob: -3.480365753173828
    7. ' possible' → logprob: -4.730365753173828
    8. ' can' → logprob: -4.980365753173828
    9. 'live' → logprob: -4.980365753173828
    10. 'possible' → logprob: -4.980365753173828

Token 634: ' allowed' (ID: 9279)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -1.245513677597046
    2. ':' → logprob: -1.495513677597046
    3. ',' → logprob: -2.120513677597046
    4. ' is' → logprob: -2.620513677597046
    5. ')' → logprob: -2.995513677597046
    6. '=' → logprob: -3.120513677597046
    7. ' or' → logprob: -3.245513677597046
    8. '                   ' → logprob: -3.370513677597046
    9. ':
' → logprob: -3.495513677597046
    10. ' and' → logprob: -4.370513916015625

Token 635: ' is' (ID: 382)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.09435200691223145
    2. '               ' → logprob: -3.0943520069122314
    3. ',' → logprob: -3.3443520069122314
    4. '.' → logprob: -5.469351768493652
    5. '<|end|>' → logprob: -6.719351768493652
    6. ':' → logprob: -7.094351768493652
    7. '                    
' → logprob: -7.469351768493652
    8. '<|end|>' → logprob: -7.469351768493652
    9. ',
' → logprob: -7.969351768493652
    10. '                       ' → logprob: -8.219351768493652

Token 636: ' doubtful' (ID: 163116)
  Prédit: ' True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' True' → logprob: -0.0969013199210167
    2. 'True' → logprob: -2.4719014167785645
    3. ' possible' → logprob: -5.8469014167785645
    4. ' False' → logprob: -6.5969014167785645
    5. 'possible' → logprob: -6.5969014167785645
    6. 'False' → logprob: -7.3469014167785645
    7. ' valid' → logprob: -7.5969014167785645
    8. ' not' → logprob: -8.096900939941406
    9. 'not' → logprob: -8.596900939941406
    10. '                   ' → logprob: -8.846900939941406

Token 637: '.' (ID: 13)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.06537088751792908
    2. '               ' → logprob: -2.940370798110962
    3. 'continue' → logprob: -5.690371036529541
    4. ',' → logprob: -5.815371036529541
    5. ' continue' → logprob: -6.440371036529541
    6. '.' → logprob: -7.065371036529541
    7. '                       ' → logprob: -7.815371036529541
    8. '
' → logprob: -8.315370559692383
    9. ':' → logprob: -8.440370559692383
    10. '                    
' → logprob: -8.815370559692383

Token 638: ' Let's' (ID: 41021)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.2911500334739685
    2. '               ' → logprob: -1.9161500930786133
    3. ' continue' → logprob: -2.5411500930786133
    4. 'continue' → logprob: -3.9161500930786133
    5. ')' → logprob: -5.541150093078613
    6. '                    
' → logprob: -7.416150093078613
    7. '
' → logprob: -7.541150093078613
    8. '           ' → logprob: -8.416150093078613
    9. '                       ' → logprob: -8.541150093078613
    10. ' if' → logprob: -8.666150093078613

Token 639: ' allow' (ID: 3763)
  Prédit: ' continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' continue' → logprob: -0.3878327012062073
    2. 'continue' → logprob: -1.1378326416015625
    3. '               ' → logprob: -7.6378326416015625
    4. '                   ' → logprob: -8.762832641601562
    5. '           ' → logprob: -8.887832641601562
    6. ' pass' → logprob: -10.762832641601562
    7. '
' → logprob: -11.012832641601562
    8. '_continue' → logprob: -11.012832641601562
    9. ' skip' → logprob: -11.262832641601562
    10. ' ' → logprob: -11.637832641601562

Token 640: ' no' (ID: 860)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.3450063169002533
    2. '               ' → logprob: -1.5950063467025757
    3. 'continue' → logprob: -2.970006227493286
    4. ' continue' → logprob: -3.470006227493286
    5. '                       ' → logprob: -5.595006465911865
    6. ')' → logprob: -7.595006465911865
    7. '           ' → logprob: -7.845006465911865
    8. '                    
' → logprob: -8.095005989074707
    9. '                ' → logprob: -8.345005989074707
    10. '.' → logprob: -8.970005989074707

Token 641: ' live' (ID: 4561)
  Prédit: ' live'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' live' → logprob: -0.9725658297538757
    2. 'live' → logprob: -1.2225658893585205
    3. '_live' → logprob: -1.2225658893585205
    4. '_' → logprob: -4.222565650939941
    5. ')' → logprob: -5.097565650939941
    6. ' ' → logprob: -5.847565650939941
    7. '               ' → logprob: -6.097565650939941
    8. '<|end|>' → logprob: -6.972565650939941
    9. '           ' → logprob: -7.472565650939941
    10. ' action' → logprob: -7.472565650939941

Token 642: ' no' (ID: 860)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.12137354910373688
    2. '                   ' → logprob: -2.6213736534118652
    3. '.' → logprob: -4.371373653411865
    4. ',' → logprob: -4.996373653411865
    5. ' as' → logprob: -5.121373653411865
    6. ' for' → logprob: -5.371373653411865
    7. ')' → logprob: -5.996373653411865
    8. '                
' → logprob: -6.246373653411865
    9. 'for' → logprob: -6.746373653411865
    10. ':' → logprob: -6.871373653411865

Token 643: ' burden' (ID: 39183)
  Prédit: 'profit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'profit' → logprob: -1.4337595701217651
    2. 'live' → logprob: -1.6837595701217651
    3. 'return' → logprob: -2.5587596893310547
    4. 'op' → logprob: -2.5587596893310547
    5. '\n' → logprob: -3.3087596893310547
    6. 'continue' → logprob: -3.6837596893310547
    7. ')' → logprob: -3.6837596893310547
    8. ' return' → logprob: -3.8087596893310547
    9. ' live' → logprob: -3.9337596893310547
    10. 'break' → logprob: -4.183759689331055

Token 644: ' no' (ID: 860)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.13646693527698517
    2. '                   ' → logprob: -3.0114669799804688
    3. '.' → logprob: -3.2614669799804688
    4. ',' → logprob: -4.011466979980469
    5. ')' → logprob: -5.136466979980469
    6. '                
' → logprob: -5.761466979980469
    7. ':' → logprob: -5.886466979980469
    8. '                    
' → logprob: -6.136466979980469
    9. '                ' → logprob: -7.261466979980469
    10. '
' → logprob: -7.386466979980469

Token 645: ' profit' (ID: 15971)
  Prédit: 'profit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'profit' → logprob: -0.01116384007036686
    2. ' profit' → logprob: -4.511163711547852
    3. '_profit' → logprob: -9.511163711547852
    4. 'score' → logprob: -11.511163711547852
    5. 'problem' → logprob: -12.136163711547852
    6. 'gain' → logprob: -12.511163711547852
    7. 'return' → logprob: -12.636163711547852
    8. 'change' → logprob: -12.636163711547852
    9. 'continue' → logprob: -12.636163711547852
    10. 'profits' → logprob: -12.886163711547852

Token 646: '.
' (ID: 558)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.39558038115501404
    2. '               ' → logprob: -1.1455804109573364
    3. '.' → logprob: -5.895580291748047
    4. ',' → logprob: -6.145580291748047
    5. '                    
' → logprob: -6.395580291748047
    6. '                
' → logprob: -7.395580291748047
    7. '
' → logprob: -7.520580291748047
    8. ':' → logprob: -8.395580291748047
    9. '           ' → logprob: -8.770580291748047
    10. '                       ' → logprob: -9.270580291748047

Token 647: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.4828791320323944
    2. '               ' → logprob: -1.1078791618347168
    3. '                    
' → logprob: -3.857879161834717
    4. '
' → logprob: -4.607879161834717
    5. '                
' → logprob: -5.107879161834717
    6. '  
' → logprob: -5.857879161834717
    7. ' 
' → logprob: -6.107879161834717
    8. ')' → logprob: -6.232879161834717
    9. '<|end|>' → logprob: -6.482879161834717
    10. '\n' → logprob: -6.482879161834717

Token 648: ' profit' (ID: 15971)
  Prédit: ' best'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' best' → logprob: -1.6621416807174683
    2. 'continue' → logprob: -1.6621416807174683
    3. 'best' → logprob: -1.7871416807174683
    4. '                   ' → logprob: -1.7871416807174683
    5. '               ' → logprob: -2.037141799926758
    6. ' continue' → logprob: -2.162141799926758
    7. '
' → logprob: -4.537141799926758
    8. 'pass' → logprob: -5.287141799926758
    9. 'profit' (adapté à ' profit') → logprob: -5.287141799926758
    10. ' next' → logprob: -5.662141799926758

Token 649: '_sum' (ID: 29859)
  Prédit: '_sum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sum' → logprob: -0.054510507732629776
    2. '=' → logprob: -3.4295105934143066
    3. ' =' → logprob: -4.054510593414307
    4. '_' → logprob: -6.429510593414307
    5. '_set' → logprob: -6.679510593414307
    6. '_best' → logprob: -9.554510116577148
    7. 'sum' → logprob: -9.679510116577148
    8. '           ' → logprob: -10.179510116577148
    9. '=_' → logprob: -10.304510116577148
    10. '_max' → logprob: -10.679510116577148

Token 650: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.044635895639657974
    2. ' =' → logprob: -3.5446360111236572
    3. ' +=' → logprob: -4.794635772705078
    4. '+=' → logprob: -5.044635772705078
    5. '               ' → logprob: -11.169635772705078
    6. '+' → logprob: -11.544635772705078
    7. '                   ' → logprob: -11.919635772705078
    8. ')' → logprob: -12.294635772705078
    9. '0' → logprob: -12.294635772705078
    10. ',' → logprob: -12.419635772705078

Token 651: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -5.157039049663581e-05
    2. ' ' → logprob: -9.875051498413086
    3. '                   ' → logprob: -20.000051498413086
    4. '   ' → logprob: -21.125051498413086
    5. '00' → logprob: -21.625051498413086
    6. '               ' → logprob: -21.625051498413086
    7. '۰' → logprob: -22.000051498413086
    8. '                       ' → logprob: -22.125051498413086
    9. '```' → logprob: -22.250051498413086
    10. 'max' → logprob: -22.625051498413086

Token 652: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.935296834039036e-06
    2. ' ' → logprob: -12.75000286102295
    3. '00' → logprob: -20.750003814697266
    4. '۰' → logprob: -21.000003814697266
    5. '000' → logprob: -21.375003814697266
    6. '   ' → logprob: -21.375003814697266
    7. '```' → logprob: -21.875003814697266
    8. '
' → logprob: -22.125003814697266
    9. 'max' → logprob: -22.250003814697266
    10. '  ' → logprob: -22.375003814697266

Token 653: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.7089052796363831
    2. '                   ' → logprob: -0.7089052796363831
    3. '<|end|>' → logprob: -5.458905220031738
    4. '                    
' → logprob: -5.708905220031738
    5. '
' → logprob: -6.333905220031738
    6. ',' → logprob: -6.458905220031738
    7. '                
' → logprob: -6.958905220031738
    8. ')' → logprob: -7.208905220031738
    9. '                       ' → logprob: -7.833905220031738
    10. '           ' → logprob: -7.958905220031738

Token 654: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.5610893964767456
    2. '               ' → logprob: -0.9360893964767456
    3. '<|end|>' → logprob: -3.436089515686035
    4. '           ' → logprob: -7.186089515686035
    5. '                    
' → logprob: -7.436089515686035
    6. ' ' → logprob: -7.936089515686035
    7. ' and' → logprob: -8.061089515686035
    8. '                ' → logprob: -8.061089515686035
    9. '   ' → logprob: -8.061089515686035
    10. ')' → logprob: -8.186089515686035

Token 655: ' burden' (ID: 39183)
  Prédit: 'best'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'best' → logprob: -0.1516299992799759
    2. 'next' → logprob: -2.77662992477417
    3. 'new' → logprob: -4.02662992477417
    4. 'bur' → logprob: -4.02662992477417
    5. '               ' → logprob: -4.40162992477417
    6. 'if' → logprob: -4.40162992477417
    7. '#' → logprob: -4.77662992477417
    8. '                   ' → logprob: -5.15162992477417
    9. 'continue' → logprob: -6.90162992477417
    10. 'result' → logprob: -7.65162992477417

Token 656: '_sum' (ID: 29859)
  Prédit: '_used'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_used' → logprob: -0.18800322711467743
    2. '_left' → logprob: -2.3130033016204834
    3. '_sum' → logprob: -2.6880033016204834
    4. '=' → logprob: -6.688003063201904
    5. '_' → logprob: -7.063003063201904
    6. ' =' → logprob: -7.188003063201904
    7. 'used' → logprob: -7.938003063201904
    8. '_remaining' → logprob: -8.563003540039062
    9. '_set' → logprob: -8.938003540039062
    10. ')' → logprob: -9.063003540039062

Token 657: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.006793878506869078
    2. ' =' → logprob: -5.006793975830078
    3. '+=' → logprob: -9.756793975830078
    4. ' +=' → logprob: -11.006793975830078
    5. '==' → logprob: -12.756793975830078
    6. ' ==' → logprob: -15.006793975830078
    7. ' ' → logprob: -15.256793975830078
    8. '<|end|>' → logprob: -15.881793975830078
    9. ')' → logprob: -16.756793975830078
    10. ',' → logprob: -16.881793975830078

Token 658: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -5.919942486798391e-05
    2. ' ' → logprob: -9.750059127807617
    3. '                   ' → logprob: -14.125059127807617
    4. '               ' → logprob: -17.000059127807617
    5. '   ' → logprob: -17.375059127807617
    6. '                       ' → logprob: -18.750059127807617
    7. '۰' → logprob: -19.000059127807617
    8. '           ' → logprob: -19.625059127807617
    9. '                           ' → logprob: -19.625059127807617
    10. '=' → logprob: -19.625059127807617

Token 659: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.6240566083070007e-06
    2. ' ' → logprob: -13.375001907348633
    3. '۰' → logprob: -19.250001907348633
    4. '                   ' → logprob: -19.500001907348633
    5. '   ' → logprob: -20.625001907348633
    6. '               ' → logprob: -21.000001907348633
    7. '০' → logprob: -21.250001907348633
    8. '<|end|>' → logprob: -21.625001907348633
    9. '०' → logprob: -21.750001907348633
    10. '00' → logprob: -21.750001907348633

Token 660: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.3546563684940338
    2. '                   ' → logprob: -1.4796563386917114
    3. '
' → logprob: -3.104656457901001
    4. '<|end|>' → logprob: -4.479656219482422
    5. '                    
' → logprob: -4.979656219482422
    6. '                
' → logprob: -6.104656219482422
    7. ',' → logprob: -6.854656219482422
    8. ')' → logprob: -6.979656219482422
    9. ' for' → logprob: -7.354656219482422
    10. '  
' → logprob: -7.854656219482422

Token 661: '                   ' (ID: 699)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.211736261844635
    2. '                   ' → logprob: -2.4617362022399902
    3. '<|end|>' → logprob: -2.5867362022399902
    4. '                    
' → logprob: -4.46173620223999
    5. '
' → logprob: -5.21173620223999
    6. '                
' → logprob: -5.33673620223999
    7. '  
' → logprob: -6.46173620223999
    8. '<|end|>' → logprob: -6.71173620223999
    9. ' ' → logprob: -6.96173620223999
    10. ')' → logprob: -7.21173620223999

Token 662: ' needed' (ID: 6118)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.9614545106887817
    2. '                   ' → logprob: -1.3364545106887817
    3. 'if' → logprob: -1.4614545106887817
    4. ' if' → logprob: -2.961454391479492
    5. 'next' → logprob: -3.711454391479492
    6. 'continue' → logprob: -3.961454391479492
    7. ' next' → logprob: -4.961454391479492
    8. 'for' → logprob: -5.586454391479492
    9. 'day' → logprob: -5.836454391479492
    10. ' continue' → logprob: -5.961454391479492

Token 663: '_multi' (ID: 81207)
  Prédit: '_multi'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_multi' → logprob: -0.5445976853370667
    2. '_b' → logprob: -1.0445976257324219
    3. ' =' → logprob: -3.044597625732422
    4. '=' → logprob: -4.544597625732422
    5. '_mult' → logprob: -5.419597625732422
    6. '_live' → logprob: -6.044597625732422
    7. 'multi' → logprob: -6.294597625732422
    8. '_m' → logprob: -8.544597625732422
    9. '_' → logprob: -8.544597625732422
    10. '_space' → logprob: -9.294597625732422

Token 664: ' =' (ID: 314)
  Prédit: '_live'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_live' → logprob: -0.005259491503238678
    2. '_multi' → logprob: -5.6302595138549805
    3. '_days' → logprob: -6.5052595138549805
    4. '_mult' → logprob: -10.38025951385498
    5. '=' → logprob: -10.50525951385498
    6. '```' → logprob: -10.63025951385498
    7. ' =' → logprob: -10.75525951385498
    8. '_' → logprob: -11.63025951385498
    9. 'live' → logprob: -12.13025951385498
    10. ')' → logprob: -12.13025951385498

Token 665: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0019713386427611113
    2. ' ' → logprob: -6.376971244812012
    3. '1' → logprob: -8.251971244812012
    4. '   ' → logprob: -12.876971244812012
    5. 'count' → logprob: -13.001971244812012
    6. '(' → logprob: -13.626971244812012
    7. 'int' → logprob: -15.064471244812012
    8. ' (' → logprob: -15.064471244812012
    9. '```' → logprob: -15.189471244812012
    10. 'False' → logprob: -15.751971244812012

Token 666: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0002831464516930282
    2. '1' → logprob: -8.875283241271973
    3. ' ' → logprob: -8.875283241271973
    4. 'count' → logprob: -13.750283241271973
    5. '(' → logprob: -14.375283241271973
    6. '   ' → logprob: -14.500283241271973
    7. 'int' → logprob: -15.125283241271973
    8. 'False' → logprob: -15.312783241271973
    9. '(count' → logprob: -16.187782287597656
    10. ' (' → logprob: -16.375282287597656

Token 667: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.1702696830034256
    2. '
' → logprob: -2.420269727706909
    3. '<|end|>' → logprob: -3.420269727706909
    4. '                   ' → logprob: -3.670269727706909
    5. '                
' → logprob: -5.92026948928833
    6. '                    
' → logprob: -6.54526948928833
    7. ')' → logprob: -6.54526948928833
    8. '<|end|>' → logprob: -7.29526948928833
    9. '  
' → logprob: -7.79526948928833
    10. ',' → logprob: -7.92026948928833

Token 668: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.10546237975358963
    2. '                   ' → logprob: -2.3554623126983643
    3. '<|end|>' → logprob: -6.480462551116943
    4. '                    
' → logprob: -6.730462551116943
    5. '                
' → logprob: -6.980462551116943
    6. ')' → logprob: -7.605462551116943
    7. '
' → logprob: -8.480462074279785
    8. '           ' → logprob: -8.980462074279785
    9. '                ' → logprob: -9.355462074279785
    10. ' 
' → logprob: -9.355462074279785

Token 669: ' else' (ID: 1203)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.007307969033718109
    2. ' else' → logprob: -6.132308006286621
    3. '<|end|>' → logprob: -6.507308006286621
    4. '                
' → logprob: -6.882308006286621
    5. ' ' → logprob: -7.257308006286621
    6. '                   ' → logprob: -7.882308006286621
    7. '           ' → logprob: -8.257308006286621
    8. '                ' → logprob: -8.382308006286621
    9. 'else' (adapté à ' else') → logprob: -8.507308006286621
    10. ' 
' → logprob: -9.007308006286621

Token 670: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.19984227418899536
    2. '                   ' → logprob: -2.6998422145843506
    3. ':
' → logprob: -2.8248422145843506
    4. '               ' → logprob: -2.9498422145843506
    5. '                ' → logprob: -7.32484245300293
    6. '           ' → logprob: -8.07484245300293
    7. ' if' → logprob: -8.32484245300293
    8. '{' → logprob: -8.69984245300293
    9. '                       ' → logprob: -8.82484245300293
    10. '                  ' → logprob: -9.32484245300293

Token 671: '                   ' (ID: 699)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.5335096120834351
    2. '                   ' → logprob: -0.9085096120834351
    3. ' needed' → logprob: -6.033509731292725
    4. '```' → logprob: -6.033509731292725
    5. ' burden' → logprob: -6.283509731292725
    6. 'needed' → logprob: -6.783509731292725
    7. '   ' → logprob: -7.283509731292725
    8. '           ' → logprob: -8.158509254455566
    9. ' required' → logprob: -8.533509254455566
    10. '                ' → logprob: -8.783509254455566

Token 672: ' needed' (ID: 6118)
  Prédit: 'needed'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'needed' (adapté à ' needed') → logprob: -0.16352030634880066
    2. ' needed' → logprob: -3.163520336151123
    3. 'bur' → logprob: -3.163520336151123
    4. ' burden' → logprob: -3.288520336151123
    5. '               ' → logprob: -3.913520336151123
    6. '           ' → logprob: -5.913520336151123
    7. '#' → logprob: -6.663520336151123
    8. 'if' → logprob: -6.663520336151123
    9. '                   ' → logprob: -7.163520336151123
    10. '   ' → logprob: -7.663520336151123

Token 673: '_multi' (ID: 81207)
  Prédit: '_multi'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_multi' → logprob: -0.00012606535165105015
    2. '_mult' → logprob: -9.375125885009766
    3. '_live' → logprob: -11.000125885009766
    4. 'multi' → logprob: -11.625125885009766
    5. '_' → logprob: -11.750125885009766
    6. '=' → logprob: -12.875125885009766
    7. ' =' → logprob: -13.375125885009766
    8. '_MULTI' → logprob: -14.000125885009766
    9. '_multiple' → logprob: -14.625125885009766
    10. 'Multi' → logprob: -14.625125885009766

Token 674: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.029750952497124672
    2. ' =' → logprob: -3.5297510623931885
    3. '=
' → logprob: -15.27975082397461
    4. '=int' → logprob: -16.77975082397461
    5. '=

' → logprob: -16.90475082397461
    6. '=}' → logprob: -17.90475082397461
    7. ' =
' → logprob: -18.15475082397461
    8. '           ' → logprob: -18.40475082397461
    9. ')' → logprob: -18.52975082397461
    10. '               ' → logprob: -19.02975082397461

Token 675: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.012718009762465954
    2. ' ' → logprob: -4.637718200683594
    3. 'count' → logprob: -6.762718200683594
    4. '0' → logprob: -7.137718200683594
    5. 'int' → logprob: -8.137718200683594
    6. ' count' → logprob: -8.262718200683594
    7. ' int' → logprob: -8.387718200683594
    8. '(count' → logprob: -8.762718200683594
    9. ' (' → logprob: -10.137718200683594
    10. '(' → logprob: -11.012718200683594

Token 676: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0015059324214234948
    2. 'count' → logprob: -7.5015058517456055
    3. '0' → logprob: -8.126505851745605
    4. '(' → logprob: -8.126505851745605
    5. 'int' → logprob: -8.126505851745605
    6. '(count' → logprob: -9.876505851745605
    7. ' ' → logprob: -12.126505851745605
    8. '(int' → logprob: -12.126505851745605
    9. 'max' → logprob: -13.501505851745605
    10. ' int' → logprob: -14.751505851745605

Token 677: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.0688827708363533
    2. '
' → logprob: -3.818882703781128
    3. '               ' → logprob: -3.943882703781128
    4. 'if' → logprob: -4.443882942199707
    5. '                   ' → logprob: -4.818882942199707
    6. '<|end|>' → logprob: -5.443882942199707
    7. '                ' → logprob: -7.443882942199707
    8. '           ' → logprob: -9.443882942199707
    9. ' ' → logprob: -9.693882942199707
    10. '            ' → logprob: -9.818882942199707

Token 678: ' count' (ID: 3605)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.0024758970830589533
    2. ' count' → logprob: -6.002475738525391
    3. '(count' → logprob: -15.87747573852539
    4. '	count' → logprob: -16.50247573852539
    5. '   ' → logprob: -17.12747573852539
    6. '[count' → logprob: -17.37747573852539
    7. '$count' → logprob: -18.00247573852539
    8. ' ' → logprob: -18.12747573852539
    9. '<count' → logprob: -19.25247573852539
    10. '=count' → logprob: -19.50247573852539

Token 679: '_l' (ID: 1478)
  Prédit: '_live'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_live' → logprob: -0.3093634843826294
    2. '_set' → logprob: -1.5593634843826294
    3. '_l' → logprob: -3.30936336517334
    4. '(l' → logprob: -4.55936336517334
    5. '(' → logprob: -5.68436336517334
    6. '_sets' → logprob: -6.43436336517334
    7. 'live' → logprob: -6.55936336517334
    8. '(set' → logprob: -7.30936336517334
    9. '_' → logprob: -7.43436336517334
    10. '>' → logprob: -8.18436336517334

Token 680: 'ives' (ID: 2264)
  Prédit: 'ive'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ive' → logprob: -0.2935788333415985
    2. '_set' → logprob: -2.293578863143921
    3. 'ives' → logprob: -2.418578863143921
    4. '_live' → logprob: -3.418578863143921
    5. '_sets' → logprob: -3.918578863143921
    6. '_' → logprob: -4.918578624725342
    7. '>' → logprob: -6.543578624725342
    8. '```' → logprob: -7.543578624725342
    9. 'e' → logprob: -7.668578624725342
    10. ' _' → logprob: -8.5435791015625

Token 681: ' >' (ID: 1424)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.11297809332609177
    2. ' >' → logprob: -2.237977981567383
    3. ' ' → logprob: -9.737977981567383
    4. '[' → logprob: -10.237977981567383
    5. ' ' → logprob: -10.987977981567383
    6. '   ' → logprob: -11.362977981567383
    7. ')' → logprob: -11.862977981567383
    8. '  ' → logprob: -12.237977981567383
    9. '<|end|>' → logprob: -12.362977981567383
    10. ')>' → logprob: -12.987977981567383

Token 682: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.5928495486150496e-05
    2. ' ' → logprob: -11.125016212463379
    3. '   ' → logprob: -14.000016212463379
    4. '>' → logprob: -16.375015258789062
    5. '=' → logprob: -16.500015258789062
    6. '                       ' → logprob: -17.125015258789062
    7. '  ' → logprob: -17.250015258789062
    8. '                   ' → logprob: -17.375015258789062
    9. '
' → logprob: -17.750015258789062
    10. '                                           ' → logprob: -18.250015258789062

Token 683: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.080963092041202e-06
    2. ' ' → logprob: -12.250004768371582
    3. '<|end|>' → logprob: -16.5000057220459
    4. '
' → logprob: -16.6250057220459
    5. '2' → logprob: -17.0000057220459
    6. '   ' → logprob: -17.2500057220459
    7. '=' → logprob: -17.7500057220459
    8. '>' → logprob: -17.8750057220459
    9. '```' → logprob: -17.8750057220459
    10. '  ' → logprob: -19.0000057220459

Token 684: ' else' (ID: 1203)
  Prédit: ' else'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' else' → logprob: -0.00631210021674633
    2. 'else' → logprob: -5.131311893463135
    3. '               ' → logprob: -8.006312370300293
    4. '                   ' → logprob: -10.381312370300293
    5. '                ' → logprob: -11.506312370300293
    6. '                    ' → logprob: -12.881312370300293
    7. ' ' → logprob: -13.381312370300293
    8. '           ' → logprob: -13.881312370300293
    9. '                       ' → logprob: -14.131312370300293
    10. ' ' → logprob: -14.381312370300293

Token 685: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0013259568950161338
    2. ' ' → logprob: -6.626326084136963
    3. '                   ' → logprob: -17.126325607299805
    4. '   ' → logprob: -18.876325607299805
    5. '<|end|>' → logprob: -18.876325607299805
    6. '1' → logprob: -19.001325607299805
    7. '                       ' → logprob: -19.563825607299805
    8. '               ' → logprob: -19.626325607299805
    9. '                           ' → logprob: -19.688825607299805
    10. '                               ' → logprob: -19.938825607299805

Token 686: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.2200749754119897e-06
    2. ' ' → logprob: -13.125001907348633
    3. '   ' → logprob: -17.250001907348633
    4. '                   ' → logprob: -18.750001907348633
    5. '1' → logprob: -19.312501907348633
    6. '```' → logprob: -19.312501907348633
    7. '               ' → logprob: -19.625001907348633
    8. '000' → logprob: -19.687501907348633
    9. '           ' → logprob: -19.875001907348633
    10. '۰' → logprob: -20.000001907348633

Token 687: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.39246541261672974
    2. '
' → logprob: -1.767465353012085
    3. '                   ' → logprob: -2.017465353012085
    4. '<|end|>' → logprob: -5.142465591430664
    5. '                    
' → logprob: -5.267465591430664
    6. '                
' → logprob: -5.517465591430664
    7. ' burden' → logprob: -6.267465591430664
    8. '  
' → logprob: -7.642465591430664
    9. '           ' → logprob: -7.892465591430664
    10. ',' → logprob: -7.892465591430664

Token 688: '                   ' (ID: 699)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.16974087059497833
    2. '                   ' → logprob: -2.044740915298462
    3. '                
' → logprob: -4.794740676879883
    4. '<|end|>' → logprob: -4.794740676879883
    5. '                    
' → logprob: -5.419740676879883
    6. '
' → logprob: -7.169740676879883
    7. '                ' → logprob: -7.294740676879883
    8. '           ' → logprob: -7.669740676879883
    9. ' 
' → logprob: -7.669740676879883
    10. ',' → logprob: -7.669740676879883

Token 689: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.11032973229885101
    2. '               ' → logprob: -3.3603296279907227
    3. 'for' → logprob: -3.7353296279907227
    4. 'bur' → logprob: -3.8603296279907227
    5. '                   ' → logprob: -3.9853296279907227
    6. ' if' → logprob: -5.485329627990723
    7. '#' → logprob: -7.485329627990723
    8. '           ' → logprob: -8.485329627990723
    9. ' burden' → logprob: -8.485329627990723
    10. '```' → logprob: -8.485329627990723

Token 690: ' needed' (ID: 6118)
  Prédit: 'needed'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'needed' → logprob: -0.7475566864013672
    2. 'multi' → logprob: -1.1225566864013672
    3. ' needed' → logprob: -2.122556686401367
    4. ' multi' → logprob: -3.247556686401367
    5. 'bur' → logprob: -3.872556686401367
    6. ' burden' → logprob: -3.997556686401367
    7. ' (' → logprob: -7.997556686401367
    8. 'not' → logprob: -8.247556686401367
    9. 'mult' → logprob: -8.372556686401367
    10. '   ' → logprob: -8.435056686401367

Token 691: '_multi' (ID: 81207)
  Prédit: '_multi'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_multi' → logprob: -3.762356209335849e-05
    2. '_mult' → logprob: -10.50003719329834
    3. 'multi' → logprob: -11.75003719329834
    4. '_live' → logprob: -14.00003719329834
    5. '_' → logprob: -14.87503719329834
    6. 'Multi' → logprob: -15.12503719329834
    7. '_mul' → logprob: -15.25003719329834
    8. '_MULTI' → logprob: -15.62503719329834
    9. '
' → logprob: -17.875038146972656
    10. ' multi' → logprob: -18.125038146972656

Token 692: ' >' (ID: 1424)
  Prédit: ' >'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.14472977817058563
    2. '>' → logprob: -2.0197298526763916
    3. ' <=' → logprob: -7.2697296142578125
    4. '==' → logprob: -7.2697296142578125
    5. ' ==' → logprob: -7.6447296142578125
    6. '<=' → logprob: -9.144729614257812
    7. '=' → logprob: -11.019729614257812
    8. ':' → logprob: -11.269729614257812
    9. ')' → logprob: -11.894729614257812
    10. ' >=' → logprob: -12.394729614257812

Token 693: ' multi' (ID: 12151)
  Prédit: 'multi'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'multi' → logprob: -0.016182640567421913
    2. ' multi' → logprob: -4.1411824226379395
    3. '0' → logprob: -8.891182899475098
    4. 'mult' → logprob: -12.391182899475098
    5. '   ' → logprob: -12.891182899475098
    6. ' ' → logprob: -13.891182899475098
    7. 'multip' → logprob: -14.141182899475098
    8. 'm' → logprob: -14.766182899475098
    9. '           ' → logprob: -14.891182899475098
    10. '       ' → logprob: -15.391182899475098

Token 694: '_live' (ID: 133570)
  Prédit: '_live'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_live' → logprob: -6.0868278524139896e-05
    2. '_multi' → logprob: -9.87506103515625
    3. '_' → logprob: -11.75006103515625
    4. '_free' → logprob: -14.87506103515625
    5. 'Live' → logprob: -15.00006103515625
    6. ' _' → logprob: -15.25006103515625
    7. '_mult' → logprob: -16.00006103515625
    8. ')' → logprob: -16.12506103515625
    9. 'live' → logprob: -16.12506103515625
    10. '_alive' → logprob: -17.25006103515625

Token 695: '_days' (ID: 67025)
  Prédit: '_days'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_days' → logprob: -1.6405310816480778e-05
    2. 'days' → logprob: -12.250016212463379
    3. '_' → logprob: -12.750016212463379
    4. '_left' → logprob: -12.750016212463379
    5. '_live' → logprob: -13.250016212463379
    6. '\' → logprob: -13.750016212463379
    7. ' _' → logprob: -14.750016212463379
    8. '_day' → logprob: -14.750016212463379
    9. '```' → logprob: -14.750016212463379
    10. '_daily' → logprob: -15.375016212463379

Token 696: '_left' (ID: 22189)
  Prédit: '_left'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_left' → logprob: -0.0005832957685925066
    2. ':' → logprob: -7.875583171844482
    3. 'left' → logprob: -8.75058364868164
    4. '_used' → logprob: -11.37558364868164
    5. '_LEFT' → logprob: -11.50058364868164
    6. ':
' → logprob: -12.87558364868164
    7. '               ' → logprob: -12.87558364868164
    8. ')' → logprob: -13.12558364868164
    9. '_' → logprob: -13.37558364868164
    10. '           ' → logprob: -13.50058364868164

Token 697: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.1800941526889801
    2. '                       ' → logprob: -2.4300942420959473
    3. ':
' → logprob: -2.6800942420959473
    4. '               ' → logprob: -5.555094242095947
    5. '                   ' → logprob: -5.930094242095947
    6. 'continue' → logprob: -7.305094242095947
    7. ' continue' → logprob: -7.930094242095947
    8. ' or' → logprob: -8.305093765258789
    9. '                           ' → logprob: -9.055093765258789
    10. ':return' → logprob: -9.430093765258789

Token 698: '                       ' (ID: 968)
  Prédit: '                       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.013210359029471874
    2. ' continue' → logprob: -4.513210296630859
    3. 'continue' → logprob: -6.388210296630859
    4. '                   ' → logprob: -7.888210296630859
    5. '               ' → logprob: -10.26321029663086
    6. '                           ' → logprob: -11.26321029663086
    7. '                               ' → logprob: -11.88821029663086
    8. '                      ' → logprob: -11.88821029663086
    9. '_continue' → logprob: -12.01321029663086
    10. ' continued' → logprob: -12.38821029663086

Token 699: ' continue' (ID: 4901)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.701943039894104
    2. ' continue' → logprob: -1.576943039894104
    3. '                       ' → logprob: -1.826943039894104
    4. 'continue' (adapté à ' continue') → logprob: -2.0769429206848145
    5. '                           ' → logprob: -4.8269429206848145
    6. '                               ' → logprob: -5.9519429206848145
    7. '               ' → logprob: -7.8269429206848145
    8. '	continue' → logprob: -8.201943397521973
    9. '```' → logprob: -9.451943397521973
    10. '                                   ' → logprob: -9.951943397521973

Token 700: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.12227262556552887
    2. '                   ' → logprob: -2.3722727298736572
    3. '                
' → logprob: -5.122272491455078
    4. '                    
' → logprob: -5.247272491455078
    5. '
' → logprob: -5.372272491455078
    6. '<|end|>' → logprob: -6.247272491455078
    7. '           ' → logprob: -7.372272491455078
    8. '    
' → logprob: -7.497272491455078
    9. ' 
' → logprob: -7.872272491455078
    10. ')' → logprob: -7.872272491455078

Token 701: '                   ' (ID: 699)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.012535080313682556
    2. '                   ' → logprob: -5.137535095214844
    3. '                
' → logprob: -5.512535095214844
    4. '
' → logprob: -6.637535095214844
    5. '                    
' → logprob: -7.887535095214844
    6. 'for' → logprob: -8.637535095214844
    7. ' for' → logprob: -8.762535095214844
    8. '                ' → logprob: -9.387535095214844
    9. '           ' → logprob: -9.637535095214844
    10. 'bur' → logprob: -10.012535095214844

Token 702: ' #' (ID: 1069)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.393070250749588
    2. 'for' → logprob: -1.8930702209472656
    3. 'bur' → logprob: -2.1430702209472656
    4. '                   ' → logprob: -3.1430702209472656
    5. ' for' → logprob: -5.393070220947266
    6. ' burden' → logprob: -5.393070220947266
    7. '           ' → logprob: -6.393070220947266
    8. '
' → logprob: -6.768070220947266
    9. '                
' → logprob: -7.143070220947266
    10. 'continue' → logprob: -8.268070220947266

Token 703: ' Sum' (ID: 34138)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.014491249807178974
    2. 'bur' → logprob: -5.139491081237793
    3. ' for' → logprob: -5.264491081237793
    4. '               ' → logprob: -6.264491081237793
    5. '                   ' → logprob: -7.264491081237793
    6. 'regions' → logprob: -7.764491081237793
    7. ' burden' → logprob: -8.639491081237793
    8. 'valid' → logprob: -10.139491081237793
    9. '           ' → logprob: -10.639491081237793
    10. '
' → logprob: -11.264491081237793

Token 704: ' burden' (ID: 39183)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.15514248609542847
    2. 'bur' → logprob: -2.5301425457000732
    3. 'profit' → logprob: -3.7801425457000732
    4. ' for' → logprob: -4.155142307281494
    5. '               ' → logprob: -4.905142307281494
    6. '(b' → logprob: -5.655142307281494
    7. '(
' → logprob: -5.655142307281494
    8. '                   ' → logprob: -6.030142307281494
    9. '(pro' → logprob: -6.655142307281494
    10. '_b' → logprob: -6.780142307281494

Token 705: ' and' (ID: 326)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.7638686895370483
    2. '=' → logprob: -0.8888686895370483
    3. '               ' → logprob: -2.638868808746338
    4. '_sum' → logprob: -3.763868808746338
    5. 'for' → logprob: -4.513868808746338
    6. ' for' → logprob: -4.763868808746338
    7. '                   ' → logprob: -5.888868808746338
    8. '_' → logprob: -6.013868808746338
    9. '           ' → logprob: -7.263868808746338
    10. '=sum' → logprob: -7.888868808746338

Token 706: ' profit' (ID: 15971)
  Prédit: 'profit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'profit' → logprob: -0.19661426544189453
    2. ' profit' → logprob: -2.1966142654418945
    3. 'expected' → logprob: -3.1966142654418945
    4. ' expected' → logprob: -3.6966142654418945
    5. 'for' → logprob: -6.8216142654418945
    6. ' for' → logprob: -8.196614265441895
    7. '   ' → logprob: -9.321614265441895
    8. '           ' → logprob: -10.446614265441895
    9. 'profits' → logprob: -11.071614265441895
    10. ' ' → logprob: -11.446614265441895

Token 707: ' for' (ID: 395)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.28502246737480164
    2. 'for' → logprob: -2.535022497177124
    3. '_sum' → logprob: -2.785022497177124
    4. ' for' → logprob: -3.160022497177124
    5. '                   ' → logprob: -3.535022497177124
    6. '=' → logprob: -3.660022497177124
    7. ' =' → logprob: -5.785022258758545
    8. '_for' → logprob: -6.910022258758545
    9. '           ' → logprob: -7.410022258758545
    10. '                ' → logprob: -7.410022258758545

Token 708: ' selected' (ID: 6386)
  Prédit: 'region'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'region' → logprob: -0.09424417465925217
    2. ' region' → logprob: -2.9692442417144775
    3. 'regions' → logprob: -3.4692442417144775
    4. 'r' → logprob: -5.719244003295898
    5. ' regions' → logprob: -6.219244003295898
    6. 'day' → logprob: -7.469244003295898
    7. 'reg' → logprob: -7.719244003295898
    8. ' day' → logprob: -7.969244003295898
    9. 'i' → logprob: -8.344244003295898
    10. 'live' → logprob: -9.094244003295898

Token 709: ' regions' (ID: 21043)
  Prédit: 'regions'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'regions' → logprob: -0.22249628603458405
    2. ' regions' → logprob: -2.222496271133423
    3. 'for' → logprob: -3.347496271133423
    4. ' for' → logprob: -3.597496271133423
    5. '_set' → logprob: -4.222496509552002
    6. '_regions' → logprob: -5.097496509552002
    7. 'region' → logprob: -6.097496509552002
    8. 'set' → logprob: -6.847496509552002
    9. 'live' → logprob: -6.972496509552002
    10. '               ' → logprob: -7.222496509552002

Token 710: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0979033038020134
    2. '                   ' → logprob: -2.597903251647949
    3. 'for' → logprob: -4.722903251647949
    4. ' for' → logprob: -4.722903251647949
    5. '                
' → logprob: -8.09790325164795
    6. '           ' → logprob: -8.47290325164795
    7. '
' → logprob: -9.09790325164795
    8. ',' → logprob: -9.22290325164795
    9. '                    
' → logprob: -9.47290325164795
    10. '                ' → logprob: -9.72290325164795

Token 711: '                   ' (ID: 699)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.17502720654010773
    2. '                   ' → logprob: -2.0500271320343018
    3. ' for' → logprob: -3.6750271320343018
    4. 'for' → logprob: -5.425027370452881
    5. '                
' → logprob: -7.425027370452881
    6. '           ' → logprob: -7.800027370452881
    7. '                    
' → logprob: -7.925027370452881
    8. '                ' → logprob: -8.550026893615723
    9. '<|end|>' → logprob: -9.925026893615723
    10. '                       ' → logprob: -10.050026893615723

Token 712: ' valid' (ID: 4529)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.20455870032310486
    2. ' for' → logprob: -1.9545587301254272
    3. '               ' → logprob: -3.4545586109161377
    4. '                   ' → logprob: -4.454558849334717
    5. '           ' → logprob: -10.704558372497559
    6. 'bur' → logprob: -10.704558372497559
    7. '
' → logprob: -10.829558372497559
    8. ' burden' → logprob: -10.954558372497559
    9. '```' → logprob: -11.454558372497559
    10. '                       ' → logprob: -11.829558372497559

Token 713: ' =' (ID: 314)
  Prédit: '_regions'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_regions' → logprob: -0.6779987812042236
    2. '_live' → logprob: -0.8029987812042236
    3. '_set' → logprob: -3.9279987812042236
    4. '_' → logprob: -5.0529985427856445
    5. 'for' → logprob: -5.1779985427856445
    6. '=' → logprob: -5.4279985427856445
    7. '_for' → logprob: -6.3029985427856445
    8. 'live' → logprob: -6.3029985427856445
    9. ' =' → logprob: -6.4279985427856445
    10. 'regions' → logprob: -7.4279985427856445

Token 714: ' True' (ID: 6432)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'True' → logprob: -0.0015341434627771378
    2. ' True' → logprob: -6.5015339851379395
    3. '                   ' → logprob: -11.001534461975098
    4. 'False' → logprob: -12.001534461975098
    5. '               ' → logprob: -12.251534461975098
    6. '           ' → logprob: -13.001534461975098
    7. '                       ' → logprob: -13.501534461975098
    8. '   ' → logprob: -14.751534461975098
    9. '       ' → logprob: -15.251534461975098
    10. '(True' → logprob: -18.37653350830078

Token 715: '
' (ID: 198)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.3100093901157379
    2. '               ' → logprob: -1.4350093603134155
    3. ' for' → logprob: -4.310009479522705
    4. '<|end|>' → logprob: -5.810009479522705
    5. '
' → logprob: -5.935009479522705
    6. 'for' → logprob: -6.060009479522705
    7. '                    
' → logprob: -6.060009479522705
    8. '                
' → logprob: -6.935009479522705
    9. '  
' → logprob: -7.560009479522705
    10. '           ' → logprob: -7.560009479522705

Token 716: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.1357172131538391
    2. '               ' → logprob: -2.2607171535491943
    3. ' for' → logprob: -4.010717391967773
    4. 'for' → logprob: -6.010717391967773
    5. '                    
' → logprob: -7.760717391967773
    6. '                    ' → logprob: -8.135717391967773
    7. '           ' → logprob: -8.135717391967773
    8. '                ' → logprob: -8.135717391967773
    9. '                
' → logprob: -9.385717391967773
    10. ')' → logprob: -9.510717391967773

Token 717: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.009075639769434929
    2. ' for' → logprob: -5.13407564163208
    3. '                   ' → logprob: -5.88407564163208
    4. '               ' → logprob: -8.009075164794922
    5. 'idx' → logprob: -12.259075164794922
    6. 'regions' → logprob: -12.259075164794922
    7. 'indices' → logprob: -12.384075164794922
    8. 'i' → logprob: -13.509075164794922
    9. '                       ' → logprob: -13.759075164794922
    10. '```' → logprob: -13.884075164794922

Token 718: ' r' (ID: 428)
  Prédit: 'region'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'region' → logprob: -0.0036535258404910564
    2. 'r' → logprob: -5.753653526306152
    3. ' region' → logprob: -8.128653526306152
    4. 'reg' → logprob: -8.878653526306152
    5. 'i' → logprob: -10.503653526306152
    6. '   ' → logprob: -12.003653526306152
    7. 'bit' → logprob: -12.628653526306152
    8. 'idx' → logprob: -13.128653526306152
    9. '_region' → logprob: -15.003653526306152
    10. 'Region' → logprob: -15.003653526306152

Token 719: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.016873136162757874
    2. 'in' → logprob: -4.141873359680176
    3. ' ' → logprob: -7.141873359680176
    4. 's' → logprob: -11.641873359680176
    5. '_in' → logprob: -11.766873359680176
    6. ' i' → logprob: -12.266873359680176
    7. '  ' → logprob: -12.516873359680176
    8. 'space' → logprob: -12.516873359680176
    9. '	in' → logprob: -12.641873359680176
    10. ',' → logprob: -12.766873359680176

Token 720: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.6330899596214294
    2. 'range' → logprob: -0.7580899596214294
    3. '(range' → logprob: -8.508090019226074
    4. '[' → logprob: -9.758090019226074
    5. '   ' → logprob: -9.758090019226074
    6. '	range' → logprob: -10.258090019226074
    7. ' ' → logprob: -10.633090019226074
    8. 'live' → logprob: -10.758090019226074
    9. 'valid' → logprob: -11.008090019226074
    10. ')' → logprob: -11.383090019226074

Token 721: '(self' (ID: 2402)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0017084944993257523
    2. ' self' → logprob: -6.501708507537842
    3. '(self' → logprob: -8.501708030700684
    4. '               ' → logprob: -13.126708030700684
    5. '           ' → logprob: -14.501708030700684
    6. '                   ' → logprob: -15.126708030700684
    7. '[self' → logprob: -16.626708984375
    8. '0' → logprob: -16.876708984375
    9. '                       ' → logprob: -17.126708984375
    10. '
' → logprob: -17.251708984375

Token 722: '.p' (ID: 1201)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.3963659703731537
    2. ')' → logprob: -1.646366000175476
    3. '(self' → logprob: -2.5213658809661865
    4. ' self' → logprob: -3.2713658809661865
    5. '):' → logprob: -5.771366119384766
    6. '[self' → logprob: -6.021366119384766
    7. '(' → logprob: -6.146366119384766
    8. '   ' → logprob: -6.896366119384766
    9. '(p' → logprob: -6.896366119384766
    10. 's' → logprob: -7.021366119384766

Token 723: '.region' (ID: 88305)
  Prédit: '.region'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.region' → logprob: -1.27099974633893e-05
    2. 'region' → logprob: -11.375012397766113
    3. '.' → logprob: -14.250012397766113
    4. ' .' → logprob: -14.875012397766113
    5. '#region' → logprob: -16.62501335144043
    6. '   ' → logprob: -17.37501335144043
    7. ' region' → logprob: -17.62501335144043
    8. '(region' → logprob: -18.00001335144043
    9. '.
' → logprob: -20.00001335144043
    10. '.reg' → logprob: -20.00001335144043

Token 724: '_count' (ID: 7536)
  Prédit: '_count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_count' → logprob: -0.071353018283844
    2. 'region' → logprob: -3.196352958679199
    3. '.region' → logprob: -3.696352958679199
    4. '   ' → logprob: -6.571352958679199
    5. ')' → logprob: -7.196352958679199
    6. 'count' → logprob: -7.696352958679199
    7. '(region' → logprob: -8.8213529586792
    8. ' region' → logprob: -8.8213529586792
    9. '_region' → logprob: -9.9463529586792
    10. 'Count' → logprob: -10.0713529586792

Token 725: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.02971762977540493
    2. '):' → logprob: -3.7797176837921143
    3. '                       ' → logprob: -5.279717445373535
    4. '                   ' → logprob: -6.779717445373535
    5. ':
' → logprob: -9.654717445373535
    6. '               ' → logprob: -9.654717445373535
    7. 'if' → logprob: -10.529717445373535
    8. ' if' → logprob: -11.529717445373535
    9. ':' → logprob: -11.654717445373535
    10. '):
' → logprob: -11.779717445373535

Token 726: '                       ' (ID: 968)
  Prédit: '                       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.0036767981946468353
    2. ' if' → logprob: -6.503676891326904
    3. '                        ' → logprob: -7.003676891326904
    4. '<|end|>' → logprob: -7.378676891326904
    5. ' ' → logprob: -8.628676414489746
    6. '                   ' → logprob: -9.628676414489746
    7. '	                   ' → logprob: -10.003676414489746
    8. '                    ' → logprob: -10.128676414489746
    9. '		               ' → logprob: -10.253676414489746
    10. '               ' → logprob: -10.253676414489746

Token 727: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.23264507949352264
    2. 'if' (adapté à ' if') → logprob: -2.357645034790039
    3. '                           ' → logprob: -2.357645034790039
    4. '                       ' → logprob: -4.732645034790039
    5. '                               ' → logprob: -5.107645034790039
    6. ' ' → logprob: -7.107645034790039
    7. '<|end|>' → logprob: -7.232645034790039
    8. '	                       ' → logprob: -7.607645034790039
    9. '                        ' → logprob: -7.982645034790039
    10. '                            ' → logprob: -8.232645034790039

Token 728: ' (' (ID: 350)
  Prédit: ' ('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.019778747111558914
    2. '(l' → logprob: -4.394778728485107
    3. ' live' → logprob: -5.019778728485107
    4. 'live' → logprob: -8.269779205322266
    5. ' ((' → logprob: -9.269779205322266
    6. '((' → logprob: -9.894779205322266
    7. '   ' → logprob: -9.894779205322266
    8. '                   ' → logprob: -10.019779205322266
    9. ' not' → logprob: -10.269779205322266
    10. '                       ' → logprob: -10.894779205322266

Token 729: 'live' (ID: 42460)
  Prédit: 'live'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'live' → logprob: -0.10886703431606293
    2. ' live' → logprob: -2.7338669300079346
    3. '(l' → logprob: -3.3588669300079346
    4. ' (' → logprob: -5.733867168426514
    5. '1' → logprob: -9.483866691589355
    6. '(' → logprob: -10.358866691589355
    7. '_live' → logprob: -11.608866691589355
    8. ')' → logprob: -12.108866691589355
    9. '   ' → logprob: -12.108866691589355
    10. '.live' → logprob: -12.108866691589355

Token 730: '_set' (ID: 5451)
  Prédit: '_set'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_set' → logprob: -5.9153885558771435e-06
    2. 'set' → logprob: -12.875005722045898
    3. '               ' → logprob: -13.625005722045898
    4. '_' → logprob: -14.375005722045898
    5. '_sets' → logprob: -15.250005722045898
    6. '                   ' → logprob: -15.375005722045898
    7. '           ' → logprob: -15.500005722045898
    8. ')' → logprob: -15.875005722045898
    9. 'Set' → logprob: -16.2500057220459
    10. '&' → logprob: -16.2500057220459

Token 731: ' &' (ID: 827)
  Prédit: '>>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>>' → logprob: -0.21203310787677765
    2. ' >>' → logprob: -1.8370331525802612
    3. ' &' → logprob: -3.4620330333709717
    4. '&' → logprob: -8.08703327178955
    5. ')' → logprob: -10.33703327178955
    6. '>>&' → logprob: -10.96203327178955
    7. '>>(' → logprob: -11.58703327178955
    8. ' ' → logprob: -11.83703327178955
    9. '<<' → logprob: -12.08703327178955
    10. '&gt' → logprob: -12.33703327178955

Token 732: ' (' (ID: 350)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0047010378912091255
    2. ' (' → logprob: -5.379701137542725
    3. '1' → logprob: -9.504700660705566
    4. ')' → logprob: -12.004700660705566
    5. ' ' → logprob: -15.379700660705566
    6. '   ' → logprob: -17.254701614379883
    7. '
' → logprob: -17.629701614379883
    8. '[' → logprob: -17.629701614379883
    9. '{' → logprob: -18.004701614379883
    10. '(
' → logprob: -18.254701614379883

Token 733: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.8889261304575484e-06
    2. '(' → logprob: -12.500003814697266
    3. ' ' → logprob: -15.625003814697266
    4. '   ' → logprob: -18.750003814697266
    5. '```' → logprob: -20.375003814697266
    6. '           ' → logprob: -20.500003814697266
    7. ')' → logprob: -21.000003814697266
    8. '
' → logprob: -21.375003814697266
    9. ' (' → logprob: -22.000003814697266
    10. '                   ' → logprob: -22.000003814697266

Token 734: ' <<' (ID: 2256)
  Prédit: '<<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<<' → logprob: -0.03804171830415726
    2. ' <<' → logprob: -3.288041830062866
    3. '1' → logprob: -15.913042068481445
    4. '<<<' → logprob: -16.788042068481445
    5. '<' → logprob: -16.913042068481445
    6. '   ' → logprob: -17.663042068481445
    7. '<<(' → logprob: -18.163042068481445
    8. ' ' → logprob: -18.163042068481445
    9. ')<<' → logprob: -18.538042068481445
    10. ' ' → logprob: -18.788042068481445

Token 735: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -3.7697225252486533e-06
    2. ' r' → logprob: -12.500003814697266
    3. '   ' → logprob: -20.250003814697266
    4. '
' → logprob: -20.250003814697266
    5. '	r' → logprob: -20.375003814697266
    6. '_r' → logprob: -21.625003814697266
    7. ')' → logprob: -21.625003814697266
    8. ' ' → logprob: -22.375003814697266
    9. '  ' → logprob: -22.750003814697266
    10. 'р' → logprob: -22.875003814697266

Token 736: '))' (ID: 915)
  Prédit: '))'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -8.756989700486884e-05
    2. ')' → logprob: -10.12508773803711
    3. ')):
' → logprob: -10.62508773803711
    4. ')):' → logprob: -10.75008773803711
    5. '                   ' → logprob: -14.62508773803711
    6. '                       ' → logprob: -15.00008773803711
    7. ' ))' → logprob: -15.12508773803711
    8. '               ' → logprob: -15.37508773803711
    9. ')):
' → logprob: -16.62508773803711
    10. '   ' → logprob: -16.87508773803711

Token 737: ' !=' (ID: 1666)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.5505864024162292
    2. ')' → logprob: -0.9255864024162292
    3. ')==' → logprob: -4.175586223602295
    4. '!=' → logprob: -5.175586223602295
    5. ' ==' → logprob: -5.300586223602295
    6. ')!=' → logprob: -7.550586223602295
    7. ' !=' → logprob: -8.425586700439453
    8. '):
' → logprob: -9.175586700439453
    9. ':' → logprob: -9.425586700439453
    10. '>' → logprob: -9.925586700439453

Token 738: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -6.2729995988775045e-06
    2. ' ' → logprob: -12.000006675720215
    3. '   ' → logprob: -18.2500057220459
    4. '```' → logprob: -21.5000057220459
    5. '۰' → logprob: -21.6250057220459
    6. '  ' → logprob: -21.6250057220459
    7. '                   ' → logprob: -22.0000057220459
    8. '00' → logprob: -22.2500057220459
    9. '    ' → logprob: -22.8750057220459
    10. '  ' → logprob: -22.8750057220459

Token 739: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -7.941850526549388e-06
    2. ' ' → logprob: -11.750007629394531
    3. '   ' → logprob: -17.62500762939453
    4. '=' → logprob: -19.87500762939453
    5. '00' → logprob: -20.12500762939453
    6. '  ' → logprob: -20.87500762939453
    7. '۰' → logprob: -20.87500762939453
    8. '                   ' → logprob: -21.00000762939453
    9. '000' → logprob: -21.50000762939453
    10. '```' → logprob: -21.75000762939453

Token 740: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.03444739431142807
    2. ':' → logprob: -3.409447431564331
    3. '):
' → logprob: -7.659447193145752
    4. '                           ' → logprob: -8.15944766998291
    5. '                       ' → logprob: -10.53444766998291
    6. ':
' → logprob: -12.40944766998291
    7. ':

' → logprob: -12.65944766998291
    8. '                   ' → logprob: -13.28444766998291
    9. '():
' → logprob: -13.53444766998291
    10. '):' → logprob: -13.78444766998291

Token 741: '                           ' (ID: 1686)
  Prédit: '                           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                           ' → logprob: -0.021730788052082062
    2. '
' → logprob: -4.271730899810791
    3. '                            
' → logprob: -5.521730899810791
    4. '                       ' → logprob: -6.521730899810791
    5. '                               ' → logprob: -7.396730899810791
    6. '                        
' → logprob: -7.521730899810791
    7. ' burden' → logprob: -8.646730422973633
    8. 'bur' → logprob: -9.021730422973633
    9. '<|end|>' → logprob: -9.271730422973633
    10. '                            ' → logprob: -9.646730422973633

Token 742: ' e' (ID: 319)
  Prédit: 'bur'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'bur' → logprob: -0.11833058297634125
    2. ' burden' → logprob: -2.368330478668213
    3. '                               ' → logprob: -5.243330478668213
    4. '                           ' → logprob: -5.368330478668213
    5. '                       ' → logprob: -5.993330478668213
    6. '                   ' → logprob: -6.368330478668213
    7. 'profit' → logprob: -6.368330478668213
    8. '               ' → logprob: -7.243330478668213
    9. '   ' → logprob: -7.743330478668213
    10. 'burst' → logprob: -8.118330955505371

Token 743: ' =' (ID: 314)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.4298176169395447
    2. 'profit' → logprob: -1.1798176765441895
    3. 'xp' → logprob: -4.3048176765441895
    4. 'expected' → logprob: -4.6798176765441895
    5. 'pected' → logprob: -5.1798176765441895
    6. '_profit' → logprob: -5.3048176765441895
    7. ' profit' → logprob: -5.6798176765441895
    8. '                   ' → logprob: -6.1798176765441895
    9. '                       ' → logprob: -7.3048176765441895
    10. '               ' → logprob: -7.5548176765441895

Token 744: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.3132912516593933
    2. ' self' → logprob: -1.313291311264038
    3. '                           ' → logprob: -10.813291549682617
    4. '                               ' → logprob: -12.188291549682617
    5. '                                   ' → logprob: -13.813291549682617
    6. '   ' → logprob: -14.438291549682617
    7. '	self' → logprob: -14.563291549682617
    8. ' ' → logprob: -14.938291549682617
    9. '(self' → logprob: -14.938291549682617
    10. '                       ' → logprob: -15.438291549682617

Token 745: '.data' (ID: 3885)
  Prédit: '.data'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.data' → logprob: -0.00977285485714674
    2. 'data' → logprob: -4.634772777557373
    3. ' data' → logprob: -11.759773254394531
    4. '.user' → logprob: -12.634773254394531
    5. 'user' → logprob: -13.134773254394531
    6. '.' → logprob: -13.884773254394531
    7. ' .' → logprob: -14.009773254394531
    8. '
' → logprob: -14.759773254394531
    9. '<data' → logprob: -15.259773254394531
    10. '	data' → logprob: -15.884773254394531

Token 746: '.expected' (ID: 109296)
  Prédit: '.expected'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.expected' → logprob: -0.0004336493439041078
    2. 'expected' → logprob: -8.375433921813965
    3. '.' → logprob: -9.000433921813965
    4. ' .' → logprob: -9.750433921813965
    5. ' expected' → logprob: -11.750433921813965
    6. '	expected' → logprob: -12.375433921813965
    7. '.pro' → logprob: -13.375433921813965
    8. '   ' → logprob: -13.625433921813965
    9. '_expected' → logprob: -13.875433921813965
    10. '.expect' → logprob: -14.250433921813965

Token 747: '_profit' (ID: 186239)
  Prédit: '_profit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_profit' → logprob: -2.2603901015827432e-05
    2. 'profit' → logprob: -10.750022888183594
    3. '_prof' → logprob: -14.500022888183594
    4. '_pro' → logprob: -14.750022888183594
    5. '_expected' → logprob: -16.625022888183594
    6. 'Profit' → logprob: -16.875022888183594
    7. ' profit' → logprob: -16.875022888183594
    8. '_' → logprob: -17.000022888183594
    9. '_prob' → logprob: -18.500022888183594
    10. '\' → logprob: -18.875022888183594

Token 748: '[r' (ID: 33265)
  Prédit: '[r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[r' → logprob: -5.3596853831550106e-05
    2. '[' → logprob: -10.500053405761719
    3. '                           ' → logprob: -10.875053405761719
    4. '][' → logprob: -13.000053405761719
    5. '[row' → logprob: -13.375053405761719
    6. ' [' → logprob: -14.500053405761719
    7. '                       ' → logprob: -14.875053405761719
    8. '   ' → logprob: -15.000053405761719
    9. ')[' → logprob: -15.000053405761719
    10. '[self' → logprob: -15.250053405761719

Token 749: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.0019373197574168444
    2. '[r' → logprob: -6.251937389373779
    3. ']' → logprob: -12.626936912536621
    4. '[' → logprob: -13.001936912536621
    5. ' ][' → logprob: -13.876936912536621
    6. 'r' → logprob: -14.376936912536621
    7. '                           ' → logprob: -14.626936912536621
    8. '           ' → logprob: -15.376936912536621
    9. ')[' → logprob: -15.751936912536621
    10. '   ' → logprob: -16.126937866210938

Token 750: 'day' (ID: 1635)
  Prédit: 'day'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'day' → logprob: -0.00011009939044015482
    2. ' day' → logprob: -9.125109672546387
    3. '
' → logprob: -14.000109672546387
    4. '(day' → logprob: -16.000110626220703
    5. '           ' → logprob: -16.750110626220703
    6. '   ' → logprob: -17.125110626220703
    7. '               ' → logprob: -17.375110626220703
    8. '                   ' → logprob: -17.875110626220703
    9. '_day' → logprob: -18.500110626220703
    10. ']' → logprob: -19.000110626220703

Token 751: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.013109168037772179
    2. ']
' → logprob: -4.63810920715332
    3. '                           ' → logprob: -5.76310920715332
    4. ']+' → logprob: -9.88810920715332
    5. '                               ' → logprob: -10.51310920715332
    6. '                       ' → logprob: -10.88810920715332
    7. '<|end|>' → logprob: -11.01310920715332
    8. '][' → logprob: -11.26310920715332
    9. '])' → logprob: -11.26310920715332
    10. ' ]' → logprob: -11.51310920715332

Token 752: '                           ' (ID: 1686)
  Prédit: '                           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                           ' → logprob: -0.001783702871762216
    2. '                            ' → logprob: -7.001783847808838
    3. '                               ' → logprob: -8.00178337097168
    4. '<|end|>' → logprob: -9.12678337097168
    5. '                            
' → logprob: -9.37678337097168
    6. '                       ' → logprob: -9.37678337097168
    7. ' burden' → logprob: -10.00178337097168
    8. '           ' → logprob: -10.00178337097168
    9. '               ' → logprob: -10.50178337097168
    10. '                   ' → logprob: -10.87678337097168

Token 753: ' f' (ID: 285)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.061329714953899384
    2. 'bur' → logprob: -3.8113296031951904
    3. '                           ' → logprob: -3.8113296031951904
    4. ' burden' → logprob: -4.8113298416137695
    5. '                               ' → logprob: -6.1863298416137695
    6. ' b' → logprob: -6.1863298416137695
    7. '                            ' → logprob: -7.8113298416137695
    8. '                            
' → logprob: -7.8113298416137695
    9. 'p' → logprob: -8.06132984161377
    10. '                             ' → logprob: -8.56132984161377

Token 754: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2129022628068924
    2. '=' → logprob: -1.712902307510376
    3. 'e' → logprob: -5.712902069091797
    4. '   ' → logprob: -6.462902069091797
    5. 'or' → logprob: -6.587902069091797
    6. 'f' → logprob: -6.837902069091797
    7. ' +=' → logprob: -7.962902069091797
    8. ' ' → logprob: -8.087902069091797
    9. 'ur' → logprob: -8.087902069091797
    10. '_' → logprob: -8.462902069091797

Token 755: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.2519437372684479
    2. ' self' → logprob: -1.5019437074661255
    3. '                           ' → logprob: -11.876943588256836
    4. '                               ' → logprob: -12.251943588256836
    5. '(self' → logprob: -13.626943588256836
    6. '                                   ' → logprob: -14.626943588256836
    7. '	self' → logprob: -15.001943588256836
    8. '   ' → logprob: -16.001943588256836
    9. '[self' → logprob: -16.126943588256836
    10. ' ' → logprob: -16.251943588256836

Token 756: '.data' (ID: 3885)
  Prédit: '.data'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.data' → logprob: -0.009273367933928967
    2. 'data' → logprob: -5.134273529052734
    3. '.b' → logprob: -5.759273529052734
    4. 'bur' → logprob: -8.884273529052734
    5. ' data' → logprob: -10.384273529052734
    6. ' .' → logprob: -12.134273529052734
    7. '.' → logprob: -13.134273529052734
    8. '   ' → logprob: -13.259273529052734
    9. ' burden' → logprob: -13.259273529052734
    10. ' bur' → logprob: -13.759273529052734

Token 757: '.b' (ID: 1292)
  Prédit: '.b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.b' → logprob: -1.8193366486229934e-05
    2. 'bur' → logprob: -11.125018119812012
    3. ' burden' → logprob: -13.500018119812012
    4. 'Bur' → logprob: -14.500018119812012
    5. '   ' → logprob: -14.875018119812012
    6. '.' → logprob: -15.000018119812012
    7. '```' → logprob: -15.875018119812012
    8. ' .' → logprob: -16.000019073486328
    9. ' burdens' → logprob: -16.375019073486328
    10. '           ' → logprob: -16.500019073486328

Token 758: 'ur' (ID: 330)
  Prédit: 'ur'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ur' → logprob: -9.014684110297821e-06
    2. '[' → logprob: -11.875008583068848
    3. 'urd' → logprob: -13.625008583068848
    4. 'urder' → logprob: -14.500008583068848
    5. 'u' → logprob: -17.250009536743164
    6. '   ' → logprob: -17.250009536743164
    7. 'urst' → logprob: -17.625009536743164
    8. '       ' → logprob: -17.875009536743164
    9. '[
' → logprob: -17.875009536743164
    10. '**' → logprob: -18.000009536743164

Token 759: 'den' (ID: 1660)
  Prédit: 'den'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'den' → logprob: -4.3822154111694545e-05
    2. 'd' → logprob: -10.750043869018555
    3. 'r' → logprob: -12.000043869018555
    4. '               ' → logprob: -12.875043869018555
    5. '[' → logprob: -13.375043869018555
    6. '           ' → logprob: -13.500043869018555
    7. '   ' → logprob: -13.500043869018555
    8. 'dent' → logprob: -13.500043869018555
    9. 'der' → logprob: -14.125043869018555
    10. '                   ' → logprob: -14.250043869018555

Token 760: '[r' (ID: 33265)
  Prédit: '[r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[r' → logprob: -0.00013536323967855424
    2. '[' → logprob: -9.00013542175293
    3. '   ' → logprob: -12.62513542175293
    4. ' [' → logprob: -12.87513542175293
    5. 'r' → logprob: -13.25013542175293
    6. '           ' → logprob: -14.00013542175293
    7. '[row' → logprob: -14.12513542175293
    8. '                           ' → logprob: -14.50013542175293
    9. '       ' → logprob: -14.62513542175293
    10. '               ' → logprob: -15.25013542175293

Token 761: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.0009320637909695506
    2. '[r' → logprob: -7.375932216644287
    3. '[' → logprob: -8.250931739807129
    4. ']' → logprob: -10.500931739807129
    5. 'r' → logprob: -12.375931739807129
    6. ' ][' → logprob: -13.000931739807129
    7. ''][' → logprob: -13.375931739807129
    8. '"][' → logprob: -13.750931739807129
    9. '[row' → logprob: -13.750931739807129
    10. 'day' → logprob: -13.875931739807129

Token 762: 'day' (ID: 1635)
  Prédit: 'day'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'day' → logprob: -8.911954500945285e-05
    2. 'r' → logprob: -10.125088691711426
    3. ' day' → logprob: -10.125088691711426
    4. '[' → logprob: -12.000088691711426
    5. '(day' → logprob: -13.750088691711426
    6. '][' → logprob: -14.125088691711426
    7. ']' → logprob: -14.875088691711426
    8. 'd' → logprob: -15.375088691711426
    9. '   ' → logprob: -16.375089645385742
    10. '           ' → logprob: -16.500089645385742

Token 763: ']
' (ID: 1592)
  Prédit: ']
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']
' → logprob: -0.023698218166828156
    2. ']' → logprob: -3.773698329925537
    3. '                           ' → logprob: -7.773698329925537
    4. ']
' → logprob: -10.523697853088379
    5. '                       ' → logprob: -13.398697853088379
    6. ']

' → logprob: -14.148697853088379
    7. '                               ' → logprob: -14.398697853088379
    8. ')
' → logprob: -14.773697853088379
    9. ']()
' → logprob: -15.148697853088379
    10. ' ]
' → logprob: -15.398697853088379

Token 764: '                           ' (ID: 1686)
  Prédit: '                           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                           ' → logprob: -0.015627454966306686
    2. '
' → logprob: -5.515627384185791
    3. '                            
' → logprob: -5.515627384185791
    4. '                               ' → logprob: -6.265627384185791
    5. ' burden' → logprob: -6.640627384185791
    6. '                            ' → logprob: -6.640627384185791
    7. '<|end|>' → logprob: -6.890627384185791
    8. '               ' → logprob: -8.26562786102295
    9. '                       ' → logprob: -8.26562786102295
    10. ' ' → logprob: -8.76562786102295

Token 765: ' if' (ID: 538)
  Prédit: '                           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                           ' → logprob: -0.3533830940723419
    2. ' burden' → logprob: -1.8533830642700195
    3. 'bur' → logprob: -2.3533830642700195
    4. 'if' (adapté à ' if') → logprob: -4.3533830642700195
    5. '                               ' → logprob: -4.8533830642700195
    6. '```' → logprob: -4.9783830642700195
    7. ' if' → logprob: -5.1033830642700195
    8. '                       ' → logprob: -6.1033830642700195
    9. 'profit' → logprob: -6.1033830642700195
    10. '               ' → logprob: -6.2283830642700195

Token 766: ' e' (ID: 319)
  Prédit: 'bur'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'bur' → logprob: -0.040692493319511414
    2. 'f' → logprob: -3.4156925678253174
    3. 'self' → logprob: -6.290692329406738
    4. ' burden' → logprob: -6.415692329406738
    5. '   ' → logprob: -7.290692329406738
    6. '           ' → logprob: -7.665692329406738
    7. '               ' → logprob: -7.665692329406738
    8. '                   ' → logprob: -7.915692329406738
    9. 'e' → logprob: -8.415692329406738
    10. '       ' → logprob: -8.915692329406738

Token 767: ' ==' (ID: 951)
  Prédit: ' <'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -1.1064037084579468
    2. '<' → logprob: -1.3564037084579468
    3. ' ==' → logprob: -1.7314037084579468
    4. '==' → logprob: -1.8564037084579468
    5. ' <=' → logprob: -3.2314038276672363
    6. '<=' → logprob: -3.3564038276672363
    7. '>' → logprob: -5.981403827667236
    8. ' >' → logprob: -7.106403827667236
    9. ' ' → logprob: -8.981403350830078
    10. '=' → logprob: -9.606403350830078

Token 768: ' ' (ID: 220)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.04151177778840065
    2. '0' → logprob: -3.2915117740631104
    3. 'None' → logprob: -5.7915120124816895
    4. ' -' → logprob: -8.166511535644531
    5. ' ' → logprob: -10.166511535644531
    6. ' None' → logprob: -10.666511535644531
    7. 'float' → logprob: -10.666511535644531
    8. '   ' → logprob: -11.541511535644531
    9. '                   ' → logprob: -11.791511535644531
    10. '               ' → logprob: -12.416511535644531

Token 769: '0' (ID: 15)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.003189832204952836
    2. 'None' → logprob: -6.128190040588379
    3. '0' → logprob: -7.128190040588379
    4. ' -' → logprob: -9.753190040588379
    5. 'float' → logprob: -9.753190040588379
    6. '-f' → logprob: -9.878190040588379
    7. '   ' → logprob: -12.003190040588379
    8. '-none' → logprob: -12.128190040588379
    9. ' None' → logprob: -12.503190040588379
    10. '                   ' → logprob: -13.128190040588379

Token 770: ':
' (ID: 734)
  Prédit: ' or'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' or' → logprob: -0.553839385509491
    2. ' and' → logprob: -1.5538394451141357
    3. 'and' → logprob: -2.5538394451141357
    4. ':
' → logprob: -2.9288394451141357
    5. '                               ' → logprob: -3.1788394451141357
    6. ':' → logprob: -3.5538394451141357
    7. '                           ' → logprob: -4.803839206695557
    8. 'or' → logprob: -5.678839206695557
    9. '                       ' → logprob: -8.428839683532715
    10. ' ' → logprob: -9.303839683532715

Token 771: '                               ' (ID: 2419)
  Prédit: '                               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                               ' → logprob: -0.008567768149077892
    2. '                           ' → logprob: -5.758567810058594
    3. ':
' → logprob: -6.508567810058594
    4. ' and' → logprob: -6.633567810058594
    5. '                                
' → logprob: -7.508567810058594
    6. ' or' → logprob: -7.758567810058594
    7. ':' → logprob: -8.008567810058594
    8. '
' → logprob: -8.383567810058594
    9. '<|end|>' → logprob: -8.758567810058594
    10. '                       ' → logprob: -8.758567810058594

Token 772: ' valid' (ID: 4529)
  Prédit: 'valid'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'valid' (adapté à ' valid') → logprob: -0.00282413512468338
    2. ' valid' → logprob: -6.002824306488037
    3. '                               ' → logprob: -8.002823829650879
    4. 'break' → logprob: -12.127823829650879
    5. '	valid' → logprob: -12.877823829650879
    6. '                           ' → logprob: -13.127823829650879
    7. 'continue' → logprob: -13.877823829650879
    8. '(valid' → logprob: -14.502823829650879
    9. '                       ' → logprob: -14.627823829650879
    10. '```' → logprob: -14.627823829650879

Token 773: ' =' (ID: 314)
  Prédit: ':
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.7647464871406555
    2. ':' → logprob: -2.0147464275360107
    3. '=' → logprob: -2.5147464275360107
    4. '                           ' → logprob: -2.6397464275360107
    5. '                               ' → logprob: -2.7647464275360107
    6. '==' → logprob: -2.7647464275360107
    7. '=False' → logprob: -3.2647464275360107
    8. ' =' → logprob: -3.6397464275360107
    9. '                       ' → logprob: -4.01474666595459
    10. ' and' → logprob: -4.26474666595459

Token 774: ' False' (ID: 7983)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'False' → logprob: -0.16022484004497528
    2. ' False' → logprob: -1.9102247953414917
    3. '(False' → logprob: -14.910224914550781
    4. '=False' → logprob: -15.035224914550781
    5. 'True' → logprob: -17.53522491455078
    6. '   ' → logprob: -17.91022491455078
    7. ' True' → logprob: -18.53522491455078
    8. '                           ' → logprob: -18.91022491455078
    9. 'false' → logprob: -19.28522491455078
    10. '_false' → logprob: -19.41022491455078

Token 775: '
' (ID: 198)
  Prédit: '                               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                               ' → logprob: -0.20612023770809174
    2. '                           ' → logprob: -1.956120252609253
    3. '<|end|>' → logprob: -3.331120252609253
    4. '                                   ' → logprob: -5.456120014190674
    5. ',' → logprob: -6.206120014190674
    6. '                             ' → logprob: -7.706120014190674
    7. ';' → logprob: -7.706120014190674
    8. '                            ' → logprob: -8.456120491027832
    9. '
' → logprob: -8.706120491027832
    10. '           ' → logprob: -8.831120491027832

Token 776: '                               ' (ID: 2419)
  Prédit: '                               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                               ' → logprob: -0.2053476870059967
    2. '                           ' → logprob: -1.7053476572036743
    3. '                                   ' → logprob: -5.830347537994385
    4. '<|end|>' → logprob: -8.330348014831543
    5. '                             ' → logprob: -8.830348014831543
    6. '                            ' → logprob: -8.955348014831543
    7. '                       ' → logprob: -9.330348014831543
    8. '                   ' → logprob: -9.580348014831543
    9. '           ' → logprob: -9.955348014831543
    10. ',' → logprob: -10.205348014831543

Token 777: ' break' (ID: 2338)
  Prédit: ' break'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' break' → logprob: -0.6151878833770752
    2. 'break' (adapté à ' break') → logprob: -0.9901878833770752
    3. '                               ' → logprob: -2.490187883377075
    4. '                                   ' → logprob: -6.240187644958496
    5. '                           ' → logprob: -6.740187644958496
    6. ' 
' → logprob: -6.990187644958496
    7. 'continue' → logprob: -8.740187644958496
    8. '\n' → logprob: -8.865187644958496
    9. ' continue' → logprob: -8.865187644958496
    10. '\' → logprob: -9.240187644958496

Token 778: '
' (ID: 198)
  Prédit: '                           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                           ' → logprob: -0.04466986656188965
    2. '
' → logprob: -3.5446698665618896
    3. ' 
' → logprob: -5.044670104980469
    4. '  
' → logprob: -5.419670104980469
    5. '                            
' → logprob: -6.794670104980469
    6. '<|end|>' → logprob: -7.044670104980469
    7. '    
' → logprob: -7.794670104980469
    8. '                            ' → logprob: -7.794670104980469
    9. '                               ' → logprob: -8.919670104980469
    10. '           ' → logprob: -9.044670104980469

Token 779: '                           ' (ID: 1686)
  Prédit: '                           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                           ' → logprob: -0.03145168349146843
    2. '
' → logprob: -3.90645170211792
    3. ' 
' → logprob: -5.15645170211792
    4. '  
' → logprob: -6.78145170211792
    5. '<|end|>' → logprob: -6.78145170211792
    6. '                            ' → logprob: -7.15645170211792
    7. '                            
' → logprob: -7.40645170211792
    8. ' f' → logprob: -8.156451225280762
    9. ' ' → logprob: -8.406451225280762
    10. ',' → logprob: -8.906451225280762

Token 780: ' profit' (ID: 15971)
  Prédit: '                           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                           ' → logprob: -0.009250454604625702
    2. ' burden' → logprob: -5.009250640869141
    3. '
' → logprob: -7.259250640869141
    4. 'bur' → logprob: -7.384250640869141
    5. '                            ' → logprob: -7.884250640869141
    6. '                            
' → logprob: -8.38425064086914
    7. ' if' → logprob: -8.75925064086914
    8. 'if' → logprob: -9.50925064086914
    9. ' else' → logprob: -10.00925064086914
    10. '                       ' → logprob: -10.00925064086914

Token 781: '_sum' (ID: 29859)
  Prédit: '_sum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sum' → logprob: -6.825890159234405e-05
    2. 'sum' → logprob: -10.250068664550781
    3. '+=' → logprob: -10.875068664550781
    4. ' +=' → logprob: -12.000068664550781
    5. '+' → logprob: -13.000068664550781
    6. '=' → logprob: -13.875068664550781
    7. '_' → logprob: -14.125068664550781
    8. '_s' → logprob: -14.500068664550781
    9. '_SUM' → logprob: -14.625068664550781
    10. '=sum' → logprob: -15.000068664550781

Token 782: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.07896722853183746
    2. ' +=' → logprob: -2.578967332839966
    3. '=' → logprob: -10.953967094421387
    4. '```' → logprob: -11.078967094421387
    5. '           ' → logprob: -11.828967094421387
    6. ']+=' → logprob: -11.953967094421387
    7. '                           ' → logprob: -11.953967094421387
    8. '                   ' → logprob: -11.953967094421387
    9. '                       ' → logprob: -12.328967094421387
    10. '+' → logprob: -12.453967094421387

Token 783: ' e' (ID: 319)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.03804149478673935
    2. ' e' → logprob: -3.288041591644287
    3. '	e' → logprob: -17.538042068481445
    4. '_e' → logprob: -18.413042068481445
    5. '                   ' → logprob: -18.538042068481445
    6. ' ' → logprob: -19.038042068481445
    7. '                       ' → logprob: -19.163042068481445
    8. '                           ' → logprob: -19.288042068481445
    9. '```' → logprob: -19.288042068481445
    10. ' ' → logprob: -19.413042068481445

Token 784: '
' (ID: 198)
  Prédit: '                           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                           ' → logprob: -0.07572326809167862
    2. '
' → logprob: -2.825723171234131
    3. '<|end|>' → logprob: -4.700723171234131
    4. ' 
' → logprob: -6.825723171234131
    5. '                            
' → logprob: -6.950723171234131
    6. '           ' → logprob: -6.950723171234131
    7. '  
' → logprob: -8.075723648071289
    8. '                            ' → logprob: -8.575723648071289
    9. '               ' → logprob: -8.700723648071289
    10. '    
' → logprob: -8.950723648071289

Token 785: '                           ' (ID: 1686)
  Prédit: '                           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                           ' → logprob: -0.0055242544040083885
    2. '
' → logprob: -5.880524158477783
    3. ' 
' → logprob: -6.880524158477783
    4. '                            
' → logprob: -7.130524158477783
    5. '                            ' → logprob: -8.130524635314941
    6. '<|end|>' → logprob: -8.630524635314941
    7. ' f' → logprob: -9.380524635314941
    8. ' ' → logprob: -9.505524635314941
    9. '  
' → logprob: -9.755524635314941
    10. '           ' → logprob: -10.255524635314941

Token 786: ' burden' (ID: 39183)
  Prédit: 'bur'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bur' → logprob: -0.44870525598526
    2. ' burden' → logprob: -1.0737051963806152
    3. '                           ' → logprob: -4.198705196380615
    4. '                               ' → logprob: -6.198705196380615
    5. '                            ' → logprob: -7.073705196380615
    6. '```' → logprob: -7.698705196380615
    7. 'burst' → logprob: -8.198705673217773
    8. '                             ' → logprob: -8.198705673217773
    9. ' burdens' → logprob: -8.698705673217773
    10. '                       ' → logprob: -8.948705673217773

Token 787: '_sum' (ID: 29859)
  Prédit: '_sum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sum' → logprob: -5.32392441527918e-05
    2. 'sum' → logprob: -10.250053405761719
    3. ' +=' → logprob: -12.000053405761719
    4. '+=' → logprob: -12.625053405761719
    5. '           ' → logprob: -13.500053405761719
    6. '_set' → logprob: -13.875053405761719
    7. '                   ' → logprob: -14.125053405761719
    8. '=' → logprob: -14.250053405761719
    9. '                       ' → logprob: -14.250053405761719
    10. '               ' → logprob: -14.250053405761719

Token 788: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.22896887362003326
    2. '+=' → logprob: -1.603968858718872
    3. '+' → logprob: -6.478969097137451
    4. ' +' → logprob: -7.603969097137451
    5. '>' → logprob: -7.603969097137451
    6. '                           ' → logprob: -7.978969097137451
    7. '=' → logprob: -8.853968620300293
    8. ' >' → logprob: -8.978968620300293
    9. '<|end|>' → logprob: -9.103968620300293
    10. ' ' → logprob: -9.853968620300293

Token 789: ' f' (ID: 285)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.25193077325820923
    2. ' f' → logprob: -1.5019307136535645
    3. ' ' → logprob: -14.126931190490723
    4. ' ' → logprob: -15.251931190490723
    5. '```' → logprob: -16.126930236816406
    6. '	f' → logprob: -16.126930236816406
    7. '   ' → logprob: -16.626930236816406
    8. '`' → logprob: -17.001930236816406
    9. '(f' → logprob: -17.001930236816406
    10. '                   ' → logprob: -17.126930236816406

Token 790: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.840525209903717
    2. '                           ' → logprob: -0.965525209903717
    3. '<|end|>' → logprob: -1.8405251502990723
    4. '  
' → logprob: -5.215525150299072
    5. ' 
' → logprob: -5.215525150299072
    6. '
' → logprob: -5.465525150299072
    7. '           ' → logprob: -5.715525150299072
    8. '                   ' → logprob: -5.965525150299072
    9. ' ' → logprob: -6.090525150299072
    10. '                            
' → logprob: -6.590525150299072

Token 791: '                   ' (ID: 699)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.6597455739974976
    2. '                           ' → logprob: -1.0347455739974976
    3. '<|end|>' → logprob: -2.159745693206787
    4. '                   ' → logprob: -5.159745693206787
    5. '           ' → logprob: -6.159745693206787
    6. '
' → logprob: -6.909745693206787
    7. '                       ' → logprob: -7.284745693206787
    8. '                            
' → logprob: -7.409745693206787
    9. '<|end|>' → logprob: -7.909745693206787
    10. ' ' → logprob: -8.159745216369629

Token 792: ' if' (ID: 538)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.47476255893707275
    2. '                   ' → logprob: -0.9747625589370728
    3. '                           ' → logprob: -7.849762439727783
    4. '           ' → logprob: -8.849762916564941
    5. '                       ' → logprob: -10.349762916564941
    6. '
' → logprob: -10.349762916564941
    7. '```' → logprob: -11.099762916564941
    8. '   ' → logprob: -11.599762916564941
    9. ' ' → logprob: -11.849762916564941
    10. '                    
' → logprob: -11.849762916564941

Token 793: ' not' (ID: 625)
  Prédit: 'bur'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bur' → logprob: -0.4801415801048279
    2. ' burden' → logprob: -0.9801415801048279
    3. 'not' → logprob: -5.355141639709473
    4. ' not' → logprob: -6.855141639709473
    5. 'valid' → logprob: -9.605141639709473
    6. '   ' → logprob: -9.980141639709473
    7. 'burst' → logprob: -10.230141639709473
    8. ' burdens' → logprob: -10.605141639709473
    9. 'b' → logprob: -11.230141639709473
    10. '(not' → logprob: -11.355141639709473

Token 794: ' valid' (ID: 4529)
  Prédit: ' valid'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' valid' → logprob: -0.4740813970565796
    2. 'valid' → logprob: -0.9740813970565796
    3. '   ' → logprob: -13.724081039428711
    4. '(valid' → logprob: -14.224081039428711
    5. '	valid' → logprob: -14.349081039428711
    6. 'not' → logprob: -14.349081039428711
    7. ' not' → logprob: -14.724081039428711
    8. '                   ' → logprob: -15.474081039428711
    9. '_valid' → logprob: -15.724081039428711
    10. '               ' → logprob: -15.974081039428711

Token 795: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.7637073397636414
    2. ':
' → logprob: -0.8887073397636414
    3. '                       ' → logprob: -2.138707399368286
    4. '                   ' → logprob: -6.013707160949707
    5. '               ' → logprob: -6.263707160949707
    6. 'continue' → logprob: -8.138707160949707
    7. '                           ' → logprob: -8.638707160949707
    8. '                               ' → logprob: -9.138707160949707
    9. ' continue' → logprob: -10.638707160949707
    10. '       ' → logprob: -10.638707160949707

Token 796: '                       ' (ID: 968)
  Prédit: '                       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -6.098748053773306e-05
    2. '                   ' → logprob: -10.12506103515625
    3. 'continue' → logprob: -11.12506103515625
    4. '               ' → logprob: -12.62506103515625
    5. ' continue' → logprob: -14.00006103515625
    6. '                           ' → logprob: -14.37506103515625
    7. '       ' → logprob: -14.50006103515625
    8. '   ' → logprob: -14.62506103515625
    9. '           ' → logprob: -15.75006103515625
    10. '                      ' → logprob: -16.00006103515625

Token 797: ' continue' (ID: 4901)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'continue' (adapté à ' continue') → logprob: -0.06577258557081223
    2. '                       ' → logprob: -2.815772533416748
    3. ' continue' → logprob: -6.065772533416748
    4. '                   ' → logprob: -6.815772533416748
    5. '   ' → logprob: -8.065773010253906
    6. '               ' → logprob: -10.440773010253906
    7. '                           ' → logprob: -10.940773010253906
    8. '	continue' → logprob: -11.440773010253906
    9. '       ' → logprob: -12.690773010253906
    10. '           ' → logprob: -13.065773010253906

Token 798: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0038726353086531162
    2. '
' → logprob: -6.378872871398926
    3. '<|end|>' → logprob: -6.878872871398926
    4. '                   ' → logprob: -7.128872871398926
    5. '                
' → logprob: -8.628872871398926
    6. '```' → logprob: -10.378872871398926
    7. '           ' → logprob: -10.878872871398926
    8. '<|end|>' → logprob: -10.878872871398926
    9. '                ' → logprob: -11.503872871398926
    10. '                        
' → logprob: -11.628872871398926

Token 799: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0004833425919059664
    2. '                   ' → logprob: -8.000483512878418
    3. '<|end|>' → logprob: -9.750483512878418
    4. '           ' → logprob: -10.750483512878418
    5. '```' → logprob: -10.750483512878418
    6. '                
' → logprob: -10.750483512878418
    7. '
' → logprob: -11.375483512878418
    8. '                ' → logprob: -13.375483512878418
    9. '<|end|>' → logprob: -13.375483512878418
    10. '              ' → logprob: -13.625483512878418

Token 800: ' if' (ID: 538)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.001306787133216858
    2. ' if' → logprob: -7.626307010650635
    3. '                
' → logprob: -7.751307010650635
    4. 'if' (adapté à ' if') → logprob: -8.501306533813477
    5. '
' → logprob: -10.001306533813477
    6. '                   ' → logprob: -10.126306533813477
    7. '           ' → logprob: -10.751306533813477
    8. '```' → logprob: -10.876306533813477
    9. ' ' → logprob: -11.251306533813477
    10. '<|end|>' → logprob: -11.626306533813477

Token 801: ' burden' (ID: 39183)
  Prédit: ' burden'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' burden' → logprob: -0.1603609174489975
    2. 'bur' → logprob: -1.9103609323501587
    3. '   ' → logprob: -9.285361289978027
    4. '               ' → logprob: -11.035361289978027
    5. ' burdens' → logprob: -11.660361289978027
    6. '           ' → logprob: -12.160361289978027
    7. ' ' → logprob: -12.535361289978027
    8. '                   ' → logprob: -12.785361289978027
    9. '  ' → logprob: -13.535361289978027
    10. '       ' → logprob: -13.910361289978027

Token 802: '_sum' (ID: 29859)
  Prédit: '_sum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sum' → logprob: -0.005239326041191816
    2. '_used' → logprob: -5.255239486694336
    3. 'sum' → logprob: -13.630239486694336
    4. '_left' → logprob: -13.630239486694336
    5. 'used' → logprob: -14.505239486694336
    6. '_remaining' → logprob: -14.630239486694336
    7. '_' → logprob: -14.880239486694336
    8. '               ' → logprob: -14.880239486694336
    9. '           ' → logprob: -15.255239486694336
    10. '_usage' → logprob: -15.880239486694336

Token 803: ' >' (ID: 1424)
  Prédit: ' <='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <=' → logprob: -0.020596778020262718
    2. '<=' → logprob: -3.895596742630005
    3. ' >' → logprob: -10.395596504211426
    4. ' <' → logprob: -11.270596504211426
    5. '>' → logprob: -12.020596504211426
    6. ' ' → logprob: -13.645596504211426
    7. '```' → logprob: -13.645596504211426
    8. ' ' → logprob: -14.145596504211426
    9. ' ≤' → logprob: -14.770596504211426
    10. '<' → logprob: -14.770596504211426

Token 804: ' burden' (ID: 39183)
  Prédit: 'bur'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bur' → logprob: -0.027535470202565193
    2. ' burden' → logprob: -4.402535438537598
    3. 'self' → logprob: -4.402535438537598
    4. ' burdens' → logprob: -6.902535438537598
    5. '           ' → logprob: -7.652535438537598
    6. '               ' → logprob: -8.402535438537598
    7. ' self' → logprob: -8.402535438537598
    8. '```' → logprob: -9.152535438537598
    9. '   ' → logprob: -9.402535438537598
    10. 'b' → logprob: -9.527535438537598

Token 805: '_left' (ID: 22189)
  Prédit: '_used'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_used' → logprob: -0.5764803886413574
    2. '_left' → logprob: -0.8264803886413574
    3. '   ' → logprob: -9.076480865478516
    4. '_allowed' → logprob: -9.201480865478516
    5. '_remaining' → logprob: -9.576480865478516
    6. '           ' → logprob: -9.701480865478516
    7. '               ' → logprob: -9.826480865478516
    8. '_available' → logprob: -10.201480865478516
    9. '_' → logprob: -10.826480865478516
    10. ')' → logprob: -11.451480865478516

Token 806: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.35979795455932617
    2. ':' → logprob: -1.7347979545593262
    3. '                   ' → logprob: -2.109797954559326
    4. '               ' → logprob: -5.484797954559326
    5. '                       ' → logprob: -8.984798431396484
    6. ' or' → logprob: -8.984798431396484
    7. 'continue' → logprob: -10.484798431396484
    8. ':
' → logprob: -11.484798431396484
    9. '                           ' → logprob: -11.609798431396484
    10. '           ' → logprob: -11.859798431396484

Token 807: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.0013196426443755627
    2. '               ' → logprob: -6.751319408416748
    3. 'continue' → logprob: -8.876319885253906
    4. ' continue' → logprob: -11.876319885253906
    5. '   ' → logprob: -13.626319885253906
    6. '                       ' → logprob: -13.876319885253906
    7. '           ' → logprob: -14.501319885253906
    8. '	continue' → logprob: -16.876319885253906
    9. '                  ' → logprob: -17.126319885253906
    10. '
' → logprob: -17.251319885253906

Token 808: ' continue' (ID: 4901)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'continue' (adapté à ' continue') → logprob: -0.48990583419799805
    2. '                   ' → logprob: -0.989905834197998
    3. '               ' → logprob: -4.489905834197998
    4. ' continue' → logprob: -5.489905834197998
    5. '                       ' → logprob: -8.364906311035156
    6. '	continue' → logprob: -9.864906311035156
    7. '   ' → logprob: -9.864906311035156
    8. '_continue' → logprob: -11.989906311035156
    9. '           ' → logprob: -12.364906311035156
    10. '```' → logprob: -12.614906311035156

Token 809: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.013802040368318558
    2. '
' → logprob: -4.6388020515441895
    3. '                
' → logprob: -5.6388020515441895
    4. '           ' → logprob: -8.513801574707031
    5. '                   ' → logprob: -9.013801574707031
    6. '                    
' → logprob: -9.888801574707031
    7. 'next' → logprob: -11.263801574707031
    8. '    
' → logprob: -11.388801574707031
    9. '            
' → logprob: -11.388801574707031
    10. '
' → logprob: -11.388801574707031

Token 810: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0024409317411482334
    2. '                
' → logprob: -6.627440929412842
    3. '
' → logprob: -7.377440929412842
    4. '           ' → logprob: -8.37744140625
    5. '                   ' → logprob: -9.00244140625
    6. 'next' → logprob: -9.75244140625
    7. '                    
' → logprob: -10.75244140625
    8. 'result' → logprob: -11.12744140625
    9. ' next' → logprob: -11.37744140625
    10. '            
' → logprob: -11.87744140625

Token 811: ' candidate' (ID: 17098)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.22720156610012054
    2. 'next' → logprob: -1.9772015810012817
    3. ' next' → logprob: -4.477201461791992
    4. 'new' → logprob: -4.477201461791992
    5. 'result' → logprob: -4.602201461791992
    6. 'candidate' (adapté à ' candidate') → logprob: -4.977201461791992
    7. 'current' → logprob: -5.102201461791992
    8. 'best' → logprob: -5.227201461791992
    9. 'res' → logprob: -5.477201461791992
    10. '           ' → logprob: -6.102201461791992

Token 812: ' =' (ID: 314)
  Prédit: '_profit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_profit' → logprob: -0.009655275382101536
    2. ' =' → logprob: -5.009655475616455
    3. '_score' → logprob: -6.259655475616455
    4. '_value' → logprob: -7.384655475616455
    5. '_total' → logprob: -8.384654998779297
    6. '=' → logprob: -9.009654998779297
    7. '_best' → logprob: -11.384654998779297
    8. '   ' → logprob: -11.509654998779297
    9. '_pro' → logprob: -11.884654998779297
    10. '_val' → logprob: -12.384654998779297

Token 813: ' profit' (ID: 15971)
  Prédit: 'profit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'profit' → logprob: -0.07974091172218323
    2. 'dp' → logprob: -3.2047410011291504
    3. ' profit' → logprob: -3.4547410011291504
    4. '               ' → logprob: -6.45474100112915
    5. ' dp' → logprob: -6.57974100112915
    6. '                   ' → logprob: -7.32974100112915
    7. '   ' → logprob: -8.329740524291992
    8. 'self' → logprob: -8.579740524291992
    9. '           ' → logprob: -8.704740524291992
    10. 'prof' → logprob: -9.079740524291992

Token 814: '_sum' (ID: 29859)
  Prédit: '_sum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sum' → logprob: -0.0018288150895386934
    2. '+' → logprob: -6.626828670501709
    3. ' +' → logprob: -8.251829147338867
    4. 'sum' → logprob: -9.876829147338867
    5. '           ' → logprob: -10.251829147338867
    6. '               ' → logprob: -10.501829147338867
    7. '_set' → logprob: -11.001829147338867
    8. 's' → logprob: -11.126829147338867
    9. '                   ' → logprob: -11.501829147338867
    10. ')' → logprob: -11.751829147338867

Token 815: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.2519400119781494
    2. '+' → logprob: -1.5019400119781494
    3. '               ' → logprob: -12.50193977355957
    4. '                   ' → logprob: -12.50193977355957
    5. '+
' → logprob: -13.37693977355957
    6. '                ' → logprob: -15.00193977355957
    7. ' +
' → logprob: -15.25193977355957
    8. '           ' → logprob: -15.25193977355957
    9. ' ' → logprob: -15.25193977355957
    10. '
' → logprob: -15.62693977355957

Token 816: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.0052354102954268456
    2. ' dp' → logprob: -5.255235195159912
    3. '           ' → logprob: -13.75523567199707
    4. '               ' → logprob: -15.25523567199707
    5. '                   ' → logprob: -16.50523567199707
    6. '	dp' → logprob: -17.38023567199707
    7. '(dp' → logprob: -17.88023567199707
    8. '_dp' → logprob: -18.25523567199707
    9. '       ' → logprob: -18.50523567199707
    10. '```' → logprob: -19.00523567199707

Token 817: '(day' (ID: 73732)
  Prédit: '(day'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(day' → logprob: -2.7729658540920354e-05
    2. '(' → logprob: -10.500027656555176
    3. '(
' → logprob: -16.125028610229492
    4. 'day' → logprob: -17.500028610229492
    5. ' day' → logprob: -18.875028610229492
    6. ' (' → logprob: -19.625028610229492
    7. '(year' → logprob: -19.625028610229492
    8. '(days' → logprob: -20.000028610229492
    9. '```' → logprob: -20.625028610229492
    10. '(depth' → logprob: -21.500028610229492

Token 818: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.05556543171405792
    2. ' +' → logprob: -2.930565357208252
    3. '(day' → logprob: -7.555565357208252
    4. '(' → logprob: -9.43056583404541
    5. ',' → logprob: -9.55556583404541
    6. '(
' → logprob: -12.80556583404541
    7. '(+' → logprob: -13.30556583404541
    8. '```' → logprob: -14.05556583404541
    9. '(next' → logprob: -14.18056583404541
    10. '   ' → logprob: -14.30556583404541

Token 819: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -8.061054359131958e-06
    2. ' ' → logprob: -11.750007629394531
    3. '   ' → logprob: -16.50000762939453
    4. '```' → logprob: -16.62500762939453
    5. '           ' → logprob: -18.00000762939453
    6. ',' → logprob: -18.00000762939453
    7. '                   ' → logprob: -18.62500762939453
    8. '               ' → logprob: -18.75000762939453
    9. '<|end|>' → logprob: -19.00000762939453
    10. '                               ' → logprob: -19.00000762939453

Token 820: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.7697225252486533e-06
    2. ' ' → logprob: -12.750003814697266
    3. '```' → logprob: -14.750003814697266
    4. '   ' → logprob: -15.625003814697266
    5. ',' → logprob: -16.000003814697266
    6. 'day' → logprob: -16.625003814697266
    7. '
' → logprob: -17.250003814697266
    8. ')' → logprob: -17.250003814697266
    9. '``' → logprob: -18.250003814697266
    10. '           ' → logprob: -18.250003814697266

Token 821: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.2197990119457245
    2. '(b' → logprob: -1.7197990417480469
    3. '(' → logprob: -4.094799041748047
    4. ',b' → logprob: -6.844799041748047
    5. '(
' → logprob: -7.719799041748047
    6. ' (' → logprob: -10.844799041748047
    7. ' ,' → logprob: -11.719799041748047
    8. '           ' → logprob: -11.844799041748047
    9. ',
' → logprob: -12.469799041748047
    10. '               ' → logprob: -12.594799041748047

Token 822: ' burden' (ID: 39183)
  Prédit: 'bur'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bur' → logprob: -0.00021295747137628496
    2. ' burden' → logprob: -8.500212669372559
    3. '   ' → logprob: -12.750212669372559
    4. 'burst' → logprob: -13.125212669372559
    5. '               ' → logprob: -13.375212669372559
    6. '           ' → logprob: -14.000212669372559
    7. '              ' → logprob: -15.125212669372559
    8. '
' → logprob: -15.250212669372559
    9. '       ' → logprob: -15.375212669372559
    10. ' burdens' → logprob: -15.500212669372559

Token 823: '_left' (ID: 22189)
  Prédit: '_left'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_left' → logprob: -6.2729995988775045e-06
    2. '_' → logprob: -12.750006675720215
    3. '_used' → logprob: -13.250006675720215
    4. 'left' → logprob: -14.250006675720215
    5. '_remaining' → logprob: -14.875006675720215
    6. ' _' → logprob: -15.500006675720215
    7. '   ' → logprob: -16.3750057220459
    8. '               ' → logprob: -16.5000057220459
    9. '_LEFT' → logprob: -17.0000057220459
    10. '_right' → logprob: -17.3750057220459

Token 824: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.47409528493881226
    2. '-' → logprob: -0.9740952849388123
    3. '-b' → logprob: -11.099095344543457
    4. '   ' → logprob: -13.349095344543457
    5. ' ' → logprob: -13.974095344543457
    6. '-
' → logprob: -16.47409439086914
    7. ' -
' → logprob: -16.59909439086914
    8. '           ' → logprob: -16.59909439086914
    9. ' ' → logprob: -16.84909439086914
    10. ',' → logprob: -17.09909439086914

Token 825: ' burden' (ID: 39183)
  Prédit: 'bur'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bur' → logprob: -0.0015271214069798589
    2. ' burden' → logprob: -6.501527309417725
    3. 'burst' → logprob: -10.626526832580566
    4. ' burdens' → logprob: -15.876526832580566
    5. '               ' → logprob: -16.001527786254883
    6. 'b' → logprob: -16.376527786254883
    7. '           ' → logprob: -16.501527786254883
    8. '   ' → logprob: -16.876527786254883
    9. 'burn' → logprob: -17.001527786254883
    10. 'burg' → logprob: -17.126527786254883

Token 826: '_sum' (ID: 29859)
  Prédit: '_sum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sum' → logprob: -0.00016194197814911604
    2. '_set' → logprob: -8.750162124633789
    3. 'sum' → logprob: -13.000162124633789
    4. 'um' → logprob: -14.500162124633789
    5. 'and' → logprob: -15.375162124633789
    6. 'ed' → logprob: -16.50016212463379
    7. 'used' → logprob: -16.50016212463379
    8. '_used' → logprob: -16.87516212463379
    9. 'a' → logprob: -17.50016212463379
    10. '_left' → logprob: -17.50016212463379

Token 827: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -4.008129963040119e-06
    2. ' ,' → logprob: -12.500003814697266
    3. ',
' → logprob: -15.750003814697266
    4. ',m' → logprob: -17.500003814697266
    5. '   ' → logprob: -19.000003814697266
    6. '           ' → logprob: -19.750003814697266
    7. '‌,' → logprob: -20.125003814697266
    8. '               ' → logprob: -20.750003814697266
    9. 's' → logprob: -20.750003814697266
    10. ',

' → logprob: -21.000003814697266

Token 828: ' multi' (ID: 12151)
  Prédit: 'multi'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'multi' → logprob: -0.0008165352046489716
    2. ' multi' → logprob: -7.125816345214844
    3. '               ' → logprob: -13.000816345214844
    4. '                       ' → logprob: -13.250816345214844
    5. '                   ' → logprob: -13.375816345214844
    6. '           ' → logprob: -13.750816345214844
    7. '                           ' → logprob: -13.875816345214844
    8. '   ' → logprob: -14.250816345214844
    9. '                             ' → logprob: -14.750816345214844
    10. '       ' → logprob: -14.875816345214844

Token 829: '_live' (ID: 133570)
  Prédit: '_live'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_live' → logprob: -3.7697225252486533e-06
    2. '_multi' → logprob: -12.500003814697266
    3. 'live' → logprob: -18.875003814697266
    4. 'Live' → logprob: -20.250003814697266
    5. '_' → logprob: -20.375003814697266
    6. '_mult' → logprob: -20.750003814697266
    7. '\' → logprob: -20.750003814697266
    8. '-live' → logprob: -21.000003814697266
    9. ' _' → logprob: -21.125003814697266
    10. '_alive' → logprob: -21.250003814697266

Token 830: '_days' (ID: 67025)
  Prédit: '_days'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_days' → logprob: -1.8624639324116288e-06
    2. 'days' → logprob: -13.750001907348633
    3. 's' → logprob: -14.875001907348633
    4. '\' → logprob: -16.125001907348633
    5. '
' → logprob: -16.500001907348633
    6. '```' → logprob: -16.625001907348633
    7. '_' → logprob: -18.375001907348633
    8. '_day' → logprob: -18.625001907348633
    9. 'Days' → logprob: -18.750001907348633
    10. '_dates' → logprob: -18.875001907348633

Token 831: '_left' (ID: 22189)
  Prédit: '_left'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_left' → logprob: -3.810037742368877e-05
    2. '_used' → logprob: -10.625038146972656
    3. 'left' → logprob: -11.250038146972656
    4. '[left' → logprob: -15.750038146972656
    5. '   ' → logprob: -16.125038146972656
    6. '_right' → logprob: -16.500038146972656
    7. '_allowed' → logprob: -16.875038146972656
    8. '```' → logprob: -16.875038146972656
    9. '_LEFT' → logprob: -17.000038146972656
    10. '           ' → logprob: -17.000038146972656

Token 832: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.1799159198999405
    2. '-' → logprob: -1.8049159049987793
    3. ')' → logprob: -8.804916381835938
    4. '   ' → logprob: -12.179916381835938
    5. '           ' → logprob: -12.179916381835938
    6. '               ' → logprob: -13.429916381835938
    7. '          ' → logprob: -13.679916381835938
    8. ' ' → logprob: -13.804916381835938
    9. '[' → logprob: -13.929916381835938
    10. '       ' → logprob: -13.929916381835938

Token 833: ' needed' (ID: 6118)
  Prédit: 'needed'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'needed' → logprob: -0.000158842682139948
    2. ' needed' → logprob: -8.75015926361084
    3. '           ' → logprob: -15.37515926361084
    4. '   ' → logprob: -15.87515926361084
    5. '               ' → logprob: -18.000158309936523
    6. 'required' → logprob: -18.125158309936523
    7. 'need' → logprob: -18.375158309936523
    8. '       ' → logprob: -18.500158309936523
    9. 'necessary' → logprob: -18.500158309936523
    10. '_needed' → logprob: -18.500158309936523

Token 834: '_multi' (ID: 81207)
  Prédit: '_multi'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_multi' → logprob: -4.286852345103398e-05
    2. 'multi' → logprob: -10.500042915344238
    3. '_live' → logprob: -11.250042915344238
    4. '_MULTI' → logprob: -14.500042915344238
    5. 'Multi' → logprob: -14.625042915344238
    6. '_mult' → logprob: -14.875042915344238
    7. ')' → logprob: -16.000041961669922
    8. '       ' → logprob: -16.125041961669922
    9. '   ' → logprob: -16.250041961669922
    10. '     ' → logprob: -16.375041961669922

Token 835: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.2519419491291046
    2. ')
' → logprob: -1.5019419193267822
    3. ')
' → logprob: -11.751941680908203
    4. ')`
' → logprob: -13.001941680908203
    5. '           ' → logprob: -13.501941680908203
    6. ')

' → logprob: -14.751941680908203
    7. '               ' → logprob: -14.876941680908203
    8. ' )
' → logprob: -15.376941680908203
    9. '       ' → logprob: -16.001941680908203
    10. '   ' → logprob: -16.251941680908203

Token 836: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.000344044849043712
    2. '           ' → logprob: -8.500344276428223
    3. '                   ' → logprob: -9.500344276428223
    4. '
' → logprob: -10.750344276428223
    5. ')' → logprob: -10.875344276428223
    6. '                
' → logprob: -11.750344276428223
    7. '              ' → logprob: -12.625344276428223
    8. '<|end|>' → logprob: -12.625344276428223
    9. ',' → logprob: -13.250344276428223
    10. '                       ' → logprob: -13.625344276428223

Token 837: ' if' (ID: 538)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.1081368699669838
    2. '           ' → logprob: -2.9831368923187256
    3. 'if' (adapté à ' if') → logprob: -3.1081368923187256
    4. 'best' → logprob: -5.2331366539001465
    5. ' if' → logprob: -6.3581366539001465
    6. '                   ' → logprob: -9.358137130737305
    7. ' best' → logprob: -11.233137130737305
    8. '
' → logprob: -13.233137130737305
    9. '       ' → logprob: -13.233137130737305
    10. '                       ' → logprob: -13.608137130737305

Token 838: ' candidate' (ID: 17098)
  Prédit: 'candidate'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'candidate' → logprob: -0.011048289015889168
    2. ' candidate' → logprob: -4.511048316955566
    3. '(candidate' → logprob: -15.636048316955566
    4. 'Candidate' → logprob: -16.26104736328125
    5. '_candidate' → logprob: -16.63604736328125
    6. '                   ' → logprob: -16.63604736328125
    7. 'cand' → logprob: -17.38604736328125
    8. 'andidate' → logprob: -18.38604736328125
    9. '               ' → logprob: -20.01104736328125
    10. ' candidato' → logprob: -20.26104736328125

Token 839: ' >' (ID: 1424)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.10021831095218658
    2. ' >' → logprob: -2.3502182960510254
    3. '           ' → logprob: -12.350218772888184
    4. '               ' → logprob: -13.350218772888184
    5. '   ' → logprob: -13.475218772888184
    6. ')' → logprob: -14.100218772888184
    7. '                   ' → logprob: -14.225218772888184
    8. '>
' → logprob: -14.725218772888184
    9. '>b' → logprob: -14.725218772888184
    10. ')>' → logprob: -14.850218772888184

Token 840: ' best' (ID: 1636)
  Prédit: 'best'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'best' → logprob: -9.615255839889869e-05
    2. ' best' → logprob: -9.250096321105957
    3. '	best' → logprob: -18.62509536743164
    4. '               ' → logprob: -19.25009536743164
    5. '           ' → logprob: -19.50009536743164
    6. '(best' → logprob: -20.37509536743164
    7. '_best' → logprob: -21.62509536743164
    8. 'candidate' → logprob: -21.62509536743164
    9. '                   ' → logprob: -22.25009536743164
    10. '.best' → logprob: -22.25009536743164

Token 841: '_profit' (ID: 186239)
  Prédit: '_profit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_profit' → logprob: -0.0001872094871941954
    2. '_candidate' → logprob: -9.000186920166016
    3. '_pro' → logprob: -10.250186920166016
    4. '_prof' → logprob: -11.375186920166016
    5. '_' → logprob: -12.000186920166016
    6. 'Profit' → logprob: -12.875186920166016
    7. '```' → logprob: -13.500186920166016
    8. '\' → logprob: -13.625186920166016
    9. '_score' → logprob: -14.000186920166016
    10. ' _' → logprob: -14.000186920166016

Token 842: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.08879680931568146
    2. ':
' → logprob: -2.588796854019165
    3. '               ' → logprob: -4.838796615600586
    4. '=' → logprob: -7.338796615600586
    5. '                   ' → logprob: -7.338796615600586
    6. '           ' → logprob: -8.088796615600586
    7. '                       ' → logprob: -8.463796615600586
    8. '                           ' → logprob: -10.338796615600586
    9. '              ' → logprob: -11.088796615600586
    10. '):
' → logprob: -11.213796615600586

Token 843: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.07067280262708664
    2. '                       ' → logprob: -3.5706727504730225
    3. 'best' → logprob: -3.6956727504730225
    4. '               ' → logprob: -4.195672988891602
    5. ' best' → logprob: -9.195672988891602
    6. '   ' → logprob: -10.070672988891602
    7. '                           ' → logprob: -10.570672988891602
    8. '           ' → logprob: -11.570672988891602
    9. '                               ' → logprob: -11.820672988891602
    10. '
' → logprob: -12.195672988891602

Token 844: ' best' (ID: 1636)
  Prédit: 'best'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'best' (adapté à ' best') → logprob: -0.004080301150679588
    2. ' best' → logprob: -5.504080295562744
    3. '                   ' → logprob: -13.254080772399902
    4. '                       ' → logprob: -16.004079818725586
    5. '               ' → logprob: -17.254079818725586
    6. '	best' → logprob: -17.504079818725586
    7. '(best' → logprob: -19.129079818725586
    8. '_best' → logprob: -19.629079818725586
    9. 'break' → logprob: -20.129079818725586
    10. '           ' → logprob: -20.379079818725586

Token 845: '_profit' (ID: 186239)
  Prédit: '_profit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_profit' → logprob: -0.00012284684635233134
    2. '_pro' → logprob: -9.875123023986816
    3. '_' → logprob: -10.375123023986816
    4. '_prof' → logprob: -10.750123023986816
    5. 'Profit' → logprob: -11.750123023986816
    6. 'profit' → logprob: -12.250123023986816
    7. '_candidate' → logprob: -13.500123023986816
    8. '_prob' → logprob: -14.250123023986816
    9. '_token' → logprob: -14.500123023986816
    10. '\' → logprob: -14.750123023986816

Token 846: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.000488110730657354
    2. ' =' → logprob: -7.62548828125
    3. '＝' → logprob: -17.37548828125
    4. '=

' → logprob: -17.37548828125
    5. '=
' → logprob: -18.00048828125
    6. '=}' → logprob: -18.75048828125
    7. '.=' → logprob: -19.12548828125
    8. '_=' → logprob: -19.87548828125
    9. '<|end|>' → logprob: -19.87548828125
    10. '=True' → logprob: -20.37548828125

Token 847: ' candidate' (ID: 17098)
  Prédit: 'candidate'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'candidate' → logprob: -0.048587486147880554
    2. ' candidate' → logprob: -3.0485875606536865
    3. '(candidate' → logprob: -17.173587799072266
    4. '_candidate' → logprob: -17.923587799072266
    5. 'Candidate' → logprob: -18.923587799072266
    6. '                   ' → logprob: -19.923587799072266
    7. '候' → logprob: -20.173587799072266
    8. ' candidat' → logprob: -20.923587799072266
    9. ' candidato' → logprob: -21.548587799072266
    10. 'cand' → logprob: -21.548587799072266

Token 848: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.019608093425631523
    2. '
' → logprob: -4.019608020782471
    3. 'return' → logprob: -7.144608020782471
    4. '            
' → logprob: -7.644608020782471
    5. ' return' → logprob: -10.019608497619629
    6. '\n' → logprob: -10.144608497619629
    7. '    
' → logprob: -10.894608497619629
    8. '       ' → logprob: -11.019608497619629
    9. '        
' → logprob: -11.269608497619629
    10. ' 
' → logprob: -11.519608497619629

Token 849: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0004540294758044183
    2. '
' → logprob: -8.25045394897461
    3. 'return' → logprob: -9.00045394897461
    4. '            
' → logprob: -10.37545394897461
    5. '		' → logprob: -10.75045394897461
    6. '       ' → logprob: -11.87545394897461
    7. '    
' → logprob: -13.12545394897461
    8. ' return' → logprob: -13.25045394897461
    9. '               ' → logprob: -13.25045394897461
    10. '        
' → logprob: -13.75045394897461

Token 850: ' return' (ID: 622)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.04909051954746246
    2. 'return' (adapté à ' return') → logprob: -3.049090623855591
    3. '       ' → logprob: -7.799090385437012
    4. ' return' → logprob: -9.424090385437012
    5. '
' → logprob: -11.674090385437012
    6. '   ' → logprob: -13.549090385437012
    7. '               ' → logprob: -13.674090385437012
    8. '	return' → logprob: -15.174090385437012
    9. '```' → logprob: -15.174090385437012
    10. '          ' → logprob: -15.924090385437012

Token 851: ' best' (ID: 1636)
  Prédit: 'best'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'best' → logprob: -0.0040785204619169235
    2. ' best' → logprob: -5.504078388214111
    3. '	best' → logprob: -17.504077911376953
    4. '(best' → logprob: -17.879077911376953
    5. '_best' → logprob: -18.629077911376953
    6. '.best' → logprob: -21.629077911376953
    7. '       ' → logprob: -22.129077911376953
    8. '   ' → logprob: -22.254077911376953
    9. '
' → logprob: -22.504077911376953
    10. '           ' → logprob: -22.504077911376953

Token 852: '_profit' (ID: 186239)
  Prédit: '_profit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_profit' → logprob: -7.107425062713446e-06
    2. '_pro' → logprob: -12.750006675720215
    3. '_prof' → logprob: -12.750006675720215
    4. 'profit' → logprob: -14.750006675720215
    5. '_token' → logprob: -15.250006675720215
    6. 'Profit' → logprob: -15.625006675720215
    7. '\' → logprob: -15.875006675720215
    8. '_prob' → logprob: -16.00000762939453
    9. '_best' → logprob: -16.37500762939453
    10. '_' → logprob: -16.37500762939453

Token 853: '

' (ID: 279)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.05054916441440582
    2. '
' → logprob: -3.675549268722534
    3. '<|end|>' → logprob: -4.300549030303955
    4. '        
' → logprob: -4.800549030303955
    5. '   ' → logprob: -7.425549030303955
    6. ')' → logprob: -7.550549030303955
    7. '<|end|>' → logprob: -8.425549507141113
    8. '    
' → logprob: -8.675549507141113
    9. '           ' → logprob: -8.925549507141113
    10. '```' → logprob: -9.175549507141113

Token 854: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0006102138431742787
    2. '
' → logprob: -8.7506103515625
    3. 'return' → logprob: -8.8756103515625
    4. '        
' → logprob: -9.1256103515625
    5. '   ' → logprob: -9.5006103515625
    6. '<|end|>' → logprob: -9.6256103515625
    7. 'def' → logprob: -10.6256103515625
    8. ' return' → logprob: -11.3756103515625
    9. '           ' → logprob: -12.6256103515625
    10. ')' → logprob: -12.7506103515625

Token 855: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.20151430368423462
    2. '       ' → logprob: -1.7015142440795898
    3. ' return' → logprob: -9.45151424407959
    4. '   ' → logprob: -11.20151424407959
    5. '
' → logprob: -12.57651424407959
    6. 'result' → logprob: -12.57651424407959
    7. '        
' → logprob: -14.70151424407959
    8. '	return' → logprob: -14.70151424407959
    9. '```' → logprob: -14.82651424407959
    10. '           ' → logprob: -15.07651424407959

Token 856: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.013398331589996815
    2. ' dp' → logprob: -4.513398170471191
    3. 'self' → logprob: -6.138398170471191
    4. ' self' → logprob: -8.638398170471191
    5. '0' → logprob: -11.763398170471191
    6. '   ' → logprob: -13.263398170471191
    7. '       ' → logprob: -13.513398170471191
    8. '(dp' → logprob: -14.388398170471191
    9. '	dp' → logprob: -15.138398170471191
    10. '_dp' → logprob: -16.013399124145508

Token 857: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.6226376891136169
    2. '(day' → logprob: -0.9976376891136169
    3. '(self' → logprob: -2.3726377487182617
    4. '(
' → logprob: -7.497637748718262
    5. '(len' → logprob: -8.872637748718262
    6. '(.' → logprob: -8.997637748718262
    7. '(days' → logprob: -9.622637748718262
    8. '((' → logprob: -9.872637748718262
    9. '(return' → logprob: -10.122637748718262
    10. '(None' → logprob: -10.122637748718262

Token 858: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: 0.0
    2. 'self' → logprob: -19.375
    3. '           ' → logprob: -21.125
    4. ' ' → logprob: -21.75
    5. '   ' → logprob: -22.25
    6. ')' → logprob: -22.375
    7. '       ' → logprob: -22.625
    8. '
' → logprob: -22.75
    9. '(' → logprob: -23.125
    10. '```' → logprob: -23.25

Token 859: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0004789320519194007
    2. ')' → logprob: -8.375478744506836
    3. ' ,' → logprob: -8.375478744506836
    4. ',)' → logprob: -12.000478744506836
    5. ',
' → logprob: -12.625478744506836
    6. '+' → logprob: -12.875478744506836
    7. '   ' → logprob: -13.375478744506836
    8. '       ' → logprob: -14.125478744506836
    9. ' +' → logprob: -14.375478744506836
    10. '(),' → logprob: -14.875478744506836

Token 860: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -1.8624639324116288e-06
    2. ' self' → logprob: -13.250001907348633
    3. '       ' → logprob: -17.125001907348633
    4. '(self' → logprob: -18.500001907348633
    5. '           ' → logprob: -18.750001907348633
    6. '[self' → logprob: -19.250001907348633
    7. '=self' → logprob: -20.750001907348633
    8. '	self' → logprob: -20.875001907348633
    9. '   ' → logprob: -22.125001907348633
    10. '               ' → logprob: -22.625001907348633

Token 861: '.p' (ID: 1201)
  Prédit: '.p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.p' → logprob: -8.65707261255011e-06
    2. '.max' → logprob: -11.875008583068848
    3. '.' → logprob: -13.875008583068848
    4. ' .' → logprob: -14.500008583068848
    5. '.b' → logprob: -15.875008583068848
    6. ').' → logprob: -17.000009536743164
    7. 'p' → logprob: -17.375009536743164
    8. '   ' → logprob: -18.875009536743164
    9. '.п' → logprob: -19.875009536743164
    10. '.MAX' → logprob: -20.375009536743164

Token 862: '.max' (ID: 11883)
  Prédit: '.max'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.max' → logprob: -3.128163257315464e-07
    2. 'max' → logprob: -15.125
    3. '.b' → logprob: -20.375
    4. '.min' → logprob: -20.625
    5. '.' → logprob: -20.75
    6. '.Max' → logprob: -20.875
    7. '.MAX' → logprob: -21.625
    8. '	max' → logprob: -21.75
    9. ' .' → logprob: -22.0
    10. ',max' → logprob: -22.0

Token 863: '_b' (ID: 1535)
  Prédit: '_b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_b' → logprob: -1.9361264946837764e-07
    2. 'bur' → logprob: -15.625
    3. 'Bur' → logprob: -20.875
    4. '\' → logprob: -21.75
    5. 'b' → logprob: -22.625
    6. 'BUR' → logprob: -23.5
    7. ' burden' → logprob: -24.0
    8. '_' → logprob: -24.25
    9. '_B' → logprob: -24.5
    10. '\b' → logprob: -24.625

Token 864: 'ur' (ID: 330)
  Prédit: 'ur'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ur' → logprob: -0.0001410850090906024
    2. 'urd' → logprob: -8.875141143798828
    3. 'urder' → logprob: -14.250141143798828
    4. 'urn' → logprob: -15.750141143798828
    5. 'bur' → logprob: -16.250141143798828
    6. '...' → logprob: -17.000141143798828
    7. '[' → logprob: -17.125141143798828
    8. 'u' → logprob: -17.250141143798828
    9. 'urb' → logprob: -17.500141143798828
    10. '**' → logprob: -17.500141143798828

Token 865: 'den' (ID: 1660)
  Prédit: 'den'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'den' → logprob: -3.054500666621607e-06
    2. 'd' → logprob: -13.12500286102295
    3. 'en' → logprob: -14.75000286102295
    4. '_den' → logprob: -15.00000286102295
    5. ' den' → logprob: -16.000003814697266
    6. '   ' → logprob: -17.375003814697266
    7. '­den' → logprob: -17.625003814697266
    8. '```' → logprob: -17.875003814697266
    9. 'dent' → logprob: -18.375003814697266
    10. 'ден' → logprob: -18.375003814697266

Token 866: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00011403311509639025
    2. ' ,' → logprob: -9.375114440917969
    3. ')' → logprob: -11.500114440917969
    4. ' -' → logprob: -11.625114440917969
    5. '-' → logprob: -12.375114440917969
    6. ',
' → logprob: -12.500114440917969
    7. '   ' → logprob: -13.500114440917969
    8. '),' → logprob: -16.25011444091797
    9. '<|end|>' → logprob: -16.25011444091797
    10. ',)' → logprob: -16.62511444091797

Token 867: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -4.246537173457909e-06
    2. ' self' → logprob: -12.500003814697266
    3. '       ' → logprob: -14.500003814697266
    4. '           ' → logprob: -18.000003814697266
    5. '   ' → logprob: -19.250003814697266
    6. '(self' → logprob: -19.625003814697266
    7. '	self' → logprob: -19.750003814697266
    8. '[self' → logprob: -20.500003814697266
    9. '=self' → logprob: -21.375003814697266
    10. '               ' → logprob: -21.750003814697266

Token 868: '.p' (ID: 1201)
  Prédit: '.p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.p' → logprob: -0.00016313401283696294
    2. '.max' → logprob: -8.750163078308105
    3. '.' → logprob: -12.375163078308105
    4. ' .' → logprob: -14.875163078308105
    5. 'p' → logprob: -16.000164031982422
    6. 'max' → logprob: -17.500164031982422
    7. '   ' → logprob: -18.750164031982422
    8. '       ' → logprob: -20.250164031982422
    9. '.Max' → logprob: -20.500164031982422
    10. '.MAX' → logprob: -20.750164031982422

Token 869: '.max' (ID: 11883)
  Prédit: '.max'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.max' → logprob: -4.60414821645827e-06
    2. 'max' → logprob: -12.375004768371582
    3. '.' → logprob: -15.000004768371582
    4. '	max' → logprob: -17.875003814697266
    5. '._' → logprob: -18.250003814697266
    6. '.min' → logprob: -18.875003814697266
    7. '.multi' → logprob: -19.125003814697266
    8. ' .' → logprob: -19.500003814697266
    9. ':max' → logprob: -19.500003814697266
    10. '.m' → logprob: -19.625003814697266

Token 870: '_multi' (ID: 81207)
  Prédit: '_multi'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_multi' → logprob: -0.014187601394951344
    2. 'multi' → logprob: -4.264187812805176
    3. '_b' → logprob: -11.764187812805176
    4. '.multi' → logprob: -12.014187812805176
    5. '_mult' → logprob: -12.389187812805176
    6. '_live' → logprob: -12.514187812805176
    7. 'max' → logprob: -14.264187812805176
    8. '\' → logprob: -15.139187812805176
    9. '_multiple' → logprob: -15.139187812805176
    10. '_MULTI' → logprob: -15.264187812805176

Token 871: '_live' (ID: 133570)
  Prédit: '_live'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_live' → logprob: -9.610702363715973e-06
    2. 'live' → logprob: -11.625009536743164
    3. 'Live' → logprob: -14.375009536743164
    4. '-live' → logprob: -17.625009536743164
    5. ' live' → logprob: -17.750009536743164
    6. '_load' → logprob: -19.250009536743164
    7. '_multi' → logprob: -19.375009536743164
    8. '.live' → logprob: -19.875009536743164
    9. '```' → logprob: -20.125009536743164
    10. ' Live' → logprob: -20.125009536743164

Token 872: '_days' (ID: 67025)
  Prédit: '_days'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_days' → logprob: -6.599403423024341e-05
    2. 'days' → logprob: -9.750065803527832
    3. '```' → logprob: -12.875065803527832
    4. 'Days' → logprob: -13.000065803527832
    5. ')' → logprob: -14.000065803527832
    6. '
' → logprob: -15.125065803527832
    7. ' days' → logprob: -15.250065803527832
    8. '   ' → logprob: -15.250065803527832
    9. '[' → logprob: -15.375065803527832
    10. '5' → logprob: -15.750065803527832

Token 873: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -2.816093228830141e-06
    2. '   ' → logprob: -14.50000286102295
    3. ' )' → logprob: -14.50000286102295
    4. ')
' → logprob: -14.62500286102295
    5. '))' → logprob: -14.87500286102295
    6. ')}' → logprob: -15.25000286102295
    7. '       ' → logprob: -16.000001907348633
    8. ')`' → logprob: -16.500001907348633
    9. '})' → logprob: -16.625001907348633
    10. '),' → logprob: -16.750001907348633

Token 874: '   ' (ID: 271)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.008947569876909256
    2. '   ' → logprob: -5.008947372436523
    3. ' def' → logprob: -6.633947372436523
    4. '
' → logprob: -7.883947372436523
    5. '    
' → logprob: -8.508947372436523
    6. '@' → logprob: -8.883947372436523
    7. '(' → logprob: -10.133947372436523
    8. '	def' → logprob: -10.633947372436523
    9. ')' → logprob: -10.883947372436523
    10. '_' → logprob: -11.008947372436523

Token 875: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.0003878934367094189
    2. ' def' → logprob: -8.500388145446777
    3. '   ' → logprob: -8.625388145446777
    4. '	def' → logprob: -13.375388145446777
    5. '    
' → logprob: -13.500388145446777
    6. '_def' → logprob: -14.375388145446777
    7. '
' → logprob: -14.500388145446777
    8. ':def' → logprob: -14.750388145446777
    9. ')' → logprob: -15.375388145446777
    10. '@' → logprob: -16.37538719177246

Token 876: ' _' (ID: 1175)
  Prédit: '_generate'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_generate' → logprob: -3.054500666621607e-06
    2. ' _' → logprob: -12.87500286102295
    3. 'generate' → logprob: -15.00000286102295
    4. '_is' → logprob: -16.625003814697266
    5. '_get' → logprob: -17.125003814697266
    6. '_create' → logprob: -18.750003814697266
    7. '_add' → logprob: -18.875003814697266
    8. '_gener' → logprob: -19.375003814697266
    9. '_validate' → logprob: -19.625003814697266
    10. 'Generate' → logprob: -19.625003814697266

Token 877: 'generate' (ID: 36386)
  Prédit: 'generate'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'generate' → logprob: -0.00020401719666551799
    2. '_generate' → logprob: -8.500204086303711
    3. 'is' → logprob: -15.875204086303711
    4. 'build' → logprob: -16.12520408630371
    5. 'get' → logprob: -16.25020408630371
    6. 'enumer' → logprob: -17.00020408630371
    7. '(generate' → logprob: -17.25020408630371
    8. ' generate' → logprob: -17.50020408630371
    9. '.generate' → logprob: -18.87520408630371
    10. 'valid' → logprob: -19.25020408630371

Token 878: '_valid' (ID: 23321)
  Prédit: '_valid'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_valid' → logprob: -0.0004438971809577197
    2. 'valid' → logprob: -7.750443935394287
    3. '_live' → logprob: -11.750443458557129
    4. '_possible' → logprob: -12.500443458557129
    5. '_all' → logprob: -14.250443458557129
    6. 'def' → logprob: -14.250443458557129
    7. ' valid' → logprob: -15.375443458557129
    8. 'self' → logprob: -17.125444412231445
    9. 'live' → logprob: -17.250444412231445
    10. '_' → logprob: -17.625444412231445

Token 879: '_live' (ID: 133570)
  Prédit: '_live'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_live' → logprob: -1.1472419600977446e-06
    2. 'live' → logprob: -13.750000953674316
    3. '_sets' → logprob: -17.750001907348633
    4. ' live' → logprob: -19.375001907348633
    5. 'Live' → logprob: -19.375001907348633
    6. '```' → logprob: -21.000001907348633
    7. '_' → logprob: -21.125001907348633
    8. '_safe' → logprob: -21.125001907348633
    9. '_l' → logprob: -21.375001907348633
    10. '_alive' → logprob: -21.500001907348633

Token 880: '_sets' (ID: 56707)
  Prédit: '_sets'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sets' → logprob: -3.583550642360933e-05
    2. '_set' → logprob: -10.250036239624023
    3. '_' → logprob: -15.250036239624023
    4. 'sets' → logprob: -17.625036239624023
    5. ' _' → logprob: -17.875036239624023
    6. '_s' → logprob: -18.375036239624023
    7. '_states' → logprob: -18.375036239624023
    8. '_ranges' → logprob: -18.500036239624023
    9. '```' → logprob: -18.750036239624023
    10. ' sets' → logprob: -18.750036239624023

Token 881: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -3.531315314830863e-06
    2. '(' → logprob: -12.750003814697266
    3. ' (' → logprob: -15.000003814697266
    4. 'self' → logprob: -15.500003814697266
    5. '   ' → logprob: -17.250003814697266
    6. '(
' → logprob: -17.750003814697266
    7. ' self' → logprob: -19.000003814697266
    8. '       ' → logprob: -19.500003814697266
    9. '[self' → logprob: -19.500003814697266
    10. '=self' → logprob: -19.625003814697266

Token 882: ')' (ID: 8)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.004717533942312002
    2. 'self' → logprob: -5.8797173500061035
    3. ')' → logprob: -6.3797173500061035
    4. '   ' → logprob: -9.129717826843262
    5. '(' → logprob: -10.379717826843262
    6. ')(' → logprob: -11.004717826843262
    7. 'def' → logprob: -11.504717826843262
    8. '       ' → logprob: -11.504717826843262
    9. ' self' → logprob: -11.629717826843262
    10. ' (' → logprob: -11.754717826843262

Token 883: ' ->' (ID: 2747)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(self' → logprob: -2.558399319241289e-05
    2. '(' → logprob: -11.125025749206543
    3. ' (' → logprob: -12.375025749206543
    4. 'self' → logprob: -12.500025749206543
    5. '   ' → logprob: -13.500025749206543
    6. '[self' → logprob: -14.625025749206543
    7. '       ' → logprob: -14.750025749206543
    8. 'def' → logprob: -15.500025749206543
    9. ' self' → logprob: -15.875025749206543
    10. '```' → logprob: -16.750024795532227

Token 884: ' List' (ID: 2655)
  Prédit: 'List'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'List' → logprob: -4.704065213445574e-05
    2. ' List' → logprob: -10.250046730041504
    3. 'Set' → logprob: -11.500046730041504
    4. 'set' → logprob: -13.875046730041504
    5. 'list' → logprob: -15.125046730041504
    6. 'Iterator' → logprob: -15.750046730041504
    7. '[List' → logprob: -16.12504768371582
    8. '   ' → logprob: -18.75004768371582
    9. '_list' → logprob: -19.75004768371582
    10. '	List' → logprob: -19.75004768371582

Token 885: '[int' (ID: 40124)
  Prédit: '[int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[int' → logprob: -1.3856492842023727e-06
    2. '<int' → logprob: -14.375000953674316
    3. '[Int' → logprob: -14.625000953674316
    4. '[' → logprob: -15.625000953674316
    5. 'int' → logprob: -16.375001907348633
    6. '[List' → logprob: -16.500001907348633
    7. '[
' → logprob: -18.250001907348633
    8. '[in' → logprob: -18.875001907348633
    9. '```' → logprob: -19.000001907348633
    10. ' [' → logprob: -19.375001907348633

Token 886: ']:
' (ID: 22152)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.03680417686700821
    2. '       ' → logprob: -4.03680419921875
    3. '):
' → logprob: -4.78680419921875
    4. 'self' → logprob: -5.16180419921875
    5. '   ' → logprob: -5.66180419921875
    6. '):' → logprob: -7.66180419921875
    7. ']:
' → logprob: -8.91180419921875
    8. '[self' → logprob: -9.78680419921875
    9. ':
' → logprob: -9.91180419921875
    10. ')' → logprob: -10.28680419921875

Token 887: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -6.8497312895488e-05
    2. '   ' → logprob: -10.875068664550781
    3. '```' → logprob: -10.875068664550781
    4. 'valid' → logprob: -11.750068664550781
    5. 'sets' → logprob: -12.000068664550781
    6. ' valid' → logprob: -12.625068664550781
    7. ' sets' → logprob: -12.750068664550781
    8. 'tokens' → logprob: -13.000068664550781
    9. 'lists' → logprob: -13.375068664550781
    10. 'result' → logprob: -13.875068664550781

Token 888: ' #' (ID: 1069)
  Prédit: 'valid'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'valid' → logprob: -0.15201088786125183
    2. 'result' → logprob: -2.152010917663574
    3. '       ' → logprob: -3.902010917663574
    4. 'region' → logprob: -5.652010917663574
    5. 'results' → logprob: -8.027010917663574
    6. 'def' → logprob: -8.027010917663574
    7. ' valid' → logprob: -8.277010917663574
    8. 'all' → logprob: -9.652010917663574
    9. 'sets' → logprob: -10.402010917663574
    10. 'from' → logprob: -10.527010917663574

Token 889: ' Generate' (ID: 33886)
  Prédit: 'valid'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'valid' → logprob: -0.1097094863653183
    2. 'result' → logprob: -2.3597095012664795
    3. 'region' → logprob: -5.3597092628479
    4. 'def' → logprob: -6.3597092628479
    5. 'results' → logprob: -6.3597092628479
    6. 'all' → logprob: -7.2347092628479
    7. 'from' → logprob: -8.609709739685059
    8. '   ' → logprob: -8.609709739685059
    9. ' valid' → logprob: -9.109709739685059
    10. 'res' → logprob: -9.859709739685059

Token 890: ' all' (ID: 722)
  Prédit: 'valid'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'valid' → logprob: -0.053726766258478165
    2. 'all' → logprob: -3.0537266731262207
    3. 'result' → logprob: -5.428726673126221
    4. 'results' → logprob: -8.303727149963379
    5. '[]' → logprob: -8.428727149963379
    6. ' valid' → logprob: -8.678727149963379
    7. '   ' → logprob: -10.303727149963379
    8. 'sets' → logprob: -10.553727149963379
    9. 'def' → logprob: -11.303727149963379
    10. 'res' → logprob: -11.553727149963379

Token 891: ' subsets' (ID: 165377)
  Prédit: 'valid'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'valid' → logprob: -0.3518628776073456
    2. ' subsets' → logprob: -1.851862907409668
    3. ' valid' → logprob: -2.226862907409668
    4. 'sub' → logprob: -4.101862907409668
    5. 'live' → logprob: -4.726862907409668
    6. 'sets' → logprob: -6.226862907409668
    7. '   ' → logprob: -6.726862907409668
    8. ' live' → logprob: -7.226862907409668
    9. 'def' → logprob: -7.351862907409668
    10. 'region' → logprob: -7.976862907409668

Token 892: ' of' (ID: 328)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1144532710313797
    2. '(self' → logprob: -3.2394533157348633
    3. 'of' → logprob: -3.4894533157348633
    4. 'self' → logprob: -4.864453315734863
    5. 'def' → logprob: -4.989453315734863
    6. '=' → logprob: -5.239453315734863
    7. ' =' → logprob: -5.239453315734863
    8. ' of' → logprob: -5.489453315734863
    9. '   ' → logprob: -5.614453315734863
    10. '(' → logprob: -6.364453315734863

Token 893: ' regions' (ID: 21043)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.05598687380552292
    2. 'self' → logprob: -3.5559868812561035
    3. 'regions' → logprob: -3.6809868812561035
    4. 'ranges' → logprob: -8.055986404418945
    5. 'region' → logprob: -8.805986404418945
    6. ' range' → logprob: -9.180986404418945
    7. 'def' → logprob: -10.555986404418945
    8. ' regions' → logprob: -10.680986404418945
    9. 'all' → logprob: -11.055986404418945
    10. '```' → logprob: -11.305986404418945

Token 894: ' that' (ID: 484)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.34694504737854004
    2. 'self' → logprob: -2.47194504737854
    3. 'with' → logprob: -2.47194504737854
    4. 'that' → logprob: -2.97194504737854
    5. '(self' → logprob: -3.59694504737854
    6. 'def' → logprob: -3.97194504737854
    7. ' that' → logprob: -5.346944808959961
    8. 'from' → logprob: -5.596944808959961
    9. ' with' → logprob: -5.846944808959961
    10. 'result' → logprob: -6.096944808959961

Token 895: ' are' (ID: 553)
  Prédit: 'are'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'are' → logprob: -0.21233229339122772
    2. 's' → logprob: -2.212332248687744
    3. 'cover' → logprob: -3.712332248687744
    4. 'have' → logprob: -4.587332248687744
    5. 'can' → logprob: -4.962332248687744
    6. 'def' → logprob: -5.087332248687744
    7. ' are' → logprob: -5.337332248687744
    8. 'include' → logprob: -5.462332248687744
    9. 'ful' → logprob: -5.587332248687744
    10. '   ' → logprob: -5.712332248687744

Token 896: ' valid' (ID: 4529)
  Prédit: 'valid'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'valid' → logprob: -1.1415588855743408
    2. 'empty' → logprob: -1.5165588855743408
    3. 'adj' → logprob: -1.7665588855743408
    4. 'connected' → logprob: -2.141558885574341
    5. 'either' → logprob: -2.641558885574341
    6. '0' → logprob: -2.891558885574341
    7. ' either' → logprob: -3.391558885574341
    8. ' valid' → logprob: -5.641558647155762
    9. 'single' → logprob: -6.391558647155762
    10. '[]' → logprob: -6.516558647155762

Token 897: ' to' (ID: 316)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.9108360409736633
    2. '       ' → logprob: -1.5358359813690186
    3. '(self' → logprob: -2.0358359813690186
    4. 'self' → logprob: -2.1608359813690186
    5. 'def' → logprob: -2.4108359813690186
    6. '   ' → logprob: -3.7858359813690186
    7. 'with' → logprob: -5.410836219787598
    8. '(' → logprob: -5.535836219787598
    9. 'up' → logprob: -5.910836219787598
    10. ' for' → logprob: -6.035836219787598

Token 898: ' be' (ID: 413)
  Prédit: 'live'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'live' → logprob: -0.07530588656663895
    2. 'use' → logprob: -3.700305938720703
    3. 'include' → logprob: -3.950305938720703
    4. 'visit' → logprob: -4.450305938720703
    5. 'choose' → logprob: -4.575305938720703
    6. 'select' → logprob: -6.450305938720703
    7. 'add' → logprob: -6.575305938720703
    8. ' live' → logprob: -7.325305938720703
    9. 'be' → logprob: -7.450305938720703
    10. 'pick' → logprob: -7.575305938720703

Token 899: ' performed' (ID: 14469)
  Prédit: 'visited'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'visited' → logprob: -1.0746827125549316
    2. 'l' → logprob: -1.5746827125549316
    3. 'performed' → logprob: -1.8246827125549316
    4. 'live' → logprob: -2.1996827125549316
    5. 'used' → logprob: -2.1996827125549316
    6. 'chosen' → logprob: -4.199682712554932
    7. 'played' → logprob: -4.449682712554932
    8. 'consider' → logprob: -5.074682712554932
    9. 'included' → logprob: -5.074682712554932
    10. 'selected' → logprob: -5.199682712554932

Token 900: ' in' (ID: 306)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.7531560063362122
    2. 'on' → logprob: -1.8781559467315674
    3. 'def' → logprob: -1.8781559467315674
    4. 'self' → logprob: -2.1281559467315674
    5. 'for' → logprob: -3.1281559467315674
    6. '       ' → logprob: -3.7531559467315674
    7. '   ' → logprob: -3.8781559467315674
    8. 'as' → logprob: -4.8781561851501465
    9. ' on' → logprob: -6.3781561851501465
    10. ',' → logprob: -6.8781561851501465

Token 901: ' one' (ID: 1001)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.35378846526145935
    2. 'one' → logprob: -1.6037884950637817
    3. 'the' → logprob: -2.353788375854492
    4. 'def' → logprob: -7.103788375854492
    5. 'self' → logprob: -8.228788375854492
    6. 'this' → logprob: -8.228788375854492
    7. 'today' → logprob: -8.853788375854492
    8. ' a' → logprob: -9.353788375854492
    9. 'day' → logprob: -9.728788375854492
    10. ' one' → logprob: -9.728788375854492

Token 902: ' day' (ID: 2163)
  Prédit: 'day'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'day' → logprob: -0.2018805593252182
    2. ' day' → logprob: -1.7018805742263794
    3. 'def' → logprob: -7.70188045501709
    4. 'live' → logprob: -11.95188045501709
    5. ' def' → logprob: -12.70188045501709
    6. '_day' → logprob: -13.20188045501709
    7. ' live' → logprob: -14.20188045501709
    8. ' line' → logprob: -14.32688045501709
    9. 'line' → logprob: -14.45188045501709
    10. '```' → logprob: -14.45188045501709

Token 903: ':
' (ID: 734)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.08425679802894592
    2. 'def' → logprob: -3.834256887435913
    3. ',' → logprob: -4.084256649017334
    4. '   ' → logprob: -4.584256649017334
    5. 'result' → logprob: -4.709256649017334
    6. 'valid' → logprob: -5.209256649017334
    7. ' valid' → logprob: -5.459256649017334
    8. ':' → logprob: -5.709256649017334
    9. '        
' → logprob: -5.834256649017334
    10. '
' → logprob: -5.834256649017334

Token 904: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5551928877830505
    2. ' valid' → logprob: -0.9301928877830505
    3. ' result' → logprob: -4.305192947387695
    4. 'valid' → logprob: -5.555192947387695
    5. ' subsets' → logprob: -5.555192947387695
    6. '[]' → logprob: -5.805192947387695
    7. 'result' → logprob: -6.055192947387695
    8. '   ' → logprob: -6.680192947387695
    9. ' sets' → logprob: -7.430192947387695
    10. '```' → logprob: -7.555192947387695

Token 905: ' #' (ID: 1069)
  Prédit: ' valid'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' valid' → logprob: -0.46239274740219116
    2. 'valid' → logprob: -1.212392807006836
    3. '       ' → logprob: -2.712392807006836
    4. 'result' → logprob: -5.712392807006836
    5. ' result' → logprob: -5.962392807006836
    6. 'results' → logprob: -9.087392807006836
    7. ' subsets' → logprob: -9.212392807006836
    8. 'def' → logprob: -9.837392807006836
    9. ' results' → logprob: -9.962392807006836
    10. 'all' → logprob: -10.087392807006836

Token 906: ' -' (ID: 533)
  Prédit: 'valid'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'valid' → logprob: -0.3477894365787506
    2. ' valid' → logprob: -1.3477894067764282
    3. 'result' → logprob: -3.8477895259857178
    4. '       ' → logprob: -4.722789287567139
    5. ' result' → logprob: -6.347789287567139
    6. 'results' → logprob: -7.472789287567139
    7. 'def' → logprob: -7.722789287567139
    8. 'all' → logprob: -7.972789287567139
    9. 'sets' → logprob: -8.222789764404297
    10. ' subsets' → logprob: -9.472789764404297

Token 907: ' no' (ID: 860)
  Prédit: 'region'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'region' → logprob: -1.4492037296295166
    2. 'valid' → logprob: -2.0742037296295166
    3. ' region' → logprob: -2.3242037296295166
    4. ' valid' → logprob: -2.5742037296295166
    5. 'result' → logprob: -2.5742037296295166
    6. 'all' → logprob: -2.6992037296295166
    7. 'def' → logprob: -2.8242037296295166
    8. ' def' → logprob: -3.4492037296295166
    9. 'They' → logprob: -3.4492037296295166
    10. 'Each' → logprob: -3.4492037296295166

Token 908: ' duplicate' (ID: 41010)
  Prédit: 're'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 're' → logprob: -1.420041561126709
    2. 'region' → logprob: -1.670041561126709
    3. 'regions' → logprob: -1.920041561126709
    4. ' repeated' → logprob: -2.670041561126709
    5. 'repeat' → logprob: -2.670041561126709
    6. ' regions' → logprob: -2.795041561126709
    7. ' region' → logprob: -2.920041561126709
    8. ' repeats' → logprob: -3.420041561126709
    9. 'empty' → logprob: -3.545041561126709
    10. 'duplicate' → logprob: -3.920041561126709

Token 909: ' region' (ID: 7967)
  Prédit: 'regions'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'regions' → logprob: -0.09925483167171478
    2. ' regions' → logprob: -2.474254846572876
    3. '_regions' → logprob: -5.474254608154297
    4. 's' → logprob: -5.599254608154297
    5. 'region' → logprob: -6.349254608154297
    6. ')' → logprob: -8.474254608154297
    7. ' region' → logprob: -8.974254608154297
    8. 'r' → logprob: -9.474254608154297
    9. ',' → logprob: -10.724254608154297
    10. '```' → logprob: -10.724254608154297

Token 910: ' obviously' (ID: 24525)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.0008383385138586164
    2. ' s' → logprob: -7.750838279724121
    3. ',' → logprob: -9.125838279724121
    4. 'def' → logprob: -9.500838279724121
    5. '       ' → logprob: -9.750838279724121
    6. ' (' → logprob: -10.625838279724121
    7. '   ' → logprob: -11.000838279724121
    8. '
' → logprob: -11.000838279724121
    9. '(self' → logprob: -11.000838279724121
    10. '(s' → logprob: -11.125838279724121

Token 911: ' (' (ID: 350)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.18830622732639313
    2. '       ' → logprob: -1.813306212425232
    3. '        
' → logprob: -6.0633063316345215
    4. ',' → logprob: -6.4383063316345215
    5. '   ' → logprob: -6.6883063316345215
    6. 'def' → logprob: -6.8133063316345215
    7. ',
' → logprob: -7.3133063316345215
    8. '
' → logprob: -7.3133063316345215
    9. ' (' → logprob: -8.313305854797363
    10. '(' → logprob: -9.563305854797363

Token 912: 'sets' (ID: 7234)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.24574147164821625
    2. 'since' → logprob: -2.870741367340088
    3. '#' → logprob: -3.120741367340088
    4. 'regions' → logprob: -3.995741367340088
    5. ')
' → logprob: -4.245741367340088
    6. 'subset' → logprob: -4.495741367340088
    7. ' regions' → logprob: -5.120741367340088
    8. ' since' → logprob: -5.120741367340088
    9. 'region' → logprob: -5.370741367340088
    10. 'already' → logprob: -5.370741367340088

Token 913: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.12777215242385864
    2. '=' → logprob: -3.252772092819214
    3. ' =' → logprob: -3.752772092819214
    4. ' are' → logprob: -4.627772331237793
    5. '):' → logprob: -4.627772331237793
    6. ',' → logprob: -5.002772331237793
    7. ':' → logprob: -5.002772331237793
    8. '),' → logprob: -5.627772331237793
    9. ' )' → logprob: -6.002772331237793
    10. ' of' → logprob: -6.002772331237793

Token 914: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.006345611065626144
    2. '   ' → logprob: -5.381345748901367
    3. '
' → logprob: -7.131345748901367
    4. ',' → logprob: -7.881345748901367
    5. '#' → logprob: -8.006345748901367
    6. 'def' → logprob: -9.006345748901367
    7. '        
' → logprob: -10.381345748901367
    8. ':' → logprob: -11.006345748901367
    9. 'from' → logprob: -11.506345748901367
    10. '```' → logprob: -12.256345748901367

Token 915: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.022683702409267426
    2. '#' (adapté à ' #') → logprob: -4.022683620452881
    3. '   ' → logprob: -5.897683620452881
    4. '
' → logprob: -7.272683620452881
    5. ',' → logprob: -8.147684097290039
    6. '        
' → logprob: -8.272684097290039
    7. 'def' → logprob: -8.522684097290039
    8. ' ' → logprob: -9.022684097290039
    9. ' #' → logprob: -10.272684097290039
    10. '-' → logprob: -10.397684097290039

Token 916: ' -' (ID: 533)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.3017967939376831
    2. '-' → logprob: -2.3017969131469727
    3. '       ' → logprob: -2.3017969131469727
    4. 'valid' → logprob: -3.4267969131469727
    5. 'result' → logprob: -4.551796913146973
    6. 'def' → logprob: -5.301796913146973
    7. 'all' → logprob: -5.426796913146973
    8. '   ' → logprob: -5.801796913146973
    9. '
' → logprob: -6.801796913146973
    10. 'res' → logprob: -7.301796913146973

Token 917: ' if' (ID: 538)
  Prédit: 'all'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'all' → logprob: -1.147072434425354
    2. 'if' → logprob: -1.272072434425354
    3. '#' → logprob: -1.897072434425354
    4. 'for' → logprob: -2.5220723152160645
    5. 'adj' → logprob: -3.2720723152160645
    6. 'def' → logprob: -3.5220723152160645
    7. 'each' → logprob: -3.5220723152160645
    8. 'only' → logprob: -3.8970723152160645
    9. 'For' → logprob: -4.3970723152160645
    10. 'at' → logprob: -5.5220723152160645

Token 918: ' multiple' (ID: 7598)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.02952413447201252
    2. 'count' → logprob: -4.404524326324463
    3. ' len' → logprob: -5.279524326324463
    4. 'subset' → logprob: -5.654524326324463
    5. 'the' → logprob: -6.279524326324463
    6. 'bin' → logprob: -6.779524326324463
    7. 'live' → logprob: -6.779524326324463
    8. 'more' → logprob: -7.029524326324463
    9. 'size' → logprob: -7.154524326324463
    10. 'bit' → logprob: -8.279523849487305

Token 919: ' regions' (ID: 21043)
  Prédit: 'regions'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'regions' → logprob: -0.4081474244594574
    2. ' regions' → logprob: -1.4081474542617798
    3. '_live' → logprob: -3.5331473350524902
    4. 'region' → logprob: -3.9081473350524902
    5. 'live' → logprob: -4.28314733505249
    6. '_regions' → logprob: -4.28314733505249
    7. ' live' → logprob: -4.78314733505249
    8. '_region' → logprob: -6.53314733505249
    9. ' region' → logprob: -6.78314733505249
    10. ')' → logprob: -7.28314733505249

Token 920: ',' (ID: 11)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.8270931243896484
    2. ' >' → logprob: -0.8270931243896484
    3. ' are' → logprob: -2.8270931243896484
    4. 'selected' → logprob: -4.202093124389648
    5. ' selected' → logprob: -4.452093124389648
    6. ',' → logprob: -4.577093124389648
    7. ':' → logprob: -4.827093124389648
    8. ' in' → logprob: -5.202093124389648
    9. 'are' → logprob: -5.577093124389648
    10. ':
' → logprob: -6.577093124389648

Token 921: ' they' (ID: 1023)
  Prédit: ' all'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' all' → logprob: -1.547924280166626
    2. 'all' → logprob: -1.797924280166626
    3. 'each' → logprob: -1.922924280166626
    4. 'they' → logprob: -2.047924280166626
    5. 'for' → logprob: -2.422924280166626
    6. '#' → logprob: -2.422924280166626
    7. 'adj' → logprob: -3.047924280166626
    8. ' for' → logprob: -3.172924280166626
    9. ' they' → logprob: -3.547924280166626
    10. 'def' → logprob: -4.172924041748047

Token 922: ' form' (ID: 1625)
  Prédit: ' must'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' must' → logprob: -0.37201210856437683
    2. 'must' → logprob: -1.3720121383666992
    3. ' are' → logprob: -3.122012138366699
    4. 'are' → logprob: -4.497012138366699
    5. ' should' → logprob: -7.747012138366699
    6. ' have' → logprob: -7.997012138366699
    7. ' need' → logprob: -8.1220121383667
    8. ' form' → logprob: -8.6220121383667
    9. 'have' → logprob: -8.7470121383667
    10. 'should' → logprob: -9.1220121383667

Token 923: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.0165448859333992
    2. 'connected' → logprob: -4.766544818878174
    3. ' a' → logprob: -5.141544818878174
    4. '   ' → logprob: -7.141544818878174
    5. 'adj' → logprob: -7.516544818878174
    6. 'one' → logprob: -8.266545295715332
    7. ' connected' → logprob: -8.641545295715332
    8. 'an' → logprob: -8.891545295715332
    9. ' contiguous' → logprob: -10.391545295715332
    10. ' one' → logprob: -10.641545295715332

Token 924: ' connected' (ID: 12079)
  Prédit: 'connected'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'connected' → logprob: -0.0011822503292933106
    2. ' connected' → logprob: -6.8761820793151855
    3. 'continuous' → logprob: -9.501182556152344
    4. 'chain' → logprob: -10.876182556152344
    5. '   ' → logprob: -11.126182556152344
    6. '連' → logprob: -11.751182556152344
    7. 'single' → logprob: -11.876182556152344
    8. '_connected' → logprob: -12.126182556152344
    9. 'cont' → logprob: -12.501182556152344
    10. 'cl' → logprob: -12.501182556152344

Token 925: ' chain' (ID: 13464)
  Prédit: 'graph'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'graph' → logprob: -1.0724846124649048
    2. 'component' → logprob: -1.4474846124649048
    3. ' component' → logprob: -2.0724844932556152
    4. ' graph' → logprob: -2.4474844932556152
    5. ' subset' → logprob: -2.5724844932556152
    6. ' set' → logprob: -3.6974844932556152
    7. 'set' → logprob: -4.197484493255615
    8. ' sub' → logprob: -4.197484493255615
    9. 'subset' → logprob: -4.197484493255615
    10. 'region' → logprob: -4.197484493255615

Token 926: ' by' (ID: 656)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.452251672744751
    2. '(self' → logprob: -1.077251672744751
    3. '
' → logprob: -4.702251434326172
    4. '   ' → logprob: -4.952251434326172
    5. 'self' → logprob: -5.702251434326172
    6. 'def' → logprob: -6.827251434326172
    7. '(' → logprob: -6.827251434326172
    8. '        
' → logprob: -7.827251434326172
    9. ',' → logprob: -8.077251434326172
    10. '(
' → logprob: -8.077251434326172

Token 927: ' adjacency' (ID: 177015)
  Prédit: 'adj'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'adj' → logprob: -0.12697966396808624
    2. ' adjacency' → logprob: -2.1269795894622803
    3. 'edges' → logprob: -11.25197982788086
    4. ' adj' → logprob: -11.62697982788086
    5. 'self' → logprob: -12.00197982788086
    6. '1' → logprob: -12.25197982788086
    7. ' edges' → logprob: -12.37697982788086
    8. 'at' → logprob: -12.50197982788086
    9. ' adjacent' → logprob: -12.50197982788086
    10. ' at' → logprob: -12.75197982788086

Token 928: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.08925711363554001
    2. '(self' → logprob: -3.089257001876831
    3. 'self' → logprob: -3.964257001876831
    4. '
' → logprob: -4.83925724029541
    5. '   ' → logprob: -5.08925724029541
    6. 'def' → logprob: -5.58925724029541
    7. '        
' → logprob: -7.08925724029541
    8. ',' → logprob: -7.58925724029541
    9. '(' → logprob: -7.71425724029541
    10. ' self' → logprob: -7.96425724029541

Token 929: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.004959185607731342
    2. '   ' → logprob: -5.5049591064453125
    3. '
' → logprob: -7.5049591064453125
    4. '        
' → logprob: -9.504959106445312
    5. 'def' → logprob: -9.629959106445312
    6. '```' → logprob: -9.629959106445312
    7. 'from' → logprob: -10.254959106445312
    8. ',' → logprob: -10.754959106445312
    9. '    
' → logprob: -11.754959106445312
    10. '           ' → logprob: -11.754959106445312

Token 930: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.003675848012790084
    2. '   ' → logprob: -5.878675937652588
    3. 'valid' → logprob: -8.12867546081543
    4. 'result' → logprob: -8.25367546081543
    5. 'def' → logprob: -9.00367546081543
    6. 'sets' → logprob: -10.00367546081543
    7. '```' → logprob: -10.50367546081543
    8. ' valid' → logprob: -10.62867546081543
    9. '
' → logprob: -10.75367546081543
    10. ' sets' → logprob: -11.50367546081543

Token 931: ' Max' (ID: 10093)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5458236932754517
    2. 'valid' → logprob: -1.2958236932754517
    3. 'result' → logprob: -2.045823574066162
    4. 'def' → logprob: -4.420823574066162
    5. ' valid' → logprob: -6.420823574066162
    6. 'region' → logprob: -6.420823574066162
    7. '   ' → logprob: -6.920823574066162
    8. 'results' → logprob: -8.04582405090332
    9. 'res' → logprob: -8.17082405090332
    10. '
' → logprob: -8.29582405090332

Token 932: ' regions' (ID: 21043)
  Prédit: '_subset'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_subset' → logprob: -0.7368916869163513
    2. '_set' → logprob: -2.236891746520996
    3. '_size' → logprob: -2.736891746520996
    4. '_bit' → logprob: -2.861891746520996
    5. '_regions' → logprob: -3.111891746520996
    6. 'region' → logprob: -3.111891746520996
    7. '_region' → logprob: -3.361891746520996
    8. '_sets' → logprob: -3.486891746520996
    9. 'subset' → logprob: -3.486891746520996
    10. '_sub' → logprob: -3.611891746520996

Token 933: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.8395190238952637
    2. '_count' → logprob: -1.3395190238952637
    3. '_per' → logprob: -2.0895190238952637
    4. '       ' → logprob: -2.3395190238952637
    5. '=' → logprob: -3.4645190238952637
    6. '   ' → logprob: -4.089519023895264
    7. '_to' → logprob: -4.464519023895264
    8. '_selected' → logprob: -5.339519023895264
    9. '_' → logprob: -5.589519023895264
    10. '_set' → logprob: -5.964519023895264

Token 934: ' ' (ID: 220)
  Prédit: '15'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '15' → logprob: -0.5762224197387695
    2. 'self' → logprob: -0.8262224197387695
    3. ' self' → logprob: -9.20122241973877
    4. '16' → logprob: -9.70122241973877
    5. '1' → logprob: -10.07622241973877
    6. '(self' → logprob: -10.70122241973877
    7. '20' → logprob: -10.82622241973877
    8. ' ' → logprob: -11.57622241973877
    9. '
' → logprob: -11.82622241973877
    10. '32' → logprob: -12.82622241973877

Token 935: '15' (ID: 1055)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.3869732916355133
    2. '15' → logprob: -1.136973261833191
    3. ' self' → logprob: -10.01197338104248
    4. '16' → logprob: -10.38697338104248
    5. '(self' → logprob: -11.88697338104248
    6. '20' → logprob: -12.01197338104248
    7. '
' → logprob: -12.63697338104248
    8. ' ' → logprob: -13.38697338104248
    9. '   ' → logprob: -13.51197338104248
    10. '[self' → logprob: -13.63697338104248

Token 936: ' ->' (ID: 2747)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.009552663192152977
    2. '
' → logprob: -5.759552478790283
    3. ',' → logprob: -6.259552478790283
    4. ' valid' → logprob: -6.759552478790283
    5. 'def' → logprob: -7.384552478790283
    6. 'result' → logprob: -7.384552478790283
    7. 'valid' → logprob: -7.384552478790283
    8. '   ' → logprob: -8.009552955627441
    9. ':' → logprob: -8.134552955627441
    10. '        
' → logprob: -8.634552955627441

Token 937: ' ' (ID: 220)
  Prédit: 'valid'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'valid' → logprob: -0.7233306169509888
    2. 'result' → logprob: -1.0983306169509888
    3. 'from' → logprob: -2.973330497741699
    4. 'all' → logprob: -3.348330497741699
    5. ' valid' → logprob: -3.598330497741699
    6. ' result' → logprob: -3.973330497741699
    7. 'res' → logprob: -4.348330497741699
    8. 'region' → logprob: -4.473330497741699
    9. '1' → logprob: -5.098330497741699
    10. '   ' → logprob: -5.598330497741699

Token 938: '2' (ID: 17)
  Prédit: 'valid'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'valid' → logprob: -0.8533305525779724
    2. 'result' → logprob: -0.9783305525779724
    3. 'region' → logprob: -2.478330612182617
    4. 'regions' → logprob: -3.353330612182617
    5. 'all' → logprob: -3.603330612182617
    6. 'res' → logprob: -4.103330612182617
    7. 'from' → logprob: -4.478330612182617
    8. '1' → logprob: -5.353330612182617
    9. 'results' → logprob: -5.353330612182617
    10. 'sets' → logprob: -5.603330612182617

Token 939: '^' (ID: 61)
  Prédit: '**'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '**' → logprob: -0.005005090497434139
    2. ' **' → logprob: -5.3800048828125
    3. '^' → logprob: -8.3800048828125
    4. '0' → logprob: -9.7550048828125
    5. '```' → logprob: -10.1300048828125
    6. '<<' → logprob: -11.5050048828125
    7. ' ' → logprob: -11.6300048828125
    8. '*' → logprob: -11.7550048828125
    9. '5' → logprob: -12.1300048828125
    10. '15' → logprob: -12.3800048828125

Token 940: '15' (ID: 1055)
  Prédit: '15'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '15' → logprob: -0.006753259804099798
    2. 'self' → logprob: -5.006753444671631
    3. '16' → logprob: -10.881752967834473
    4. 'region' → logprob: -11.131752967834473
    5. 'regions' → logprob: -13.631752967834473
    6. ' self' → logprob: -13.631752967834473
    7. ' ' → logprob: -14.506752967834473
    8. '17' → logprob: -14.506752967834473
    9. '0' → logprob: -15.006752967834473
    10. '```' → logprob: -15.256752967834473

Token 941: ' =' (ID: 314)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.1524213552474976
    2. ' -' → logprob: -1.2774213552474976
    3. '-' → logprob: -2.277421474456787
    4. ':' → logprob: -2.277421474456787
    5. 'def' → logprob: -2.777421474456787
    6. ']' → logprob: -3.527421474456787
    7. '
' → logprob: -3.652421474456787
    8. '   ' → logprob: -4.152421474456787
    9. 'return' → logprob: -4.277421474456787
    10. '```' → logprob: -4.777421474456787

Token 942: ' ' (ID: 220)
  Prédit: '327'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '327' → logprob: -0.005253322422504425
    2. ' ' → logprob: -5.255253314971924
    3. '   ' → logprob: -11.380253791809082
    4. '326' → logprob: -12.755253791809082
    5. '32' → logprob: -13.005253791809082
    6. '(' → logprob: -13.380253791809082
    7. '  ' → logprob: -14.380253791809082
    8. '325' → logprob: -15.255253791809082
    9. '328' → logprob: -16.130252838134766
    10. '    ' → logprob: -16.255252838134766

Token 943: '327' (ID: 27394)
  Prédit: '327'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '327' → logprob: -0.00027849749312736094
    2. '(' → logprob: -8.25027847290039
    3. '   ' → logprob: -11.87527847290039
    4. '1' → logprob: -12.50027847290039
    5. '32' → logprob: -12.62527847290039
    6. '326' → logprob: -13.75027847290039
    7. ' ' → logprob: -14.37527847290039
    8. '0' → logprob: -15.25027847290039
    9. '15' → logprob: -15.50027847290039
    10. ''' → logprob: -16.00027847290039

Token 944: '68' (ID: 4625)
  Prédit: '68'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '68' → logprob: -0.002493375912308693
    2. '67' → logprob: -6.002493381500244
    3. '6' → logprob: -11.627492904663086
    4. '{' → logprob: -12.877492904663086
    5. '7' → logprob: -13.002492904663086
    6. '+' → logprob: -13.377492904663086
    7. '69' → logprob: -14.252492904663086
    8. '[' → logprob: -15.377492904663086
    9. '=' → logprob: -15.752492904663086
    10. '   ' → logprob: -15.877492904663086

Token 945: ' subsets' (ID: 165377)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03403118997812271
    2. '
' → logprob: -3.6590311527252197
    3. 'valid' → logprob: -6.034031391143799
    4. '        
' → logprob: -6.409031391143799
    5. ' valid' → logprob: -6.659031391143799
    6. ',' → logprob: -7.284031391143799
    7. '   ' → logprob: -7.534031391143799
    8. '```' → logprob: -7.534031391143799
    9. 'def' → logprob: -9.53403091430664
    10. '
' → logprob: -9.53403091430664

Token 946: ' possible' (ID: 4149)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.008541285991668701
    2. '
' → logprob: -4.883541107177734
    3. ',' → logprob: -7.883541107177734
    4. '        
' → logprob: -8.258541107177734
    5. '```' → logprob: -9.508541107177734
    6. '   ' → logprob: -9.758541107177734
    7. ':' → logprob: -10.258541107177734
    8. 'def' → logprob: -10.883541107177734
    9. ':
' → logprob: -11.008541107177734
    10. ' lists' → logprob: -11.133541107177734

Token 947: '

' (ID: 279)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.009332195855677128
    2. '
' → logprob: -4.884332180023193
    3. '   ' → logprob: -7.009332180023193
    4. ',' → logprob: -7.384332180023193
    5. '        
' → logprob: -9.634332656860352
    6. 'def' → logprob: -10.759332656860352
    7. '```' → logprob: -11.134332656860352
    8. ':' → logprob: -11.259332656860352
    9. '#' → logprob: -11.884332656860352
    10. ' lists' → logprob: -12.009332656860352

Token 948: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0008829995640553534
    2. '
' → logprob: -8.125883102416992
    3. '   ' → logprob: -8.250883102416992
    4. '        
' → logprob: -8.750883102416992
    5. 'def' → logprob: -8.875883102416992
    6. ',' → logprob: -12.125883102416992
    7. '    
' → logprob: -12.375883102416992
    8. '```' → logprob: -12.375883102416992
    9. '[]' → logprob: -13.750883102416992
    10. '      ' → logprob: -14.000883102416992

Token 949: ' #' (ID: 1069)
  Prédit: 'valid'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'valid' → logprob: -0.007862016558647156
    2. 'result' → logprob: -5.007862091064453
    3. '       ' → logprob: -7.007862091064453
    4. ' valid' → logprob: -8.757862091064453
    5. 'region' → logprob: -10.007862091064453
    6. 'def' → logprob: -11.007862091064453
    7. '   ' → logprob: -11.632862091064453
    8. 'from' → logprob: -11.757862091064453
    9. 'all' → logprob: -13.007862091064453
    10. 'results' → logprob: -13.382862091064453

Token 950: ' We'll' (ID: 46830)
  Prédit: 'valid'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'valid' → logprob: -0.14449270069599152
    2. 'result' → logprob: -2.1444926261901855
    3. 'region' → logprob: -4.3944926261901855
    4. '       ' → logprob: -5.8944926261901855
    5. 'def' → logprob: -6.5194926261901855
    6. '   ' → logprob: -8.019493103027344
    7. ' valid' → logprob: -8.769493103027344
    8. 'results' → logprob: -9.019493103027344
    9. 'from' → logprob: -9.144493103027344
    10. 'all' → logprob: -9.894493103027344

Token 951: ' cache' (ID: 11956)
  Prédit: 'valid'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'valid' → logprob: -0.8425503969192505
    2. 'def' → logprob: -1.3425503969192505
    3. ' valid' → logprob: -2.092550277709961
    4. '   ' → logprob: -2.592550277709961
    5. '       ' → logprob: -2.842550277709961
    6. 'result' → logprob: -3.842550277709961
    7. 'from' → logprob: -4.467550277709961
    8. ' def' → logprob: -5.092550277709961
    9. ' result' → logprob: -5.342550277709961
    10. 'generate' → logprob: -6.467550277709961

Token 952: ' region' (ID: 7967)
  Prédit: 'valid'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'valid' → logprob: -0.6392356753349304
    2. 'def' → logprob: -1.5142357349395752
    3. 'self' → logprob: -2.139235734939575
    4. '       ' → logprob: -3.014235734939575
    5. 'sub' → logprob: -4.139235496520996
    6. '   ' → logprob: -4.264235496520996
    7. '
' → logprob: -4.764235496520996
    8. 'subset' → logprob: -4.764235496520996
    9. 'from' → logprob: -5.014235496520996
    10. 'all' → logprob: -5.014235496520996

Token 953: ' adjacency' (ID: 177015)
  Prédit: '_sub'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_sub' → logprob: -0.6321995854377747
    2. 'sub' → logprob: -1.8821995258331299
    3. 's' → logprob: -2.50719952583313
    4. '_sets' → logprob: -2.63219952583313
    5. 'sets' → logprob: -3.00719952583313
    6. '_count' → logprob: -3.13219952583313
    7. 'visited' → logprob: -4.382199764251709
    8. '_' → logprob: -4.507199764251709
    9. '_subset' → logprob: -4.882199764251709
    10. '_masks' → logprob: -5.257199764251709

Token 954: ' bit' (ID: 3546)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.9248530864715576
    2. '_map' → logprob: -1.6748530864715576
    3. ' =' → logprob: -1.9248530864715576
    4. '=' → logprob: -2.1748530864715576
    5. 'self' → logprob: -2.5498530864715576
    6. '   ' → logprob: -3.2998530864715576
    7. '_cache' → logprob: -3.9248530864715576
    8. 'def' → logprob: -5.424853324890137
    9. 'cache' → logprob: -5.924853324890137
    10. '        
' → logprob: -6.549853324890137

Token 955: 'm' (ID: 76)
  Prédit: 'm'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.11057119071483612
    2. 'mask' → logprob: -2.3605711460113525
    3. 'sets' → logprob: -4.610571384429932
    4. 'set' → logprob: -8.360570907592773
    5. 's' → logprob: -9.735570907592773
    6. 'adj' → logprob: -10.360570907592773
    7. '_masks' → logprob: -10.985570907592773
    8. '_mask' → logprob: -11.485570907592773
    9. '   ' → logprob: -12.860570907592773
    10. 'maps' → logprob: -12.985570907592773

Token 956: 'asks' (ID: 9523)
  Prédit: 'aps'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'aps' → logprob: -0.7453191876411438
    2. 'ap' → logprob: -0.9953191876411438
    3. 'asks' → logprob: -2.495319128036499
    4. 'ask' → logprob: -2.620319128036499
    5. '   ' → logprob: -9.370319366455078
    6. 'app' → logprob: -9.745319366455078
    7. 'apping' → logprob: -9.870319366455078
    8. 'sets' → logprob: -9.995319366455078
    9. 'asked' → logprob: -9.995319366455078
    10. 'mask' → logprob: -10.245319366455078

Token 957: ' for' (ID: 395)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2617810368537903
    2. '
' → logprob: -1.7617809772491455
    3. '   ' → logprob: -3.7617809772491455
    4. 'region' → logprob: -4.136781215667725
    5. '        
' → logprob: -4.761781215667725
    6. '    
' → logprob: -6.136781215667725
    7. ' =' → logprob: -6.386781215667725
    8. ' region' → logprob: -6.886781215667725
    9. ':' → logprob: -7.261781215667725
    10. ' adjacency' → logprob: -7.261781215667725

Token 958: ' quick' (ID: 4853)
  Prédit: 'each'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'each' → logprob: -0.07247801125049591
    2. 'i' → logprob: -3.1974780559539795
    3. 'region' → logprob: -4.4474778175354
    4. 'adj' → logprob: -4.9474778175354
    5. 'self' → logprob: -5.8224778175354
    6. 'regions' → logprob: -5.9474778175354
    7. ' each' → logprob: -6.0724778175354
    8. 'r' → logprob: -7.3224778175354
    9. 'all' → logprob: -7.8224778175354
    10. 'neighbor' → logprob: -8.197478294372559

Token 959: ' checking' (ID: 19141)
  Prédit: 'access'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'access' → logprob: -0.4472644329071045
    2. 'lookup' → logprob: -1.5722644329071045
    3. ' lookup' → logprob: -2.6972644329071045
    4. ' access' → logprob: -3.1972644329071045
    5. ' checks' → logprob: -4.572264671325684
    6. 'checking' → logprob: -4.947264671325684
    7. ' look' → logprob: -5.197264671325684
    8. 'checks' → logprob: -5.197264671325684
    9. 'adj' → logprob: -5.322264671325684
    10. 'look' → logprob: -5.447264671325684

Token 960: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.013250819407403469
    2. 'region' → logprob: -4.763250827789307
    3. 'adj' → logprob: -6.763250827789307
    4. '   ' → logprob: -7.013250827789307
    5. ' adjacency' → logprob: -7.138250827789307
    6. ' region' → logprob: -7.263250827789307
    7. '
' → logprob: -7.763250827789307
    8. '        
' → logprob: -8.388250350952148
    9. '```' → logprob: -9.638250350952148
    10. 'self' → logprob: -9.638250350952148

Token 961: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0015909154899418354
    2. '
' → logprob: -7.126590728759766
    3. '        
' → logprob: -8.126590728759766
    4. '   ' → logprob: -8.376590728759766
    5. '```' → logprob: -9.626590728759766
    6. ',' → logprob: -10.876590728759766
    7. ':' → logprob: -10.876590728759766
    8. '	' → logprob: -11.001590728759766
    9. 'self' → logprob: -11.126590728759766
    10. ')' → logprob: -11.251590728759766

Token 962: ' adj' (ID: 20251)
  Prédit: 'region'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'region' → logprob: -0.8515039682388306
    2. 'adj' (adapté à ' adj') → logprob: -0.9765039682388306
    3. '       ' → logprob: -1.7265039682388306
    4. ' region' → logprob: -4.851503849029541
    5. ' adjacency' → logprob: -4.851503849029541
    6. '   ' → logprob: -6.601503849029541
    7. 'result' → logprob: -6.976503849029541
    8. 'valid' → logprob: -8.8515043258667
    9. ' adj' → logprob: -8.9765043258667
    10. 'res' → logprob: -8.9765043258667

Token 963: '_masks' (ID: 155097)
  Prédit: 'acency'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'acency' → logprob: -0.005233290605247021
    2. 'ac' → logprob: -5.505233287811279
    3. '_masks' → logprob: -7.005233287811279
    4. '_mask' → logprob: -9.255233764648438
    5. '_bit' → logprob: -10.255233764648438
    6. ' =' → logprob: -10.255233764648438
    7. 'acity' → logprob: -10.630233764648438
    8. 'm' → logprob: -11.255233764648438
    9. 'acent' → logprob: -11.380233764648438
    10. '_map' → logprob: -11.880233764648438

Token 964: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6932508945465088
    2. ' =' → logprob: -0.6932508945465088
    3. ':' → logprob: -9.19325065612793
    4. '=[' → logprob: -14.06825065612793
    5. '[' → logprob: -14.69325065612793
    6. '=[]' → logprob: -14.81825065612793
    7. ' ' → logprob: -15.56825065612793
    8. '   ' → logprob: -16.31825065612793
    9. ' =[' → logprob: -16.44325065612793
    10. ',' → logprob: -17.06825065612793

Token 965: ' []
' (ID: 8911)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.008935756050050259
    2. ' [' → logprob: -4.758935928344727
    3. '[]' → logprob: -8.508935928344727
    4. '[(' → logprob: -10.133935928344727
    5. '[]
' → logprob: -10.258935928344727
    6. '{' → logprob: -10.508935928344727
    7. '0' → logprob: -11.508935928344727
    8. '   ' → logprob: -13.008935928344727
    9. '[
' → logprob: -13.258935928344727
    10. '[self' → logprob: -13.758935928344727

Token 966: '       ' (ID: 309)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.319092333316803
    2. '=' → logprob: -1.4440922737121582
    3. ' for' → logprob: -3.444092273712158
    4. 'for' → logprob: -6.069092273712158
    5. '[' → logprob: -6.569092273712158
    6. '=[' → logprob: -7.194092273712158
    7. '       ' → logprob: -7.694092273712158
    8. ':' → logprob: -8.944092750549316
    9. '=
' → logprob: -9.944092750549316
    10. '   ' → logprob: -10.319092750549316

Token 967: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.25667643547058105
    2. 'for' (adapté à ' for') → logprob: -1.506676435470581
    3. '[' → logprob: -5.63167667388916
    4. '       ' → logprob: -8.25667667388916
    5. '[
' → logprob: -8.50667667388916
    6. ' [' → logprob: -8.88167667388916
    7. '[]' → logprob: -9.00667667388916
    8. '=' → logprob: -9.13167667388916
    9. ' =' → logprob: -9.38167667388916
    10. '	for' → logprob: -10.25667667388916

Token 968: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.011771696619689465
    2. 'r' → logprob: -4.5117716789245605
    3. ' i' → logprob: -7.3867716789245605
    4. '   ' → logprob: -9.636772155761719
    5. 'region' → logprob: -10.511772155761719
    6. ' r' → logprob: -12.136772155761719
    7. '_' → logprob: -13.386772155761719
    8. '_i' → logprob: -13.386772155761719
    9. ' region' → logprob: -13.761772155761719
    10. '       ' → logprob: -14.511772155761719

Token 969: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.1129029169678688
    2. 'in' → logprob: -2.237902879714966
    3. '	in' → logprob: -10.362902641296387
    4. ' ' → logprob: -10.737902641296387
    5. 'n' → logprob: -11.612902641296387
    6. '=' → logprob: -12.487902641296387
    7. ',' → logprob: -12.737902641296387
    8. '	' → logprob: -12.987902641296387
    9. 'i' → logprob: -13.737902641296387
    10. ' i' → logprob: -13.862902641296387

Token 970: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0007106438861228526
    2. ' range' → logprob: -7.250710487365723
    3. 'self' → logprob: -15.000710487365723
    4. '   ' → logprob: -15.750710487365723
    5. ' ' → logprob: -16.37571144104004
    6. '(range' → logprob: -17.25071144104004
    7. '	range' → logprob: -17.37571144104004
    8. '  ' → logprob: -17.37571144104004
    9. '0' → logprob: -18.37571144104004
    10. ')' → logprob: -18.50071144104004

Token 971: '(self' (ID: 2402)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0002980432182084769
    2. ' self' → logprob: -8.125298500061035
    3. '(self' → logprob: -14.125298500061035
    4. '15' → logprob: -14.500298500061035
    5. '   ' → logprob: -14.750298500061035
    6. '0' → logprob: -15.750298500061035
    7. '       ' → logprob: -16.75029754638672
    8. '           ' → logprob: -17.00029754638672
    9. '	self' → logprob: -17.50029754638672
    10. '[self' → logprob: -17.62529754638672

Token 972: '.p' (ID: 1201)
  Prédit: '.p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.p' → logprob: -0.000169332604855299
    2. 'p' → logprob: -9.25016975402832
    3. '.' → logprob: -9.75016975402832
    4. 'region' → logprob: -12.37516975402832
    5. '.region' → logprob: -13.00016975402832
    6. ' .' → logprob: -13.25016975402832
    7. ')' → logprob: -13.75016975402832
    8. '```' → logprob: -14.43766975402832
    9. ').' → logprob: -14.68766975402832
    10. '_p' → logprob: -15.00016975402832

Token 973: '.region' (ID: 88305)
  Prédit: '.region'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.region' → logprob: -0.0009145628428086638
    2. 'region' → logprob: -7.000914573669434
    3. '.' → logprob: -13.375914573669434
    4. ' region' → logprob: -14.125914573669434
    5. ' .' → logprob: -14.500914573669434
    6. '#region' → logprob: -15.750914573669434
    7. '.p' → logprob: -17.500913619995117
    8. ' ' → logprob: -18.000913619995117
    9. '   ' → logprob: -18.125913619995117
    10. ')' → logprob: -18.375913619995117

Token 974: '_count' (ID: 7536)
  Prédit: '_count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_count' → logprob: -0.005280007608234882
    2. 'count' → logprob: -5.255280017852783
    3. 'region' → logprob: -10.130279541015625
    4. ')' → logprob: -13.380279541015625
    5. 'Count' → logprob: -13.505279541015625
    6. '   ' → logprob: -14.130279541015625
    7. '_COUNT' → logprob: -14.380279541015625
    8. 'int' → logprob: -15.005279541015625
    9. ' count' → logprob: -15.630279541015625
    10. 'COUNT' → logprob: -15.630279541015625

Token 975: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.0019946584943681955
    2. '):' → logprob: -6.376994609832764
    3. '       ' → logprob: -9.001995086669922
    4. '):
' → logprob: -9.751995086669922
    5. ':
' → logprob: -10.251995086669922
    6. '           ' → logprob: -10.751995086669922
    7. ',' → logprob: -11.126995086669922
    8. ':' → logprob: -11.251995086669922
    9. '   ' → logprob: -11.626995086669922
    10. ' ):
' → logprob: -11.876995086669922

Token 976: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0012582069030031562
    2. '   ' → logprob: -6.751258373260498
    3. ' adj' → logprob: -10.00125789642334
    4. '       ' → logprob: -11.00125789642334
    5. 'adj' → logprob: -11.62625789642334
    6. '	       ' → logprob: -12.00125789642334
    7. '	   ' → logprob: -12.50125789642334
    8. ' ' → logprob: -13.62625789642334
    9. '               ' → logprob: -13.75125789642334
    10. '		' → logprob: -14.12625789642334

Token 977: ' mask' (ID: 10910)
  Prédit: 'mask'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mask' (adapté à ' mask') → logprob: -0.0038518591318279505
    2. 'adj' → logprob: -5.878851890563965
    3. ' mask' → logprob: -7.753851890563965
    4. 'm' → logprob: -7.878851890563965
    5. '           ' → logprob: -9.503851890563965
    6. '   ' → logprob: -9.753851890563965
    7. '       ' → logprob: -10.253851890563965
    8. 'bits' → logprob: -10.628851890563965
    9. 'bit' → logprob: -11.003851890563965
    10. '               ' → logprob: -11.378851890563965

Token 978: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5231344699859619
    2. ' =' → logprob: -0.8981344699859619
    3. '           ' → logprob: -12.398134231567383
    4. ':' → logprob: -13.023134231567383
    5. '   ' → logprob: -14.273134231567383
    6. ' ' → logprob: -14.273134231567383
    7. ' ' → logprob: -14.773134231567383
    8. ')' → logprob: -14.898134231567383
    9. '=(' → logprob: -15.148134231567383
    10. '=
' → logprob: -15.148134231567383

Token 979: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0005199087900109589
    2. '(' → logprob: -7.875519752502441
    3. '1' → logprob: -9.500519752502441
    4. 'sum' → logprob: -10.250519752502441
    5. ' ' → logprob: -10.500519752502441
    6. '   ' → logprob: -14.000519752502441
    7. ' (' → logprob: -14.500519752502441
    8. '           ' → logprob: -16.000520706176758
    9. ' sum' → logprob: -16.000520706176758
    10. '(sum' → logprob: -16.250520706176758

Token 980: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00016039233014453202
    2. '(' → logprob: -9.375160217285156
    3. 'sum' → logprob: -9.875160217285156
    4. '1' → logprob: -11.000160217285156
    5. ' ' → logprob: -11.875160217285156
    6. '   ' → logprob: -16.625160217285156
    7. ' sum' → logprob: -16.750160217285156
    8. ' (' → logprob: -16.875160217285156
    9. '(sum' → logprob: -16.875160217285156
    10. '[' → logprob: -18.125160217285156

Token 981: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.03327194228768349
    2. '<|end|>' → logprob: -4.158271789550781
    3. ' for' → logprob: -4.783271789550781
    4. '	       ' → logprob: -6.533271789550781
    5. '		' → logprob: -6.783271789550781
    6. 'for' → logprob: -6.783271789550781
    7. '               ' → logprob: -7.283271789550781
    8. '
' → logprob: -7.408271789550781
    9. '<|end|>' → logprob: -7.408271789550781
    10. ' =' → logprob: -8.283271789550781

Token 982: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.24292568862438202
    2. ' for' → logprob: -1.6179256439208984
    3. 'for' → logprob: -5.242925643920898
    4. '<|end|>' → logprob: -5.367925643920898
    5. '		' → logprob: -6.617925643920898
    6. ' ' → logprob: -6.742925643920898
    7. '	       ' → logprob: -6.742925643920898
    8. '       ' → logprob: -7.492925643920898
    9. '
' → logprob: -7.742925643920898
    10. '   ' → logprob: -7.867925643920898

Token 983: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.08444415777921677
    2. ' for' → logprob: -2.584444046020508
    3. '           ' → logprob: -5.209444046020508
    4. '	for' → logprob: -10.459444046020508
    5. '               ' → logprob: -11.334444046020508
    6. 'adj' → logprob: -11.334444046020508
    7. 'mask' → logprob: -12.084444046020508
    8. '                   ' → logprob: -12.459444046020508
    9. '   ' → logprob: -13.084444046020508
    10. ' ' → logprob: -13.459444046020508

Token 984: ' adj' (ID: 20251)
  Prédit: 'nbr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'nbr' → logprob: -0.978245198726654
    2. 'n' → logprob: -1.4782452583312988
    3. 'neighbor' → logprob: -1.4782452583312988
    4. 'j' → logprob: -2.603245258331299
    5. 'adj' → logprob: -2.978245258331299
    6. 'nei' → logprob: -3.853245258331299
    7. 'nb' → logprob: -4.353245258331299
    8. 'a' → logprob: -4.978245258331299
    9. 'ne' → logprob: -6.978245258331299
    10. 'nj' → logprob: -8.22824478149414

Token 985: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.043644268065690994
    2. '_region' → logprob: -3.7936441898345947
    3. 'r' → logprob: -4.418644428253174
    4. 'acent' → logprob: -6.043644428253174
    5. 'region' → logprob: -6.418644428253174
    6. 'j' → logprob: -6.668644428253174
    7. '_node' → logprob: -7.418644428253174
    8. '_r' → logprob: -7.418644428253174
    9. '_neighbor' → logprob: -7.543644428253174
    10. '_j' → logprob: -8.168643951416016

Token 986: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0006596576422452927
    2. ' self' → logprob: -7.375659465789795
    3. '[self' → logprob: -10.625659942626953
    4. '(self' → logprob: -12.125659942626953
    5. '           ' → logprob: -14.125659942626953
    6. '[' → logprob: -14.125659942626953
    7. '       ' → logprob: -14.375659942626953
    8. '	self' → logprob: -14.500659942626953
    9. '=self' → logprob: -15.250659942626953
    10. '   ' → logprob: -15.625659942626953

Token 987: '.ad' (ID: 19775)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.014107560738921165
    2. 'adj' → logprob: -4.389107704162598
    3. '[self' → logprob: -7.389107704162598
    4. ' self' → logprob: -7.514107704162598
    5. '.ad' → logprob: -8.264107704162598
    6. 'ad' → logprob: -9.014107704162598
    7. ' adjacency' → logprob: -11.389107704162598
    8. '_ad' → logprob: -11.639107704162598
    9. '(self' → logprob: -12.014107704162598
    10. '_adj' → logprob: -12.014107704162598

Token 988: 'jac' (ID: 77250)
  Prédit: 'jac'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'jac' → logprob: -0.005770819261670113
    2. 'j' → logprob: -5.255770683288574
    3. 'acency' → logprob: -8.005770683288574
    4. '[self' → logprob: -9.630770683288574
    5. '(self' → logprob: -9.630770683288574
    6. '[' → logprob: -11.130770683288574
    7. 'self' → logprob: -11.880770683288574
    8. ']' → logprob: -12.005770683288574
    9. 'c' → logprob: -12.130770683288574
    10. 's' → logprob: -12.255770683288574

Token 989: 'ency' (ID: 2799)
  Prédit: 'ency'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ency' → logprob: -0.18784210085868835
    2. 'acency' → logprob: -1.9378421306610107
    3. 'acy' → logprob: -4.062841892242432
    4. 'ancy' → logprob: -6.187841892242432
    5. 'ac' → logprob: -6.562841892242432
    6. 'ent' → logprob: -7.062841892242432
    7. '_mask' → logprob: -7.312841892242432
    8. '   ' → logprob: -7.562841892242432
    9. 's' → logprob: -7.937841892242432
    10. 'n' → logprob: -7.937841892242432

Token 990: '_map' (ID: 11824)
  Prédit: '_map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_map' → logprob: -0.02813173457980156
    2. '[i' → logprob: -3.6531317234039307
    3. 'map' → logprob: -6.65313196182251
    4. '_mask' → logprob: -8.028131484985352
    5. 'mask' → logprob: -9.778131484985352
    6. 'self' → logprob: -10.028131484985352
    7. 'Map' → logprob: -10.653131484985352
    8. '[self' → logprob: -10.653131484985352
    9. '_masks' → logprob: -10.903131484985352
    10. '_maps' → logprob: -11.528131484985352

Token 991: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -2.339278580620885e-06
    2. 'i' → logprob: -13.250001907348633
    3. '   ' → logprob: -15.375001907348633
    4. '[' → logprob: -15.500001907348633
    5. ' ' → logprob: -17.375001907348633
    6. '{i' → logprob: -17.375001907348633
    7. '[
' → logprob: -17.625001907348633
    8. '       ' → logprob: -18.000001907348633
    9. ' [' → logprob: -18.125001907348633
    10. '(i' → logprob: -18.750001907348633

Token 992: ']:
' (ID: 22152)
  Prédit: ']:
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']:
' → logprob: -0.8528012633323669
    2. '):
' → logprob: -1.4778013229370117
    3. ':
' → logprob: -1.7278013229370117
    4. ':' → logprob: -2.4778013229370117
    5. ']:' → logprob: -3.1028013229370117
    6. '):' → logprob: -4.602801322937012
    7. '           ' → logprob: -4.727801322937012
    8. ']' → logprob: -4.727801322937012
    9. '       ' → logprob: -5.602801322937012
    10. '|' → logprob: -6.102801322937012

Token 993: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.00167161098215729
    2. 'mask' → logprob: -7.00167179107666
    3. ' mask' → logprob: -7.25167179107666
    4. '                   ' → logprob: -11.00167179107666
    5. '           ' → logprob: -11.62667179107666
    6. '	mask' → logprob: -12.00167179107666
    7. '1' → logprob: -12.37667179107666
    8. '   ' → logprob: -12.50167179107666
    9. '```' → logprob: -12.87667179107666
    10. '(mask' → logprob: -13.00167179107666

Token 994: ' mask' (ID: 10910)
  Prédit: 'mask'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mask' (adapté à ' mask') → logprob: -0.005474232602864504
    2. ' mask' → logprob: -5.380474090576172
    3. '               ' → logprob: -7.255474090576172
    4. '           ' → logprob: -9.130474090576172
    5. '	mask' → logprob: -10.880474090576172
    6. '   ' → logprob: -11.505474090576172
    7. '1' → logprob: -12.630474090576172
    8. '                   ' → logprob: -12.880474090576172
    9. '(mask' → logprob: -13.255474090576172
    10. '_mask' → logprob: -14.130474090576172

Token 995: ' |=' (ID: 19917)
  Prédit: '|'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '|' → logprob: -0.002477200934663415
    2. ' |=' → logprob: -6.002477169036865
    3. '=' → logprob: -14.002477645874023
    4. ' |' → logprob: -15.627477645874023
    5. '|=
' → logprob: -15.627477645874023
    6. '+=' → logprob: -16.127477645874023
    7. '```' → logprob: -16.377477645874023
    8. '|
' → logprob: -16.377477645874023
    9. '   ' → logprob: -16.502477645874023
    10. '│' → logprob: -17.627477645874023

Token 996: ' (' (ID: 350)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.01829696260392666
    2. '(' → logprob: -4.01829719543457
    3. ' (' → logprob: -9.14329719543457
    4. ' ' → logprob: -10.14329719543457
    5. '               ' → logprob: -15.01829719543457
    6. '           ' → logprob: -15.14329719543457
    7. '   ' → logprob: -16.64329719543457
    8. '                   ' → logprob: -17.01829719543457
    9. '```' → logprob: -17.89329719543457
    10. '             ' → logprob: -18.51829719543457

Token 997: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -9.65101717156358e-05
    2. '(' → logprob: -9.250096321105957
    3. ' ' → logprob: -14.875096321105957
    4. ' (' → logprob: -18.000097274780273
    5. '   ' → logprob: -19.250097274780273
    6. '           ' → logprob: -19.750097274780273
    7. '```' → logprob: -20.500097274780273
    8. '
' → logprob: -20.875097274780273
    9. '               ' → logprob: -21.000097274780273
    10. '`' → logprob: -21.750097274780273

Token 998: ' <<' (ID: 2256)
  Prédit: '<<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<<' → logprob: -0.16055920720100403
    2. ' <<' → logprob: -1.9105591773986816
    3. '1' → logprob: -8.03555965423584
    4. '<<(' → logprob: -12.03555965423584
    5. ')<<' → logprob: -13.91055965423584
    6. ' ' → logprob: -14.03555965423584
    7. '<<<' → logprob: -14.41055965423584
    8. ' ' → logprob: -14.41055965423584
    9. '(' → logprob: -14.66055965423584
    10. ')' → logprob: -14.66055965423584

Token 999: ' adj' (ID: 20251)
  Prédit: 'adj'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'adj' → logprob: -5.512236498361744e-07
    2. ' adj' → logprob: -14.500000953674316
    3. '(adj' → logprob: -18.25
    4. 'ad' → logprob: -19.875
    5. '   ' → logprob: -21.375
    6. 'adm' → logprob: -21.625
    7. '_adj' → logprob: -21.875
    8. 'arr' → logprob: -22.125
    9. 'Adj' → logprob: -22.125
    10. '
' → logprob: -22.625

Token 1000: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.000724229437764734
    2. ')
' → logprob: -7.7507243156433105
    3. '           ' → logprob: -9.000723838806152
    4. ')i' → logprob: -10.000723838806152
    5. ' )' → logprob: -10.250723838806152
    6. ')<<' → logprob: -10.875723838806152
    7. '               ' → logprob: -11.375723838806152
    8. ')+' → logprob: -11.625723838806152
    9. '<|end|>' → logprob: -11.750723838806152
    10. ')return' → logprob: -12.375723838806152

Token 1001: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.004649064969271421
    2. '       ' → logprob: -5.6296491622924805
    3. '   ' → logprob: -7.7546491622924805
    4. 'adj' → logprob: -8.12964916229248
    5. '```' → logprob: -9.75464916229248
    6. '		' → logprob: -9.75464916229248
    7. '               ' → logprob: -9.87964916229248
    8. '0' → logprob: -10.37964916229248
    9. '
' → logprob: -10.62964916229248
    10. '	' → logprob: -11.12964916229248

Token 1002: ' adj' (ID: 20251)
  Prédit: 'adj'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'adj' (adapté à ' adj') → logprob: -0.16528698801994324
    2. '       ' → logprob: -1.9152870178222656
    3. '           ' → logprob: -5.790287017822266
    4. ' adj' → logprob: -6.415287017822266
    5. '   ' → logprob: -8.790287017822266
    6. 'return' → logprob: -9.165287017822266
    7. '
' → logprob: -10.665287017822266
    8. '```' → logprob: -11.165287017822266
    9. 'Adj' → logprob: -11.290287017822266
    10. '0' → logprob: -11.915287017822266

Token 1003: '_masks' (ID: 155097)
  Prédit: '_masks'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_masks' → logprob: -0.0003741887048818171
    2. '_mask' → logprob: -8.750373840332031
    3. '[i' → logprob: -10.000373840332031
    4. 'mask' → logprob: -10.250373840332031
    5. 'Masks' → logprob: -10.375373840332031
    6. ')' → logprob: -10.375373840332031
    7. '|' → logprob: -11.375373840332031
    8. ' |=' → logprob: -11.625373840332031
    9. 's' → logprob: -11.875373840332031
    10. 'm' → logprob: -12.125373840332031

Token 1004: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.12294289469718933
    2. '=' → logprob: -2.2479429244995117
    3. ' =' → logprob: -6.622942924499512
    4. '           ' → logprob: -6.622942924499512
    5. '       ' → logprob: -6.747942924499512
    6. '.' → logprob: -6.747942924499512
    7. '+=' → logprob: -6.747942924499512
    8. ' <<=' → logprob: -7.122942924499512
    9. 'append' → logprob: -7.497942924499512
    10. '[' → logprob: -7.622942924499512

Token 1005: '(mask' (ID: 80748)
  Prédit: 'mask'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mask' → logprob: -0.12211637943983078
    2. '(mask' → logprob: -2.7471163272857666
    3. '(' → logprob: -3.6221163272857666
    4. ' mask' → logprob: -4.247116565704346
    5. '0' → logprob: -5.122116565704346
    6. ' (' → logprob: -6.372116565704346
    7. '(
' → logprob: -7.247116565704346
    8. ')' → logprob: -7.622116565704346
    9. 'adj' → logprob: -7.872116565704346
    10. '1' → logprob: -8.747116088867188

Token 1006: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.10759899020195007
    2. '       ' → logprob: -2.3575990200042725
    3. '<|end|>' → logprob: -5.607598781585693
    4. '
' → logprob: -5.857598781585693
    5. ')
' → logprob: -8.232599258422852
    6. ' )' → logprob: -8.982599258422852
    7. '        
' → logprob: -9.357599258422852
    8. '<|end|>' → logprob: -9.607599258422852
    9. ').' → logprob: -10.107599258422852
    10. '.' → logprob: -10.232599258422852

Token 1007: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.28122207522392273
    2. '
' → logprob: -1.5312221050262451
    3. 'valid' → logprob: -4.281221866607666
    4. '```' → logprob: -5.031221866607666
    5. '        
' → logprob: -5.156221866607666
    6. 'results' → logprob: -6.906221866607666
    7. '   ' → logprob: -7.406221866607666
    8. 'result' → logprob: -7.906221866607666
    9. '    
' → logprob: -8.281222343444824
    10. ' valid' → logprob: -8.781222343444824

Token 1008: ' valid' (ID: 4529)
  Prédit: 'valid'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'valid' (adapté à ' valid') → logprob: -0.03127480298280716
    2. '       ' → logprob: -3.5312747955322266
    3. 'result' → logprob: -7.031274795532227
    4. 'all' → logprob: -8.531274795532227
    5. '
' → logprob: -8.531274795532227
    6. 'def' → logprob: -8.906274795532227
    7. '   ' → logprob: -9.906274795532227
    8. ' valid' → logprob: -10.406274795532227
    9. 'from' → logprob: -11.656274795532227
    10. 'results' → logprob: -11.656274795532227

Token 1009: '_sets' (ID: 56707)
  Prédit: '_sets'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sets' → logprob: -0.25222018361091614
    2. '_live' → logprob: -1.5022201538085938
    3. '_sub' → logprob: -9.002220153808594
    4. '_masks' → logprob: -9.752220153808594
    5. ' =' → logprob: -10.127220153808594
    6. '_set' → logprob: -10.752220153808594
    7. 'sets' → logprob: -11.002220153808594
    8. 'live' → logprob: -11.252220153808594
    9. '_states' → logprob: -11.752220153808594
    10. '=' → logprob: -12.502220153808594

Token 1010: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.01434543076902628
    2. '=' → logprob: -4.264345645904541
    3. ':' → logprob: -8.639345169067383
    4. '=[]' → logprob: -12.639345169067383
    5. '   ' → logprob: -14.389345169067383
    6. '.append' → logprob: -14.514345169067383
    7. '=[]
' → logprob: -14.514345169067383
    8. ' ' → logprob: -16.764345169067383
    9. ',' → logprob: -17.389345169067383
    10. '  ' → logprob: -17.764345169067383

Token 1011: ' []
' (ID: 8911)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.038371939212083817
    2. '[]' → logprob: -3.288372039794922
    3. '{' → logprob: -8.538372039794922
    4. '[]
' → logprob: -9.538372039794922
    5. ' [' → logprob: -10.288372039794922
    6. 'set' → logprob: -11.163372039794922
    7. ' []' → logprob: -12.038372039794922
    8. '[]

' → logprob: -12.663372039794922
    9. '[{' → logprob: -13.038372039794922
    10. '[]{' → logprob: -14.163372039794922

Token 1012: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0033326568081974983
    2. '
' → logprob: -5.753332614898682
    3. '   ' → logprob: -9.12833309173584
    4. 'for' → logprob: -10.12833309173584
    5. '        
' → logprob: -13.00333309173584
    6. '	' → logprob: -13.75333309173584
    7. '```' → logprob: -13.75333309173584
    8. ' for' → logprob: -14.00333309173584
    9. 'def' → logprob: -14.87833309173584
    10. '           ' → logprob: -14.87833309173584

Token 1013: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.02426351048052311
    2. 'def' → logprob: -4.024263381958008
    3. '       ' → logprob: -5.274263381958008
    4. 'from' → logprob: -7.274263381958008
    5. 'stack' → logprob: -9.524263381958008
    6. 'all' → logprob: -10.024263381958008
    7. 'max' → logprob: -10.149263381958008
    8. ' for' → logprob: -10.524263381958008
    9. '
' → logprob: -10.649263381958008
    10. 'full' → logprob: -10.899263381958008

Token 1014: ' We' (ID: 1416)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.14150795340538025
    2. 'def' → logprob: -2.141507863998413
    3. '       ' → logprob: -4.891508102416992
    4. 'from' → logprob: -5.516508102416992
    5. 'region' → logprob: -6.891508102416992
    6. 'n' → logprob: -6.891508102416992
    7. 'max' → logprob: -8.016508102416992
    8. '   ' → logprob: -8.391508102416992
    9. 'stack' → logprob: -8.891508102416992
    10. 'all' → logprob: -9.516508102416992

Token 1015: ' rely' (ID: 25222)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5614602565765381
    2. ' for' → logprob: -1.561460256576538
    3. 'def' → logprob: -2.811460256576538
    4. 'for' → logprob: -2.811460256576538
    5. '   ' → logprob: -3.186460256576538
    6. ' =' → logprob: -3.561460256576538
    7. ' def' → logprob: -4.436460494995117
    8. ' ' → logprob: -5.311460494995117
    9. ' can' → logprob: -6.186460494995117
    10. '.append' → logprob: -6.436460494995117

Token 1016: ' on' (ID: 402)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2588569223880768
    2. 'on' → logprob: -1.6338568925857544
    3. ' on' → logprob: -3.508857011795044
    4. '   ' → logprob: -6.008856773376465
    5. '      ' → logprob: -8.883856773376465
    6. '           ' → logprob: -9.383856773376465
    7. 'for' → logprob: -9.383856773376465
    8. '        ' → logprob: -10.133856773376465
    9. '     ' → logprob: -10.258856773376465
    10. 'import' → logprob: -10.383856773376465

Token 1017: ' the' (ID: 290)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -1.2113045454025269
    2. 'def' → logprob: -1.7113045454025269
    3. 'self' → logprob: -1.8363045454025269
    4. '0' → logprob: -2.3363046646118164
    5. 'lambda' → logprob: -2.7113046646118164
    6. 'region' → logprob: -2.8363046646118164
    7. 'from' → logprob: -3.2113046646118164
    8. 'for' → logprob: -3.7113046646118164
    9. '
' → logprob: -3.7113046646118164
    10. 'len' → logprob: -3.8363046646118164

Token 1018: ' fact' (ID: 2840)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.08534200489521027
    2. 'from' → logprob: -3.8353419303894043
    3. 'for' → logprob: -4.335341930389404
    4. 'range' → logprob: -4.335341930389404
    5. 'def' → logprob: -4.585341930389404
    6. 'import' → logprob: -5.085341930389404
    7. '.p' → logprob: -5.210341930389404
    8. '
' → logprob: -5.460341930389404
    9. 'region' → logprob: -6.085341930389404
    10. 'self' → logprob: -7.085341930389404

Token 1019: ' that' (ID: 484)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6221429109573364
    2. 'for' → logprob: -1.6221429109573364
    3. ' for' → logprob: -1.6221429109573364
    4. ' that' → logprob: -3.247142791748047
    5. 'that' → logprob: -4.497142791748047
    6. 'range' → logprob: -4.997142791748047
    7. ' range' → logprob: -5.622142791748047
    8. '   ' → logprob: -5.622142791748047
    9. 'self' → logprob: -6.622142791748047
    10. ' self' → logprob: -7.622142791748047

Token 1020: ' subsets' (ID: 165377)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.07835987210273743
    2. 'for' → logprob: -3.203359842300415
    3. 'from' → logprob: -4.953360080718994
    4. ' self' → logprob: -5.078360080718994
    5. '0' → logprob: -5.578360080718994
    6. 'valid' → logprob: -5.828360080718994
    7. 'len' → logprob: -5.828360080718994
    8. ' for' → logprob: -5.953360080718994
    9. '
' → logprob: -6.078360080718994
    10. 'region' → logprob: -6.203360080718994

Token 1021: ' with' (ID: 483)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5720524787902832
    2. '=' → logprob: -0.9470524787902832
    3. 'for' → logprob: -3.947052478790283
    4. '       ' → logprob: -5.197052478790283
    5. ' in' → logprob: -5.197052478790283
    6. ' for' → logprob: -5.947052478790283
    7. 'in' → logprob: -5.947052478790283
    8. ' are' → logprob: -6.072052478790283
    9. '   ' → logprob: -6.447052478790283
    10. ' can' → logprob: -6.447052478790283

Token 1022: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.07216307520866394
    2. 'region' → logprob: -4.072163105010986
    3. ' ' → logprob: -4.447163105010986
    4. '1' → logprob: -4.697163105010986
    5. 'size' → logprob: -4.822163105010986
    6. 'count' → logprob: -4.947163105010986
    7. 'range' → logprob: -5.322163105010986
    8. 'bits' → logprob: -6.447163105010986
    9. 'bit' → logprob: -6.572163105010986
    10. '(' → logprob: -6.947163105010986

Token 1023: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.028377769514918327
    2. '(' → logprob: -5.278377532958984
    3. 'range' → logprob: -5.778377532958984
    4. 'live' → logprob: -5.778377532958984
    5. 'region' → logprob: -5.903377532958984
    6. '1' → logprob: -5.903377532958984
    7. 'subset' → logprob: -6.028377532958984
    8. 'bit' → logprob: -6.778377532958984
    9. 'count' → logprob: -6.903377532958984
    10. 'i' → logprob: -6.903377532958984

Token 1024: ' or' (ID: 503)
  Prédit: ' to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' to' → logprob: -1.533076286315918
    2. '==' → logprob: -1.908076286315918
    3. 'to' → logprob: -2.283076286315918
    4. ' or' → logprob: -2.658076286315918
    5. '<=' → logprob: -2.658076286315918
    6. ' ==' → logprob: -2.908076286315918
    7. ')' → logprob: -3.283076286315918
    8. ' up' → logprob: -3.533076286315918
    9. 'b' → logprob: -3.533076286315918
    10. ' only' → logprob: -3.658076286315918

Token 1025: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.004617391619831324
    2. ' ' → logprob: -6.379617214202881
    3. '15' → logprob: -6.754617214202881
    4. 'valid' → logprob: -7.379617214202881
    5. 'bits' → logprob: -7.754617214202881
    6. '0' → logprob: -8.129617691040039
    7. 'subset' → logprob: -10.129617691040039
    8. '(' → logprob: -10.254617691040039
    9. 'empty' → logprob: -10.629617691040039
    10. '   ' → logprob: -10.629617691040039

Token 1026: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.001559139578603208
    2. 'valid' → logprob: -7.751559257507324
    3. '0' → logprob: -8.126559257507324
    4. '15' → logprob: -8.376559257507324
    5. 'bits' → logprob: -8.376559257507324
    6. '(' → logprob: -8.751559257507324
    7. 'subset' → logprob: -9.876559257507324
    8. '327' → logprob: -10.126559257507324
    9. 'sets' → logprob: -10.876559257507324
    10. ' ' → logprob: -11.251559257507324

Token 1027: ' region' (ID: 7967)
  Prédit: '<<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '<<' → logprob: -0.31423884630203247
    2. ' bits' → logprob: -2.4392387866973877
    3. ' regions' → logprob: -3.6892387866973877
    4. ')' → logprob: -3.8142387866973877
    5. ' <<' → logprob: -4.314239025115967
    6. '==' → logprob: -4.439239025115967
    7. ' or' → logprob: -4.439239025115967
    8. ' ==' → logprob: -4.564239025115967
    9. 'bits' → logprob: -4.689239025115967
    10. 'regions' → logprob: -4.814239025115967

Token 1028: ' always' (ID: 3324)
  Prédit: ' are'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' are' → logprob: -0.9407584071159363
    2. ' can' → logprob: -1.190758466720581
    3. '       ' → logprob: -2.565758466720581
    4. ':
' → logprob: -2.815758466720581
    5. '           ' → logprob: -2.940758466720581
    6. ' or' → logprob: -3.815758466720581
    7. 'for' → logprob: -3.815758466720581
    8. 'are' → logprob: -4.440758228302002
    9. ' for' → logprob: -4.565758228302002
    10. 'can' → logprob: -4.690758228302002

Token 1029: ' valid' (ID: 4529)
  Prédit: 'are'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'are' → logprob: -0.23992152512073517
    2. ' are' → logprob: -1.8649215698242188
    3. 'valid' → logprob: -3.8649215698242188
    4. 'included' → logprob: -4.364921569824219
    5. '.append' → logprob: -5.114921569824219
    6. 'include' → logprob: -5.239921569824219
    7. ' valid' → logprob: -5.989921569824219
    8. 'append' → logprob: -6.364921569824219
    9. 'add' → logprob: -6.489921569824219
    10. '
' → logprob: -6.489921569824219

Token 1030: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3222716152667999
    2. '
' → logprob: -1.3222715854644775
    3. ' for' → logprob: -5.572271823883057
    4. 'for' → logprob: -5.697271823883057
    5. '        
' → logprob: -7.197271823883057
    6. 'valid' → logprob: -8.072271347045898
    7. '   ' → logprob: -8.572271347045898
    8. '    
' → logprob: -8.947271347045898
    9. ' valid' → logprob: -8.947271347045898
    10. '```' → logprob: -9.197271347045898

Token 1031: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.001075088046491146
    2. '
' → logprob: -7.126075267791748
    3. 'for' → logprob: -8.87607479095459
    4. ' for' → logprob: -9.87607479095459
    5. '           ' → logprob: -10.12607479095459
    6. '   ' → logprob: -11.00107479095459
    7. '        
' → logprob: -11.62607479095459
    8. '```' → logprob: -12.00107479095459
    9. ',' → logprob: -12.25107479095459
    10. '               ' → logprob: -14.62607479095459

Token 1032: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.1608719527721405
    2. '       ' → logprob: -1.910871982574463
    3. ' for' → logprob: -7.410871982574463
    4. '
' → logprob: -11.160871505737305
    5. '   ' → logprob: -11.285871505737305
    6. '```' → logprob: -11.410871505737305
    7. 'valid' → logprob: -12.785871505737305
    8. '           ' → logprob: -13.785871505737305
    9. 'from' → logprob: -15.410871505737305
    10. '        
' → logprob: -15.410871505737305

Token 1033: ' For' (ID: 2214)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.2631909251213074
    2. 'valid' → logprob: -1.5131909847259521
    3. '       ' → logprob: -4.513190746307373
    4. '
' → logprob: -8.763191223144531
    5. '   ' → logprob: -10.388191223144531
    6. ' for' → logprob: -11.138191223144531
    7. '```' → logprob: -11.263191223144531
    8. '#' → logprob: -11.638191223144531
    9. ' valid' → logprob: -12.763191223144531
    10. '``' → logprob: -13.013191223144531

Token 1034: ' >' (ID: 1424)
  Prédit: 'subset'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'subset' → logprob: -0.08730438351631165
    2. 's' → logprob: -3.2123043537139893
    3. 'size' → logprob: -4.212304592132568
    4. 'live' → logprob: -4.337304592132568
    5. ' subset' → logprob: -4.962304592132568
    6. 'mask' → logprob: -5.337304592132568
    7. '_subset' → logprob: -7.212304592132568
    8. 'sz' → logprob: -7.337304592132568
    9. 'num' → logprob: -7.587304592132568
    10. 'set' → logprob: -7.712304592132568

Token 1035: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0024957526475191116
    2. '=' → logprob: -6.127495765686035
    3. ' ' → logprob: -8.127495765686035
    4. '```' → logprob: -12.377495765686035
    5. '2' → logprob: -12.752495765686035
    6. '
' → logprob: -13.002495765686035
    7. ' =' → logprob: -13.752495765686035
    8. '0' → logprob: -14.002495765686035
    9. '   ' → logprob: -14.377495765686035
    10. '==' → logprob: -14.877495765686035

Token 1036: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -7.862962229410186e-05
    2. '=' → logprob: -9.750078201293945
    3. ' ' → logprob: -11.125078201293945
    4. '2' → logprob: -13.375078201293945
    5. '```' → logprob: -13.625078201293945
    6. '   ' → logprob: -13.750078201293945
    7. '
' → logprob: -14.000078201293945
    8. '>' → logprob: -15.125078201293945
    9. '0' → logprob: -16.375078201293945
    10. '==' → logprob: -16.875078201293945

Token 1037: ' region' (ID: 7967)
  Prédit: 'regions'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'regions' → logprob: -0.9669866561889648
    2. ' regions' → logprob: -1.4669866561889648
    3. '           ' → logprob: -1.8419866561889648
    4. 'region' → logprob: -2.841986656188965
    5. '       ' → logprob: -2.966986656188965
    6. ':' → logprob: -3.466986656188965
    7. '               ' → logprob: -3.591986656188965
    8. ' if' → logprob: -4.216986656188965
    9. 'if' → logprob: -4.591986656188965
    10. ' region' → logprob: -4.716986656188965

Token 1038: ',' (ID: 11)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.766846239566803
    2. '       ' → logprob: -1.1418461799621582
    3. ':
' → logprob: -2.266846179962158
    4. ',' → logprob: -2.391846179962158
    5. 'for' → logprob: -5.141846179962158
    6. ' for' → logprob: -5.141846179962158
    7. '           ' → logprob: -5.516846179962158
    8. ' in' → logprob: -5.766846179962158
    9. '   ' → logprob: -7.266846179962158
    10. 'in' → logprob: -8.391846656799316

Token 1039: ' must' (ID: 2804)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.5018564462661743
    2. ' for' → logprob: -1.2518564462661743
    3. '       ' → logprob: -2.2518563270568848
    4. '           ' → logprob: -6.876856327056885
    5. 'def' → logprob: -7.251856327056885
    6. '   ' → logprob: -7.376856327056885
    7. '
' → logprob: -7.626856327056885
    8. '```' → logprob: -7.876856327056885
    9. '               ' → logprob: -9.751856803894043
    10. ' we' → logprob: -10.376856803894043

Token 1040: ' be' (ID: 413)
  Prédit: 'be'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'be' → logprob: -0.3403482437133789
    2. 'def' → logprob: -2.840348243713379
    3. ' be' → logprob: -2.965348243713379
    4. '       ' → logprob: -2.965348243713379
    5. 'connect' → logprob: -3.340348243713379
    6. 'form' → logprob: -3.840348243713379
    7. 'for' → logprob: -3.965348243713379
    8. 's' → logprob: -4.340348243713379
    9. 'continue' → logprob: -4.340348243713379
    10. 'have' → logprob: -5.215348243713379

Token 1041: ' connected' (ID: 12079)
  Prédit: 'connected'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'connected' → logprob: -0.052511442452669144
    2. ' connected' → logprob: -3.05251145362854
    3. 'a' → logprob: -6.052511215209961
    4. '_connected' → logprob: -7.302511215209961
    5. 'all' → logprob: -8.052511215209961
    6. ' a' → logprob: -8.927511215209961
    7. '   ' → logprob: -9.177511215209961
    8. 'adj' → logprob: -9.302511215209961
    9. ' all' → logprob: -9.927511215209961
    10. 'self' → logprob: -10.677511215209961

Token 1042: ' adj' (ID: 20251)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.23164796829223633
    2. '       ' → logprob: -1.6066479682922363
    3. '        
' → logprob: -5.356647968292236
    4. '
' → logprob: -8.106647491455078
    5. 'for' → logprob: -8.106647491455078
    6. '    
' → logprob: -8.731647491455078
    7. ' for' → logprob: -8.731647491455078
    8. ',' → logprob: -9.231647491455078
    9. '  
' → logprob: -9.606647491455078
    10. '   ' → logprob: -9.606647491455078

Token 1043: '.

' (ID: 364)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6104922890663147
    2. 'acency' → logprob: -1.86049222946167
    3. 'acent' → logprob: -2.23549222946167
    4. '   ' → logprob: -2.61049222946167
    5. 'for' → logprob: -3.86049222946167
    6. ')' → logprob: -4.11049222946167
    7. 'sets' → logprob: -4.11049222946167
    8. '           ' → logprob: -4.48549222946167
    9. '
' → logprob: -4.48549222946167
    10. '               ' → logprob: -4.98549222946167

Token 1044: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1327309012413025
    2. '
' → logprob: -2.1327309608459473
    3. 'for' → logprob: -5.382730960845947
    4. '   ' → logprob: -7.257730960845947
    5. ' for' → logprob: -8.257730484008789
    6. '        
' → logprob: -9.132730484008789
    7. '```' → logprob: -9.257730484008789
    8. '    
' → logprob: -11.382730484008789
    9. '           ' → logprob: -12.007730484008789
    10. '``' → logprob: -14.007730484008789

Token 1045: ' def' (ID: 1056)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.18989770114421844
    2. 'for' → logprob: -1.9398976564407349
    3. '
' → logprob: -4.064897537231445
    4. ' for' → logprob: -4.564897537231445
    5. '   ' → logprob: -6.564897537231445
    6. '```' → logprob: -8.814897537231445
    7. '        
' → logprob: -9.939897537231445
    8. 'n' → logprob: -10.814897537231445
    9. '    
' → logprob: -11.314897537231445
    10. '           ' → logprob: -11.814897537231445

Token 1046: ' is' (ID: 382)
  Prédit: 'is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'is' → logprob: -0.28167062997817993
    2. ' is' → logprob: -1.5316705703735352
    3. 'can' → logprob: -4.781670570373535
    4. '_is' → logprob: -4.781670570373535
    5. 'check' → logprob: -5.281670570373535
    6. 'dfs' → logprob: -6.281670570373535
    7. ' can' → logprob: -6.531670570373535
    8. ' check' → logprob: -7.031670570373535
    9. '_check' → logprob: -7.656670570373535
    10. 'valid' → logprob: -7.656670570373535

Token 1047: '_connected' (ID: 112270)
  Prédit: '_connected'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_connected' → logprob: -0.00695560360327363
    2. 'connected' → logprob: -5.506955623626709
    3. '_valid' → logprob: -5.881955623626709
    4. '_subset' → logprob: -10.38195514678955
    5. '   ' → logprob: -11.38195514678955
    6. '_conn' → logprob: -11.88195514678955
    7. ' connected' → logprob: -11.88195514678955
    8. '_con' → logprob: -12.00695514678955
    9. '
' → logprob: -12.13195514678955
    10. '{' → logprob: -12.63195514678955

Token 1048: '_subset' (ID: 162934)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.46510183811187744
    2. '(' → logprob: -1.4651018381118774
    3. '(sub' → logprob: -2.840101718902588
    4. '(s' → logprob: -3.340101718902588
    5. '(set' → logprob: -3.465101718902588
    6. '(
' → logprob: -4.965101718902588
    7. '(l' → logprob: -5.340101718902588
    8. '(node' → logprob: -6.965101718902588
    9. ' (' → logprob: -7.090101718902588
    10. '(state' → logprob: -8.340102195739746

Token 1049: '(s' (ID: 1858)
  Prédit: '(sub'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(sub' → logprob: -0.5433847904205322
    2. '(self' → logprob: -1.0433847904205322
    3. '(s' → logprob: -3.1683847904205322
    4. '(set' → logprob: -3.9183847904205322
    5. '(' → logprob: -5.793384552001953
    6. '(mask' → logprob: -7.168384552001953
    7. '(bit' → logprob: -8.168384552001953
    8. '(
' → logprob: -8.668384552001953
    9. '(l' → logprob: -8.668384552001953
    10. '(state' → logprob: -8.793384552001953

Token 1050: ':' (ID: 25)
  Prédit: 'et'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'et' → logprob: -0.6826583743095398
    2. 'elf' → logprob: -1.8076584339141846
    3. ':' → logprob: -2.4326584339141846
    4. '):' → logprob: -2.8076584339141846
    5. ')' → logprob: -3.1826584339141846
    6. '(s' → logprob: -3.3076584339141846
    7. 'ets' → logprob: -3.5576584339141846
    8. '):
' → logprob: -4.0576581954956055
    9. '(' → logprob: -4.1826581954956055
    10. ',' → logprob: -4.1826581954956055

Token 1051: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -4.203409844194539e-05
    2. ')' → logprob: -10.250041961669922
    3. 'Set' → logprob: -12.375041961669922
    4. ' int' → logprob: -14.000041961669922
    5. '(int' → logprob: -14.750041961669922
    6. '
' → logprob: -14.875041961669922
    7. '[int' → logprob: -15.125041961669922
    8. '   ' → logprob: -16.000041961669922
    9. 'set' → logprob: -16.375041961669922
    10. '```' → logprob: -16.500041961669922

Token 1052: ')' (ID: 8)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.8481603860855103
    2. ')' → logprob: -0.9731603860855103
    3. '):' → logprob: -1.8481603860855103
    4. ':' → logprob: -3.7231602668762207
    5. '):
' → logprob: -4.473160266876221
    6. '       ' → logprob: -7.598160266876221
    7. '   ' → logprob: -8.848160743713379
    8. ':
' → logprob: -9.723160743713379
    9. ',
' → logprob: -10.223160743713379
    10. ')->' → logprob: -10.973160743713379

Token 1053: ' ->' (ID: 2747)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.04981721192598343
    2. ':
' → logprob: -3.0498173236846924
    3. '       ' → logprob: -6.799817085266113
    4. ')' → logprob: -10.549817085266113
    5. ' ->' → logprob: -10.549817085266113
    6. ',' → logprob: -10.799817085266113
    7. '->' → logprob: -11.174817085266113
    8. '   ' → logprob: -11.674817085266113
    9. '[' → logprob: -12.549817085266113
    10. ':return' → logprob: -12.924817085266113

Token 1054: ' bool' (ID: 3792)
  Prédit: 'bool'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bool' → logprob: -2.2200749754119897e-06
    2. ' bool' → logprob: -13.125001907348633
    3. 'int' → logprob: -16.500001907348633
    4. 'True' → logprob: -16.875001907348633
    5. '
' → logprob: -17.625001907348633
    6. '   ' → logprob: -17.875001907348633
    7. '(bool' → logprob: -18.250001907348633
    8. '	bool' → logprob: -18.875001907348633
    9. 'Bool' → logprob: -19.000001907348633
    10. '```' → logprob: -20.250001907348633

Token 1055: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.07609651982784271
    2. ':
' → logprob: -2.826096534729004
    3. '       ' → logprob: -4.326096534729004
    4. ',' → logprob: -7.326096534729004
    5. ')' → logprob: -10.076096534729004
    6. '):
' → logprob: -10.201096534729004
    7. '   ' → logprob: -11.201096534729004
    8. '           ' → logprob: -11.326096534729004
    9. '):' → logprob: -11.451096534729004
    10. '():
' → logprob: -12.326096534729004

Token 1056: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0028872599359601736
    2. '
' → logprob: -6.37788724899292
    3. '   ' → logprob: -7.00288724899292
    4. '        
' → logprob: -9.627887725830078
    5. '           ' → logprob: -9.877887725830078
    6. '```' → logprob: -10.502887725830078
    7. '    ' → logprob: -10.627887725830078
    8. '	' → logprob: -10.877887725830078
    9. '        ' → logprob: -11.002887725830078
    10. '    
' → logprob: -11.127887725830078

Token 1057: ' #' (ID: 1069)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.8069047331809998
    2. ' if' → logprob: -1.5569047927856445
    3. 'if' → logprob: -1.6819047927856445
    4. 'visited' → logprob: -2.5569047927856445
    5. '   ' → logprob: -3.1819047927856445
    6. '               ' → logprob: -3.8069047927856445
    7. ' visited' → logprob: -4.9319047927856445
    8. 'start' → logprob: -5.9319047927856445
    9. 'stack' → logprob: -7.0569047927856445
    10. '       ' → logprob: -7.0569047927856445

Token 1058: ' BFS' (ID: 190016)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.35714682936668396
    2. 'visited' → logprob: -1.3571468591690063
    3. ' if' → logprob: -4.482146739959717
    4. '           ' → logprob: -5.107146739959717
    5. 'first' → logprob: -5.107146739959717
    6. 'seen' → logprob: -5.357146739959717
    7. 'start' → logprob: -5.357146739959717
    8. ' visited' → logprob: -6.607146739959717
    9. 'subset' → logprob: -6.607146739959717
    10. 'from' → logprob: -6.732146739959717

Token 1059: ' starting' (ID: 8601)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.36077308654785156
    2. '               ' → logprob: -1.3607730865478516
    3. '   ' → logprob: -4.235773086547852
    4. '       ' → logprob: -5.235773086547852
    5. '(start' → logprob: -5.985773086547852
    6. ',' → logprob: -5.985773086547852
    7. '
' → logprob: -6.235773086547852
    8. 'tokens' → logprob: -6.360773086547852
    9. ' start' → logprob: -6.485773086547852
    10. ' if' → logprob: -6.485773086547852

Token 1060: ' from' (ID: 591)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.05228077992796898
    2. 'at' → logprob: -4.552280902862549
    3. ' from' → logprob: -4.677280902862549
    4. '(' → logprob: -4.927280902862549
    5. 's' → logprob: -5.177280902862549
    6. '=' → logprob: -5.302280902862549
    7. 'with' → logprob: -5.427280902862549
    8. ' at' → logprob: -5.677280902862549
    9. '(s' → logprob: -6.177280902862549
    10. ')' → logprob: -6.802280902862549

Token 1061: ' any' (ID: 1062)
  Prédit: '(s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(s' → logprob: -0.05646028369665146
    2. 's' → logprob: -2.931460380554199
    3. ' (' → logprob: -7.056460380554199
    4. '(next' → logprob: -8.1814603805542
    5. 'next' → logprob: -8.6814603805542
    6. ' s' → logprob: -9.5564603805542
    7. '(x' → logprob: -10.0564603805542
    8. '((' → logprob: -10.3064603805542
    9. 'lowest' → logprob: -10.4314603805542
    10. '(' → logprob: -10.5564603805542

Token 1062: ' set' (ID: 920)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -1.0047122240066528
    2. 'region' → logprob: -1.8797122240066528
    3. '1' → logprob: -2.1297121047973633
    4. ' (' → logprob: -2.7547121047973633
    5. 's' → logprob: -3.0047121047973633
    6. ' region' → logprob: -3.3797121047973633
    7. 'set' → logprob: -3.3797121047973633
    8. ' set' → logprob: -3.5047121047973633
    9. '(' → logprob: -3.6297121047973633
    10. ' r' → logprob: -4.129712104797363

Token 1063: ' bit' (ID: 3546)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -1.0447074174880981
    2. 's' → logprob: -1.7947074174880981
    3. ' bit' → logprob: -2.1697072982788086
    4. '(s' → logprob: -2.1697072982788086
    5. 'bit' → logprob: -2.2947072982788086
    6. '               ' → logprob: -3.9197072982788086
    7. ' s' → logprob: -4.294707298278809
    8. '_bit' → logprob: -4.294707298278809
    9. ' (' → logprob: -4.419707298278809
    10. ')' → logprob: -4.544707298278809

Token 1064: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.04393031820654869
    2. '
' → logprob: -4.418930530548096
    3. '               ' → logprob: -5.043930530548096
    4. ',' → logprob: -5.293930530548096
    5. '(s' → logprob: -5.793930530548096
    6. ' in' → logprob: -6.168930530548096
    7. ':' → logprob: -6.293930530548096
    8. '(' → logprob: -6.293930530548096
    9. '       ' → logprob: -6.293930530548096
    10. '   ' → logprob: -6.418930530548096

Token 1065: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.02495650388300419
    2. '               ' → logprob: -4.024956703186035
    3. '       ' → logprob: -5.274956703186035
    4. '   ' → logprob: -6.899956703186035
    5. ' for' → logprob: -9.024956703186035
    6. '
' → logprob: -9.399956703186035
    7. '```' → logprob: -9.399956703186035
    8. ',' → logprob: -9.774956703186035
    9. 'def' → logprob: -10.274956703186035
    10. 'tokens' → logprob: -10.399956703186035

Token 1066: ' if' (ID: 538)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.9050610661506653
    2. ' if' → logprob: -1.2800610065460205
    3. ' first' → logprob: -1.6550610065460205
    4. '               ' → logprob: -3.7800610065460205
    5. '   ' → logprob: -3.9050610065460205
    6. ' for' → logprob: -4.0300612449646
    7. ' start' → logprob: -4.4050612449646
    8. 'first' → logprob: -4.9050612449646
    9. ' pos' → logprob: -5.1550612449646
    10. 'if' (adapté à ' if') → logprob: -5.2800612449646

Token 1067: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.018837811425328255
    2. '(s' → logprob: -4.518837928771973
    3. ' s' → logprob: -4.893837928771973
    4. ' (' → logprob: -8.893837928771973
    5. '   ' → logprob: -9.393837928771973
    6. 'not' → logprob: -11.518837928771973
    7. '(' → logprob: -12.018837928771973
    8. ' not' → logprob: -12.143837928771973
    9. ' ' → logprob: -12.393837928771973
    10. '_s' → logprob: -12.643837928771973

Token 1068: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.47410714626312256
    2. ' ==' → logprob: -0.9741071462631226
    3. '&' → logprob: -11.724106788635254
    4. ')==' → logprob: -12.724106788635254
    5. ' &' → logprob: -12.724106788635254
    6. '.bit' → logprob: -12.724106788635254
    7. '==(' → logprob: -12.849106788635254
    8. '=' → logprob: -12.849106788635254
    9. '0' → logprob: -12.974106788635254
    10. '()==' → logprob: -13.724106788635254

Token 1069: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.4855663721391466e-05
    2. ' ' → logprob: -11.125015258789062
    3. '(' → logprob: -17.750015258789062
    4. '۰' → logprob: -18.750015258789062
    5. '   ' → logprob: -19.125015258789062
    6. '           ' → logprob: -19.250015258789062
    7. '000' → logprob: -19.250015258789062
    8. '
' → logprob: -19.750015258789062
    9. '1' → logprob: -20.250015258789062
    10. ')' → logprob: -20.375015258789062

Token 1070: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -4.842555426876061e-06
    2. ' ' → logprob: -12.250004768371582
    3. '(' → logprob: -18.0000057220459
    4. '000' → logprob: -18.3750057220459
    5. '۰' → logprob: -18.3750057220459
    6. '   ' → logprob: -18.5000057220459
    7. '00' → logprob: -18.8750057220459
    8. '=' → logprob: -19.6250057220459
    9. '
' → logprob: -20.0000057220459
    10. '1' → logprob: -20.9375057220459

Token 1071: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.1383744180202484
    2. '               ' → logprob: -2.3883743286132812
    3. ':' → logprob: -3.3883743286132812
    4. '           ' → logprob: -6.263374328613281
    5. ' or' → logprob: -6.888374328613281
    6. ':return' → logprob: -7.763374328613281
    7. '):
' → logprob: -8.638374328613281
    8. '():
' → logprob: -10.888374328613281
    9. ')' → logprob: -11.013374328613281
    10. 'return' → logprob: -11.138374328613281

Token 1072: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.005996813531965017
    2. ' return' → logprob: -5.5059967041015625
    3. '
' → logprob: -7.0059967041015625
    4. 'return' → logprob: -8.005996704101562
    5. '   ' → logprob: -8.505996704101562
    6. '           ' → logprob: -9.005996704101562
    7. '                   ' → logprob: -10.130996704101562
    8. '\n' → logprob: -10.255996704101562
    9. '```' → logprob: -10.255996704101562
    10. ' for' → logprob: -10.505996704101562

Token 1073: ' return' (ID: 622)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'False' → logprob: -0.7484361529350281
    2. ' False' → logprob: -1.1234362125396729
    3. ' True' → logprob: -2.373436212539673
    4. ' return' → logprob: -3.248436212539673
    5. 'True' → logprob: -3.373436212539673
    6. 'return' (adapté à ' return') → logprob: -3.873436212539673
    7. '               ' → logprob: -4.248435974121094
    8. '           ' → logprob: -8.123435974121094
    9. '   ' → logprob: -10.623435974121094
    10. '1' → logprob: -10.998435974121094

Token 1074: ' True' (ID: 6432)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'True' → logprob: -0.03873370960354805
    2. 'False' → logprob: -3.288733720779419
    3. ' True' → logprob: -7.28873348236084
    4. ' False' → logprob: -11.66373348236084
    5. '   ' → logprob: -15.78873348236084
    6. '(True' → logprob: -16.538734436035156
    7. 'true' → logprob: -19.163734436035156
    8. '=True' → logprob: -19.413734436035156
    9. '1' → logprob: -19.413734436035156
    10. '
' → logprob: -19.788734436035156

Token 1075: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.3151748776435852
    2. '           ' → logprob: -1.3151748180389404
    3. '\n' → logprob: -7.8151750564575195
    4. ' 
' → logprob: -8.06517505645752
    5. '    
' → logprob: -8.19017505645752
    6. '       ' → logprob: -8.31517505645752
    7. '            
' → logprob: -8.31517505645752
    8. '  
' → logprob: -9.06517505645752
    9. '        
' → logprob: -9.94017505645752
    10. ',' → logprob: -9.94017505645752

Token 1076: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.07764104753732681
    2. '       ' → logprob: -2.827641010284424
    3. '
' → logprob: -4.202641010284424
    4. '        
' → logprob: -8.202641487121582
    5. '            
' → logprob: -9.077641487121582
    6. '   ' → logprob: -9.577641487121582
    7. '    
' → logprob: -10.077641487121582
    8. '          ' → logprob: -10.827641487121582
    9. ' 
' → logprob: -11.077641487121582
    10. '        ' → logprob: -11.702641487121582

Token 1077: ' #' (ID: 1069)
  Prédit: 'start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'start' → logprob: -0.9694891571998596
    2. '           ' → logprob: -1.0944890975952148
    3. 'first' → logprob: -1.9694890975952148
    4. ' start' → logprob: -2.594489097595215
    5. ' first' → logprob: -3.094489097595215
    6. 'visited' → logprob: -4.969489097595215
    7. 'left' → logprob: -5.344489097595215
    8. ' left' → logprob: -5.969489097595215
    9. '   ' → logprob: -5.969489097595215
    10. ' visited' → logprob: -6.469489097595215

Token 1078: ' Find' (ID: 9764)
  Prédit: 'start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'start' → logprob: -0.8192389607429504
    2. 'first' → logprob: -1.0692389011383057
    3. ' first' → logprob: -2.3192389011383057
    4. ' start' → logprob: -2.6942389011383057
    5. 'visited' → logprob: -3.8192389011383057
    6. '           ' → logprob: -4.444239139556885
    7. 'seen' → logprob: -5.819239139556885
    8. ' visited' → logprob: -5.944239139556885
    9. ' nodes' → logprob: -6.819239139556885
    10. 'bits' → logprob: -7.069239139556885

Token 1079: ' first' (ID: 1577)
  Prédit: 'first'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'first' → logprob: -0.8280746936798096
    2. 'lowest' → logprob: -1.0780746936798096
    3. 'the' → logprob: -2.8280746936798096
    4. ' first' → logprob: -3.0780746936798096
    5. ' the' → logprob: -3.8280746936798096
    6. 'start' → logprob: -3.8280746936798096
    7. 's' → logprob: -3.9530746936798096
    8. ' lowest' → logprob: -4.0780744552612305
    9. '(s' → logprob: -5.0780744552612305
    10. 'any' → logprob: -5.3280744552612305

Token 1080: ' set' (ID: 920)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.8475726246833801
    2. 'set' → logprob: -1.4725725650787354
    3. ' set' → logprob: -2.3475725650787354
    4. 'r' → logprob: -2.4725725650787354
    5. 'bit' → logprob: -2.8475725650787354
    6. ' s' → logprob: -3.8475725650787354
    7. ' one' → logprob: -4.0975728034973145
    8. 'one' → logprob: -4.3475728034973145
    9. 'i' → logprob: -4.3475728034973145
    10. '1' → logprob: -4.5975728034973145

Token 1081: ' bit' (ID: 3546)
  Prédit: 'bit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bit' → logprob: -0.031048448756337166
    2. ' bit' → logprob: -4.28104829788208
    3. '_bit' → logprob: -4.28104829788208
    4. '   ' → logprob: -7.78104829788208
    5. '       ' → logprob: -7.90604829788208
    6. '1' → logprob: -8.031048774719238
    7. 'pos' → logprob: -8.156048774719238
    8. '_bits' → logprob: -8.406048774719238
    9. 'bits' → logprob: -8.656048774719238
    10. '```' → logprob: -8.781048774719238

Token 1082: ' index' (ID: 3472)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -1.4385590553283691
    2. '           ' → logprob: -1.6885590553283691
    3. 'pos' → logprob: -1.9385590553283691
    4. ' for' → logprob: -2.313559055328369
    5. ' (' → logprob: -3.188559055328369
    6. ' =' → logprob: -3.188559055328369
    7. ' i' → logprob: -3.313559055328369
    8. 'idx' → logprob: -3.438559055328369
    9. ' first' → logprob: -3.938559055328369
    10. 'for' → logprob: -3.938559055328369

Token 1083: '
' (ID: 198)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.7872226238250732
    2. '           ' → logprob: -1.6622226238250732
    3. 'i' → logprob: -2.4122226238250732
    4. ' i' → logprob: -2.5372226238250732
    5. 'pos' → logprob: -2.7872226238250732
    6. ' first' → logprob: -3.2872226238250732
    7. ' pos' → logprob: -3.5372226238250732
    8. 'for' → logprob: -4.037222862243652
    9. 'first' → logprob: -5.037222862243652
    10. 'idx' → logprob: -5.037222862243652

Token 1084: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.02203122340142727
    2. ' for' → logprob: -4.397031307220459
    3. 'i' → logprob: -5.397031307220459
    4. ' i' → logprob: -6.522031307220459
    5. 'for' → logprob: -7.147031307220459
    6. '   ' → logprob: -7.522031307220459
    7. ' first' → logprob: -8.0220308303833
    8. 'r' → logprob: -8.2720308303833
    9. 'pos' → logprob: -8.3970308303833
    10. '
' → logprob: -8.5220308303833

Token 1085: ' start' (ID: 1604)
  Prédit: 'start'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'start' (adapté à ' start') → logprob: -0.3759003281593323
    2. ' start' → logprob: -1.8759002685546875
    3. 'first' → logprob: -2.3759002685546875
    4. 'i' → logprob: -3.8759002685546875
    5. ' first' → logprob: -3.8759002685546875
    6. '   ' → logprob: -5.1259002685546875
    7. 'idx' → logprob: -5.5009002685546875
    8. '           ' → logprob: -6.1259002685546875
    9. 'v' → logprob: -6.1259002685546875
    10. ' idx' → logprob: -6.6259002685546875

Token 1086: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.06999390572309494
    2. '=' → logprob: -2.6949939727783203
    3. '=int' → logprob: -10.56999397277832
    4. '=
' → logprob: -12.19499397277832
    5. ':' → logprob: -12.44499397277832
    6. '_index' → logprob: -12.94499397277832
    7. '   ' → logprob: -13.19499397277832
    8. '=i' → logprob: -13.19499397277832
    9. ' ' → logprob: -13.31999397277832
    10. '_idx' → logprob: -13.44499397277832

Token 1087: ' (' (ID: 350)
  Prédit: '(s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(s' → logprob: -0.00676700659096241
    2. '0' → logprob: -5.6317667961120605
    3. ' (' → logprob: -6.2567667961120605
    4. 's' → logprob: -7.0067667961120605
    5. '(' → logprob: -8.131767272949219
    6. '(next' → logprob: -10.881767272949219
    7. ' ' → logprob: -11.631767272949219
    8. '   ' → logprob: -12.756767272949219
    9. '1' → logprob: -13.006767272949219
    10. 'next' → logprob: -13.256767272949219

Token 1088: 's' (ID: 82)
  Prédit: 's'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -4.9424725148128346e-05
    2. '(s' → logprob: -10.000049591064453
    3. ' s' → logprob: -12.500049591064453
    4. '
' → logprob: -16.625049591064453
    5. '{s' → logprob: -16.875049591064453
    6. '_s' → logprob: -17.125049591064453
    7. '	s' → logprob: -17.500049591064453
    8. ')s' → logprob: -18.000049591064453
    9. '   ' → logprob: -18.125049591064453
    10. 'start' → logprob: -18.125049591064453

Token 1089: ' &' (ID: 827)
  Prédit: '&'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '&' → logprob: -0.12467353790998459
    2. ' &' → logprob: -2.37467360496521
    3. '.bit' → logprob: -4.124673366546631
    4. '&s' → logprob: -4.999673366546631
    5. ').' → logprob: -7.624673366546631
    6. '&gt' → logprob: -8.999673843383789
    7. '&amp' → logprob: -9.249673843383789
    8. ')&' → logprob: -9.499673843383789
    9. ')' → logprob: -9.624673843383789
    10. '.s' → logprob: -9.624673843383789

Token 1090: ' (-' (ID: 21382)
  Prédit: '-s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '-s' → logprob: -0.1761586219072342
    2. '-' → logprob: -2.0511586666107178
    3. '(-' → logprob: -3.8011586666107178
    4. ' -' → logprob: -4.801158428192139
    5. '-l' → logprob: -7.051158428192139
    6. '-S' → logprob: -7.426158428192139
    7. '-f' → logprob: -9.051158905029297
    8. '-(' → logprob: -9.051158905029297
    9. '-L' → logprob: -9.676158905029297
    10. '-t' → logprob: -9.801158905029297

Token 1091: 's' (ID: 82)
  Prédit: 's'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -1.2664456789934775e-06
    2. ' s' → logprob: -13.875000953674316
    3. '{s' → logprob: -17.000001907348633
    4. '_s' → logprob: -17.125001907348633
    5. '`s' → logprob: -17.125001907348633
    6. 'start' → logprob: -17.250001907348633
    7. '}s' → logprob: -17.375001907348633
    8. ')s' → logprob: -17.375001907348633
    9. '	s' → logprob: -17.750001907348633
    10. '```' → logprob: -18.250001907348633

Token 1092: ')).' (ID: 8784)
  Prédit: ').'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ').' → logprob: -0.2223113477230072
    2. ')' → logprob: -1.7223113775253296
    3. ')).' → logprob: -4.222311496734619
    4. '))' → logprob: -5.222311496734619
    5. ')>>' → logprob: -8.347311019897461
    6. ' ).' → logprob: -8.472311019897461
    7. ' )' → logprob: -9.597311019897461
    8. ')
' → logprob: -10.597311019897461
    9. ')))' → logprob: -11.472311019897461
    10. ')>' → logprob: -11.847311019897461

Token 1093: 'bit' (ID: 6516)
  Prédit: 'bit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bit' → logprob: -0.0011224760673940182
    2. '.bit' → logprob: -6.87612247467041
    3. ' bit' → logprob: -9.62612247467041
    4. '```' → logprob: -11.62612247467041
    5. '__' → logprob: -12.37612247467041
    6. '_bit' → logprob: -13.00112247467041
    7. 's' → logprob: -13.75112247467041
    8. ' ' → logprob: -13.87612247467041
    9. 'index' → logprob: -14.12612247467041
    10. 'to' → logprob: -14.25112247467041

Token 1094: '_length' (ID: 11514)
  Prédit: '_length'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_length' → logprob: -3.8219583075260743e-05
    2. 'length' → logprob: -10.750038146972656
    3. '_count' → logprob: -12.000038146972656
    4. '_index' → logprob: -12.625038146972656
    5. 'mask' → logprob: -13.625038146972656
    6. '_start' → logprob: -13.875038146972656
    7. '_size' → logprob: -14.000038146972656
    8. '```' → logprob: -14.375038146972656
    9. '0' → logprob: -14.500038146972656
    10. '_width' → logprob: -14.625038146972656

Token 1095: '()' (ID: 416)
  Prédit: '()'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.021044649183750153
    2. '()-' → logprob: -3.8960447311401367
    3. '-' → logprob: -8.146044731140137
    4. ' ()' → logprob: -9.521044731140137
    5. '()+' → logprob: -10.271044731140137
    6. '())' → logprob: -10.521044731140137
    7. ' -' → logprob: -10.646044731140137
    8. ')' → logprob: -11.146044731140137
    9. '1' → logprob: -11.146044731140137
    10. '(' → logprob: -12.146044731140137

Token 1096: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.8350180387496948
    2. ' -' → logprob: -1.0850180387496948
    3. '()' → logprob: -1.5850180387496948
    4. '()-' → logprob: -3.8350181579589844
    5. '           ' → logprob: -7.085018157958984
    6. '1' → logprob: -8.335018157958984
    7. ')' → logprob: -8.835018157958984
    8. '            ' → logprob: -8.960018157958984
    9. ' ()' → logprob: -9.085018157958984
    10. '               ' → logprob: -9.585018157958984

Token 1097: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.8624639324116288e-06
    2. ' ' → logprob: -13.250001907348633
    3. '```' → logprob: -18.000001907348633
    4. '
' → logprob: -18.375001907348633
    5. '   ' → logprob: -18.500001907348633
    6. '    ' → logprob: -20.625001907348633
    7. '2' → logprob: -20.750001907348633
    8. '0' → logprob: -20.750001907348633
    9. '۱' → logprob: -21.250001907348633
    10. '  ' → logprob: -21.312501907348633

Token 1098: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.7432603272027336e-06
    2. ' ' → logprob: -13.375001907348633
    3. '
' → logprob: -15.625001907348633
    4. '   ' → logprob: -17.500001907348633
    5. '```' → logprob: -19.500001907348633
    6. 'import' → logprob: -20.250001907348633
    7. '  ' → logprob: -20.250001907348633
    8. '    ' → logprob: -20.625001907348633
    9. ',' → logprob: -20.750001907348633
    10. '<|end|>' → logprob: -20.875001907348633

Token 1099: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.05565202981233597
    2. '
' → logprob: -2.930652141571045
    3. '            
' → logprob: -7.930652141571045
    4. ')' → logprob: -9.305651664733887
    5. '<|end|>' → logprob: -9.305651664733887
    6. ',' → logprob: -9.930651664733887
    7. '       ' → logprob: -10.555651664733887
    8. '```' → logprob: -10.680651664733887
    9. '    
' → logprob: -10.930651664733887
    10. '               ' → logprob: -11.305651664733887

Token 1100: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.001522718113847077
    2. '
' → logprob: -7.126522541046143
    3. '       ' → logprob: -7.751522541046143
    4. '   ' → logprob: -8.5015230178833
    5. '```' → logprob: -10.3765230178833
    6. '            
' → logprob: -10.7515230178833
    7. '               ' → logprob: -11.7515230178833
    8. '    
' → logprob: -12.2515230178833
    9. '        
' → logprob: -12.7515230178833
    10. ',' → logprob: -13.0015230178833

Token 1101: ' visited' (ID: 18416)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.219906285405159
    2. 'visited' (adapté à ' visited') → logprob: -1.7199063301086426
    3. 'queue' → logprob: -4.594906330108643
    4. ' queue' → logprob: -5.719906330108643
    5. ' visited' → logprob: -6.094906330108643
    6. '   ' → logprob: -6.094906330108643
    7. '
' → logprob: -8.594905853271484
    8. '       ' → logprob: -9.719905853271484
    9. 'seen' → logprob: -9.969905853271484
    10. 'stack' → logprob: -10.219905853271484

Token 1102: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.25196707248687744
    2. ' =' → logprob: -1.5019670724868774
    3. '=set' → logprob: -10.251967430114746
    4. 'set' → logprob: -14.626967430114746
    5. '   ' → logprob: -14.876967430114746
    6. '_set' → logprob: -14.876967430114746
    7. 's' → logprob: -14.876967430114746
    8. ' ' → logprob: -14.876967430114746
    9. ':' → logprob: -15.126967430114746
    10. ' |=' → logprob: -15.376967430114746

Token 1103: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.268088161945343
    2. '0' → logprob: -1.5180881023406982
    3. '(' → logprob: -4.643088340759277
    4. '{' → logprob: -5.143088340759277
    5. ' ' → logprob: -7.893088340759277
    6. 'set' → logprob: -9.768088340759277
    7. '   ' → logprob: -10.393088340759277
    8. '
' → logprob: -10.518088340759277
    9. ' (' → logprob: -10.643088340759277
    10. '           ' → logprob: -11.018088340759277

Token 1104: '0' (ID: 15)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.2701435983181
    2. '0' → logprob: -1.5201436281204224
    3. '{' → logprob: -4.395143508911133
    4. '(' → logprob: -5.270143508911133
    5. 'set' → logprob: -7.520143508911133
    6. '[' → logprob: -12.145143508911133
    7. '(set' → logprob: -12.395143508911133
    8. ' ' → logprob: -12.645143508911133
    9. '{s' → logprob: -12.770143508911133
    10. '   ' → logprob: -12.770143508911133

Token 1105: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.05614105239510536
    2. '
' → logprob: -2.9311411380767822
    3. '   ' → logprob: -8.306140899658203
    4. ',' → logprob: -8.681140899658203
    5. '<|end|>' → logprob: -8.681140899658203
    6. '       ' → logprob: -8.931140899658203
    7. '	       ' → logprob: -8.931140899658203
    8. '            
' → logprob: -9.181140899658203
    9. '		' → logprob: -10.306140899658203
    10. '    
' → logprob: -10.556140899658203

Token 1106: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.007624849211424589
    2. ' current' → logprob: -6.132624626159668
    3. '   ' → logprob: -6.507624626159668
    4. '       ' → logprob: -7.132624626159668
    5. '
' → logprob: -7.382624626159668
    6. 'current' → logprob: -7.507624626159668
    7. ' x' → logprob: -8.007624626159668
    8. ' start' → logprob: -8.257624626159668
    9. ' queue' → logprob: -8.382624626159668
    10. '```' → logprob: -8.632624626159668

Token 1107: ' queue' (ID: 13661)
  Prédit: 'queue'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'queue' (adapté à ' queue') → logprob: -1.1295238733291626
    2. 'stack' → logprob: -1.2545238733291626
    3. ' queue' → logprob: -1.6295238733291626
    4. ' stack' → logprob: -2.129523754119873
    5. '   ' → logprob: -3.254523754119873
    6. '           ' → logprob: -3.504523754119873
    7. 'to' → logprob: -5.129523754119873
    8. ' frontier' → logprob: -7.754523754119873
    9. 'from' → logprob: -7.879523754119873
    10. ' to' → logprob: -7.879523754119873

Token 1108: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.06198180466890335
    2. '=' → logprob: -2.8119819164276123
    3. '           ' → logprob: -12.936982154846191
    4. '.append' → logprob: -12.936982154846191
    5. '   ' → logprob: -13.186982154846191
    6. '=[' → logprob: -13.311982154846191
    7. '=[]
' → logprob: -13.811982154846191
    8. '=int' → logprob: -14.311982154846191
    9. '```' → logprob: -14.311982154846191
    10. '=[]' → logprob: -14.561982154846191

Token 1109: ' [' (ID: 723)
  Prédit: '[start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[start' → logprob: -0.012051350437104702
    2. '[s' → logprob: -5.137051582336426
    3. '[' → logprob: -5.637051582336426
    4. '1' → logprob: -6.762051582336426
    5. ' [' → logprob: -7.512051582336426
    6. '[(' → logprob: -8.012051582336426
    7. '(start' → logprob: -8.262051582336426
    8. 'start' → logprob: -9.137051582336426
    9. '(' → logprob: -10.262051582336426
    10. '   ' → logprob: -10.512051582336426

Token 1110: 'start' (ID: 5236)
  Prédit: 'start'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'start' → logprob: -4.320199877838604e-07
    2. ' start' → logprob: -15.0
    3. '[start' → logprob: -20.125
    4. '(start' → logprob: -21.125
    5. '
' → logprob: -21.625
    6. '   ' → logprob: -21.875
    7. '	start' → logprob: -23.375
    8. ' ' → logprob: -24.125
    9. '=start' → logprob: -24.625
    10. ',start' → logprob: -25.375

Token 1111: ']
' (ID: 1592)
  Prédit: ']
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']
' → logprob: -0.1472858339548111
    2. '           ' → logprob: -2.2722859382629395
    3. ']' → logprob: -3.3972859382629395
    4. '       ' → logprob: -8.522285461425781
    5. '               ' → logprob: -9.772285461425781
    6. ',' → logprob: -10.272285461425781
    7. ']

' → logprob: -10.397285461425781
    8. '   ' → logprob: -11.272285461425781
    9. ']
' → logprob: -11.397285461425781
    10. '[' → logprob: -11.522285461425781

Token 1112: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0007441143970936537
    2. '       ' → logprob: -7.500744342803955
    3. '   ' → logprob: -8.875743865966797
    4. '	       ' → logprob: -10.875743865966797
    5. 'while' → logprob: -11.000743865966797
    6. '               ' → logprob: -11.875743865966797
    7. ' while' → logprob: -12.750743865966797
    8. '```' → logprob: -13.125743865966797
    9. '
' → logprob: -13.500743865966797
    10. '	   ' → logprob: -14.125743865966797

Token 1113: ' visited' (ID: 18416)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.061985164880752563
    2. '           ' → logprob: -3.5619852542877197
    3. 'visited' (adapté à ' visited') → logprob: -3.5619852542877197
    4. ' while' → logprob: -6.436985015869141
    5. 'idx' → logprob: -6.811985015869141
    6. '
' → logprob: -8.68698501586914
    7. '   ' → logprob: -8.93698501586914
    8. 'for' → logprob: -9.56198501586914
    9. 'pos' → logprob: -9.68698501586914
    10. '       ' → logprob: -10.06198501586914

Token 1114: ' |=' (ID: 19917)
  Prédit: ' |='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' |=' → logprob: -0.6501634120941162
    2. '|' → logprob: -0.9001634120941162
    3. ' =' → logprob: -3.275163412094116
    4. '=' → logprob: -3.400163412094116
    5. '   ' → logprob: -8.400163650512695
    6. ' |' → logprob: -10.025163650512695
    7. '       ' → logprob: -10.900163650512695
    8. ' ' → logprob: -10.900163650512695
    9. '```' → logprob: -11.525163650512695
    10. '    ' → logprob: -12.275163650512695

Token 1115: ' (' (ID: 350)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.12696726620197296
    2. '(' → logprob: -2.126967191696167
    3. ' (' → logprob: -10.751967430114746
    4. ' ' → logprob: -11.001967430114746
    5. '
' → logprob: -15.126967430114746
    6. '```' → logprob: -15.251967430114746
    7. '   ' → logprob: -15.626967430114746
    8. '{' → logprob: -16.50196647644043
    9. '           ' → logprob: -16.62696647644043
    10. '0' → logprob: -16.62696647644043

Token 1116: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.735893965815194e-05
    2. '(' → logprob: -11.000017166137695
    3. ' ' → logprob: -14.625017166137695
    4. '0' → logprob: -17.500017166137695
    5. '           ' → logprob: -17.500017166137695
    6. '```' → logprob: -18.250017166137695
    7. ' (' → logprob: -18.500017166137695
    8. '   ' → logprob: -18.500017166137695
    9. '               ' → logprob: -19.000017166137695
    10. 'queue' → logprob: -19.250017166137695

Token 1117: ' <<' (ID: 2256)
  Prédit: ' <<'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <<' → logprob: -0.10020699352025986
    2. '<<' → logprob: -2.3502070903778076
    3. '<<(' → logprob: -16.35020637512207
    4. ')' → logprob: -16.47520637512207
    5. ' <<=' → logprob: -17.35020637512207
    6. ')<<' → logprob: -17.35020637512207
    7. ' <<
' → logprob: -17.35020637512207
    8. '1' → logprob: -17.60020637512207
    9. '<<<' → logprob: -17.60020637512207
    10. ' ' → logprob: -18.22520637512207

Token 1118: ' start' (ID: 1604)
  Prédit: 'start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'start' → logprob: -3.392824874026701e-05
    2. ' start' → logprob: -10.37503433227539
    3. '0' → logprob: -13.12503433227539
    4. '[start' → logprob: -14.75003433227539
    5. 'queue' → logprob: -15.75003433227539
    6. '	start' → logprob: -16.62503433227539
    7. '
' → logprob: -17.12503433227539
    8. ' ' → logprob: -17.50003433227539
    9. '(start' → logprob: -18.25003433227539
    10. '=start' → logprob: -18.25003433227539

Token 1119: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.41835349798202515
    2. ')
' → logprob: -1.41835355758667
    3. '           ' → logprob: -2.41835355758667
    4. '       ' → logprob: -4.79335355758667
    5. 'while' → logprob: -6.79335355758667
    6. '
' → logprob: -7.66835355758667
    7. '```' → logprob: -9.043353080749512
    8. ' while' → logprob: -9.293353080749512
    9. '   ' → logprob: -9.293353080749512
    10. ']' → logprob: -9.418353080749512

Token 1120: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.13736896216869354
    2. '       ' → logprob: -2.13736891746521
    3. '   ' → logprob: -5.762369155883789
    4. 'while' → logprob: -5.887369155883789
    5. '
' → logprob: -6.637369155883789
    6. '```' → logprob: -6.637369155883789
    7. ' while' → logprob: -7.387369155883789
    8. '	while' → logprob: -7.387369155883789
    9. '	       ' → logprob: -7.887369155883789
    10. '	   ' → logprob: -8.887369155883789

Token 1121: ' while' (ID: 2049)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' (adapté à ' while') → logprob: -0.0062175593338906765
    2. '           ' → logprob: -5.8812174797058105
    3. ' while' → logprob: -5.8812174797058105
    4. '       ' → logprob: -8.006217956542969
    5. '	while' → logprob: -9.006217956542969
    6. 'idx' → logprob: -9.381217956542969
    7. '
' → logprob: -10.756217956542969
    8. '   ' → logprob: -11.006217956542969
    9. '	       ' → logprob: -11.756217956542969
    10. '```' → logprob: -11.881217956542969

Token 1122: ' queue' (ID: 13661)
  Prédit: 'queue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'queue' → logprob: -0.000629279064014554
    2. ' queue' → logprob: -7.500629425048828
    3. 'len' → logprob: -9.875629425048828
    4. '   ' → logprob: -11.250629425048828
    5. '       ' → logprob: -11.750629425048828
    6. '	queue' → logprob: -13.625629425048828
    7. ' ' → logprob: -14.000629425048828
    8. '           ' → logprob: -14.625629425048828
    9. '  ' → logprob: -14.875629425048828
    10. '     ' → logprob: -15.250629425048828

Token 1123: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.06082575023174286
    2. ':' → logprob: -3.060825824737549
    3. '.pop' → logprob: -4.560825824737549
    4. '               ' → logprob: -7.435825824737549
    5. '```' → logprob: -7.810825824737549
    6. ' and' → logprob: -8.06082534790039
    7. '=' → logprob: -8.93582534790039
    8. 'and' → logprob: -9.93582534790039
    9. '           ' → logprob: -9.93582534790039
    10. '[' → logprob: -10.31082534790039

Token 1124: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.00011629798245849088
    2. '```' → logprob: -10.375116348266602
    3. '	           ' → logprob: -10.375116348266602
    4. '   ' → logprob: -11.000116348266602
    5. 'pop' → logprob: -11.625116348266602
    6. '           ' → logprob: -12.125116348266602
    7. 'v' → logprob: -12.625116348266602
    8. ' x' → logprob: -13.125116348266602
    9. 'token' → logprob: -13.625116348266602
    10. ' current' → logprob: -13.625116348266602

Token 1125: ' v' (ID: 323)
  Prédit: 'current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'current' → logprob: -0.7130630612373352
    2. 'node' → logprob: -1.4630630016326904
    3. 'u' → logprob: -2.7130630016326904
    4. ' current' → logprob: -2.8380630016326904
    5. 'v' (adapté à ' v') → logprob: -3.4630630016326904
    6. 'cur' → logprob: -3.5880630016326904
    7. 'curr' → logprob: -3.5880630016326904
    8. '                   ' → logprob: -3.7130630016326904
    9. ' u' → logprob: -4.0880632400512695
    10. ' node' → logprob: -4.5880632400512695

Token 1126: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2427002340555191
    2. '=' → logprob: -1.617700219154358
    3. '.pop' → logprob: -4.117700099945068
    4. '=v' → logprob: -7.492700099945068
    5. 'v' → logprob: -8.617700576782227
    6. '.append' → logprob: -10.242700576782227
    7. 'pop' → logprob: -10.742700576782227
    8. '               ' → logprob: -11.367700576782227
    9. '   ' → logprob: -11.492700576782227
    10. '.' → logprob: -11.867700576782227

Token 1127: ' queue' (ID: 13661)
  Prédit: 'queue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'queue' → logprob: -0.048587825149297714
    2. ' queue' → logprob: -3.0485877990722656
    3. '	queue' → logprob: -14.923587799072266
    4. '   ' → logprob: -16.673587799072266
    5. '(queue' → logprob: -16.923587799072266
    6. '.queue' → logprob: -18.548587799072266
    7. ' ' → logprob: -18.548587799072266
    8. '    ' → logprob: -19.298587799072266
    9. 'query' → logprob: -19.423587799072266
    10. '       ' → logprob: -19.798587799072266

Token 1128: '.pop' (ID: 15746)
  Prédit: '.pop'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.pop' → logprob: -0.0003983760252594948
    2. 'pop' → logprob: -8.500398635864258
    3. '=' → logprob: -9.000398635864258
    4. '.' → logprob: -10.125398635864258
    5. ' =' → logprob: -11.500398635864258
    6. '.append' → logprob: -11.750398635864258
    7. '_pop' → logprob: -11.875398635864258
    8. ' .' → logprob: -13.625398635864258
    9. '.p' → logprob: -13.875398635864258
    10. '	pop' → logprob: -14.000398635864258

Token 1129: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.06588174402713776
    2. '()
' → logprob: -2.8158817291259766
    3. '0' → logprob: -5.690881729125977
    4. '(' → logprob: -7.565881729125977
    5. '()\' → logprob: -12.190881729125977
    6. '()>' → logprob: -13.565881729125977
    7. '()-' → logprob: -13.690881729125977
    8. '```' → logprob: -14.190881729125977
    9. '())' → logprob: -14.440881729125977
    10. '(),' → logprob: -14.690881729125977

Token 1130: '               ' (ID: 506)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.5776702165603638
    2. '               ' → logprob: -1.0776702165603638
    3. '           ' → logprob: -2.452670097351074
    4. ' for' → logprob: -4.452670097351074
    5. '
' → logprob: -8.077670097351074
    6. '                   ' → logprob: -8.327670097351074
    7. '   ' → logprob: -9.827670097351074
    8. '```' → logprob: -10.077670097351074
    9. 'if' → logprob: -10.952670097351074
    10. '       ' → logprob: -11.702670097351074

Token 1131: ' neighbors' (ID: 31655)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.11376388370990753
    2. 'neighbors' (adapté à ' neighbors') → logprob: -2.4887638092041016
    3. '               ' → logprob: -4.238763809204102
    4. 'adj' → logprob: -5.988763809204102
    5. ' for' → logprob: -6.113763809204102
    6. '   ' → logprob: -6.363763809204102
    7. ' neighbors' → logprob: -6.488763809204102
    8. 'neighbor' → logprob: -7.363763809204102
    9. '                   ' → logprob: -7.488763809204102
    10. '           ' → logprob: -7.738763809204102

Token 1132: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.2842969000339508
    2. ' =' → logprob: -1.4092968702316284
    3. 'for' → logprob: -6.034296989440918
    4. '   ' → logprob: -8.784296989440918
    5. ':' → logprob: -9.159296989440918
    6. ' |=' → logprob: -9.284296989440918
    7. ' for' → logprob: -9.909296989440918
    8. '       ' → logprob: -10.034296989440918
    9. '           ' → logprob: -10.159296989440918
    10. '               ' → logprob: -10.159296989440918

Token 1133: ' adj' (ID: 20251)
  Prédit: 'adj'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'adj' → logprob: -0.00022940391500014812
    2. ' adj' → logprob: -9.375229835510254
    3. '(adj' → logprob: -9.500229835510254
    4. 'self' → logprob: -9.875229835510254
    5. '   ' → logprob: -12.500229835510254
    6. '[' → logprob: -12.750229835510254
    7. '(' → logprob: -12.875229835510254
    8. '           ' → logprob: -13.000229835510254
    9. '
' → logprob: -13.250229835510254
    10. '               ' → logprob: -14.000229835510254

Token 1134: '_masks' (ID: 155097)
  Prédit: '_masks'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_masks' → logprob: -1.0206720617134124e-05
    2. 'm' → logprob: -12.12501049041748
    3. '[v' → logprob: -13.50001049041748
    4. '_mask' → logprob: -13.87501049041748
    5. 'Masks' → logprob: -13.87501049041748
    6. 'v' → logprob: -14.50001049041748
    7. '[' → logprob: -15.12501049041748
    8. 'mask' → logprob: -15.50001049041748
    9. 's' → logprob: -16.250009536743164
    10. '```' → logprob: -16.375009536743164

Token 1135: '[v' (ID: 36561)
  Prédit: '[v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[v' → logprob: -9.615255839889869e-05
    2. 'v' → logprob: -9.250096321105957
    3. '	v' → logprob: -17.50009536743164
    4. ')v' → logprob: -17.75009536743164
    5. '<v' → logprob: -18.50009536743164
    6. '(v' → logprob: -19.62509536743164
    7. '[
' → logprob: -19.75009536743164
    8. '```' → logprob: -19.87509536743164
    9. '   ' → logprob: -20.12509536743164
    10. '[' → logprob: -20.50009536743164

Token 1136: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0646199882030487
    2. '])' → logprob: -3.064620018005371
    3. ']&' → logprob: -5.064620018005371
    4. ']
' → logprob: -5.814620018005371
    5. ')' → logprob: -5.814620018005371
    6. '&' → logprob: -6.189620018005371
    7. '[v' → logprob: -7.689620018005371
    8. ' &' → logprob: -8.314620018005371
    9. '|' → logprob: -8.689620018005371
    10. 'v' → logprob: -8.814620018005371

Token 1137: '               ' (ID: 506)
  Prédit: '&'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '&' → logprob: -0.5782996416091919
    2. '               ' → logprob: -0.9532996416091919
    3. 'for' → logprob: -3.7032995223999023
    4. ' &' → logprob: -3.7032995223999023
    5. ' for' → logprob: -6.078299522399902
    6. '           ' → logprob: -6.578299522399902
    7. '&
' → logprob: -8.078299522399902
    8. 'while' → logprob: -9.578299522399902
    9. '
' → logprob: -9.953299522399902
    10. '&nbsp' → logprob: -10.078299522399902

Token 1138: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.5142340660095215
    2. 'neighbors' → logprob: -1.2642340660095215
    3. 'subset' → logprob: -2.8892340660095215
    4. '               ' → logprob: -3.8892340660095215
    5. 'mask' → logprob: -4.2642340660095215
    6. 'neighbor' → logprob: -4.5142340660095215
    7. ' neighbors' → logprob: -5.5142340660095215
    8. 'to' → logprob: -5.6392340660095215
    9. ' for' → logprob: -6.0142340660095215
    10. 'next' → logprob: -6.7642340660095215

Token 1139: ' neighbors' (ID: 31655)
  Prédit: 'neighbors'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'neighbors' → logprob: -0.6561087965965271
    2. 'for' → logprob: -0.9061087965965271
    3. 'to' → logprob: -4.031108856201172
    4. 'mask' → logprob: -4.406108856201172
    5. 'subset' → logprob: -4.406108856201172
    6. ' neighbors' → logprob: -5.156108856201172
    7. 'neighbor' → logprob: -5.281108856201172
    8. 'reachable' → logprob: -5.281108856201172
    9. '   ' → logprob: -5.781108856201172
    10. '               ' → logprob: -5.906108856201172

Token 1140: ' intersect' (ID: 64353)
  Prédit: '&'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '&' → logprob: -0.002487903693690896
    2. ' &=' → logprob: -6.502488136291504
    3. '=' → logprob: -7.877488136291504
    4. '&amp' → logprob: -8.127488136291504
    5. '&
' → logprob: -9.002488136291504
    6. ' &' → logprob: -9.252488136291504
    7. 'for' → logprob: -10.627488136291504
    8. '               ' → logprob: -10.752488136291504
    9. '&s' → logprob: -11.002488136291504
    10. ' =' → logprob: -11.877488136291504

Token 1141: ' s' (ID: 265)
  Prédit: '(s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(s' → logprob: -0.9167218208312988
    2. 'with' → logprob: -1.4167218208312988
    3. 's' → logprob: -2.166721820831299
    4. '&' → logprob: -2.291721820831299
    5. ' with' → logprob: -2.416721820831299
    6. '&s' → logprob: -3.416721820831299
    7. ' s' → logprob: -5.166721820831299
    8. ' &' → logprob: -5.291721820831299
    9. '&
' → logprob: -5.666721820831299
    10. ' (' → logprob: -6.041721820831299

Token 1142: ' (' (ID: 350)
  Prédit: '&'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '&' → logprob: -0.21374918520450592
    2. ' &' → logprob: -1.7137491703033447
    3. '&amp' → logprob: -5.213749408721924
    4. '               ' → logprob: -5.838749408721924
    5. '&s' → logprob: -6.088749408721924
    6. '&
' → logprob: -6.963749408721924
    7. ' &=' → logprob: -8.588748931884766
    8. '                   ' → logprob: -8.713748931884766
    9. ' &
' → logprob: -9.088748931884766
    10. '&nbsp' → logprob: -10.588748931884766

Token 1143: 'regions' (ID: 134292)
  Prédit: '&'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '&' → logprob: -0.11535730212926865
    2. ' &' → logprob: -2.2403573989868164
    3. '&s' → logprob: -6.990357398986816
    4. '&
' → logprob: -6.990357398986816
    5. '&amp' → logprob: -7.740357398986816
    6. ' &
' → logprob: -9.490357398986816
    7. ')' → logprob: -9.740357398986816
    8. '&nbsp' → logprob: -9.865357398986816
    9. '               ' → logprob: -10.865357398986816
    10. '&)' → logprob: -11.740357398986816

Token 1144: ' in' (ID: 306)
  Prédit: '&'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '&' → logprob: -0.47488638758659363
    2. ' &' → logprob: -0.974886417388916
    3. ')' → logprob: -8.224885940551758
    4. ')&' → logprob: -8.599885940551758
    5. '&amp' → logprob: -9.224885940551758
    6. '               ' → logprob: -9.474885940551758
    7. '&
' → logprob: -9.474885940551758
    8. ' &
' → logprob: -10.849885940551758
    9. '&s' → logprob: -10.974885940551758
    10. '                   ' → logprob: -11.474885940551758

Token 1145: ' subset' (ID: 58845)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.020319029688835144
    2. ' s' → logprob: -4.145318984985352
    3. 'queue' → logprob: -6.395318984985352
    4. 'visited' → logprob: -6.895318984985352
    5. 'the' → logprob: -7.895318984985352
    6. ')' → logprob: -8.020318984985352
    7. ' queue' → logprob: -8.520318984985352
    8. '               ' → logprob: -9.020318984985352
    9. 'neighbors' → logprob: -9.020318984985352
    10. 'subset' → logprob: -9.145318984985352

Token 1146: ')' (ID: 8)
  Prédit: '&'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '&' → logprob: -0.30493834614753723
    2. ' &' → logprob: -1.5549383163452148
    3. ')' → logprob: -3.054938316345215
    4. ')&' → logprob: -6.179938316345215
    5. '               ' → logprob: -6.554938316345215
    6. '                   ' → logprob: -7.554938316345215
    7. '&amp' → logprob: -9.054938316345215
    8. '&
' → logprob: -9.179938316345215
    9. 'and' → logprob: -10.179938316345215
    10. ')
' → logprob: -10.304938316345215

Token 1147: ' not' (ID: 625)
  Prédit: ' &'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' &' → logprob: -0.7466251850128174
    2. '               ' → logprob: -1.1216251850128174
    3. '&' → logprob: -1.6216251850128174
    4. '&
' → logprob: -7.371624946594238
    5. ' &=' → logprob: -7.371624946594238
    6. '
' → logprob: -8.246624946594238
    7. ' =' → logprob: -8.621624946594238
    8. '&amp' → logprob: -8.746624946594238
    9. ' &
' → logprob: -8.871624946594238
    10. 'for' → logprob: -8.996624946594238

Token 1148: ' yet' (ID: 5073)
  Prédit: 'visited'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'visited' → logprob: -0.03586900234222412
    2. '&' → logprob: -3.7858691215515137
    3. '0' → logprob: -5.660869121551514
    4. '   ' → logprob: -6.285869121551514
    5. 'empty' → logprob: -6.285869121551514
    6. ' visited' → logprob: -6.535869121551514
    7. '           ' → logprob: -6.910869121551514
    8. '       ' → logprob: -7.785869121551514
    9. ' ' → logprob: -7.785869121551514
    10. '(' → logprob: -7.910869121551514

Token 1149: ' visited' (ID: 18416)
  Prédit: 'visited'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'visited' → logprob: -0.0013436852023005486
    2. ' visited' → logprob: -6.626343727111816
    3. 'in' → logprob: -11.626343727111816
    4. '           ' → logprob: -13.126343727111816
    5. '0' → logprob: -13.126343727111816
    6. ' ' → logprob: -13.501343727111816
    7. ' in' → logprob: -14.001343727111816
    8. '(' → logprob: -15.126343727111816
    9. '   ' → logprob: -15.126343727111816
    10. 'added' → logprob: -15.251343727111816

Token 1150: '
' (ID: 198)
  Prédit: '&'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '&' → logprob: -0.5929141640663147
    2. '               ' → logprob: -1.46791410446167
    3. ' &' → logprob: -1.71791410446167
    4. '&
' → logprob: -4.21791410446167
    5. '                   ' → logprob: -4.46791410446167
    6. 'for' → logprob: -5.84291410446167
    7. '
' → logprob: -5.96791410446167
    8. ' &
' → logprob: -6.59291410446167
    9. ' &=' → logprob: -7.09291410446167
    10. 'and' → logprob: -7.21791410446167

Token 1151: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.01868981495499611
    2. '```' → logprob: -4.3936896324157715
    3. '
' → logprob: -5.8936896324157715
    4. 'for' → logprob: -6.5186896324157715
    5. ' for' → logprob: -7.0186896324157715
    6. '                   ' → logprob: -8.01869010925293
    7. '                
' → logprob: -8.26869010925293
    8. '``' → logprob: -8.64369010925293
    9. '                ' → logprob: -9.76869010925293
    10. ',' → logprob: -10.51869010925293

Token 1152: ' nbr' (ID: 137674)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.8658000230789185
    2. ' neighbors' → logprob: -1.3658000230789185
    3. 'for' → logprob: -2.490799903869629
    4. '               ' → logprob: -2.740799903869629
    5. ' mask' → logprob: -3.240799903869629
    6. 'neighbors' → logprob: -3.365799903869629
    7. 'mask' → logprob: -3.865799903869629
    8. ' next' → logprob: -4.115799903869629
    9. ' to' → logprob: -4.615799903869629
    10. ' new' → logprob: -4.740799903869629

Token 1153: 's' (ID: 82)
  Prédit: 's'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.00019471932318992913
    2. 'ors' → logprob: -10.000194549560547
    3. 'bors' → logprob: -10.125194549560547
    4. '=' → logprob: -10.625194549560547
    5. 'iors' → logprob: -11.250194549560547
    6. '_mask' → logprob: -11.250194549560547
    7. 'rors' → logprob: -11.375194549560547
    8. ' =' → logprob: -11.500194549560547
    9. '_set' → logprob: -12.250194549560547
    10. 'ighbors' → logprob: -12.500194549560547

Token 1154: '_in' (ID: 2267)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.3658032715320587
    2. ' =' → logprob: -1.2408032417297363
    3. '&' → logprob: -4.240803241729736
    4. '_mask' → logprob: -6.865803241729736
    5. ' &=' → logprob: -7.490803241729736
    6. ' &' → logprob: -7.740803241729736
    7. 's' → logprob: -8.865803718566895
    8. '=&' → logprob: -8.990803718566895
    9. '           ' → logprob: -9.240803718566895
    10. '               ' → logprob: -9.740803718566895

Token 1155: '_s' (ID: 1278)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.24837906658649445
    2. '(s' → logprob: -1.748379111289978
    3. ' s' → logprob: -3.2483789920806885
    4. ' (' → logprob: -5.373379230499268
    5. '(' → logprob: -6.623379230499268
    6. 'visited' → logprob: -8.24837875366211
    7. 'neighbors' → logprob: -8.99837875366211
    8. 'queue' → logprob: -8.99837875366211
    9. '_s' → logprob: -9.37337875366211
    10. '&s' → logprob: -9.62337875366211

Token 1156: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.1881578117609024
    2. ' =' → logprob: -2.188157796859741
    3. '&' → logprob: -2.938157796859741
    4. ' &' → logprob: -5.18815803527832
    5. ' &=' → logprob: -7.31315803527832
    6. '&s' → logprob: -9.56315803527832
    7. '&
' → logprob: -10.68815803527832
    8. '&amp' → logprob: -10.81315803527832
    9. '=
' → logprob: -11.06315803527832
    10. '=&' → logprob: -11.43815803527832

Token 1157: ' neighbors' (ID: 31655)
  Prédit: 'neighbors'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'neighbors' → logprob: -0.07351922243833542
    2. ' neighbors' → logprob: -2.948519229888916
    3. 's' → logprob: -4.573519229888916
    4. '(s' → logprob: -5.948519229888916
    5. ' s' → logprob: -6.448519229888916
    6. ' (' → logprob: -6.573519229888916
    7. '(ne' → logprob: -6.698519229888916
    8. '(' → logprob: -7.448519229888916
    9. '((' → logprob: -8.448518753051758
    10. '(n' → logprob: -8.948518753051758

Token 1158: ' &' (ID: 827)
  Prédit: '&'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '&' → logprob: -0.2018391638994217
    2. ' &' → logprob: -1.7018392086029053
    3. '&amp' → logprob: -8.701839447021484
    4. '&s' → logprob: -8.701839447021484
    5. '&
' → logprob: -10.076839447021484
    6. '&nbsp' → logprob: -11.326839447021484
    7. ' &
' → logprob: -11.326839447021484
    8. '&I' → logprob: -12.451839447021484
    9. ' ' → logprob: -12.576839447021484
    10. '&A' → logprob: -12.701839447021484

Token 1159: ' s' (ID: 265)
  Prédit: '(~'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(~' → logprob: -0.5623435378074646
    2. '(s' → logprob: -1.4373435974121094
    3. 's' → logprob: -2.0623435974121094
    4. ' (~' → logprob: -3.0623435974121094
    5. '~' → logprob: -4.812343597412109
    6. ' (' → logprob: -4.937343597412109
    7. '(' → logprob: -6.562343597412109
    8. ' ~' → logprob: -6.937343597412109
    9. ' s' → logprob: -7.562343597412109
    10. '   ' → logprob: -9.18734359741211

Token 1160: ' &' (ID: 827)
  Prédit: '&'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '&' → logprob: -0.2544514834880829
    2. '
' → logprob: -2.3794515132904053
    3. '               ' → logprob: -3.0044515132904053
    4. '                   ' → logprob: -3.1294515132904053
    5. ' &' → logprob: -3.7544515132904053
    6. '&
' → logprob: -5.129451274871826
    7. '           ' → logprob: -6.254451274871826
    8. '<|end|>' → logprob: -6.629451274871826
    9. 'and' → logprob: -7.254451274871826
    10. '                ' → logprob: -7.379451274871826

Token 1161: ' (~' (ID: 65176)
  Prédit: '~'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '~' → logprob: -0.03813730552792549
    2. '(~' → logprob: -3.288137197494507
    3. ' ~' → logprob: -9.663137435913086
    4. '   ' → logprob: -10.913137435913086
    5. ' (~' → logprob: -11.413137435913086
    6. '               ' → logprob: -13.788137435913086
    7. '
' → logprob: -14.413137435913086
    8. '                   ' → logprob: -14.788137435913086
    9. '~
' → logprob: -15.163137435913086
    10. '           ' → logprob: -15.163137435913086

Token 1162: 'visited' (ID: 52453)
  Prédit: 'visited'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'visited' → logprob: -1.306760805164231e-05
    2. ' visited' → logprob: -11.25001335144043
    3. '   ' → logprob: -19.00001335144043
    4. '
' → logprob: -19.37501335144043
    5. 'visit' → logprob: -20.87501335144043
    6. '(' → logprob: -21.00001335144043
    7. ' ' → logprob: -21.87501335144043
    8. 'visible' → logprob: -22.12501335144043
    9. 'v' → logprob: -22.12501335144043
    10. 'vis' → logprob: -22.25001335144043

Token 1163: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.4745423197746277
    2. ')' → logprob: -0.9745423197746277
    3. '               ' → logprob: -9.099542617797852
    4. '):
' → logprob: -9.099542617797852
    5. '                   ' → logprob: -9.599542617797852
    6. ' )
' → logprob: -9.974542617797852
    7. '           ' → logprob: -10.599542617797852
    8. '
' → logprob: -10.724542617797852
    9. ')

' → logprob: -10.724542617797852
    10. '<|end|>' → logprob: -11.224542617797852

Token 1164: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.00013524403038900346
    2. '
' → logprob: -9.87513542175293
    3. '                   ' → logprob: -10.25013542175293
    4. '```' → logprob: -11.12513542175293
    5. ' for' → logprob: -11.25013542175293
    6. 'for' → logprob: -11.75013542175293
    7. '           ' → logprob: -12.25013542175293
    8. '                
' → logprob: -13.25013542175293
    9. '                ' → logprob: -13.75013542175293
    10. '       ' → logprob: -13.75013542175293

Token 1165: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.37808001041412354
    2. 'while' → logprob: -2.003079891204834
    3. ' for' → logprob: -2.253079891204834
    4. '               ' → logprob: -2.753079891204834
    5. ' while' → logprob: -5.128079891204834
    6. '                   ' → logprob: -6.253079891204834
    7. '           ' → logprob: -6.503079891204834
    8. '
' → logprob: -7.378079891204834
    9. 'queue' → logprob: -7.878079891204834
    10. 'if' → logprob: -8.753080368041992

Token 1166: ' expand' (ID: 10791)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.49016880989074707
    2. 'for' → logprob: -1.240168809890747
    3. ' while' → logprob: -3.490168809890747
    4. 'while' → logprob: -3.490168809890747
    5. '                   ' → logprob: -4.365168571472168
    6. ' queue' → logprob: -4.490168571472168
    7. '               ' → logprob: -5.115168571472168
    8. ' nbr' → logprob: -6.115168571472168
    9. 'queue' → logprob: -6.240168571472168
    10. '
' → logprob: -7.615168571472168

Token 1167: ' visited' (ID: 18416)
  Prédit: 'queue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'queue' → logprob: -0.42088717222213745
    2. ' queue' → logprob: -1.2958872318267822
    3. '=' → logprob: -4.420886993408203
    4. '                   ' → logprob: -4.420886993408203
    5. 'for' → logprob: -4.795886993408203
    6. '           ' → logprob: -4.920886993408203
    7. '               ' → logprob: -5.170886993408203
    8. ' for' → logprob: -5.670886993408203
    9. '(queue' → logprob: -5.670886993408203
    10. '+=' → logprob: -6.170886993408203

Token 1168: ' with' (ID: 483)
  Prédit: '|'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '|' → logprob: -0.40347760915756226
    2. ' |=' → logprob: -1.653477668762207
    3. '                   ' → logprob: -3.028477668762207
    4. '               ' → logprob: -3.153477668762207
    5. '           ' → logprob: -3.653477668762207
    6. '
' → logprob: -4.528477668762207
    7. 'for' → logprob: -5.903477668762207
    8. ' =' → logprob: -6.278477668762207
    9. '=' → logprob: -6.403477668762207
    10. ' |' → logprob: -6.653477668762207

Token 1169: ' nbr' (ID: 137674)
  Prédit: 'nbr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nbr' → logprob: -0.009771316312253475
    2. ' nbr' → logprob: -4.634771347045898
    3. 'n' → logprob: -11.884771347045898
    4. '(n' → logprob: -13.009771347045898
    5. '
' → logprob: -13.509771347045898
    6. '(' → logprob: -14.009771347045898
    7. '                   ' → logprob: -14.259771347045898
    8. 'nb' → logprob: -14.634771347045898
    9. '   ' → logprob: -14.634771347045898
    10. '           ' → logprob: -14.759771347045898

Token 1170: 's' (ID: 82)
  Prédit: 'nbr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nbr' → logprob: -0.6371100544929504
    2. 's' → logprob: -0.8871100544929504
    3. ' nbr' → logprob: -3.0121099948883057
    4. '           ' → logprob: -6.387110233306885
    5. '(s' → logprob: -6.512110233306885
    6. '       ' → logprob: -6.512110233306885
    7. '   ' → logprob: -6.637110233306885
    8. ' ' → logprob: -6.637110233306885
    9. '         ' → logprob: -8.012109756469727
    10. '               ' → logprob: -8.137109756469727

Token 1171: '_in' (ID: 2267)
  Prédit: '|'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '|' → logprob: -0.1311320811510086
    2. ' |=' → logprob: -2.131132125854492
    3. '           ' → logprob: -5.881132125854492
    4. '               ' → logprob: -7.631132125854492
    5. '   ' → logprob: -8.506132125854492
    6. '                   ' → logprob: -8.881132125854492
    7. '=' → logprob: -9.006132125854492
    8. 's' → logprob: -9.006132125854492
    9. '       ' → logprob: -9.506132125854492
    10. ' =' → logprob: -9.756132125854492

Token 1172: '_s' (ID: 1278)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.46564981341362
    2. 'nbr' → logprob: -1.3406498432159424
    3. '(s' → logprob: -2.9656498432159424
    4. ' nbr' → logprob: -4.090649604797363
    5. '_s' → logprob: -4.340649604797363
    6. '(' → logprob: -5.090649604797363
    7. '(n' → logprob: -5.340649604797363
    8. '(~' → logprob: -5.715649604797363
    9. 'visited' → logprob: -5.840649604797363
    10. '   ' → logprob: -6.215649604797363

Token 1173: '
' (ID: 198)
  Prédit: '|'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '|' → logprob: -0.798150360584259
    2. ' |=' → logprob: -1.1731503009796143
    3. '           ' → logprob: -2.1731503009796143
    4. '                   ' → logprob: -2.7981503009796143
    5. '               ' → logprob: -3.6731503009796143
    6. '
' → logprob: -4.048150539398193
    7. ' |' → logprob: -4.173150539398193
    8. '=' → logprob: -6.798150539398193
    9. '```' → logprob: -6.798150539398193
    10. '   ' → logprob: -7.048150539398193

Token 1174: '               ' (ID: 506)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.2427561730146408
    2. '               ' → logprob: -2.1177561283111572
    3. '                   ' → logprob: -2.8677561283111572
    4. '
' → logprob: -3.9927561283111572
    5. '```' → logprob: -5.242756366729736
    6. '|' → logprob: -6.367756366729736
    7. 'for' → logprob: -6.492756366729736
    8. ' for' → logprob: -6.742756366729736
    9. '            ' → logprob: -6.742756366729736
    10. ' |' → logprob: -6.867756366729736

Token 1175: ' while' (ID: 2049)
  Prédit: 'visited'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'visited' → logprob: -0.7760117053985596
    2. 'for' → logprob: -1.9010117053985596
    3. 'while' (adapté à ' while') → logprob: -2.6510117053985596
    4. ' for' → logprob: -2.6510117053985596
    5. '                   ' → logprob: -2.7760117053985596
    6. ' queue' → logprob: -2.9010117053985596
    7. 'queue' → logprob: -3.0260117053985596
    8. ' visited' → logprob: -3.2760117053985596
    9. ' while' → logprob: -4.5260114669799805
    10. '               ' → logprob: -4.6510114669799805

Token 1176: ' nbr' (ID: 137674)
  Prédit: 'nbr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nbr' → logprob: -0.0004317420825827867
    2. ' nbr' → logprob: -7.750431537628174
    3. '
' → logprob: -14.625432014465332
    4. 'n' → logprob: -14.750432014465332
    5. 'Nbr' → logprob: -15.625432014465332
    6. 'nb' → logprob: -19.000431060791016
    7. '(n' → logprob: -19.125431060791016
    8. '   ' → logprob: -19.500431060791016
    9. '```' → logprob: -19.750431060791016
    10. 'nz' → logprob: -19.875431060791016

Token 1177: 's' (ID: 82)
  Prédit: 's'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.0005881795077584684
    2. 'rs' → logprob: -7.625588417053223
    3. 'nbr' → logprob: -10.250588417053223
    4. 'sr' → logprob: -11.250588417053223
    5. 'sb' → logprob: -11.625588417053223
    6. 'r' → logprob: -11.750588417053223
    7. '_s' → logprob: -11.875588417053223
    8. 'bs' → logprob: -12.625588417053223
    9. 'br' → logprob: -13.250588417053223
    10. '(s' → logprob: -13.375588417053223

Token 1178: '_in' (ID: 2267)
  Prédit: '_in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_in' → logprob: -0.000553151941858232
    2. 's' → logprob: -7.750553131103516
    3. '.pop' → logprob: -10.625553131103516
    4. 'in' → logprob: -10.625553131103516
    5. '>>' → logprob: -11.000553131103516
    6. '>>>' → logprob: -11.500553131103516
    7. '>' → logprob: -11.750553131103516
    8. 'pop' → logprob: -11.875553131103516
    9. '_s' → logprob: -12.000553131103516
    10. 'n' → logprob: -12.750553131103516

Token 1179: '_s' (ID: 1278)
  Prédit: 'visited'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'visited' → logprob: -0.06814586371183395
    2. '(' → logprob: -3.943145751953125
    3. 's' → logprob: -3.943145751953125
    4. 'nbr' → logprob: -4.193145751953125
    5. 'queue' → logprob: -5.193145751953125
    6. '1' → logprob: -6.318145751953125
    7. '0' → logprob: -6.568145751953125
    8. '(queue' → logprob: -7.443145751953125
    9. '(n' → logprob: -7.818145751953125
    10. '(s' → logprob: -7.943145751953125

Token 1180: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.04963368922472
    2. '!=' → logprob: -3.674633741378784
    3. ':' → logprob: -4.174633502960205
    4. ' !=' → logprob: -5.424633502960205
    5. '>' → logprob: -6.174633502960205
    6. '):
' → logprob: -7.174633502960205
    7. '```' → logprob: -9.174633979797363
    8. '=' → logprob: -9.299633979797363
    9. ')!=' → logprob: -10.299633979797363
    10. '           ' → logprob: -10.549633979797363

Token 1181: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.3212575912475586
    2. 'v' → logprob: -1.4462575912475586
    3. ' v' → logprob: -3.6962575912475586
    4. 'n' → logprob: -5.321257591247559
    5. '{
' → logprob: -6.446257591247559
    6. ' next' → logprob: -6.946257591247559
    7. '```' → logprob: -6.946257591247559
    8. '	               ' → logprob: -7.196257591247559
    9. ' nxt' → logprob: -7.321257591247559
    10. 'b' → logprob: -7.446257591247559

Token 1182: ' nxt' (ID: 160200)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.861635684967041
    2. 'nbr' → logprob: -1.611635684967041
    3. 'u' → logprob: -1.736635684967041
    4. 'nb' → logprob: -2.986635684967041
    5. 'next' → logprob: -3.486635684967041
    6. 'w' → logprob: -3.486635684967041
    7. '   ' → logprob: -3.486635684967041
    8. '           ' → logprob: -4.361635684967041
    9. 'bit' → logprob: -4.361635684967041
    10. 'l' → logprob: -5.236635684967041

Token 1183: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.4294026494026184
    2. '=' → logprob: -1.0544025897979736
    3. ',' → logprob: -8.429402351379395
    4. '=n' → logprob: -9.179402351379395
    5. '   ' → logprob: -9.304402351379395
    6. '=v' → logprob: -9.679402351379395
    7. 'n' → logprob: -10.054402351379395
    8. 'v' → logprob: -10.679402351379395
    9. ' |=' → logprob: -10.679402351379395
    10. '|' → logprob: -10.929402351379395

Token 1184: ' (' (ID: 350)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.16138701140880585
    2. 'nbr' → logprob: -2.0363869667053223
    3. 'n' → logprob: -4.036386966705322
    4. ' nbr' → logprob: -7.661386966705322
    5. ' (' → logprob: -8.66138744354248
    6. '(' → logprob: -8.91138744354248
    7. '   ' → logprob: -10.78638744354248
    8. '(nb' → logprob: -11.53638744354248
    9. 'Nbr' → logprob: -11.66138744354248
    10. '((' → logprob: -11.66138744354248

Token 1185: 'nbr' (ID: 141174)
  Prédit: 'nbr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nbr' → logprob: -0.00013417120499070734
    2. ' nbr' → logprob: -9.375134468078613
    3. 'n' → logprob: -10.250134468078613
    4. '(n' → logprob: -11.250134468078613
    5. 'nb' → logprob: -14.875134468078613
    6. '1' → logprob: -15.750134468078613
    7. '(' → logprob: -15.750134468078613
    8. 'Nbr' → logprob: -16.375133514404297
    9. 'nz' → logprob: -16.875133514404297
    10. '
' → logprob: -17.125133514404297

Token 1186: 's' (ID: 82)
  Prédit: 's'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.01285124383866787
    2. 'rs' → logprob: -5.012851238250732
    3. 'nbr' → logprob: -5.137851238250732
    4. '_s' → logprob: -9.63785171508789
    5. 'ns' → logprob: -10.63785171508789
    6. ' nbr' → logprob: -10.63785171508789
    7. 'r' → logprob: -10.88785171508789
    8. '1' → logprob: -11.13785171508789
    9. 'prs' → logprob: -11.26285171508789
    10. 'sr' → logprob: -11.38785171508789

Token 1187: '_in' (ID: 2267)
  Prédit: '_in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_in' → logprob: -0.27535223960876465
    2. 's' → logprob: -1.6503522396087646
    3. '&' → logprob: -3.6503522396087646
    4. '&s' → logprob: -4.275352478027344
    5. '_n' → logprob: -5.775352478027344
    6. 'in' → logprob: -6.525352478027344
    7. ' &' → logprob: -6.775352478027344
    8. 'ns' → logprob: -7.025352478027344
    9. 'n' → logprob: -7.150352478027344
    10. '_s' → logprob: -7.775352478027344

Token 1188: '_s' (ID: 1278)
  Prédit: 'nbr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'nbr' → logprob: -0.0017700201133266091
    2. 's' → logprob: -7.12677001953125
    3. 'n' → logprob: -7.75177001953125
    4. '(n' → logprob: -9.12677001953125
    5. 'ns' → logprob: -9.37677001953125
    6. ' nbr' → logprob: -9.75177001953125
    7. '1' → logprob: -10.00177001953125
    8. 'nz' → logprob: -10.00177001953125
    9. 'nb' → logprob: -10.12677001953125
    10. '31' → logprob: -10.62677001953125

Token 1189: ' &' (ID: 827)
  Prédit: '&'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '&' → logprob: -0.38703927397727966
    2. ' &' → logprob: -1.137039303779602
    3. '&amp' → logprob: -9.137039184570312
    4. '&r' → logprob: -11.262039184570312
    5. '&t' → logprob: -11.262039184570312
    6. '&gt' → logprob: -12.262039184570312
    7. '.bit' → logprob: -12.387039184570312
    8. '&nbsp' → logprob: -12.637039184570312
    9. '&s' → logprob: -12.887039184570312
    10. '&_' → logprob: -12.887039184570312

Token 1190: ' (-' (ID: 21382)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '-' → logprob: -0.6624853610992432
    2. '-n' → logprob: -0.9124853610992432
    3. '(-' → logprob: -2.537485361099243
    4. '(n' → logprob: -6.162485122680664
    5. '-(' → logprob: -6.787485122680664
    6. '(' → logprob: -8.287485122680664
    7. ' -' → logprob: -8.537485122680664
    8. 'n' → logprob: -9.287485122680664
    9. '-s' → logprob: -11.412485122680664
    10. '-N' → logprob: -11.537485122680664

Token 1191: 'nbr' (ID: 141174)
  Prédit: 'nbr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nbr' → logprob: -0.00026753442944027483
    2. 'n' → logprob: -8.25026798248291
    3. ' nbr' → logprob: -12.12526798248291
    4. '1' → logprob: -15.62526798248291
    5. '(n' → logprob: -15.62526798248291
    6. 'nbsp' → logprob: -15.87526798248291
    7. 'nb' → logprob: -16.500267028808594
    8. 'Nbr' → logprob: -16.500267028808594
    9. 'nr' → logprob: -16.625267028808594
    10. '
' → logprob: -17.000267028808594

Token 1192: 's' (ID: 82)
  Prédit: 's'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.0003345122095197439
    2. 'rs' → logprob: -8.750334739685059
    3. 'ns' → logprob: -10.000334739685059
    4. ')s' → logprob: -10.125334739685059
    5. 'sz' → logprob: -10.500334739685059
    6. '_s' → logprob: -10.750334739685059
    7. ')' → logprob: -11.500334739685059
    8. ''s' → logprob: -12.125334739685059
    9. '`s' → logprob: -12.375334739685059
    10. 'sr' → logprob: -12.500334739685059

Token 1193: '_in' (ID: 2267)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.0023417542688548565
    2. '_s' → logprob: -7.0023417472839355
    3. ')s' → logprob: -7.3773417472839355
    4. '[s' → logprob: -7.7523417472839355
    5. ')' → logprob: -9.627342224121094
    6. 'rs' → logprob: -9.627342224121094
    7. 'nbr' → logprob: -9.627342224121094
    8. 'ns' → logprob: -10.127342224121094
    9. '(s' → logprob: -10.252342224121094
    10. '$s' → logprob: -11.377342224121094

Token 1194: '_s' (ID: 1278)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.4826853275299072
    2. 'n' → logprob: -1.8576853275299072
    3. '_n' → logprob: -1.9826853275299072
    4. 'nbr' → logprob: -3.2326853275299072
    5. '_s' → logprob: -4.107685089111328
    6. ')' → logprob: -4.482685089111328
    7. 'rs' → logprob: -4.982685089111328
    8. 'ns' → logprob: -5.107685089111328
    9. '(n' → logprob: -5.482685089111328
    10. ')s' → logprob: -6.482685089111328

Token 1195: ')).' (ID: 8784)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.3485362231731415
    2. ').' → logprob: -1.2235362529754639
    3. ')
' → logprob: -10.723536491394043
    4. ')>>' → logprob: -11.473536491394043
    5. ')-' → logprob: -11.723536491394043
    6. ').__' → logprob: -12.098536491394043
    7. ')!=' → logprob: -12.473536491394043
    8. ')<<' → logprob: -12.473536491394043
    9. ')+' → logprob: -12.598536491394043
    10. '),' → logprob: -12.598536491394043

Token 1196: 'bit' (ID: 6516)
  Prédit: 'bit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bit' → logprob: -0.0005698331515304744
    2. ' bit' → logprob: -8.000570297241211
    3. ' ' → logprob: -8.875570297241211
    4. '.bit' → logprob: -10.125570297241211
    5. 'token' → logprob: -10.750570297241211
    6. '```' → logprob: -11.750570297241211
    7. 'pop' → logprob: -12.125570297241211
    8. '0' → logprob: -12.375570297241211
    9. '1' → logprob: -12.750570297241211
    10. '   ' → logprob: -13.750570297241211

Token 1197: '_length' (ID: 11514)
  Prédit: '_length'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_length' → logprob: -0.00031699295504949987
    2. 'mask' → logprob: -8.125316619873047
    3. 'length' → logprob: -11.250316619873047
    4. '_mask' → logprob: -11.875316619873047
    5. 'set' → logprob: -15.500316619873047
    6. '           ' → logprob: -15.875316619873047
    7. '_LENGTH' → logprob: -15.875316619873047
    8. 'Length' → logprob: -16.000316619873047
    9. '1' → logprob: -16.625316619873047
    10. '               ' → logprob: -17.250316619873047

Token 1198: '()' (ID: 416)
  Prédit: '()'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0010660359403118491
    2. '()-' → logprob: -7.251066207885742
    3. ')' → logprob: -8.251066207885742
    4. '())' → logprob: -9.876066207885742
    5. ' ()' → logprob: -10.626066207885742
    6. '()+' → logprob: -11.501066207885742
    7. '()
' → logprob: -13.376066207885742
    8. ' -' → logprob: -13.751066207885742
    9. '<|end|>' → logprob: -14.251066207885742
    10. '0' → logprob: -14.376066207885742

Token 1199: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.11427804827690125
    2. '-' → logprob: -2.8642780780792236
    3. '()' → logprob: -3.8642780780792236
    4. '()-' → logprob: -4.4892778396606445
    5. ')' → logprob: -4.9892778396606445
    6. '                   ' → logprob: -5.3642778396606445
    7. '                    ' → logprob: -5.9892778396606445
    8. ' ()' → logprob: -6.6142778396606445
    9. '                       ' → logprob: -7.4892778396606445
    10. ' ' → logprob: -7.6142778396606445

Token 1200: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.3425219549390022e-05
    2. ' ' → logprob: -11.25001335144043
    3. '                   ' → logprob: -16.00001335144043
    4. '2' → logprob: -16.12501335144043
    5. '   ' → logprob: -16.25001335144043
    6. '                       ' → logprob: -18.12501335144043
    7. '```' → logprob: -18.12501335144043
    8. '           ' → logprob: -18.37501335144043
    9. '0' → logprob: -18.75001335144043
    10. '               ' → logprob: -19.12501335144043

Token 1201: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.723352049040841e-06
    2. ' ' → logprob: -12.375004768371582
    3. '   ' → logprob: -14.875004768371582
    4. '                   ' → logprob: -17.312503814697266
    5. '           ' → logprob: -17.312503814697266
    6. '2' → logprob: -17.437503814697266
    7. '```' → logprob: -17.812503814697266
    8. '
' → logprob: -17.875003814697266
    9. '0' → logprob: -18.125003814697266
    10. '                           ' → logprob: -18.500003814697266

Token 1202: '
' (ID: 198)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.0018596301088109612
    2. '
' → logprob: -7.501859664916992
    3. '                       ' → logprob: -7.501859664916992
    4. '                    
' → logprob: -9.001859664916992
    5. '               ' → logprob: -9.251859664916992
    6. 'n' → logprob: -9.376859664916992
    7. 'queue' → logprob: -9.626859664916992
    8. '(queue' → logprob: -10.001859664916992
    9. ',' → logprob: -10.251859664916992
    10. '                        
' → logprob: -10.376859664916992

Token 1203: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.00010068230039905757
    2. '               ' → logprob: -9.875101089477539
    3. '                       ' → logprob: -10.875101089477539
    4. '           ' → logprob: -11.375101089477539
    5. '       ' → logprob: -12.375101089477539
    6. '   ' → logprob: -12.500101089477539
    7. '		           ' → logprob: -13.000101089477539
    8. 'n' → logprob: -13.375101089477539
    9. '                    
' → logprob: -13.750101089477539
    10. '				' → logprob: -13.875101089477539

Token 1204: ' nbr' (ID: 137674)
  Prédit: 'visited'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'visited' → logprob: -0.5635858178138733
    2. 'queue' → logprob: -0.9385858178138733
    3. '                   ' → logprob: -3.3135857582092285
    4. '                       ' → logprob: -6.8135857582092285
    5. '               ' → logprob: -7.1885857582092285
    6. '           ' → logprob: -7.5635857582092285
    7. ' queue' → logprob: -7.8135857582092285
    8. ' visited' → logprob: -8.938586235046387
    9. '                           ' → logprob: -9.313586235046387
    10. '   ' → logprob: -9.313586235046387

Token 1205: 's' (ID: 82)
  Prédit: 's'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.010332494042813778
    2. 'rs' → logprob: -5.0103325843811035
    3. 'queue' → logprob: -6.3853325843811035
    4. 'r' → logprob: -7.8853325843811035
    5. '=' → logprob: -7.8853325843811035
    6. '       ' → logprob: -8.635332107543945
    7. '_queue' → logprob: -8.760332107543945
    8. '                   ' → logprob: -8.885332107543945
    9. '           ' → logprob: -9.010332107543945
    10. ' =' → logprob: -9.010332107543945

Token 1206: '_in' (ID: 2267)
  Prédit: '_in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_in' → logprob: -0.001843324746005237
    2. 's' → logprob: -7.001843452453613
    3. 'n' → logprob: -7.126843452453613
    4. '=' → logprob: -10.251843452453613
    5. 'v' → logprob: -10.876843452453613
    6. 'in' → logprob: -11.126843452453613
    7. 'In' → logprob: -11.126843452453613
    8. '_n' → logprob: -12.376843452453613
    9. '   ' → logprob: -12.501843452453613
    10. 'ns' → logprob: -12.626843452453613

Token 1207: '_s' (ID: 1278)
  Prédit: '_s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_s' → logprob: -0.3133624494075775
    2. 's' → logprob: -1.3133624792099
    3. '(s' → logprob: -11.063362121582031
    4. 'set' → logprob: -11.063362121582031
    5. '_n' → logprob: -11.313362121582031
    6. '_set' → logprob: -11.813362121582031
    7. 'ns' → logprob: -11.938362121582031
    8. 'n' → logprob: -12.438362121582031
    9. '   ' → logprob: -12.438362121582031
    10. '_' → logprob: -12.563362121582031

Token 1208: ' &=' (ID: 35621)
  Prédit: '&'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '&' → logprob: -0.29493361711502075
    2. ' &=' → logprob: -1.794933557510376
    3. ' ^=' → logprob: -3.419933557510376
    4. '=' → logprob: -3.419933557510376
    5. '^' → logprob: -4.919933795928955
    6. '>>' → logprob: -5.169933795928955
    7. ' >>=' → logprob: -5.419933795928955
    8. '           ' → logprob: -7.044933795928955
    9. ' &' → logprob: -7.169933795928955
    10. '|' → logprob: -7.169933795928955

Token 1209: ' ~(' (ID: 85491)
  Prédit: 'nbr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nbr' → logprob: -0.20651885867118835
    2. '~' → logprob: -1.7065188884735107
    3. '(n' → logprob: -5.581518650054932
    4. 'n' → logprob: -7.206518650054932
    5. ' nbr' → logprob: -8.20651912689209
    6. ' ~(' → logprob: -8.83151912689209
    7. '(~' → logprob: -9.95651912689209
    8. 'nb' → logprob: -10.95651912689209
    9. 'neighbors' → logprob: -11.83151912689209
    10. 'nr' → logprob: -11.83151912689209

Token 1210: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.10021217912435532
    2. '(' → logprob: -2.3502120971679688
    3. ' (' → logprob: -12.600212097167969
    4. ' ' → logprob: -13.350212097167969
    5. '   ' → logprob: -15.225212097167969
    6. '                   ' → logprob: -16.35021209716797
    7. '           ' → logprob: -16.72521209716797
    8. '               ' → logprob: -17.60021209716797
    9. '{' → logprob: -17.85021209716797
    10. '[' → logprob: -18.10021209716797

Token 1211: ' <<' (ID: 2256)
  Prédit: '<<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<<' → logprob: -0.0035758342128247023
    2. 'n' → logprob: -7.003575801849365
    3. '(n' → logprob: -7.003575801849365
    4. ' <<' → logprob: -7.128575801849365
    5. '1' → logprob: -7.253575801849365
    6. '(' → logprob: -9.378576278686523
    7. '<n' → logprob: -9.378576278686523
    8. '<<(' → logprob: -10.253576278686523
    9. '>>' → logprob: -11.628576278686523
    10. '                   ' → logprob: -11.878576278686523

Token 1212: ' nxt' (ID: 160200)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -4.008129963040119e-06
    2. ' nxt' → logprob: -12.625003814697266
    3. '(n' → logprob: -14.625003814697266
    4. '
' → logprob: -16.250003814697266
    5. '   ' → logprob: -16.500003814697266
    6. '       ' → logprob: -18.125003814697266
    7. '[n' → logprob: -18.500003814697266
    8. '	n' → logprob: -18.875003814697266
    9. ')n' → logprob: -19.250003814697266
    10. 'next' → logprob: -19.250003814697266

Token 1213: ')
' (ID: 446)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.3747144937515259
    2. ')
' → logprob: -1.4997144937515259
    3. ')' → logprob: -2.4997143745422363
    4. '
' → logprob: -5.499714374542236
    5. '           ' → logprob: -7.499714374542236
    6. ',' → logprob: -7.749714374542236
    7. '),' → logprob: -7.874714374542236
    8. '):
' → logprob: -8.124714851379395
    9. '               ' → logprob: -8.374714851379395
    10. '<|end|>' → logprob: -8.499714851379395

Token 1214: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.000741134281270206
    2. '                       ' → logprob: -7.500741004943848
    3. 'queue' → logprob: -10.375741004943848
    4. ' queue' → logprob: -10.500741004943848
    5. '```' → logprob: -10.500741004943848
    6. '               ' → logprob: -10.625741004943848
    7. '                           ' → logprob: -10.750741004943848
    8. '           ' → logprob: -11.000741004943848
    9. '
' → logprob: -11.375741004943848
    10. '				' → logprob: -11.750741004943848

Token 1215: ' visited' (ID: 18416)
  Prédit: 'queue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'queue' → logprob: -0.6085659265518188
    2. 'visited' (adapté à ' visited') → logprob: -1.1085659265518188
    3. '                   ' → logprob: -2.3585658073425293
    4. 'if' → logprob: -3.6085658073425293
    5. '                       ' → logprob: -6.108565807342529
    6. '           ' → logprob: -7.983565807342529
    7. ' queue' → logprob: -7.983565807342529
    8. '   ' → logprob: -8.233566284179688
    9. '```' → logprob: -8.358566284179688
    10. '               ' → logprob: -8.358566284179688

Token 1216: ' |=' (ID: 19917)
  Prédit: '|'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '|' → logprob: -0.06241755932569504
    2. ' |=' → logprob: -2.812417507171631
    3. '                   ' → logprob: -7.937417507171631
    4. '   ' → logprob: -10.687417984008789
    5. '                       ' → logprob: -11.062417984008789
    6. '                    ' → logprob: -11.562417984008789
    7. '    ' → logprob: -12.312417984008789
    8. '                  ' → logprob: -12.312417984008789
    9. '           ' → logprob: -12.562417984008789
    10. '               ' → logprob: -12.687417984008789

Token 1217: ' (' (ID: 350)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.011143792420625687
    2. ' (' → logprob: -4.511143684387207
    3. '1' → logprob: -9.261143684387207
    4. '                           ' → logprob: -15.011143684387207
    5. ' ' → logprob: -15.511143684387207
    6. '                   ' → logprob: -15.761143684387207
    7. '```' → logprob: -15.761143684387207
    8. '                       ' → logprob: -16.511144638061523
    9. '                               ' → logprob: -16.886144638061523
    10. '[' → logprob: -18.011144638061523

Token 1218: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.002478627720847726
    2. '(' → logprob: -6.00247859954834
    3. ' ' → logprob: -13.87747859954834
    4. 'n' → logprob: -14.62747859954834
    5. ' (' → logprob: -14.62747859954834
    6. '```' → logprob: -15.00247859954834
    7. '(n' → logprob: -15.12747859954834
    8. '   ' → logprob: -15.62747859954834
    9. '``' → logprob: -16.627479553222656
    10. '`' → logprob: -17.002479553222656

Token 1219: ' <<' (ID: 2256)
  Prédit: '<<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<<' → logprob: -0.061968132853507996
    2. ' <<' → logprob: -2.8119680881500244
    3. '1' → logprob: -15.811967849731445
    4. '<n' → logprob: -15.811967849731445
    5. '<' → logprob: -16.311967849731445
    6. '```' → logprob: -16.686967849731445
    7. '>>' → logprob: -17.186967849731445
    8. '|' → logprob: -17.311967849731445
    9. '<<<' → logprob: -17.436967849731445
    10. 'n' → logprob: -17.686967849731445

Token 1220: ' nxt' (ID: 160200)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.00010926496179308742
    2. ' nxt' → logprob: -9.125109672546387
    3. 'next' → logprob: -16.62510871887207
    4. '       ' → logprob: -16.87510871887207
    5. '   ' → logprob: -17.00010871887207
    6. '	n' → logprob: -17.50010871887207
    7. '
' → logprob: -17.87510871887207
    8. 'nbr' → logprob: -18.25010871887207
    9. 'nout' → logprob: -18.62510871887207
    10. '     ' → logprob: -18.75010871887207

Token 1221: ')
' (ID: 446)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.0006349971517920494
    2. ')
' → logprob: -8.125635147094727
    3. ')' → logprob: -9.250635147094727
    4. '           ' → logprob: -9.375635147094727
    5. '
' → logprob: -9.750635147094727
    6. '               ' → logprob: -9.875635147094727
    7. '       ' → logprob: -11.375635147094727
    8. '                       ' → logprob: -11.500635147094727
    9. '   ' → logprob: -12.250635147094727
    10. '```' → logprob: -12.250635147094727

Token 1222: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.00036561701563186944
    2. '```' → logprob: -8.625365257263184
    3. '
' → logprob: -10.000365257263184
    4. '                       ' → logprob: -10.250365257263184
    5. '				' → logprob: -10.375365257263184
    6. '               ' → logprob: -10.750365257263184
    7. '           ' → logprob: -11.125365257263184
    8. '   ' → logprob: -11.500365257263184
    9. '``' → logprob: -12.125365257263184
    10. '		           ' → logprob: -12.250365257263184

Token 1223: ' queue' (ID: 13661)
  Prédit: 'queue'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'queue' (adapté à ' queue') → logprob: -0.02922513522207737
    2. ' queue' → logprob: -4.0292253494262695
    3. '                   ' → logprob: -4.5292253494262695
    4. '	queue' → logprob: -9.27922534942627
    5. '           ' → logprob: -10.52922534942627
    6. '   ' → logprob: -10.52922534942627
    7. '       ' → logprob: -10.77922534942627
    8. '                       ' → logprob: -11.02922534942627
    9. '               ' → logprob: -11.40422534942627
    10. '```' → logprob: -11.52922534942627

Token 1224: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.00010568885772954673
    2. '.' → logprob: -9.750105857849121
    3. 'append' → logprob: -10.000105857849121
    4. '.extend' → logprob: -14.750105857849121
    5. 'Append' → logprob: -15.125105857849121
    6. ' .' → logprob: -15.125105857849121
    7. '.insert' → logprob: -15.125105857849121
    8. '                   ' → logprob: -15.500105857849121
    9. '```' → logprob: -15.500105857849121
    10. '           ' → logprob: -16.375104904174805

Token 1225: '(n' (ID: 2406)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.0008284482173621655
    2. '(n' → logprob: -7.500828266143799
    3. ' nxt' → logprob: -8.250828742980957
    4. '	n' → logprob: -12.250828742980957
    5. '   ' → logprob: -12.250828742980957
    6. 'next' → logprob: -13.125828742980957
    7. '       ' → logprob: -14.125828742980957
    8. '[n' → logprob: -14.375828742980957
    9. '               ' → logprob: -15.000828742980957
    10. '           ' → logprob: -15.250828742980957

Token 1226: 'xt' (ID: 711)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.6572467684745789
    2. ' nxt' → logprob: -0.9072467684745789
    3. 'xt' → logprob: -2.6572468280792236
    4. '   ' → logprob: -6.0322465896606445
    5. '       ' → logprob: -6.2822465896606445
    6. 'x' → logprob: -6.9072465896606445
    7. 'nt' → logprob: -7.5322465896606445
    8. 'next' → logprob: -7.6572465896606445
    9. 'nx' → logprob: -8.282246589660645
    10. ' ' → logprob: -9.032246589660645

Token 1227: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0016817249124869704
    2. '           ' → logprob: -6.751681804656982
    3. '               ' → logprob: -7.751681804656982
    4. ')
' → logprob: -10.251681327819824
    5. '                   ' → logprob: -10.876681327819824
    6. '       ' → logprob: -11.876681327819824
    7. '<|end|>' → logprob: -11.876681327819824
    8. '```' → logprob: -13.126681327819824
    9. ')return' → logprob: -13.251681327819824
    10. '
' → logprob: -14.001681327819824

Token 1228: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0036878399550914764
    2. '
' → logprob: -5.878687858581543
    3. '```' → logprob: -7.253687858581543
    4. '               ' → logprob: -9.628687858581543
    5. '       ' → logprob: -9.878687858581543
    6. '                   ' → logprob: -10.628687858581543
    7. '            
' → logprob: -10.878687858581543
    8. 'return' → logprob: -12.628687858581543
    9. '        
' → logprob: -13.128687858581543
    10. '    
' → logprob: -13.378687858581543

Token 1229: ' return' (ID: 622)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.05333161726593971
    2. 'return' (adapté à ' return') → logprob: -3.0533316135406494
    3. ' return' → logprob: -6.0533318519592285
    4. '       ' → logprob: -6.3033318519592285
    5. '   ' → logprob: -7.5533318519592285
    6. '
' → logprob: -10.92833137512207
    7. '               ' → logprob: -12.67833137512207
    8. ' ' → logprob: -13.42833137512207
    9. '	return' → logprob: -13.42833137512207
    10. '          ' → logprob: -13.67833137512207

Token 1230: ' visited' (ID: 18416)
  Prédit: 'visited'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'visited' → logprob: -0.002388852648437023
    2. ' visited' → logprob: -6.127388954162598
    3. '(' → logprob: -8.627388954162598
    4. '   ' → logprob: -11.002388954162598
    5. ' (' → logprob: -11.877388954162598
    6. ' ' → logprob: -15.127388954162598
    7. '  ' → logprob: -15.502388954162598
    8. '
' → logprob: -15.877388954162598
    9. 'vis' → logprob: -16.50238800048828
    10. '    ' → logprob: -16.75238800048828

Token 1231: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.3138379454612732
    2. ' ==' → logprob: -1.313838005065918
    3. '           ' → logprob: -8.313838005065918
    4. '==(' → logprob: -9.938838005065918
    5. '==
' → logprob: -10.063838005065918
    6. '          ' → logprob: -10.063838005065918
    7. ')==' → logprob: -10.438838005065918
    8. '            ' → logprob: -10.563838005065918
    9. '()==' → logprob: -10.688838005065918
    10. '
' → logprob: -10.688838005065918

Token 1232: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.006727095227688551
    2. ' s' → logprob: -5.00672721862793
    3. '           ' → logprob: -11.88172721862793
    4. '   ' → logprob: -13.38172721862793
    5. '(s' → logprob: -13.38172721862793
    6. '
' → logprob: -14.50672721862793
    7. '       ' → logprob: -14.75672721862793
    8. '               ' → logprob: -14.88172721862793
    9. '          ' → logprob: -16.50672721862793
    10. '         ' → logprob: -16.75672721862793

Token 1233: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.6434707641601562
    2. '       ' → logprob: -0.7684707641601562
    3. '<|end|>' → logprob: -5.393470764160156
    4. '           ' → logprob: -6.393470764160156
    5. '```' → logprob: -6.768470764160156
    6. '        
' → logprob: -7.393470764160156
    7. '   ' → logprob: -7.393470764160156
    8. '
' → logprob: -7.768470764160156
    9. '    
' → logprob: -8.518470764160156
    10. '\n' → logprob: -8.643470764160156

Token 1234: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0023241525050252676
    2. '
' → logprob: -6.377324104309082
    3. '        
' → logprob: -8.002324104309082
    4. '```' → logprob: -8.377324104309082
    5. '   ' → logprob: -10.252324104309082
    6. '           ' → logprob: -11.877324104309082
    7. '    
' → logprob: -12.127324104309082
    8. '  
' → logprob: -12.752324104309082
    9. '``' → logprob: -13.752324104309082
    10. '<|end|>' → logprob: -14.002324104309082

Token 1235: ' for' (ID: 395)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.01250506192445755
    2. '
' → logprob: -4.512505054473877
    3. 'for' (adapté à ' for') → logprob: -6.762505054473877
    4. '        
' → logprob: -8.637505531311035
    5. '```' → logprob: -9.637505531311035
    6. '   ' → logprob: -9.887505531311035
    7. '           ' → logprob: -13.637505531311035
    8. ' for' → logprob: -13.887505531311035
    9. '     ' → logprob: -14.262505531311035
    10. '  
' → logprob: -14.262505531311035

Token 1236: ' subset' (ID: 58845)
  Prédit: 'subset'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'subset' → logprob: -0.08070468157529831
    2. 's' → logprob: -3.330704689025879
    3. ' subset' → logprob: -3.705704689025879
    4. 'mask' → logprob: -4.580704689025879
    5. 'live' → logprob: -5.080704689025879
    6. ' s' → logprob: -7.955704689025879
    7. ' live' → logprob: -9.080704689025879
    8. ' mask' → logprob: -9.580704689025879
    9. 'combo' → logprob: -10.205704689025879
    10. 'size' → logprob: -10.955704689025879

Token 1237: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.008658776991069317
    2. 'in' → logprob: -4.7586588859558105
    3. 'subset' → logprob: -11.133658409118652
    4. ' ' → logprob: -12.258658409118652
    5. '(sub' → logprob: -12.383658409118652
    6. '   ' → logprob: -12.883658409118652
    7. 'int' → logprob: -13.133658409118652
    8. 'from' → logprob: -13.258658409118652
    9. '_in' → logprob: -13.758658409118652
    10. '(' → logprob: -13.758658409118652

Token 1238: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.00033546582562848926
    2. ' range' → logprob: -8.000335693359375
    3. '(range' → logprob: -18.250335693359375
    4. '0' → logprob: -19.625335693359375
    5. '	range' → logprob: -21.000335693359375
    6. '   ' → logprob: -21.000335693359375
    7. '(' → logprob: -21.875335693359375
    8. ' ' → logprob: -22.125335693359375
    9. '1' → logprob: -23.125335693359375
    10. '
' → logprob: -23.250335693359375

Token 1239: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.6979777216911316
    2. '1' → logprob: -0.6979777216911316
    3. '0' → logprob: -5.447977542877197
    4. ' (' → logprob: -8.072978019714355
    5. ' ' → logprob: -9.572978019714355
    6. '   ' → logprob: -10.447978019714355
    7. 'self' → logprob: -10.572978019714355
    8. '       ' → logprob: -10.697978019714355
    9. '(self' → logprob: -10.947978019714355
    10. ',' → logprob: -11.197978019714355

Token 1240: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00014025058771949261
    2. '(' → logprob: -9.125140190124512
    3. '0' → logprob: -10.375140190124512
    4. '2' → logprob: -17.000141143798828
    5. ' ' → logprob: -17.375141143798828
    6. '   ' → logprob: -17.500141143798828
    7. '
' → logprob: -17.625141143798828
    8. ' (' → logprob: -18.750141143798828
    9. '```' → logprob: -19.000141143798828
    10. '3' → logprob: -19.625141143798828

Token 1241: ' <<' (ID: 2256)
  Prédit: '<<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<<' → logprob: -0.2159135639667511
    2. ',' → logprob: -1.8409135341644287
    3. ' <<' → logprob: -3.3409135341644287
    4. '<<(' → logprob: -10.090913772583008
    5. ' ,' → logprob: -10.215913772583008
    6. '<<<' → logprob: -11.715913772583008
    7. '       ' → logprob: -11.715913772583008
    8. '1' → logprob: -12.090913772583008
    9. '   ' → logprob: -12.215913772583008
    10. '>>' → logprob: -12.465913772583008

Token 1242: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.00035369666875340044
    2. '15' → logprob: -8.000353813171387
    3. '(self' → logprob: -11.250353813171387
    4. ' self' → logprob: -12.625353813171387
    5. '[self' → logprob: -13.875353813171387
    6. '0' → logprob: -14.875353813171387
    7. '           ' → logprob: -15.500353813171387
    8. '```' → logprob: -16.25035285949707
    9. '       ' → logprob: -16.37535285949707
    10. '16' → logprob: -16.62535285949707

Token 1243: '.p' (ID: 1201)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.01662156544625759
    2. 'p' → logprob: -4.1416215896606445
    3. '15' → logprob: -8.516621589660645
    4. ' self' → logprob: -8.891621589660645
    5. 'region' → logprob: -9.141621589660645
    6. '.p' → logprob: -9.891621589660645
    7. '(self' → logprob: -10.391621589660645
    8. '       ' → logprob: -10.641621589660645
    9. '   ' → logprob: -12.141621589660645
    10. '           ' → logprob: -12.266621589660645

Token 1244: '.region' (ID: 88305)
  Prédit: 'region'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'region' → logprob: -0.11752776056528091
    2. '.region' → logprob: -2.242527723312378
    3. '15' → logprob: -5.742527961730957
    4. '       ' → logprob: -8.117527961730957
    5. ')' → logprob: -8.367527961730957
    6. '   ' → logprob: -8.367527961730957
    7. '(region' → logprob: -9.117527961730957
    8. ' region' → logprob: -9.117527961730957
    9. '           ' → logprob: -9.242527961730957
    10. '_region' → logprob: -9.242527961730957

Token 1245: '_count' (ID: 7536)
  Prédit: '_count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_count' → logprob: -7.398067828034982e-05
    2. 'count' → logprob: -9.62507438659668
    3. '   ' → logprob: -13.00007438659668
    4. '_COUNT' → logprob: -13.75007438659668
    5. '_cnt' → logprob: -14.25007438659668
    6. ')' → logprob: -14.25007438659668
    7. '15' → logprob: -14.50007438659668
    8. 'Count' → logprob: -14.62507438659668
    9. 'COUNT' → logprob: -15.12507438659668
    10. '       ' → logprob: -15.12507438659668

Token 1246: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.04154745861887932
    2. ':
' → logprob: -3.7915475368499756
    3. '           ' → logprob: -5.1665472984313965
    4. '       ' → logprob: -5.2915472984313965
    5. ':' → logprob: -5.6665472984313965
    6. '):' → logprob: -5.6665472984313965
    7. '():
' → logprob: -8.166547775268555
    8. '   ' → logprob: -10.041547775268555
    9. ''):
' → logprob: -10.541547775268555
    10. '```' → logprob: -10.666547775268555

Token 1247: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0002193908003391698
    2. ' if' → logprob: -9.625219345092773
    3. 'if' → logprob: -9.875219345092773
    4. '   ' → logprob: -10.875219345092773
    5. '       ' → logprob: -11.250219345092773
    6. ':
' → logprob: -11.500219345092773
    7. '<|end|>' → logprob: -11.500219345092773
    8. '
' → logprob: -11.750219345092773
    9. '            
' → logprob: -12.000219345092773
    10. '               ' → logprob: -12.000219345092773

Token 1248: ' #' (ID: 1069)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.8012412786483765
    2. '           ' → logprob: -1.1762412786483765
    3. ' if' → logprob: -1.4262412786483765
    4. '               ' → logprob: -6.926241397857666
    5. 'count' → logprob: -7.176241397857666
    6. '   ' → logprob: -7.301241397857666
    7. '       ' → logprob: -9.676240921020508
    8. ' count' → logprob: -10.426240921020508
    9. 'num' → logprob: -11.176240921020508
    10. '
' → logprob: -11.301240921020508

Token 1249: ' check' (ID: 2371)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.26397931575775146
    2. '           ' → logprob: -1.5139793157577515
    3. ' if' → logprob: -4.513979434967041
    4. 'count' → logprob: -7.513979434967041
    5. '   ' → logprob: -8.138978958129883
    6. 'valid' → logprob: -9.138978958129883
    7. '               ' → logprob: -10.888978958129883
    8. 'num' → logprob: -11.138978958129883
    9. '#' → logprob: -11.263978958129883
    10. '       ' → logprob: -11.763978958129883

Token 1250: ' connected' (ID: 12079)
  Prédit: 'subset'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'subset' → logprob: -0.017676424235105515
    2. ' subset' → logprob: -4.39267635345459
    3. '           ' → logprob: -6.39267635345459
    4. 'self' → logprob: -6.39267635345459
    5. 'if' → logprob: -7.26767635345459
    6. 'valid' → logprob: -8.64267635345459
    7. '   ' → logprob: -8.76767635345459
    8. ' self' → logprob: -8.89267635345459
    9. 'not' → logprob: -9.01767635345459
    10. '       ' → logprob: -9.01767635345459

Token 1251: 'ness' (ID: 2816)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.2813693583011627
    2. 'if' → logprob: -1.5313693284988403
    3. '       ' → logprob: -4.906369209289551
    4. ' if' → logprob: -4.906369209289551
    5. 'subset' → logprob: -5.156369209289551
    6. '
' → logprob: -5.656369209289551
    7. '_subset' → logprob: -6.531369209289551
    8. '               ' → logprob: -7.281369209289551
    9. 'or' → logprob: -7.656369209289551
    10. ' or' → logprob: -7.781369209289551

Token 1252: ' if' (ID: 538)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.003261846024543047
    2. ' if' → logprob: -6.503262042999268
    3. 'if' → logprob: -6.503262042999268
    4. '   ' → logprob: -9.75326156616211
    5. '               ' → logprob: -10.12826156616211
    6. ',' → logprob: -10.12826156616211
    7. '       ' → logprob: -10.50326156616211
    8. ':' → logprob: -10.62826156616211
    9. ':
' → logprob: -11.00326156616211
    10. ' or' → logprob: -11.12826156616211

Token 1253: ' size' (ID: 2349)
  Prédit: 'subset'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'subset' → logprob: -0.1301364153623581
    2. 'bin' → logprob: -2.130136489868164
    3. ' subset' → logprob: -6.130136489868164
    4. '   ' → logprob: -7.505136489868164
    5. ' bin' → logprob: -8.380136489868164
    6. '(bin' → logprob: -9.005136489868164
    7. '           ' → logprob: -10.130136489868164
    8. 'bit' → logprob: -11.630136489868164
    9. ' ' → logprob: -11.755136489868164
    10. '(' → logprob: -11.755136489868164

Token 1254: ' >' (ID: 1424)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.14660236239433289
    2. ' >' → logprob: -2.0216023921966553
    3. 'subset' → logprob: -6.271602153778076
    4. '(sub' → logprob: -7.021602153778076
    5. '>=' → logprob: -8.646602630615234
    6. '   ' → logprob: -8.646602630615234
    7. ' <=' → logprob: -9.146602630615234
    8. ' >=' → logprob: -9.146602630615234
    9. '<=' → logprob: -9.646602630615234
    10. ' subset' → logprob: -9.646602630615234

Token 1255: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.023293538717553e-05
    2. ' ' → logprob: -10.625030517578125
    3. '>' → logprob: -12.875030517578125
    4. '   ' → logprob: -13.500030517578125
    5. '=' → logprob: -14.000030517578125
    6. '           ' → logprob: -14.625030517578125
    7. '               ' → logprob: -16.125030517578125
    8. '```' → logprob: -16.250030517578125
    9. '2' → logprob: -16.375030517578125
    10. '       ' → logprob: -16.625030517578125

Token 1256: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.0206720617134124e-05
    2. '>' → logprob: -11.75001049041748
    3. '=' → logprob: -14.50001049041748
    4. '2' → logprob: -14.62501049041748
    5. '
' → logprob: -14.75001049041748
    6. ' ' → logprob: -14.87501049041748
    7. '```' → logprob: -16.687509536743164
    8. '   ' → logprob: -16.812509536743164
    9. '۱' → logprob: -17.312509536743164
    10. '' → logprob: -17.375009536743164

Token 1257: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0007082634256221354
    2. 'if' → logprob: -7.625708103179932
    3. ' if' → logprob: -8.87570858001709
    4. '               ' → logprob: -9.87570858001709
    5. '   ' → logprob: -11.50070858001709
    6. '       ' → logprob: -11.87570858001709
    7. 'and' → logprob: -12.62570858001709
    8. '```' → logprob: -12.75070858001709
    9. ' and' → logprob: -13.00070858001709
    10. ',' → logprob: -13.87570858001709

Token 1258: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0037390298675745726
    2. '               ' → logprob: -6.753738880157471
    3. '   ' → logprob: -7.128738880157471
    4. ' if' → logprob: -7.253738880157471
    5. 'if' → logprob: -8.253739356994629
    6. ' and' → logprob: -8.378739356994629
    7. ':' → logprob: -8.503739356994629
    8. '       ' → logprob: -8.628739356994629
    9. ' ' → logprob: -10.003739356994629
    10. ':
' → logprob: -10.378739356994629

Token 1259: ' if' (ID: 538)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.37781935930252075
    2. ' if' → logprob: -1.627819299697876
    3. 'if' (adapté à ' if') → logprob: -2.252819299697876
    4. '   ' → logprob: -4.877819538116455
    5. 'count' → logprob: -5.752819538116455
    6. 'size' → logprob: -6.877819538116455
    7. ' size' → logprob: -7.502819538116455
    8. '       ' → logprob: -7.877819538116455
    9. ' count' → logprob: -8.877819061279297
    10. 'num' → logprob: -9.127819061279297

Token 1260: ' bin' (ID: 6958)
  Prédit: 'bin'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bin' → logprob: -0.14746113121509552
    2. '(bin' → logprob: -2.647461175918579
    3. ' bin' → logprob: -3.397461175918579
    4. 'subset' → logprob: -3.647461175918579
    5. '           ' → logprob: -5.3974609375
    6. ' subset' → logprob: -6.6474609375
    7. ' (' → logprob: -8.1474609375
    8. '   ' → logprob: -8.6474609375
    9. '               ' → logprob: -9.0224609375
    10. 'not' → logprob: -10.0224609375

Token 1261: '(sub' (ID: 19764)
  Prédit: '(sub'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(sub' → logprob: -4.930552313453518e-05
    2. 'subset' → logprob: -10.500049591064453
    3. '(' → logprob: -11.125049591064453
    4. '(
' → logprob: -12.250049591064453
    5. '(substr' → logprob: -14.125049591064453
    6. '[' → logprob: -14.250049591064453
    7. '_subset' → logprob: -16.250049591064453
    8. '(set' → logprob: -16.250049591064453
    9. '```' → logprob: -16.250049591064453
    10. ' subset' → logprob: -16.375049591064453

Token 1262: 'set' (ID: 977)
  Prédit: 'set'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'set' → logprob: -0.11722735315561295
    2. '_set' → logprob: -2.86722731590271
    3. 'subset' → logprob: -3.36722731590271
    4. '_subset' → logprob: -5.367227554321289
    5. '[' → logprob: -5.492227554321289
    6. '(sub' → logprob: -5.992227554321289
    7. 'et' → logprob: -6.117227554321289
    8. 'erset' → logprob: -6.242227554321289
    9. 'Set' → logprob: -6.242227554321289
    10. ' subset' → logprob: -7.617227554321289

Token 1263: ').' (ID: 741)
  Prédit: '(sub'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(sub' → logprob: -0.02843407355248928
    2. ').' → logprob: -4.0284342765808105
    3. ')' → logprob: -5.5284342765808105
    4. '>' → logprob: -6.1534342765808105
    5. 'subset' → logprob: -6.9034342765808105
    6. '.count' → logprob: -7.1534342765808105
    7. '   ' → logprob: -7.6534342765808105
    8. 'count' → logprob: -8.403433799743652
    9. '(count' → logprob: -8.403433799743652
    10. '(' → logprob: -8.653433799743652

Token 1264: 'count' (ID: 5420)
  Prédit: 'count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' → logprob: -9.849109119386412e-06
    2. ' count' → logprob: -11.750009536743164
    3. '.count' → logprob: -13.625009536743164
    4. '```' → logprob: -14.875009536743164
    5. '   ' → logprob: -15.500009536743164
    6. '_count' → logprob: -16.875009536743164
    7. '>' → logprob: -17.250009536743164
    8. ' ' → logprob: -17.500009536743164
    9. '(count' → logprob: -17.500009536743164
    10. '	count' → logprob: -17.625009536743164

Token 1265: '('' (ID: 706)
  Prédit: '(''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('' → logprob: -0.0067266179248690605
    2. '(' → logprob: -5.1317267417907715
    3. '(sub' → logprob: -8.131726264953613
    4. '(
' → logprob: -8.506726264953613
    5. '>' → logprob: -9.881726264953613
    6. ''' → logprob: -10.006726264953613
    7. '   ' → logprob: -10.881726264953613
    8. ' ' → logprob: -11.006726264953613
    9. '("' → logprob: -11.006726264953613
    10. ')' → logprob: -11.006726264953613

Token 1266: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.4291571080684662
    2. '('' → logprob: -1.1791571378707886
    3. '(' → logprob: -3.679157018661499
    4. ''' → logprob: -4.554157257080078
    5. '>' → logprob: -5.679157257080078
    6. ')' → logprob: -6.929157257080078
    7. ''>' → logprob: -7.179157257080078
    8. '')' → logprob: -8.554157257080078
    9. '()' → logprob: -9.554157257080078
    10. '(
' → logprob: -9.804157257080078

Token 1267: '')' (ID: 1542)
  Prédit: ' <='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' <=' → logprob: -0.8856289386749268
    2. ' >' → logprob: -1.5106289386749268
    3. ')' → logprob: -1.6356289386749268
    4. '>' → logprob: -2.2606289386749268
    5. '<=' → logprob: -2.8856289386749268
    6. '()' → logprob: -5.385628700256348
    7. ' <' → logprob: -5.635628700256348
    8. ' )' → logprob: -6.760628700256348
    9. '<' → logprob: -7.510628700256348
    10. '()>' → logprob: -7.635628700256348

Token 1268: ' <=' (ID: 5017)
  Prédit: '<='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<=' → logprob: -0.5452158451080322
    2. ' <=' → logprob: -0.9202158451080322
    3. '>' → logprob: -4.170215606689453
    4. ' >' → logprob: -5.295215606689453
    5. '<' → logprob: -7.170215606689453
    6. ' <' → logprob: -8.420215606689453
    7. '>=' → logprob: -8.670215606689453
    8. ' >=' → logprob: -9.420215606689453
    9. ' ' → logprob: -9.545215606689453
    10. '   ' → logprob: -10.545215606689453

Token 1269: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.000169332604855299
    2. ' ' → logprob: -8.75016975402832
    3. '2' → logprob: -11.50016975402832
    4. '```' → logprob: -15.87516975402832
    5. '   ' → logprob: -15.87516975402832
    6. ')' → logprob: -16.56266975402832
    7. '>' → logprob: -16.93766975402832
    8. '
' → logprob: -17.06266975402832
    9. '  ' → logprob: -17.18766975402832
    10. '' → logprob: -17.31266975402832

Token 1270: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.0445127372804563e-05
    2. '2' → logprob: -11.75001049041748
    3. ' ' → logprob: -13.25001049041748
    4. '```' → logprob: -15.56251049041748
    5. '>' → logprob: -15.93751049041748
    6. '۱' → logprob: -16.250009536743164
    7. '   ' → logprob: -16.437509536743164
    8. '
' → logprob: -16.750009536743164
    9. '' → logprob: -17.125009536743164
    10. '3' → logprob: -17.312509536743164

Token 1271: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.22509713470935822
    2. ' or' → logprob: -1.7250971794128418
    3. '           ' → logprob: -4.600097179412842
    4. ':
' → logprob: -4.850097179412842
    5. '               ' → logprob: -5.600097179412842
    6. ' continue' → logprob: -6.850097179412842
    7. 'continue' → logprob: -7.600097179412842
    8. ' continues' → logprob: -10.100096702575684
    9. 'or' → logprob: -10.350096702575684
    10. ',' → logprob: -10.475096702575684

Token 1272: '               ' (ID: 506)
  Prédit: ' or'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' or' → logprob: -0.3360116481781006
    2. '               ' → logprob: -1.4610116481781006
    3. ':' → logprob: -3.8360116481781006
    4. '           ' → logprob: -4.33601188659668
    5. ' continue' → logprob: -4.58601188659668
    6. ':
' → logprob: -5.21101188659668
    7. 'continue' → logprob: -6.33601188659668
    8. ' continues' → logprob: -7.21101188659668
    9. 'or' → logprob: -8.08601188659668
    10. '_continue' → logprob: -9.71101188659668

Token 1273: ' valid' (ID: 4529)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.711483359336853
    2. '               ' → logprob: -1.211483359336853
    3. 'valid' (adapté à ' valid') → logprob: -1.836483359336853
    4. ' valid' → logprob: -2.9614834785461426
    5. '   ' → logprob: -9.711483001708984
    6. '(valid' → logprob: -9.836483001708984
    7. '	valid' → logprob: -10.086483001708984
    8. '
' → logprob: -11.336483001708984
    9. 'continue' → logprob: -11.461483001708984
    10. '                   ' → logprob: -12.086483001708984

Token 1274: '_sets' (ID: 56707)
  Prédit: '_sets'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sets' → logprob: -0.00014776040916331112
    2. '.append' → logprob: -9.000147819519043
    3. '_set' → logprob: -11.500147819519043
    4. 'sets' → logprob: -12.375147819519043
    5. 'Sets' → logprob: -12.750147819519043
    6. '.' → logprob: -13.500147819519043
    7. '_' → logprob: -13.750147819519043
    8. '```' → logprob: -14.000147819519043
    9. 'append' → logprob: -14.375147819519043
    10. '._' → logprob: -14.750147819519043

Token 1275: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.00017159747949335724
    2. '.' → logprob: -8.750171661376953
    3. '           ' → logprob: -11.500171661376953
    4. '               ' → logprob: -13.750171661376953
    5. '.add' → logprob: -14.125171661376953
    6. '.app' → logprob: -14.625171661376953
    7. ' .' → logprob: -15.000171661376953
    8. '.extend' → logprob: -16.000171661376953
    9. 'append' → logprob: -16.125171661376953
    10. '.Append' → logprob: -16.375171661376953

Token 1276: '(sub' (ID: 19764)
  Prédit: '(sub'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(sub' → logprob: -2.8802491215174086e-05
    2. '(' → logprob: -10.750028610229492
    3. 'subset' → logprob: -11.875028610229492
    4. '(
' → logprob: -15.625028610229492
    5. 'sub' → logprob: -16.000028610229492
    6. '(substr' → logprob: -16.875028610229492
    7. ' subset' → logprob: -18.375028610229492
    8. '_subset' → logprob: -19.000028610229492
    9. '	sub' → logprob: -19.250028610229492
    10. '(s' → logprob: -19.500028610229492

Token 1277: 'set' (ID: 977)
  Prédit: 'set'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'set' → logprob: -3.881560041918419e-05
    2. 'erset' → logprob: -10.750039100646973
    3. ')set' → logprob: -12.250039100646973
    4. 'et' → logprob: -12.500039100646973
    5. '(set' → logprob: -12.625039100646973
    6. 'uset' → logprob: -13.625039100646973
    7. 'subset' → logprob: -13.750039100646973
    8. '```' → logprob: -14.500039100646973
    9. ')' → logprob: -14.625039100646973
    10. '_set' → logprob: -14.625039100646973

Token 1278: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.002342588733881712
    2. '           ' → logprob: -6.377342700958252
    3. ')
' → logprob: -7.752342700958252
    4. '               ' → logprob: -8.627342224121094
    5. '       ' → logprob: -11.252342224121094
    6. '                   ' → logprob: -12.752342224121094
    7. '   ' → logprob: -12.877342224121094
    8. '):
' → logprob: -13.002342224121094
    9. ' )' → logprob: -13.502342224121094
    10. '),' → logprob: -13.877342224121094

Token 1279: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00287715345621109
    2. '       ' → logprob: -6.127877235412598
    3. 'else' → logprob: -7.502877235412598
    4. 'elif' → logprob: -9.752877235412598
    5. '```' → logprob: -10.377877235412598
    6. 'continue' → logprob: -10.877877235412598
    7. '               ' → logprob: -11.002877235412598
    8. ' else' → logprob: -11.502877235412598
    9. ' elif' → logprob: -13.252877235412598
    10. '	       ' → logprob: -14.252877235412598

Token 1280: ' else' (ID: 1203)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.5897562503814697
    2. 'else' (adapté à ' else') → logprob: -0.8397562503814697
    3. 'elif' → logprob: -4.464756011962891
    4. '       ' → logprob: -6.839756011962891
    5. ' else' → logprob: -6.839756011962891
    6. ' elif' → logprob: -9.58975601196289
    7. '               ' → logprob: -13.71475601196289
    8. '_else' → logprob: -14.21475601196289
    9. '```' → logprob: -14.33975601196289
    10. '   ' → logprob: -14.33975601196289

Token 1281: ':
' (ID: 734)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.29549676179885864
    2. '           ' → logprob: -1.9204967021942139
    3. ':
' → logprob: -2.420496702194214
    4. ':' → logprob: -4.420496940612793
    5. ' if' → logprob: -5.045496940612793
    6. 'if' → logprob: -6.545496940612793
    7. '                   ' → logprob: -9.295496940612793
    8. ',' → logprob: -9.545496940612793
    9. '                       ' → logprob: -9.920496940612793
    10. '   ' → logprob: -10.045496940612793

Token 1282: '               ' (ID: 506)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.3500749468803406
    2. '               ' → logprob: -1.2250750064849854
    3. 'if' → logprob: -6.725074768066406
    4. ' if' → logprob: -8.100074768066406
    5. '```' → logprob: -9.850074768066406
    6. '                   ' → logprob: -10.350074768066406
    7. '       ' → logprob: -11.225074768066406
    8. '   ' → logprob: -11.725074768066406
    9. ' ' → logprob: -12.850074768066406
    10. '	       ' → logprob: -12.850074768066406

Token 1283: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.10084983706474304
    2. ' if' → logprob: -2.3508498668670654
    3. '               ' → logprob: -7.475849628448486
    4. '                   ' → logprob: -9.600850105285645
    5. '           ' → logprob: -12.600850105285645
    6. '   ' → logprob: -12.725850105285645
    7. ' ' → logprob: -14.225850105285645
    8. '       ' → logprob: -14.725850105285645
    9. '	if' → logprob: -14.850850105285645
    10. '                       ' → logprob: -15.725850105285645

Token 1284: ' is' (ID: 382)
  Prédit: 'is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'is' → logprob: -0.6937659382820129
    2. ' is' → logprob: -0.6937659382820129
    3. 'self' → logprob: -7.818766117095947
    4. ' self' → logprob: -8.443765640258789
    5. '               ' → logprob: -14.943765640258789
    6. '(is' → logprob: -15.193765640258789
    7. '                   ' → logprob: -15.193765640258789
    8. ')is' → logprob: -15.943765640258789
    9. '   ' → logprob: -16.56876564025879
    10. '           ' → logprob: -17.06876564025879

Token 1285: '_connected' (ID: 112270)
  Prédit: '_connected'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_connected' → logprob: -0.00030197695014066994
    2. 'connected' → logprob: -8.1253023147583
    3. '_CONNECTED' → logprob: -13.1253023147583
    4. 'subset' → logprob: -13.3753023147583
    5. 'Connected' → logprob: -13.8753023147583
    6. 'CONNECTED' → logprob: -14.0003023147583
    7. '_subset' → logprob: -15.0003023147583
    8. '_con' → logprob: -16.625301361083984
    9. ' connected' → logprob: -16.625301361083984
    10. '-connected' → logprob: -17.000301361083984

Token 1286: '_subset' (ID: 162934)
  Prédit: '_subset'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_subset' → logprob: -0.0011545089073479176
    2. 'subset' → logprob: -7.00115442276001
    3. '(sub' → logprob: -8.376154899597168
    4. '_sub' → logprob: -12.376154899597168
    5. '(s' → logprob: -12.501154899597168
    6. '_set' → logprob: -13.376154899597168
    7. '(_' → logprob: -13.876154899597168
    8. ' subset' → logprob: -14.001154899597168
    9. '_connected' → logprob: -14.626154899597168
    10. '_(' → logprob: -15.001154899597168

Token 1287: '(sub' (ID: 19764)
  Prédit: '(sub'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(sub' → logprob: -1.4498052223643754e-05
    2. 'subset' → logprob: -11.250014305114746
    3. ')' → logprob: -14.375014305114746
    4. '(substr' → logprob: -15.375014305114746
    5. '(' → logprob: -15.375014305114746
    6. ' (' → logprob: -15.875014305114746
    7. '(s' → logprob: -16.000015258789062
    8. '{sub' → logprob: -16.750015258789062
    9. ' subset' → logprob: -16.750015258789062
    10. '=sub' → logprob: -16.875015258789062

Token 1288: 'set' (ID: 977)
  Prédit: 'set'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'set' → logprob: -7.982165698194876e-05
    2. 'subset' → logprob: -10.500080108642578
    3. 'uset' → logprob: -10.875080108642578
    4. 'erset' → logprob: -11.125080108642578
    5. '(set' → logprob: -11.125080108642578
    6. 'et' → logprob: -13.250080108642578
    7. ' subset' → logprob: -14.000080108642578
    8. 'aset' → logprob: -14.875080108642578
    9. ')set' → logprob: -14.875080108642578
    10. '_subset' → logprob: -16.125080108642578

Token 1289: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.021428262814879417
    2. '):' → logprob: -3.896428346633911
    3. '               ' → logprob: -7.396428108215332
    4. ')' → logprob: -8.771428108215332
    5. '                   ' → logprob: -10.146428108215332
    6. '):
' → logprob: -10.396428108215332
    7. '           ' → logprob: -10.396428108215332
    8. ':
' → logprob: -12.271428108215332
    9. '):

' → logprob: -13.271428108215332
    10. ')):
' → logprob: -13.271428108215332

Token 1290: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.07669486105442047
    2. '               ' → logprob: -3.076694965362549
    3. 'valid' → logprob: -4.076694965362549
    4. '                       ' → logprob: -4.951694965362549
    5. ' valid' → logprob: -5.701694965362549
    6. '(valid' → logprob: -8.32669448852539
    7. '       ' → logprob: -10.45169448852539
    8. '	valid' → logprob: -10.95169448852539
    9. '```' → logprob: -11.07669448852539
    10. '           ' → logprob: -11.20169448852539

Token 1291: ' valid' (ID: 4529)
  Prédit: 'valid'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'valid' (adapté à ' valid') → logprob: -0.03800579905509949
    2. ' valid' → logprob: -3.788005828857422
    3. '                   ' → logprob: -4.288005828857422
    4. '                       ' → logprob: -7.038005828857422
    5. '               ' → logprob: -10.413005828857422
    6. '   ' → logprob: -12.538005828857422
    7. '       ' → logprob: -12.538005828857422
    8. '(valid' → logprob: -13.413005828857422
    9. '	valid' → logprob: -13.538005828857422
    10. '           ' → logprob: -13.663005828857422

Token 1292: '_sets' (ID: 56707)
  Prédit: '_sets'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sets' → logprob: -1.2664456789934775e-06
    2. '_set' → logprob: -14.125000953674316
    3. '.append' → logprob: -16.125001907348633
    4. 'Sets' → logprob: -16.250001907348633
    5. '```' → logprob: -16.875001907348633
    6. 'sets' → logprob: -17.125001907348633
    7. 's' → logprob: -17.500001907348633
    8. '           ' → logprob: -17.625001907348633
    9. '_lists' → logprob: -17.750001907348633
    10. '_masks' → logprob: -18.250001907348633

Token 1293: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -6.2729995988775045e-06
    2. '                   ' → logprob: -12.875006675720215
    3. '.' → logprob: -13.375006675720215
    4. '                       ' → logprob: -14.750006675720215
    5. 'append' → logprob: -14.750006675720215
    6. '.add' → logprob: -14.875006675720215
    7. '_append' → logprob: -15.250006675720215
    8. '.extend' → logprob: -15.500006675720215
    9. '.setdefault' → logprob: -15.625006675720215
    10. '.Append' → logprob: -15.750006675720215

Token 1294: '(sub' (ID: 19764)
  Prédit: '(sub'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(sub' → logprob: -5.512236498361744e-07
    2. 'subset' → logprob: -15.375000953674316
    3. '(' → logprob: -15.750000953674316
    4. '(
' → logprob: -16.625
    5. '(substr' → logprob: -17.125
    6. '(set' → logprob: -18.75
    7. '=sub' → logprob: -19.0
    8. ' (' → logprob: -19.125
    9. '(s' → logprob: -19.75
    10. '((' → logprob: -20.125

Token 1295: 'set' (ID: 977)
  Prédit: 'set'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'set' → logprob: -2.558399319241289e-05
    2. 'uset' → logprob: -10.750025749206543
    3. 'et' → logprob: -13.500025749206543
    4. 'est' → logprob: -13.875025749206543
    5. 'erset' → logprob: -14.250025749206543
    6. 'subset' → logprob: -14.625025749206543
    7. '```' → logprob: -15.875025749206543
    8. 'aset' → logprob: -16.375024795532227
    9. '_set' → logprob: -16.375024795532227
    10. '{' → logprob: -16.500024795532227

Token 1296: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00030436101951636374
    2. ')
' → logprob: -8.125304222106934
    3. '       ' → logprob: -12.000304222106934
    4. ')return' → logprob: -14.375304222106934
    5. '           ' → logprob: -14.500304222106934
    6. '               ' → logprob: -14.625304222106934
    7. '())' → logprob: -15.750304222106934
    8. '))' → logprob: -15.875304222106934
    9. ' )' → logprob: -16.50030517578125
    10. ')

' → logprob: -16.62530517578125

Token 1297: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0031562112271785736
    2. '
' → logprob: -5.8781561851501465
    3. 'return' → logprob: -8.253156661987305
    4. '
' → logprob: -10.503156661987305
    5. '        
' → logprob: -11.003156661987305
    6. '<|end|>' → logprob: -11.378156661987305
    7. '               ' → logprob: -11.503156661987305
    8. ' return' → logprob: -12.003156661987305
    9. '```' → logprob: -12.753156661987305
    10. '           ' → logprob: -12.753156661987305

Token 1298: ' return' (ID: 622)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0022412508260458708
    2. 'return' (adapté à ' return') → logprob: -6.627241134643555
    3. '
' → logprob: -7.252241134643555
    4. '   ' → logprob: -9.127241134643555
    5. ' return' → logprob: -9.627241134643555
    6. '           ' → logprob: -11.377241134643555
    7. '	return' → logprob: -12.252241134643555
    8. '        
' → logprob: -12.377241134643555
    9. '<|end|>' → logprob: -12.377241134643555
    10. '```' → logprob: -13.002241134643555

Token 1299: ' valid' (ID: 4529)
  Prédit: 'valid'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'valid' → logprob: -0.0002613358374219388
    2. ' valid' → logprob: -8.250261306762695
    3. '	valid' → logprob: -21.625261306762695
    4. '(valid' → logprob: -22.625261306762695
    5. '_valid' → logprob: -23.875261306762695
    6. '   ' → logprob: -23.875261306762695
    7. '.valid' → logprob: -24.375261306762695
    8. 'Valid' → logprob: -25.500261306762695
    9. '       ' → logprob: -27.125261306762695
    10. '           ' → logprob: -28.000261306762695

Token 1300: '_sets' (ID: 56707)
  Prédit: '_sets'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sets' → logprob: -0.0008615575497969985
    2. '_valid' → logprob: -7.125861644744873
    3. '_set' → logprob: -10.125861167907715
    4. 's' → logprob: -11.625861167907715
    5. '_' → logprob: -12.625861167907715
    6. 'valid' → logprob: -13.375861167907715
    7. '_lists' → logprob: -14.250861167907715
    8. '```' → logprob: -14.750861167907715
    9. ')_' → logprob: -14.875861167907715
    10. '}_' → logprob: -15.500861167907715

Token 1301: '


' (ID: 2499)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1302: 'class' (ID: 1444)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1303: ' Input' (ID: 10090)
  Prédit: 'Live'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Live' → logprob: -0.28561079502105713
    2. ' Live' → logprob: -2.1606106758117676
    3. 'Scheduler' → logprob: -3.5356106758117676
    4. 'Schedule' → logprob: -3.6606106758117676
    5. 'Solution' → logprob: -3.6606106758117676
    6. 'Problem' → logprob: -4.285610675811768
    7. 'Test' → logprob: -4.535610675811768
    8. 'Advanced' → logprob: -5.160610675811768
    9. 'Code' → logprob: -6.035610675811768
    10. 'Solver' → logprob: -6.535610675811768

Token 1304: 'Parser' (ID: 9231)
  Prédit: 'Parser'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Parser' → logprob: -0.3840270936489105
    2. 'Reader' → logprob: -1.259027123451233
    3. 'Handler' → logprob: -4.509027004241943
    4. 'Data' → logprob: -5.134027004241943
    5. 'Output' → logprob: -5.634027004241943
    6. 'Processor' → logprob: -5.759027004241943
    7. ':' → logprob: -5.884027004241943
    8. 'Tokenizer' → logprob: -6.759027004241943
    9. 'Manager' → logprob: -6.884027004241943
    10. 'Generator' → logprob: -7.009027004241943

Token 1305: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.001716827624477446
    2. ':
' → logprob: -6.376716613769531
    3. '(' → logprob: -12.376716613769531
    4. ':def' → logprob: -12.376716613769531
    5. '():' → logprob: -13.251716613769531
    6. ':

' → logprob: -13.376716613769531
    7. '<|end|>' → logprob: -13.751716613769531
    8. '):' → logprob: -14.251716613769531
    9. '```' → logprob: -15.126716613769531
    10. '{' → logprob: -15.626716613769531

Token 1306: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00048083928413689137
    2. 'def' → logprob: -8.250480651855469
    3. ' def' → logprob: -8.625480651855469
    4. '```' → logprob: -11.125480651855469
    5. '@dat' → logprob: -12.000480651855469
    6. '@' → logprob: -12.625480651855469
    7. 'staticmethod' → logprob: -12.750480651855469
    8. '	def' → logprob: -12.750480651855469
    9. '    ' → logprob: -12.875480651855469
    10. '  ' → logprob: -13.875480651855469

Token 1307: ' def' (ID: 1056)
  Prédit: '@'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '@' → logprob: -0.07901415973901749
    2. 'def' (adapté à ' def') → logprob: -3.0790140628814697
    3. '   ' → logprob: -3.5790140628814697
    4. ' @' → logprob: -6.579014301300049
    5. ' def' → logprob: -7.329014301300049
    6. '@dat' → logprob: -11.32901382446289
    7. 'staticmethod' → logprob: -12.07901382446289
    8. '```' → logprob: -13.20401382446289
    9. 'class' → logprob: -16.07901382446289
    10. '	def' → logprob: -16.57901382446289

Token 1308: ' __' (ID: 2516)
  Prédit: 'staticmethod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'staticmethod' → logprob: -0.0003163969377055764
    2. 'def' → logprob: -8.625316619873047
    3. 'classmethod' → logprob: -9.000316619873047
    4. 'static' → logprob: -12.000316619873047
    5. 'init' → logprob: -12.125316619873047
    6. '_static' → logprob: -14.875316619873047
    7. ' def' → logprob: -15.000316619873047
    8. '```' → logprob: -15.250316619873047
    9. '__' → logprob: -15.500316619873047
    10. ' static' → logprob: -16.000316619873047

Token 1309: 'init' (ID: 3287)
  Prédit: 'staticmethod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'staticmethod' → logprob: -0.160374715924263
    2. 'init' → logprob: -1.9103747606277466
    3. 'classmethod' → logprob: -9.035374641418457
    4. 'next' → logprob: -11.410374641418457
    5. 'static' → logprob: -11.535374641418457
    6. 'dat' → logprob: -12.160374641418457
    7. 'iter' → logprob: -13.410374641418457
    8. 'call' → logprob: -13.785374641418457
    9. 'initi' → logprob: -14.035374641418457
    10. 'partial' → logprob: -15.035374641418457

Token 1310: '__(' (ID: 8241)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.35647761821746826
    2. '(' → logprob: -1.4814776182174683
    3. '<|end|>' → logprob: -3.606477737426758
    4. '()' → logprob: -4.356477737426758
    5. 'self' → logprob: -4.356477737426758
    6. '(
' → logprob: -5.106477737426758
    7. '   ' → logprob: -5.481477737426758
    8. ' (' → logprob: -5.731477737426758
    9. ')' → logprob: -6.606477737426758
    10. '<|end|>' → logprob: -7.231477737426758

Token 1311: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0005687602679245174
    2. ')' → logprob: -7.625568866729736
    3. '):
' → logprob: -10.125568389892578
    4. ' self' → logprob: -10.625568389892578
    5. '   ' → logprob: -12.500568389892578
    6. '):' → logprob: -13.000568389892578
    7. '(self' → logprob: -13.125568389892578
    8. '
' → logprob: -13.375568389892578
    9. '	self' → logprob: -14.000568389892578
    10. ').__' → logprob: -14.000568389892578

Token 1312: ',' (ID: 11)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.5822203159332275
    2. '):
' → logprob: -1.4572203159332275
    3. ',' → logprob: -1.7072203159332275
    4. '   ' → logprob: -4.207220077514648
    5. 'self' → logprob: -4.707220077514648
    6. ',input' → logprob: -6.332220077514648
    7. ')' → logprob: -8.457220077514648
    8. '():' → logprob: -8.707220077514648
    9. ',data' → logprob: -9.082220077514648
    10. ',file' → logprob: -9.457220077514648

Token 1313: ' lines' (ID: 8698)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.851524293422699
    2. 'lines' → logprob: -1.7265243530273438
    3. ')' → logprob: -1.8515243530273438
    4. '):' → logprob: -2.2265243530273438
    5. 'self' → logprob: -2.8515243530273438
    6. '):
' → logprob: -3.6015243530273438
    7. 'text' → logprob: -4.351524353027344
    8. 'raw' → logprob: -4.601524353027344
    9. ' lines' → logprob: -5.226524353027344
    10. 'data' → logprob: -5.226524353027344

Token 1314: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.21125952899456024
    2. '=' → logprob: -2.461259603500366
    3. '):
' → logprob: -3.086259603500366
    4. '):' → logprob: -3.211259603500366
    5. '=None' → logprob: -4.461259365081787
    6. '=[]' → logprob: -5.336259365081787
    7. '   ' → logprob: -6.461259365081787
    8. ')' → logprob: -8.336259841918945
    9. '       ' → logprob: -8.961259841918945
    10. ':
' → logprob: -8.961259841918945

Token 1315: ' Iterator' (ID: 41994)
  Prédit: 'List'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'List' → logprob: -0.36461254954338074
    2. 'list' → logprob: -1.8646125793457031
    3. ')' → logprob: -2.864612579345703
    4. '   ' → logprob: -3.614612579345703
    5. 'lines' → logprob: -3.614612579345703
    6. '):
' → logprob: -3.989612579345703
    7. 'self' → logprob: -4.989612579345703
    8. ' lines' → logprob: -5.614612579345703
    9. 'Iterable' → logprob: -6.114612579345703
    10. 'Iterator' → logprob: -6.489612579345703

Token 1316: '[str' (ID: 33439)
  Prédit: '):
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.8455327153205872
    2. '[str' → logprob: -0.8455327153205872
    3. '):' → logprob: -1.9705326557159424
    4. '[int' → logprob: -7.3455328941345215
    5. '[' → logprob: -7.7205328941345215
    6. ':' → logprob: -8.220532417297363
    7. '[list' → logprob: -8.595532417297363
    8. '   ' → logprob: -8.970532417297363
    9. '[List' → logprob: -8.970532417297363
    10. ':
' → logprob: -9.845532417297363

Token 1317: ']):
' (ID: 51989)
  Prédit: '):
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.08155260980129242
    2. '):' → logprob: -3.081552505493164
    3. ']):
' → logprob: -3.581552505493164
    4. ']):' → logprob: -6.081552505493164
    5. ')' → logprob: -6.831552505493164
    6. '   ' → logprob: -6.831552505493164
    7. '       ' → logprob: -10.206552505493164
    8. '])' → logprob: -10.706552505493164
    9. '[' → logprob: -11.206552505493164
    10. '):
' → logprob: -11.331552505493164

Token 1318: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.694525957107544
    2. '       ' → logprob: -0.694525957107544
    3. 'def' → logprob: -7.569525718688965
    4. 'self' → logprob: -8.569525718688965
    5. ':' → logprob: -8.819525718688965
    6. '    
' → logprob: -9.194525718688965
    7. '    ' → logprob: -9.694525718688965
    8. '        
' → logprob: -9.694525718688965
    9. '```' → logprob: -10.319525718688965
    10. ' def' → logprob: -10.444525718688965

Token 1319: ' self' (ID: 1051)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6987026333808899
    2. 'self' (adapté à ' self') → logprob: -0.6987026333808899
    3. '   ' → logprob: -5.323702812194824
    4. ' self' → logprob: -7.573702812194824
    5. 'def' → logprob: -9.698702812194824
    6. '	self' → logprob: -10.198702812194824
    7. '	' → logprob: -10.823702812194824
    8. 'lines' → logprob: -11.198702812194824
    9. ' ' → logprob: -12.073702812194824
    10. '    ' → logprob: -13.073702812194824

Token 1320: '.lines' (ID: 96601)
  Prédit: '.lines'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.lines' → logprob: -0.002997666597366333
    2. '._' → logprob: -6.627997875213623
    3. 'lines' → logprob: -7.752997875213623
    4. '	lines' → logprob: -8.127997398376465
    5. '_lines' → logprob: -8.252997398376465
    6. '.next' → logprob: -8.252997398376465
    7. '.' → logprob: -8.752997398376465
    8. '.line' → logprob: -9.502997398376465
    9. '.current' → logprob: -9.877997398376465
    10. '   ' → logprob: -10.002997398376465

Token 1321: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0055634984746575356
    2. ' =' → logprob: -5.880563735961914
    3. '=self' → logprob: -7.130563735961914
    4. '   ' → logprob: -7.255563735961914
    5. '       ' → logprob: -7.880563735961914
    6. ':' → logprob: -8.755563735961914
    7. '=None' → logprob: -8.755563735961914
    8. '.' → logprob: -9.630563735961914
    9. '.next' → logprob: -9.630563735961914
    10. '_next' → logprob: -9.755563735961914

Token 1322: ' lines' (ID: 8698)
  Prédit: 'lines'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lines' → logprob: -0.04954463243484497
    2. 'iter' → logprob: -3.0495445728302
    3. '(lines' → logprob: -7.299544811248779
    4. '(iter' → logprob: -8.299544334411621
    5. 'self' → logprob: -11.299544334411621
    6. 'line' → logprob: -11.299544334411621
    7. ' iter' → logprob: -12.674544334411621
    8. ' lines' → logprob: -12.924544334411621
    9. '	lines' → logprob: -14.674544334411621
    10. '_lines' → logprob: -15.174544334411621

Token 1323: '

' (ID: 279)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.01191730983555317
    2. '
' → logprob: -5.1369171142578125
    3. 'def' → logprob: -6.1369171142578125
    4. '    
' → logprob: -6.6369171142578125
    5. ':' → logprob: -6.7619171142578125
    6. ' def' → logprob: -7.5119171142578125
    7. ':
' → logprob: -8.511917114257812
    8. ',' → logprob: -9.136917114257812
    9. '):
' → logprob: -9.136917114257812
    10. '<|end|>' → logprob: -9.261917114257812

Token 1324: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.036618586629629135
    2. 'def' → logprob: -3.53661847114563
    3. ' def' → logprob: -5.036618709564209
    4. '
' → logprob: -8.41161823272705
    5. '	def' → logprob: -9.28661823272705
    6. '```' → logprob: -11.28661823272705
    7. '    
' → logprob: -11.53661823272705
    8. ' ' → logprob: -12.53661823272705
    9. '  ' → logprob: -13.03661823272705
    10. '       ' → logprob: -13.91161823272705

Token 1325: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.011679206974804401
    2. '   ' → logprob: -4.511679172515869
    3. ' def' → logprob: -7.386679172515869
    4. '	def' → logprob: -11.761679649353027
    5. '
' → logprob: -13.011679649353027
    6. '```' → logprob: -13.886679649353027
    7. '  ' → logprob: -16.01167869567871
    8. 'next' → logprob: -16.13667869567871
    9. '    
' → logprob: -16.26167869567871
    10. '    ' → logprob: -16.51167869567871

Token 1326: ' parse' (ID: 8420)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '__' → logprob: -0.04697643220424652
    2. 'def' → logprob: -3.421976327896118
    3. 'next' → logprob: -4.921976566314697
    4. '_next' → logprob: -5.421976566314697
    5. 'read' → logprob: -6.796976566314697
    6. 'parse' → logprob: -8.671976089477539
    7. '___' → logprob: -8.921976089477539
    8. ' __' → logprob: -10.421976089477539
    9. '   ' → logprob: -11.046976089477539
    10. '
' → logprob: -11.046976089477539

Token 1327: '_next' (ID: 25436)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -2.8802491215174086e-05
    2. '(' → logprob: -10.875028610229492
    3. 'self' → logprob: -12.250028610229492
    4. '_line' → logprob: -13.250028610229492
    5. '(
' → logprob: -13.375028610229492
    6. '_next' → logprob: -13.750028610229492
    7. 'def' → logprob: -15.250028610229492
    8. '()' → logprob: -16.000028610229492
    9. '   ' → logprob: -16.250028610229492
    10. ' (' → logprob: -16.875028610229492

Token 1328: '_case' (ID: 43667)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.0038399752229452133
    2. '_line' → logprob: -6.12883996963501
    3. '_token' → logprob: -6.62883996963501
    4. '()' → logprob: -8.753840446472168
    5. '(' → logprob: -9.128840446472168
    6. 'token' → logprob: -10.003840446472168
    7. 'line' → logprob: -11.628840446472168
    8. 'self' → logprob: -12.128840446472168
    9. '(line' → logprob: -13.753840446472168
    10. ' line' → logprob: -14.128840446472168

Token 1329: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.0004732102679554373
    2. '(' → logprob: -7.7504730224609375
    3. '(
' → logprob: -10.625473022460938
    4. ' (' → logprob: -11.500473022460938
    5. 'self' → logprob: -12.625473022460938
    6. '   ' → logprob: -13.000473022460938
    7. '       ' → logprob: -13.875473022460938
    8. '(s' → logprob: -15.375473022460938
    9. ' ' → logprob: -15.625473022460938
    10. '()' → logprob: -15.750473022460938

Token 1330: ')' (ID: 8)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.004297776613384485
    2. ')' → logprob: -6.004297733306885
    3. 'self' → logprob: -7.379297733306885
    4. '):
' → logprob: -7.629297733306885
    5. '   ' → logprob: -7.879297733306885
    6. '       ' → logprob: -9.004298210144043
    7. '(' → logprob: -10.129298210144043
    8. '```' → logprob: -10.379298210144043
    9. ')(' → logprob: -10.629298210144043
    10. '):' → logprob: -11.004298210144043

Token 1331: ' ->' (ID: 2747)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.03258724883198738
    2. '       ' → logprob: -3.9075872898101807
    3. '->' → logprob: -5.532587051391602
    4. '   ' → logprob: -5.782587051391602
    5. 'self' → logprob: -6.032587051391602
    6. '(' → logprob: -6.407587051391602
    7. '```' → logprob: -8.407587051391602
    8. ' ->' → logprob: -8.532587051391602
    9. 'def' → logprob: -8.782587051391602
    10. '(
' → logprob: -9.282587051391602

Token 1332: ' Tuple' (ID: 50841)
  Prédit: 'Problem'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Problem' → logprob: -0.478649377822876
    2. 'Tuple' → logprob: -0.978649377822876
    3. 'Optional' → logprob: -6.103649139404297
    4. 'int' → logprob: -6.353649139404297
    5. ' Tuple' → logprob: -8.353649139404297
    6. 'List' → logprob: -8.978649139404297
    7. ' Problem' → logprob: -9.603649139404297
    8. 'tuple' → logprob: -10.103649139404297
    9. 'Schedule' → logprob: -10.103649139404297
    10. ''' → logprob: -10.853649139404297

Token 1333: '[' (ID: 58)
  Prédit: '(int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.23253700137138367
    2. 'int' → logprob: -2.357537031173706
    3. '[int' → logprob: -3.107537031173706
    4. '(
' → logprob: -3.357537031173706
    5. '(' → logprob: -3.857537031173706
    6. 'Problem' → logprob: -5.357536792755127
    7. '[
' → logprob: -5.732536792755127
    8. '()' → logprob: -6.107536792755127
    9. '(List' → logprob: -7.607536792755127
    10. '[' → logprob: -7.732536792755127

Token 1334: 'Problem' (ID: 36177)
  Prédit: 'Problem'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Problem' → logprob: -0.05497425049543381
    2. 'int' → logprob: -2.929974317550659
    3. 'List' → logprob: -9.804974555969238
    4. '[int' → logprob: -10.929974555969238
    5. ' Problem' → logprob: -11.929974555969238
    6. ' int' → logprob: -12.554974555969238
    7. '   ' → logprob: -13.054974555969238
    8. 'None' → logprob: -13.429974555969238
    9. 'str' → logprob: -13.929974555969238
    10. '
' → logprob: -14.304974555969238

Token 1335: 'Parameters' (ID: 10167)
  Prédit: 'Parameters'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Parameters' → logprob: -5.466968650580384e-05
    2. '[int' → logprob: -9.875054359436035
    3. '_parameters' → logprob: -13.500054359436035
    4. '[' → logprob: -13.750054359436035
    5. 'Parameter' → logprob: -15.000054359436035
    6. '[str' → logprob: -16.12505531311035
    7. 'Params' → logprob: -16.62505531311035
    8. 'parameters' → logprob: -16.75005531311035
    9. 'int' → logprob: -17.00005531311035
    10. '[
' → logprob: -17.50005531311035

Token 1336: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0007286362233571708
    2. ',int' → logprob: -7.250728607177734
    3. ',List' → logprob: -11.750728607177734
    4. ' ,' → logprob: -12.000728607177734
    5. '[int' → logprob: -12.625728607177734
    6. ',
' → logprob: -13.875728607177734
    7. ',bool' → logprob: -15.250728607177734
    8. 'int' → logprob: -17.375728607177734
    9. ',Integer' → logprob: -17.375728607177734
    10. ',[' → logprob: -17.375728607177734

Token 1337: ' Live' (ID: 13065)
  Prédit: 'Live'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Live' → logprob: -0.002283956855535507
    2. 'List' → logprob: -6.127284049987793
    3. ' Live' → logprob: -9.252284049987793
    4. 'Dict' → logprob: -13.877284049987793
    5. 'Problem' → logprob: -14.002284049987793
    6. '   ' → logprob: -14.877284049987793
    7. '
' → logprob: -15.252284049987793
    8. 'Input' → logprob: -15.627284049987793
    9. ' List' → logprob: -15.752284049987793
    10. '[List' → logprob: -16.377283096313477

Token 1338: 'Data' (ID: 1186)
  Prédit: 'Data'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Data' → logprob: -3.128163257315464e-07
    2. '[' → logprob: -16.375
    3. 'Iterator' → logprob: -17.0
    4. '_data' → logprob: -17.375
    5. 'Dat' → logprob: -17.625
    6. '_Data' → logprob: -17.875
    7. 'data' → logprob: -17.875
    8. '@Data' → logprob: -18.0
    9. ' Data' → logprob: -18.125
    10. 'Datas' → logprob: -18.375

Token 1339: ']:
' (ID: 22152)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.7031977772712708
    2. ']:
' → logprob: -0.9531977772712708
    3. ':
' → logprob: -2.578197717666626
    4. ':' → logprob: -4.328197956085205
    5. '):
' → logprob: -4.453197956085205
    6. ']:' → logprob: -4.578197956085205
    7. '   ' → logprob: -5.828197956085205
    8. '():
' → logprob: -5.953197956085205
    9. '```' → logprob: -7.328197956085205
    10. '[' → logprob: -7.953197956085205

Token 1340: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0004472348664421588
    2. '```' → logprob: -7.7504472732543945
    3. '        
' → logprob: -12.500447273254395
    4. '``' → logprob: -12.875447273254395
    5. ' line' → logprob: -13.375447273254395
    6. '           ' → logprob: -13.625447273254395
    7. '()' → logprob: -14.375447273254395
    8. ' lines' → logprob: -14.500447273254395
    9. 'self' → logprob: -14.625447273254395
    10. '<|end|>' → logprob: -14.750447273254395

Token 1341: ' #' (ID: 1069)
  Prédit: ' n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.46019431948661804
    2. '       ' → logprob: -2.0851943492889404
    3. 'n' → logprob: -2.3351943492889404
    4. 'line' → logprob: -2.7101943492889404
    5. ' line' → logprob: -3.5851943492889404
    6. 'params' → logprob: -3.8351943492889404
    7. ' params' → logprob: -5.085194110870361
    8. 'raw' → logprob: -5.210194110870361
    9. ' raw' → logprob: -5.585194110870361
    10. ' parameters' → logprob: -5.835194110870361

Token 1342: ' parse' (ID: 8420)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.391014963388443
    2. 'params' → logprob: -2.14101505279541
    3. 'region' → logprob: -3.14101505279541
    4. ' n' → logprob: -3.39101505279541
    5. 'C' → logprob: -3.64101505279541
    6. 'N' → logprob: -4.01601505279541
    7. 'num' → logprob: -4.14101505279541
    8. 'p' → logprob: -4.39101505279541
    9. 'c' → logprob: -4.51601505279541
    10. 'param' → logprob: -4.64101505279541

Token 1343: ' header' (ID: 8211)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.20364168286323547
    2. '       ' → logprob: -2.953641653060913
    3. 'region' → logprob: -2.953641653060913
    4. 'self' → logprob: -3.828641653060913
    5. 'line' → logprob: -4.328641891479492
    6. 'num' → logprob: -4.328641891479492
    7. ' n' → logprob: -4.703641891479492
    8. '   ' → logprob: -5.453641891479492
    9. 'params' → logprob: -5.453641891479492
    10. 'count' → logprob: -5.578641891479492

Token 1344: ' line' (ID: 2543)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.21019184589385986
    2. 'line' → logprob: -1.7101918458938599
    3. '
' → logprob: -5.71019172668457
    4. ' line' → logprob: -6.08519172668457
    5. ' =' → logprob: -6.96019172668457
    6. '=' → logprob: -7.71019172668457
    7. '        
' → logprob: -7.83519172668457
    8. 'next' → logprob: -8.21019172668457
    9. '_line' → logprob: -8.58519172668457
    10. 'self' → logprob: -8.71019172668457

Token 1345: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7001388669013977
    2. 'line' → logprob: -0.7001388669013977
    3. ' line' → logprob: -5.575139045715332
    4. 'header' → logprob: -5.825139045715332
    5. '```' → logprob: -9.700139045715332
    6. '        
' → logprob: -10.325139045715332
    7. 'while' → logprob: -10.700139045715332
    8. '=line' → logprob: -10.950139045715332
    9. ' header' → logprob: -11.325139045715332
    10. '           ' → logprob: -11.575139045715332

Token 1346: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.04049332067370415
    2. 'line' → logprob: -3.4154932498931885
    3. ' line' → logprob: -5.165493488311768
    4. '```' → logprob: -6.915493488311768
    5. 'self' → logprob: -10.91549301147461
    6. '           ' → logprob: -11.04049301147461
    7. 'next' → logprob: -11.16549301147461
    8. '        
' → logprob: -11.41549301147461
    9. 'header' → logprob: -11.54049301147461
    10. ' =' → logprob: -11.66549301147461

Token 1347: ' while' (ID: 2049)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'line' → logprob: -0.22186580300331116
    2. 'header' → logprob: -2.3468658924102783
    3. ' line' → logprob: -2.4718658924102783
    4. '       ' → logprob: -4.471865653991699
    5. ' header' → logprob: -5.096865653991699
    6. 'raw' → logprob: -7.721865653991699
    7. ' n' → logprob: -8.2218656539917
    8. 'n' → logprob: -8.7218656539917
    9. 'params' → logprob: -8.7218656539917
    10. 'parts' → logprob: -8.7218656539917

Token 1348: ' True' (ID: 6432)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'True' → logprob: -0.014195947907865047
    2. ' True' → logprob: -4.264195919036865
    3. '(True' → logprob: -11.014196395874023
    4. 'line' → logprob: -12.264196395874023
    5. 'len' → logprob: -12.264196395874023
    6. '
' → logprob: -12.639196395874023
    7. 'true' → logprob: -13.264196395874023
    8. 'self' → logprob: -14.014196395874023
    9. '1' → logprob: -15.014196395874023
    10. 'not' → logprob: -15.389196395874023

Token 1349: ':
' (ID: 734)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.07628384977579117
    2. '       ' → logprob: -2.8262839317321777
    3. ' line' → logprob: -4.701283931732178
    4. 'line' → logprob: -5.951283931732178
    5. ':' → logprob: -6.701283931732178
    6. '(line' → logprob: -7.076283931732178
    7. '_line' → logprob: -9.32628345489502
    8. ':
' → logprob: -9.57628345489502
    9. '   ' → logprob: -9.95128345489502
    10. ' and' → logprob: -10.07628345489502

Token 1350: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.052410200238227844
    2. ' line' → logprob: -3.302410125732422
    3. 'line' → logprob: -4.302410125732422
    4. '       ' → logprob: -7.427410125732422
    5. '   ' → logprob: -9.927410125732422
    6. 'try' → logprob: -10.302410125732422
    7. '(line' → logprob: -10.927410125732422
    8. '```' → logprob: -11.677410125732422
    9. '	line' → logprob: -11.802410125732422
    10. '_line' → logprob: -12.427410125732422

Token 1351: ' header' (ID: 8211)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'line' → logprob: -0.011283244006335735
    2. ' line' → logprob: -4.5112833976745605
    3. '           ' → logprob: -9.011282920837402
    4. 'try' → logprob: -9.511282920837402
    5. '
' → logprob: -11.011282920837402
    6. '   ' → logprob: -11.011282920837402
    7. '(line' → logprob: -13.386282920837402
    8. '       ' → logprob: -13.761282920837402
    9. '	line' → logprob: -14.136282920837402
    10. 'raw' → logprob: -14.261282920837402

Token 1352: '_line' (ID: 14418)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.15745097398757935
    2. ' =' → logprob: -2.1574509143829346
    3. '_line' → logprob: -3.6574509143829346
    4. '=line' → logprob: -5.657451152801514
    5. 'line' → logprob: -7.282451152801514
    6. '(line' → logprob: -10.282450675964355
    7. '   ' → logprob: -10.907450675964355
    8. ' line' → logprob: -10.907450675964355
    9. '_' → logprob: -12.782450675964355
    10. '()' → logprob: -13.532450675964355

Token 1353: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.07947361469268799
    2. ' =' → logprob: -2.5794734954833984
    3. '=line' → logprob: -7.704473495483398
    4. '           ' → logprob: -8.954473495483398
    5. '       ' → logprob: -13.704473495483398
    6. '               ' → logprob: -14.829473495483398
    7. '_line' → logprob: -15.204473495483398
    8. '.strip' → logprob: -15.204473495483398
    9. 'line' → logprob: -15.454473495483398
    10. '   ' → logprob: -15.454473495483398

Token 1354: ' next' (ID: 2613)
  Prédit: 'next'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'next' → logprob: -0.0023041737731546164
    2. ' next' → logprob: -6.2523040771484375
    3. '(next' → logprob: -8.002304077148438
    4. 'self' → logprob: -10.127304077148438
    5. '
' → logprob: -14.877304077148438
    6. '[next' → logprob: -15.752304077148438
    7. '	next' → logprob: -16.002304077148438
    8. '   ' → logprob: -16.377304077148438
    9. '.next' → logprob: -17.127304077148438
    10. ' self' → logprob: -17.502304077148438

Token 1355: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.00038539018714800477
    2. 'self' → logprob: -7.875385284423828
    3. '(' → logprob: -12.375385284423828
    4. '(
' → logprob: -14.250385284423828
    5. ' self' → logprob: -14.875385284423828
    6. '=self' → logprob: -17.250385284423828
    7. '[self' → logprob: -17.625385284423828
    8. '
' → logprob: -17.875385284423828
    9. '	self' → logprob: -18.750385284423828
    10. '()' → logprob: -18.750385284423828

Token 1356: '.lines' (ID: 96601)
  Prédit: '.lines'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.lines' → logprob: -0.04164831340312958
    2. '(lines' → logprob: -3.4166483879089355
    3. 'lines' → logprob: -4.9166483879089355
    4. ')' → logprob: -8.541647911071777
    5. ').' → logprob: -9.041647911071777
    6. '	lines' → logprob: -9.291647911071777
    7. ' lines' → logprob: -9.291647911071777
    8. 'self' → logprob: -9.416647911071777
    9. '(self' → logprob: -10.041647911071777
    10. ')
' → logprob: -11.916647911071777

Token 1357: ').' (ID: 741)
  Prédit: ').'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ').' → logprob: -0.020843038335442543
    2. '().' → logprob: -5.145843029022217
    3. '()).' → logprob: -5.520843029022217
    4. ')' → logprob: -6.020843029022217
    5. '()
' → logprob: -6.145843029022217
    6. '           ' → logprob: -6.145843029022217
    7. ')
' → logprob: -6.520843029022217
    8. ',' → logprob: -6.645843029022217
    9. '       ' → logprob: -7.520843029022217
    10. '()' → logprob: -8.020843505859375

Token 1358: 'strip' (ID: 23905)
  Prédit: 'strip'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'strip' → logprob: -1.2664456789934775e-06
    2. 'rstrip' → logprob: -14.500000953674316
    3. 'split' → logprob: -14.750000953674316
    4. ' strip' → logprob: -15.000000953674316
    5. '.strip' → logprob: -19.000001907348633
    6. '
' → logprob: -19.500001907348633
    7. '_strip' → logprob: -20.250001907348633
    8. '(strip' → logprob: -20.625001907348633
    9. '```' → logprob: -22.875001907348633
    10. 'str' → logprob: -23.000001907348633

Token 1359: '()
' (ID: 1234)
  Prédit: '()
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()
' → logprob: -0.1271778792142868
    2. '()' → logprob: -2.1271779537200928
    3. '():
' → logprob: -8.627178192138672
    4. '           ' → logprob: -10.127178192138672
    5. '       ' → logprob: -11.502178192138672
    6. '().' → logprob: -12.127178192138672
    7. '()
' → logprob: -12.502178192138672
    8. '();' → logprob: -13.002178192138672
    9. '()

' → logprob: -13.252178192138672
    10. '(),' → logprob: -13.752178192138672

Token 1360: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.2812356650829315
    2. '       ' → logprob: -1.406235694885254
    3. '<|end|>' → logprob: -10.156235694885254
    4. '   ' → logprob: -11.031235694885254
    5. '               ' → logprob: -12.406235694885254
    6. '	   ' → logprob: -12.406235694885254
    7. '	       ' → logprob: -12.531235694885254
    8. ' if' → logprob: -12.906235694885254
    9. 'if' → logprob: -13.031235694885254
    10. ',' → logprob: -13.156235694885254

Token 1361: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.0017582408618181944
    2. '       ' → logprob: -6.501758098602295
    3. '           ' → logprob: -8.501758575439453
    4. ' if' → logprob: -9.876758575439453
    5. 'break' → logprob: -14.001758575439453
    6. '
' → logprob: -15.001758575439453
    7. '```' → logprob: -16.001758575439453
    8. '   ' → logprob: -16.126758575439453
    9. '	if' → logprob: -18.376758575439453
    10. 'If' → logprob: -18.501758575439453

Token 1362: ' header' (ID: 8211)
  Prédit: 'header'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'header' → logprob: -1.5048530030981055e-06
    2. ' header' → logprob: -13.500001907348633
    3. 'len' → logprob: -17.000001907348633
    4. 'not' → logprob: -18.250001907348633
    5. '	header' → logprob: -21.125001907348633
    6. '
' → logprob: -21.875001907348633
    7. '(header' → logprob: -22.375001907348633
    8. '<header' → logprob: -22.500001907348633
    9. 'headline' → logprob: -23.750001907348633
    10. ' not' → logprob: -24.500001907348633

Token 1363: '_line' (ID: 14418)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '==' → logprob: -0.6112567782402039
    2. ' !=' → logprob: -1.6112568378448486
    3. ':' → logprob: -1.9862568378448486
    4. '!=' → logprob: -2.8612568378448486
    5. ' ==' → logprob: -3.7362568378448486
    6. '!='' → logprob: -4.7362565994262695
    7. 's' → logprob: -4.8612565994262695
    8. '```' → logprob: -5.6112565994262695
    9. '.startswith' → logprob: -6.3612565994262695
    10. ':
' → logprob: -6.3612565994262695

Token 1364: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.7286486625671387
    2. '==' → logprob: -1.2286486625671387
    3. '!=' → logprob: -2.1036486625671387
    4. ':
' → logprob: -2.8536486625671387
    5. ' !=' → logprob: -3.2286486625671387
    6. '!='' → logprob: -6.103648662567139
    7. ' ==' → logprob: -6.978648662567139
    8. '.' → logprob: -7.853648662567139
    9. '!="' → logprob: -8.103649139404297
    10. 'and' → logprob: -8.603649139404297

Token 1365: '               ' (ID: 506)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.02138671837747097
    2. '               ' → logprob: -3.8963866233825684
    3. 'break' → logprob: -7.646386623382568
    4. ':' → logprob: -8.771387100219727
    5. ':
' → logprob: -9.146387100219727
    6. ' break' → logprob: -9.771387100219727
    7. '```' → logprob: -11.271387100219727
    8. '                   ' → logprob: -12.146387100219727
    9. '                       ' → logprob: -12.271387100219727
    10. ' and' → logprob: -12.521387100219727

Token 1366: ' break' (ID: 2338)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.4081108570098877
    2. 'break' (adapté à ' break') → logprob: -1.6581108570098877
    3. '               ' → logprob: -2.4081108570098877
    4. ' break' → logprob: -2.9081108570098877
    5. '   ' → logprob: -11.908110618591309
    6. '	break' → logprob: -12.033110618591309
    7. '       ' → logprob: -12.158110618591309
    8. '                   ' → logprob: -12.658110618591309
    9. '
' → logprob: -12.783110618591309
    10. ' parts' → logprob: -13.158110618591309

Token 1367: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0003685861302074045
    2. '
' → logprob: -8.625368118286133
    3. 'tokens' → logprob: -9.000368118286133
    4. '        
' → logprob: -10.375368118286133
    5. 'params' → logprob: -11.625368118286133
    6. '```' → logprob: -12.250368118286133
    7. '           ' → logprob: -12.500368118286133
    8. 'parts' → logprob: -12.500368118286133
    9. ' tokens' → logprob: -12.625368118286133
    10. ' parts' → logprob: -12.625368118286133

Token 1368: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0018017961410805583
    2. ' parts' → logprob: -7.37680196762085
    3. 'tokens' → logprob: -8.001801490783691
    4. '```' → logprob: -8.126801490783691
    5. 'params' → logprob: -8.751801490783691
    6. 'parts' → logprob: -8.751801490783691
    7. '
' → logprob: -9.251801490783691
    8. '        
' → logprob: -10.126801490783691
    9. ' tokens' → logprob: -10.251801490783691
    10. ' params' → logprob: -11.501801490783691

Token 1369: ' C' (ID: 363)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4559782147407532
    2. ' parts' → logprob: -1.7059781551361084
    3. 'parts' → logprob: -2.4559781551361084
    4. 'c' → logprob: -3.0809781551361084
    5. 'params' → logprob: -3.8309781551361084
    6. 'count' → logprob: -4.4559783935546875
    7. ' params' → logprob: -5.0809783935546875
    8. ' c' → logprob: -5.5809783935546875
    9. ' counts' → logprob: -6.5809783935546875
    10. 'C' (adapté à ' C') → logprob: -6.5809783935546875

Token 1370: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0011148543562740088
    2. ',D' → logprob: -6.876114845275879
    3. ',d' → logprob: -10.376114845275879
    4. ',C' → logprob: -10.501114845275879
    5. ' ,' → logprob: -12.251114845275879
    6. ',W' → logprob: -12.251114845275879
    7. ',N' → logprob: -12.626114845275879
    8. ',T' → logprob: -13.126114845275879
    9. ',
' → logprob: -13.251114845275879
    10. '_,' → logprob: -13.626114845275879

Token 1371: ' D' (ID: 415)
  Prédit: 'D'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'D' → logprob: -0.020602617412805557
    2. ' D' → logprob: -3.8956027030944824
    3. 'W' → logprob: -10.270602226257324
    4. 'C' → logprob: -11.145602226257324
    5. 'R' → logprob: -13.145602226257324
    6. 'd' → logprob: -13.395602226257324
    7. 'X' → logprob: -13.520602226257324
    8. ' W' → logprob: -13.770602226257324
    9. ' ' → logprob: -13.895602226257324
    10. 'N' → logprob: -13.895602226257324

Token 1372: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.002376365475356579
    2. '=' → logprob: -6.127376556396484
    3. ' =' → logprob: -9.002376556396484
    4. ' ,' → logprob: -9.627376556396484
    5. ',C' → logprob: -14.002376556396484
    6. '_,' → logprob: -15.002376556396484
    7. ',int' → logprob: -16.002376556396484
    8. ',N' → logprob: -16.252376556396484
    9. ',
' → logprob: -16.627376556396484
    10. '‌,' → logprob: -16.752376556396484

Token 1373: ' W' (ID: 486)
  Prédit: 'W'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'W' → logprob: -0.0015224798116832972
    2. 'X' → logprob: -6.876522541046143
    3. ' W' → logprob: -8.001522064208984
    4. 'B' → logprob: -9.001522064208984
    5. 'M' → logprob: -10.501522064208984
    6. 'w' → logprob: -13.751522064208984
    7. ' ' → logprob: -14.501522064208984
    8. ' X' → logprob: -15.251522064208984
    9. '  ' → logprob: -15.376522064208984
    10. 'L' → logprob: -15.626522064208984

Token 1374: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.028199996799230576
    2. '=' → logprob: -3.6531999111175537
    3. ' =' → logprob: -6.278200149536133
    4. ' ,' → logprob: -10.903200149536133
    5. '   ' → logprob: -13.653200149536133
    6. '_,' → logprob: -14.653200149536133
    7. '       ' → logprob: -14.903200149536133
    8. ' ' → logprob: -15.903200149536133
    9. '           ' → logprob: -16.028200149536133
    10. '    ' → logprob: -16.278200149536133

Token 1375: ' X' (ID: 2127)
  Prédit: 'X'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'X' → logprob: -0.009763291105628014
    2. ' X' → logprob: -4.634763240814209
    3. ',' → logprob: -12.384763717651367
    4. 'M' → logprob: -14.384763717651367
    5. ' ' → logprob: -14.759763717651367
    6. '   ' → logprob: -14.884763717651367
    7. ',X' → logprob: -14.884763717651367
    8. '
' → logprob: -15.009763717651367
    9. 'x' → logprob: -15.134763717651367
    10. ' =' → logprob: -15.759763717651367

Token 1376: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.39651355147361755
    2. '=' → logprob: -1.14651358127594
    3. ',' → logprob: -4.64651346206665
    4. '   ' → logprob: -14.896513938903809
    5. ' ' → logprob: -15.396513938903809
    6. ' ,' → logprob: -15.521513938903809
    7. '    ' → logprob: -16.271512985229492
    8. ')' → logprob: -16.646512985229492
    9. '       ' → logprob: -17.146512985229492
    10. '＝' → logprob: -17.271512985229492

Token 1377: ' map' (ID: 4014)
  Prédit: 'map'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'map' → logprob: -0.6937086582183838
    2. ' map' → logprob: -0.6937086582183838
    3. '[' → logprob: -7.568708419799805
    4. '(map' → logprob: -10.568708419799805
    5. ' [' → logprob: -11.068708419799805
    6. 'tuple' → logprob: -13.568708419799805
    7. '_map' → logprob: -14.193708419799805
    8. '.map' → logprob: -14.943708419799805
    9. ' tuple' → logprob: -15.068708419799805
    10. 'list' → logprob: -15.443708419799805

Token 1378: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.5759592056274414
    2. 'int' → logprob: -0.8259592056274414
    3. 'str' → logprob: -11.325959205627441
    4. ' int' → logprob: -12.325959205627441
    5. '(str' → logprob: -13.200959205627441
    6. '[int' → logprob: -14.325959205627441
    7. '=int' → logprob: -15.325959205627441
    8. '(' → logprob: -15.450959205627441
    9. '<int' → logprob: -15.575959205627441
    10. ',int' → logprob: -16.575958251953125

Token 1379: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.7230831980705261
    2. '(header' → logprob: -0.7230831980705261
    3. '(next' → logprob: -3.723083257675171
    4. 'header' → logprob: -5.473083019256592
    5. ')' → logprob: -8.22308349609375
    6. '(' → logprob: -8.22308349609375
    7. ',next' → logprob: -8.47308349609375
    8. 'next' → logprob: -8.97308349609375
    9. '(self' → logprob: -9.72308349609375
    10. ' ,' → logprob: -10.47308349609375

Token 1380: ' header' (ID: 8211)
  Prédit: 'header'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'header' → logprob: -0.002475777640938759
    2. ' header' → logprob: -6.002475738525391
    3. '(header' → logprob: -16.00247573852539
    4. '<header' → logprob: -17.75247573852539
    5. 'next' → logprob: -18.75247573852539
    6. '	header' → logprob: -19.25247573852539
    7. '_header' → logprob: -19.37747573852539
    8. 'C' → logprob: -20.25247573852539
    9. '           ' → logprob: -20.37747573852539
    10. 'HEADER' → logprob: -20.50247573852539

Token 1381: '_line' (ID: 14418)
  Prédit: '_line'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_line' → logprob: -0.059374794363975525
    2. '_lines' → logprob: -3.0593748092651367
    3. '.readline' → logprob: -4.934374809265137
    4. '_.' → logprob: -6.934374809265137
    5. '_LINE' → logprob: -7.934374809265137
    6. '._' → logprob: -7.934374809265137
    7. ')_' → logprob: -7.934374809265137
    8. ')' → logprob: -8.059374809265137
    9. '```' → logprob: -8.434374809265137
    10. '().' → logprob: -8.809374809265137

Token 1382: '.split' (ID: 10347)
  Prédit: '.split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.split' → logprob: -0.5789467692375183
    2. '().' → logprob: -0.8289467692375183
    3. '.strip' → logprob: -5.953946590423584
    4. '.' → logprob: -8.203947067260742
    5. ' .' → logprob: -9.328947067260742
    6. '.rstrip' → logprob: -10.953947067260742
    7. 'split' → logprob: -11.203947067260742
    8. '.readline' → logprob: -11.453947067260742
    9. '   ' → logprob: -14.203947067260742
    10. '.chomp' → logprob: -14.578947067260742

Token 1383: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.013230938464403152
    2. '()' → logprob: -4.888230800628662
    3. ')' → logprob: -5.638230800628662
    4. '())
' → logprob: -6.638230800628662
    5. '('' → logprob: -7.263230800628662
    6. '(' → logprob: -10.88823127746582
    7. '(','' → logprob: -11.63823127746582
    8. '(),' → logprob: -12.38823127746582
    9. '()
' → logprob: -13.01323127746582
    10. ')
' → logprob: -13.76323127746582

Token 1384: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0039437562227249146
    2. '
' → logprob: -5.753943920135498
    3. 'params' → logprob: -8.12894344329834
    4. 'data' → logprob: -8.75394344329834
    5. 'regions' → logprob: -9.50394344329834
    6. 'rows' → logprob: -10.25394344329834
    7. '        
' → logprob: -10.37894344329834
    8. 'region' → logprob: -10.62894344329834
    9. 'profit' → logprob: -10.62894344329834
    10. 'parameters' → logprob: -10.75394344329834

Token 1385: ' if' (ID: 538)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2675604224205017
    2. 'expected' → logprob: -1.5175604820251465
    3. 'regions' → logprob: -4.6425604820251465
    4. 'params' → logprob: -6.1425604820251465
    5. 'parameters' → logprob: -6.8925604820251465
    6. 'profit' → logprob: -7.5175604820251465
    7. 'live' → logprob: -7.6425604820251465
    8. 'region' → logprob: -7.8925604820251465
    9. ' expected' → logprob: -8.017560005187988
    10. 'data' → logprob: -8.642560005187988

Token 1386: ' (' (ID: 350)
  Prédit: 'C'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'C' → logprob: -0.00016742534353397787
    2. ' C' → logprob: -8.750167846679688
    3. 'not' → logprob: -12.375167846679688
    4. '(C' → logprob: -12.750167846679688
    5. 'header' → logprob: -14.375167846679688
    6. ' not' → logprob: -14.750167846679688
    7. '   ' → logprob: -15.250167846679688
    8. '[C' → logprob: -16.000167846679688
    9. '(not' → logprob: -16.625167846679688
    10. ' ' → logprob: -16.625167846679688

Token 1387: 'C' (ID: 34)
  Prédit: 'C'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'C' → logprob: -2.47495681833243e-05
    2. ' C' → logprob: -11.375024795532227
    3. 'not' → logprob: -11.875024795532227
    4. '(C' → logprob: -12.875024795532227
    5. '           ' → logprob: -13.750024795532227
    6. '   ' → logprob: -14.125024795532227
    7. 'header' → logprob: -14.625024795532227
    8. '[C' → logprob: -14.875024795532227
    9. '
' → logprob: -15.625024795532227
    10. '       ' → logprob: -15.750024795532227

Token 1388: ',' (ID: 11)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.3877870440483093
    2. ' ==' → logprob: -1.137787103652954
    3. ',' → logprob: -7.512786865234375
    4. ')' → logprob: -8.387786865234375
    5. ')==' → logprob: -9.137786865234375
    6. '>' → logprob: -10.887786865234375
    7. '   ' → logprob: -12.637786865234375
    8. '<=' → logprob: -13.012786865234375
    9. '=' → logprob: -13.137786865234375
    10. '```' → logprob: -13.512786865234375

Token 1389: ' D' (ID: 415)
  Prédit: 'D'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'D' → logprob: -0.0002989968634210527
    2. ' D' → logprob: -8.125299453735352
    3. ')' → logprob: -13.500299453735352
    4. '   ' → logprob: -14.125299453735352
    5. '
' → logprob: -15.750299453735352
    6. ',D' → logprob: -15.750299453735352
    7. ',' → logprob: -16.00029945373535
    8. 'W' → logprob: -16.12529945373535
    9. ' ' → logprob: -16.12529945373535
    10. '0' → logprob: -16.12529945373535

Token 1390: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.11463186889886856
    2. ')' → logprob: -2.2396318912506104
    3. ')==' → logprob: -6.864631652832031
    4. '==' → logprob: -8.739631652832031
    5. ',W' → logprob: -8.739631652832031
    6. ',X' → logprob: -9.114631652832031
    7. '
' → logprob: -9.239631652832031
    8. '       ' → logprob: -9.614631652832031
    9. ',
' → logprob: -10.364631652832031
    10. ' ==' → logprob: -10.614631652832031

Token 1391: ' W' (ID: 486)
  Prédit: 'W'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'W' → logprob: -0.00023250321100931615
    2. ' W' → logprob: -8.375232696533203
    3. '   ' → logprob: -14.000232696533203
    4. '
' → logprob: -15.000232696533203
    5. ')' → logprob: -15.500232696533203
    6. ' ' → logprob: -15.750232696533203
    7. '       ' → logprob: -15.875232696533203
    8. '  ' → logprob: -17.000232696533203
    9. '    ' → logprob: -17.125232696533203
    10. '     ' → logprob: -17.500232696533203

Token 1392: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.44738060235977173
    2. ')' → logprob: -1.072380542755127
    3. '==' → logprob: -4.822380542755127
    4. ')==' → logprob: -4.947380542755127
    5. ' ==' → logprob: -5.947380542755127
    6. '
' → logprob: -8.947381019592285
    7. '       ' → logprob: -8.947381019592285
    8. ' ,' → logprob: -8.947381019592285
    9. '           ' → logprob: -9.322381019592285
    10. '   ' → logprob: -9.947381019592285

Token 1393: ' X' (ID: 2127)
  Prédit: 'X'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'X' → logprob: -4.978233846486546e-05
    2. ' X' → logprob: -10.000049591064453
    3. ')' → logprob: -13.375049591064453
    4. '   ' → logprob: -13.625049591064453
    5. '
' → logprob: -14.000049591064453
    6. ' ' → logprob: -15.000049591064453
    7. '       ' → logprob: -15.625049591064453
    8. '  ' → logprob: -16.875049591064453
    9. '           ' → logprob: -17.000049591064453
    10. '     ' → logprob: -17.125049591064453

Token 1394: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.014242250472307205
    2. ')==' → logprob: -4.264242172241211
    3. '==' → logprob: -10.639242172241211
    4. ')!=' → logprob: -10.764242172241211
    5. '):
' → logprob: -11.389242172241211
    6. ' )' → logprob: -12.389242172241211
    7. ' ==' → logprob: -12.514242172241211
    8. '):' → logprob: -12.514242172241211
    9. ')is' → logprob: -12.639242172241211
    10. '   ' → logprob: -13.514242172241211

Token 1395: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.06254790723323822
    2. ' ==' → logprob: -2.8125479221343994
    3. ')==' → logprob: -8.43754768371582
    4. '==(' → logprob: -8.43754768371582
    5. '[' → logprob: -9.68754768371582
    6. ']==' → logprob: -11.06254768371582
    7. '==
' → logprob: -11.06254768371582
    8. '       ' → logprob: -11.18754768371582
    9. '()==' → logprob: -11.43754768371582
    10. '===' → logprob: -11.43754768371582

Token 1396: ' (' (ID: 350)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0032630343921482563
    2. '0' → logprob: -5.753262996673584
    3. ' (' → logprob: -9.378263473510742
    4. ' ' → logprob: -14.253263473510742
    5. '(-' → logprob: -15.753263473510742
    6. '   ' → logprob: -16.628263473510742
    7. '
' → logprob: -18.253263473510742
    8. '[' → logprob: -19.378263473510742
    9. '{' → logprob: -20.378263473510742
    10. ')' → logprob: -20.503263473510742

Token 1397: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -5.848420551046729e-05
    2. '(' → logprob: -9.7500581741333
    3. ' ' → logprob: -17.250059127807617
    4. '-' → logprob: -17.625059127807617
    5. ')' → logprob: -18.500059127807617
    6. '   ' → logprob: -19.500059127807617
    7. '(-' → logprob: -19.625059127807617
    8. ' (' → logprob: -19.625059127807617
    9. '
' → logprob: -20.500059127807617
    10. '۰' → logprob: -22.000059127807617

Token 1398: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -7.100059156073257e-05
    2. ' ,' → logprob: -10.250070571899414
    3. ',
' → logprob: -10.500070571899414
    4. '0' → logprob: -12.000070571899414
    5. '):
' → logprob: -14.500070571899414
    6. ',)' → logprob: -14.875070571899414
    7. ',None' → logprob: -15.250070571899414
    8. '
' → logprob: -15.500070571899414
    9. ')' → logprob: -15.500070571899414
    10. '   ' → logprob: -15.875070571899414

Token 1399: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -5.204720582696609e-05
    2. ' ' → logprob: -9.875052452087402
    3. ')' → logprob: -14.500052452087402
    4. '<|end|>' → logprob: -17.500051498413086
    5. '
' → logprob: -18.750051498413086
    6. '  ' → logprob: -19.000051498413086
    7. '   ' → logprob: -19.250051498413086
    8. '<|end|>' → logprob: -20.375051498413086
    9. '):
' → logprob: -20.500051498413086
    10. ',' → logprob: -21.500051498413086

Token 1400: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -15.875
    3. ')' → logprob: -19.0
    4. '00' → logprob: -20.125
    5. '۰' → logprob: -21.125
    6. '#' → logprob: -22.0
    7. '०' → logprob: -22.375
    8. '_' → logprob: -22.5
    9. '000' → logprob: -22.625
    10. 'return' → logprob: -22.625

Token 1401: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00023393364972434938
    2. '0' → logprob: -8.37523365020752
    3. ' ,' → logprob: -12.75023365020752
    4. ',
' → logprob: -14.87523365020752
    5. ')' → logprob: -16.375234603881836
    6. '1' → logprob: -18.000234603881836
    7. '
' → logprob: -18.375234603881836
    8. ' ' → logprob: -18.500234603881836
    9. '),' → logprob: -18.875234603881836
    10. '_,' → logprob: -19.375234603881836

Token 1402: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.5776860184123507e-06
    2. ' ' → logprob: -12.87500286102295
    3. '   ' → logprob: -20.000001907348633
    4. '  ' → logprob: -21.250001907348633
    5. '۰' → logprob: -21.750001907348633
    6. '```' → logprob: -21.875001907348633
    7. '00' → logprob: -22.625001907348633
    8. '       ' → logprob: -22.687501907348633
    9. '     ' → logprob: -22.812501907348633
    10. ')' → logprob: -22.875001907348633

Token 1403: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.2664456789934775e-06
    2. ' ' → logprob: -13.625000953674316
    3. '00' → logprob: -19.500001907348633
    4. '...' → logprob: -19.750001907348633
    5. '۰' → logprob: -20.125001907348633
    6. '```' → logprob: -20.312501907348633
    7. '[' → logprob: -20.750001907348633
    8. '1' → logprob: -20.750001907348633
    9. 'int' → logprob: -20.812501907348633
    10. '#' → logprob: -20.875001907348633

Token 1404: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00020735491125378758
    2. '0' → logprob: -8.50020694732666
    3. ' ,' → logprob: -12.50020694732666
    4. ',
' → logprob: -16.750207901000977
    5. ' ' → logprob: -18.250207901000977
    6. '4' → logprob: -18.625207901000977
    7. '1' → logprob: -18.875207901000977
    8. ')' → logprob: -19.125207901000977
    9. 'import' → logprob: -19.375207901000977
    10. '   ' → logprob: -19.625207901000977

Token 1405: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -7.896309739408025e-07
    2. ' ' → logprob: -14.125000953674316
    3. ')' → logprob: -20.875
    4. '   ' → logprob: -21.375
    5. '```' → logprob: -23.25
    6. '           ' → logprob: -23.625
    7. '#' → logprob: -23.875
    8. '       ' → logprob: -23.875
    9. '۰' → logprob: -24.0
    10. '  ' → logprob: -24.0

Token 1406: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -16.125
    3. ')' → logprob: -20.75
    4. '
' → logprob: -21.25
    5. '۰' → logprob: -21.25
    6. '{' → logprob: -21.75
    7. '```' → logprob: -22.0
    8. '०' → logprob: -22.375
    9. '০' → logprob: -22.5
    10. '   ' → logprob: -22.875

Token 1407: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.01817253790795803
    2. '):' → logprob: -4.018172740936279
    3. ')' → logprob: -11.768172264099121
    4. '       ' → logprob: -12.018172264099121
    5. '):
' → logprob: -12.393172264099121
    6. ':
' → logprob: -13.018172264099121
    7. '           ' → logprob: -13.768172264099121
    8. '   ' → logprob: -14.518172264099121
    9. ''):
' → logprob: -15.143172264099121
    10. '"):
' → logprob: -15.143172264099121

Token 1408: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -2.4153549020411447e-05
    2. ':
' → logprob: -11.75002384185791
    3. ':' → logprob: -12.00002384185791
    4. '       ' → logprob: -12.75002384185791
    5. '		' → logprob: -13.25002384185791
    6. '               ' → logprob: -13.25002384185791
    7. '          ' → logprob: -14.00002384185791
    8. 'return' → logprob: -14.00002384185791
    9. '   ' → logprob: -14.37502384185791
    10. ':return' → logprob: -14.50002384185791

Token 1409: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.16348224878311157
    2. '           ' → logprob: -1.9134821891784668
    3. 'raise' → logprob: -6.163482189178467
    4. ' return' → logprob: -6.788482189178467
    5. ' raise' → logprob: -11.913482666015625
    6. ':return' → logprob: -12.163482666015625
    7. '
' → logprob: -12.413482666015625
    8. '   ' → logprob: -13.663482666015625
    9. '               ' → logprob: -14.038482666015625
    10. '       ' → logprob: -14.038482666015625

Token 1410: ' None' (ID: 4662)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -0.3397977948188782
    2. ' None' → logprob: -1.3397977352142334
    3. '(None' → logprob: -3.8397977352142334
    4. ',None' → logprob: -6.2147979736328125
    5. ' (' → logprob: -6.4647979736328125
    6. '(' → logprob: -6.9647979736328125
    7. '<|end|>' → logprob: -9.339797973632812
    8. ',' → logprob: -10.214797973632812
    9. '(C' → logprob: -10.839797973632812
    10. '
' → logprob: -11.714797973632812

Token 1411: ',' (ID: 11)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.3783126771450043
    2. '       ' → logprob: -1.2533127069473267
    3. '        
' → logprob: -3.628312587738037
    4. '    
' → logprob: -7.128312587738037
    5. '  
' → logprob: -7.628312587738037
    6. '<|end|>' → logprob: -7.753312587738037
    7. ' 
' → logprob: -8.003313064575195
    8. ',' → logprob: -9.003313064575195
    9. ',
' → logprob: -9.128313064575195
    10. '		
' → logprob: -9.628313064575195

Token 1412: ' None' (ID: 4662)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -3.106736039626412e-05
    2. ' None' → logprob: -10.500031471252441
    3. '(None' → logprob: -13.250031471252441
    4. '_None' → logprob: -14.375031471252441
    5. ',None' → logprob: -14.625031471252441
    6. '   ' → logprob: -15.000031471252441
    7. '
' → logprob: -15.125031471252441
    8. '    
' → logprob: -16.625030517578125
    9. '=None' → logprob: -17.625030517578125
    10. 'True' → logprob: -18.000030517578125

Token 1413: '

' (ID: 279)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4816799759864807
    2. '
' → logprob: -0.9816799759864807
    3. '        
' → logprob: -4.981679916381836
    4. '  
' → logprob: -8.606679916381836
    5. '    
' → logprob: -8.606679916381836
    6. '<|end|>' → logprob: -9.481679916381836
    7. '   ' → logprob: -9.606679916381836
    8. '

' → logprob: -10.731679916381836
    9. '
' → logprob: -11.106679916381836
    10. '​' → logprob: -11.356679916381836

Token 1414: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0032086113933473825
    2. '
' → logprob: -5.878208637237549
    3. 'expected' → logprob: -8.12820816040039
    4. '        
' → logprob: -9.87820816040039
    5. '   ' → logprob: -11.00320816040039
    6. 'data' → logprob: -11.37820816040039
    7. 'params' → logprob: -12.37820816040039
    8. 'regions' → logprob: -12.37820816040039
    9. '```' → logprob: -12.62820816040039
    10. '           ' → logprob: -13.12820816040039

Token 1415: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.34927746653556824
    2. 'expected' → logprob: -1.2242774963378906
    3. 'profit' → logprob: -7.474277496337891
    4. '   ' → logprob: -8.72427749633789
    5. 'profits' → logprob: -10.47427749633789
    6. '           ' → logprob: -10.97427749633789
    7. ' expected' → logprob: -11.09927749633789
    8. 'expect' → logprob: -11.47427749633789
    9. '	expected' → logprob: -11.97427749633789
    10. 'exp' → logprob: -12.22427749633789

Token 1416: ' parse' (ID: 8420)
  Prédit: 'expected'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'expected' → logprob: -0.0005129986093379557
    2. 'profit' → logprob: -8.500513076782227
    3. 'regions' → logprob: -9.125513076782227
    4. '       ' → logprob: -9.625513076782227
    5. 'profits' → logprob: -10.250513076782227
    6. ' expected' → logprob: -10.750513076782227
    7. 'parameters' → logprob: -10.875513076782227
    8. 'params' → logprob: -11.000513076782227
    9. '   ' → logprob: -11.125513076782227
    10. '#' → logprob: -12.375513076782227

Token 1417: ' E' (ID: 457)
  Prédit: 'expected'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'expected' → logprob: -0.000217006730963476
    2. '       ' → logprob: -9.37521743774414
    3. 'profit' → logprob: -9.37521743774414
    4. ' expected' → logprob: -10.37521743774414
    5. '   ' → logprob: -12.00021743774414
    6. '           ' → logprob: -12.37521743774414
    7. 'profits' → logprob: -13.12521743774414
    8. '
' → logprob: -14.00021743774414
    9. 'live' → logprob: -14.37521743774414
    10. 'data' → logprob: -14.37521743774414

Token 1418: ':' (ID: 25)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.9939581751823425
    2. 'x' → logprob: -1.2439582347869873
    3. '_profit' → logprob: -1.8689582347869873
    4. '_expected' → logprob: -2.8689582347869873
    5. 'expected' → logprob: -3.1189582347869873
    6. 'profit' → logprob: -3.2439582347869873
    7. 'xp' → logprob: -4.493957996368408
    8. '_lines' → logprob: -4.618957996368408
    9. '_list' → logprob: -5.118957996368408
    10. '_rows' → logprob: -5.743957996368408

Token 1419: ' C' (ID: 363)
  Prédit: 'expected'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'expected' → logprob: -0.1678740233182907
    2. '       ' → logprob: -2.0428740978240967
    3. ' expected' → logprob: -4.792873859405518
    4. 'e' → logprob: -4.792873859405518
    5. 'E' → logprob: -5.042873859405518
    6. '           ' → logprob: -6.542873859405518
    7. '               ' → logprob: -8.917874336242676
    8. '   ' → logprob: -9.042874336242676
    9. ' e' → logprob: -9.792874336242676
    10. ' E' → logprob: -10.167874336242676

Token 1420: ' rows' (ID: 13585)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.18179671466350555
    2. ' =' → logprob: -3.4317967891693115
    3. '
' → logprob: -3.5567967891693115
    4. 'expected' → logprob: -3.6817967891693115
    5. '_lines' → logprob: -4.056796550750732
    6. 'lines' → logprob: -4.181796550750732
    7. ' lines' → logprob: -4.431796550750732
    8. '=' → logprob: -4.931796550750732
    9. 'for' → logprob: -5.181796550750732
    10. 'rows' → logprob: -5.306796550750732

Token 1421: ' *' (ID: 425)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.000556012790184468
    2. 'E' → logprob: -8.250555992126465
    3. 'for' → logprob: -9.125555992126465
    4. 'expected' → logprob: -9.875555992126465
    5. '
' → logprob: -10.250555992126465
    6. '           ' → logprob: -10.500555992126465
    7. '   ' → logprob: -10.875555992126465
    8. ' for' → logprob: -11.250555992126465
    9. 'e' → logprob: -11.500555992126465
    10. 'self' → logprob: -12.250555992126465

Token 1422: ' D' (ID: 415)
  Prédit: 'D'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'D' → logprob: -3.023293538717553e-05
    2. ' D' → logprob: -10.625030517578125
    3. '
' → logprob: -13.250030517578125
    4. 'C' → logprob: -13.250030517578125
    5. '[D' → logprob: -13.625030517578125
    6. 'for' → logprob: -14.125030517578125
    7. '       ' → logprob: -16.000030517578125
    8. 'X' → logprob: -16.500030517578125
    9. '[
' → logprob: -16.625030517578125
    10. '           ' → logprob: -16.875030517578125

Token 1423: ' columns' (ID: 15697)
  Prédit: ' lines'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' lines' → logprob: -0.13499006628990173
    2. 'lines' → logprob: -2.1349899768829346
    3. 'times' → logprob: -6.509990215301514
    4. '_lines' → logprob: -6.509990215301514
    5. '
' → logprob: -6.634990215301514
    6. 'rows' → logprob: -6.884990215301514
    7. '       ' → logprob: -7.759990215301514
    8. '           ' → logprob: -7.759990215301514
    9. '   ' → logprob: -7.884990215301514
    10. ' times' → logprob: -8.134989738464355

Token 1424: ' each' (ID: 2454)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0012976157013326883
    2. 'expected' → logprob: -7.626297473907471
    3. 'E' → logprob: -7.751297473907471
    4. 'e' → logprob: -8.251297950744629
    5. '
' → logprob: -10.001297950744629
    6. '   ' → logprob: -10.626297950744629
    7. '           ' → logprob: -10.751297950744629
    8. '               ' → logprob: -11.126297950744629
    9. ' expected' → logprob: -12.876297950744629
    10. '        
' → logprob: -13.126297950744629

Token 1425: ' (' (ID: 350)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0008319015032611787
    2. '
' → logprob: -7.2508320808410645
    3. 'E' → logprob: -9.250831604003906
    4. '   ' → logprob: -11.500831604003906
    5. 'e' → logprob: -12.125831604003906
    6. '        
' → logprob: -12.125831604003906
    7. '           ' → logprob: -13.000831604003906
    8. '	' → logprob: -14.375831604003906
    9. ' E' → logprob: -15.000831604003906
    10. '               ' → logprob: -15.250831604003906

Token 1426: 'for' (ID: 1938)
  Prédit: '[
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[
' → logprob: -0.5746991634368896
    2. '[' → logprob: -2.4496991634368896
    3. '[]
' → logprob: -2.5746991634368896
    4. '       ' → logprob: -3.0746991634368896
    5. 'self' → logprob: -3.3246991634368896
    6. '[e' → logprob: -3.5746991634368896
    7. '
' → logprob: -3.6996991634368896
    8. '[E' → logprob: -3.8246991634368896
    9. '[self' → logprob: -3.9496991634368896
    10. ')' → logprob: -4.074699401855469

Token 1427: ' profit' (ID: 15971)
  Prédit: 'expected'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'expected' → logprob: -0.17024827003479004
    2. 'profit' → logprob: -2.67024827003479
    3. 'self' → logprob: -3.92024827003479
    4. 'region' → logprob: -4.045248031616211
    5. 'e' → logprob: -4.170248031616211
    6. '_expected' → logprob: -4.545248031616211
    7. 'r' → logprob: -5.045248031616211
    8. 'range' → logprob: -5.170248031616211
    9. ' expected' → logprob: -6.545248031616211
    10. '_live' → logprob: -6.795248031616211

Token 1428: ')
' (ID: 446)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.14603020250797272
    2. ')
' → logprob: -2.8960301876068115
    3. '):
' → logprob: -3.2710301876068115
    4. ')' → logprob: -3.3960301876068115
    5. ' lines' → logprob: -5.396030426025391
    6. '):' → logprob: -6.396030426025391
    7. ' for' → logprob: -7.271030426025391
    8. '           ' → logprob: -7.646030426025391
    9. '
' → logprob: -7.771030426025391
    10. ',' → logprob: -7.896030426025391

Token 1429: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00012713817704934627
    2. 'E' → logprob: -9.250126838684082
    3. 'e' → logprob: -10.750126838684082
    4. '   ' → logprob: -12.250126838684082
    5. '
' → logprob: -13.250126838684082
    6. 'data' → logprob: -13.875126838684082
    7. '           ' → logprob: -14.250126838684082
    8. 'profit' → logprob: -15.000126838684082
    9. '	' → logprob: -15.500126838684082
    10. '        
' → logprob: -15.625126838684082

Token 1430: ' expected' (ID: 5930)
  Prédit: 'expected'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'expected' (adapté à ' expected') → logprob: -0.28935033082962036
    2. 'e' → logprob: -2.1643502712249756
    3. '       ' → logprob: -2.1643502712249756
    4. 'E' → logprob: -4.289350509643555
    5. 'profit' → logprob: -4.914350509643555
    6. '           ' → logprob: -8.789350509643555
    7. '   ' → logprob: -9.039350509643555
    8. ' expected' → logprob: -9.164350509643555
    9. '```' → logprob: -10.289350509643555
    10. 'profits' → logprob: -10.539350509643555

Token 1431: '_profit' (ID: 186239)
  Prédit: '_profit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_profit' → logprob: -0.0002547832846175879
    2. '_pro' → logprob: -8.37525463104248
    3. '_prof' → logprob: -11.62525463104248
    4. 'profit' → logprob: -11.75025463104248
    5. '_' → logprob: -13.12525463104248
    6. 's' → logprob: -13.37525463104248
    7. '=' → logprob: -13.75025463104248
    8. '_values' → logprob: -14.25025463104248
    9. ' =' → logprob: -14.50025463104248
    10. '_line' → logprob: -14.75025463104248

Token 1432: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5766240954399109
    2. ' =' → logprob: -0.8266240954399109
    3. '_rows' → logprob: -8.201623916625977
    4. '=[]
' → logprob: -9.076623916625977
    5. '=[]' → logprob: -9.451623916625977
    6. '_values' → logprob: -9.576623916625977
    7. '   ' → logprob: -10.326623916625977
    8. '_lines' → logprob: -10.326623916625977
    9. '_data' → logprob: -10.451623916625977
    10. '       ' → logprob: -11.201623916625977

Token 1433: ' []
' (ID: 8911)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.06791510432958603
    2. '[]
' → logprob: -3.317915201187134
    3. '[
' → logprob: -3.567915201187134
    4. '[[' → logprob: -7.317914962768555
    5. '[]' → logprob: -7.817914962768555
    6. '[List' → logprob: -9.817914962768555
    7. ' [' → logprob: -10.442914962768555
    8. '[array' → logprob: -10.817914962768555
    9. '[self' → logprob: -11.067914962768555
    10. '[list' → logprob: -12.192914962768555

Token 1434: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.08047163486480713
    2. 'for' → logprob: -2.5804715156555176
    3. ' for' → logprob: -6.455471515655518
    4. '   ' → logprob: -12.455471992492676
    5. '           ' → logprob: -12.955471992492676
    6. '	for' → logprob: -13.205471992492676
    7. '	' → logprob: -15.455471992492676
    8. '               ' → logprob: -15.705471992492676
    9. '        
' → logprob: -17.20547103881836
    10. ' ' → logprob: -17.45547103881836

Token 1435: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.006790205370634794
    2. '       ' → logprob: -5.0067901611328125
    3. ' for' → logprob: -9.506790161132812
    4. '   ' → logprob: -15.006790161132812
    5. '	for' → logprob: -16.256790161132812
    6. '           ' → logprob: -17.006790161132812
    7. 'while' → logprob: -17.756790161132812
    8. '
' → logprob: -19.006790161132812
    9. '               ' → logprob: -19.631790161132812
    10. '```' → logprob: -20.006790161132812

Token 1436: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.00045140698784962296
    2. '_range' → logprob: -8.37545108795166
    3. '_i' → logprob: -9.25045108795166
    4. ' _' → logprob: -9.62545108795166
    5. '_c' → logprob: -10.75045108795166
    6. '_r' → logprob: -10.87545108795166
    7. '_region' → logprob: -11.50045108795166
    8. 'i' → logprob: -13.12545108795166
    9. '_row' → logprob: -13.37545108795166
    10. '_C' → logprob: -13.87545108795166

Token 1437: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.4775303602218628
    2. '_' → logprob: -0.9775303602218628
    3. 'in' → logprob: -5.727530479431152
    4. 'range' → logprob: -9.227530479431152
    5. 'i' → logprob: -10.227530479431152
    6. ' _' → logprob: -10.852530479431152
    7. ' ' → logprob: -11.102530479431152
    8. ' range' → logprob: -11.477530479431152
    9. '_range' → logprob: -12.227530479431152
    10. '   ' → logprob: -12.852530479431152

Token 1438: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.00043102685594931245
    2. ' range' → logprob: -7.750431060791016
    3. '
' → logprob: -15.625431060791016
    4. '   ' → logprob: -16.625431060791016
    5. '	range' → logprob: -18.750431060791016
    6. ' ' → logprob: -18.750431060791016
    7. '  ' → logprob: -19.125431060791016
    8. ')' → logprob: -19.375431060791016
    9. '(range' → logprob: -19.375431060791016
    10. '_range' → logprob: -19.375431060791016

Token 1439: '(C' (ID: 5559)
  Prédit: 'C'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'C' → logprob: -0.0041440497152507305
    2. 'self' → logprob: -5.504144191741943
    3. '(C' → logprob: -10.504143714904785
    4. ' C' → logprob: -10.504143714904785
    5. 'range' → logprob: -12.379143714904785
    6. ' self' → logprob: -12.629143714904785
    7. '(self' → logprob: -13.379143714904785
    8. '_C' → logprob: -14.129143714904785
    9. '   ' → logprob: -15.004143714904785
    10. '	C' → logprob: -15.504143714904785

Token 1440: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.012903249822556973
    2. '):' → logprob: -4.637903213500977
    3. '           ' → logprob: -6.262903213500977
    4. '       ' → logprob: -6.887903213500977
    5. ':
' → logprob: -9.137903213500977
    6. ':' → logprob: -10.137903213500977
    7. '):
' → logprob: -10.387903213500977
    8. '   ' → logprob: -11.387903213500977
    9. '():
' → logprob: -11.387903213500977
    10. ',' → logprob: -12.512903213500977

Token 1441: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0015821128617972136
    2. 'row' → logprob: -6.626582145690918
    3. 'line' → logprob: -9.001582145690918
    4. ' row' → logprob: -9.501582145690918
    5. ' line' → logprob: -10.251582145690918
    6. '               ' → logprob: -12.001582145690918
    7. 'expected' → logprob: -12.126582145690918
    8. '   ' → logprob: -12.501582145690918
    9. 'lines' → logprob: -13.126582145690918
    10. 'rows' → logprob: -13.626582145690918

Token 1442: ' profit' (ID: 15971)
  Prédit: 'row'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'row' → logprob: -0.04771385341882706
    2. '           ' → logprob: -3.7977137565612793
    3. ' row' → logprob: -4.172713756561279
    4. 'expected' → logprob: -5.172713756561279
    5. 'line' → logprob: -6.047713756561279
    6. 'values' → logprob: -8.672714233398438
    7. 'vals' → logprob: -9.047714233398438
    8. 'nums' → logprob: -9.172714233398438
    9. 'profit' (adapté à ' profit') → logprob: -9.297714233398438
    10. 'parts' → logprob: -9.672714233398438

Token 1443: '_line' (ID: 14418)
  Prédit: '_line'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_line' → logprob: -0.2347075194120407
    2. '_row' → logprob: -2.1097075939178467
    3. ' =' → logprob: -3.1097075939178467
    4. '.append' → logprob: -4.234707355499268
    5. '           ' → logprob: -4.609707355499268
    6. '=' → logprob: -5.359707355499268
    7. 'row' → logprob: -5.734707355499268
    8. '_values' → logprob: -5.734707355499268
    9. '   ' → logprob: -5.859707355499268
    10. 'line' → logprob: -6.484707355499268

Token 1444: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.1602444350719452
    2. ' =' → logprob: -1.9102444648742676
    3. '           ' → logprob: -11.03524398803711
    4. '_values' → logprob: -14.03524398803711
    5. '.extend' → logprob: -14.16024398803711
    6. '       ' → logprob: -14.53524398803711
    7. '               ' → logprob: -14.78524398803711
    8. '.append' → logprob: -15.03524398803711
    9. '   ' → logprob: -15.78524398803711
    10. '+=' → logprob: -15.78524398803711

Token 1445: ' next' (ID: 2613)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.0024805311113595963
    2. ' list' → logprob: -6.002480506896973
    3. 'next' → logprob: -12.252480506896973
    4. '[list' → logprob: -16.62748146057129
    5. '[next' → logprob: -17.00248146057129
    6. '[' → logprob: -17.62748146057129
    7. ' next' → logprob: -17.62748146057129
    8. 'map' → logprob: -18.12748146057129
    9. '   ' → logprob: -19.62748146057129
    10. ' [' → logprob: -19.87748146057129

Token 1446: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.008622374385595322
    2. 'self' → logprob: -4.758622169494629
    3. ' self' → logprob: -12.258622169494629
    4. '           ' → logprob: -13.258622169494629
    5. '       ' → logprob: -15.008622169494629
    6. '=self' → logprob: -15.258622169494629
    7. '
' → logprob: -15.508622169494629
    8. '   ' → logprob: -15.883622169494629
    9. '(' → logprob: -15.883622169494629
    10. '[self' → logprob: -16.133623123168945

Token 1447: '.lines' (ID: 96601)
  Prédit: 'lines'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lines' → logprob: -0.33586442470550537
    2. 'self' → logprob: -1.7108644247055054
    3. '.lines' → logprob: -2.835864543914795
    4. '(self' → logprob: -3.210864543914795
    5. ').' → logprob: -6.585864543914795
    6. ')' → logprob: -6.585864543914795
    7. '(lines' → logprob: -6.835864543914795
    8. '().' → logprob: -7.835864543914795
    9. '_lines' → logprob: -7.960864543914795
    10. ' lines' → logprob: -8.085864067077637

Token 1448: ').' (ID: 741)
  Prédit: '().'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -5.955703818472102e-05
    2. '.strip' → logprob: -10.250059127807617
    3. '           ' → logprob: -11.250059127807617
    4. ').' → logprob: -12.250059127807617
    5. '.split' → logprob: -13.000059127807617
    6. '()' → logprob: -13.000059127807617
    7. '       ' → logprob: -14.625059127807617
    8. '()
' → logprob: -14.875059127807617
    9. '               ' → logprob: -14.875059127807617
    10. '.' → logprob: -15.375059127807617

Token 1449: 'strip' (ID: 23905)
  Prédit: 'strip'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'strip' → logprob: -0.0006506018689833581
    2. 'split' → logprob: -7.500650405883789
    3. 'rstrip' → logprob: -9.250650405883789
    4. ' strip' → logprob: -13.500650405883789
    5. '.strip' → logprob: -17.12565040588379
    6. '_strip' → logprob: -18.75065040588379
    7. '           ' → logprob: -19.00065040588379
    8. '(strip' → logprob: -19.12565040588379
    9. 'str' → logprob: -19.50065040588379
    10. ' split' → logprob: -20.00065040588379

Token 1450: '()
' (ID: 1234)
  Prédit: '().'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.27877309918403625
    2. '           ' → logprob: -1.7787730693817139
    3. '()
' → logprob: -2.778773069381714
    4. '()' → logprob: -5.153773307800293
    5. '.split' → logprob: -5.278773307800293
    6. '
' → logprob: -7.153773307800293
    7. 'split' → logprob: -8.403773307800293
    8. 'tokens' → logprob: -9.278773307800293
    9. ').' → logprob: -10.278773307800293
    10. '               ' → logprob: -10.403773307800293

Token 1451: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00046451209345832467
    2. '       ' → logprob: -8.37546443939209
    3. 'expected' → logprob: -8.87546443939209
    4. '               ' → logprob: -10.12546443939209
    5. 'profit' → logprob: -11.00046443939209
    6. ' expected' → logprob: -11.12546443939209
    7. '   ' → logprob: -12.00046443939209
    8. 'profits' → logprob: -12.50046443939209
    9. 'numbers' → logprob: -12.75046443939209
    10. ' profit' → logprob: -12.75046443939209

Token 1452: ' while' (ID: 2049)
  Prédit: 'profit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'profit' → logprob: -0.6835746169090271
    2. 'profits' → logprob: -0.9335746169090271
    3. 'expected' → logprob: -2.808574676513672
    4. '           ' → logprob: -3.433574676513672
    5. 'values' → logprob: -5.308574676513672
    6. 'row' → logprob: -6.058574676513672
    7. ' profits' → logprob: -7.558574676513672
    8. 'e' → logprob: -7.808574676513672
    9. ' profit' → logprob: -8.183574676513672
    10. '               ' → logprob: -8.433574676513672

Token 1453: ' not' (ID: 625)
  Prédit: 'not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'not' → logprob: -0.0033886220771819353
    2. 'profit' → logprob: -5.753388404846191
    3. ' not' → logprob: -8.503388404846191
    4. 'len' → logprob: -11.878388404846191
    5. ' profit' → logprob: -14.128388404846191
    6. 'prof' → logprob: -15.628388404846191
    7. '(not' → logprob: -15.628388404846191
    8. 'profits' → logprob: -17.128389358520508
    9. 'Profit' → logprob: -17.503389358520508
    10. '_profit' → logprob: -17.628389358520508

Token 1454: ' profit' (ID: 15971)
  Prédit: 'profit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'profit' → logprob: -2.935296834039036e-06
    2. ' profit' → logprob: -12.75000286102295
    3. 'prof' → logprob: -19.000003814697266
    4. '
' → logprob: -19.000003814697266
    5. 'profits' → logprob: -20.125003814697266
    6. 'prob' → logprob: -20.250003814697266
    7. '_profit' → logprob: -21.250003814697266
    8. 'Profit' → logprob: -22.250003814697266
    9. '   ' → logprob: -22.750003814697266
    10. '-profit' → logprob: -22.750003814697266

Token 1455: '_line' (ID: 14418)
  Prédit: 'profit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'profit' → logprob: -0.23253020644187927
    2. '_profit' → logprob: -1.6075302362442017
    3. '_line' → logprob: -5.607530117034912
    4. ' profit' → logprob: -5.857530117034912
    5. '           ' → logprob: -8.23253059387207
    6. '       ' → logprob: -9.23253059387207
    7. '```' → logprob: -9.60753059387207
    8. '=' → logprob: -10.48253059387207
    9. '   ' → logprob: -11.23253059387207
    10. 'yield' → logprob: -11.60753059387207

Token 1456: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.01646644063293934
    2. ':' → logprob: -4.2664666175842285
    3. '==' → logprob: -7.2664666175842285
    4. '():
' → logprob: -8.14146614074707
    5. '           ' → logprob: -8.39146614074707
    6. ' or' → logprob: -8.51646614074707
    7. '.split' → logprob: -9.26646614074707
    8. '               ' → logprob: -9.26646614074707
    9. '):
' → logprob: -9.39146614074707
    10. '       ' → logprob: -9.39146614074707

Token 1457: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.23555642366409302
    2. 'profit' → logprob: -1.6105563640594482
    3. '           ' → logprob: -5.360556602478027
    4. ' profit' → logprob: -5.735556602478027
    5. ':
' → logprob: -7.485556602478027
    6. 'profits' → logprob: -7.735556602478027
    7. ':' → logprob: -7.985556602478027
    8. '_profit' → logprob: -8.235556602478027
    9. '=' → logprob: -8.610556602478027
    10. '                
' → logprob: -9.860556602478027

Token 1458: ' profit' (ID: 15971)
  Prédit: 'profit'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'profit' (adapté à ' profit') → logprob: -0.005601072683930397
    2. ' profit' → logprob: -5.630600929260254
    3. '           ' → logprob: -6.755600929260254
    4. '               ' → logprob: -7.130600929260254
    5. '   ' → logprob: -11.505600929260254
    6. 'prof' → logprob: -12.130600929260254
    7. 'profits' → logprob: -12.255600929260254
    8. '                   ' → logprob: -12.255600929260254
    9. '_profit' → logprob: -12.755600929260254
    10. '	pro' → logprob: -13.505600929260254

Token 1459: '_line' (ID: 14418)
  Prédit: '_line'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_line' → logprob: -0.4766415059566498
    2. '=' → logprob: -0.9766415357589722
    3. ' =' → logprob: -6.601641654968262
    4. 'profit' → logprob: -7.226641654968262
    5. '_profit' → logprob: -8.101641654968262
    6. 'line' → logprob: -9.601641654968262
    7. '           ' → logprob: -10.226641654968262
    8. '=line' → logprob: -10.601641654968262
    9. '_lines' → logprob: -11.601641654968262
    10. '=
' → logprob: -11.976641654968262

Token 1460: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.01815064437687397
    2. ' =' → logprob: -4.018150806427002
    3. '=line' → logprob: -14.893150329589844
    4. '=
' → logprob: -15.143150329589844
    5. '           ' → logprob: -17.268150329589844
    6. '   ' → logprob: -17.393150329589844
    7. '＝' → logprob: -17.768150329589844
    8. '+=' → logprob: -18.268150329589844
    9. '               ' → logprob: -19.143150329589844
    10. ' ' → logprob: -19.268150329589844

Token 1461: ' next' (ID: 2613)
  Prédit: 'next'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'next' → logprob: -0.00015860427811276168
    2. ' next' → logprob: -8.750158309936523
    3. '(next' → logprob: -16.500158309936523
    4. 'self' → logprob: -18.625158309936523
    5. '           ' → logprob: -19.000158309936523
    6. '               ' → logprob: -20.125158309936523
    7. '	next' → logprob: -20.375158309936523
    8. '[next' → logprob: -20.625158309936523
    9. '.next' → logprob: -20.750158309936523
    10. '_next' → logprob: -22.250158309936523

Token 1462: '(self' (ID: 2402)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.5761625170707703
    2. '(self' → logprob: -0.8261625170707703
    3. ' self' → logprob: -8.576162338256836
    4. '[self' → logprob: -11.201162338256836
    5. '=self' → logprob: -11.451162338256836
    6. '
' → logprob: -11.951162338256836
    7. '	self' → logprob: -14.701162338256836
    8. '           ' → logprob: -14.701162338256836
    9. ',self' → logprob: -14.701162338256836
    10. ' ' → logprob: -14.826162338256836

Token 1463: '.lines' (ID: 96601)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.00618355255573988
    2. 'lines' → logprob: -5.381183624267578
    3. '.lines' → logprob: -6.631183624267578
    4. '(self' → logprob: -8.381183624267578
    5. ' self' → logprob: -12.256183624267578
    6. '_lines' → logprob: -12.631183624267578
    7. '(lines' → logprob: -13.381183624267578
    8. '[self' → logprob: -13.631183624267578
    9. '
' → logprob: -13.631183624267578
    10. '.self' → logprob: -13.756183624267578

Token 1464: ').' (ID: 741)
  Prédit: ').'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ').' → logprob: -6.551721889991313e-05
    2. '.strip' → logprob: -10.250065803527832
    3. '()).' → logprob: -11.000065803527832
    4. '().' → logprob: -11.750065803527832
    5. '               ' → logprob: -12.750065803527832
    6. '           ' → logprob: -13.375065803527832
    7. ')' → logprob: -15.000065803527832
    8. ')
' → logprob: -15.250065803527832
    9. '       ' → logprob: -15.375065803527832
    10. '').' → logprob: -16.375064849853516

Token 1465: 'strip' (ID: 23905)
  Prédit: 'strip'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'strip' → logprob: -2.3676733690081164e-05
    2. 'split' → logprob: -10.75002384185791
    3. ' strip' → logprob: -13.50002384185791
    4. 'rstrip' → logprob: -14.12502384185791
    5. '.strip' → logprob: -18.000022888183594
    6. '(strip' → logprob: -18.625022888183594
    7. '_strip' → logprob: -19.625022888183594
    8. 'stripe' → logprob: -20.125022888183594
    9. 'str' → logprob: -20.500022888183594
    10. 'Strip' → logprob: -21.625022888183594

Token 1466: '()
' (ID: 1234)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.05027168244123459
    2. '()
' → logprob: -3.42527174949646
    3. '
' → logprob: -4.175271511077881
    4. '()' → logprob: -7.550271511077881
    5. ')
' → logprob: -8.300271987915039
    6. ',' → logprob: -8.800271987915039
    7. '               ' → logprob: -10.175271987915039
    8. ')' → logprob: -10.300271987915039
    9. '().' → logprob: -10.425271987915039
    10. '())
' → logprob: -11.300271987915039

Token 1467: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00023238400171976537
    2. 'profit' → logprob: -9.000232696533203
    3. '               ' → logprob: -10.625232696533203
    4. '
' → logprob: -10.750232696533203
    5. ' profit' → logprob: -10.875232696533203
    6. '       ' → logprob: -11.250232696533203
    7. 'expected' → logprob: -11.750232696533203
    8. 'profits' → logprob: -12.125232696533203
    9. 'tokens' → logprob: -12.625232696533203
    10. '   ' → logprob: -13.125232696533203

Token 1468: ' row' (ID: 5225)
  Prédit: 'profits'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'profits' → logprob: -1.0930509567260742
    2. 'profit' → logprob: -1.3430509567260742
    3. 'expected' → logprob: -1.4680509567260742
    4. 'row' (adapté à ' row') → logprob: -2.343050956726074
    5. '           ' → logprob: -2.843050956726074
    6. 'values' → logprob: -4.593050956726074
    7. 'e' → logprob: -6.093050956726074
    8. 'numbers' → logprob: -6.343050956726074
    9. 'nums' → logprob: -6.968050956726074
    10. 'vals' → logprob: -7.343050956726074

Token 1469: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.387582004070282
    2. '=' → logprob: -1.1375820636749268
    3. '           ' → logprob: -7.637581825256348
    4. '_values' → logprob: -8.887581825256348
    5. 'values' → logprob: -10.637581825256348
    6. 'profit' → logprob: -11.387581825256348
    7. '_profit' → logprob: -11.387581825256348
    8. '               ' → logprob: -11.887581825256348
    9. '_tokens' → logprob: -11.887581825256348
    10. '   ' → logprob: -11.887581825256348

Token 1470: ' list' (ID: 1562)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.0031796174589544535
    2. ' list' → logprob: -5.753179550170898
    3. '[list' → logprob: -13.253179550170898
    4. '[' → logprob: -15.753179550170898
    5. ' [' → logprob: -17.5031795501709
    6. '           ' → logprob: -18.7531795501709
    7. '=list' → logprob: -19.8781795501709
    8. '	list' → logprob: -20.6281795501709
    9. '   ' → logprob: -21.0031795501709
    10. '[List' → logprob: -21.0031795501709

Token 1471: '(map' (ID: 16946)
  Prédit: '(map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(map' → logprob: -3.292907877039397e-06
    2. 'map' → logprob: -12.87500286102295
    3. '(' → logprob: -14.75000286102295
    4. '(int' → logprob: -16.375003814697266
    5. '(
' → logprob: -16.750003814697266
    6. '	map' → logprob: -18.000003814697266
    7. '   ' → logprob: -18.125003814697266
    8. '[int' → logprob: -18.875003814697266
    9. '.map' → logprob: -19.000003814697266
    10. '
' → logprob: -19.625003814697266

Token 1472: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.011062555946409702
    2. 'int' → logprob: -4.5110626220703125
    3. '[int' → logprob: -11.386062622070312
    4. '(
' → logprob: -14.386062622070312
    5. '
' → logprob: -14.511062622070312
    6. '(' → logprob: -14.511062622070312
    7. '<int' → logprob: -15.011062622070312
    8. '=int' → logprob: -15.011062622070312
    9. '   ' → logprob: -15.386062622070312
    10. '           ' → logprob: -15.511062622070312

Token 1473: ',' (ID: 11)
  Prédit: '(pro'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(pro' → logprob: -0.0030637492891401052
    2. 'profit' → logprob: -6.378063678741455
    3. ',' → logprob: -6.628063678741455
    4. '(' → logprob: -11.128064155578613
    5. ')' → logprob: -11.628064155578613
    6. ' profit' → logprob: -12.628064155578613
    7. '	pro' → logprob: -13.503064155578613
    8. '(
' → logprob: -13.753064155578613
    9. ' (' → logprob: -13.878064155578613
    10. '_profit' → logprob: -13.878064155578613

Token 1474: ' profit' (ID: 15971)
  Prédit: 'profit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'profit' → logprob: -0.00020497082732617855
    2. ' profit' → logprob: -8.500205039978027
    3. 'prof' → logprob: -13.625205039978027
    4. 'profits' → logprob: -16.62520408630371
    5. '           ' → logprob: -17.50020408630371
    6. 'Profit' → logprob: -18.00020408630371
    7. '_profit' → logprob: -18.12520408630371
    8. '   ' → logprob: -18.25020408630371
    9. '               ' → logprob: -18.37520408630371
    10. 'profile' → logprob: -18.87520408630371

Token 1475: '_line' (ID: 14418)
  Prédit: 'profit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'profit' → logprob: -0.18620888888835907
    2. '_profit' → logprob: -2.686208963394165
    3. ' profit' → logprob: -2.811208963394165
    4. '_line' → logprob: -3.436208963394165
    5. '.readline' → logprob: -6.561208724975586
    6. '.split' → logprob: -6.811208724975586
    7. 'import' → logprob: -6.936208724975586
    8. 'profits' → logprob: -7.186208724975586
    9. 'split' → logprob: -7.436208724975586
    10. ')' → logprob: -7.436208724975586

Token 1476: '.split' (ID: 10347)
  Prédit: '.split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.split' → logprob: -0.019663620740175247
    2. '.strip' → logprob: -4.7696638107299805
    3. '.readline' → logprob: -5.5196638107299805
    4. '().' → logprob: -5.7696638107299805
    5. '(split' → logprob: -6.5196638107299805
    6. '.rstrip' → logprob: -7.6446638107299805
    7. '))' → logprob: -8.26966381072998
    8. 'split' → logprob: -8.39466381072998
    9. '(pro' → logprob: -8.51966381072998
    10. '.pop' → logprob: -8.51966381072998

Token 1477: '()))
' (ID: 24521)
  Prédit: '))
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))
' → logprob: -0.25931021571159363
    2. '))' → logprob: -1.509310245513916
    3. '()))
' → logprob: -5.134310245513916
    4. '()))' → logprob: -7.259310245513916
    5. '           ' → logprob: -7.384310245513916
    6. '               ' → logprob: -9.259309768676758
    7. '()' → logprob: -11.009309768676758
    8. '       ' → logprob: -11.134309768676758
    9. '))
' → logprob: -13.384309768676758
    10. ' ))
' → logprob: -13.509309768676758

Token 1478: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -6.8497312895488e-05
    2. '               ' → logprob: -10.750068664550781
    3. '<|end|>' → logprob: -11.000068664550781
    4. ')' → logprob: -11.375068664550781
    5. '       ' → logprob: -12.125068664550781
    6. '                   ' → logprob: -12.375068664550781
    7. ',' → logprob: -13.250068664550781
    8. '                       ' → logprob: -13.750068664550781
    9. '          ' → logprob: -13.875068664550781
    10. '                           ' → logprob: -14.250068664550781

Token 1479: ' #' (ID: 1069)
  Prédit: 'expected'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'expected' → logprob: -0.48710381984710693
    2. '           ' → logprob: -0.9871038198471069
    3. 'assert' → logprob: -5.2371039390563965
    4. '       ' → logprob: -5.4871039390563965
    5. ' expected' → logprob: -6.3621039390563965
    6. 'if' → logprob: -6.8621039390563965
    7. 'while' → logprob: -7.8621039390563965
    8. '
' → logprob: -9.362103462219238
    9. 'yield' → logprob: -9.362103462219238
    10. '               ' → logprob: -9.862103462219238

Token 1480: ' There' (ID: 3274)
  Prédit: 'expected'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'expected' → logprob: -0.009744521230459213
    2. 'assert' → logprob: -5.134744644165039
    3. ' expected' → logprob: -6.509744644165039
    4. 'while' → logprob: -7.009744644165039
    5. '           ' → logprob: -7.134744644165039
    6. 'if' → logprob: -7.634744644165039
    7. '       ' → logprob: -9.384744644165039
    8. ' assert' → logprob: -10.884744644165039
    9. '#' → logprob: -11.509744644165039
    10. ' while' → logprob: -11.884744644165039

Token 1481: ' could' (ID: 2023)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -1.1352320909500122
    2. 'should' → logprob: -1.7602320909500122
    3. 'are' → logprob: -2.2602319717407227
    4. ' should' → logprob: -2.3852319717407227
    5. 'may' → logprob: -2.8852319717407227
    6. '```' → logprob: -3.0102319717407227
    7. ' might' → logprob: -3.1352319717407227
    8. ' may' → logprob: -3.2602319717407227
    9. ' are' → logprob: -3.7602319717407227
    10. 'is' → logprob: -3.7602319717407227

Token 1482: ' be' (ID: 413)
  Prédit: 'be'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'be' → logprob: -0.007050313521176577
    2. ' be' → logprob: -5.132050514221191
    3. 'may' → logprob: -7.132050514221191
    4. 'might' → logprob: -8.882050514221191
    5. '           ' → logprob: -9.007050514221191
    6. 'possibly' → logprob: -10.882050514221191
    7. '```' → logprob: -11.632050514221191
    8. 'continue' → logprob: -11.882050514221191
    9. '#' → logprob: -12.257050514221191
    10. '_be' → logprob: -12.507050514221191

Token 1483: ' multiple' (ID: 7598)
  Prédit: 'more'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'more' → logprob: -0.7636492252349854
    2. 'len' → logprob: -1.0136492252349854
    3. 'extra' → logprob: -3.0136492252349854
    4. 'f' → logprob: -3.6386492252349854
    5. 'cases' → logprob: -3.8886492252349854
    6. 'days' → logprob: -4.138648986816406
    7. 'rows' → logprob: -4.513648986816406
    8. 'multiple' → logprob: -4.638648986816406
    9. 'lines' → logprob: -4.763648986816406
    10. 'a' → logprob: -5.388648986816406

Token 1484: ' lines' (ID: 8698)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' → logprob: -1.032348871231079
    2. 'rows' → logprob: -1.157348871231079
    3. 'lines' → logprob: -1.782348871231079
    4. ' lines' → logprob: -2.282348871231079
    5. 'row' → logprob: -3.782348871231079
    6. ' while' → logprob: -3.907348871231079
    7. '           ' → logprob: -5.0323486328125
    8. ' rows' → logprob: -5.7823486328125
    9. 'for' → logprob: -6.0323486328125
    10. '               ' → logprob: -6.6573486328125

Token 1485: ' if' (ID: 538)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.2560454308986664
    2. '           ' → logprob: -1.8810454607009888
    3. ' while' → logprob: -2.631045341491699
    4. '               ' → logprob: -6.631045341491699
    5. 'for' → logprob: -10.1310453414917
    6. '                   ' → logprob: -10.3810453414917
    7. '       ' → logprob: -10.6310453414917
    8. ',' → logprob: -11.3810453414917
    9. ' for' → logprob: -12.0060453414917
    10. 'if' → logprob: -12.1310453414917

Token 1486: ' data' (ID: 1238)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.0005639957962557673
    2. ' len' → logprob: -7.500564098358154
    3. '           ' → logprob: -11.625563621520996
    4. '   ' → logprob: -14.250563621520996
    5. '
' → logprob: -15.125563621520996
    6. '  ' → logprob: -15.250563621520996
    7. '          ' → logprob: -15.375563621520996
    8. '               ' → logprob: -15.750563621520996
    9. '(len' → logprob: -16.000564575195312
    10. '    ' → logprob: -16.375564575195312

Token 1487: ' array' (ID: 2644)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.08992870151996613
    2. '           ' → logprob: -3.46492862701416
    3. 'while' → logprob: -4.46492862701416
    4. ' len' → logprob: -4.96492862701416
    5. 'length' → logprob: -4.96492862701416
    6. '               ' → logprob: -5.83992862701416
    7. '_len' → logprob: -5.83992862701416
    8. 's' → logprob: -6.08992862701416
    9. '          ' → logprob: -6.08992862701416
    10. '<len' → logprob: -6.21492862701416

Token 1488: ' split' (ID: 12648)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.11647623777389526
    2. '           ' → logprob: -2.61647629737854
    3. ' while' → logprob: -3.36647629737854
    4. '               ' → logprob: -6.991476058959961
    5. 'for' → logprob: -7.366476058959961
    6. '       ' → logprob: -8.616476058959961
    7. '
' → logprob: -8.991476058959961
    8. ',' → logprob: -9.491476058959961
    9. ' for' → logprob: -9.491476058959961
    10. 'if' → logprob: -9.616476058959961

Token 1489: ' per' (ID: 777)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.20156361162662506
    2. '           ' → logprob: -2.451563596725464
    3. ' while' → logprob: -2.951563596725464
    4. 'for' → logprob: -3.826563596725464
    5. '               ' → logprob: -4.701563835144043
    6. ' for' → logprob: -5.076563835144043
    7. 'len' → logprob: -5.951563835144043
    8. ',' → logprob: -7.451563835144043
    9. '>' → logprob: -7.701563835144043
    10. '```' → logprob: -7.701563835144043

Token 1490: ' day' (ID: 2163)
  Prédit: 'row'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'row' → logprob: -0.36177128553390503
    2. 'line' → logprob: -1.3617713451385498
    3. 'day' → logprob: -3.48677134513855
    4. 'region' → logprob: -5.486771106719971
    5. 'lines' → logprob: -5.736771106719971
    6. 'rows' → logprob: -5.736771106719971
    7. 'columns' → logprob: -6.861771106719971
    8. 'multiple' → logprob: -6.861771106719971
    9. 'column' → logprob: -6.986771106719971
    10. 'split' → logprob: -7.361771106719971

Token 1491: '?
' (ID: 3901)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.39186981320381165
    2. 'while' → logprob: -1.2668697834014893
    3. ' while' → logprob: -3.2668697834014893
    4. '       ' → logprob: -5.641870021820068
    5. '               ' → logprob: -7.891870021820068
    6. '
' → logprob: -8.76686954498291
    7. 'if' → logprob: -9.01686954498291
    8. 'for' → logprob: -9.89186954498291
    9. ' if' → logprob: -10.39186954498291
    10. ',' → logprob: -11.01686954498291

Token 1492: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.002165486803278327
    2. 'while' → logprob: -6.5021653175354
    3. ' while' → logprob: -8.127165794372559
    4. 'expected' → logprob: -8.377165794372559
    5. 'if' → logprob: -9.627165794372559
    6. ' if' → logprob: -10.502165794372559
    7. '               ' → logprob: -11.502165794372559
    8. '
' → logprob: -12.002165794372559
    9. ' expected' → logprob: -12.002165794372559
    10. 'for' → logprob: -12.002165794372559

Token 1493: ' #' (ID: 1069)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.31905636191368103
    2. '           ' → logprob: -1.3190563917160034
    3. ' while' → logprob: -5.194056510925293
    4. '       ' → logprob: -8.569056510925293
    5. '
' → logprob: -11.069056510925293
    6. '               ' → logprob: -11.194056510925293
    7. 'if' → logprob: -12.694056510925293
    8. '   ' → logprob: -13.569056510925293
    9. 'for' → logprob: -13.694056510925293
    10. '```' → logprob: -14.194056510925293

Token 1494: ' Problem' (ID: 26113)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.050263747572898865
    2. '           ' → logprob: -3.0502636432647705
    3. ' while' → logprob: -6.42526388168335
    4. '       ' → logprob: -10.550263404846191
    5. 'if' → logprob: -10.925263404846191
    6. '
' → logprob: -12.425263404846191
    7. '               ' → logprob: -13.050263404846191
    8. 'for' → logprob: -13.800263404846191
    9. 'expected' → logprob: -13.925263404846191
    10. '   ' → logprob: -14.175263404846191

Token 1495: ' shows' (ID: 7398)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.5111486315727234
    2. '_lines' → logprob: -2.261148691177368
    3. '_parameters' → logprob: -2.511148691177368
    4. '       ' → logprob: -2.761148691177368
    5. '_tokens' → logprob: -3.511148691177368
    6. '_count' → logprob: -3.886148691177368
    7. ' continues' → logprob: -4.636148452758789
    8. '               ' → logprob: -4.761148452758789
    9. 'count' → logprob: -4.761148452758789
    10. '_counts' → logprob: -4.886148452758789

Token 1496: ' E' (ID: 457)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.04778432473540306
    2. ' while' → logprob: -3.4227843284606934
    3. '           ' → logprob: -4.297784328460693
    4. '
' → logprob: -9.047783851623535
    5. 'for' → logprob: -9.172783851623535
    6. 'row' → logprob: -9.422783851623535
    7. 'if' → logprob: -9.797783851623535
    8. '               ' → logprob: -10.922783851623535
    9. '```' → logprob: -11.547783851623535
    10. 'that' → logprob: -12.047783851623535

Token 1497: ' i' (ID: 575)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.8313215374946594
    2. 'while' → logprob: -0.8313215374946594
    3. ' while' → logprob: -3.0813214778900146
    4. '_row' → logprob: -3.5813214778900146
    5. 'row' → logprob: -4.456321716308594
    6. '
' → logprob: -4.581321716308594
    7. '.extend' → logprob: -4.831321716308594
    8. '       ' → logprob: -5.081321716308594
    9. 'for' → logprob: -5.206321716308594
    10. ' =' → logprob: -6.331321716308594

Token 1498: ',j' (ID: 22712)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.2510586977005005
    2. 's' → logprob: -2.501058578491211
    3. 'f' → logprob: -2.626058578491211
    4. '=' → logprob: -3.001058578491211
    5. 'for' → logprob: -5.626058578491211
    6. 'm' → logprob: -6.001058578491211
    7. 'nd' → logprob: -6.001058578491211
    8. ' =' → logprob: -6.376058578491211
    9. '[n' → logprob: -7.001058578491211
    10. '   ' → logprob: -7.251058578491211

Token 1499: ' in' (ID: 306)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.20846685767173767
    2. 'while' → logprob: -1.83346688747406
    3. ' while' → logprob: -3.5834667682647705
    4. '               ' → logprob: -8.458466529846191
    5. '
' → logprob: -8.958466529846191
    6. '       ' → logprob: -9.083466529846191
    7. '                   ' → logprob: -10.833466529846191
    8. '```' → logprob: -10.958466529846191
    9. 'if' → logprob: -12.208466529846191
    10. 'for' → logprob: -12.333466529846191

Token 1500: ' lines' (ID: 8698)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.20167624950408936
    2. 'for' → logprob: -2.451676368713379
    3. 'row' → logprob: -3.201676368713379
    4. 'while' → logprob: -4.201676368713379
    5. ' range' → logprob: -4.701676368713379
    6. 'len' → logprob: -4.826676368713379
    7. '
' → logprob: -5.326676368713379
    8. 'the' → logprob: -5.451676368713379
    9. '           ' → logprob: -5.826676368713379
    10. '#' → logprob: -6.451676368713379

Token 1501: ',' (ID: 11)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.12286773324012756
    2. 'while' → logprob: -2.2478678226470947
    3. ' while' → logprob: -4.622867584228516
    4. '       ' → logprob: -9.747867584228516
    5. '
' → logprob: -10.122867584228516
    6. '               ' → logprob: -10.372867584228516
    7. ',' → logprob: -11.122867584228516
    8. '#' → logprob: -12.122867584228516
    9. 'for' → logprob: -12.372867584228516
    10. 'if' → logprob: -12.622867584228516

Token 1502: ' but' (ID: 889)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.1916947066783905
    2. '           ' → logprob: -1.816694736480713
    3. ' while' → logprob: -5.191694736480713
    4. '       ' → logprob: -5.191694736480713
    5. 'if' → logprob: -8.316694259643555
    6. 'expected' → logprob: -8.816694259643555
    7. '               ' → logprob: -9.066694259643555
    8. '
' → logprob: -9.316694259643555
    9. 'for' → logprob: -9.691694259643555
    10. '                   ' → logprob: -10.566694259643555

Token 1503: ' sample' (ID: 10176)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.00773805845528841
    2. ' while' → logprob: -5.75773811340332
    3. '           ' → logprob: -6.00773811340332
    4. 'if' → logprob: -6.38273811340332
    5. '#' → logprob: -8.13273811340332
    6. '       ' → logprob: -10.38273811340332
    7. '
' → logprob: -10.63273811340332
    8. 'len' → logprob: -11.13273811340332
    9. 'row' → logprob: -11.25773811340332
    10. 'expected' → logprob: -11.63273811340332

Token 1504: ' input' (ID: 3422)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.5358892679214478
    2. '           ' → logprob: -1.5358892679214478
    3. ' while' → logprob: -2.035889148712158
    4. '
' → logprob: -3.535889148712158
    5. '       ' → logprob: -4.160889148712158
    6. '               ' → logprob: -4.535889148712158
    7. '                   ' → logprob: -6.285889148712158
    8. '            
' → logprob: -6.660889148712158
    9. 'for' → logprob: -7.035889148712158
    10. 'row' → logprob: -7.285889148712158

Token 1505: ' is' (ID: 382)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.1964617669582367
    2. 'while' → logprob: -2.3214616775512695
    3. ' while' → logprob: -2.6964616775512695
    4. '<|end|>' → logprob: -5.8214616775512695
    5. '
' → logprob: -5.9464616775512695
    6. '               ' → logprob: -6.0714616775512695
    7. ',' → logprob: -6.5714616775512695
    8. '       ' → logprob: -7.3214616775512695
    9. ' continues' → logprob: -8.32146167755127
    10. ':' → logprob: -8.57146167755127

Token 1506: ' presented' (ID: 13392)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.14499583840370178
    2. 'row' → logprob: -2.644995927810669
    3. 'not' → logprob: -3.769995927810669
    4. ' len' → logprob: -3.894995927810669
    5. 'complete' → logprob: -4.64499568939209
    6. 'split' → logprob: -6.89499568939209
    7. 'short' → logprob: -6.89499568939209
    8. ' not' → logprob: -7.01999568939209
    9. '[' → logprob: -7.01999568939209
    10. '[len' → logprob: -7.14499568939209

Token 1507: ' concaten' (ID: 121942)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.6054750680923462
    2. 'while' → logprob: -0.8554750680923462
    3. ' while' → logprob: -3.7304749488830566
    4. '               ' → logprob: -5.855474948883057
    5. 'for' → logprob: -7.480474948883057
    6. '
' → logprob: -7.480474948883057
    7. '       ' → logprob: -7.605474948883057
    8. '                   ' → logprob: -8.730475425720215
    9. ',' → logprob: -9.105475425720215
    10. 'if' → logprob: -9.980475425720215

Token 1508: 'ated' (ID: 780)
  Prédit: 'ate'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ate' → logprob: -0.42896002531051636
    2. 'ated' → logprob: -1.1789600849151611
    3. '           ' → logprob: -3.928960084915161
    4. '       ' → logprob: -4.178959846496582
    5. 'ating' → logprob: -6.178959846496582
    6. '   ' → logprob: -6.678959846496582
    7. '               ' → logprob: -7.553959846496582
    8. '
' → logprob: -7.803959846496582
    9. 'ation' → logprob: -8.178959846496582
    10. '```' → logprob: -8.178959846496582

Token 1509: '.
' (ID: 558)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.32583630084991455
    2. 'while' → logprob: -1.3258363008499146
    3. ' while' → logprob: -4.450836181640625
    4. '
' → logprob: -8.325836181640625
    5. '       ' → logprob: -8.325836181640625
    6. '               ' → logprob: -8.450836181640625
    7. ',' → logprob: -10.325836181640625
    8. '                   ' → logprob: -10.700836181640625
    9. 'row' → logprob: -11.325836181640625
    10. '#' → logprob: -11.325836181640625

Token 1510: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.09189286828041077
    2. 'while' → logprob: -2.466892957687378
    3. ' while' → logprob: -6.091892719268799
    4. '       ' → logprob: -7.591892719268799
    5. '
' → logprob: -9.591893196105957
    6. '               ' → logprob: -9.716893196105957
    7. '   ' → logprob: -11.466893196105957
    8. 'if' → logprob: -11.966893196105957
    9. '                   ' → logprob: -12.091893196105957
    10. 'for' → logprob: -12.591893196105957

Token 1511: ' #' (ID: 1069)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.4538622796535492
    2. 'while' → logprob: -1.0788623094558716
    3. ' while' → logprob: -3.828862190246582
    4. 'if' → logprob: -6.203862190246582
    5. '               ' → logprob: -8.203862190246582
    6. '       ' → logprob: -8.203862190246582
    7. ' if' → logprob: -8.578862190246582
    8. '
' → logprob: -8.953862190246582
    9. 'tokens' → logprob: -9.328862190246582
    10. '                   ' → logprob: -10.703862190246582

Token 1512: ' We'll' (ID: 46830)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.13514846563339233
    2. '           ' → logprob: -2.135148525238037
    3. ' while' → logprob: -5.260148525238037
    4. 'if' → logprob: -6.385148525238037
    5. 'expected' → logprob: -6.885148525238037
    6. '       ' → logprob: -9.135148048400879
    7. 'for' → logprob: -9.510148048400879
    8. '               ' → logprob: -10.635148048400879
    9. '
' → logprob: -10.885148048400879
    10. ' if' → logprob: -11.260148048400879

Token 1513: ' consider' (ID: 3331)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.7291229367256165
    2. '           ' → logprob: -1.3541228771209717
    3. ' while' → logprob: -2.3541228771209717
    4. 'continue' → logprob: -2.4791228771209717
    5. 'extend' → logprob: -3.9791228771209717
    6. 'append' → logprob: -4.354123115539551
    7. '
' → logprob: -4.479123115539551
    8. ' continue' → logprob: -4.729123115539551
    9. 'assert' → logprob: -4.979123115539551
    10. 'for' → logprob: -5.479123115539551

Token 1514: ' each' (ID: 2454)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.21420376002788544
    2. 'row' → logprob: -1.9642037153244019
    3. 'len' → logprob: -3.8392038345336914
    4. '           ' → logprob: -3.8392038345336914
    5. 'that' → logprob: -5.339203834533691
    6. ' while' → logprob: -5.714203834533691
    7. '
' → logprob: -7.839203834533691
    8. ' row' → logprob: -8.089203834533691
    9. '               ' → logprob: -8.589203834533691
    10. ' that' → logprob: -9.089203834533691

Token 1515: ' line' (ID: 2543)
  Prédit: 'row'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'row' → logprob: -0.18999242782592773
    2. 'token' → logprob: -2.5649924278259277
    3. 'while' → logprob: -3.1899924278259277
    4. 'value' → logprob: -4.564992427825928
    5. '           ' → logprob: -5.064992427825928
    6. 'for' → logprob: -5.314992427825928
    7. 'len' → logprob: -5.564992427825928
    8. 'day' → logprob: -5.689992427825928
    9. 'element' → logprob: -5.689992427825928
    10. ' row' → logprob: -5.814992427825928

Token 1516: ' is' (ID: 382)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.3687605857849121
    2. ' as' → logprob: -1.743760585784912
    3. 'as' → logprob: -2.993760585784912
    4. 'for' → logprob: -3.743760585784912
    5. '               ' → logprob: -4.618760585784912
    6. 'while' → logprob: -4.618760585784912
    7. '.' → logprob: -4.993760585784912
    8. ' for' → logprob: -5.243760585784912
    9. '.extend' → logprob: -5.493760585784912
    10. '<|end|>' → logprob: -6.493760585784912

Token 1517: ' C' (ID: 363)
  Prédit: 'complete'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'complete' → logprob: -1.267203450202942
    2. 'row' → logprob: -1.517203450202942
    3. '           ' → logprob: -2.2672033309936523
    4. 'the' → logprob: -2.7672033309936523
    5. 'a' → logprob: -2.8922033309936523
    6. 'only' → logprob: -3.1422033309936523
    7. 'just' → logprob: -3.2672033309936523
    8. ' just' → logprob: -3.5172033309936523
    9. ' complete' → logprob: -3.5172033309936523
    10. 'exact' → logprob: -3.7672033309936523

Token 1518: ' integers' (ID: 54912)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.357672780752182
    2. 'for' → logprob: -2.607672691345215
    3. ' for' → logprob: -3.232672691345215
    4. ')' → logprob: -3.232672691345215
    5. '               ' → logprob: -3.357672691345215
    6. '       ' → logprob: -3.732672691345215
    7. 'row' → logprob: -4.857672691345215
    8. '          ' → logprob: -4.982672691345215
    9. '<|end|>' → logprob: -4.982672691345215
    10. 'and' → logprob: -5.107672691345215

Token 1519: ' for' (ID: 395)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.02811029553413391
    2. '<|end|>' → logprob: -4.403110504150391
    3. '<|end|>' → logprob: -5.028110504150391
    4. '
' → logprob: -6.278110504150391
    5. ')' → logprob: -6.403110504150391
    6. ',' → logprob: -6.528110504150391
    7. '               ' → logprob: -7.028110504150391
    8. '       ' → logprob: -7.403110504150391
    9. ')
' → logprob: -7.903110504150391
    10. '.' → logprob: -7.903110504150391

Token 1520: ' a' (ID: 261)
  Prédit: 'each'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'each' → logprob: -0.29422858357429504
    2. 'day' → logprob: -2.4192285537719727
    3. 'that' → logprob: -2.6692285537719727
    4. 'the' → logprob: -2.9192285537719727
    5. 'one' → logprob: -4.169228553771973
    6. 'D' → logprob: -4.919228553771973
    7. 'profit' → logprob: -4.919228553771973
    8. 'days' → logprob: -5.544228553771973
    9. 'row' → logprob: -5.669228553771973
    10. 'a' → logprob: -6.294228553771973

Token 1521: ' day' (ID: 2163)
  Prédit: 'day'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'day' → logprob: -0.220361590385437
    2. 'single' → logprob: -2.2203617095947266
    3. 'region' → logprob: -2.7203617095947266
    4. 'row' → logprob: -4.470361709594727
    5. ' day' → logprob: -5.095361709594727
    6. 'given' → logprob: -5.470361709594727
    7. 'def' → logprob: -7.845361709594727
    8. ' single' → logprob: -8.220361709594727
    9. ' region' → logprob: -8.720361709594727
    10. 'full' → logprob: -8.845361709594727

Token 1522: ' (' (ID: 350)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.005776750389486551
    2. '
' → logprob: -5.880776882171631
    3. ',' → logprob: -6.880776882171631
    4. '<|end|>' → logprob: -7.255776882171631
    5. '<|end|>' → logprob: -8.380776405334473
    6. ' for' → logprob: -8.630776405334473
    7. ')' → logprob: -9.130776405334473
    8. '       ' → logprob: -9.505776405334473
    9. ' and' → logprob: -9.630776405334473
    10. '.' → logprob: -9.755776405334473

Token 1523: '?),' (ID: 95807)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.8873546123504639
    2. '           ' → logprob: -1.7623546123504639
    3. 'and' → logprob: -2.512354612350464
    4. 'row' → logprob: -2.637354612350464
    5. 'for' → logprob: -3.012354612350464
    6. ' so' → logprob: -3.637354612350464
    7. 'while' → logprob: -3.637354612350464
    8. ' and' → logprob: -3.887354612350464
    9. ')
' → logprob: -4.012354850769043
    10. 'if' → logprob: -4.137354850769043

Token 1524: ' the' (ID: 290)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0460902601480484
    2. '#' → logprob: -4.296090126037598
    3. ' and' → logprob: -4.671090126037598
    4. 'and' → logprob: -5.421090126037598
    5. '       ' → logprob: -5.921090126037598
    6. '               ' → logprob: -6.046090126037598
    7. ' but' → logprob: -6.671090126037598
    8. '
' → logprob: -6.671090126037598
    9. 'return' → logprob: -6.921090126037598
    10. ' so' → logprob: -6.921090126037598

Token 1525: ' sample' (ID: 10176)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.12136764079332352
    2. '#' → logprob: -2.7463676929473877
    3. '           ' → logprob: -3.6213676929473877
    4. 'expected' → logprob: -4.871367454528809
    5. '
' → logprob: -5.496367454528809
    6. 'rest' → logprob: -6.121367454528809
    7. 'row' → logprob: -6.121367454528809
    8. 'if' → logprob: -6.746367454528809
    9. ' while' → logprob: -6.746367454528809
    10. 'assert' → logprob: -6.746367454528809

Token 1526: ' input' (ID: 3422)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -1.6333998441696167
    2. ' continues' → logprob: -2.1333999633789062
    3. ' lines' → logprob: -2.6333999633789062
    4. '_lines' → logprob: -2.6333999633789062
    5. 'rows' → logprob: -2.8833999633789062
    6. 'lines' → logprob: -2.8833999633789062
    7. '       ' → logprob: -2.8833999633789062
    8. 'row' → logprob: -3.1333999633789062
    9. ' line' → logprob: -3.2583999633789062
    10. '...' → logprob: -3.2583999633789062

Token 1527: ' seems' (ID: 7890)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.3473138213157654
    2. ' continues' → logprob: -3.09731388092041
    3. '               ' → logprob: -3.34731388092041
    4. '       ' → logprob: -3.59731388092041
    5. 'has' → logprob: -3.97231388092041
    6. 'must' → logprob: -3.97231388092041
    7. 'contin' → logprob: -4.47231388092041
    8. ' has' → logprob: -4.59731388092041
    9. 'should' → logprob: -4.84731388092041
    10. '#' → logprob: -4.84731388092041

Token 1528: ' tricky' (ID: 53009)
  Prédit: 'to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'to' → logprob: -0.03682071715593338
    2. ' to' → logprob: -4.286820888519287
    3. 'consistent' → logprob: -5.161820888519287
    4. 'len' → logprob: -5.536820888519287
    5. 'in' → logprob: -5.786820888519287
    6. 'correct' → logprob: -5.911820888519287
    7. 'not' → logprob: -6.536820888519287
    8. 'like' → logprob: -6.786820888519287
    9. '           ' → logprob: -6.911820888519287
    10. ' consistent' → logprob: -7.161820888519287

Token 1529: '.
' (ID: 558)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.009261677041649818
    2. 'while' → logprob: -5.259261608123779
    3. ' while' → logprob: -6.384261608123779
    4. '       ' → logprob: -7.384261608123779
    5. '<|end|>' → logprob: -8.134262084960938
    6. 'for' → logprob: -8.509262084960938
    7. '               ' → logprob: -8.634262084960938
    8. ' and' → logprob: -8.759262084960938
    9. ',' → logprob: -8.884262084960938
    10. 'and' → logprob: -9.009262084960938

Token 1530: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0075009786523878574
    2. 'while' → logprob: -5.632501125335693
    3. '       ' → logprob: -5.757501125335693
    4. ' while' → logprob: -8.007500648498535
    5. '               ' → logprob: -9.132500648498535
    6. '
' → logprob: -9.257500648498535
    7. 'for' → logprob: -9.382500648498535
    8. ' for' → logprob: -10.757500648498535
    9. '#' → logprob: -11.257500648498535
    10. 'row' → logprob: -11.382500648498535

Token 1531: ' #' (ID: 1069)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.4843989908695221
    2. '           ' → logprob: -0.9843989610671997
    3. 'if' → logprob: -5.35939884185791
    4. ' while' → logprob: -6.10939884185791
    5. 'expected' → logprob: -6.85939884185791
    6. '
' → logprob: -6.98439884185791
    7. '       ' → logprob: -7.10939884185791
    8. '#' (adapté à ' #') → logprob: -8.60939884185791
    9. 'for' → logprob: -9.60939884185791
    10. '               ' → logprob: -9.60939884185791

Token 1532: ' Actually' (ID: 50557)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.3755703866481781
    2. '           ' → logprob: -1.2505704164505005
    3. 'if' → logprob: -4.625570297241211
    4. '       ' → logprob: -5.250570297241211
    5. ' while' → logprob: -5.250570297241211
    6. 'expected' → logprob: -5.750570297241211
    7. '
' → logprob: -6.250570297241211
    8. '#' → logprob: -7.375570297241211
    9. 'return' → logprob: -8.500570297241211
    10. 'for' → logprob: -9.375570297241211

Token 1533: ',' (ID: 11)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.7353434562683105
    2. '           ' → logprob: -1.4853434562683105
    3. 'while' → logprob: -1.8603434562683105
    4. '       ' → logprob: -3.1103434562683105
    5. ' while' → logprob: -3.9853434562683105
    6. 'row' → logprob: -4.1103434562683105
    7. 'for' → logprob: -4.2353434562683105
    8. '
' → logprob: -4.4853434562683105
    9. 'if' → logprob: -4.7353434562683105
    10. ' for' → logprob: -5.1103434562683105

Token 1534: ' from' (ID: 591)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.03434695303440094
    2. '           ' → logprob: -4.159347057342529
    3. '#' → logprob: -4.659347057342529
    4. 'if' → logprob: -5.284347057342529
    5. 'expected' → logprob: -6.534347057342529
    6. ' while' → logprob: -6.909347057342529
    7. 'for' → logprob: -7.659347057342529
    8. 'row' → logprob: -8.909346580505371
    9. '       ' → logprob: -9.409346580505371
    10. 'pass' → logprob: -9.659346580505371

Token 1535: ' problem' (ID: 4792)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.33494850993156433
    2. 'the' → logprob: -2.0849485397338867
    3. '0' → logprob: -2.7099485397338867
    4. 'here' → logprob: -3.2099485397338867
    5. '#' → logprob: -4.209948539733887
    6. 'range' → logprob: -4.834948539733887
    7. 'context' → logprob: -5.334948539733887
    8. 'row' → logprob: -5.584948539733887
    9. 'code' → logprob: -5.709948539733887
    10. '```' → logprob: -6.334948539733887

Token 1536: ' description' (ID: 6496)
  Prédit: '_lines'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_lines' → logprob: -0.24185173213481903
    2. 'lines' → logprob: -4.116851806640625
    3. '           ' → logprob: -4.241851806640625
    4. '   ' → logprob: -4.241851806640625
    5. ' continues' → logprob: -4.366851806640625
    6. '       ' → logprob: -4.366851806640625
    7. ')' → logprob: -4.366851806640625
    8. ' lines' → logprob: -4.491851806640625
    9. 'context' → logprob: -4.616851806640625
    10. '#' → logprob: -4.616851806640625

Token 1537: ',' (ID: 11)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.4350113272666931
    2. '       ' → logprob: -2.685011386871338
    3. 'while' → logprob: -2.935011386871338
    4. '<|end|>' → logprob: -2.935011386871338
    5. ' while' → logprob: -3.185011386871338
    6. ' for' → logprob: -3.935011386871338
    7. ',' → logprob: -4.060011386871338
    8. '#' → logprob: -4.060011386871338
    9. '<|end|>' → logprob: -4.310011386871338
    10. ':' → logprob: -4.935011386871338

Token 1538: ' E' (ID: 457)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.6977304816246033
    2. '#' → logprob: -1.197730541229248
    3. 'expected' → logprob: -2.322730541229248
    4. 'for' → logprob: -3.697730541229248
    5. 'while' → logprob: -3.822730541229248
    6. 'row' → logprob: -4.197730541229248
    7. '       ' → logprob: -4.572730541229248
    8. 'we' → logprob: -5.447730541229248
    9. 'continue' → logprob: -5.572730541229248
    10. ' for' → logprob: -6.197730541229248

Token 1539: ' i' (ID: 575)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.8145522475242615
    2. '.append' → logprob: -1.4395523071289062
    3. '[row' → logprob: -2.9395523071289062
    4. '_row' → logprob: -3.4395523071289062
    5. '[' → logprob: -3.5645523071289062
    6. '       ' → logprob: -3.5645523071289062
    7. ' =' → logprob: -3.9395523071289062
    8. '[i' → logprob: -3.9395523071289062
    9. '               ' → logprob: -4.314552307128906
    10. '_' → logprob: -4.314552307128906

Token 1540: ',j' (ID: 22712)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.9445661306381226
    2. '[' → logprob: -2.194566249847412
    3. '_' → logprob: -2.194566249847412
    4. 's' → logprob: -2.819566249847412
    5. ']' → logprob: -2.944566249847412
    6. '[j' → logprob: -2.944566249847412
    7. '[n' → logprob: -3.069566249847412
    8. '[_' → logprob: -3.069566249847412
    9. '[]' → logprob: -3.194566249847412
    10. 'n' → logprob: -3.319566249847412

Token 1541: ' lines' (ID: 8698)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.9569787383079529
    2. ' =' → logprob: -1.4569787979125977
    3. '.append' → logprob: -2.0819787979125977
    4. '=' → logprob: -2.5819787979125977
    5. '.extend' → logprob: -3.5819787979125977
    6. ')' → logprob: -3.7069787979125977
    7. '<|end|>' → logprob: -4.331978797912598
    8. ' for' → logprob: -4.456978797912598
    9. '       ' → logprob: -4.706978797912598
    10. '...' → logprob: -4.706978797912598

Token 1542: ' are' (ID: 553)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.46958038210868835
    2. ' =' → logprob: -1.4695804119110107
    3. '<|end|>' → logprob: -3.0945804119110107
    4. '=' → logprob: -3.7195804119110107
    5. '       ' → logprob: -4.094580173492432
    6. '.append' → logprob: -4.719580173492432
    7. '<|end|>' → logprob: -4.969580173492432
    8. ':' → logprob: -5.469580173492432
    9. '               ' → logprob: -5.594580173492432
    10. '=[]' → logprob: -5.719580173492432

Token 1543: ' C' (ID: 363)
  Prédit: 'row'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'row' → logprob: -0.18239565193653107
    2. '[]
' → logprob: -2.5573956966400146
    3. '[]' → logprob: -3.3073956966400146
    4. 'not' → logprob: -3.9323956966400146
    5. 'list' → logprob: -5.0573954582214355
    6. '           ' → logprob: -5.4323954582214355
    7. 'next' → logprob: -6.0573954582214355
    8. '
' → logprob: -6.0573954582214355
    9. ' row' → logprob: -6.3073954582214355
    10. '[row' → logprob: -6.3073954582214355

Token 1544: '*' (ID: 9)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.917667806148529
    2. '           ' → logprob: -1.1676678657531738
    3. 'rows' → logprob: -2.042667865753174
    4. ' for' → logprob: -3.042667865753174
    5. '       ' → logprob: -4.042667865753174
    6. ')' → logprob: -4.167667865753174
    7. 'times' → logprob: -4.167667865753174
    8. ' lines' → logprob: -4.417667865753174
    9. 'while' → logprob: -5.167667865753174
    10. 'lines' → logprob: -5.167667865753174

Token 1545: 'D' (ID: 35)
  Prédit: 'D'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'D' → logprob: -0.0014067788142710924
    2. '1' → logprob: -7.626406669616699
    3. '[' → logprob: -8.3764066696167
    4. '           ' → logprob: -8.5014066696167
    5. ' D' → logprob: -8.6264066696167
    6. '
' → logprob: -9.5014066696167
    7. '   ' → logprob: -10.0014066696167
    8. '                   ' → logprob: -10.5014066696167
    9. '               ' → logprob: -10.8764066696167
    10. '       ' → logprob: -11.3764066696167

Token 1546: ' lines' (ID: 8698)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.039111409336328506
    2. '       ' → logprob: -3.914111375808716
    3. '<|end|>' → logprob: -4.914111614227295
    4. '
' → logprob: -5.289111614227295
    5. ' for' → logprob: -6.789111614227295
    6. '<|end|>' → logprob: -7.539111614227295
    7. ',' → logprob: -7.664111614227295
    8. 'while' → logprob: -7.664111614227295
    9. 'for' → logprob: -7.789111614227295
    10. ' while' → logprob: -7.914111614227295

Token 1547: '.
' (ID: 558)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.02381032705307007
    2. '       ' → logprob: -4.273810386657715
    3. 'for' → logprob: -5.023810386657715
    4. ' for' → logprob: -6.648810386657715
    5. 'while' → logprob: -7.898810386657715
    6. '#' → logprob: -8.273810386657715
    7. '
' → logprob: -8.398810386657715
    8. '<|end|>' → logprob: -8.773810386657715
    9. '               ' → logprob: -9.148810386657715
    10. '   ' → logprob: -9.523810386657715

Token 1548: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.005149554461240768
    2. '       ' → logprob: -5.3801493644714355
    3. '<|end|>' → logprob: -8.380149841308594
    4. '               ' → logprob: -10.005149841308594
    5. 'for' → logprob: -10.005149841308594
    6. '<|end|>' → logprob: -10.130149841308594
    7. '#' → logprob: -10.380149841308594
    8. '   ' → logprob: -10.630149841308594
    9. '                   ' → logprob: -10.755149841308594
    10. ' for' → logprob: -11.005149841308594

Token 1549: ' #' (ID: 1069)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.30350127816200256
    2. '       ' → logprob: -1.8035012483596802
    3. 'while' → logprob: -2.8035013675689697
    4. 'for' → logprob: -3.4285013675689697
    5. '
' → logprob: -6.678501129150391
    6. 'row' → logprob: -7.178501129150391
    7. 'expected' → logprob: -7.428501129150391
    8. 'if' → logprob: -8.17850112915039
    9. '#' (adapté à ' #') → logprob: -8.30350112915039
    10. '               ' → logprob: -8.67850112915039

Token 1550: ' Each' (ID: 11555)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.3326602280139923
    2. '           ' → logprob: -1.58266019821167
    3. 'for' → logprob: -3.58266019821167
    4. '       ' → logprob: -3.95766019821167
    5. 'expected' → logprob: -4.20766019821167
    6. 'if' → logprob: -5.58266019821167
    7. 'row' → logprob: -5.58266019821167
    8. '#' → logprob: -5.83266019821167
    9. 'extended' → logprob: -6.20766019821167
    10. 'values' → logprob: -7.20766019821167

Token 1551: ' line' (ID: 2543)
  Prédit: 'row'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'row' → logprob: -0.6405290961265564
    2. 'for' → logprob: -1.1405291557312012
    3. ' for' → logprob: -2.640529155731201
    4. '           ' → logprob: -3.265529155731201
    5. ' row' → logprob: -4.265529155731201
    6. '#' → logprob: -5.140529155731201
    7. 'while' → logprob: -5.515529155731201
    8. 'token' → logprob: -5.765529155731201
    9. 'day' → logprob: -6.265529155731201
    10. '               ' → logprob: -6.265529155731201

Token 1552: ' is' (ID: 382)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -1.4543031454086304
    2. 'for' → logprob: -1.8293031454086304
    3. 'has' → logprob: -1.9543031454086304
    4. ' has' → logprob: -2.20430326461792
    5. '=' → logprob: -2.45430326461792
    6. ' =' → logprob: -2.70430326461792
    7. 'contains' → logprob: -3.45430326461792
    8. '       ' → logprob: -3.82930326461792
    9. ' for' → logprob: -3.95430326461792
    10. ' contains' → logprob: -4.20430326461792

Token 1553: ' a' (ID: 261)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'list' → logprob: -1.4393783807754517
    2. 'expected' → logprob: -1.4393783807754517
    3. 'a' → logprob: -2.064378261566162
    4. 'row' → logprob: -2.189378261566162
    5. 'C' → logprob: -3.064378261566162
    6. 'D' → logprob: -3.189378261566162
    7. 'single' → logprob: -3.439378261566162
    8. 'continued' → logprob: -4.064378261566162
    9. 'complete' → logprob: -4.939378261566162
    10. '[' → logprob: -4.939378261566162

Token 1554: ' single' (ID: 4590)
  Prédit: 'row'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'row' → logprob: -1.022819995880127
    2. 'single' → logprob: -1.022819995880127
    3. 'day' → logprob: -2.522819995880127
    4. 'list' → logprob: -2.772819995880127
    5. 'profit' → logprob: -3.647819995880127
    6. 'continu' → logprob: -3.647819995880127
    7. 'int' → logprob: -4.272819995880127
    8. 'token' → logprob: -4.397819995880127
    9. 'sequence' → logprob: -4.397819995880127
    10. 'region' → logprob: -4.897819995880127

Token 1555: ' integer' (ID: 16336)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.8729435205459595
    2. 'integer' → logprob: -0.9979435205459595
    3. 'value' → logprob: -2.12294340133667
    4. 'number' → logprob: -2.74794340133667
    5. ' integer' → logprob: -4.24794340133667
    6. 'profit' → logprob: -5.12294340133667
    7. 'region' → logprob: -6.37294340133667
    8. 'token' → logprob: -6.49794340133667
    9. 'day' → logprob: -6.99794340133667
    10. '
' → logprob: -7.12294340133667

Token 1556: ' (' (ID: 350)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.49054065346717834
    2. 'for' → logprob: -1.365540623664856
    3. ' for' → logprob: -2.9905407428741455
    4. '       ' → logprob: -3.6155407428741455
    5. '
' → logprob: -3.7405407428741455
    6. 'while' → logprob: -4.240540504455566
    7. 'row' → logprob: -6.115540504455566
    8. '               ' → logprob: -6.115540504455566
    9. 'and' → logprob: -6.240540504455566
    10. 'expected' → logprob: -6.365540504455566

Token 1557: 'expect' (ID: 34366)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.6172897815704346
    2. ')
' → logprob: -1.4922897815704346
    3. 'profit' → logprob: -2.3672897815704346
    4. 'for' → logprob: -3.2422897815704346
    5. '),' → logprob: -3.7422897815704346
    6. '           ' → logprob: -3.9922897815704346
    7. '())
' → logprob: -4.7422895431518555
    8. '())' → logprob: -5.2422895431518555
    9. ' for' → logprob: -5.2422895431518555
    10. '               ' → logprob: -5.4922895431518555

Token 1558: ' profit' (ID: 15971)
  Prédit: 'ed'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ed' → logprob: -0.0005648265941999853
    2. 'e' → logprob: -8.000564575195312
    3. '[' → logprob: -9.500564575195312
    4. '           ' → logprob: -10.375564575195312
    5. ' ed' → logprob: -10.625564575195312
    6. ')' → logprob: -11.000564575195312
    7. 'profit' → logprob: -11.375564575195312
    8. '   ' → logprob: -11.625564575195312
    9. '_profit' → logprob: -11.625564575195312
    10. 'ED' → logprob: -11.875564575195312

Token 1559: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.30257636308670044
    2. '           ' → logprob: -1.9275763034820557
    3. ')
' → logprob: -3.4275763034820557
    4. ' for' → logprob: -4.552576541900635
    5. 'for' → logprob: -4.677576541900635
    6. 's' → logprob: -4.677576541900635
    7. '[' → logprob: -4.927576541900635
    8. '               ' → logprob: -5.302576541900635
    9. '[i' → logprob: -5.302576541900635
    10. ' )' → logprob: -5.552576541900635

Token 1560: ' for' (ID: 395)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.009065360762178898
    2. 'for' → logprob: -5.3840651512146
    3. ' for' → logprob: -6.3840651512146
    4. '               ' → logprob: -6.6340651512146
    5. '       ' → logprob: -8.509065628051758
    6. '                   ' → logprob: -8.759065628051758
    7. '
' → logprob: -8.884065628051758
    8. ',' → logprob: -8.884065628051758
    9. 'return' → logprob: -9.509065628051758
    10. ' and' → logprob: -9.634065628051758

Token 1561: ' region' (ID: 7967)
  Prédit: 'each'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'each' → logprob: -0.7961180806159973
    2. 'region' → logprob: -1.0461180210113525
    3. 'the' → logprob: -2.6711180210113525
    4. 'one' → logprob: -3.2961180210113525
    5. 'day' → logprob: -3.2961180210113525
    6. 'row' → logprob: -4.546118259429932
    7. 'that' → logprob: -4.546118259429932
    8. 'a' → logprob: -5.171118259429932
    9. 'profit' → logprob: -5.296118259429932
    10. 'i' → logprob: -5.546118259429932

Token 1562: ' i' (ID: 575)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.5947914719581604
    2. '[' → logprob: -2.3447914123535156
    3. '_' → logprob: -2.5947914123535156
    4. '[i' → logprob: -2.8447914123535156
    5. 's' → logprob: -3.0947914123535156
    6. '[_' → logprob: -3.2197914123535156
    7. '[
' → logprob: -3.3447914123535156
    8. '_row' → logprob: -3.9697914123535156
    9. '       ' → logprob: -4.344791412353516
    10. '               ' → logprob: -4.719791412353516

Token 1563: ' and' (ID: 326)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.10806786268949509
    2. '[' → logprob: -3.858067750930786
    3. '               ' → logprob: -4.733067989349365
    4. '[i' → logprob: -4.733067989349365
    5. '[line' → logprob: -4.733067989349365
    6. '
' → logprob: -5.108067989349365
    7. '[
' → logprob: -5.233067989349365
    8. '[row' → logprob: -5.358067989349365
    9. '<|end|>' → logprob: -5.358067989349365
    10. 'for' → logprob: -5.483067989349365

Token 1564: ' day' (ID: 2163)
  Prédit: 'day'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'day' → logprob: -0.008944142609834671
    2. ' day' → logprob: -5.008944034576416
    3. 'j' → logprob: -6.133944034576416
    4. ' j' → logprob: -11.383944511413574
    5. '#' → logprob: -11.633944511413574
    6. 'd' → logprob: -11.758944511413574
    7. '_day' → logprob: -12.383944511413574
    8. 'daily' → logprob: -12.508944511413574
    9. 'for' → logprob: -12.758944511413574
    10. '
' → logprob: -12.758944511413574

Token 1565: ' j' (ID: 441)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.007991524413228035
    2. 'for' → logprob: -5.382991313934326
    3. ' for' → logprob: -6.382991313934326
    4. ',' → logprob: -7.632991313934326
    5. '
' → logprob: -8.132991790771484
    6. '               ' → logprob: -9.132991790771484
    7. '       ' → logprob: -9.382991790771484
    8. '.' → logprob: -9.382991790771484
    9. '#' → logprob: -9.632991790771484
    10. ':
' → logprob: -9.882991790771484

Token 1566: '.
' (ID: 558)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0030841901898384094
    2. 'for' → logprob: -7.128084182739258
    3. '
' → logprob: -7.628084182739258
    4. '               ' → logprob: -7.878084182739258
    5. ' for' → logprob: -8.003084182739258
    6. ',' → logprob: -8.128084182739258
    7. '       ' → logprob: -8.878084182739258
    8. '#' → logprob: -9.253084182739258
    9. '                   ' → logprob: -9.628084182739258
    10. ' and' → logprob: -9.878084182739258

Token 1567: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0007550701266154647
    2. '       ' → logprob: -7.5007548332214355
    3. 'for' → logprob: -9.750755310058594
    4. '
' → logprob: -10.125755310058594
    5. '               ' → logprob: -10.500755310058594
    6. ' for' → logprob: -11.125755310058594
    7. '                   ' → logprob: -11.375755310058594
    8. '		' → logprob: -11.750755310058594
    9. '   ' → logprob: -11.750755310058594
    10. '                       ' → logprob: -12.125755310058594

Token 1568: ' #' (ID: 1069)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -1.0512691736221313
    2. 'while' → logprob: -1.0512691736221313
    3. 'expected' → logprob: -1.3012691736221313
    4. 'for' → logprob: -3.926269054412842
    5. 'if' → logprob: -5.426269054412842
    6. '#' (adapté à ' #') → logprob: -6.676269054412842
    7. 'extended' → logprob: -6.926269054412842
    8. 'row' → logprob: -7.551269054412842
    9. '       ' → logprob: -7.676269054412842
    10. 'assert' → logprob: -7.676269054412842

Token 1569: ' So' (ID: 2632)
  Prédit: 'expected'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'expected' → logprob: -0.5209224224090576
    2. '           ' → logprob: -1.2709224224090576
    3. 'for' → logprob: -2.6459224224090576
    4. 'while' → logprob: -3.2709224224090576
    5. 'if' → logprob: -5.270922660827637
    6. 'row' → logprob: -5.770922660827637
    7. '
' → logprob: -6.270922660827637
    8. '               ' → logprob: -6.270922660827637
    9. '       ' → logprob: -6.395922660827637
    10. ' expected' → logprob: -7.270922660827637

Token 1570: ' we' (ID: 581)
  Prédit: 'expected'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'expected' → logprob: -0.5210154056549072
    2. 'for' → logprob: -1.3960154056549072
    3. '           ' → logprob: -2.0210154056549072
    4. 'while' → logprob: -4.271015167236328
    5. 'row' → logprob: -5.646015167236328
    6. '#' → logprob: -6.021015167236328
    7. '               ' → logprob: -6.396015167236328
    8. 'if' → logprob: -7.021015167236328
    9. '       ' → logprob: -7.021015167236328
    10. ' for' → logprob: -7.521015167236328

Token 1571: ' read' (ID: 1729)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.6934556365013123
    2. 'for' → logprob: -2.068455696105957
    3. '       ' → logprob: -2.318455696105957
    4. 'continue' → logprob: -2.443455696105957
    5. '.append' → logprob: -2.943455696105957
    6. ' for' → logprob: -3.443455696105957
    7. '.extend' → logprob: -3.818455696105957
    8. ' continue' → logprob: -3.943455696105957
    9. 'append' → logprob: -4.068455696105957
    10. '[' → logprob: -5.318455696105957

Token 1572: ' C' (ID: 363)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.3627561032772064
    2. 'row' → logprob: -1.4877561330795288
    3. 'while' → logprob: -3.2377560138702393
    4. 'expected' → logprob: -4.237756252288818
    5. '           ' → logprob: -4.487756252288818
    6. 'profit' → logprob: -5.862756252288818
    7. 'rows' → logprob: -6.112756252288818
    8. ' for' → logprob: -6.112756252288818
    9. 'len' → logprob: -6.987756252288818
    10. '               ' → logprob: -7.112756252288818

Token 1573: '*' (ID: 9)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.2119029313325882
    2. '           ' → logprob: -2.3369028568267822
    3. 'rows' → logprob: -3.5869028568267822
    4. 'lines' → logprob: -3.7119028568267822
    5. '       ' → logprob: -4.336903095245361
    6. ' for' → logprob: -5.086903095245361
    7. 'times' → logprob: -5.461903095245361
    8. '   ' → logprob: -6.211903095245361
    9. '_lines' → logprob: -6.461903095245361
    10. 'and' → logprob: -6.461903095245361

Token 1574: 'D' (ID: 35)
  Prédit: 'D'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'D' → logprob: -0.004174917936325073
    2. '1' → logprob: -5.504174709320068
    3. '           ' → logprob: -10.129175186157227
    4. ' D' → logprob: -10.379175186157227
    5. '(' → logprob: -11.504175186157227
    6. '   ' → logprob: -12.504175186157227
    7. ' ' → logprob: -13.129175186157227
    8. '               ' → logprob: -13.129175186157227
    9. '(D' → logprob: -13.379175186157227
    10. 'C' → logprob: -13.879175186157227

Token 1575: ' lines' (ID: 8698)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.09105498343706131
    2. 'values' → logprob: -3.466054916381836
    3. '           ' → logprob: -3.841054916381836
    4. ' for' → logprob: -4.591054916381836
    5. '       ' → logprob: -5.591054916381836
    6. 'expected' → logprob: -5.841054916381836
    7. 'rows' → logprob: -6.216054916381836
    8. 'profits' → logprob: -6.216054916381836
    9. 'lines' → logprob: -6.591054916381836
    10. '               ' → logprob: -6.591054916381836

Token 1576: ' (' (ID: 350)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.02813347987830639
    2. '       ' → logprob: -3.6531333923339844
    3. 'for' → logprob: -6.903133392333984
    4. '               ' → logprob: -7.903133392333984
    5. ' for' → logprob: -8.528133392333984
    6. '
' → logprob: -9.278133392333984
    7. '                   ' → logprob: -9.403133392333984
    8. '                       ' → logprob: -10.403133392333984
    9. '   ' → logprob: -10.653133392333984
    10. ',' → logprob: -12.653133392333984

Token 1577: 'not' (ID: 2878)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.1046961322426796
    2. ' for' → logprob: -2.979696035385132
    3. '           ' → logprob: -3.354696035385132
    4. 'row' → logprob: -5.354696273803711
    5. 'and' → logprob: -5.854696273803711
    6. ' and' → logprob: -7.229696273803711
    7. 'while' → logprob: -7.229696273803711
    8. ')' → logprob: -7.354696273803711
    9. 'expected' → logprob: -7.479696273803711
    10. '               ' → logprob: -7.604696273803711

Token 1578: ' a' (ID: 261)
  Prédit: 'D'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'D' → logprob: -0.3693527579307556
    2. 'for' → logprob: -1.3693528175354004
    3. 'row' → logprob: -4.8693528175354
    4. ')' → logprob: -4.8693528175354
    5. '[D' → logprob: -5.1193528175354
    6. '
' → logprob: -5.2443528175354
    7. 'C' → logprob: -5.2443528175354
    8. ' D' → logprob: -5.8693528175354
    9. '1' → logprob: -6.2443528175354
    10. 'profit' → logprob: -6.6193528175354

Token 1579: ' single' (ID: 4590)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.1739906519651413
    2. ' for' → logprob: -2.5489907264709473
    3. 'single' → logprob: -3.7989907264709473
    4. ')' → logprob: -4.048990726470947
    5. 'def' → logprob: -5.173990726470947
    6. '
' → logprob: -5.673990726470947
    7. '[' → logprob: -5.673990726470947
    8. ' single' → logprob: -5.798990726470947
    9. 'C' → logprob: -5.923990726470947
    10. '[
' → logprob: -6.048990726470947

Token 1580: ' line' (ID: 2543)
  Prédit: 'token'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'token' → logprob: -0.4326404333114624
    2. 'for' → logprob: -2.307640552520752
    3. 'profit' → logprob: -2.307640552520752
    4. 'row' → logprob: -2.682640552520752
    5. 'int' → logprob: -3.932640552520752
    6. 'line' → logprob: -4.432640552520752
    7. 'region' → logprob: -4.557640552520752
    8. ' for' → logprob: -5.557640552520752
    9. '=' → logprob: -5.682640552520752
    10. ')' → logprob: -5.682640552520752

Token 1581: ').
' (ID: 6294)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -1.3065670728683472
    2. '           ' → logprob: -1.4315670728683472
    3. 'for' → logprob: -1.9315670728683472
    4. ')' → logprob: -1.9315670728683472
    5. ')
' → logprob: -2.5565671920776367
    6. '):
' → logprob: -3.1815671920776367
    7. '
' → logprob: -3.6815671920776367
    8. ':
' → logprob: -3.9315671920776367
    9. '               ' → logprob: -4.806567192077637
    10. '       ' → logprob: -4.806567192077637

Token 1582: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0014942651614546776
    2. 'for' → logprob: -7.001494407653809
    3. '       ' → logprob: -8.001494407653809
    4. 'expected' → logprob: -9.001494407653809
    5. '
' → logprob: -10.126494407653809
    6. '               ' → logprob: -10.126494407653809
    7. ' for' → logprob: -11.001494407653809
    8. '   ' → logprob: -11.126494407653809
    9. '                   ' → logprob: -12.376494407653809
    10. '#' → logprob: -13.876494407653809

Token 1583: ' #' (ID: 1069)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.1557876318693161
    2. '       ' → logprob: -2.655787706375122
    3. 'for' → logprob: -3.030787706375122
    4. 'expected' → logprob: -4.030787467956543
    5. '
' → logprob: -6.155787467956543
    6. '               ' → logprob: -6.405787467956543
    7. '   ' → logprob: -7.030787467956543
    8. '#' (adapté à ' #') → logprob: -7.155787467956543
    9. 'lines' → logprob: -7.905787467956543
    10. 'rows' → logprob: -7.905787467956543

Token 1584: ' Correction' (ID: 134873)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.062492698431015015
    2. 'expected' → logprob: -3.687492609024048
    3. 'for' → logprob: -3.937492609024048
    4. '       ' → logprob: -4.937492847442627
    5. 'while' → logprob: -6.312492847442627
    6. '
' → logprob: -6.687492847442627
    7. 'row' → logprob: -6.687492847442627
    8. '               ' → logprob: -6.812492847442627
    9. '#' → logprob: -7.062492847442627
    10. '   ' → logprob: -7.437492847442627

Token 1585: ':' (ID: 25)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.18149928748607635
    2. 'for' → logprob: -2.0564992427825928
    3. '       ' → logprob: -3.4314992427825928
    4. ' for' → logprob: -6.306499481201172
    5. 'expected' → logprob: -6.681499481201172
    6. 'row' → logprob: -6.806499481201172
    7. '#' → logprob: -7.556499481201172
    8. '   ' → logprob: -8.431499481201172
    9. '               ' → logprob: -8.556499481201172
    10. 'lines' → logprob: -9.181499481201172

Token 1586: ' we' (ID: 581)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.09849438816308975
    2. '           ' → logprob: -2.848494291305542
    3. 'expected' → logprob: -4.223494529724121
    4. 'row' → logprob: -4.973494529724121
    5. '       ' → logprob: -5.223494529724121
    6. '#' → logprob: -5.348494529724121
    7. 'while' → logprob: -6.973494529724121
    8. 'profit' → logprob: -7.098494529724121
    9. ' for' → logprob: -7.473494529724121
    10. 'rows' → logprob: -7.473494529724121

Token 1587: ' must' (ID: 2804)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.8879987001419067
    2. '           ' → logprob: -1.5129987001419067
    3. '       ' → logprob: -1.6379987001419067
    4. ' for' → logprob: -2.012998580932617
    5. 'continue' → logprob: -4.137998580932617
    6. '
' → logprob: -5.387998580932617
    7. 'need' → logprob: -5.637998580932617
    8. '#' → logprob: -5.637998580932617
    9. 'read' → logprob: -6.012998580932617
    10. 'have' → logprob: -6.262998580932617

Token 1588: ' read' (ID: 1729)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.017435360699892044
    2. '           ' → logprob: -4.392435550689697
    3. ' for' → logprob: -6.142435550689697
    4. '       ' → logprob: -6.142435550689697
    5. '#' → logprob: -8.017435073852539
    6. '
' → logprob: -8.642435073852539
    7. 'continue' → logprob: -10.267435073852539
    8. '               ' → logprob: -10.517435073852539
    9. '   ' → logprob: -11.267435073852539
    10. 'read' → logprob: -11.767435073852539

Token 1589: ' C' (ID: 363)
  Prédit: 'D'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'D' → logprob: -0.5561890006065369
    2. 'for' → logprob: -0.9311890006065369
    3. 'C' → logprob: -4.056189060211182
    4. 'profit' → logprob: -4.806189060211182
    5. '           ' → logprob: -5.806189060211182
    6. '1' → logprob: -6.306189060211182
    7. '               ' → logprob: -8.181188583374023
    8. ' for' → logprob: -8.181188583374023
    9. '
' → logprob: -8.431188583374023
    10. '#' → logprob: -9.056188583374023

Token 1590: ' *' (ID: 425)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.1936420351266861
    2. '           ' → logprob: -2.0686421394348145
    3. ' for' → logprob: -3.9436421394348145
    4. '       ' → logprob: -4.1936421394348145
    5. 'while' → logprob: -5.5686421394348145
    6. 'D' → logprob: -6.0686421394348145
    7. '
' → logprob: -6.1936421394348145
    8. 'rows' → logprob: -7.0686421394348145
    9. '               ' → logprob: -7.6936421394348145
    10. '=' → logprob: -7.6936421394348145

Token 1591: ' D' (ID: 415)
  Prédit: 'D'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'D' → logprob: -0.002531664213165641
    2. '1' → logprob: -6.0025315284729
    3. '           ' → logprob: -10.252532005310059
    4. ' D' → logprob: -11.627532005310059
    5. '       ' → logprob: -12.877532005310059
    6. '   ' → logprob: -13.002532005310059
    7. '               ' → logprob: -13.127532005310059
    8. '(' → logprob: -14.127532005310059
    9. ' ' → logprob: -14.252532005310059
    10. 'for' → logprob: -14.252532005310059

Token 1592: ' lines' (ID: 8698)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.40643781423568726
    2. '       ' → logprob: -1.906437873840332
    3. '           ' → logprob: -3.406437873840332
    4. '_lines' → logprob: -3.656437873840332
    5. '<|end|>' → logprob: -3.656437873840332
    6. ' for' → logprob: -3.906437873840332
    7. ' lines' → logprob: -4.156437873840332
    8. 'lines' → logprob: -4.281437873840332
    9. 'expected' → logprob: -4.656437873840332
    10. '<|end|>' → logprob: -4.906437873840332

Token 1593: ',' (ID: 11)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.12978479266166687
    2. '       ' → logprob: -2.5047848224639893
    3. 'for' → logprob: -3.3797848224639893
    4. '               ' → logprob: -6.25478458404541
    5. ' for' → logprob: -6.50478458404541
    6. '
' → logprob: -7.25478458404541
    7. '   ' → logprob: -7.62978458404541
    8. '                   ' → logprob: -7.75478458404541
    9. 'expected' → logprob: -9.00478458404541
    10. '                       ' → logprob: -9.12978458404541

Token 1594: ' each' (ID: 2454)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.03685082495212555
    2. 'for' → logprob: -3.661850929260254
    3. '               ' → logprob: -5.661850929260254
    4. '       ' → logprob: -5.661850929260254
    5. ' for' → logprob: -6.161850929260254
    6. '                   ' → logprob: -7.411850929260254
    7. '
' → logprob: -7.661850929260254
    8. 'row' → logprob: -9.161850929260254
    9. '   ' → logprob: -9.911850929260254
    10. '                       ' → logprob: -10.036850929260254

Token 1595: ' line' (ID: 2543)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.3490307033061981
    2. 'with' → logprob: -2.4740307331085205
    3. 'row' → logprob: -3.3490307331085205
    4. ' for' → logprob: -3.4740307331085205
    5. 'line' → logprob: -3.5990307331085205
    6. '           ' → logprob: -3.5990307331085205
    7. 'profit' → logprob: -4.349030494689941
    8. ' with' → logprob: -4.724030494689941
    9. 'token' → logprob: -4.974030494689941
    10. ' line' → logprob: -5.224030494689941

Token 1596: ' one' (ID: 1001)
  Prédit: 'contains'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'contains' → logprob: -1.2202131748199463
    2. 'cons' → logprob: -1.8452131748199463
    3. '           ' → logprob: -2.2202131748199463
    4. 'for' → logprob: -2.4702131748199463
    5. 'with' → logprob: -2.7202131748199463
    6. 'provid' → logprob: -2.8452131748199463
    7. 'is' → logprob: -2.9702131748199463
    8. 'has' → logprob: -3.2202131748199463
    9. '               ' → logprob: -3.8452131748199463
    10. '=' → logprob: -3.9702131748199463

Token 1597: ' integer' (ID: 16336)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.43507546186447144
    2. 'integer' → logprob: -1.0600755214691162
    3. ' integer' → logprob: -5.685075283050537
    4. 'value' → logprob: -6.310075283050537
    5. 'number' → logprob: -7.310075283050537
    6. '           ' → logprob: -9.560075759887695
    7. '
' → logprob: -9.810075759887695
    8. '               ' → logprob: -10.060075759887695
    9. '[int' → logprob: -10.060075759887695
    10. 'token' → logprob: -10.185075759887695

Token 1598: '.

' (ID: 364)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.03669846057891846
    2. '       ' → logprob: -3.911698341369629
    3. '<|end|>' → logprob: -5.536698341369629
    4. ' for' → logprob: -5.786698341369629
    5. 'for' → logprob: -5.911698341369629
    6. '               ' → logprob: -6.286698341369629
    7. '<|end|>' → logprob: -6.536698341369629
    8. ',' → logprob: -7.661698341369629
    9. '                   ' → logprob: -7.911698341369629
    10. '                       ' → logprob: -8.161698341369629

Token 1599: '       ' (ID: 309)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.013713735155761242
    2. '       ' → logprob: -4.513713836669922
    3. 'for' → logprob: -6.513713836669922
    4. '
' → logprob: -7.513713836669922
    5. '               ' → logprob: -8.013713836669922
    6. '                   ' → logprob: -9.013713836669922
    7. 'expected' → logprob: -9.888713836669922
    8. '   ' → logprob: -10.138713836669922
    9. '                       ' → logprob: -10.388713836669922
    10. '                           ' → logprob: -11.513713836669922

Token 1600: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.027392122894525528
    2. '           ' → logprob: -3.6523921489715576
    3. 'for' → logprob: -6.9023919105529785
    4. '               ' → logprob: -9.777392387390137
    5. '   ' → logprob: -11.527392387390137
    6. '
' → logprob: -11.527392387390137
    7. '#' (adapté à ' #') → logprob: -12.777392387390137
    8. 'expected' → logprob: -12.902392387390137
    9. ' for' → logprob: -13.902392387390137
    10. 'import' → logprob: -14.402392387390137

Token 1601: ' Due' (ID: 29584)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.008978527039289474
    2. 'for' → logprob: -4.758978366851807
    3. '           ' → logprob: -8.008978843688965
    4. ' for' → logprob: -11.633978843688965
    5. '   ' → logprob: -11.883978843688965
    6. 'expected' → logprob: -11.883978843688965
    7. '
' → logprob: -12.758978843688965
    8. '#' → logprob: -13.008978843688965
    9. '               ' → logprob: -13.008978843688965
    10. '        
' → logprob: -14.883978843688965

Token 1602: ' to' (ID: 316)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5593810081481934
    2. 'for' → logprob: -1.0593810081481934
    3. '           ' → logprob: -2.5593810081481934
    4. ' for' → logprob: -5.684381008148193
    5. '   ' → logprob: -8.059381484985352
    6. 'expected' → logprob: -8.434381484985352
    7. '               ' → logprob: -8.809381484985352
    8. 'to' → logprob: -9.309381484985352
    9. 'while' → logprob: -9.809381484985352
    10. 'from' → logprob: -10.309381484985352

Token 1603: ' problem' (ID: 4792)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.04650534316897392
    2. '       ' → logprob: -3.5465054512023926
    3. ' for' → logprob: -4.921505451202393
    4. 'expected' → logprob: -5.796505451202393
    5. 'len' → logprob: -6.421505451202393
    6. 'range' → logprob: -7.046505451202393
    7. '_expected' → logprob: -7.171505451202393
    8. '#' → logprob: -7.546505451202393
    9. '           ' → logprob: -7.796505451202393
    10. 'C' → logprob: -7.921505451202393

Token 1604: ' description' (ID: 6496)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.057873547077178955
    2. 'for' → logprob: -3.057873487472534
    3. '           ' → logprob: -5.307873725891113
    4. ' for' → logprob: -5.682873725891113
    5. '
' → logprob: -7.807873725891113
    6. '   ' → logprob: -8.682873725891113
    7. '               ' → logprob: -9.432873725891113
    8. 'expected' → logprob: -9.557873725891113
    9. 'lines' → logprob: -10.057873725891113
    10. '#' → logprob: -10.432873725891113

Token 1605: ' structure' (ID: 8866)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.01401165034621954
    2. '           ' → logprob: -4.764011859893799
    3. 'for' → logprob: -5.264011859893799
    4. ' for' → logprob: -9.13901138305664
    5. '               ' → logprob: -10.26401138305664
    6. '
' → logprob: -10.38901138305664
    7. '   ' → logprob: -10.76401138305664
    8. 'expected' → logprob: -12.76401138305664
    9. 'from' → logprob: -13.13901138305664
    10. ',' → logprob: -13.13901138305664

Token 1606: ',' (ID: 11)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.48703280091285706
    2. '           ' → logprob: -0.9870327711105347
    3. 'for' → logprob: -4.362032890319824
    4. '               ' → logprob: -9.862032890319824
    5. '   ' → logprob: -10.362032890319824
    6. ' for' → logprob: -10.612032890319824
    7. '
' → logprob: -11.862032890319824
    8. '                   ' → logprob: -14.112032890319824
    9. '          ' → logprob: -14.612032890319824
    10. 'expected' → logprob: -14.612032890319824

Token 1607: ' we' (ID: 581)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0029340796172618866
    2. 'for' → logprob: -6.002933979034424
    3. '           ' → logprob: -7.877933979034424
    4. '
' → logprob: -10.252934455871582
    5. ' for' → logprob: -10.627934455871582
    6. 'expected' → logprob: -11.752934455871582
    7. '   ' → logprob: -12.252934455871582
    8. '               ' → logprob: -12.877934455871582
    9. '#' → logprob: -13.127934455871582
    10. 'from' → logprob: -14.127934455871582

Token 1608: ' must' (ID: 2804)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5481138229370117
    2. 'for' → logprob: -0.9231138229370117
    3. ' for' → logprob: -3.7981138229370117
    4. '           ' → logprob: -6.298113822937012
    5. '#' → logprob: -8.423113822937012
    6. '
' → logprob: -9.048113822937012
    7. '   ' → logprob: -10.423113822937012
    8. '               ' → logprob: -11.048113822937012
    9. ' ' → logprob: -11.548113822937012
    10. ' #' → logprob: -12.423113822937012

Token 1609: ' read' (ID: 1729)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.5877906680107117
    2. '       ' → logprob: -0.8377906680107117
    3. ' for' → logprob: -4.712790489196777
    4. '           ' → logprob: -6.212790489196777
    5. '
' → logprob: -8.087790489196777
    6. '#' → logprob: -8.087790489196777
    7. 'expected' → logprob: -9.337790489196777
    8. '               ' → logprob: -10.212790489196777
    9. '   ' → logprob: -10.837790489196777
    10. 'read' → logprob: -11.462790489196777

Token 1610: ' C' (ID: 363)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.032241031527519226
    2. 'C' → logprob: -3.782241106033325
    3. '       ' → logprob: -5.532240867614746
    4. '#' → logprob: -6.407240867614746
    5. 'expected' → logprob: -7.032240867614746
    6. '           ' → logprob: -7.407240867614746
    7. ' for' → logprob: -7.532240867614746
    8. '               ' → logprob: -8.032240867614746
    9. '
' → logprob: -8.407240867614746
    10. '   ' → logprob: -8.907240867614746

Token 1611: '*' (ID: 9)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.7929664254188538
    2. '       ' → logprob: -1.792966365814209
    3. '*' → logprob: -2.042966365814209
    4. ' *' → logprob: -2.167966365814209
    5. '           ' → logprob: -2.542966365814209
    6. ' for' → logprob: -3.917966365814209
    7. 'times' → logprob: -4.042966365814209
    8. 'lines' → logprob: -5.292966365814209
    9. ' lines' → logprob: -5.417966365814209
    10. '*C' → logprob: -5.792966365814209

Token 1612: 'D' (ID: 35)
  Prédit: 'D'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'D' → logprob: -0.2116241604089737
    2. 'for' → logprob: -1.7116241455078125
    3. '           ' → logprob: -6.2116241455078125
    4. 'C' → logprob: -6.2116241455078125
    5. 'int' → logprob: -6.3366241455078125
    6. ' for' → logprob: -6.9616241455078125
    7. '       ' → logprob: -7.2116241455078125
    8. '1' → logprob: -7.4616241455078125
    9. ' D' → logprob: -8.336624145507812
    10. '
' → logprob: -8.336624145507812

Token 1613: ' lines' (ID: 8698)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.056209348142147064
    2. '       ' → logprob: -3.0562093257904053
    3. '           ' → logprob: -5.556209564208984
    4. 'lines' → logprob: -6.431209564208984
    5. ' for' → logprob: -6.806209564208984
    6. 'expected' → logprob: -8.306209564208984
    7. 'line' → logprob: -8.681209564208984
    8. 'int' → logprob: -9.431209564208984
    9. 'inte' → logprob: -9.556209564208984
    10. '```' → logprob: -9.556209564208984

Token 1614: ' with' (ID: 483)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.000618792837485671
    2. '           ' → logprob: -7.750618934631348
    3. 'for' → logprob: -8.625618934631348
    4. ' for' → logprob: -12.750618934631348
    5. '   ' → logprob: -13.250618934631348
    6. '               ' → logprob: -13.500618934631348
    7. '
' → logprob: -13.500618934631348
    8. 'from' → logprob: -14.500618934631348
    9. 'and' → logprob: -15.500618934631348
    10. 'import' → logprob: -15.875618934631348

Token 1615: ' one' (ID: 1001)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.4173198938369751
    2. 'profit' → logprob: -1.417319893836975
    3. 'expected' → logprob: -3.1673197746276855
    4. '#' → logprob: -4.5423197746276855
    5. '           ' → logprob: -4.7923197746276855
    6. ' for' → logprob: -5.2923197746276855
    7. '_profit' → logprob: -5.2923197746276855
    8. '
' → logprob: -5.4173197746276855
    9. ' profit' → logprob: -5.4173197746276855
    10. 'len' → logprob: -6.2923197746276855

Token 1616: ' integer' (ID: 16336)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.7960121631622314
    2. '           ' → logprob: -1.6710121631622314
    3. 'value' → logprob: -1.9210121631622314
    4. 'int' → logprob: -2.5460121631622314
    5. 'integer' → logprob: -2.6710121631622314
    6. ' for' → logprob: -3.6710121631622314
    7. 'profit' → logprob: -4.296011924743652
    8. '       ' → logprob: -5.421011924743652
    9. ' integer' → logprob: -5.671011924743652
    10. 'token' → logprob: -6.046011924743652

Token 1617: ' each' (ID: 2454)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0016539981588721275
    2. 'for' → logprob: -6.751654148101807
    3. '           ' → logprob: -7.751654148101807
    4. ' for' → logprob: -10.251653671264648
    5. '   ' → logprob: -11.876653671264648
    6. '               ' → logprob: -12.501653671264648
    7. '
' → logprob: -12.626653671264648
    8. 'from' → logprob: -13.251653671264648
    9. 'and' → logprob: -14.126653671264648
    10. ',' → logprob: -14.126653671264648

Token 1618: ' for' (ID: 395)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00014370749704539776
    2. 'for' → logprob: -9.250144004821777
    3. '
' → logprob: -10.500144004821777
    4. '           ' → logprob: -11.000144004821777
    5. '   ' → logprob: -13.375144004821777
    6. '               ' → logprob: -14.375144004821777
    7. ' for' → logprob: -15.125144004821777
    8. 'from' → logprob: -15.250144004821777
    9. '        
' → logprob: -15.375144004821777
    10. '#' → logprob: -15.625144004821777

Token 1619: ' expected' (ID: 5930)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.8434732556343079
    2. '_profit' → logprob: -1.093473196029663
    3. 'profit' → logprob: -2.218473196029663
    4. 'i' → logprob: -3.093473196029663
    5. '_i' → logprob: -3.968473196029663
    6. '_expected' → logprob: -3.968473196029663
    7. '_e' → logprob: -4.468473434448242
    8. '_r' → logprob: -5.593473434448242
    9. ' _' → logprob: -5.718473434448242
    10. 'r' → logprob: -5.968473434448242

Token 1620: ' profit' (ID: 15971)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.43794435262680054
    2. '           ' → logprob: -1.3129444122314453
    3. 'profit' → logprob: -3.3129444122314453
    4. '_profit' → logprob: -4.062944412231445
    5. '       ' → logprob: -4.312944412231445
    6. '
' → logprob: -4.812944412231445
    7. '               ' → logprob: -4.937944412231445
    8. '   ' → logprob: -6.687944412231445
    9. ' for' → logprob: -7.187944412231445
    10. '                   ' → logprob: -7.937944412231445

Token 1621: ',' (ID: 11)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.022071218118071556
    2. '           ' → logprob: -3.897071123123169
    3. 'for' → logprob: -6.522071361541748
    4. '               ' → logprob: -10.14707088470459
    5. '   ' → logprob: -11.64707088470459
    6. '
' → logprob: -12.02207088470459
    7. ' for' → logprob: -13.39707088470459
    8. '                   ' → logprob: -14.89707088470459
    9. 'from' → logprob: -14.89707088470459
    10. '                       ' → logprob: -15.77207088470459

Token 1622: ' then' (ID: 1815)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.021650638431310654
    2. '           ' → logprob: -4.396650791168213
    3. 'for' → logprob: -4.771650791168213
    4. '               ' → logprob: -8.021650314331055
    5. '
' → logprob: -8.271650314331055
    6. ' for' → logprob: -10.771650314331055
    7. '   ' → logprob: -11.146650314331055
    8. '                   ' → logprob: -12.146650314331055
    9. 'and' → logprob: -12.521650314331055
    10. '                       ' → logprob: -13.271650314331055

Token 1623: ' same' (ID: 2684)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.25501689314842224
    2. 'for' → logprob: -1.5050169229507446
    3. '
' → logprob: -6.005016803741455
    4. '           ' → logprob: -8.505017280578613
    5. ' for' → logprob: -8.755017280578613
    6. '   ' → logprob: -9.130017280578613
    7. '#' → logprob: -9.130017280578613
    8. '               ' → logprob: -10.880017280578613
    9. '```' → logprob: -12.130017280578613
    10. 'expected' → logprob: -12.380017280578613

Token 1624: ' for' (ID: 395)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5316634178161621
    2. 'for' → logprob: -0.9066634178161621
    3. '
' → logprob: -5.406663417816162
    4. '           ' → logprob: -6.156663417816162
    5. ' for' → logprob: -6.406663417816162
    6. '   ' → logprob: -9.15666389465332
    7. '               ' → logprob: -10.65666389465332
    8. '#' → logprob: -10.78166389465332
    9. 'lines' → logprob: -10.90666389465332
    10. 'expected' → logprob: -11.53166389465332

Token 1625: ' burden' (ID: 39183)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0513790026307106
    2. '           ' → logprob: -3.3013789653778076
    3. ' for' → logprob: -5.551379203796387
    4. 'expected' → logprob: -6.051379203796387
    5. '       ' → logprob: -6.801379203796387
    6. 'f' → logprob: -7.051379203796387
    7. 'range' → logprob: -7.176379203796387
    8. 'bur' → logprob: -7.176379203796387
    9. '
' → logprob: -7.426379203796387
    10. 'profit' → logprob: -7.551379203796387

Token 1626: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0773582011461258
    2. 'for' → logprob: -3.0773582458496094
    3. '           ' → logprob: -3.5773582458496094
    4. '   ' → logprob: -8.82735824584961
    5. 'expected' → logprob: -8.82735824584961
    6. '               ' → logprob: -9.70235824584961
    7. ' for' → logprob: -10.57735824584961
    8. '
' → logprob: -11.20235824584961
    9. '#' → logprob: -11.95235824584961
    10. '        
' → logprob: -12.95235824584961

Token 1627: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -7.40998875699006e-05
    2. '           ' → logprob: -10.12507438659668
    3. 'for' → logprob: -10.50007438659668
    4. '
' → logprob: -12.37507438659668
    5. '   ' → logprob: -13.50007438659668
    6. '               ' → logprob: -14.75007438659668
    7. '```' → logprob: -14.75007438659668
    8. 'from' → logprob: -17.25007438659668
    9. '        
' → logprob: -17.25007438659668
    10. ' for' → logprob: -17.50007438659668

Token 1628: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0003634713648352772
    2. 'for' → logprob: -8.12536334991455
    3. '
' → logprob: -10.00036334991455
    4. '           ' → logprob: -11.12536334991455
    5. '   ' → logprob: -12.87536334991455
    6. 'expected' → logprob: -13.62536334991455
    7. '        
' → logprob: -14.12536334991455
    8. '#' (adapté à ' #') → logprob: -14.12536334991455
    9. '               ' → logprob: -14.25036334991455
    10. '```' → logprob: -14.62536334991455

Token 1629: ' So' (ID: 2632)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00038360210601240396
    2. 'for' → logprob: -8.500383377075195
    3. '
' → logprob: -9.250383377075195
    4. '           ' → logprob: -9.500383377075195
    5. '   ' → logprob: -12.000383377075195
    6. '               ' → logprob: -13.375383377075195
    7. '        
' → logprob: -14.750383377075195
    8. ' for' → logprob: -15.250383377075195
    9. 'expected' → logprob: -15.500383377075195
    10. '```' → logprob: -15.750383377075195

Token 1630: ' rewrite' (ID: 50059)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5875653028488159
    2. 'for' → logprob: -0.8375653028488159
    3. ' for' → logprob: -5.2125654220581055
    4. 'expected' → logprob: -5.9625654220581055
    5. '           ' → logprob: -6.7125654220581055
    6. '   ' → logprob: -7.0875654220581055
    7. '#' → logprob: -7.0875654220581055
    8. '
' → logprob: -8.337565422058105
    9. 'lines' → logprob: -9.337565422058105
    10. 'profit' → logprob: -9.462565422058105

Token 1631: ' parsing' (ID: 51039)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0016795829869806767
    2. 'for' → logprob: -6.876679420471191
    3. '
' → logprob: -7.876679420471191
    4. 'expected' → logprob: -8.876679420471191
    5. '           ' → logprob: -9.626679420471191
    6. '   ' → logprob: -10.251679420471191
    7. 'from' → logprob: -12.001679420471191
    8. '               ' → logprob: -12.126679420471191
    9. ' for' → logprob: -12.751679420471191
    10. 'def' → logprob: -13.126679420471191

Token 1632: ' accordingly' (ID: 44041)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.001723488443531096
    2. '
' → logprob: -6.626723289489746
    3. 'expected' → logprob: -8.126723289489746
    4. '   ' → logprob: -10.251723289489746
    5. '           ' → logprob: -10.501723289489746
    6. 'for' → logprob: -11.626723289489746
    7. 'class' → logprob: -11.751723289489746
    8. '               ' → logprob: -12.251723289489746
    9. '```' → logprob: -12.376723289489746
    10. 'from' → logprob: -12.501723289489746

Token 1633: '

' (ID: 279)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0003096023283433169
    2. '
' → logprob: -8.375309944152832
    3. 'for' → logprob: -9.875309944152832
    4. '           ' → logprob: -10.875309944152832
    5. '   ' → logprob: -12.625309944152832
    6. 'expected' → logprob: -12.625309944152832
    7. '               ' → logprob: -13.750309944152832
    8. '```' → logprob: -14.875309944152832
    9. '        
' → logprob: -15.125309944152832
    10. ' for' → logprob: -15.875309944152832

Token 1634: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0009298062650486827
    2. '
' → logprob: -7.000929832458496
    3. '   ' → logprob: -12.375929832458496
    4. '```' → logprob: -12.625929832458496
    5. '           ' → logprob: -12.750929832458496
    6. 'for' → logprob: -12.875929832458496
    7. '        
' → logprob: -13.625929832458496
    8. 'from' → logprob: -13.750929832458496
    9. 'expected' → logprob: -13.875929832458496
    10. 'class' → logprob: -14.000929832458496

Token 1635: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0036411690525710583
    2. '
' → logprob: -5.628641128540039
    3. '        
' → logprob: -11.378641128540039
    4. 'expected' → logprob: -11.503641128540039
    5. '   ' → logprob: -11.753641128540039
    6. '           ' → logprob: -12.503641128540039
    7. 'for' → logprob: -13.003641128540039
    8. '               ' → logprob: -13.753641128540039
    9. 'c' → logprob: -14.003641128540039
    10. '#' (adapté à ' #') → logprob: -14.003641128540039

Token 1636: ' Re' (ID: 907)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0021407436579465866
    2. 'for' → logprob: -7.002140522003174
    3. 'expected' → logprob: -7.377140522003174
    4. '
' → logprob: -7.502140522003174
    5. '   ' → logprob: -10.877140998840332
    6. '           ' → logprob: -11.002140998840332
    7. '#' → logprob: -12.252140998840332
    8. ' for' → logprob: -13.002140998840332
    9. '        
' → logprob: -13.127140998840332
    10. ' expected' → logprob: -13.377140998840332

Token 1637: 'wind' (ID: 22422)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0164306852966547
    2. 'expected' → logprob: -4.266430854797363
    3. 'for' → logprob: -7.141430854797363
    4. 'turn' → logprob: -7.516430854797363
    5. '           ' → logprob: -7.891430854797363
    6. '   ' → logprob: -8.766430854797363
    7. '
' → logprob: -8.891430854797363
    8. '#' → logprob: -9.641430854797363
    9. ' expected' → logprob: -10.266430854797363
    10. 's' → logprob: -10.391430854797363

Token 1638: ' parsing' (ID: 51039)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0021395552903413773
    2. 'expected' → logprob: -6.627139568328857
    3. 'for' → logprob: -8.2521390914917
    4. '
' → logprob: -8.3771390914917
    5. '           ' → logprob: -9.2521390914917
    6. '   ' → logprob: -9.5021390914917
    7. 'from' → logprob: -9.6271390914917
    8. '#' → logprob: -10.2521390914917
    9. 'class' → logprob: -11.3771390914917
    10. '               ' → logprob: -11.5021390914917

Token 1639: ' for' (ID: 395)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00044556602369993925
    2. '
' → logprob: -8.250445365905762
    3. 'from' → logprob: -10.000445365905762
    4. '   ' → logprob: -10.250445365905762
    5. 'class' → logprob: -10.375445365905762
    6. 'expected' → logprob: -10.750445365905762
    7. '#' → logprob: -11.125445365905762
    8. '           ' → logprob: -11.625445365905762
    9. 'for' → logprob: -12.000445365905762
    10. 'def' → logprob: -12.125445365905762

Token 1640: ' E' (ID: 457)
  Prédit: 'expected'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'expected' → logprob: -0.933260977268219
    2. '_' → logprob: -2.058260917663574
    3. 'for' → logprob: -2.058260917663574
    4. '_expected' → logprob: -2.433260917663574
    5. 'range' → logprob: -2.558260917663574
    6. 'i' → logprob: -2.808260917663574
    7. 'profit' → logprob: -3.558260917663574
    8. '_i' → logprob: -4.308260917663574
    9. '       ' → logprob: -4.308260917663574
    10. '_profit' → logprob: -4.308260917663574

Token 1641: ':
' (ID: 734)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.05338902771472931
    2. 'expected' → logprob: -3.428389072418213
    3. 'for' → logprob: -4.053389072418213
    4. '           ' → logprob: -6.428389072418213
    5. '   ' → logprob: -8.678388595581055
    6. '#' → logprob: -8.928388595581055
    7. '
' → logprob: -9.553388595581055
    8. '               ' → logprob: -10.178388595581055
    9. 'E' → logprob: -10.178388595581055
    10. 'from' → logprob: -10.428388595581055

Token 1642: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0011641497258096933
    2. '
' → logprob: -7.251163959503174
    3. 'expected' → logprob: -8.001164436340332
    4. 'for' → logprob: -9.376164436340332
    5. '           ' → logprob: -11.251164436340332
    6. '   ' → logprob: -11.376164436340332
    7. '        
' → logprob: -13.126164436340332
    8. '               ' → logprob: -13.251164436340332
    9. ' expected' → logprob: -13.751164436340332
    10. 'from' → logprob: -13.751164436340332

Token 1643: ' e' (ID: 319)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.005415419116616249
    2. 'expected' → logprob: -5.630415439605713
    3. 'for' → logprob: -6.380415439605713
    4. '           ' → logprob: -10.255414962768555
    5. '
' → logprob: -10.255414962768555
    6. '   ' → logprob: -10.630414962768555
    7. '#' → logprob: -11.255414962768555
    8. '               ' → logprob: -12.380414962768555
    9. '        
' → logprob: -13.505414962768555
    10. ' for' → logprob: -13.880414962768555

Token 1644: '_profit' (ID: 186239)
  Prédit: 'expected'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'expected' → logprob: -0.5368382334709167
    2. '       ' → logprob: -1.6618382930755615
    3. 'for' → logprob: -2.0368382930755615
    4. 'x' → logprob: -3.4118382930755615
    5. '           ' → logprob: -3.6618382930755615
    6. '_expected' → logprob: -4.911838054656982
    7. 'xp' → logprob: -5.036838054656982
    8. 'pected' → logprob: -5.161838054656982
    9. '=' → logprob: -5.661838054656982
    10. ' =' → logprob: -5.786838054656982

Token 1645: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.39487218856811523
    2. '=' → logprob: -2.0198721885681152
    3. '_values' → logprob: -2.6448721885681152
    4. '=[]
' → logprob: -3.2698721885681152
    5. '       ' → logprob: -3.6448721885681152
    6. '=[]' → logprob: -4.144872188568115
    7. '.clear' → logprob: -4.269872188568115
    8. 'for' → logprob: -5.269872188568115
    9. '_lines' → logprob: -5.644872188568115
    10. '.extend' → logprob: -5.769872188568115

Token 1646: ' [[' (ID: 9237)
  Prédit: '[]
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]
' → logprob: -0.03870825096964836
    2. '[' → logprob: -3.538708209991455
    3. '[C' → logprob: -5.038708209991455
    4. '[e' → logprob: -6.538708209991455
    5. '[]' → logprob: -7.538708209991455
    6. '[int' → logprob: -8.538708686828613
    7. '[
' → logprob: -9.163708686828613
    8. '[[' → logprob: -9.663708686828613
    9. '[]

' → logprob: -10.538708686828613
    10. '[c' → logprob: -10.538708686828613

Token 1647: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -5.908022285439074e-05
    2. '[]' → logprob: -11.625059127807617
    3. '
' → logprob: -11.750059127807617
    4. '[' → logprob: -11.875059127807617
    5. 'next' → logprob: -11.875059127807617
    6. 'for' → logprob: -12.250059127807617
    7. ' ' → logprob: -12.375059127807617
    8. '           ' → logprob: -12.375059127807617
    9. '   ' → logprob: -12.750059127807617
    10. '       ' → logprob: -13.000059127807617

Token 1648: ']*' (ID: 18579)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.43583375215530396
    2. ' for' → logprob: -1.0608336925506592
    3. '           ' → logprob: -5.060833930969238
    4. '               ' → logprob: -7.935833930969238
    5. '       ' → logprob: -8.435833930969238
    6. ']' → logprob: -9.560833930969238
    7. '                   ' → logprob: -10.060833930969238
    8. '   ' → logprob: -10.185833930969238
    9. ' ' → logprob: -11.810833930969238
    10. '[' → logprob: -12.185833930969238

Token 1649: 'D' (ID: 35)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.012829115614295006
    2. 'D' → logprob: -4.387829303741455
    3. '       ' → logprob: -8.637828826904297
    4. 'for' → logprob: -10.262828826904297
    5. '(self' → logprob: -10.387828826904297
    6. '           ' → logprob: -10.387828826904297
    7. ' self' → logprob: -10.512828826904297
    8. '               ' → logprob: -12.262828826904297
    9. '   ' → logprob: -13.137828826904297
    10. '
' → logprob: -13.512828826904297

Token 1650: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.3376590609550476
    2. ' for' → logprob: -1.3376591205596924
    3. '           ' → logprob: -4.462658882141113
    4. '       ' → logprob: -4.587658882141113
    5. '               ' → logprob: -6.587658882141113
    6. ']' → logprob: -7.837658882141113
    7. '   ' → logprob: -8.587658882141113
    8. '                   ' → logprob: -8.962658882141113
    9. '        ' → logprob: -9.462658882141113
    10. ' ' → logprob: -10.462658882141113

Token 1651: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.001875563059002161
    2. '_range' → logprob: -7.126875400543213
    3. '_i' → logprob: -7.626875400543213
    4. 'i' → logprob: -8.626875877380371
    5. ' _' → logprob: -8.876875877380371
    6. '   ' → logprob: -9.001875877380371
    7. '_r' → logprob: -9.626875877380371
    8. 'range' → logprob: -10.626875877380371
    9. '_=' → logprob: -11.251875877380371
    10. ' range' → logprob: -11.876875877380371

Token 1652: ' in' (ID: 306)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.8669031262397766
    2. 'i' → logprob: -1.2419030666351318
    3. '_' → logprob: -1.9919030666351318
    4. 'r' → logprob: -2.116903066635132
    5. 'in' → logprob: -3.616903066635132
    6. '_r' → logprob: -6.241903305053711
    7. '_range' → logprob: -6.491903305053711
    8. '_i' → logprob: -6.991903305053711
    9. 'row' → logprob: -7.116903305053711
    10. ' range' → logprob: -7.491903305053711

Token 1653: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.003635111730545759
    2. ' range' → logprob: -5.628634929656982
    3. 'i' → logprob: -11.12863540649414
    4. '_range' → logprob: -11.62863540649414
    5. 'r' → logprob: -12.12863540649414
    6. '_' → logprob: -12.75363540649414
    7. '
' → logprob: -13.75363540649414
    8. '   ' → logprob: -14.50363540649414
    9. '(range' → logprob: -14.62863540649414
    10. '0' → logprob: -15.62863540649414

Token 1654: '(C' (ID: 5559)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.01796180196106434
    2. 'C' → logprob: -4.5179619789123535
    3. ' range' → logprob: -5.1429619789123535
    4. '           ' → logprob: -7.8929619789123535
    5. '       ' → logprob: -8.142961502075195
    6. '   ' → logprob: -8.767961502075195
    7. 'self' → logprob: -9.392961502075195
    8. 'i' → logprob: -10.892961502075195
    9. '_range' → logprob: -10.892961502075195
    10. ' C' → logprob: -11.267961502075195

Token 1655: ')]
' (ID: 11587)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.19946148991584778
    2. ']
' → logprob: -2.1994614601135254
    3. ')]
' → logprob: -3.1994614601135254
    4. 'for' → logprob: -4.574461460113525
    5. '           ' → logprob: -4.949461460113525
    6. ']' → logprob: -4.949461460113525
    7. '               ' → logprob: -6.074461460113525
    8. ')' → logprob: -7.449461460113525
    9. ')]' → logprob: -7.574461460113525
    10. ' for' → logprob: -7.949461460113525

Token 1656: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00015955790877342224
    2. 'for' → logprob: -8.75015926361084
    3. '           ' → logprob: -14.00015926361084
    4. '               ' → logprob: -15.87515926361084
    5. '   ' → logprob: -16.750160217285156
    6. ' for' → logprob: -16.875160217285156
    7. '```' → logprob: -18.250160217285156
    8. '
' → logprob: -19.625160217285156
    9. '                       ' → logprob: -20.375160217285156
    10. 'from' → logprob: -20.500160217285156

Token 1657: ' for' (ID: 395)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0031806828919798136
    2. 'for' (adapté à ' for') → logprob: -5.753180503845215
    3. '           ' → logprob: -13.128180503845215
    4. '   ' → logprob: -14.628180503845215
    5. ' for' → logprob: -14.878180503845215
    6. '               ' → logprob: -15.878180503845215
    7. '```' → logprob: -18.25318145751953
    8. '
' → logprob: -19.75318145751953
    9. '      ' → logprob: -20.50318145751953
    10. 'from' → logprob: -20.62818145751953

Token 1658: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.2155502736568451
    2. 'r' → logprob: -1.7155503034591675
    3. 'region' → logprob: -4.590550422668457
    4. 'c' → logprob: -5.590550422668457
    5. '   ' → logprob: -9.215550422668457
    6. ' i' → logprob: -10.340550422668457
    7. 'ri' → logprob: -12.465550422668457
    8. ' r' → logprob: -12.465550422668457
    9. '_i' → logprob: -12.590550422668457
    10. 'ci' → logprob: -12.590550422668457

Token 1659: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.008620720356702805
    2. 'in' → logprob: -4.883620738983154
    3. '       ' → logprob: -7.133620738983154
    4. '           ' → logprob: -9.633620262145996
    5. '   ' → logprob: -9.633620262145996
    6. 'for' → logprob: -11.258620262145996
    7. ' ' → logprob: -11.633620262145996
    8. 'C' → logprob: -11.758620262145996
    9. '_' → logprob: -11.883620262145996
    10. '[' → logprob: -12.133620262145996

Token 1660: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0031784253660589457
    2. ' range' → logprob: -5.753178596496582
    3. '0' → logprob: -15.253178596496582
    4. '   ' → logprob: -15.628178596496582
    5. 'in' → logprob: -15.878178596496582
    6. ' in' → logprob: -17.378177642822266
    7. 'r' → logprob: -17.503177642822266
    8. 'C' → logprob: -17.503177642822266
    9. '	range' → logprob: -17.753177642822266
    10. '(range' → logprob: -18.128177642822266

Token 1661: '(C' (ID: 5559)
  Prédit: 'C'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'C' → logprob: -0.0006383348954841495
    2. '0' → logprob: -8.125638008117676
    3. 'self' → logprob: -8.250638008117676
    4. ' C' → logprob: -9.875638008117676
    5. '       ' → logprob: -10.625638008117676
    6. '           ' → logprob: -13.250638008117676
    7. '(C' → logprob: -13.750638008117676
    8. '   ' → logprob: -14.125638008117676
    9. '	C' → logprob: -15.000638008117676
    10. ')' → logprob: -15.125638008117676

Token 1662: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.05870595946907997
    2. '):' → logprob: -2.933706045150757
    3. '           ' → logprob: -5.933705806732178
    4. '       ' → logprob: -6.933705806732178
    5. '   ' → logprob: -9.183706283569336
    6. 'for' → logprob: -10.433706283569336
    7. '):
' → logprob: -10.433706283569336
    8. ' for' → logprob: -12.058706283569336
    9. '               ' → logprob: -12.308706283569336
    10. ')' → logprob: -12.433706283569336

Token 1663: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.522753894329071
    2. '       ' → logprob: -1.2727539539337158
    3. 'for' → logprob: -2.772753953933716
    4. '   ' → logprob: -3.022753953933716
    5. ' for' → logprob: -4.147753715515137
    6. '               ' → logprob: -9.522753715515137
    7. ' ' → logprob: -11.272753715515137
    8. '	for' → logprob: -12.522753715515137
    9. '```' → logprob: -12.897753715515137
    10. '         ' → logprob: -13.772753715515137

Token 1664: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.004408159293234348
    2. '           ' → logprob: -6.004408359527588
    3. ' for' → logprob: -6.629408359527588
    4. '   ' → logprob: -7.754408359527588
    5. '       ' → logprob: -8.75440788269043
    6. '               ' → logprob: -11.12940788269043
    7. ' ' → logprob: -11.87940788269043
    8. '	for' → logprob: -13.62940788269043
    9. '                   ' → logprob: -16.62940788269043
    10. '  ' → logprob: -16.87940788269043

Token 1665: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -4.4418171455617994e-05
    2. ' j' → logprob: -10.125044822692871
    3. '   ' → logprob: -12.625044822692871
    4. '0' → logprob: -15.125044822692871
    5. 'day' → logprob: -15.125044822692871
    6. '           ' → logprob: -15.875044822692871
    7. '       ' → logprob: -16.750043869018555
    8. '	j' → logprob: -17.000043869018555
    9. '_j' → logprob: -17.125043869018555
    10. '    ' → logprob: -17.375043869018555

Token 1666: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.04758042097091675
    2. 'in' → logprob: -3.1725804805755615
    3. '           ' → logprob: -6.047580242156982
    4. '               ' → logprob: -6.672580242156982
    5. '       ' → logprob: -8.67258071899414
    6. ',' → logprob: -9.04758071899414
    7. '=' → logprob: -9.17258071899414
    8. '(' → logprob: -9.29758071899414
    9. '   ' → logprob: -9.67258071899414
    10. '[' → logprob: -10.04758071899414

Token 1667: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0067154900170862675
    2. ' range' → logprob: -5.006715297698975
    3. '(range' → logprob: -15.631715774536133
    4. '	range' → logprob: -17.006715774536133
    5. '   ' → logprob: -18.881715774536133
    6. '           ' → logprob: -20.006715774536133
    7. '
' → logprob: -20.131715774536133
    8. '[' → logprob: -20.381715774536133
    9. '0' → logprob: -20.506715774536133
    10. ')' → logprob: -20.506715774536133

Token 1668: '(D' (ID: 9908)
  Prédit: 'D'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'D' → logprob: -0.0013148818397894502
    2. '0' → logprob: -7.251315116882324
    3. '           ' → logprob: -8.251315116882324
    4. '               ' → logprob: -8.626315116882324
    5. 'range' → logprob: -9.501315116882324
    6. '                   ' → logprob: -10.501315116882324
    7. ' D' → logprob: -11.126315116882324
    8. 'self' → logprob: -11.376315116882324
    9. 'j' → logprob: -11.751315116882324
    10. '   ' → logprob: -12.001315116882324

Token 1669: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.13451145589351654
    2. '               ' → logprob: -2.1345114707946777
    3. '):' → logprob: -5.134511470794678
    4. '           ' → logprob: -6.759511470794678
    5. ')' → logprob: -8.38451099395752
    6. '):
' → logprob: -9.75951099395752
    7. ':
' → logprob: -9.88451099395752
    8. '       ' → logprob: -10.00951099395752
    9. '                   ' → logprob: -10.50951099395752
    10. ']:
' → logprob: -10.88451099395752

Token 1670: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -2.8087270038668066e-05
    2. '                   ' → logprob: -11.000027656555176
    3. '                       ' → logprob: -11.625027656555176
    4. 'e' → logprob: -14.250027656555176
    5. '           ' → logprob: -14.250027656555176
    6. '       ' → logprob: -14.750027656555176
    7. '		       ' → logprob: -15.750027656555176
    8. '                ' → logprob: -16.375028610229492
    9. '              ' → logprob: -16.375028610229492
    10. '			' → logprob: -16.500028610229492

Token 1671: ' line' (ID: 2543)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.8719676733016968
    2. '               ' → logprob: -1.1219676733016968
    3. 'e' → logprob: -1.6219676733016968
    4. 'value' → logprob: -3.7469677925109863
    5. 'line' (adapté à ' line') → logprob: -3.7469677925109863
    6. '                       ' → logprob: -4.996967792510986
    7. 'val' → logprob: -5.996967792510986
    8. 'num' → logprob: -6.746967792510986
    9. ' e' → logprob: -8.746967315673828
    10. '   ' → logprob: -8.746967315673828

Token 1672: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.08102738857269287
    2. '               ' → logprob: -3.3310275077819824
    3. '=' → logprob: -3.7060275077819824
    4. '                   ' → logprob: -4.206027507781982
    5. '=line' → logprob: -6.956027507781982
    6. '           ' → logprob: -7.331027507781982
    7. '   ' → logprob: -8.831027030944824
    8. 'token' → logprob: -9.206027030944824
    9. 'value' → logprob: -9.456027030944824
    10. 'line' → logprob: -9.831027030944824

Token 1673: ' next' (ID: 2613)
  Prédit: 'next'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'next' → logprob: -0.0012726159766316414
    2. ' next' → logprob: -6.751272678375244
    3. '               ' → logprob: -9.501272201538086
    4. '                   ' → logprob: -10.626272201538086
    5. '(next' → logprob: -13.376272201538086
    6. '           ' → logprob: -13.876272201538086
    7. '                       ' → logprob: -15.001272201538086
    8. 'self' → logprob: -15.376272201538086
    9. '.next' → logprob: -16.626272201538086
    10. '   ' → logprob: -16.876272201538086

Token 1674: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.02975824475288391
    2. 'self' → logprob: -3.5297582149505615
    3. '[self' → logprob: -13.15475845336914
    4. ' self' → logprob: -13.27975845336914
    5. '=self' → logprob: -13.65475845336914
    6. '               ' → logprob: -14.02975845336914
    7. '           ' → logprob: -14.27975845336914
    8. '
' → logprob: -14.77975845336914
    9. '                   ' → logprob: -15.65475845336914
    10. '	self' → logprob: -16.02975845336914

Token 1675: '.lines' (ID: 96601)
  Prédit: '.lines'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.lines' → logprob: -0.0007127894787117839
    2. '(lines' → logprob: -7.500712871551514
    3. '(self' → logprob: -10.250712394714355
    4. '	lines' → logprob: -10.375712394714355
    5. 'self' → logprob: -10.500712394714355
    6. 'lines' → logprob: -10.750712394714355
    7. ').' → logprob: -11.750712394714355
    8. '_lines' → logprob: -11.750712394714355
    9. '().' → logprob: -12.125712394714355
    10. '.readlines' → logprob: -12.625712394714355

Token 1676: ').' (ID: 741)
  Prédit: ').'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ').' → logprob: -0.3246804475784302
    2. '               ' → logprob: -1.4496804475784302
    3. '                   ' → logprob: -3.8246803283691406
    4. '().' → logprob: -4.199680328369141
    5. '()).' → logprob: -5.574680328369141
    6. ')
' → logprob: -7.449680328369141
    7. '
' → logprob: -8.19968032836914
    8. '           ' → logprob: -8.57468032836914
    9. '()
' → logprob: -8.57468032836914
    10. '").' → logprob: -8.94968032836914

Token 1677: 'strip' (ID: 23905)
  Prédit: 'strip'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'strip' → logprob: -4.723352049040841e-06
    2. 'rstrip' → logprob: -12.375004768371582
    3. '.strip' → logprob: -15.625004768371582
    4. '_strip' → logprob: -16.000003814697266
    5. ' strip' → logprob: -16.250003814697266
    6. 'split' → logprob: -17.250003814697266
    7. '               ' → logprob: -18.000003814697266
    8. '(strip' → logprob: -18.125003814697266
    9. 'Strip' → logprob: -18.500003814697266
    10. '
' → logprob: -18.875003814697266

Token 1678: '()
' (ID: 1234)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0016520909266546369
    2. '                
' → logprob: -7.251652240753174
    3. '
' → logprob: -7.376652240753174
    4. '                   ' → logprob: -9.626651763916016
    5. '           ' → logprob: -10.001651763916016
    6. ',' → logprob: -10.001651763916016
    7. ')' → logprob: -10.501651763916016
    8. '                ' → logprob: -11.126651763916016
    9. '       ' → logprob: -11.251651763916016
    10. '              ' → logprob: -11.501651763916016

Token 1679: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -5.180879816180095e-05
    2. '                   ' → logprob: -10.375051498413086
    3. 'e' → logprob: -11.750051498413086
    4. '       ' → logprob: -12.625051498413086
    5. '                       ' → logprob: -13.125051498413086
    6. '```' → logprob: -13.500051498413086
    7. 'num' → logprob: -13.875051498413086
    8. '           ' → logprob: -13.875051498413086
    9. 'number' → logprob: -14.375051498413086
    10. '
' → logprob: -14.375051498413086

Token 1680: ' while' (ID: 2049)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.015149205923080444
    2. '               ' → logprob: -4.765149116516113
    3. 'while' (adapté à ' while') → logprob: -5.140149116516113
    4. ' e' → logprob: -8.140149116516113
    5. '                   ' → logprob: -9.015149116516113
    6. 'value' → logprob: -9.140149116516113
    7. 'num' → logprob: -9.640149116516113
    8. ' while' → logprob: -10.515149116516113
    9. 'number' → logprob: -11.015149116516113
    10. '                       ' → logprob: -12.265149116516113

Token 1681: ' not' (ID: 625)
  Prédit: 'not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'not' → logprob: -0.0007456640596501529
    2. 'line' → logprob: -7.25074577331543
    3. ' not' → logprob: -10.25074577331543
    4. 'len' → logprob: -15.50074577331543
    5. '(not' → logprob: -15.75074577331543
    6. ' line' → logprob: -18.12574577331543
    7. '(line' → logprob: -18.62574577331543
    8. '!' → logprob: -19.00074577331543
    9. '   ' → logprob: -20.12574577331543
    10. '	not' → logprob: -20.12574577331543

Token 1682: ' line' (ID: 2543)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'line' → logprob: -1.9361264946837764e-07
    2. ' line' → logprob: -15.75
    3. '(line' → logprob: -22.625
    4. '
' → logprob: -22.75
    5. '#line' → logprob: -24.125
    6. 'len' → logprob: -24.375
    7. '	line' → logprob: -24.5
    8. '[line' → logprob: -25.25
    9. '_line' → logprob: -25.5
    10. 'lines' → logprob: -25.5

Token 1683: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.18304210901260376
    2. ':' → logprob: -1.808042049407959
    3. '                   ' → logprob: -5.933042049407959
    4. '==' → logprob: -8.433042526245117
    5. '):
' → logprob: -8.558042526245117
    6. '               ' → logprob: -9.058042526245117
    7. '):' → logprob: -10.433042526245117
    8. '                       ' → logprob: -10.808042526245117
    9. '           ' → logprob: -11.183042526245117
    10. '():
' → logprob: -11.558042526245117

Token 1684: '                   ' (ID: 699)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.4775488078594208
    2. '                   ' → logprob: -0.9775488376617432
    3. '                       ' → logprob: -6.352548599243164
    4. '
' → logprob: -8.102548599243164
    5. '           ' → logprob: -8.602548599243164
    6. ':
' → logprob: -8.727548599243164
    7. 'continue' → logprob: -8.852548599243164
    8. '```' → logprob: -8.977548599243164
    9. 'token' → logprob: -9.477548599243164
    10. '       ' → logprob: -9.602548599243164

Token 1685: ' line' (ID: 2543)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'line' (adapté à ' line') → logprob: -7.672236824873835e-05
    2. '                   ' → logprob: -9.875076293945312
    3. ' line' → logprob: -10.875076293945312
    4. '                       ' → logprob: -12.500076293945312
    5. '               ' → logprob: -13.125076293945312
    6. '#line' → logprob: -15.625076293945312
    7. '           ' → logprob: -16.000076293945312
    8. '   ' → logprob: -16.000076293945312
    9. 'lines' → logprob: -16.750076293945312
    10. '       ' → logprob: -17.250076293945312

Token 1686: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.2664693593978882
    2. ' =' → logprob: -1.5164693593978882
    3. '=line' → logprob: -4.391469478607178
    4. '                   ' → logprob: -6.891469478607178
    5. '               ' → logprob: -7.266469478607178
    6. 'line' → logprob: -8.89146900177002
    7. '=
' → logprob: -9.89146900177002
    8. '                       ' → logprob: -10.39146900177002
    9. '   ' → logprob: -10.89146900177002
    10. ':' → logprob: -10.89146900177002

Token 1687: ' next' (ID: 2613)
  Prédit: 'next'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'next' → logprob: -0.0015186689561232924
    2. ' next' → logprob: -6.501518726348877
    3. '(next' → logprob: -11.251518249511719
    4. 'self' → logprob: -12.751518249511719
    5. '               ' → logprob: -15.126518249511719
    6. '                   ' → logprob: -15.876518249511719
    7. '[next' → logprob: -17.75151824951172
    8. '_next' → logprob: -17.75151824951172
    9. '.next' → logprob: -18.12651824951172
    10. '	next' → logprob: -18.25151824951172

Token 1688: '(self' (ID: 2402)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.07896535843610764
    2. '(self' → logprob: -2.578965425491333
    3. '[self' → logprob: -10.328965187072754
    4. ' self' → logprob: -10.453965187072754
    5. '               ' → logprob: -11.828965187072754
    6. '                   ' → logprob: -13.203965187072754
    7. '
' → logprob: -13.453965187072754
    8. '           ' → logprob: -13.578965187072754
    9. '=self' → logprob: -14.203965187072754
    10. '   ' → logprob: -14.953965187072754

Token 1689: '.lines' (ID: 96601)
  Prédit: '.lines'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.lines' → logprob: -0.00017827287956606597
    2. 'self' → logprob: -8.875178337097168
    3. 'lines' → logprob: -10.250178337097168
    4. '(lines' → logprob: -14.000178337097168
    5. '	lines' → logprob: -14.375178337097168
    6. '.self' → logprob: -14.750178337097168
    7. '_lines' → logprob: -14.875178337097168
    8. 'Lines' → logprob: -15.000178337097168
    9. '[self' → logprob: -15.125178337097168
    10. 'LINES' → logprob: -16.75017738342285

Token 1690: ').' (ID: 741)
  Prédit: ').'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ').' → logprob: -0.024288181215524673
    2. '.strip' → logprob: -4.149288177490234
    3. '().' → logprob: -4.899288177490234
    4. '               ' → logprob: -7.899288177490234
    5. '                   ' → logprob: -8.149288177490234
    6. '()).' → logprob: -9.899288177490234
    7. '].' → logprob: -11.274288177490234
    8. '                       ' → logprob: -11.399288177490234
    9. '           ' → logprob: -12.024288177490234
    10. 'strip' → logprob: -12.149288177490234

Token 1691: 'strip' (ID: 23905)
  Prédit: 'strip'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'strip' → logprob: -3.128163257315464e-07
    2. ' strip' → logprob: -16.25
    3. 'rstrip' → logprob: -16.375
    4. '.strip' → logprob: -17.875
    5. '(strip' → logprob: -18.5
    6. 'split' → logprob: -18.5
    7. '_strip' → logprob: -18.625
    8. '               ' → logprob: -19.0
    9. 'str' → logprob: -19.375
    10. 'stripe' → logprob: -20.0

Token 1692: '()
' (ID: 1234)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0006708591827191412
    2. ')' → logprob: -8.125670433044434
    3. '
' → logprob: -8.625670433044434
    4. ')
' → logprob: -9.250670433044434
    5. '                   ' → logprob: -10.625670433044434
    6. '           ' → logprob: -10.875670433044434
    7. '):
' → logprob: -11.250670433044434
    8. ',' → logprob: -11.500670433044434
    9. '                
' → logprob: -11.875670433044434
    10. ':
' → logprob: -12.625670433044434

Token 1693: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0002715873415581882
    2. '                   ' → logprob: -8.500271797180176
    3. 'e' → logprob: -10.125271797180176
    4. '           ' → logprob: -11.250271797180176
    5. '                       ' → logprob: -12.375271797180176
    6. '       ' → logprob: -12.625271797180176
    7. ' e' → logprob: -13.250271797180176
    8. '```' → logprob: -13.500271797180176
    9. '
' → logprob: -13.625271797180176
    10. '                ' → logprob: -14.625271797180176

Token 1694: ' e' (ID: 319)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' (adapté à ' e') → logprob: -0.10395102202892303
    2. '               ' → logprob: -2.3539509773254395
    3. '                   ' → logprob: -5.7289509773254395
    4. ' e' → logprob: -7.9789509773254395
    5. '                       ' → logprob: -9.728951454162598
    6. 'value' → logprob: -10.728951454162598
    7. '       ' → logprob: -10.728951454162598
    8. '           ' → logprob: -10.978951454162598
    9. '   ' → logprob: -11.603951454162598
    10. 'num' → logprob: -12.353951454162598

Token 1695: '_profit' (ID: 186239)
  Prédit: '_profit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_profit' → logprob: -0.024310287088155746
    2. 'profit' → logprob: -4.399310111999512
    3. '_value' → logprob: -5.274310111999512
    4. '_val' → logprob: -5.774310111999512
    5. ' =' → logprob: -6.024310111999512
    6. '=' → logprob: -8.649310111999512
    7. 'val' → logprob: -8.899310111999512
    8. '_' → logprob: -8.899310111999512
    9. 'Profit' → logprob: -9.399310111999512
    10. '_pro' → logprob: -9.649310111999512

Token 1696: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.0001789881061995402
    2. '                   ' → logprob: -9.500179290771484
    3. '               ' → logprob: -10.250179290771484
    4. 'i' → logprob: -10.750179290771484
    5. '[' → logprob: -11.750179290771484
    6. '[e' → logprob: -11.875179290771484
    7. ' =' → logprob: -12.000179290771484
    8. '           ' → logprob: -12.625179290771484
    9. '[C' → logprob: -12.625179290771484
    10. '<|end|>' → logprob: -13.000179290771484

Token 1697: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.11938895285129547
    2. '[j' → logprob: -2.244389057159424
    3. '[i' → logprob: -5.369389057159424
    4. '               ' → logprob: -6.994389057159424
    5. ']' → logprob: -8.244388580322266
    6. ')[' → logprob: -8.494388580322266
    7. '[' → logprob: -8.494388580322266
    8. '                   ' → logprob: -8.869388580322266
    9. '           ' → logprob: -9.869388580322266
    10. '[line' → logprob: -10.744388580322266

Token 1698: 'j' (ID: 73)
  Prédit: 'j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -6.704273118884885e-07
    2. ' j' → logprob: -14.500000953674316
    3. '                   ' → logprob: -16.625
    4. '   ' → logprob: -18.125
    5. '[j' → logprob: -19.125
    6. '$j' → logprob: -19.125
    7. '               ' → logprob: -19.375
    8. '	j' → logprob: -19.625
    9. '
' → logprob: -19.75
    10. '           ' → logprob: -20.0

Token 1699: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.03268473967909813
    2. '=' → logprob: -4.157684803009033
    3. ']=' → logprob: -4.282684803009033
    4. ')' → logprob: -7.032684803009033
    5. '               ' → logprob: -7.032684803009033
    6. '                   ' → logprob: -7.282684803009033
    7. ' =' → logprob: -9.032684326171875
    8. ')]' → logprob: -10.407684326171875
    9. '])' → logprob: -10.532684326171875
    10. ')=' → logprob: -10.782684326171875

Token 1700: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.16024799644947052
    2. ' =' → logprob: -1.910248041152954
    3. '=int' → logprob: -10.660247802734375
    4. '.=' → logprob: -16.660247802734375
    5. '＝' → logprob: -16.785247802734375
    6. '   ' → logprob: -16.910247802734375
    7. '+=' → logprob: -17.035247802734375
    8. ' ' → logprob: -17.535247802734375
    9. '[int' → logprob: -17.535247802734375
    10. 'int' → logprob: -17.660247802734375

Token 1701: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -1.1472419600977446e-06
    2. ' int' → logprob: -13.750000953674316
    3. '[int' → logprob: -21.250001907348633
    4. '               ' → logprob: -21.750001907348633
    5. '(int' → logprob: -22.000001907348633
    6. ':int' → logprob: -22.750001907348633
    7. '=int' → logprob: -22.875001907348633
    8. '                   ' → logprob: -23.000001907348633
    9. '<int' → logprob: -23.750001907348633
    10. 'ints' → logprob: -23.875001907348633

Token 1702: '(line' (ID: 18178)
  Prédit: '(line'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(line' → logprob: -0.03805343061685562
    2. 'line' → logprob: -3.288053512573242
    3. ' line' → logprob: -11.538053512573242
    4. '[line' → logprob: -14.038053512573242
    5. '=line' → logprob: -14.163053512573242
    6. '#line' → logprob: -14.413053512573242
    7. '	line' → logprob: -16.288053512573242
    8. ',line' → logprob: -17.663053512573242
    9. '(' → logprob: -19.038053512573242
    10. '_line' → logprob: -19.163053512573242

Token 1703: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0041191233322024345
    2. '               ' → logprob: -5.629118919372559
    3. ')
' → logprob: -7.629118919372559
    4. '       ' → logprob: -11.504118919372559
    5. '<|end|>' → logprob: -11.879118919372559
    6. ')return' → logprob: -12.129118919372559
    7. '           ' → logprob: -12.754118919372559
    8. ' )' → logprob: -13.254118919372559
    9. '                   ' → logprob: -13.379118919372559
    10. '<|end|>' → logprob: -13.629118919372559

Token 1704: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.001983236987143755
    2. '
' → logprob: -6.251983165740967
    3. '        
' → logprob: -10.001983642578125
    4. '```' → logprob: -13.001983642578125
    5. 'for' → logprob: -13.126983642578125
    6. '#' → logprob: -13.501983642578125
    7. 'bur' → logprob: -13.876983642578125
    8. '               ' → logprob: -14.126983642578125
    9. '   ' → logprob: -14.251983642578125
    10. '           ' → logprob: -14.751983642578125

Token 1705: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.021834474056959152
    2. 'bur' → logprob: -4.646834373474121
    3. 'b' → logprob: -5.021834373474121
    4. '#' (adapté à ' #') → logprob: -5.396834373474121
    5. 'f' → logprob: -7.771834373474121
    6. '
' → logprob: -8.646834373474121
    7. '        
' → logprob: -9.396834373474121
    8. '   ' → logprob: -9.646834373474121
    9. '               ' → logprob: -9.646834373474121
    10. 'for' → logprob: -10.396834373474121

Token 1706: ' then' (ID: 1815)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.683822751045227
    2. '       ' → logprob: -1.058822751045227
    3. 'bur' → logprob: -2.6838226318359375
    4. 'f' → logprob: -2.6838226318359375
    5. '#' → logprob: -4.6838226318359375
    6. 'for' → logprob: -6.1838226318359375
    7. '               ' → logprob: -8.683822631835938
    8. '   ' → logprob: -8.808822631835938
    9. '
' → logprob: -9.558822631835938
    10. '        
' → logprob: -9.808822631835938

Token 1707: ' F' (ID: 454)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.07168950140476227
    2. 'f' → logprob: -3.1966896057128906
    3. 'bur' → logprob: -4.321689605712891
    4. '#' → logprob: -5.196689605712891
    5. '       ' → logprob: -5.196689605712891
    6. '               ' → logprob: -6.446689605712891
    7. '           ' → logprob: -7.071689605712891
    8. '   ' → logprob: -7.946689605712891
    9. 'e' → logprob: -8.32168960571289
    10. 'w' → logprob: -8.94668960571289

Token 1708: ' burden' (ID: 39183)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.002178692491725087
    2. 'f' → logprob: -6.37717866897583
    3. '               ' → logprob: -8.627179145812988
    4. 'bur' → logprob: -8.752179145812988
    5. '
' → logprob: -10.002179145812988
    6. '   ' → logprob: -10.377179145812988
    7. 'for' → logprob: -11.252179145812988
    8. '        
' → logprob: -11.377179145812988
    9. '           ' → logprob: -11.627179145812988
    10. 'e' → logprob: -11.752179145812988

Token 1709: ' similarly' (ID: 60314)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.000727325037587434
    2. 'f' → logprob: -7.87572717666626
    3. 'bur' → logprob: -8.250727653503418
    4. '   ' → logprob: -10.375727653503418
    5. 'e' → logprob: -10.875727653503418
    6. '
' → logprob: -11.250727653503418
    7. 'b' → logprob: -11.500727653503418
    8. '               ' → logprob: -11.750727653503418
    9. '           ' → logprob: -13.625727653503418
    10. '        
' → logprob: -13.750727653503418

Token 1710: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.08023280650377274
    2. 'f' → logprob: -2.580232858657837
    3. 'e' → logprob: -7.330232620239258
    4. '               ' → logprob: -8.205232620239258
    5. 'bur' → logprob: -8.580232620239258
    6. 'b' → logprob: -9.080232620239258
    7. '   ' → logprob: -9.330232620239258
    8. '           ' → logprob: -12.330232620239258
    9. 'F' → logprob: -12.455232620239258
    10. ' f' → logprob: -13.080232620239258

Token 1711: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -7.076218025758862e-05
    2. 'for' → logprob: -9.750070571899414
    3. '               ' → logprob: -11.750070571899414
    4. 'f' → logprob: -13.500070571899414
    5. '
' → logprob: -13.750070571899414
    6. '   ' → logprob: -13.750070571899414
    7. '```' → logprob: -14.500070571899414
    8. '        
' → logprob: -15.875070571899414
    9. 'bur' → logprob: -16.250070571899414
    10. '           ' → logprob: -16.375070571899414

Token 1712: ' f' (ID: 285)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' (adapté à ' f') → logprob: -0.03912894427776337
    2. '       ' → logprob: -3.2891290187835693
    3. 'b' → logprob: -7.66412878036499
    4. '               ' → logprob: -7.78912878036499
    5. '   ' → logprob: -9.539129257202148
    6. 'bur' → logprob: -9.914129257202148
    7. '           ' → logprob: -10.039129257202148
    8. 'e' → logprob: -11.539129257202148
    9. '                   ' → logprob: -11.539129257202148
    10. ' f' → logprob: -12.039129257202148

Token 1713: '_b' (ID: 1535)
  Prédit: '_b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_b' → logprob: -0.0008988389745354652
    2. 'bur' → logprob: -7.250898838043213
    3. '_load' → logprob: -9.875899314880371
    4. 'or' → logprob: -10.375899314880371
    5. ' =' → logprob: -10.375899314880371
    6. '_weight' → logprob: -11.500899314880371
    7. '_line' → logprob: -12.125899314880371
    8. '_' → logprob: -12.125899314880371
    9. '_for' → logprob: -12.125899314880371
    10. 'for' → logprob: -12.125899314880371

Token 1714: 'ur' (ID: 330)
  Prédit: 'ur'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ur' → logprob: -0.0009567205561324954
    2. '=' → logprob: -8.500956535339355
    3. 'f' → logprob: -8.625956535339355
    4. 'urd' → logprob: -8.750956535339355
    5. 'for' → logprob: -8.875956535339355
    6. 'u' → logprob: -10.125956535339355
    7. 'urst' → logprob: -10.625956535339355
    8. '[' → logprob: -10.750956535339355
    9. ' =' → logprob: -10.750956535339355
    10. 'urder' → logprob: -11.125956535339355

Token 1715: 'den' (ID: 1660)
  Prédit: 'den'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'den' → logprob: -0.034409038722515106
    2. '               ' → logprob: -3.7844090461730957
    3. 'd' → logprob: -4.909409046173096
    4. '           ' → logprob: -6.784409046173096
    5. '       ' → logprob: -6.909409046173096
    6. '   ' → logprob: -7.159409046173096
    7. '                   ' → logprob: -7.784409046173096
    8. '              ' → logprob: -8.909408569335938
    9. 'e' → logprob: -10.534408569335938
    10. '                       ' → logprob: -10.659408569335938

Token 1716: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5769187211990356
    2. ' =' → logprob: -0.8269187211990356
    3. '       ' → logprob: -7.201918601989746
    4. '           ' → logprob: -9.576918601989746
    5. '   ' → logprob: -9.701918601989746
    6. 'for' → logprob: -10.201918601989746
    7. '               ' → logprob: -11.451918601989746
    8. ' ' → logprob: -11.701918601989746
    9. '[i' → logprob: -11.701918601989746
    10. '=[]' → logprob: -12.201918601989746

Token 1717: ' [[' (ID: 9237)
  Prédit: '[['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[[' → logprob: -0.0009267069399356842
    2. ' [[' → logprob: -7.000926494598389
    3. '       ' → logprob: -11.625926971435547
    4. '           ' → logprob: -12.375926971435547
    5. '[' → logprob: -13.875926971435547
    6. '   ' → logprob: -14.625926971435547
    7. '               ' → logprob: -14.875926971435547
    8. '     ' → logprob: -17.000926971435547
    9. '        ' → logprob: -17.250926971435547
    10. '                   ' → logprob: -17.375926971435547

Token 1718: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.010038199834525585
    2. 'C' → logprob: -4.760038375854492
    3. '[C' → logprob: -7.510038375854492
    4. '           ' → logprob: -8.760038375854492
    5. '               ' → logprob: -8.885038375854492
    6. 'int' → logprob: -8.885038375854492
    7. '[' → logprob: -8.885038375854492
    8. '       ' → logprob: -9.385038375854492
    9. '
' → logprob: -10.135038375854492
    10. '   ' → logprob: -10.135038375854492

Token 1719: ']*' (ID: 18579)
  Prédit: ']['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -1.0404027700424194
    2. ']*' → logprob: -1.1654027700424194
    3. 'for' → logprob: -1.4154027700424194
    4. ']' → logprob: -3.040402889251709
    5. '[i' → logprob: -3.540402889251709
    6. '           ' → logprob: -4.915402889251709
    7. '               ' → logprob: -6.165402889251709
    8. ' for' → logprob: -6.540402889251709
    9. '       ' → logprob: -6.540402889251709
    10. '   ' → logprob: -6.790402889251709

Token 1720: 'D' (ID: 35)
  Prédit: 'D'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'D' → logprob: -0.2577047348022461
    2. 'C' → logprob: -1.507704734802246
    3. 'self' → logprob: -5.382704734802246
    4. '       ' → logprob: -8.382704734802246
    5. 'len' → logprob: -8.382704734802246
    6. '           ' → logprob: -8.757704734802246
    7. 'p' → logprob: -9.382704734802246
    8. '   ' → logprob: -9.632704734802246
    9. 'f' → logprob: -10.007704734802246
    10. 'W' → logprob: -10.257704734802246

Token 1721: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.029826046898961067
    2. ' for' → logprob: -3.5298261642456055
    3. '           ' → logprob: -10.154826164245605
    4. '               ' → logprob: -10.279826164245605
    5. '       ' → logprob: -13.279826164245605
    6. '	for' → logprob: -15.654826164245605
    7. '                   ' → logprob: -15.779826164245605
    8. '   ' → logprob: -16.27982521057129
    9. '            ' → logprob: -16.65482521057129
    10. '        ' → logprob: -17.02982521057129

Token 1722: ' _' (ID: 1175)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.303202748298645
    2. 'range' → logprob: -1.928202748298645
    3. '(C' → logprob: -3.1782026290893555
    4. 'int' → logprob: -3.8032026290893555
    5. '       ' → logprob: -4.3032026290893555
    6. 'C' → logprob: -5.0532026290893555
    7. 'def' → logprob: -5.0532026290893555
    8. '           ' → logprob: -5.1782026290893555
    9. ' range' → logprob: -5.3032026290893555
    10. '
' → logprob: -5.5532026290893555

Token 1723: ' in' (ID: 306)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0028502829372882843
    2. '(range' → logprob: -6.62785005569458
    3. ' range' → logprob: -7.00285005569458
    4. 'C' → logprob: -9.127850532531738
    5. 'int' → logprob: -9.127850532531738
    6. '_range' → logprob: -9.377850532531738
    7. 'user' → logprob: -9.627850532531738
    8. 'self' → logprob: -9.627850532531738
    9. '(' → logprob: -10.002850532531738
    10. 'f' → logprob: -10.377850532531738

Token 1724: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.013788280077278614
    2. '(C' → logprob: -4.763788223266602
    3. ' range' → logprob: -5.388788223266602
    4. 'C' → logprob: -7.763788223266602
    5. 'for' → logprob: -9.638788223266602
    6. '(range' → logprob: -9.888788223266602
    7. '
' → logprob: -10.888788223266602
    8. '[C' → logprob: -10.888788223266602
    9. '       ' → logprob: -12.013788223266602
    10. 'Range' → logprob: -12.638788223266602

Token 1725: '(C' (ID: 5559)
  Prédit: 'C'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'C' → logprob: -0.6932449340820312
    2. '(C' → logprob: -0.6932449340820312
    3. 'range' → logprob: -9.943244934082031
    4. '       ' → logprob: -11.318244934082031
    5. '           ' → logprob: -11.443244934082031
    6. '[C' → logprob: -11.818244934082031
    7. '
' → logprob: -12.193244934082031
    8. ' C' → logprob: -12.318244934082031
    9. '   ' → logprob: -12.943244934082031
    10. '_C' → logprob: -13.943244934082031

Token 1726: ')]
' (ID: 11587)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.6971882581710815
    2. '               ' → logprob: -1.9471882581710815
    3. ')]' → logprob: -2.197188377380371
    4. '           ' → logprob: -2.447188377380371
    5. ')]
' → logprob: -2.572188377380371
    6. ']' → logprob: -3.197188377380371
    7. '       ' → logprob: -3.697188377380371
    8. 'for' → logprob: -4.697188377380371
    9. ']
' → logprob: -5.447188377380371
    10. '):
' → logprob: -5.697188377380371

Token 1727: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0010794912232086062
    2. '               ' → logprob: -6.876079559326172
    3. 'for' → logprob: -10.001079559326172
    4. '           ' → logprob: -14.001079559326172
    5. '```' → logprob: -15.501079559326172
    6. '   ' → logprob: -15.876079559326172
    7. '                   ' → logprob: -16.501079559326172
    8. '                       ' → logprob: -17.001079559326172
    9. ' for' → logprob: -17.376079559326172
    10. 'from' → logprob: -18.501079559326172

Token 1728: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.5760553479194641
    2. '       ' → logprob: -0.8260553479194641
    3. ' for' → logprob: -9.451055526733398
    4. '               ' → logprob: -10.451055526733398
    5. '           ' → logprob: -11.951055526733398
    6. '   ' → logprob: -13.326055526733398
    7. '	for' → logprob: -15.951055526733398
    8. '                   ' → logprob: -16.0760555267334
    9. '```' → logprob: -17.3260555267334
    10. '
' → logprob: -17.8260555267334

Token 1729: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -2.9160102712921798e-05
    2. ' i' → logprob: -10.625029563903809
    3. '   ' → logprob: -12.375029563903809
    4. '       ' → logprob: -15.625029563903809
    5. '           ' → logprob: -15.750029563903809
    6. 'c' → logprob: -15.750029563903809
    7. '_i' → logprob: -16.625028610229492
    8. '	i' → logprob: -16.750028610229492
    9. 'region' → logprob: -17.500028610229492
    10. ' ' → logprob: -18.000028610229492

Token 1730: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0011882068356499076
    2. 'in' → logprob: -6.751188278198242
    3. '       ' → logprob: -11.501188278198242
    4. '           ' → logprob: -13.126188278198242
    5. ' ' → logprob: -13.751188278198242
    6. '   ' → logprob: -13.751188278198242
    7. '[' → logprob: -14.126188278198242
    8. 'n' → logprob: -14.751188278198242
    9. '        ' → logprob: -14.876188278198242
    10. 'In' → logprob: -15.001188278198242

Token 1731: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0024842156562954187
    2. ' range' → logprob: -6.002484321594238
    3. '(range' → logprob: -12.002484321594238
    4. 'C' → logprob: -14.002484321594238
    5. '       ' → logprob: -14.377484321594238
    6. '0' → logprob: -15.002484321594238
    7. 'in' → logprob: -15.252484321594238
    8. '
' → logprob: -16.127483367919922
    9. '   ' → logprob: -16.377483367919922
    10. '           ' → logprob: -16.752483367919922

Token 1732: '(C' (ID: 5559)
  Prédit: 'C'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'C' → logprob: -0.16572998464107513
    2. '(C' → logprob: -1.9157299995422363
    3. '           ' → logprob: -6.040729999542236
    4. '       ' → logprob: -6.790729999542236
    5. 'self' → logprob: -6.915729999542236
    6. '0' → logprob: -7.415729999542236
    7. '               ' → logprob: -8.790729522705078
    8. '   ' → logprob: -9.540729522705078
    9. ' C' → logprob: -10.040729522705078
    10. '[C' → logprob: -10.040729522705078

Token 1733: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.06580997258424759
    2. '           ' → logprob: -2.815809965133667
    3. '       ' → logprob: -6.190810203552246
    4. '):' → logprob: -6.565810203552246
    5. '   ' → logprob: -8.690810203552246
    6. 'for' → logprob: -9.940810203552246
    7. ')[' → logprob: -10.440810203552246
    8. '               ' → logprob: -10.440810203552246
    9. ':
' → logprob: -11.190810203552246
    10. '):
' → logprob: -11.190810203552246

Token 1734: '           ' (ID: 352)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.24114106595516205
    2. '           ' → logprob: -1.7411410808563232
    3. ' for' → logprob: -3.9911410808563232
    4. '               ' → logprob: -4.241140842437744
    5. '       ' → logprob: -5.241140842437744
    6. '   ' → logprob: -7.616140842437744
    7. '                   ' → logprob: -8.741141319274902
    8. ' ' → logprob: -9.616141319274902
    9. '                       ' → logprob: -10.491141319274902
    10. '	for' → logprob: -11.991141319274902

Token 1735: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.0024894531816244125
    2. ' for' → logprob: -6.0024895668029785
    3. '           ' → logprob: -11.75248908996582
    4. '       ' → logprob: -12.75248908996582
    5. '   ' → logprob: -13.50248908996582
    6. ' ' → logprob: -14.00248908996582
    7. '               ' → logprob: -14.25248908996582
    8. '	for' → logprob: -16.62748908996582
    9. 'For' → logprob: -18.37748908996582
    10. '_for' → logprob: -18.75248908996582

Token 1736: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.00023238400171976537
    2. ' j' → logprob: -8.375232696533203
    3. '   ' → logprob: -13.500232696533203
    4. '	j' → logprob: -15.500232696533203
    5. '$j' → logprob: -16.250232696533203
    6. '_j' → logprob: -17.125232696533203
    7. '           ' → logprob: -18.125232696533203
    8. '[j' → logprob: -18.250232696533203
    9. '       ' → logprob: -18.500232696533203
    10. '    ' → logprob: -18.750232696533203

Token 1737: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.2524392306804657
    2. ' in' → logprob: -1.502439260482788
    3. '           ' → logprob: -7.877439022064209
    4. '               ' → logprob: -9.877439498901367
    5. '       ' → logprob: -10.752439498901367
    6. 'range' → logprob: -11.002439498901367
    7. '   ' → logprob: -11.377439498901367
    8. '(' → logprob: -12.252439498901367
    9. ' ' → logprob: -12.377439498901367
    10. ',' → logprob: -12.752439498901367

Token 1738: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.014182306826114655
    2. ' range' → logprob: -4.264182090759277
    3. '(range' → logprob: -11.014182090759277
    4. '           ' → logprob: -13.764182090759277
    5. '0' → logprob: -14.514182090759277
    6. 'D' → logprob: -15.389182090759277
    7. '   ' → logprob: -15.889182090759277
    8. '               ' → logprob: -16.014183044433594
    9. '                   ' → logprob: -16.389183044433594
    10. '       ' → logprob: -16.764183044433594

Token 1739: '(D' (ID: 9908)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.2702822685241699
    2. 'D' → logprob: -1.52028226852417
    3. ' range' → logprob: -4.52028226852417
    4. '(D' → logprob: -5.64528226852417
    5. '           ' → logprob: -5.89528226852417
    6. '               ' → logprob: -7.64528226852417
    7. '   ' → logprob: -8.270282745361328
    8. 'C' → logprob: -9.520282745361328
    9. '                   ' → logprob: -9.770282745361328
    10. '       ' → logprob: -9.895282745361328

Token 1740: '):
' (ID: 1883)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.38848692178726196
    2. '):
' → logprob: -1.1384868621826172
    3. '           ' → logprob: -6.638486862182617
    4. ':
' → logprob: -9.263486862182617
    5. '):' → logprob: -9.513486862182617
    6. '       ' → logprob: -10.013486862182617
    7. '                   ' → logprob: -10.763486862182617
    8. ']:
' → logprob: -11.513486862182617
    9. '              ' → logprob: -11.513486862182617
    10. ')' → logprob: -11.888486862182617

Token 1741: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -4.8232690460281447e-05
    2. '           ' → logprob: -10.125048637390137
    3. '       ' → logprob: -13.500048637390137
    4. '                   ' → logprob: -13.625048637390137
    5. '			' → logprob: -13.750048637390137
    6. '                       ' → logprob: -13.875048637390137
    7. '		       ' → logprob: -14.250048637390137
    8. '
' → logprob: -14.375048637390137
    9. '```' → logprob: -14.375048637390137
    10. '             ' → logprob: -14.500048637390137

Token 1742: ' line' (ID: 2543)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'line' (adapté à ' line') → logprob: -0.2066754549741745
    2. '               ' → logprob: -1.706675410270691
    3. ' line' → logprob: -5.5816755294799805
    4. '                   ' → logprob: -6.9566755294799805
    5. '                       ' → logprob: -8.83167552947998
    6. 'while' → logprob: -9.20667552947998
    7. '#line' → logprob: -9.20667552947998
    8. '           ' → logprob: -9.58167552947998
    9. '	line' → logprob: -9.83167552947998
    10. '   ' → logprob: -9.95667552947998

Token 1743: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.03032853454351425
    2. '=' → logprob: -3.5303285121917725
    3. '               ' → logprob: -8.280328750610352
    4. '=line' → logprob: -8.405328750610352
    5. '           ' → logprob: -9.530328750610352
    6. '                   ' → logprob: -11.030328750610352
    7. '       ' → logprob: -12.405328750610352
    8. '   ' → logprob: -12.905328750610352
    9. '                ' → logprob: -13.780328750610352
    10. ' line' → logprob: -14.280328750610352

Token 1744: ' next' (ID: 2613)
  Prédit: 'next'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'next' → logprob: -0.0005672106635756791
    2. ' next' → logprob: -7.500567436218262
    3. '(next' → logprob: -11.250567436218262
    4. '[next' → logprob: -14.625567436218262
    5. '           ' → logprob: -15.125567436218262
    6. '               ' → logprob: -15.500567436218262
    7. '.next' → logprob: -16.250566482543945
    8. '	next' → logprob: -16.375566482543945
    9. 'self' → logprob: -16.500566482543945
    10. '_next' → logprob: -16.875566482543945

Token 1745: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.02977965772151947
    2. 'self' → logprob: -3.5297796726226807
    3. '[self' → logprob: -11.029779434204102
    4. '               ' → logprob: -12.654779434204102
    5. '           ' → logprob: -12.779779434204102
    6. ' self' → logprob: -13.279779434204102
    7. '=self' → logprob: -13.404779434204102
    8. '
' → logprob: -13.904779434204102
    9. '                   ' → logprob: -14.029779434204102
    10. '   ' → logprob: -14.904779434204102

Token 1746: '.lines' (ID: 96601)
  Prédit: '.lines'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.lines' → logprob: -0.0971289575099945
    2. 'self' → logprob: -2.4721288681030273
    3. '(self' → logprob: -5.222128868103027
    4. '(lines' → logprob: -6.722128868103027
    5. 'lines' → logprob: -6.847128868103027
    6. '_lines' → logprob: -8.972128868103027
    7. '[self' → logprob: -9.097128868103027
    8. 'Lines' → logprob: -9.722128868103027
    9. '.readlines' → logprob: -10.472128868103027
    10. '	lines' → logprob: -10.597128868103027

Token 1747: ').' (ID: 741)
  Prédit: ').'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ').' → logprob: -0.17513428628444672
    2. '().' → logprob: -2.0501341819763184
    3. '.strip' → logprob: -3.6751341819763184
    4. '               ' → logprob: -5.425134181976318
    5. '].' → logprob: -7.050134181976318
    6. '                   ' → logprob: -7.300134181976318
    7. '           ' → logprob: -8.050134658813477
    8. '()).' → logprob: -9.425134658813477
    9. '   ' → logprob: -9.800134658813477
    10. ')' → logprob: -10.550134658813477

Token 1748: 'strip' (ID: 23905)
  Prédit: 'strip'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'strip' → logprob: -1.9361264946837764e-07
    2. '.strip' → logprob: -15.875
    3. '_strip' → logprob: -17.125
    4. 'rstrip' → logprob: -18.25
    5. ' strip' → logprob: -18.375
    6. '(strip' → logprob: -18.75
    7. 'str' → logprob: -19.25
    8. 'Strip' → logprob: -19.75
    9. '-strip' → logprob: -20.5
    10. 'stripe' → logprob: -21.5

Token 1749: '()
' (ID: 1234)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.14146138727664948
    2. '()
' → logprob: -2.1414613723754883
    3. '()' → logprob: -4.391461372375488
    4. '           ' → logprob: -7.391461372375488
    5. '                   ' → logprob: -7.641461372375488
    6. '
' → logprob: -7.891461372375488
    7. 'while' → logprob: -8.391461372375488
    8. '       ' → logprob: -9.016461372375488
    9. ')
' → logprob: -9.516461372375488
    10. ')' → logprob: -10.766461372375488

Token 1750: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.03868359699845314
    2. 'while' → logprob: -3.2886836528778076
    3. '                   ' → logprob: -7.6636834144592285
    4. '           ' → logprob: -9.163683891296387
    5. ' while' → logprob: -10.413683891296387
    6. '       ' → logprob: -10.788683891296387
    7. '                       ' → logprob: -11.163683891296387
    8. '                           ' → logprob: -14.038683891296387
    9. '                ' → logprob: -14.663683891296387
    10. 'While' → logprob: -14.663683891296387

Token 1751: ' while' (ID: 2049)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' (adapté à ' while') → logprob: -0.00269610108807683
    2. ' while' → logprob: -6.5026960372924805
    3. '               ' → logprob: -6.7526960372924805
    4. '                   ' → logprob: -10.87769603729248
    5. '           ' → logprob: -12.87769603729248
    6. '                       ' → logprob: -13.37769603729248
    7. '       ' → logprob: -13.87769603729248
    8. 'While' → logprob: -14.12769603729248
    9. '                ' → logprob: -15.50269603729248
    10. '	while' → logprob: -15.87769603729248

Token 1752: ' not' (ID: 625)
  Prédit: 'not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'not' → logprob: -0.00012356207298580557
    2. ' not' → logprob: -9.000123977661133
    3. '(not' → logprob: -16.250123977661133
    4. 'line' → logprob: -16.875123977661133
    5. '           ' → logprob: -20.750123977661133
    6. '(line' → logprob: -21.875123977661133
    7. '	not' → logprob: -21.875123977661133
    8. '   ' → logprob: -22.125123977661133
    9. '               ' → logprob: -22.625123977661133
    10. 'len' → logprob: -23.375123977661133

Token 1753: ' line' (ID: 2543)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'line' → logprob: -7.20734242349863e-05
    2. 'not' → logprob: -10.125072479248047
    3. ' line' → logprob: -10.375072479248047
    4. '(line' → logprob: -14.375072479248047
    5. '[line' → logprob: -16.000072479248047
    6. '#line' → logprob: -16.875072479248047
    7. ' not' → logprob: -17.500072479248047
    8. 'len' → logprob: -17.750072479248047
    9. '
' → logprob: -18.500072479248047
    10. '	line' → logprob: -18.625072479248047

Token 1754: ':
' (ID: 734)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'line' → logprob: -0.1143067479133606
    2. '                   ' → logprob: -2.364306688308716
    3. '               ' → logprob: -5.489306926727295
    4. '(line' → logprob: -5.989306926727295
    5. ':
' → logprob: -6.114306926727295
    6. ':' → logprob: -6.614306926727295
    7. ' line' → logprob: -6.739306926727295
    8. '==' → logprob: -7.489306926727295
    9. '[line' → logprob: -7.614306926727295
    10. 'lines' → logprob: -8.364306449890137

Token 1755: '                   ' (ID: 699)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'line' → logprob: -0.14736215770244598
    2. '                   ' → logprob: -2.022362232208252
    3. '               ' → logprob: -5.522362232208252
    4. ' line' → logprob: -8.397361755371094
    5. '(line' → logprob: -8.772361755371094
    6. '           ' → logprob: -9.772361755371094
    7. '                       ' → logprob: -9.897361755371094
    8. '   ' → logprob: -10.147361755371094
    9. '
' → logprob: -10.397361755371094
    10. '                  ' → logprob: -10.897361755371094

Token 1756: ' line' (ID: 2543)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'line' (adapté à ' line') → logprob: -1.1279553291387856e-05
    2. ' line' → logprob: -11.500011444091797
    3. '               ' → logprob: -14.500011444091797
    4. '                   ' → logprob: -14.500011444091797
    5. '           ' → logprob: -17.500011444091797
    6. '   ' → logprob: -19.125011444091797
    7. '#line' → logprob: -19.500011444091797
    8. '	line' → logprob: -20.125011444091797
    9. '[line' → logprob: -20.125011444091797
    10. '(line' → logprob: -20.625011444091797

Token 1757: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.013521704822778702
    2. ' =' → logprob: -4.513521671295166
    3. '=line' → logprob: -6.138521671295166
    4. '                   ' → logprob: -8.138522148132324
    5. '               ' → logprob: -11.513522148132324
    6. '                       ' → logprob: -12.763522148132324
    7. 'line' → logprob: -12.888522148132324
    8. '           ' → logprob: -13.763522148132324
    9. '=
' → logprob: -14.263522148132324
    10. ' line' → logprob: -14.513522148132324

Token 1758: ' next' (ID: 2613)
  Prédit: 'next'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'next' → logprob: -0.0003000696888193488
    2. ' next' → logprob: -8.500300407409668
    3. 'line' → logprob: -9.250300407409668
    4. '(next' → logprob: -15.000300407409668
    5. ' line' → logprob: -16.75029945373535
    6. '[next' → logprob: -17.62529945373535
    7. '.next' → logprob: -18.50029945373535
    8. 'self' → logprob: -18.62529945373535
    9. '           ' → logprob: -18.75029945373535
    10. 'lines' → logprob: -19.00029945373535

Token 1759: '(self' (ID: 2402)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.004085524007678032
    2. '(self' → logprob: -5.504085540771484
    3. '[self' → logprob: -12.629085540771484
    4. ' self' → logprob: -12.879085540771484
    5. '               ' → logprob: -14.754085540771484
    6. '           ' → logprob: -14.879085540771484
    7. '                   ' → logprob: -15.754085540771484
    8. '       ' → logprob: -15.879085540771484
    9. '   ' → logprob: -15.879085540771484
    10. '
' → logprob: -15.879085540771484

Token 1760: '.lines' (ID: 96601)
  Prédit: '.lines'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.lines' → logprob: -0.007263366132974625
    2. 'self' → logprob: -5.00726318359375
    3. 'lines' → logprob: -8.38226318359375
    4. '(self' → logprob: -8.50726318359375
    5. '.self' → logprob: -10.13226318359375
    6. '[self' → logprob: -10.88226318359375
    7. '_lines' → logprob: -11.13226318359375
    8. 'Lines' → logprob: -11.13226318359375
    9. '
' → logprob: -12.13226318359375
    10. '(lines' → logprob: -12.75726318359375

Token 1761: ').' (ID: 741)
  Prédit: ').'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ').' → logprob: -0.08289843052625656
    2. '               ' → logprob: -3.0828983783721924
    3. '                   ' → logprob: -3.8328983783721924
    4. '.strip' → logprob: -5.2078986167907715
    5. '().' → logprob: -5.8328986167907715
    6. '                       ' → logprob: -5.9578986167907715
    7. '].' → logprob: -7.3328986167907715
    8. ')' → logprob: -9.457898139953613
    9. '):
' → logprob: -10.082898139953613
    10. '()).' → logprob: -10.082898139953613

Token 1762: 'strip' (ID: 23905)
  Prédit: 'strip'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'strip' → logprob: -0.03300531953573227
    2. 'line' → logprob: -3.5330052375793457
    3. 'next' → logprob: -5.783005237579346
    4. 'rstrip' → logprob: -10.033005714416504
    5. 'continue' → logprob: -10.658005714416504
    6. '#' → logprob: -11.033005714416504
    7. 'split' → logprob: -11.408005714416504
    8. '               ' → logprob: -11.408005714416504
    9. 'Next' → logprob: -11.783005714416504
    10. ' strip' → logprob: -12.283005714416504

Token 1763: '()
' (ID: 1234)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'line' → logprob: -0.6627120971679688
    2. '                   ' → logprob: -1.2877120971679688
    3. '               ' → logprob: -1.7877120971679688
    4. '                       ' → logprob: -3.5377120971679688
    5. '(line' → logprob: -4.912712097167969
    6. ' line' → logprob: -5.787712097167969
    7. '#line' → logprob: -8.037712097167969
    8. '           ' → logprob: -8.162712097167969
    9. '       ' → logprob: -8.287712097167969
    10. '[line' → logprob: -8.287712097167969

Token 1764: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.027567250654101372
    2. '                   ' → logprob: -3.652567148208618
    3. 'f' → logprob: -7.152567386627197
    4. '                       ' → logprob: -8.402566909790039
    5. '           ' → logprob: -8.652566909790039
    6. '       ' → logprob: -10.277566909790039
    7. ' f' → logprob: -10.777566909790039
    8. '                ' → logprob: -11.777566909790039
    9. '   ' → logprob: -12.152566909790039
    10. '
' → logprob: -12.402566909790039

Token 1765: ' f' (ID: 285)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' (adapté à ' f') → logprob: -0.00021712594025302678
    2. '                   ' → logprob: -8.75021743774414
    3. '               ' → logprob: -10.00021743774414
    4. ' f' → logprob: -11.62521743774414
    5. '                       ' → logprob: -12.87521743774414
    6. '           ' → logprob: -14.00021743774414
    7. '   ' → logprob: -15.00021743774414
    8. '       ' → logprob: -16.00021743774414
    9. '                  ' → logprob: -16.12521743774414
    10. '                 ' → logprob: -16.37521743774414

Token 1766: '_b' (ID: 1535)
  Prédit: '_b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_b' → logprob: -0.0005138330743648112
    2. 'bur' → logprob: -7.875514030456543
    3. 'f' → logprob: -10.125514030456543
    4. '_f' → logprob: -10.250514030456543
    5. 'b' → logprob: -10.875514030456543
    6. '=' → logprob: -12.000514030456543
    7. 'Bur' → logprob: -12.000514030456543
    8. ' =' → logprob: -12.500514030456543
    9. '[i' → logprob: -13.125514030456543
    10. '               ' → logprob: -13.125514030456543

Token 1767: 'ur' (ID: 330)
  Prédit: 'ur'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ur' → logprob: -0.004374105948954821
    2. '_b' → logprob: -6.254374027252197
    3. ' =' → logprob: -6.754374027252197
    4. '=' → logprob: -7.004374027252197
    5. '[' → logprob: -9.504374504089355
    6. 'bur' → logprob: -9.504374504089355
    7. 'urd' → logprob: -10.379374504089355
    8. 'f' → logprob: -10.379374504089355
    9. '   ' → logprob: -10.629374504089355
    10. 'b' → logprob: -10.754374504089355

Token 1768: 'den' (ID: 1660)
  Prédit: 'ur'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ur' → logprob: -9.078839502763003e-05
    2. 'uden' → logprob: -10.375090599060059
    3. '               ' → logprob: -11.375090599060059
    4. '   ' → logprob: -11.875090599060059
    5. 'f' → logprob: -12.125090599060059
    6. 'or' → logprob: -12.500090599060059
    7. 'urder' → logprob: -12.500090599060059
    8. 'bur' → logprob: -12.625090599060059
    9. '                   ' → logprob: -12.750090599060059
    10. 'ir' → logprob: -13.125090599060059

Token 1769: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.0004740447038784623
    2. '=' → logprob: -7.875473976135254
    3. ' =' → logprob: -11.000473976135254
    4. '           ' → logprob: -11.125473976135254
    5. '                   ' → logprob: -11.250473976135254
    6. '[' → logprob: -11.500473976135254
    7. '               ' → logprob: -11.500473976135254
    8. '=i' → logprob: -11.750473976135254
    9. '[int' → logprob: -12.000473976135254
    10. 'def' → logprob: -12.375473976135254

Token 1770: '][' (ID: 2696)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.016312476247549057
    2. '][' → logprob: -4.141312599182129
    3. '           ' → logprob: -9.391312599182129
    4. ')[' → logprob: -9.641312599182129
    5. '               ' → logprob: -10.016312599182129
    6. '[' → logprob: -10.266312599182129
    7. '                   ' → logprob: -11.141312599182129
    8. ']' → logprob: -12.141312599182129
    9. '[I' → logprob: -12.391312599182129
    10. ' [' → logprob: -12.641312599182129

Token 1771: 'j' (ID: 73)
  Prédit: 'j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.0033263610675930977
    2. 'i' → logprob: -5.753326416015625
    3. 'f' → logprob: -10.378326416015625
    4. ')' → logprob: -10.503326416015625
    5. ']' → logprob: -11.128326416015625
    6. '               ' → logprob: -11.128326416015625
    7. '           ' → logprob: -11.253326416015625
    8. '[j' → logprob: -11.253326416015625
    9. ' j' → logprob: -11.878326416015625
    10. 'int' → logprob: -12.003326416015625

Token 1772: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.07484076172113419
    2. '=' → logprob: -2.949840784072876
    3. ')' → logprob: -4.199840545654297
    4. ']=' → logprob: -5.824840545654297
    5. '                   ' → logprob: -6.949840545654297
    6. '               ' → logprob: -7.699840545654297
    7. ' =' → logprob: -8.324840545654297
    8. '           ' → logprob: -9.824840545654297
    9. ')=' → logprob: -10.199840545654297
    10. '                       ' → logprob: -11.324840545654297

Token 1773: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.003186743939295411
    2. ' =' → logprob: -5.7531867027282715
    3. '                   ' → logprob: -11.87818717956543
    4. '               ' → logprob: -13.37818717956543
    5. '=int' → logprob: -15.12818717956543
    6. '                ' → logprob: -16.25318717956543
    7. '                       ' → logprob: -16.75318717956543
    8. '   ' → logprob: -16.87818717956543
    9. '           ' → logprob: -17.25318717956543
    10. '                    ' → logprob: -17.62818717956543

Token 1774: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -5.512236498361744e-07
    2. ' int' → logprob: -14.500000953674316
    3. '               ' → logprob: -18.75
    4. '(int' → logprob: -19.375
    5. '                   ' → logprob: -21.375
    6. '[int' → logprob: -21.5
    7. '=int' → logprob: -22.25
    8. '<int' → logprob: -22.5
    9. ':int' → logprob: -24.0
    10. '   ' → logprob: -24.25

Token 1775: '(line' (ID: 18178)
  Prédit: '(line'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(line' → logprob: -0.0004517646157182753
    2. 'line' → logprob: -7.750451564788818
    3. '[line' → logprob: -11.250452041625977
    4. '=line' → logprob: -12.125452041625977
    5. '#line' → logprob: -13.000452041625977
    6. ' line' → logprob: -15.000452041625977
    7. ',line' → logprob: -17.125452041625977
    8. ')' → logprob: -18.000452041625977
    9. '	line' → logprob: -18.250452041625977
    10. '
' → logprob: -18.250452041625977

Token 1776: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.12254370003938675
    2. '               ' → logprob: -2.3725438117980957
    3. ')
' → logprob: -4.122543811798096
    4. '       ' → logprob: -5.372543811798096
    5. ')return' → logprob: -7.622543811798096
    6. 'return' → logprob: -8.122543334960938
    7. '<|end|>' → logprob: -8.247543334960938
    8. '           ' → logprob: -9.497543334960938
    9. ')

' → logprob: -9.747543334960938
    10. '<|end|>' → logprob: -11.497543334960938

Token 1777: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0008087906171567738
    2. 'return' → logprob: -7.1258087158203125
    3. '
' → logprob: -13.125808715820312
    4. ' return' → logprob: -13.750808715820312
    5. '        
' → logprob: -14.500808715820312
    6. '   ' → logprob: -14.625808715820312
    7. '@dat' → logprob: -15.750808715820312
    8. '           ' → logprob: -16.625808715820312
    9. '```' → logprob: -17.125808715820312
    10. '               ' → logprob: -17.625808715820312

Token 1778: ' return' (ID: 622)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.023259920999407768
    2. 'return' (adapté à ' return') → logprob: -3.7732598781585693
    3. ' return' → logprob: -11.273260116577148
    4. 'params' → logprob: -14.398260116577148
    5. '   ' → logprob: -14.523260116577148
    6. 'parameters' → logprob: -14.523260116577148
    7. '
' → logprob: -17.27326011657715
    8. '        
' → logprob: -17.27326011657715
    9. '	return' → logprob: -17.52326011657715
    10. '           ' → logprob: -18.64826011657715

Token 1779: ' Problem' (ID: 26113)
  Prédit: 'Problem'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Problem' → logprob: -9.007317567011341e-05
    2. '       ' → logprob: -10.250089645385742
    3. ' Problem' → logprob: -10.500089645385742
    4. '           ' → logprob: -10.750089645385742
    5. '   ' → logprob: -12.375089645385742
    6. '(' → logprob: -13.750089645385742
    7. '               ' → logprob: -15.625089645385742
    8. '(
' → logprob: -16.125089645385742
    9. 'Problems' → logprob: -16.875089645385742
    10. ' ' → logprob: -17.375089645385742

Token 1780: 'Parameters' (ID: 10167)
  Prédit: 'Parameters'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Parameters' → logprob: -4.320199877838604e-07
    2. 'parameters' → logprob: -15.25
    3. 'Problem' → logprob: -16.5
    4. '_parameters' → logprob: -17.375
    5. 'Params' → logprob: -19.125
    6. '_PARAMETERS' → logprob: -19.375
    7. 'Parameter' → logprob: -20.375
    8. 'Variables' → logprob: -20.75
    9. ' Parameters' → logprob: -21.125
    10. '```' → logprob: -21.625

Token 1781: '(C' (ID: 5559)
  Prédit: '(
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(
' → logprob: -0.14734600484371185
    2. '(self' → logprob: -2.397346019744873
    3. '(C' → logprob: -3.272346019744873
    4. '(' → logprob: -4.897346019744873
    5. '(parameters' → logprob: -7.897346019744873
    6. '       ' → logprob: -8.897345542907715
    7. '(region' → logprob: -10.147345542907715
    8. '(c' → logprob: -10.272345542907715
    9. 'C' → logprob: -10.897345542907715
    10. '(p' → logprob: -11.272345542907715

Token 1782: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0001793457195162773
    2. ',
' → logprob: -9.375179290771484
    3. ',C' → logprob: -9.750179290771484
    4. ',D' → logprob: -11.250179290771484
    5. '       ' → logprob: -11.625179290771484
    6. ' ,' → logprob: -12.000179290771484
    7. '   ' → logprob: -12.125179290771484
    8. '           ' → logprob: -13.625179290771484
    9. ',W' → logprob: -14.500179290771484
    10. '
' → logprob: -15.625179290771484

Token 1783: ' D' (ID: 415)
  Prédit: 'D'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'D' → logprob: -5.796184723294573e-06
    2. '       ' → logprob: -12.750005722045898
    3. ' D' → logprob: -12.875005722045898
    4. '           ' → logprob: -16.2500057220459
    5. '   ' → logprob: -16.5000057220459
    6. '      ' → logprob: -17.3750057220459
    7. '               ' → logprob: -18.1250057220459
    8. '  ' → logprob: -18.3750057220459
    9. '          ' → logprob: -18.3750057220459
    10. '        ' → logprob: -19.1250057220459

Token 1784: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.13173651695251465
    2. 'W' → logprob: -2.1317365169525146
    3. ',W' → logprob: -5.631736755371094
    4. '       ' → logprob: -6.756736755371094
    5. ' ,' → logprob: -11.006736755371094
    6. '           ' → logprob: -11.131736755371094
    7. ' W' → logprob: -11.381736755371094
    8. '   ' → logprob: -12.881736755371094
    9. ',
' → logprob: -13.006736755371094
    10. '               ' → logprob: -13.756736755371094

Token 1785: ' W' (ID: 486)
  Prédit: 'W'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'W' → logprob: -0.000116655595775228
    2. '       ' → logprob: -9.250116348266602
    3. ' W' → logprob: -11.000116348266602
    4. '           ' → logprob: -14.000116348266602
    5. '      ' → logprob: -14.000116348266602
    6. '   ' → logprob: -14.000116348266602
    7. '          ' → logprob: -14.875116348266602
    8. '        ' → logprob: -15.125116348266602
    9. '               ' → logprob: -15.500116348266602
    10. '         ' → logprob: -16.1251163482666

Token 1786: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0012736850185319781
    2. ',X' → logprob: -6.7512736320495605
    3. ' ,' → logprob: -9.626274108886719
    4. 'X' → logprob: -10.376274108886719
    5. '       ' → logprob: -13.001274108886719
    6. '           ' → logprob: -13.626274108886719
    7. ',
' → logprob: -13.751274108886719
    8. '               ' → logprob: -14.251274108886719
    9. ',W' → logprob: -14.376274108886719
    10. '   ' → logprob: -14.751274108886719

Token 1787: ' X' (ID: 2127)
  Prédit: 'X'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'X' → logprob: -1.0325924449716695e-05
    2. ' X' → logprob: -11.50001049041748
    3. '       ' → logprob: -16.125009536743164
    4. '   ' → logprob: -17.125009536743164
    5. '           ' → logprob: -18.250009536743164
    6. '
' → logprob: -19.125009536743164
    7. '               ' → logprob: -19.250009536743164
    8. '      ' → logprob: -20.625009536743164
    9. ' ' → logprob: -21.125009536743164
    10. '     ' → logprob: -21.250009536743164

Token 1788: '),' (ID: 936)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0004938178462907672
    2. '       ' → logprob: -7.875494003295898
    3. ',e' → logprob: -9.875494003295898
    4. ',
' → logprob: -10.625494003295898
    5. ' ,' → logprob: -10.875494003295898
    6. '           ' → logprob: -12.250494003295898
    7. '),' → logprob: -12.625494003295898
    8. '               ' → logprob: -12.625494003295898
    9. '   ' → logprob: -12.875494003295898
    10. '              ' → logprob: -14.125494003295898

Token 1789: ' Live' (ID: 13065)
  Prédit: 'Live'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Live' → logprob: -4.842555426876061e-06
    2. ' Live' → logprob: -12.250004768371582
    3. '       ' → logprob: -21.5000057220459
    4. '           ' → logprob: -22.8750057220459
    5. 'live' → logprob: -23.3750057220459
    6. '   ' → logprob: -23.6250057220459
    7. '
' → logprob: -23.8750057220459
    8. 'Liv' → logprob: -24.1250057220459
    9. 'Life' → logprob: -24.2500057220459
    10. 'LIVE' → logprob: -24.6250057220459

Token 1790: 'Data' (ID: 1186)
  Prédit: 'Data'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Data' → logprob: 0.0
    2. '@Data' → logprob: -18.25
    3. 'data' → logprob: -18.375
    4. 'Dat' → logprob: -18.875
    5. '_data' → logprob: -20.125
    6. ' Data' → logprob: -20.25
    7. '@dat' → logprob: -20.375
    8. 'DATA' → logprob: -20.75
    9. 'Live' → logprob: -20.75
    10. 'Datas' → logprob: -21.125

Token 1791: '(e' (ID: 3454)
  Prédit: 'expected'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'expected' → logprob: -0.6698487401008606
    2. '(expected' → logprob: -0.9198487401008606
    3. '(e' → logprob: -2.544848680496216
    4. 'e' → logprob: -4.544848918914795
    5. '(
' → logprob: -8.419848442077637
    6. '       ' → logprob: -8.544848442077637
    7. '   ' → logprob: -9.794848442077637
    8. ' expected' → logprob: -10.419848442077637
    9. '
' → logprob: -11.794848442077637
    10. 'expect' → logprob: -12.169848442077637

Token 1792: '_profit' (ID: 186239)
  Prédit: '_profit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_profit' → logprob: -0.01417867373675108
    2. '_expected' → logprob: -4.76417875289917
    3. 'expected' → logprob: -5.38917875289917
    4. 'profit' → logprob: -7.01417875289917
    5. 'x' → logprob: -9.514178276062012
    6. 'Profit' → logprob: -13.139178276062012
    7. '_prob' → logprob: -13.389178276062012
    8. '_pro' → logprob: -13.764178276062012
    9. 'e' → logprob: -13.764178276062012
    10. '[' → logprob: -13.889178276062012

Token 1793: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.002275746548548341
    2. ',f' → logprob: -6.1272759437561035
    3. ' ,' → logprob: -9.502275466918945
    4. ',
' → logprob: -11.877275466918945
    5. '   ' → logprob: -12.627275466918945
    6. '       ' → logprob: -13.127275466918945
    7. '           ' → logprob: -14.127275466918945
    8. '[f' → logprob: -14.377275466918945
    9. '[' → logprob: -14.502275466918945
    10. 'f' → logprob: -14.877275466918945

Token 1794: ' f' (ID: 285)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -9.088346359931165e-07
    2. ' f' → logprob: -14.000000953674316
    3. '   ' → logprob: -20.0
    4. '	f' → logprob: -21.375
    5. '       ' → logprob: -23.0
    6. '           ' → logprob: -23.375
    7. '
' → logprob: -23.625
    8. ' ' → logprob: -23.875
    9. '[f' → logprob: -24.0
    10. '_f' → logprob: -24.25

Token 1795: '_b' (ID: 1535)
  Prédit: '_b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_b' → logprob: -0.058586686849594116
    2. 'f' → logprob: -2.933586597442627
    3. 'bur' → logprob: -6.308586597442627
    4. '_f' → logprob: -6.808586597442627
    5. 'b' → logprob: -7.433586597442627
    6. ' f' → logprob: -8.808587074279785
    7. '   ' → logprob: -12.183587074279785
    8. 'Bur' → logprob: -12.558587074279785
    9. '(f' → logprob: -12.808587074279785
    10. '	f' → logprob: -13.308587074279785

Token 1796: 'ur' (ID: 330)
  Prédit: 'ur'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ur' → logprob: -2.935296834039036e-06
    2. 'r' → logprob: -13.62500286102295
    3. 'urd' → logprob: -14.00000286102295
    4. 'urder' → logprob: -15.12500286102295
    5. '#' → logprob: -16.000003814697266
    6. '[' → logprob: -17.000003814697266
    7. 'u' → logprob: -17.125003814697266
    8. '_' → logprob: -17.375003814697266
    9. 'ур' → logprob: -17.375003814697266
    10. 'bur' → logprob: -17.625003814697266

Token 1797: 'den' (ID: 1660)
  Prédit: 'den'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'den' → logprob: -6.539801688631997e-05
    2. 'd' → logprob: -10.375065803527832
    3. 'uden' → logprob: -10.750065803527832
    4. '   ' → logprob: -12.500065803527832
    5. 'dent' → logprob: -13.125065803527832
    6. 'eden' → logprob: -13.750065803527832
    7. 'aden' → logprob: -14.000065803527832
    8. 'oden' → logprob: -14.375065803527832
    9. '               ' → logprob: -14.500065803527832
    10. 'then' → logprob: -14.625065803527832

Token 1798: ')


' (ID: 7861)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.0445127372804563e-05
    2. '       ' → logprob: -11.87501049041748
    3. ')
' → logprob: -13.25001049041748
    4. '   ' → logprob: -13.37501049041748
    5. ' )' → logprob: -16.750009536743164
    6. '           ' → logprob: -18.500009536743164
    7. ')return' → logprob: -18.500009536743164
    8. '))' → logprob: -18.625009536743164
    9. ')

' → logprob: -19.250009536743164
    10. '
' → logprob: -19.375009536743164

Token 1799: 'class' (ID: 1444)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1800: ' Live' (ID: 13065)
  Prédit: 'Live'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Live' → logprob: -0.7211121916770935
    2. 'Solution' → logprob: -1.4711122512817383
    3. 'Main' → logprob: -1.8461122512817383
    4. 'Runner' → logprob: -2.5961122512817383
    5. 'Solver' → logprob: -3.8461122512817383
    6. 'main' → logprob: -3.9711122512817383
    7. 'Output' → logprob: -5.471112251281738
    8. 'Problem' → logprob: -5.721112251281738
    9. 'Scheduler' → logprob: -6.721112251281738
    10. 'Contest' → logprob: -7.471112251281738

Token 1801: 'Schedule' (ID: 25891)
  Prédit: 'Schedule'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Schedule' → logprob: -0.011224771849811077
    2. 'Scheduler' → logprob: -4.886224746704102
    3. 'Solver' → logprob: -5.761224746704102
    4. 'Parser' → logprob: -9.761224746704102
    5. 'Contest' → logprob: -10.261224746704102
    6. 'Solution' → logprob: -10.261224746704102
    7. 'Data' → logprob: -10.261224746704102
    8. 'Manager' → logprob: -10.386224746704102
    9. 'Processor' → logprob: -10.511224746704102
    10. 'Solve' → logprob: -10.511224746704102

Token 1802: 'Processor' (ID: 22334)
  Prédit: 'Solver'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Solver' → logprob: -0.0008533471846021712
    2. ':
' → logprob: -7.750853538513184
    3. 'Planner' → logprob: -9.750853538513184
    4. ':' → logprob: -9.875853538513184
    5. 'Runner' → logprob: -10.000853538513184
    6. 'Optimizer' → logprob: -10.000853538513184
    7. 'Solution' → logprob: -10.125853538513184
    8. 'Scheduler' → logprob: -10.125853538513184
    9. '```' → logprob: -10.500853538513184
    10. 'Manager' → logprob: -10.750853538513184

Token 1803: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0060269152745604515
    2. ':
' → logprob: -5.131026744842529
    3. '):' → logprob: -10.381027221679688
    4. '<|end|>' → logprob: -10.381027221679688
    5. '   ' → logprob: -11.756027221679688
    6. '```' → logprob: -12.381027221679688
    7. ':def' → logprob: -12.506027221679688
    8. 'def' → logprob: -12.631027221679688
    9. '):
' → logprob: -12.881027221679688
    10. '(' → logprob: -13.131027221679688

Token 1804: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0035258366260677576
    2. 'def' → logprob: -5.878525733947754
    3. 'class' → logprob: -7.503525733947754
    4. '```' → logprob: -8.878525733947754
    5. ' def' → logprob: -11.253525733947754
    6. '	def' → logprob: -11.753525733947754
    7. '@dat' → logprob: -11.878525733947754
    8. '``' → logprob: -14.003525733947754
    9. ':' → logprob: -14.128525733947754
    10. '
' → logprob: -15.628525733947754

Token 1805: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.5893367528915405
    2. '   ' → logprob: -0.8393367528915405
    3. ' def' → logprob: -4.33933687210083
    4. 'class' → logprob: -8.714336395263672
    5. '```' → logprob: -9.464336395263672
    6. '	def' → logprob: -10.839336395263672
    7. '@dat' → logprob: -14.214336395263672
    8. ' ' → logprob: -15.714336395263672
    9. '``' → logprob: -15.964336395263672
    10. ':' → logprob: -16.089336395263672

Token 1806: ' __' (ID: 2516)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.07071700692176819
    2. 'staticmethod' → logprob: -3.4457170963287354
    3. 'init' → logprob: -3.6957170963287354
    4. 'classmethod' → logprob: -4.820716857910156
    5. '__' → logprob: -5.945716857910156
    6. ' def' → logprob: -8.445716857910156
    7. '```' → logprob: -8.695716857910156
    8. ' __' → logprob: -8.820716857910156
    9. '   ' → logprob: -9.195716857910156
    10. 'python' → logprob: -9.820716857910156

Token 1807: 'init' (ID: 3287)
  Prédit: 'init'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: 0.0
    2. ' init' → logprob: -17.375
    3. 'def' → logprob: -19.25
    4. '```' → logprob: -20.5
    5. '	init' → logprob: -20.625
    6. '_init' → logprob: -20.625
    7. 'initi' → logprob: -20.625
    8. 'inite' → logprob: -21.125
    9. 'call' → logprob: -21.625
    10. 'next' → logprob: -21.75

Token 1808: '__(' (ID: 8241)
  Prédit: '__('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.0024039584677666426
    2. '__(
' → logprob: -6.377403736114502
    3. '__' → logprob: -7.627403736114502
    4. '(self' → logprob: -8.87740421295166
    5. '__((' → logprob: -10.12740421295166
    6. 'self' → logprob: -11.87740421295166
    7. '(' → logprob: -12.25240421295166
    8. '__[' → logprob: -12.37740421295166
    9. '```' → logprob: -12.62740421295166
    10. '   ' → logprob: -12.75240421295166

Token 1809: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0004898841143585742
    2. '   ' → logprob: -7.875489711761475
    3. '       ' → logprob: -9.250490188598633
    4. ' self' → logprob: -12.000490188598633
    5. '
' → logprob: -12.125490188598633
    6. '	self' → logprob: -14.750490188598633
    7. ')' → logprob: -14.875490188598633
    8. '(self' → logprob: -14.875490188598633
    9. '):
' → logprob: -15.375490188598633
    10. '           ' → logprob: -15.750490188598633

Token 1810: '):
' (ID: 1883)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.37170398235321045
    2. 'self' → logprob: -1.6217039823532104
    3. '   ' → logprob: -2.6217041015625
    4. '):
' → logprob: -3.9967041015625
    5. '       ' → logprob: -4.8717041015625
    6. '(self' → logprob: -4.8717041015625
    7. '
' → logprob: -5.4967041015625
    8. 'class' → logprob: -7.3717041015625
    9. ' (' → logprob: -7.9967041015625
    10. ' self' → logprob: -8.1217041015625

Token 1811: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.41288986802101135
    2. 'self' → logprob: -1.162889838218689
    3. '       ' → logprob: -3.6628899574279785
    4. '
' → logprob: -11.78788948059082
    5. ' self' → logprob: -12.53788948059082
    6. '```' → logprob: -12.66288948059082
    7. 'def' → logprob: -13.28788948059082
    8. '(self' → logprob: -13.41288948059082
    9. 'class' → logprob: -13.53788948059082
    10. '           ' → logprob: -13.53788948059082

Token 1812: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.06313049048185349
    2. '       ' → logprob: -3.1881303787231445
    3. 'def' → logprob: -4.5631303787231445
    4. '   ' → logprob: -5.3131303787231445
    5. '
' → logprob: -6.0631303787231445
    6. ' self' → logprob: -6.4381303787231445
    7. 'from' → logprob: -8.063130378723145
    8. 'pass' → logprob: -8.813130378723145
    9. 'import' → logprob: -9.563130378723145
    10. 'lines' → logprob: -10.438130378723145

Token 1813: '.results' (ID: 53203)
  Prédit: '.lines'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.lines' → logprob: -0.2784191370010376
    2. 'lines' → logprob: -2.278419017791748
    3. '_lines' → logprob: -2.403419017791748
    4. 'def' → logprob: -3.403419017791748
    5. '._' → logprob: -5.403419017791748
    6. '_input' → logprob: -5.903419017791748
    7. ' def' → logprob: -6.278419017791748
    8. '   ' → logprob: -6.653419017791748
    9. '	lines' → logprob: -6.778419017791748
    10. 'input' → logprob: -6.778419017791748

Token 1814: ':' (ID: 25)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.01149032823741436
    2. ' =' → logprob: -4.511490345001221
    3. '=[]' → logprob: -8.261489868164062
    4. ':' → logprob: -9.511489868164062
    5. '   ' → logprob: -9.761489868164062
    6. '.append' → logprob: -10.261489868164062
    7. '=[]
' → logprob: -11.886489868164062
    8. 'def' → logprob: -13.261489868164062
    9. '.' → logprob: -13.511489868164062
    10. '[]' → logprob: -13.761489868164062

Token 1815: ' List' (ID: 2655)
  Prédit: 'List'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'List' → logprob: -0.0009387354948557913
    2. '[]' → logprob: -7.500938892364502
    3. ' List' → logprob: -8.250938415527344
    4. '[List' → logprob: -9.500938415527344
    5. '   ' → logprob: -10.750938415527344
    6. 'list' → logprob: -11.375938415527344
    7. '=' → logprob: -12.250938415527344
    8. 'Dict' → logprob: -12.500938415527344
    9. ' =' → logprob: -12.625938415527344
    10. '[]
' → logprob: -13.250938415527344

Token 1816: '[int' (ID: 40124)
  Prédit: '[int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[int' → logprob: -7.941850526549388e-06
    2. 'int' → logprob: -11.750007629394531
    3. '=int' → logprob: -17.00000762939453
    4. '[' → logprob: -17.50000762939453
    5. ' =' → logprob: -18.00000762939453
    6. '<int' → logprob: -18.50000762939453
    7. '   ' → logprob: -18.62500762939453
    8. '[Int' → logprob: -19.12500762939453
    9. ':int' → logprob: -19.50000762939453
    10. '```' → logprob: -20.12500762939453

Token 1817: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.00010783452307805419
    2. ']=' → logprob: -9.250107765197754
    3. '=' → logprob: -11.875107765197754
    4. '[' → logprob: -12.750107765197754
    5. ')' → logprob: -13.875107765197754
    6. ' ]' → logprob: -14.875107765197754
    7. '[int' → logprob: -15.625107765197754
    8. '   ' → logprob: -16.12510871887207
    9. '[]' → logprob: -17.00010871887207
    10. ']
' → logprob: -17.37510871887207

Token 1818: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.005385180003941059
    2. ' =' → logprob: -5.255385398864746
    3. '   ' → logprob: -9.255385398864746
    4. '=[]' → logprob: -10.630385398864746
    5. ':' → logprob: -11.005385398864746
    6. '.append' → logprob: -11.880385398864746
    7. '=[]
' → logprob: -12.755385398864746
    8. '[]' → logprob: -13.005385398864746
    9. '       ' → logprob: -14.380385398864746
    10. '```' → logprob: -14.505385398864746

Token 1819: ' []

' (ID: 32833)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.00043496055877767503
    2. '[]
' → logprob: -7.750434875488281
    3. '[]

' → logprob: -12.625434875488281
    4. '   ' → logprob: -15.250434875488281
    5. '[]}' → logprob: -15.375434875488281
    6. '[])' → logprob: -15.500434875488281
    7. ' []' → logprob: -16.00043487548828
    8. '[]"' → logprob: -16.25043487548828
    9. '=[]' → logprob: -16.50043487548828
    10. '[' → logprob: -17.50043487548828

Token 1820: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -9.29340603761375e-05
    2. 'def' → logprob: -9.375092506408691
    3. ' def' → logprob: -12.625092506408691
    4. '    
' → logprob: -13.250092506408691
    5. '```' → logprob: -13.375092506408691
    6. '
' → logprob: -14.750092506408691
    7. '<|end|>' → logprob: -14.875092506408691
    8. '	def' → logprob: -15.250092506408691
    9. '       ' → logprob: -16.375093460083008
    10. '        
' → logprob: -16.875093460083008

Token 1821: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.00931919738650322
    2. '   ' → logprob: -4.759319305419922
    3. ' def' → logprob: -7.259319305419922
    4. '	def' → logprob: -14.384319305419922
    5. '
' → logprob: -15.634319305419922
    6. '    
' → logprob: -17.509319305419922
    7. ' ' → logprob: -18.134319305419922
    8. '       ' → logprob: -18.634319305419922
    9. '```' → logprob: -19.009319305419922
    10. 'class' → logprob: -19.134319305419922

Token 1822: ' process' (ID: 2273)
  Prédit: 'process'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'process' → logprob: -0.0005846070707775652
    2. 'run' → logprob: -7.750584602355957
    3. 'parse' → logprob: -9.750584602355957
    4. 'add' → logprob: -10.000584602355957
    5. ' process' → logprob: -10.000584602355957
    6. 'read' → logprob: -12.875584602355957
    7. '_process' → logprob: -13.750584602355957
    8. 'solve' → logprob: -14.250584602355957
    9. 'consume' → logprob: -15.125584602355957
    10. ' run' → logprob: -15.375584602355957

Token 1823: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.011760273948311806
    2. '(' → logprob: -4.761760234832764
    3. '_next' → logprob: -6.761760234832764
    4. '_line' → logprob: -6.761760234832764
    5. '(
' → logprob: -8.136760711669922
    6. 'self' → logprob: -8.386760711669922
    7. '   ' → logprob: -9.011760711669922
    8. 'def' → logprob: -10.011760711669922
    9. '_one' → logprob: -10.386760711669922
    10. '_input' → logprob: -10.636760711669922

Token 1824: ',' (ID: 11)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.2151506394147873
    2. '_line' → logprob: -2.3401505947113037
    3. '_next' → logprob: -2.8401505947113037
    4. '_input' → logprob: -4.715150833129883
    5. '_lines' → logprob: -4.840150833129883
    6. 'self' → logprob: -4.840150833129883
    7. '(' → logprob: -5.215150833129883
    8. '   ' → logprob: -6.465150833129883
    9. 'next' → logprob: -6.840150833129883
    10. '_day' → logprob: -6.965150833129883

Token 1825: ' lines' (ID: 8698)
  Prédit: 'lines'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lines' → logprob: -0.20127111673355103
    2. 'self' → logprob: -2.4512710571289062
    3. 'input' → logprob: -2.4512710571289062
    4. ' lines' → logprob: -4.951271057128906
    5. 'cases' → logprob: -7.076271057128906
    6. ' input' → logprob: -7.451271057128906
    7. 'inputs' → logprob: -7.576271057128906
    8. '   ' → logprob: -7.951271057128906
    9. 'line' → logprob: -8.076271057128906
    10. ' self' → logprob: -8.576271057128906

Token 1826: ':' (ID: 25)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.1030741930007935
    2. ':' → logprob: -1.6030741930007935
    3. '):
' → logprob: -1.7280741930007935
    4. '(self' → logprob: -1.7280741930007935
    5. ')' → logprob: -3.353074073791504
    6. '=' → logprob: -3.603074073791504
    7. ',' → logprob: -4.103074073791504
    8. '):' → logprob: -4.228074073791504
    9. 'self' → logprob: -4.853074073791504
    10. '   ' → logprob: -5.603074073791504

Token 1827: ' Iterator' (ID: 41994)
  Prédit: 'Iterator'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Iterator' → logprob: -5.3358446166384965e-05
    2. 'Iterable' → logprob: -10.625053405761719
    3. ' Iterator' → logprob: -11.125053405761719
    4. '	Iterator' → logprob: -11.625053405761719
    5. '   ' → logprob: -13.375053405761719
    6. 'iter' → logprob: -13.500053405761719
    7. 'iterator' → logprob: -14.000053405761719
    8. '       ' → logprob: -14.625053405761719
    9. '_iterator' → logprob: -14.625053405761719
    10. '```' → logprob: -14.625053405761719

Token 1828: '[str' (ID: 33439)
  Prédit: '[str'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[str' → logprob: -8.65707261255011e-06
    2. '):
' → logprob: -12.000008583068848
    3. ')' → logprob: -13.875008583068848
    4. 'str' → logprob: -14.250008583068848
    5. '):' → logprob: -14.375008583068848
    6. '   ' → logprob: -15.750008583068848
    7. '[' → logprob: -16.875009536743164
    8. '[List' → logprob: -16.875009536743164
    9. '```' → logprob: -17.000009536743164
    10. '       ' → logprob: -17.750009536743164

Token 1829: ']):
' (ID: 51989)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.4901725649833679
    2. '])' → logprob: -1.2401726245880127
    3. '):
' → logprob: -2.6151726245880127
    4. ']):
' → logprob: -3.7401726245880127
    5. '   ' → logprob: -6.990172386169434
    6. '       ' → logprob: -8.615172386169434
    7. '>)' → logprob: -10.240172386169434
    8. ']):' → logprob: -10.740172386169434
    9. '）' → logprob: -11.490172386169434
    10. ']' → logprob: -11.490172386169434

Token 1830: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00012403888104017824
    2. '   ' → logprob: -9.125123977661133
    3. 'for' → logprob: -11.500123977661133
    4. ' for' → logprob: -12.625123977661133
    5. '```' → logprob: -13.375123977661133
    6. '	' → logprob: -16.625123977661133
    7. 'while' → logprob: -17.500123977661133
    8. '           ' → logprob: -17.625123977661133
    9. 'def' → logprob: -17.750123977661133
    10. '	   ' → logprob: -18.750123977661133

Token 1831: ' parser' (ID: 14216)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.033073943108320236
    2. 'while' → logprob: -3.533073902130127
    3. 'for' → logprob: -5.783073902130127
    4. 'parameters' → logprob: -9.408074378967285
    5. ' while' → logprob: -9.783074378967285
    6. '```' → logprob: -10.283074378967285
    7. 'params' → logprob: -10.408074378967285
    8. '   ' → logprob: -10.908074378967285
    9. '
' → logprob: -11.908074378967285
    10. 'def' → logprob: -12.658074378967285

Token 1832: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.28725501894950867
    2. ' =' → logprob: -1.662255048751831
    3. '       ' → logprob: -3.037255048751831
    4. '   ' → logprob: -6.162254810333252
    5. '.' → logprob: -6.412254810333252
    6. '_lines' → logprob: -6.537254810333252
    7. '(lines' → logprob: -6.787254810333252
    8. 'lines' → logprob: -6.912254810333252
    9. 'def' → logprob: -7.162254810333252
    10. 'for' → logprob: -7.662254810333252

Token 1833: ' Input' (ID: 10090)
  Prédit: 'Input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Input' → logprob: -9.088346359931165e-07
    2. ' Input' → logprob: -14.000000953674316
    3. 'input' → logprob: -18.25
    4. '	Input' → logprob: -20.0
    5. '   ' → logprob: -20.125
    6. '_input' → logprob: -20.875
    7. '       ' → logprob: -21.375
    8. '<Input' → logprob: -21.75
    9. ' ' → logprob: -21.875
    10. ' input' → logprob: -22.25

Token 1834: 'Parser' (ID: 9231)
  Prédit: 'Parser'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Parser' → logprob: -0.000931825372390449
    2. 'parser' → logprob: -7.375931739807129
    3. '   ' → logprob: -10.000931739807129
    4. '       ' → logprob: -10.000931739807129
    5. '(self' → logprob: -10.125931739807129
    6. '(lines' → logprob: -10.125931739807129
    7. 'self' → logprob: -10.125931739807129
    8. ')' → logprob: -10.875931739807129
    9. 'lines' → logprob: -11.125931739807129
    10. 'Lines' → logprob: -11.250931739807129

Token 1835: '(lines' (ID: 73839)
  Prédit: '(lines'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(lines' → logprob: -0.16023631393909454
    2. 'lines' → logprob: -1.9102363586425781
    3. ' lines' → logprob: -12.160236358642578
    4. '       ' → logprob: -12.285236358642578
    5. '	lines' → logprob: -13.285236358642578
    6. '   ' → logprob: -15.660236358642578
    7. '.lines' → logprob: -15.660236358642578
    8. '```' → logprob: -16.285236358642578
    9. '(iter' → logprob: -16.410236358642578
    10. 'Lines' → logprob: -17.035236358642578

Token 1836: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.2666085958480835
    2. ')' → logprob: -1.7666085958480835
    3. '       ' → logprob: -2.766608715057373
    4. '):
' → logprob: -9.891608238220215
    5. '   ' → logprob: -10.016608238220215
    6. '())
' → logprob: -10.141608238220215
    7. '
' → logprob: -11.016608238220215
    8. 'for' → logprob: -11.266608238220215
    9. ')
' → logprob: -11.641608238220215
    10. '()
' → logprob: -11.641608238220215

Token 1837: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0006522706826217473
    2. 'while' → logprob: -7.375652313232422
    3. ' while' → logprob: -10.875652313232422
    4. '   ' → logprob: -12.625652313232422
    5. '```' → logprob: -12.875652313232422
    6. '	' → logprob: -15.125652313232422
    7. '           ' → logprob: -15.375652313232422
    8. '	while' → logprob: -16.000652313232422
    9. '``' → logprob: -16.250652313232422
    10. 'for' → logprob: -16.750652313232422

Token 1838: ' while' (ID: 2049)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' (adapté à ' while') → logprob: -0.029774438589811325
    2. '       ' → logprob: -3.5297744274139404
    3. ' while' → logprob: -11.02977466583252
    4. '
' → logprob: -12.65477466583252
    5. '```' → logprob: -12.90477466583252
    6. 'for' → logprob: -13.77977466583252
    7. '   ' → logprob: -15.15477466583252
    8. 'try' → logprob: -15.40477466583252
    9. 'problem' → logprob: -15.77977466583252
    10. '``' → logprob: -15.90477466583252

Token 1839: ' True' (ID: 6432)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'True' → logprob: -0.0009184855734929442
    2. ' True' → logprob: -7.000918388366699
    3. '(True' → logprob: -12.6259183883667
    4. '       ' → logprob: -12.8759183883667
    5. '   ' → logprob: -13.8759183883667
    6. 'true' → logprob: -16.625919342041016
    7. '1' → logprob: -18.000919342041016
    8. '     ' → logprob: -18.625919342041016
    9. '    ' → logprob: -19.375919342041016
    10. '=True' → logprob: -19.625919342041016

Token 1840: ':
' (ID: 734)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.005272061098366976
    2. ':' → logprob: -5.505271911621094
    3. ':
' → logprob: -7.255271911621094
    4. '```' → logprob: -8.505271911621094
    5. '<|end|>' → logprob: -9.380271911621094
    6. '<|end|>' → logprob: -9.755271911621094
    7. '():
' → logprob: -10.880271911621094
    8. ',' → logprob: -11.255271911621094
    9. '		' → logprob: -11.505271911621094
    10. '):
' → logprob: -11.505271911621094

Token 1841: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.011830959469079971
    2. 'params' → logprob: -4.511830806732178
    3. 'problem' → logprob: -8.386831283569336
    4. 'param' → logprob: -8.636831283569336
    5. 'try' → logprob: -8.761831283569336
    6. 'parameters' → logprob: -9.136831283569336
    7. 'p' → logprob: -10.011831283569336
    8. '   ' → logprob: -10.886831283569336
    9. ' params' → logprob: -10.886831283569336
    10. 'Problem' → logprob: -11.886831283569336

Token 1842: ' params' (ID: 7039)
  Prédit: 'params'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'params' (adapté à ' params') → logprob: -0.020438414067029953
    2. 'pp' → logprob: -4.270438194274902
    3. 'parameters' → logprob: -5.645438194274902
    4. 'problem' → logprob: -6.645438194274902
    5. 'param' → logprob: -7.770438194274902
    6. '           ' → logprob: -7.895438194274902
    7. 'case' → logprob: -8.145438194274902
    8. 'p' → logprob: -9.395438194274902
    9. 'pair' → logprob: -9.895438194274902
    10. 'result' → logprob: -10.020438194274902

Token 1843: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.010327897034585476
    2. '=' → logprob: -4.8853278160095215
    3. '           ' → logprob: -6.2603278160095215
    4. 'params' → logprob: -8.26032829284668
    5. ' =' → logprob: -8.88532829284668
    6. '               ' → logprob: -9.38532829284668
    7. '=params' → logprob: -10.01032829284668
    8. ',next' → logprob: -10.51032829284668
    9. 'try' → logprob: -10.51032829284668
    10. ' ,' → logprob: -10.51032829284668

Token 1844: ' data' (ID: 1238)
  Prédit: 'data'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'data' → logprob: -0.00013131031300872564
    2. ' data' → logprob: -9.375131607055664
    3. 'live' → logprob: -10.000131607055664
    4. '   ' → logprob: -14.875131607055664
    5. '
' → logprob: -15.250131607055664
    6. '       ' → logprob: -15.875131607055664
    7. 'ldata' → logprob: -16.250131607055664
    8. '	data' → logprob: -16.625131607055664
    9. ' live' → logprob: -16.875131607055664
    10. 'pdata' → logprob: -17.625131607055664

Token 1845: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.1602308303117752
    2. ' =' → logprob: -1.9102308750152588
    3. '           ' → logprob: -12.53523063659668
    4. '=params' → logprob: -13.16023063659668
    5. '=
' → logprob: -15.16023063659668
    6. 'if' → logprob: -15.41023063659668
    7. '=None' → logprob: -16.03523063659668
    8. '       ' → logprob: -16.41023063659668
    9. '<|end|>' → logprob: -16.53523063659668
    10. '               ' → logprob: -16.66023063659668

Token 1846: ' parser' (ID: 14216)
  Prédit: 'parser'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'parser' → logprob: -0.005776035133749247
    2. '           ' → logprob: -5.7557759284973145
    3. ' parser' → logprob: -6.0057759284973145
    4. 'params' → logprob: -9.380776405334473
    5. 'parse' → logprob: -11.630776405334473
    6. '(parser' → logprob: -11.630776405334473
    7. '       ' → logprob: -12.255776405334473
    8. 'None' → logprob: -12.380776405334473
    9. '            ' → logprob: -12.630776405334473
    10. '	parser' → logprob: -12.880776405334473

Token 1847: '.parse' (ID: 7259)
  Prédit: '.parse'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.parse' → logprob: -0.3921980559825897
    2. 'parse' → logprob: -1.767198085784912
    3. '=' → logprob: -2.892198085784912
    4. '=parse' → logprob: -2.892198085784912
    5. ' =' → logprob: -3.267198085784912
    6. '_parse' → logprob: -6.642198085784912
    7. '       ' → logprob: -6.767198085784912
    8. '           ' → logprob: -6.892198085784912
    9. '   ' → logprob: -8.142197608947754
    10. '
' → logprob: -8.767197608947754

Token 1848: '_next' (ID: 25436)
  Prédit: '_next'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_next' → logprob: -0.00033832306507974863
    2. 'next' → logprob: -8.000338554382324
    3. 'Next' → logprob: -13.125338554382324
    4. '_' → logprob: -15.125338554382324
    5. '_NEXT' → logprob: -16.000337600708008
    6. '
' → logprob: -16.125337600708008
    7. '```' → logprob: -16.250337600708008
    8. '_n' → logprob: -17.250337600708008
    9. '(next' → logprob: -17.375337600708008
    10. '__' → logprob: -17.375337600708008

Token 1849: '_case' (ID: 43667)
  Prédit: '_case'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_case' → logprob: -0.03843044862151146
    2. 'case' → logprob: -3.4134304523468018
    3. '_' → logprob: -5.413430213928223
    4. '()' → logprob: -8.538430213928223
    5. '()
' → logprob: -9.538430213928223
    6. '(' → logprob: -11.288430213928223
    7. '_line' → logprob: -11.788430213928223
    8. '_
' → logprob: -11.913430213928223
    9. ' case' → logprob: -12.663430213928223
    10. ')' → logprob: -13.038430213928223

Token 1850: '()
' (ID: 1234)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.001499983249232173
    2. '<|end|>' → logprob: -7.251500129699707
    3. '               ' → logprob: -8.251500129699707
    4. ' if' → logprob: -8.501500129699707
    5. '<|end|>' → logprob: -9.001500129699707
    6. '       ' → logprob: -9.501500129699707
    7. 'if' → logprob: -9.876500129699707
    8. ':
' → logprob: -11.251500129699707
    9. '   ' → logprob: -11.376500129699707
    10. '```' → logprob: -11.751500129699707

Token 1851: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00024358915106859058
    2. 'if' → logprob: -9.250243186950684
    3. '   ' → logprob: -9.500243186950684
    4. ' if' → logprob: -10.125243186950684
    5. '               ' → logprob: -11.250243186950684
    6. '       ' → logprob: -11.625243186950684
    7. '		' → logprob: -12.500243186950684
    8. '<|end|>' → logprob: -13.000243186950684
    9. '	       ' → logprob: -13.875243186950684
    10. ' ' → logprob: -13.875243186950684

Token 1852: ' if' (ID: 538)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.576323926448822
    2. 'if' (adapté à ' if') → logprob: -0.826323926448822
    3. ' if' → logprob: -7.951323986053467
    4. '   ' → logprob: -10.576323509216309
    5. '       ' → logprob: -12.076323509216309
    6. '               ' → logprob: -14.826323509216309
    7. '		' → logprob: -15.076323509216309
    8. '	if' → logprob: -15.201323509216309
    9. '          ' → logprob: -16.951324462890625
    10. '	       ' → logprob: -17.076324462890625

Token 1853: ' params' (ID: 7039)
  Prédit: 'params'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'params' → logprob: -0.004114492796361446
    2. ' params' → logprob: -5.504114627838135
    3. '           ' → logprob: -10.254114151000977
    4. 'not' → logprob: -14.879114151000977
    5. 'parameters' → logprob: -15.504114151000977
    6. '(params' → logprob: -15.879114151000977
    7. 'param' → logprob: -16.254114151000977
    8. ' not' → logprob: -17.129114151000977
    9. '	params' → logprob: -17.254114151000977
    10. '$params' → logprob: -18.004114151000977

Token 1854: ' is' (ID: 382)
  Prédit: ' is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.3132675588130951
    2. 'is' → logprob: -1.3132675886154175
    3. '           ' → logprob: -12.938267707824707
    4. '	is' → logprob: -13.313267707824707
    5. '   ' → logprob: -14.813267707824707
    6. '       ' → logprob: -15.313267707824707
    7. '    ' → logprob: -15.688267707824707
    8. '            ' → logprob: -15.813267707824707
    9. ')is' → logprob: -16.06326675415039
    10. '        ' → logprob: -16.18826675415039

Token 1855: ' None' (ID: 4662)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -3.130576806142926e-05
    2. ' None' → logprob: -10.500031471252441
    3. '           ' → logprob: -12.750031471252441
    4. '(None' → logprob: -15.000031471252441
    5. '=None' → logprob: -15.125031471252441
    6. '_None' → logprob: -15.500031471252441
    7. '_none' → logprob: -18.750030517578125
    8. '       ' → logprob: -19.250030517578125
    9. '                   ' → logprob: -19.375030517578125
    10. '               ' → logprob: -19.500030517578125

Token 1856: ':
' (ID: 734)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.03938901424407959
    2. ':
' → logprob: -3.914389133453369
    3. ':' → logprob: -4.539389133453369
    4. '           ' → logprob: -5.164389133453369
    5. ' or' → logprob: -6.664389133453369
    6. ' and' → logprob: -7.789389133453369
    7. 'and' → logprob: -7.914389133453369
    8. '                   ' → logprob: -9.789388656616211
    9. '	           ' → logprob: -9.914388656616211
    10. '                       ' → logprob: -10.539388656616211

Token 1857: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -9.007317567011341e-05
    2. '           ' → logprob: -10.125089645385742
    3. '                   ' → logprob: -10.375089645385742
    4. '	           ' → logprob: -11.625089645385742
    5. '                       ' → logprob: -12.500089645385742
    6. '<|end|>' → logprob: -13.750089645385742
    7. '   ' → logprob: -13.875089645385742
    8. '              ' → logprob: -14.000089645385742
    9. '		       ' → logprob: -14.375089645385742
    10. '			' → logprob: -14.875089645385742

Token 1858: ' break' (ID: 2338)
  Prédit: 'break'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'break' (adapté à ' break') → logprob: -0.057973235845565796
    2. '               ' → logprob: -3.0579731464385986
    3. '           ' → logprob: -4.807973384857178
    4. ' break' → logprob: -7.432973384857178
    5. '                   ' → logprob: -7.807973384857178
    6. '	break' → logprob: -9.18297290802002
    7. 'return' → logprob: -9.80797290802002
    8. '	           ' → logprob: -11.55797290802002
    9. '_break' → logprob: -12.68297290802002
    10. '                       ' → logprob: -13.18297290802002

Token 1859: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0008295211009681225
    2. '
' → logprob: -7.125829696655273
    3. '            
' → logprob: -10.875829696655273
    4. '               ' → logprob: -12.500829696655273
    5. '       ' → logprob: -14.125829696655273
    6. '          ' → logprob: -15.000829696655273
    7. ',' → logprob: -15.125829696655273
    8. '        
' → logprob: -15.500829696655273
    9. '    
' → logprob: -15.625829696655273
    10. '<|end|>' → logprob: -16.000829696655273

Token 1860: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0020031037274748087
    2. '       ' → logprob: -6.252003192901611
    3. '
' → logprob: -10.127002716064453
    4. 'solver' → logprob: -11.127002716064453
    5. '               ' → logprob: -11.877002716064453
    6. 's' → logprob: -12.877002716064453
    7. '          ' → logprob: -13.127002716064453
    8. ',' → logprob: -13.627002716064453
    9. '		' → logprob: -13.752002716064453
    10. '   ' → logprob: -13.877002716064453

Token 1861: ' solver' (ID: 63271)
  Prédit: 'solver'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'solver' (adapté à ' solver') → logprob: -0.5814766883850098
    2. '           ' → logprob: -0.8314766883850098
    3. ' solver' → logprob: -5.20647668838501
    4. 'solution' → logprob: -10.831476211547852
    5. '_solver' → logprob: -11.581476211547852
    6. '       ' → logprob: -12.456476211547852
    7. '               ' → logprob: -12.456476211547852
    8. 's' → logprob: -14.206476211547852
    9. '   ' → logprob: -14.331476211547852
    10. '```' → logprob: -14.581476211547852

Token 1862: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.20142124593257904
    2. '=' → logprob: -1.7014212608337402
    3. '       ' → logprob: -12.951420783996582
    4. '           ' → logprob: -13.076420783996582
    5. '   ' → logprob: -13.451420783996582
    6. '=
' → logprob: -14.326420783996582
    7. '        ' → logprob: -15.326420783996582
    8. '    ' → logprob: -15.826420783996582
    9. ')' → logprob: -15.951420783996582
    10. '<|end|>' → logprob: -15.951420783996582

Token 1863: ' Live' (ID: 13065)
  Prédit: 'Live'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Live' → logprob: -0.0002613358374219388
    2. ' Live' → logprob: -8.250261306762695
    3. '.Live' → logprob: -20.000261306762695
    4. '           ' → logprob: -20.750261306762695
    5. '
' → logprob: -21.375261306762695
    6. '_live' → logprob: -21.625261306762695
    7. '               ' → logprob: -22.375261306762695
    8. 'Liv' → logprob: -22.500261306762695
    9. 'LIVE' → logprob: -22.500261306762695
    10. 'self' → logprob: -22.750261306762695

Token 1864: 'Schedule' (ID: 25891)
  Prédit: 'Schedule'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Schedule' → logprob: -1.9361264946837764e-07
    2. 'Scheduler' → logprob: -16.5
    3. ' Schedule' → logprob: -17.625
    4. '
' → logprob: -17.75
    5. 'schedule' → logprob: -18.25
    6. '_schedule' → logprob: -18.5
    7. '```' → logprob: -20.625
    8. 'Live' → logprob: -20.75
    9. 'Schedules' → logprob: -21.5
    10. '           ' → logprob: -21.75

Token 1865: 'Solver' (ID: 70484)
  Prédit: 'Solver'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Solver' → logprob: -0.0003902775060851127
    2. 'solver' → logprob: -7.87539005279541
    3. '_solver' → logprob: -12.12539005279541
    4. 'Scheduler' → logprob: -12.87539005279541
    5. ' solver' → logprob: -13.37539005279541
    6. 'olver' → logprob: -15.50039005279541
    7. ' Solver' → logprob: -15.75039005279541
    8. 'Solve' → logprob: -16.125391006469727
    9. '
' → logprob: -16.625391006469727
    10. 'Schedule' → logprob: -17.250391006469727

Token 1866: '(params' (ID: 18813)
  Prédit: '(params'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(params' → logprob: -0.00036810929304920137
    2. '(parameters' → logprob: -8.250368118286133
    3. '(self' → logprob: -9.500368118286133
    4. '(' → logprob: -10.875368118286133
    5. '(
' → logprob: -12.000368118286133
    6. 'params' → logprob: -12.750368118286133
    7. '(param' → logprob: -12.875368118286133
    8. '           ' → logprob: -14.375368118286133
    9. '=params' → logprob: -15.125368118286133
    10. '(parser' → logprob: -15.875368118286133

Token 1867: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00011021859245374799
    2. ',data' → logprob: -9.125110626220703
    3. ' ,' → logprob: -14.375110626220703
    4. ',
' → logprob: -15.000110626220703
    5. '           ' → logprob: -15.500110626220703
    6. 'data' → logprob: -15.875110626220703
    7. '(data' → logprob: -17.250110626220703
    8. '               ' → logprob: -18.625110626220703
    9. '```' → logprob: -18.750110626220703
    10. '   ' → logprob: -19.125110626220703

Token 1868: ' data' (ID: 1238)
  Prédit: 'data'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'data' → logprob: -0.00015860427811276168
    2. ' data' → logprob: -8.750158309936523
    3. '           ' → logprob: -17.000158309936523
    4. '               ' → logprob: -17.375158309936523
    5. '
' → logprob: -18.000158309936523
    6. 'self' → logprob: -18.625158309936523
    7. '                   ' → logprob: -19.375158309936523
    8. '	data' → logprob: -19.375158309936523
    9. '(data' → logprob: -20.000158309936523
    10. '                       ' → logprob: -20.250158309936523

Token 1869: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.3443901538848877
    2. ')' → logprob: -1.4693901538848877
    3. '           ' → logprob: -2.8443901538848877
    4. ').' → logprob: -5.844389915466309
    5. '               ' → logprob: -9.344389915466309
    6. '       ' → logprob: -9.844389915466309
    7. '.solve' → logprob: -10.344389915466309
    8. ')
' → logprob: -11.594389915466309
    9. '```' → logprob: -12.219389915466309
    10. '   ' → logprob: -12.594389915466309

Token 1870: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.026632685214281082
    2. 'result' → logprob: -3.651632785797119
    3. 'answer' → logprob: -8.276632308959961
    4. 'results' → logprob: -10.901632308959961
    5. '```' → logprob: -11.026632308959961
    6. ' result' → logprob: -11.276632308959961
    7. 'self' → logprob: -11.401632308959961
    8. '
' → logprob: -12.276632308959961
    9. '       ' → logprob: -12.651632308959961
    10. 'output' → logprob: -12.901632308959961

Token 1871: ' ans' (ID: 3345)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.11241637915372849
    2. 'self' → logprob: -2.3624162673950195
    3. 'profit' → logprob: -4.8624162673950195
    4. 'score' → logprob: -5.7374162673950195
    5. '           ' → logprob: -7.2374162673950195
    6. 'answer' → logprob: -8.23741626739502
    7. 'res' → logprob: -9.11241626739502
    8. 'best' → logprob: -10.23741626739502
    9. ' result' → logprob: -10.23741626739502
    10. ' self' → logprob: -11.61241626739502

Token 1872: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.503912091255188
    2. 'wer' → logprob: -1.003912091255188
    3. '=' → logprob: -4.003911972045898
    4. '       ' → logprob: -5.628911972045898
    5. '           ' → logprob: -5.753911972045898
    6. 'swer' → logprob: -6.253911972045898
    7. 'w' → logprob: -6.878911972045898
    8. 'wera' → logprob: -7.878911972045898
    9. 'ow' → logprob: -8.128911972045898
    10. 'wert' → logprob: -8.378911972045898

Token 1873: ' solver' (ID: 63271)
  Prédit: 'solver'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'solver' → logprob: -0.0024764856789261103
    2. ' solver' → logprob: -6.002476692199707
    3. 'sol' → logprob: -14.127476692199707
    4. '_solver' → logprob: -16.62747573852539
    5. '           ' → logprob: -16.75247573852539
    6. 'ans' → logprob: -18.37747573852539
    7. '               ' → logprob: -19.12747573852539
    8. 'solve' → logprob: -19.62747573852539
    9. '   ' → logprob: -20.37747573852539
    10. '```' → logprob: -20.62747573852539

Token 1874: '.solve' (ID: 151960)
  Prédit: '.solve'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.solve' → logprob: -6.623244553338736e-05
    2. '.' → logprob: -10.125065803527832
    3. 'solve' → logprob: -10.625065803527832
    4. '   ' → logprob: -14.000065803527832
    5. ' .' → logprob: -14.875065803527832
    6. '       ' → logprob: -16.12506675720215
    7. '.sol' → logprob: -16.25006675720215
    8. '.run' → logprob: -16.25006675720215
    9. '
' → logprob: -16.25006675720215
    10. '           ' → logprob: -16.87506675720215

Token 1875: '()
' (ID: 1234)
  Prédit: '()
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()
' → logprob: -0.5632196068763733
    2. '           ' → logprob: -0.9382196068763733
    3. '()' → logprob: -3.3132195472717285
    4. '
' → logprob: -6.0632195472717285
    5. '<|end|>' → logprob: -9.438220024108887
    6. '[]
' → logprob: -9.563220024108887
    7. '(
' → logprob: -9.688220024108887
    8. '(' → logprob: -9.938220024108887
    9. '();' → logprob: -10.063220024108887
    10. '#' → logprob: -10.188220024108887

Token 1876: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0002636006975080818
    2. 'self' → logprob: -8.250263214111328
    3. '		' → logprob: -13.250263214111328
    4. ' self' → logprob: -15.500263214111328
    5. '       ' → logprob: -15.875263214111328
    6. '   ' → logprob: -16.125263214111328
    7. '               ' → logprob: -17.000263214111328
    8. '```' → logprob: -17.000263214111328
    9. '                   ' → logprob: -17.375263214111328
    10. '<|end|>' → logprob: -17.875263214111328

Token 1877: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.00863123033195734
    2. '           ' → logprob: -4.758631229400635
    3. ' self' → logprob: -11.008631706237793
    4. '   ' → logprob: -16.758630752563477
    5. '       ' → logprob: -17.758630752563477
    6. '	self' → logprob: -18.008630752563477
    7. '
' → logprob: -18.133630752563477
    8. '		' → logprob: -18.383630752563477
    9. '(self' → logprob: -18.883630752563477
    10. '               ' → logprob: -19.508630752563477

Token 1878: '.results' (ID: 53203)
  Prédit: '.results'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.results' → logprob: -0.026620958000421524
    2. 'results' → logprob: -3.651620864868164
    3. '.' → logprob: -8.401620864868164
    4. '           ' → logprob: -10.401620864868164
    5. ' results' → logprob: -10.401620864868164
    6. '   ' → logprob: -11.526620864868164
    7. '	results' → logprob: -12.026620864868164
    8. '_results' → logprob: -12.401620864868164
    9. ' .' → logprob: -12.401620864868164
    10. '       ' → logprob: -12.651620864868164

Token 1879: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -2.057743949990254e-05
    2. '.' → logprob: -10.875020980834961
    3. '.extend' → logprob: -14.375020980834961
    4. '.app' → logprob: -14.500020980834961
    5. 'append' → logprob: -15.375020980834961
    6. '_append' → logprob: -16.12502098083496
    7. '.Append' → logprob: -17.00002098083496
    8. '.ap' → logprob: -17.00002098083496
    9. '.setdefault' → logprob: -17.62502098083496
    10. '	append' → logprob: -18.62502098083496

Token 1880: '(ans' (ID: 70054)
  Prédit: '(ans'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(ans' → logprob: -5.512236498361744e-07
    2. 'ans' → logprob: -14.750000953674316
    3. '(' → logprob: -17.5
    4. '(
' → logprob: -19.0
    5. '	ans' → logprob: -19.125
    6. '(answer' → logprob: -19.375
    7. '(an' → logprob: -21.0
    8. '(ord' → logprob: -21.875
    9. ' ans' → logprob: -22.125
    10. '(abs' → logprob: -22.375

Token 1881: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00019662656995933503
    2. ')
' → logprob: -9.00019645690918
    3. '           ' → logprob: -9.87519645690918
    4. '       ' → logprob: -11.00019645690918
    5. '               ' → logprob: -13.50019645690918
    6. '<|end|>' → logprob: -13.75019645690918
    7. '   ' → logprob: -14.50019645690918
    8. '[' → logprob: -14.87519645690918
    9. '`)' → logprob: -15.25019645690918
    10. ' )' → logprob: -15.62519645690918

Token 1882: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.32964810729026794
    2. 'def' → logprob: -1.4546481370925903
    3. '<|end|>' → logprob: -3.204648017883301
    4. '
' → logprob: -5.829648017883301
    5. ' def' → logprob: -5.954648017883301
    6. '       ' → logprob: -7.079648017883301
    7. '```' → logprob: -8.8296480178833
    8. '	def' → logprob: -9.3296480178833
    9. '           ' → logprob: -10.2046480178833
    10. '<|end|>' → logprob: -10.4546480178833

Token 1883: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.00020187153131701052
    2. ' def' → logprob: -8.625202178955078
    3. '   ' → logprob: -11.000202178955078
    4. '
' → logprob: -12.375202178955078
    5. '	def' → logprob: -13.875202178955078
    6. '<|end|>' → logprob: -14.750202178955078
    7. '```' → logprob: -17.625202178955078
    8. 'from' → logprob: -17.625202178955078
    9. 'import' → logprob: -18.875202178955078
    10. '    
' → logprob: -19.000202178955078

Token 1884: ' output' (ID: 4733)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.03599182516336441
    2. 'get' → logprob: -4.035991668701172
    3. 'output' → logprob: -4.035991668701172
    4. 'format' → logprob: -11.785991668701172
    5. 'write' → logprob: -12.285991668701172
    6. ' print' → logprob: -13.660991668701172
    7. ' output' → logprob: -14.410991668701172
    8. '__' → logprob: -14.785991668701172
    9. 'run' → logprob: -15.285991668701172
    10. '_output' → logprob: -15.285991668701172

Token 1885: '_results' (ID: 31049)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.0005747167742811143
    2. '(' → logprob: -7.875574588775635
    3. 'self' → logprob: -8.875575065612793
    4. 'def' → logprob: -10.875575065612793
    5. '   ' → logprob: -11.375575065612793
    6. '(
' → logprob: -11.375575065612793
    7. '_line' → logprob: -12.125575065612793
    8. '()' → logprob: -13.625575065612793
    9. '```' → logprob: -13.875575065612793
    10. '_' → logprob: -14.375575065612793

Token 1886: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.0011372390436008573
    2. '   ' → logprob: -7.1261372566223145
    3. '       ' → logprob: -8.251136779785156
    4. '(' → logprob: -10.376136779785156
    5. 'self' → logprob: -10.626136779785156
    6. '(
' → logprob: -11.876136779785156
    7. 'def' → logprob: -12.126136779785156
    8. ' (' → logprob: -13.876136779785156
    9. ' ' → logprob: -14.001136779785156
    10. '```' → logprob: -14.251136779785156

Token 1887: '):
' (ID: 1883)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.03226446732878685
    2. 'self' → logprob: -3.907264471054077
    3. ')' → logprob: -4.782264232635498
    4. '   ' → logprob: -6.532264232635498
    5. '       ' → logprob: -7.157264232635498
    6. '):
' → logprob: -7.532264232635498
    7. '):' → logprob: -8.657264709472656
    8. 'def' → logprob: -8.782264709472656
    9. ')(' → logprob: -10.282264709472656
    10. '```' → logprob: -10.407264709472656

Token 1888: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.014525912702083588
    2. 'for' → logprob: -4.514525890350342
    3. '```' → logprob: -6.014525890350342
    4. '   ' → logprob: -7.389525890350342
    5. ' for' → logprob: -7.889525890350342
    6. '
' → logprob: -11.0145263671875
    7. 'def' → logprob: -12.5145263671875
    8. '``' → logprob: -12.7645263671875
    9. 'print' → logprob: -12.8895263671875
    10. '	for' → logprob: -13.0145263671875

Token 1889: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.0007687712204642594
    2. '       ' → logprob: -7.750768661499023
    3. 'print' → logprob: -8.500768661499023
    4. 'import' → logprob: -9.250768661499023
    5. ' for' → logprob: -10.625768661499023
    6. '```' → logprob: -11.625768661499023
    7. '   ' → logprob: -13.000768661499023
    8. '
' → logprob: -13.125768661499023
    9. 'def' → logprob: -13.750768661499023
    10. '	for' → logprob: -16.625768661499023

Token 1890: ' res' (ID: 694)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'res' → logprob: -0.1270032823085785
    2. 'result' → logprob: -2.1270031929016113
    3. ' res' → logprob: -9.87700366973877
    4. 'r' → logprob: -10.87700366973877
    5. 'ans' → logprob: -12.37700366973877
    6. ' result' → logprob: -14.75200366973877
    7. 'score' → logprob: -15.87700366973877
    8. '   ' → logprob: -16.127002716064453
    9. 'answer' → logprob: -16.127002716064453
    10. '       ' → logprob: -17.752002716064453

Token 1891: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0011462911497801542
    2. 'in' → logprob: -8.50114631652832
    3. 'print' → logprob: -8.50114631652832
    4. '       ' → logprob: -8.75114631652832
    5. ' ' → logprob: -8.87614631652832
    6. '   ' → logprob: -8.87614631652832
    7. 't' → logprob: -9.75114631652832
    8. '           ' → logprob: -9.87614631652832
    9. '_' → logprob: -10.00114631652832
    10. '  ' → logprob: -11.12614631652832

Token 1892: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -3.128163257315464e-07
    2. ' self' → logprob: -15.25
    3. '(self' → logprob: -17.25
    4. 'print' → logprob: -17.375
    5. '
' → logprob: -17.875
    6. '   ' → logprob: -20.375
    7. '[self' → logprob: -21.375
    8. '	self' → logprob: -22.0
    9. '       ' → logprob: -22.375
    10. 'result' → logprob: -23.375

Token 1893: '.results' (ID: 53203)
  Prédit: '.results'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.results' → logprob: -0.00041577612864784896
    2. 'results' → logprob: -7.875415802001953
    3. '   ' → logprob: -11.125415802001953
    4. '
' → logprob: -11.750415802001953
    5. ':
' → logprob: -12.250415802001953
    6. '._' → logprob: -13.250415802001953
    7. '	results' → logprob: -13.250415802001953
    8. ' .' → logprob: -13.750415802001953
    9. ' results' → logprob: -13.750415802001953
    10. '.
' → logprob: -14.250415802001953

Token 1894: ':
' (ID: 734)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.1240399181842804
    2. 'print' → logprob: -2.499039888381958
    3. ':
' → logprob: -3.499039888381958
    4. ':' → logprob: -5.624040126800537
    5. ' print' → logprob: -7.749040126800537
    6. '):
' → logprob: -9.874039649963379
    7. '.print' → logprob: -10.249039649963379
    8. '   ' → logprob: -10.624039649963379
    9. '():
' → logprob: -10.624039649963379
    10. '       ' → logprob: -10.624039649963379

Token 1895: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.10053757578134537
    2. 'print' → logprob: -2.3505375385284424
    3. '```' → logprob: -8.475537300109863
    4. ' print' → logprob: -9.225537300109863
    5. '   ' → logprob: -10.975537300109863
    6. '
' → logprob: -12.600537300109863
    7. '       ' → logprob: -13.725537300109863
    8. '		' → logprob: -14.475537300109863
    9. '`' → logprob: -14.975537300109863
    10. 'println' → logprob: -15.100537300109863

Token 1896: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -2.339278580620885e-06
    2. '           ' → logprob: -13.500001907348633
    3. ' print' → logprob: -14.000001907348633
    4. '```' → logprob: -18.000001907348633
    5. '               ' → logprob: -18.125001907348633
    6. '
' → logprob: -19.500001907348633
    7. '   ' → logprob: -19.875001907348633
    8. '       ' → logprob: -20.250001907348633
    9. 'println' → logprob: -21.375001907348633
    10. '	print' → logprob: -22.000001907348633

Token 1897: '(res' (ID: 8331)
  Prédit: '(res'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(res' → logprob: -0.03804183006286621
    2. 'res' → logprob: -3.288041830062866
    3. ' res' → logprob: -15.038042068481445
    4. '$res' → logprob: -16.538042068481445
    5. '(f' → logprob: -17.288042068481445
    6. '	res' → logprob: -18.538042068481445
    7. '(' → logprob: -19.288042068481445
    8. ',res' → logprob: -19.663042068481445
    9. 'f' → logprob: -20.038042068481445
    10. '=res' → logprob: -20.288042068481445

Token 1898: ')


' (ID: 7861)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0009550517424941063
    2. '()' → logprob: -7.375955104827881
    3. '())' → logprob: -8.125954627990723
    4. ')
' → logprob: -11.000954627990723
    5. '       ' → logprob: -11.500954627990723
    6. '   ' → logprob: -12.500954627990723
    7. '()
' → logprob: -14.500954627990723
    8. '           ' → logprob: -14.625954627990723
    9. ')`' → logprob: -15.000954627990723
    10. ' )' → logprob: -15.875954627990723

Token 1899: 'def' (ID: 1314)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '```' → logprob: -0.4365091025829315
    2. '<|end|>' → logprob: -1.186509132385254
    3. 'def' → logprob: -3.311509132385254
    4. 'if' → logprob: -5.186509132385254
    5. '#' → logprob: -5.436509132385254
    6. 'import' → logprob: -6.811509132385254
    7. '<|end|>' → logprob: -8.061509132385254
    8. 'from' → logprob: -8.811509132385254
    9. ')' → logprob: -8.936509132385254
    10. '``' → logprob: -9.186509132385254

Token 1900: ' main' (ID: 2758)
  Prédit: ' main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.47408542037010193
    2. 'main' → logprob: -0.9740854501724243
    3. ' run' → logprob: -12.599085807800293
    4. '_main' → logprob: -12.724085807800293
    5. 'run' → logprob: -13.599085807800293
    6. '__' → logprob: -14.849085807800293
    7. '	main' → logprob: -16.099084854125977
    8. ' solve' → logprob: -16.349084854125977
    9. 'process' → logprob: -16.724084854125977
    10. ' live' → logprob: -16.974084854125977

Token 1901: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.004080897197127342
    2. '():
' → logprob: -5.504080772399902
    3. '()' → logprob: -13.254080772399902
    4. ' ():' → logprob: -14.879080772399902
    5. '():
' → logprob: -16.12908172607422
    6. '():

' → logprob: -16.50408172607422
    7. 'def' → logprob: -17.25408172607422
    8. '(' → logprob: -17.37908172607422
    9. '();' → logprob: -18.00408172607422
    10. '().' → logprob: -18.25408172607422

Token 1902: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.47735822200775146
    2. 'import' → logprob: -0.9773582220077515
    3. ' import' → logprob: -6.727358341217041
    4. '```' → logprob: -6.977358341217041
    5. 'lines' → logprob: -7.977358341217041
    6. ' lines' → logprob: -8.352357864379883
    7. '	lines' → logprob: -8.602357864379883
    8. '	import' → logprob: -8.602357864379883
    9. 'from' → logprob: -9.477357864379883
    10. '(lines' → logprob: -9.727357864379883

Token 1903: ' import' (ID: 1588)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'import' (adapté à ' import') → logprob: -0.00027718624914996326
    2. ' import' → logprob: -8.500277519226074
    3. '   ' → logprob: -10.000277519226074
    4. 'lines' → logprob: -10.500277519226074
    5. ' lines' → logprob: -15.125277519226074
    6. '	import' → logprob: -15.250277519226074
    7. '```' → logprob: -15.875277519226074
    8. 'from' → logprob: -16.250276565551758
    9. 'for' → logprob: -17.875276565551758
    10. '	lines' → logprob: -19.125276565551758

Token 1904: ' sys' (ID: 12228)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sys' → logprob: -1.8624639324116288e-06
    2. ' sys' → logprob: -13.250001907348633
    3. '=sys' → logprob: -18.125001907348633
    4. '	sys' → logprob: -20.375001907348633
    5. '_sys' → logprob: -20.875001907348633
    6. '(sys' → logprob: -21.375001907348633
    7. '```' → logprob: -23.000001907348633
    8. '.sys' → logprob: -23.250001907348633
    9. 'io' → logprob: -23.375001907348633
    10. '
' → logprob: -23.500001907348633

Token 1905: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.01054674293845892
    2. '
' → logprob: -4.760546684265137
    3. 'lines' → logprob: -6.885546684265137
    4. 'for' → logprob: -7.885546684265137
    5. '```' → logprob: -8.010546684265137
    6. '    
' → logprob: -8.885546684265137
    7. ' lines' → logprob: -10.385546684265137
    8. '	lines' → logprob: -11.635546684265137
    9. 'input' → logprob: -12.260546684265137
    10. 'line' → logprob: -12.385546684265137

Token 1906: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00011713240382960066
    2. 'lines' → logprob: -9.250117301940918
    3. 'for' → logprob: -12.250117301940918
    4. '
' → logprob: -12.250117301940918
    5. ' lines' → logprob: -12.625117301940918
    6. '    
' → logprob: -12.750117301940918
    7. '	lines' → logprob: -12.875117301940918
    8. '```' → logprob: -13.375117301940918
    9. 'input' → logprob: -14.250117301940918
    10. '       ' → logprob: -16.3751163482666

Token 1907: ' processor' (ID: 29539)
  Prédit: 'lines'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'lines' → logprob: -0.12733551859855652
    2. '   ' → logprob: -2.127335548400879
    3. ' lines' → logprob: -8.252335548400879
    4. '	lines' → logprob: -9.627335548400879
    5. 'for' → logprob: -9.877335548400879
    6. 'input' → logprob: -10.627335548400879
    7. 'line' → logprob: -13.377335548400879
    8. 'reader' → logprob: -14.002335548400879
    9. '```' → logprob: -14.002335548400879
    10. '_lines' → logprob: -14.377335548400879

Token 1908: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.41069045662879944
    2. '=' → logprob: -1.535690426826477
    3. '.process' → logprob: -2.6606905460357666
    4. '.processor' → logprob: -3.9106905460357666
    5. '   ' → logprob: -4.0356903076171875
    6. '.' → logprob: -4.7856903076171875
    7. '(process' → logprob: -5.5356903076171875
    8. '.py' → logprob: -7.5356903076171875
    9. '().' → logprob: -8.160690307617188
    10. '_processor' → logprob: -8.535690307617188

Token 1909: ' Live' (ID: 13065)
  Prédit: 'Live'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Live' → logprob: -0.0007188651943579316
    2. ' Live' → logprob: -7.25071907043457
    3. '   ' → logprob: -12.00071907043457
    4. 'processor' → logprob: -12.87571907043457
    5. 'Processor' → logprob: -16.37571907043457
    6. ' processor' → logprob: -17.50071907043457
    7. '.Live' → logprob: -18.12571907043457
    8. '_live' → logprob: -18.50071907043457
    9. '  ' → logprob: -18.87571907043457
    10. ' ' → logprob: -19.50071907043457

Token 1910: 'Schedule' (ID: 25891)
  Prédit: 'Schedule'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Schedule' → logprob: -3.368984107510187e-05
    2. 'Scheduler' → logprob: -10.500033378601074
    3. 'Processor' → logprob: -12.375033378601074
    4. '   ' → logprob: -13.250033378601074
    5. 'processor' → logprob: -16.75003433227539
    6. ' Schedule' → logprob: -16.75003433227539
    7. '_schedule' → logprob: -17.37503433227539
    8. '       ' → logprob: -19.00003433227539
    9. 'Schedules' → logprob: -19.50003433227539
    10. '.Schedule' → logprob: -19.62503433227539

Token 1911: 'Processor' (ID: 22334)
  Prédit: 'Processor'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Processor' → logprob: -0.000915039679966867
    2. 'processor' → logprob: -7.000915050506592
    3. 'Solver' → logprob: -13.375914573669434
    4. '_processor' → logprob: -13.875914573669434
    5. '   ' → logprob: -14.375914573669434
    6. ' Processor' → logprob: -15.625914573669434
    7. ' processor' → logprob: -15.875914573669434
    8. 'Scheduler' → logprob: -16.62591552734375
    9. '.processor' → logprob: -17.25091552734375
    10. 'process' → logprob: -18.25091552734375

Token 1912: '()
' (ID: 1234)
  Prédit: '(process'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(process' → logprob: -0.8611356616020203
    2. '   ' → logprob: -0.9861356616020203
    3. 'processor' → logprob: -1.861135721206665
    4. '()
' → logprob: -3.611135721206665
    5. '
' → logprob: -4.861135482788086
    6. '()' → logprob: -4.986135482788086
    7. 'for' → logprob: -5.611135482788086
    8. 'process' → logprob: -6.611135482788086
    9. '(lines' → logprob: -7.861135482788086
    10. 'def' → logprob: -7.986135482788086

Token 1913: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.023587381467223167
    2. 'processor' → logprob: -3.773587465286255
    3. 'for' → logprob: -8.148587226867676
    4. ' processor' → logprob: -10.398587226867676
    5. '```' → logprob: -11.648587226867676
    6. 'lines' → logprob: -12.273587226867676
    7. '
' → logprob: -12.398587226867676
    8. ' for' → logprob: -13.148587226867676
    9. 'def' → logprob: -14.523587226867676
    10. 'import' → logprob: -14.898587226867676

Token 1914: ' processor' (ID: 29539)
  Prédit: 'processor'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'processor' (adapté à ' processor') → logprob: -0.00018697108316700906
    2. 'for' → logprob: -8.750186920166016
    3. '   ' → logprob: -10.750186920166016
    4. 'lines' → logprob: -12.250186920166016
    5. ' processor' → logprob: -13.125186920166016
    6. 'Processor' → logprob: -17.250186920166016
    7. '.processor' → logprob: -17.250186920166016
    8. '```' → logprob: -17.250186920166016
    9. 'line' → logprob: -17.500186920166016
    10. 'processors' → logprob: -17.750186920166016

Token 1915: '.process' (ID: 28604)
  Prédit: '.process'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.process' → logprob: -2.339278580620885e-06
    2. 'process' → logprob: -13.375001907348633
    3. '.' → logprob: -14.125001907348633
    4. '   ' → logprob: -18.000001907348633
    5. '.processor' → logprob: -18.875001907348633
    6. '.run' → logprob: -19.000001907348633
    7. ' .' → logprob: -19.000001907348633
    8. '.perform' → logprob: -19.500001907348633
    9. '.execute' → logprob: -20.250001907348633
    10. '.parse' → logprob: -20.625001907348633

Token 1916: '(iter' (ID: 61014)
  Prédit: '(sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(sys' → logprob: -0.00046606172691099346
    2. '(iter' → logprob: -8.000466346740723
    3. 'sys' → logprob: -9.000466346740723
    4. '   ' → logprob: -12.250466346740723
    5. 'iter' → logprob: -13.875466346740723
    6. '(' → logprob: -14.000466346740723
    7. ' sys' → logprob: -15.375466346740723
    8. '	sys' → logprob: -15.500466346740723
    9. '((' → logprob: -16.000465393066406
    10. '=sys' → logprob: -16.500465393066406

Token 1917: '(sys' (ID: 41042)
  Prédit: '(sys'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(sys' → logprob: -6.813969957875088e-05
    2. 'sys' → logprob: -9.625067710876465
    3. '=sys' → logprob: -14.000067710876465
    4. ' sys' → logprob: -14.250067710876465
    5. '	sys' → logprob: -15.000067710876465
    6. '(input' → logprob: -16.37506866455078
    7. '(line' → logprob: -16.62506866455078
    8. '/sys' → logprob: -18.00006866455078
    9. '(System' → logprob: -18.50006866455078
    10. '(open' → logprob: -18.75006866455078

Token 1918: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -6.575563020305708e-05
    2. '.argv' → logprob: -9.750065803527832
    3. 'stdin' → logprob: -12.500065803527832
    4. '.stdout' → logprob: -12.500065803527832
    5. '.std' → logprob: -16.750064849853516
    6. '.__' → logprob: -18.250064849853516
    7. '.stderr' → logprob: -18.375064849853516
    8. '(stdin' → logprob: -18.625064849853516
    9. '
' → logprob: -19.375064849853516
    10. '```' → logprob: -20.000064849853516

Token 1919: '))
' (ID: 2210)
  Prédit: '()))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()))' → logprob: -0.943350613117218
    2. '.readline' → logprob: -1.1933505535125732
    3. '))' → logprob: -1.4433505535125732
    4. '()))
' → logprob: -3.0683505535125732
    5. '.readlines' → logprob: -4.318350791931152
    6. '))
' → logprob: -4.568350791931152
    7. '().' → logprob: -7.443350791931152
    8. '   ' → logprob: -8.568350791931152
    9. 'lines' → logprob: -9.818350791931152
    10. '()' → logprob: -10.193350791931152

Token 1920: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.006759425159543753
    2. 'processor' → logprob: -5.0067596435546875
    3. ' processor' → logprob: -10.131759643554688
    4. '```' → logprob: -13.881759643554688
    5. 'process' → logprob: -14.006759643554688
    6. '(process' → logprob: -14.256759643554688
    7. '
' → logprob: -14.381759643554688
    8. '_processor' → logprob: -14.881759643554688
    9. '.processor' → logprob: -15.131759643554688
    10. ')' → logprob: -15.631759643554688

Token 1921: ' processor' (ID: 29539)
  Prédit: 'processor'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'processor' (adapté à ' processor') → logprob: -0.16035978496074677
    2. '   ' → logprob: -1.9103597402572632
    3. ' processor' → logprob: -8.910359382629395
    4. '.processor' → logprob: -15.035359382629395
    5. '```' → logprob: -16.03536033630371
    6. '  ' → logprob: -16.41036033630371
    7. '
' → logprob: -16.91036033630371
    8. '_processor' → logprob: -17.16036033630371
    9. ' ' → logprob: -17.53536033630371
    10. 'Processor' → logprob: -17.78536033630371

Token 1922: '.output' (ID: 27521)
  Prédit: '.output'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.output' → logprob: -0.0001305950863752514
    2. 'output' → logprob: -9.125130653381348
    3. '.' → logprob: -11.000130653381348
    4. '   ' → logprob: -13.125130653381348
    5. '_output' → logprob: -14.375130653381348
    6. '(output' → logprob: -14.750130653381348
    7. '.mainloop' → logprob: -14.875130653381348
    8. '.out' → logprob: -15.250130653381348
    9. '.process' → logprob: -15.500130653381348
    10. '	output' → logprob: -15.625130653381348

Token 1923: '_results' (ID: 31049)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.011633267626166344
    2. '_results' → logprob: -4.511633396148682
    3. '()
' → logprob: -7.761633396148682
    4. 'results' → logprob: -9.511632919311523
    5. '_' → logprob: -10.386632919311523
    6. '()\' → logprob: -10.761632919311523
    7. '()`' → logprob: -11.886632919311523
    8. '_lines' → logprob: -12.261632919311523
    9. '())' → logprob: -12.886632919311523
    10. '(' → logprob: -13.011632919311523

Token 1924: '()


' (ID: 29771)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.7970954179763794
    2. 'if' → logprob: -0.9220954179763794
    3. '<|end|>' → logprob: -1.9220954179763794
    4. '```' → logprob: -6.54709529876709
    5. '   ' → logprob: -6.79709529876709
    6. ' if' → logprob: -7.04709529876709
    7. '<|end|>' → logprob: -7.67209529876709
    8. '\n' → logprob: -8.04709529876709
    9. '    
' → logprob: -8.79709529876709
    10. '...' → logprob: -9.04709529876709

Token 1925: 'if' (ID: 366)
  Prédit: 'if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -6.468279752880335e-05
    2. '```' → logprob: -10.375064849853516
    3. 'main' → logprob: -10.500064849853516
    4. ' if' → logprob: -12.125064849853516
    5. '#' → logprob: -15.875064849853516
    6. '__' → logprob: -16.375064849853516
    7. '
' → logprob: -16.375064849853516
    8. '@if' → logprob: -18.000064849853516
    9. '	if' → logprob: -18.625064849853516
    10. '``' → logprob: -18.750064849853516

Token 1926: ' __' (ID: 2516)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.008649910800158978
    2. ' __' → logprob: -4.758649826049805
    3. 'name' → logprob: -10.258649826049805
    4. '_name' → logprob: -16.133649826049805
    5. '___' → logprob: -16.758649826049805
    6. ' ' → logprob: -17.383649826049805
    7. '```' → logprob: -17.383649826049805
    8. 'Name' → logprob: -18.133649826049805
    9. '/__' → logprob: -18.258649826049805
    10. 'True' → logprob: -18.508649826049805

Token 1927: 'name' (ID: 897)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.04128485545516014
    2. '==' → logprob: -3.5412847995758057
    3. ' ==' → logprob: -4.541285037994385
    4. 'name' → logprob: -8.291284561157227
    5. ' __' → logprob: -8.666284561157227
    6. '=="' → logprob: -8.791284561157227
    7. '=='' → logprob: -9.916284561157227
    8. 'main' → logprob: -10.666284561157227
    9. '__.__' → logprob: -10.791284561157227
    10. '_name' → logprob: -11.166284561157227

Token 1928: '__' (ID: 771)
  Prédit: '__'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.00019495772721711546
    2. '==' → logprob: -8.750194549560547
    3. ' ==' → logprob: -10.875194549560547
    4. '=="' → logprob: -11.875194549560547
    5. '__.__' → logprob: -12.250194549560547
    6. 'name' → logprob: -13.125194549560547
    7. '____' → logprob: -13.750194549560547
    8. '__.' → logprob: -14.375194549560547
    9. '=='' → logprob: -14.375194549560547
    10. '__
' → logprob: -14.750194549560547

Token 1929: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.06109469756484032
    2. '__' → logprob: -3.1860947608947754
    3. '=="' → logprob: -4.936094760894775
    4. '=='' → logprob: -5.186094760894775
    5. ' ==' → logprob: -5.311094760894775
    6. '==
' → logprob: -8.936094284057617
    7. '[' → logprob: -10.561094284057617
    8. '===' → logprob: -11.311094284057617
    9. '['' → logprob: -11.561094284057617
    10. '```' → logprob: -11.561094284057617

Token 1930: ' "__' (ID: 27367)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.07903685420751572
    2. ''' → logprob: -2.5790369510650635
    3. '__' → logprob: -8.829036712646484
    4. ' "__' → logprob: -14.579036712646484
    5. 'main' → logprob: -15.579036712646484
    6. '"name' → logprob: -17.704036712646484
    7. '   ' → logprob: -18.079036712646484
    8. ' '__' → logprob: -18.204036712646484
    9. '"user' → logprob: -18.954036712646484
    10. ''name' → logprob: -19.829036712646484

Token 1931: 'main' (ID: 7731)
  Prédit: 'main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.0033015317749232054
    2. '__' → logprob: -5.753301620483398
    3. '"' → logprob: -9.628301620483398
    4. ''' → logprob: -9.878301620483398
    5. 'name' → logprob: -12.128301620483398
    6. '_main' → logprob: -14.253301620483398
    7. ' main' → logprob: -15.378301620483398
    8. '   ' → logprob: -16.6283016204834
    9. ''m' → logprob: -16.6283016204834
    10. '-main' → logprob: -16.8783016204834

Token 1932: '__":
' (ID: 49892)
  Prédit: '__":
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__":
' → logprob: -0.3892916440963745
    2. '__' → logprob: -1.1392916440963745
    3. '__':
' → logprob: -6.264291763305664
    4. '__
' → logprob: -8.014291763305664
    5. '__.' → logprob: -9.514291763305664
    6. '__["' → logprob: -10.014291763305664
    7. '__.__' → logprob: -10.889291763305664
    8. '__:' → logprob: -11.764291763305664
    9. '__
' → logprob: -11.764291763305664
    10. '==' → logprob: -12.014291763305664

Token 1933: '   ' (ID: 271)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -8.077528764260933e-05
    2. '   ' → logprob: -9.750081062316895
    3. '	main' → logprob: -11.250081062316895
    4. ' main' → logprob: -11.875081062316895
    5. '_main' → logprob: -13.750081062316895
    6. '
' → logprob: -14.375081062316895
    7. '    
' → logprob: -14.875081062316895
    8. '__' → logprob: -15.625081062316895
    9. '(main' → logprob: -16.125080108642578
    10. '```' → logprob: -16.125080108642578

Token 1934: ' main' (ID: 2758)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' (adapté à ' main') → logprob: 0.0
    2. ' main' → logprob: -17.75
    3. '   ' → logprob: -18.75
    4. '	main' → logprob: -19.0
    5. 'import' → logprob: -23.125
    6. '.main' → logprob: -24.5
    7. '_main' → logprob: -24.5
    8. '(main' → logprob: -24.75
    9. '
' → logprob: -27.625
    10. '  ' → logprob: -27.75

Token 1935: '()' (ID: 416)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 1933
Tokens correctement prédits (1ère position, stricte): 679
Tokens correctement prédits (1ère position, avec adaptation): 742
Tokens correctement prédits (top 10): 1452
Précision stricte (1ère position): 35.13%
Précision adaptée (1ère position): 38.39%
Précision (top 10): 75.12%
================================================================================
