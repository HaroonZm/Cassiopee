================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:14:18
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
# Solution pour le problème "Summer of KMC"
# Le but est de calculer le nombre minimal de pièces/billets (100円玉, 500円玉, 1000円札)
# pour rendre la monnaie à partir du montant payé moins le prix de l'article.

def main():
    while True:
        # Lecture des valeurs A (prix du CD) et B (montant payé)
        A, B = map(int, input().split())
        if A == 0 and B == 0:
            # Condition de fin d'entrée
            break

        change = B - A  # Calcul de la monnaie à rendre

        # On utilise une stratégie gloutonne car la monnaie est composée
        # de billets/pièces standard et multiples de 100.
        # On commence par donner le maximum de billets 1000 yen,
        # puis de pièces de 500 yen, puis enfin de pièces de 100 yen.

        num_1000 = change // 1000
        change %= 1000

        num_500 = change // 500
        change %= 500

        num_100 = change // 100
        change %= 100

        # change doit être nul à ce stade puisqu'on travaille en multiples de 100.

        print(num_100, num_500, num_1000)

if __name__ == "__main__":
    main()
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: '#' (ID: 2)
  → Token d'amorce (pas de prédiction)

Token 1: ' Solution' (ID: 20858)
  → Token d'amorce (pas de prédiction)

Token 2: ' pour' (ID: 1930)
  → Token d'amorce (pas de prédiction)

Token 3: ' le' (ID: 505)
  Prédit: ' le'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' le' → logprob: -1.1469615697860718
    2. ' résoudre' → logprob: -1.3969615697860718
    3. 'l' → logprob: -1.7719615697860718
    4. 'le' → logprob: -1.8969615697860718
    5. '#' → logprob: -4.021961688995361
    6. 'r' → logprob: -5.021961688995361
    7. 'pro' → logprob: -5.021961688995361
    8. 'rés' → logprob: -5.146961688995361
    9. 'calcul' → logprob: -5.146961688995361
    10. 'python' → logprob: -5.146961688995361

Token 4: ' problème' (ID: 35630)
  Prédit: 'pro'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pro' → logprob: -0.055152397602796555
    2. ' problème' → logprob: -4.305152416229248
    3. 'proble' → logprob: -4.680152416229248
    4. 'jour' → logprob: -4.680152416229248
    5. 'code' → logprob: -5.430152416229248
    6. ' prochain' → logprob: -5.930152416229248
    7. ' code' → logprob: -6.305152416229248
    8. 'problem' → logprob: -6.555152416229248
    9. '#' → logprob: -6.805152416229248
    10. ' ' → logprob: -7.055152416229248

Token 5: ' "' (ID: 392)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.1953635811805725
    2. ' :' → logprob: -2.1953635215759277
    3. '```' → logprob: -3.4453635215759277
    4. 's' → logprob: -3.8203635215759277
    5. '\n' → logprob: -6.195363521575928
    6. '_' → logprob: -6.570363521575928
    7. '#' → logprob: -6.570363521575928
    8. '\' → logprob: -6.695363521575928
    9. 'def' → logprob: -6.945363521575928
    10. '`' → logprob: -6.945363521575928

Token 6: 'Summer' (ID: 71702)
  Prédit: ' des'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' des' → logprob: -1.4341360330581665
    2. 'Two' → logprob: -2.059135913848877
    3. ' Two' → logprob: -2.559135913848877
    4. '2' → logprob: -2.809135913848877
    5. ' deux' → logprob: -2.934135913848877
    6. ' "' → logprob: -3.184135913848877
    7. ' ' → logprob: -3.559135913848877
    8. ' du' → logprob: -3.559135913848877
    9. 'Deux' → logprob: -3.559135913848877
    10. '"' → logprob: -3.934135913848877

Token 7: ' of' (ID: 328)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.6937679648399353
    2. ' of' → logprob: -1.81876802444458
    3. ' "' → logprob: -2.06876802444458
    4. '```' → logprob: -3.56876802444458
    5. ' ' → logprob: -3.69376802444458
    6. ' is' → logprob: -3.81876802444458
    7. 'Vacation' → logprob: -3.94376802444458
    8. ' Vacation' → logprob: -4.06876802444458
    9. ''s' → logprob: -4.31876802444458
    10. '202' → logprob: -4.44376802444458

Token 8: ' K' (ID: 658)
  Prédit: 'Code'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Code' → logprob: -0.4085956811904907
    2. 'code' → logprob: -1.6585956811904907
    3. ''' → logprob: -2.408595561981201
    4. '69' → logprob: -4.033595561981201
    5. 'Love' → logprob: -4.283595561981201
    6. '```' → logprob: -5.033595561981201
    7. '`' → logprob: -5.283595561981201
    8. ' code' → logprob: -6.533595561981201
    9. '#' → logprob: -6.658595561981201
    10. 'Life' → logprob: -7.408595561981201

Token 9: 'MC' (ID: 15190)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.9523539543151855
    2. '```' → logprob: -1.3273539543151855
    3. 'Code' → logprob: -1.5773539543151855
    4. ''' → logprob: -2.8273539543151855
    5. 's' → logprob: -3.7023539543151855
    6. 'ed' → logprob: -5.0773539543151855
    7. 'code' → logprob: -5.3273539543151855
    8. 'u' → logprob: -5.5773539543151855
    9. 'a' → logprob: -5.7023539543151855
    10. 'C' → logprob: -5.8273539543151855

Token 10: '"
' (ID: 1092)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '"' → logprob: -0.02524842880666256
    2. '"""' → logprob: -4.5252485275268555
    3. '#' → logprob: -5.5252485275268555
    4. 's' → logprob: -5.7752485275268555
    5. '"#' → logprob: -6.5252485275268555
    6. '```' → logprob: -7.0252485275268555
    7. ''' → logprob: -7.0252485275268555
    8. ' "' → logprob: -7.5252485275268555
    9. '`' → logprob: -7.6502485275268555
    10. '":' → logprob: -8.025248527526855

Token 11: '#' (ID: 2)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.1919330507516861
    2. 'def' → logprob: -2.5669331550598145
    3. '```' → logprob: -2.9419331550598145
    4. '#' → logprob: -3.6919331550598145
    5. ' :' → logprob: -5.6919331550598145
    6. '
' → logprob: -5.8169331550598145
    7. 's' → logprob: -6.0669331550598145
    8. '\n' → logprob: -6.0669331550598145
    9. 'n' → logprob: -6.4419331550598145
    10. '\' → logprob: -6.6919331550598145

Token 12: ' Le' (ID: 2018)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.005395849701017141
    2. ' #' → logprob: -6.130395889282227
    3. '#' → logprob: -6.505395889282227
    4. 'def' → logprob: -8.255395889282227
    5. ' 
' → logprob: -8.505395889282227
    6. ' def' → logprob: -8.755395889282227
    7. ' """' → logprob: -9.005395889282227
    8. ' ```' → logprob: -9.005395889282227
    9. ' )' → logprob: -9.130395889282227
    10. '  
' → logprob: -9.255395889282227

Token 13: ' but' (ID: 889)
  Prédit: ' code'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' code' → logprob: -1.7589141130447388
    2. ' ' → logprob: -1.8839141130447388
    3. '   ' → logprob: -2.258913993835449
    4. 's' → logprob: -2.258913993835449
    5. 'pro' → logprob: -2.633913993835449
    6. '  ' → logprob: -2.633913993835449
    7. ' #' → logprob: -3.008913993835449
    8. ' `' → logprob: -3.758913993835449
    9. '#' → logprob: -3.883913993835449
    10. 'code' → logprob: -4.008913993835449

Token 14: ' est' (ID: 893)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.24265863001346588
    2. ' est' → logprob: -1.7426586151123047
    3. ' is' → logprob: -4.117658615112305
    4. ' de' → logprob: -4.742658615112305
    5. ':' → logprob: -5.117658615112305
    6. ' ' → logprob: -6.117658615112305
    7. '#' → logprob: -6.492658615112305
    8. '=' → logprob: -6.742658615112305
    9. ' :' → logprob: -7.242658615112305
    10. 's' → logprob: -7.242658615112305

Token 15: ' de' (ID: 334)
  Prédit: ' de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.03327194228768349
    2. ' d' → logprob: -3.5332720279693604
    3. ' ' → logprob: -6.158271789550781
    4. 'd' → logprob: -8.408271789550781
    5. 'de' → logprob: -8.408271789550781
    6. '  ' → logprob: -8.533271789550781
    7. '#' → logprob: -8.533271789550781
    8. ' to' → logprob: -9.158271789550781
    9. ':' → logprob: -9.533271789550781
    10. '   ' → logprob: -9.658271789550781

Token 16: ' calcul' (ID: 7559)
  Prédit: 'tr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tr' → logprob: -1.2156953811645508
    2. ' calcul' → logprob: -1.3406953811645508
    3. 'calcul' → logprob: -1.7156953811645508
    4. ' trouver' → logprob: -2.090695381164551
    5. 'rés' → logprob: -2.965695381164551
    6. ' résoudre' → logprob: -3.590695381164551
    7. 'ré' → logprob: -5.090695381164551
    8. ' déterminer' → logprob: -5.215695381164551
    9. ' compter' → logprob: -5.215695381164551
    10. 'r' → logprob: -5.590695381164551

Token 17: 'er' (ID: 259)
  Prédit: 'er'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'er' → logprob: -0.004694156814366579
    2. '#' → logprob: -6.379693984985352
    3. 's' → logprob: -7.129693984985352
    4. 'r' → logprob: -7.629693984985352
    5. '_' → logprob: -8.004693984985352
    6. 'ating' → logprob: -8.254693984985352
    7. 'a' → logprob: -8.379693984985352
    8. 'atrice' → logprob: -8.629693984985352
    9. 'ate' → logprob: -8.754693984985352
    10. ' ' → logprob: -8.879693984985352

Token 18: ' le' (ID: 505)
  Prédit: ' la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' la' → logprob: -0.19356346130371094
    2. ' ' → logprob: -2.193563461303711
    3. ' l' → logprob: -3.068563461303711
    4. ' le' → logprob: -4.568563461303711
    5. ',' → logprob: -6.193563461303711
    6. '  ' → logprob: -6.318563461303711
    7. 's' → logprob: -6.818563461303711
    8. ' les' → logprob: -7.443563461303711
    9. 'l' → logprob: -7.943563461303711
    10. 'la' → logprob: -8.068563461303711

Token 19: ' nombre' (ID: 9733)
  Prédit: ' nombre'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' nombre' → logprob: -0.1591644138097763
    2. 's' → logprob: -2.9091644287109375
    3. 'nombre' → logprob: -3.0341644287109375
    4. ' maximum' → logprob: -4.0341644287109375
    5. ' ' → logprob: -5.4091644287109375
    6. ' somme' → logprob: -5.9091644287109375
    7. ' max' → logprob: -5.9091644287109375
    8. ' nombres' → logprob: -6.2841644287109375
    9. 'maximum' → logprob: -6.4091644287109375
    10. ' total' → logprob: -6.7216644287109375

Token 20: ' minimal' (ID: 19957)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.5705370903015137
    2. ' de' → logprob: -1.0705370903015137
    3. ' d' → logprob: -2.6955370903015137
    4. '  ' → logprob: -4.445537090301514
    5. '_' → logprob: -5.320537090301514
    6. 's' → logprob: -6.445537090301514
    7. '<|end|>' → logprob: -6.570537090301514
    8. 'de' → logprob: -6.695537090301514
    9. '_de' → logprob: -6.945537090301514
    10. ' total' → logprob: -7.320537090301514

Token 21: ' de' (ID: 334)
  Prédit: ' d'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' d' → logprob: -1.2311105728149414
    2. ' de' → logprob: -1.2311105728149414
    3. ' ' → logprob: -1.4811105728149414
    4. '<|end|>' → logprob: -1.8561105728149414
    5. '<|end|>' → logprob: -4.481110572814941
    6. '  ' → logprob: -4.606110572814941
    7. 'd' → logprob: -5.231110572814941
    8. 'de' → logprob: -5.731110572814941
    9. ' des' → logprob: -7.231110572814941
    10. '#' → logprob: -7.731110572814941

Token 22: ' pièces' (ID: 49165)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -1.375162124633789
    2. 'jours' → logprob: -2.250162124633789
    3. ' jours' → logprob: -2.875162124633789
    4. ' ' → logprob: -3.000162124633789
    5. ' pas' → logprob: -3.250162124633789
    6. 'k' → logprob: -3.312662124633789
    7. ' déplacements' → logprob: -3.687662124633789
    8. ' k' → logprob: -3.687662124633789
    9. 'm' → logprob: -3.875162124633789
    10. ' changements' → logprob: -3.875162124633789

Token 23: '/b' (ID: 7611)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.0021363403648138046
    2. ' nécessaires' → logprob: -7.25213623046875
    3. 's' → logprob: -8.00213623046875
    4. '.' → logprob: -8.75213623046875
    5. ' de' → logprob: -8.87713623046875
    6. ' ,' → logprob: -8.87713623046875
    7. ',' → logprob: -9.25213623046875
    8. ' s' → logprob: -9.62713623046875
    9. '  ' → logprob: -9.75213623046875
    10. ' d' → logprob: -9.87713623046875

Token 24: 'il' (ID: 311)
  Prédit: 'il'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'il' → logprob: -1.2180112600326538
    2. 'illes' → logprob: -1.2180112600326538
    3. 'i' → logprob: -1.7180112600326538
    4. 'o' → logprob: -3.2180113792419434
    5. 'anc' → logprob: -3.3430113792419434
    6. '```' → logprob: -3.8430113792419434
    7. 'anque' → logprob: -3.8430113792419434
    8. 'ills' → logprob: -3.9680113792419434
    9. '#' → logprob: -4.093011379241943
    10. 'ill' → logprob: -4.343011379241943

Token 25: 'lets' (ID: 12222)
  Prédit: 'lets'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lets' → logprob: -0.002066041575744748
    2. 'let' → logprob: -6.752066135406494
    3. '#' → logprob: -7.627066135406494
    4. 'l' → logprob: -9.002065658569336
    5. 'le' → logprob: -9.502065658569336
    6. '```' → logprob: -9.502065658569336
    7. 'ets' → logprob: -9.877065658569336
    8. 'letes' → logprob: -11.252065658569336
    9. '``' → logprob: -11.377065658569336
    10. '

' → logprob: -11.627065658569336

Token 26: ' (' (ID: 350)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.009328060783445835
    2. 's' → logprob: -6.1343278884887695
    3. ' :' → logprob: -6.5093278884887695
    4. ' 

' → logprob: -6.7593278884887695
    5. ' ,' → logprob: -6.8843278884887695
    6. ' 
' → logprob: -7.2593278884887695
    7. '.' → logprob: -7.7593278884887695
    8. ' à' → logprob: -8.13432788848877
    9. ' s' → logprob: -8.50932788848877
    10. '_' → logprob: -8.50932788848877

Token 27: '100' (ID: 1353)
  Prédit: ' )'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' )' → logprob: -0.2491501271724701
    2. ' ' → logprob: -2.124150037765503
    3. ')' → logprob: -2.624150037765503
    4. ' nécessaires' → logprob: -3.624150037765503
    5. ' pour' → logprob: -7.749150276184082
    6. ' nécessaire' → logprob: -7.749150276184082
    7. ' à' → logprob: -8.124150276184082
    8. ' ' → logprob: -8.749150276184082
    9. ' necess' → logprob: -8.999150276184082
    10. ' utilisés' → logprob: -10.374150276184082

Token 28: '円' (ID: 13474)
  Prédit: ' ,'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ,' → logprob: -0.9037339687347412
    2. ',' → logprob: -1.0287339687347412
    3. ' )' → logprob: -1.7787339687347412
    4. ')' → logprob: -3.028733968734741
    5. ' ' → logprob: -5.27873420715332
    6. ' €' → logprob: -5.65373420715332
    7. 's' → logprob: -5.65373420715332
    8. '€' → logprob: -5.77873420715332
    9. '0' → logprob: -7.02873420715332
    10. ' euros' → logprob: -7.40373420715332

Token 29: '玉' (ID: 43678)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.29002463817596436
    2. ' )' → logprob: -1.5400246381759644
    3. '）' → logprob: -4.415024757385254
    4. ',' → logprob: -4.415024757385254
    5. '```' → logprob: -6.290024757385254
    6. ' ）' → logprob: -6.665024757385254
    7. 'を' → logprob: -6.790024757385254
    8. ' ' → logprob: -7.040024757385254
    9. ' ,' → logprob: -7.040024757385254
    10. ' を' → logprob: -7.165024757385254

Token 30: ',' (ID: 11)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.6137283444404602
    2. ',' → logprob: -1.2387282848358154
    3. ' )' → logprob: -2.1137282848358154
    4. 's' → logprob: -4.1137285232543945
    5. ' ,' → logprob: -4.6137285232543945
    6. '）' → logprob: -5.2387285232543945
    7. ' ' → logprob: -5.3637285232543945
    8. ' を' → logprob: -5.7387285232543945
    9. '、' → logprob: -6.2387285232543945
    10. 'を' → logprob: -6.8637285232543945

Token 31: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.039162762463092804
    2. '50' → logprob: -4.164162635803223
    3. '500' → logprob: -4.664162635803223
    4. '5' → logprob: -5.539162635803223
    5. '200' → logprob: -6.039162635803223
    6. '1' → logprob: -6.664162635803223
    7. '100' → logprob: -6.789162635803223
    8. '20' → logprob: -6.789162635803223
    9. ' ¥' → logprob: -7.164162635803223
    10. '```' → logprob: -7.539162635803223

Token 32: '500' (ID: 3234)
  Prédit: '50'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '50' → logprob: -0.6272045373916626
    2. ' ' → logprob: -1.6272045373916626
    3. '500' → logprob: -1.6272045373916626
    4. '5' → logprob: -3.377204418182373
    5. '10' → logprob: -4.127204418182373
    6. '100' → logprob: -5.252204418182373
    7. '1' → logprob: -5.502204418182373
    8. '200' → logprob: -5.502204418182373
    9. '```' → logprob: -5.627204418182373
    10. '20' → logprob: -7.127204418182373

Token 33: '円' (ID: 13474)
  Prédit: ' 円'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' 円' → logprob: -0.5147800445556641
    2. '円' → logprob: -1.139780044555664
    3. ' ' → logprob: -2.764780044555664
    4. ' )' → logprob: -4.889780044555664
    5. ' ,' → logprob: -6.014780044555664
    6. ',' → logprob: -6.264780044555664
    7. ' ¥' → logprob: -6.264780044555664
    8. ' ）' → logprob: -6.389780044555664
    9. ' yen' → logprob: -6.639780044555664
    10. ')' → logprob: -7.264780044555664

Token 34: '玉' (ID: 43678)
  Prédit: '玉'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '玉' → logprob: -0.031482402235269547
    2. ',' → logprob: -4.531482219696045
    3. '硬' → logprob: -4.781482219696045
    4. '札' → logprob: -5.781482219696045
    5. ' 玉' → logprob: -5.781482219696045
    6. ')' → logprob: -6.781482219696045
    7. '）' → logprob: -7.656482219696045
    8. '券' → logprob: -8.156482696533203
    9. ' ,' → logprob: -8.156482696533203
    10. '```' → logprob: -8.281482696533203

Token 35: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.08697114139795303
    2. ')' → logprob: -2.5869710445404053
    3. 's' → logprob: -5.836971282958984
    4. ' )' → logprob: -6.461971282958984
    5. ' ,' → logprob: -6.586971282958984
    6. '）' → logprob: -7.586971282958984
    7. ' ' → logprob: -8.086971282958984
    8. '，' → logprob: -8.211971282958984
    9. '、' → logprob: -8.336971282958984
    10. ' et' → logprob: -9.211971282958984

Token 36: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.15257064998149872
    2. '100' → logprob: -2.4025707244873047
    3. '1' → logprob: -3.2775707244873047
    4. '50' → logprob: -5.152570724487305
    5. '10' → logprob: -5.652570724487305
    6. '200' → logprob: -7.277570724487305
    7. '2' → logprob: -7.527570724487305
    8. '```' → logprob: -7.527570724487305
    9. ' #' → logprob: -7.652570724487305
    10. '5' → logprob: -7.777570724487305

Token 37: '100' (ID: 1353)
  Prédit: '100'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '100' → logprob: -0.46900415420532227
    2. '1' → logprob: -1.3440041542053223
    3. '10' → logprob: -2.4690041542053223
    4. ' ' → logprob: -4.344004154205322
    5. '50' → logprob: -4.969004154205322
    6. '5' → logprob: -5.594004154205322
    7. '```' → logprob: -6.219004154205322
    8. '千' → logprob: -7.844004154205322
    9. '500' → logprob: -8.156503677368164
    10. 'et' → logprob: -8.344003677368164

Token 38: '0' (ID: 15)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.9525496959686279
    2. ' 円' → logprob: -1.702549695968628
    3. '円' → logprob: -1.827549695968628
    4. ' )' → logprob: -2.202549695968628
    5. ' ' → logprob: -2.827549695968628
    6. ',' → logprob: -3.452549695968628
    7. '0' → logprob: -3.577549695968628
    8. '00' → logprob: -4.452549934387207
    9. ' ¥' → logprob: -5.327549934387207
    10. ' ）' → logprob: -5.702549934387207

Token 39: '円' (ID: 13474)
  Prédit: '円'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '円' → logprob: -0.19937214255332947
    2. ' 円' → logprob: -1.8243721723556519
    3. '札' → logprob: -5.449372291564941
    4. ' ' → logprob: -5.574372291564941
    5. ' yen' → logprob: -5.824372291564941
    6. ')' → logprob: -6.824372291564941
    7. ' )' → logprob: -6.949372291564941
    8. ' ¥' → logprob: -7.199372291564941
    9. ' billets' → logprob: -7.199372291564941
    10. ',' → logprob: -7.324372291564941

Token 40: '札' (ID: 131962)
  Prédit: '円'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '円' → logprob: -0.13600756227970123
    2. '札' → logprob: -2.38600754737854
    3. '紙' → logprob: -3.63600754737854
    4. '券' → logprob: -5.011007785797119
    5. ' 円' → logprob: -6.886007785797119
    6. ',' → logprob: -7.636007785797119
    7. ')' → logprob: -9.136007308959961
    8. '```' → logprob: -9.261007308959961
    9. 's' → logprob: -9.511007308959961
    10. '玉' → logprob: -10.261007308959961

Token 41: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.07595984637737274
    2. ',' → logprob: -3.2009599208831787
    3. '）' → logprob: -4.2009596824646
    4. 's' → logprob: -5.4509596824646
    5. 'を' → logprob: -5.4509596824646
    6. 'の' → logprob: -6.5759596824646
    7. '")' → logprob: -7.2009596824646
    8. '):' → logprob: -7.4509596824646
    9. ' )' → logprob: -7.5759596824646
    10. '¥' → logprob: -7.7009596824646

Token 42: '#' (ID: 2)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.9870967864990234
    2. 'd' → logprob: -1.8620967864990234
    3. ':' → logprob: -1.9870967864990234
    4. 'n' → logprob: -2.2370967864990234
    5. '#' → logprob: -2.8620967864990234
    6. 'def' → logprob: -3.3620967864990234
    7. '1' → logprob: -3.4870967864990234
    8. '```' → logprob: -3.8620967864990234
    9. 'import' → logprob: -4.737096786499023
    10. 's' → logprob: -4.737096786499023

Token 43: ' pour' (ID: 1930)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.039483681321144104
    2. ' ' → logprob: -3.6644837856292725
    3. 'def' → logprob: -5.414483547210693
    4. 'n' → logprob: -5.664483547210693
    5. 'c' → logprob: -6.789483547210693
    6. '#' → logprob: -7.039483547210693
    7. 'i' → logprob: -7.039483547210693
    8. '1' → logprob: -7.914483547210693
    9. 'import' → logprob: -8.039484024047852
    10. ' d' → logprob: -8.539484024047852

Token 44: ' rendre' (ID: 44629)
  Prédit: ' rendre'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' rendre' → logprob: -0.12033598124980927
    2. ' payer' → logprob: -2.6203360557556152
    3. 'r' → logprob: -4.245336055755615
    4. 'payer' → logprob: -4.620336055755615
    5. ' faire' → logprob: -5.870336055755615
    6. ' donner' → logprob: -5.995336055755615
    7. ' pouvoir' → logprob: -6.370336055755615
    8. ' pay' → logprob: -6.995336055755615
    9. ' r' → logprob: -6.995336055755615
    10. 'faire' → logprob: -7.120336055755615

Token 45: ' la' (ID: 557)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.22940102219581604
    2. ' une' → logprob: -2.729401111602783
    3. ' le' → logprob: -2.854401111602783
    4. ' la' → logprob: -3.729401111602783
    5. ' un' → logprob: -4.604401111602783
    6. 'le' → logprob: -4.979401111602783
    7. ' ' → logprob: -5.229401111602783
    8. ' rendu' → logprob: -5.354401111602783
    9. ' exact' → logprob: -5.479401111602783
    10. ' monnaie' → logprob: -5.604401111602783

Token 46: ' monnaie' (ID: 168963)
  Prédit: ' monnaie'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' monnaie' → logprob: -0.03376118838787079
    2. ' somme' → logprob: -4.158761024475098
    3. 'mon' → logprob: -5.033761024475098
    4. '```' → logprob: -5.658761024475098
    5. 'mont' → logprob: -6.158761024475098
    6. 's' → logprob: -6.783761024475098
    7. ' ' → logprob: -6.908761024475098
    8. ' montant' → logprob: -7.471261024475098
    9. '   ' → logprob: -7.971261024475098
    10. 'お' → logprob: -8.471261024475098

Token 47: ' à' (ID: 1221)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.9703111052513123
    2. 'def' → logprob: -1.345311164855957
    3. ':' → logprob: -1.845311164855957
    4. 'n' → logprob: -2.345311164855957
    5. '#' → logprob: -3.095311164855957
    6. ' ' → logprob: -3.970311164855957
    7. '```' → logprob: -4.470311164855957
    8. 'import' → logprob: -4.970311164855957
    9. '.' → logprob: -5.220311164855957
    10. 's' → logprob: -5.720311164855957

Token 48: ' partir' (ID: 12100)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.8770189881324768
    2. ' un' → logprob: -1.877018928527832
    3. ' payer' → logprob: -2.252018928527832
    4. 'payer' → logprob: -2.252018928527832
    5. 'un' → logprob: -2.752018928527832
    6. ' une' → logprob: -3.002018928527832
    7. ' l' → logprob: -3.502018928527832
    8. 'une' → logprob: -3.627018928527832
    9. ' rendre' → logprob: -3.877018928527832
    10. ' ' → logprob: -5.502018928527832

Token 49: ' du' (ID: 1462)
  Prédit: ' d'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' d' → logprob: -0.013449612073600292
    2. ' de' → logprob: -4.763449668884277
    3. 'd' → logprob: -5.888449668884277
    4. ' du' → logprob: -6.263449668884277
    5. ' ' → logprob: -9.513449668884277
    6. 'de' → logprob: -10.388449668884277
    7. 'du' → logprob: -11.513449668884277
    8. ' des' → logprob: -11.513449668884277
    9. '#' → logprob: -11.763449668884277
    10. ' ' → logprob: -12.263449668884277

Token 50: ' montant' (ID: 72364)
  Prédit: ' montant'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' montant' → logprob: -0.11686098575592041
    2. 'mont' → logprob: -2.491860866546631
    3. ' prix' → logprob: -4.241860866546631
    4. 'prix' → logprob: -5.116860866546631
    5. ' coût' → logprob: -6.491860866546631
    6. ' mont' → logprob: -6.491860866546631
    7. ' paiement' → logprob: -6.866860866546631
    8. ' total' → logprob: -8.304361343383789
    9. ' ticket' → logprob: -8.679361343383789
    10. 'total' → logprob: -8.741861343383789

Token 51: ' payé' (ID: 196567)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.21913796663284302
    2. ' ' → logprob: -2.3441379070281982
    3. ' :' → logprob: -2.9691379070281982
    4. '#' → logprob: -4.469138145446777
    5. ',' → logprob: -4.719138145446777
    6. 'def' → logprob: -4.844138145446777
    7. 'd' → logprob: -5.344138145446777
    8. '_' → logprob: -5.594138145446777
    9. '```' → logprob: -5.594138145446777
    10. 'n' → logprob: -6.344138145446777

Token 52: ' moins' (ID: 15924)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.20232245326042175
    2. ':' → logprob: -2.702322483062744
    3. '#' → logprob: -3.327322483062744
    4. ' ' → logprob: -3.827322483062744
    5. 'def' → logprob: -3.827322483062744
    6. 'i' → logprob: -4.452322483062744
    7. '```' → logprob: -5.327322483062744
    8. 'n' → logprob: -5.327322483062744
    9. '_' → logprob: -5.827322483062744
    10. 'p' → logprob: -6.327322483062744

Token 53: ' le' (ID: 505)
  Prédit: 'le'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'le' → logprob: -0.6253236532211304
    2. ' le' → logprob: -1.0003236532211304
    3. ' celui' → logprob: -2.87532377243042
    4. 'l' → logprob: -4.37532377243042
    5. ' ' → logprob: -5.12532377243042
    6. ' ' → logprob: -5.25032377243042
    7. ' la' → logprob: -5.37532377243042
    8. ' l' → logprob: -5.75032377243042
    9. ' du' → logprob: -6.37532377243042
    10. 'cel' → logprob: -6.50032377243042

Token 54: ' prix' (ID: 18771)
  Prédit: ' montant'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' montant' → logprob: -0.1883312314748764
    2. ' prix' → logprob: -2.313331127166748
    3. 'mont' → logprob: -3.063331127166748
    4. 'prix' → logprob: -4.313331127166748
    5. ' ' → logprob: -4.813331127166748
    6. ' mont' → logprob: -6.688331127166748
    7. ' ' → logprob: -6.938331127166748
    8. ' total' → logprob: -8.063331604003906
    9. ' coût' → logprob: -8.438331604003906
    10. '  ' → logprob: -8.563331604003906

Token 55: ' de' (ID: 334)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.4160502254962921
    2. ' ' → logprob: -1.7910501956939697
    3. ':' → logprob: -3.1660501956939697
    4. 'def' → logprob: -3.2910501956939697
    5. '```' → logprob: -3.4160501956939697
    6. ' :' → logprob: -4.541050434112549
    7. 'p' → logprob: -4.916050434112549
    8. 'm' → logprob: -4.916050434112549
    9. 'n' → logprob: -5.041050434112549
    10. '#' → logprob: -5.291050434112549

Token 56: ' l' (ID: 305)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.6446415781974792
    2. ' l' → logprob: -0.7696415781974792
    3. ' vente' → logprob: -5.769641399383545
    4. ' la' → logprob: -6.269641399383545
    5. 'la' → logprob: -6.269641399383545
    6. 'vente' → logprob: -6.644641399383545
    7. 'achat' → logprob: -6.769641399383545
    8. ' ' → logprob: -7.019641399383545
    9. 'article' → logprob: -8.644641876220703
    10. '	l' → logprob: -8.644641876220703

Token 57: ''article' (ID: 83270)
  Prédit: ''article'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''article' → logprob: -0.46516066789627075
    2. ''' → logprob: -1.590160608291626
    3. 'a' → logprob: -2.090160608291626
    4. ''achat' → logprob: -3.715160608291626
    5. ''objet' → logprob: -4.465160846710205
    6. 'e' → logprob: -6.090160846710205
    7. 'article' → logprob: -6.340160846710205
    8. ' article' → logprob: -7.215160846710205
    9. '’article' → logprob: -7.340160846710205
    10. ''a' → logprob: -7.340160846710205

Token 58: '.

' (ID: 364)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.253886878490448
    2. ' ' → logprob: -2.0038869380950928
    3. ':' → logprob: -3.7538869380950928
    4. 'def' → logprob: -3.8788869380950928
    5. '#' → logprob: -4.378886699676514
    6. 'n' → logprob: -5.003886699676514
    7. '```' → logprob: -5.378886699676514
    8. 'i' → logprob: -5.628886699676514
    9. '_' → logprob: -5.628886699676514
    10. ' d' → logprob: -6.253886699676514

Token 59: 'def' (ID: 1314)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.03311488404870033
    2. ' ' → logprob: -4.783114910125732
    3. 'def' → logprob: -4.783114910125732
    4. 'p' → logprob: -4.908114910125732
    5. '```' → logprob: -6.408114910125732
    6. 'n' → logprob: -6.408114910125732
    7. 'i' → logprob: -6.783114910125732
    8. '#' → logprob: -6.908114910125732
    9. 'm' → logprob: -7.533114910125732
    10. 'c' → logprob: -7.908114910125732

Token 60: ' main' (ID: 2758)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.23095165193080902
    2. ' rendre' → logprob: -1.8559516668319702
    3. ' make' → logprob: -3.6059515476226807
    4. ' calculate' → logprob: -4.85595178604126
    5. ' render' → logprob: -5.35595178604126
    6. ' calcul' → logprob: -5.35595178604126
    7. ' rendu' → logprob: -5.60595178604126
    8. ' ' → logprob: -7.48095178604126
    9. ' making' → logprob: -8.480951309204102
    10. ' get' → logprob: -8.480951309204102

Token 61: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.006650242023169994
    2. '(' → logprob: -5.256650447845459
    3. ' ():' → logprob: -6.756650447845459
    4. '()' → logprob: -8.3816499710083
    5. '(:' → logprob: -12.1316499710083
    6. ':' → logprob: -12.3816499710083
    7. ' (' → logprob: -12.5066499710083
    8. '():
' → logprob: -12.6316499710083
    9. ' ()' → logprob: -12.7566499710083
    10. '(":' → logprob: -13.3816499710083

Token 62: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.36975279450416565
    2. ' ' → logprob: -1.9947527647018433
    3. '    ' → logprob: -2.244752883911133
    4. ' 
' → logprob: -4.369752883911133
    5. '\' → logprob: -4.494752883911133
    6. ' )' → logprob: -4.744752883911133
    7. 'n' → logprob: -5.244752883911133
    8. '    
' → logprob: -5.369752883911133
    9. ' indentation' → logprob: -5.869752883911133
    10. ')' → logprob: -5.994752883911133

Token 63: ' while' (ID: 2049)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1981397122144699
    2. ' amount' → logprob: -2.9481396675109863
    3. ' ' → logprob: -3.1981396675109863
    4. '    ' → logprob: -3.9481396675109863
    5. ' n' → logprob: -4.698139667510986
    6. 'p' → logprob: -4.698139667510986
    7. ' montant' → logprob: -4.948139667510986
    8. ' #' → logprob: -5.073139667510986
    9. 'n' → logprob: -5.198139667510986
    10. 'amount' → logprob: -5.448139667510986

Token 64: ' True' (ID: 6432)
  Prédit: ' True'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' True' → logprob: -0.0002646735229063779
    2. 'True' → logprob: -8.250265121459961
    3. ' ' → logprob: -13.125265121459961
    4. '(True' → logprob: -13.875265121459961
    5. ' not' → logprob: -15.625265121459961
    6. ' ' → logprob: -15.875265121459961
    7. ' true' → logprob: -16.37526512145996
    8. '=True' → logprob: -16.75026512145996
    9. ' input' → logprob: -16.87526512145996
    10. '  ' → logprob: -17.87526512145996

Token 65: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0007123126997612417
    2. '():' → logprob: -7.6257123947143555
    3. ' :' → logprob: -8.750712394714355
    4. '   ' → logprob: -10.500712394714355
    5. '):' → logprob: -10.875712394714355
    6. ':
' → logprob: -11.500712394714355
    7. '：' → logprob: -13.250712394714355
    8. '(' → logprob: -13.500712394714355
    9. '       ' → logprob: -13.500712394714355
    10. ':**' → logprob: -13.500712394714355

Token 66: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.005869301967322826
    2. '    ' → logprob: -5.880869388580322
    3. '   ' → logprob: -6.130869388580322
    4. ' ' → logprob: -7.880869388580322
    5. '        
' → logprob: -9.130868911743164
    6. '        ' → logprob: -9.255868911743164
    7. '      ' → logprob: -10.005868911743164
    8. ' try' → logprob: -10.130868911743164
    9. '  ' → logprob: -10.255868911743164
    10. '     ' → logprob: -10.755868911743164

Token 67: ' #' (ID: 1069)
  Prédit: ' try'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' try' → logprob: -0.9344198703765869
    2. 'try' → logprob: -1.184419870376587
    3. ' line' → logprob: -1.684419870376587
    4. '   ' → logprob: -3.559419870376587
    5. 'prix' → logprob: -4.059419631958008
    6. 'line' → logprob: -4.559419631958008
    7. 'input' → logprob: -4.684419631958008
    8. 'amount' → logprob: -4.934419631958008
    9. '       ' → logprob: -5.184419631958008
    10. ' montant' → logprob: -5.184419631958008

Token 68: ' Lecture' (ID: 106534)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5551671981811523
    2. ' try' → logprob: -1.8051671981811523
    3. 'try' → logprob: -2.1801671981811523
    4. ' line' → logprob: -2.8051671981811523
    5. 'prix' → logprob: -3.9301671981811523
    6. ' montant' → logprob: -4.055167198181152
    7. 'amount' → logprob: -4.305167198181152
    8. '       ' → logprob: -4.805167198181152
    9. 'line' → logprob: -5.055167198181152
    10. ' amount' → logprob: -5.430167198181152

Token 69: ' des' (ID: 731)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6441634297370911
    2. '   ' → logprob: -1.2691633701324463
    3. '    ' → logprob: -2.7691633701324463
    4. ' des' → logprob: -3.1441633701324463
    5. '<|end|>' → logprob: -3.6441633701324463
    6. '        ' → logprob: -4.144163608551025
    7. ' ' → logprob: -5.144163608551025
    8. ' de' → logprob: -5.644163608551025
    9. 'input' → logprob: -5.769163608551025
    10. '  ' → logprob: -5.769163608551025

Token 70: ' valeurs' (ID: 73668)
  Prédit: ' mont'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' mont' → logprob: -1.0396686792373657
    2. ' données' → logprob: -1.4146686792373657
    3. 'mont' → logprob: -2.414668560028076
    4. ' montant' → logprob: -2.789668560028076
    5. ' valeurs' → logprob: -2.914668560028076
    6. ' entr' → logprob: -3.664668560028076
    7. '   ' → logprob: -3.789668560028076
    8. ' inputs' → logprob: -3.914668560028076
    9. ' lignes' → logprob: -3.914668560028076
    10. ' prix' → logprob: -4.289668560028076

Token 71: ' A' (ID: 355)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.46832844614982605
    2. '    ' → logprob: -1.4683284759521484
    3. '        ' → logprob: -2.4683284759521484
    4. '   ' → logprob: -3.5933284759521484
    5. '        
' → logprob: -5.218328475952148
    6. ' ' → logprob: -5.718328475952148
    7. '      ' → logprob: -5.718328475952148
    8. '  ' → logprob: -5.843328475952148
    9. 'input' → logprob: -6.468328475952148
    10. 'n' → logprob: -6.593328475952148

Token 72: ' (' (ID: 350)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.07804567366838455
    2. ' =' → logprob: -2.828045606613159
    3. ' ,' → logprob: -4.203045845031738
    4. '   ' → logprob: -7.953045845031738
    5. ' et' → logprob: -8.828045845031738
    6. ' ' → logprob: -9.453045845031738
    7. '=' → logprob: -9.578045845031738
    8. ',p' → logprob: -9.578045845031738
    9. ',B' → logprob: -10.578045845031738
    10. ',b' → logprob: -10.703045845031738

Token 73: 'prix' (ID: 152711)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.1685256063938141
    2. 'prix' → logprob: -2.9185256958007812
    3. 'p' → logprob: -3.9185256958007812
    4. ')' → logprob: -4.043525695800781
    5. '),' → logprob: -4.543525695800781
    6. 'pay' → logprob: -4.543525695800781
    7. ' ,' → logprob: -4.543525695800781
    8. 'price' → logprob: -5.043525695800781
    9. 'P' → logprob: -5.793525695800781
    10. 'pai' → logprob: -5.918525695800781

Token 74: ' du' (ID: 1462)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -1.0057982206344604
    2. '),' → logprob: -1.0057982206344604
    3. ')' → logprob: -1.5057982206344604
    4. 'pay' → logprob: -4.50579833984375
    5. 'et' → logprob: -4.63079833984375
    6. ' payé' → logprob: -5.38079833984375
    7. ' ),' → logprob: -5.50579833984375
    8. ' et' → logprob: -5.63079833984375
    9. ' )' → logprob: -6.38079833984375
    10. 'ach' → logprob: -6.63079833984375

Token 75: ' CD' (ID: 12178)
  Prédit: 'article'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'article' → logprob: -0.4119100272655487
    2. ' article' → logprob: -1.411910057067871
    3. ' produit' → logprob: -4.036910057067871
    4. ' ' → logprob: -4.286910057067871
    5. 'produ' → logprob: -4.411910057067871
    6. ')' → logprob: -4.536910057067871
    7. 'l' → logprob: -4.786910057067871
    8. 'bien' → logprob: -5.786910057067871
    9. 'objet' → logprob: -5.911910057067871
    10. '   ' → logprob: -5.911910057067871

Token 76: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.9411190748214722
    2. '),' → logprob: -1.1911190748214722
    3. ' ),' → logprob: -2.3161191940307617
    4. ',' → logprob: -2.3161191940307617
    5. ' )' → logprob: -2.3161191940307617
    6. ' et' → logprob: -4.941119194030762
    7. ' ,' → logprob: -6.816119194030762
    8. ' payé' → logprob: -8.441119194030762
    9. ' acheté' → logprob: -8.441119194030762
    10. ' =' → logprob: -8.566119194030762

Token 77: ' et' (ID: 859)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.03983393684029579
    2. ' ,' → logprob: -3.5398340225219727
    3. '       ' → logprob: -5.539834022521973
    4. ' et' → logprob: -5.664834022521973
    5. ' =' → logprob: -7.039834022521973
    6. ' and' → logprob: -8.039834022521973
    7. 'et' → logprob: -8.164834022521973
    8. ')' → logprob: -8.164834022521973
    9. '=' → logprob: -8.664834022521973
    10. '        ' → logprob: -8.789834022521973

Token 78: ' B' (ID: 418)
  Prédit: 'P'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'P' → logprob: -0.7180513143539429
    2. ' P' → logprob: -1.2180513143539429
    3. 'B' → logprob: -2.0930514335632324
    4. ' B' → logprob: -3.0930514335632324
    5. 'M' → logprob: -4.093051433563232
    6. ' M' → logprob: -4.343051433563232
    7. 'N' → logprob: -5.218051433563232
    8. ' N' → logprob: -5.843051433563232
    9. ' ' → logprob: -6.218051433563232
    10. 'C' → logprob: -6.968051433563232

Token 79: ' (' (ID: 350)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.18999451398849487
    2. ' =' → logprob: -1.9399945735931396
    3. ' (' → logprob: -4.0649943351745605
    4. ' ,' → logprob: -5.0649943351745605
    5. '=' → logprob: -5.9399943351745605
    6. '    ' → logprob: -7.1899943351745605
    7. '(' → logprob: -7.3149943351745605
    8. ' ' → logprob: -7.8149943351745605
    9. '   ' → logprob: -7.9399943351745605
    10. '  ' → logprob: -8.439994812011719

Token 80: 'mont' (ID: 27939)
  Prédit: 'pay'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pay' → logprob: -1.2485684156417847
    2. ' payé' → logprob: -1.9985684156417847
    3. ' le' → logprob: -2.248568534851074
    4. ' paiement' → logprob: -2.373568534851074
    5. ' montant' → logprob: -2.623568534851074
    6. 'pai' → logprob: -2.748568534851074
    7. ' pay' → logprob: -2.873568534851074
    8. 'le' → logprob: -2.998568534851074
    9. 'mont' → logprob: -3.248568534851074
    10. 'prix' → logprob: -3.998568534851074

Token 81: 'ant' (ID: 493)
  Prédit: 'ant'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ant' → logprob: -0.0012730928137898445
    2. 'é' → logprob: -6.751273155212402
    3. 'ants' → logprob: -9.751273155212402
    4. 'ée' → logprob: -11.626273155212402
    5. ')' → logprob: -12.251273155212402
    6. 'antd' → logprob: -12.376273155212402
    7. '```' → logprob: -12.876273155212402
    8. '=' → logprob: -12.876273155212402
    9. '   ' → logprob: -13.126273155212402
    10. ' payé' → logprob: -13.126273155212402

Token 82: ' payé' (ID: 196567)
  Prédit: ' payé'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' payé' → logprob: -0.5105259418487549
    2. 'pay' → logprob: -1.0105259418487549
    3. ' pay' → logprob: -3.635525941848755
    4. ' vers' → logprob: -6.010525703430176
    5. ' donné' → logprob: -6.760525703430176
    6. '_pay' → logprob: -7.135525703430176
    7. '   ' → logprob: -7.135525703430176
    8. 'p' → logprob: -7.135525703430176
    9. 'pai' → logprob: -7.135525703430176
    10. 'payer' → logprob: -7.885525703430176

Token 83: ')
' (ID: 446)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.05075099691748619
    2. ')' → logprob: -3.175750970840454
    3. ' ):' → logprob: -5.175751209259033
    4. ' )' → logprob: -7.050751209259033
    5. ',' → logprob: -7.675751209259033
    6. '):
' → logprob: -8.425750732421875
    7. '   ' → logprob: -8.925750732421875
    8. ' reçu' → logprob: -9.675750732421875
    9. '),' → logprob: -10.050750732421875
    10. ' ' → logprob: -10.050750732421875

Token 84: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.13089847564697266
    2. '   ' → logprob: -2.5058984756469727
    3. '    ' → logprob: -4.380898475646973
    4. ',' → logprob: -4.630898475646973
    5. ' =' → logprob: -5.005898475646973
    6. '      ' → logprob: -5.880898475646973
    7. ' ,' → logprob: -6.130898475646973
    8. ' try' → logprob: -6.630898475646973
    9. ' ' → logprob: -7.130898475646973
    10. ' line' → logprob: -7.255898475646973

Token 85: ' A' (ID: 355)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.21170258522033691
    2. 'A' (adapté à ' A') → logprob: -2.711702585220337
    3. ' A' → logprob: -3.586702585220337
    4. ' try' → logprob: -3.586702585220337
    5. ' line' → logprob: -3.711702585220337
    6. 'try' → logprob: -4.336702346801758
    7. '       ' → logprob: -4.461702346801758
    8. '    ' → logprob: -5.461702346801758
    9. 'line' → logprob: -5.461702346801758
    10. 'a' → logprob: -5.586702346801758

Token 86: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0006880098371766508
    2. ',B' → logprob: -7.375688076019287
    3. ' ,' → logprob: -9.750687599182129
    4. ',b' → logprob: -13.375687599182129
    5. ',input' → logprob: -14.625687599182129
    6. 'B' → logprob: -15.250687599182129
    7. ',A' → logprob: -15.750687599182129
    8. ',s' → logprob: -16.375688552856445
    9. '，' → logprob: -16.375688552856445
    10. '_,' → logprob: -16.625688552856445

Token 87: ' B' (ID: 418)
  Prédit: ' B'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' B' → logprob: -0.03506798297166824
    2. 'B' → logprob: -3.5350680351257324
    3. ' ' → logprob: -5.285068035125732
    4. '  ' → logprob: -9.035067558288574
    5. '<|end|>' → logprob: -9.785067558288574
    6. '    ' → logprob: -10.535067558288574
    7. ' ' → logprob: -10.910067558288574
    8. ')' → logprob: -12.785067558288574
    9. '<|end|>' → logprob: -12.910067558288574
    10. '     ' → logprob: -13.160067558288574

Token 88: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.01817312277853489
    2. '=' → logprob: -4.0181732177734375
    3. '=input' → logprob: -10.768173217773438
    4. ')' → logprob: -14.143173217773438
    5. ' ' → logprob: -14.768173217773438
    6. '=int' → logprob: -15.143173217773438
    7. 'input' → logprob: -15.893173217773438
    8. '＝' → logprob: -16.143173217773438
    9. ',' → logprob: -16.393173217773438
    10. '    ' → logprob: -16.518173217773438

Token 89: ' map' (ID: 4014)
  Prédit: ' map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' map' → logprob: -0.002222341252490878
    2. 'map' → logprob: -6.252222537994385
    3. ' input' → logprob: -8.627222061157227
    4. ' list' → logprob: -9.627222061157227
    5. ' ' → logprob: -10.377222061157227
    6. '	map' → logprob: -11.627222061157227
    7. 'input' → logprob: -13.002222061157227
    8. ' [' → logprob: -13.377222061157227
    9. '(map' → logprob: -13.752222061157227
    10. ' ' → logprob: -13.877222061157227

Token 90: '(int' (ID: 2742)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.474700391292572
    2. '(int' → logprob: -0.974700391292572
    3. '(input' → logprob: -7.974700450897217
    4. '(str' → logprob: -9.224699974060059
    5. '(lambda' → logprob: -9.349699974060059
    6. '(
' → logprob: -9.849699974060059
    7. ' (' → logprob: -11.599699974060059
    8. '(list' → logprob: -11.724699974060059
    9. '<int' → logprob: -12.099699974060059
    10. '(in' → logprob: -12.474699974060059

Token 91: ',' (ID: 11)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.18283194303512573
    2. ',input' → logprob: -1.9328320026397705
    3. ',' → logprob: -4.432831764221191
    4. 'input' → logprob: -5.057831764221191
    5. '(' → logprob: -5.932831764221191
    6. ')' → logprob: -7.307831764221191
    7. ' input' → logprob: -7.557831764221191
    8. '=input' → logprob: -8.807831764221191
    9. ')(' → logprob: -9.807831764221191
    10. ' (' → logprob: -11.182831764221191

Token 92: ' input' (ID: 3422)
  Prédit: ' input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.17981404066085815
    2. 'input' → logprob: -1.804814100265503
    3. '(input' → logprob: -10.679814338684082
    4. ',input' → logprob: -10.929814338684082
    5. ')' → logprob: -11.179814338684082
    6. ' ' → logprob: -12.429814338684082
    7. '	input' → logprob: -12.429814338684082
    8. '=input' → logprob: -13.179814338684082
    9. ' )' → logprob: -13.179814338684082
    10. '   ' → logprob: -14.179814338684082

Token 93: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -7.600714161526412e-05
    2. '()' → logprob: -9.500076293945312
    3. '())' → logprob: -14.125076293945312
    4. ' ().' → logprob: -15.500076293945312
    5. ')' → logprob: -16.625076293945312
    6. '(' → logprob: -17.000076293945312
    7. '("").' → logprob: -17.750076293945312
    8. '()
' → logprob: -18.250076293945312
    9. '('').' → logprob: -18.250076293945312
    10. '()))' → logprob: -18.250076293945312

Token 94: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.005339539609849453
    2. 'strip' → logprob: -5.255339622497559
    3. 'rstrip' → logprob: -9.255339622497559
    4. 'spl' → logprob: -12.255339622497559
    5. 's' → logprob: -13.130339622497559
    6. ')' → logprob: -13.755339622497559
    7. '(split' → logprob: -13.755339622497559
    8. ' split' → logprob: -14.130339622497559
    9. '().' → logprob: -16.005338668823242
    10. '()' → logprob: -17.130338668823242

Token 95: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.6544789671897888
    2. ')' → logprob: -0.9044789671897888
    3. '))' → logprob: -3.5294790267944336
    4. '()' → logprob: -3.6544790267944336
    5. '()))' → logprob: -4.154479026794434
    6. '(' → logprob: -6.029479026794434
    7. '('' → logprob: -6.279479026794434
    8. '())
' → logprob: -9.279479026794434
    9. '(','' → logprob: -9.779479026794434
    10. '(
' → logprob: -10.529479026794434

Token 96: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 97: ' if' (ID: 538)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 98: ' A' (ID: 355)
  Prédit: ' A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' A' → logprob: -0.0006444069440476596
    2. 'A' → logprob: -8.00064468383789
    3. ' ' → logprob: -8.50064468383789
    4. ' not' → logprob: -9.87564468383789
    5. ' B' → logprob: -9.87564468383789
    6. '	A' → logprob: -13.62564468383789
    7. ' ' → logprob: -14.25064468383789
    8. ' (' → logprob: -15.50064468383789
    9. '  ' → logprob: -15.50064468383789
    10. ' А' → logprob: -16.25064468383789

Token 99: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.6341438889503479
    2. '==' → logprob: -0.7591438889503479
    3. '=' → logprob: -6.634143829345703
    4. ' =' → logprob: -9.759143829345703
    5. '>' → logprob: -9.759143829345703
    6. ' >' → logprob: -10.134143829345703
    7. '==-' → logprob: -11.259143829345703
    8. ' <' → logprob: -11.384143829345703
    9. ')==' → logprob: -11.509143829345703
    10. '<' → logprob: -11.509143829345703

Token 100: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.474736750125885
    2. ' ' → logprob: -0.974736750125885
    3. 'B' → logprob: -7.47473669052124
    4. ' B' → logprob: -9.349737167358398
    5. '```' → logprob: -13.599737167358398
    6. '-' → logprob: -14.099737167358398
    7. ' ' → logprob: -14.099737167358398
    8. '０' → logprob: -14.724737167358398
    9. '	B' → logprob: -15.099737167358398
    10. '۰' → logprob: -15.599737167358398

Token 101: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0047170608304440975
    2. ' ' → logprob: -5.379716873168945
    3. 'B' → logprob: -9.254716873168945
    4. ' B' → logprob: -14.254716873168945
    5. '０' → logprob: -14.879716873168945
    6. '-' → logprob: -16.754716873168945
    7. '۰' → logprob: -17.254716873168945
    8. ' ' → logprob: -17.504716873168945
    9. '```' → logprob: -17.879716873168945
    10. '00' → logprob: -18.379716873168945

Token 102: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.006331752520054579
    2. 'and' → logprob: -5.381331920623779
    3. ' or' → logprob: -7.006331920623779
    4. ' ' → logprob: -7.131331920623779
    5. ' a' → logprob: -13.506331443786621
    6. ':' → logprob: -14.131331443786621
    7. ' et' → logprob: -14.256331443786621
    8. ' ' → logprob: -14.756331443786621
    9. ' и' → logprob: -15.131331443786621
    10. '	and' → logprob: -15.381331443786621

Token 103: ' B' (ID: 418)
  Prédit: ' B'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' B' → logprob: -0.0015124812489375472
    2. 'B' → logprob: -6.50151252746582
    3. ' ' → logprob: -11.50151252746582
    4. '  ' → logprob: -17.75151252746582
    5. '	B' → logprob: -18.25151252746582
    6. ' ' → logprob: -18.62651252746582
    7. '<|end|>' → logprob: -19.37651252746582
    8. '   ' → logprob: -21.87651252746582
    9. '>B' → logprob: -21.87651252746582
    10. ' ' → logprob: -22.62651252746582

Token 104: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.002005483955144882
    2. '==' → logprob: -6.252005577087402
    3. ' ' → logprob: -9.627005577087402
    4. '<|end|>' → logprob: -12.252005577087402
    5. '<|end|>' → logprob: -13.377005577087402
    6. ' =' → logprob: -13.877005577087402
    7. ')==' → logprob: -14.002005577087402
    8. ' ===' → logprob: -14.252005577087402
    9. '0' → logprob: -14.252005577087402
    10. ' ' → logprob: -14.252005577087402

Token 105: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.31326186656951904
    2. '0' → logprob: -1.313261866569519
    3. ' ' → logprob: -16.438261032104492
    4. '  ' → logprob: -16.813261032104492
    5. '<|end|>' → logprob: -18.313261032104492
    6. '   ' → logprob: -18.438261032104492
    7. '<|end|>' → logprob: -19.188261032104492
    8. '۰' → logprob: -19.563261032104492
    9. '０' → logprob: -20.063261032104492
    10. '	' → logprob: -20.188261032104492

Token 106: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0019288709154352546
    2. ' ' → logprob: -6.251928806304932
    3. '  ' → logprob: -15.62692928314209
    4. '   ' → logprob: -16.251928329467773
    5. '    ' → logprob: -18.314428329467773
    6. '<|end|>' → logprob: -18.501928329467773
    7. '```' → logprob: -19.626928329467773
    8. ' ' → logprob: -19.626928329467773
    9. ')' → logprob: -19.689428329467773
    10. '000' → logprob: -19.814428329467773

Token 107: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0005563704180531204
    2. ':
' → logprob: -7.500556468963623
    3. ' :' → logprob: -13.500555992126465
    4. ':return' → logprob: -13.750555992126465
    5. '):' → logprob: -14.750555992126465
    6. '       ' → logprob: -15.250555992126465
    7. '：' → logprob: -15.625555992126465
    8. ':
' → logprob: -16.62555694580078
    9. '   ' → logprob: -16.75055694580078
    10. ':

' → logprob: -17.62555694580078

Token 108: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.043178800493478775
    2. '       ' → logprob: -3.1681787967681885
    3. '   ' → logprob: -9.91817855834961
    4. '		' → logprob: -10.54317855834961
    5. ' break' → logprob: -10.79317855834961
    6. '          ' → logprob: -10.91817855834961
    7. '	       ' → logprob: -11.41817855834961
    8. '     ' → logprob: -11.79317855834961
    9. '      ' → logprob: -11.79317855834961
    10. '        ' → logprob: -11.91817855834961

Token 109: ' #' (ID: 1069)
  Prédit: ' break'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' break' → logprob: -0.709810197353363
    2. 'break' → logprob: -0.709810197353363
    3. '       ' → logprob: -4.584810256958008
    4. '           ' → logprob: -5.209810256958008
    5. 'return' → logprob: -7.709810256958008
    6. '	break' → logprob: -8.084810256958008
    7. '               ' → logprob: -10.084810256958008
    8. ' return' → logprob: -10.334810256958008
    9. '   ' → logprob: -11.084810256958008
    10. '_break' → logprob: -12.334810256958008

Token 110: ' Condition' (ID: 30255)
  Prédit: 'break'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'break' → logprob: -0.009484412148594856
    2. ' break' → logprob: -4.75948429107666
    3. '       ' → logprob: -7.13448429107666
    4. 'return' → logprob: -10.50948429107666
    5. '	break' → logprob: -10.63448429107666
    6. '           ' → logprob: -11.25948429107666
    7. 'Break' → logprob: -12.75948429107666
    8. '   ' → logprob: -13.25948429107666
    9. 'br' → logprob: -13.88448429107666
    10. 'b' → logprob: -13.88448429107666

Token 111: ' de' (ID: 334)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.01945822685956955
    2. '       ' → logprob: -4.019458293914795
    3. ' break' → logprob: -8.269457817077637
    4. '   ' → logprob: -8.269457817077637
    5. 'break' → logprob: -8.769457817077637
    6. ' de' → logprob: -9.144457817077637
    7. ':' → logprob: -9.394457817077637
    8. '               ' → logprob: -9.644457817077637
    9. '          ' → logprob: -9.769457817077637
    10. '        ' → logprob: -10.019457817077637

Token 112: ' fin' (ID: 2131)
  Prédit: ' fin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' fin' → logprob: -0.7550027966499329
    2. 'fin' → logprob: -1.255002737045288
    3. 'break' → logprob: -2.005002737045288
    4. ' break' → logprob: -2.630002737045288
    5. ' sortie' → logprob: -3.755002737045288
    6. 'arr' → logprob: -5.755002975463867
    7. ' arrêt' → logprob: -5.880002975463867
    8. 'sort' → logprob: -6.005002975463867
    9. 'rupt' → logprob: -6.005002975463867
    10. 'f' → logprob: -7.130002975463867

Token 113: ' d' (ID: 272)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5248569846153259
    2. '           ' → logprob: -0.8998569846153259
    3. ' break' → logprob: -8.024856567382812
    4. '   ' → logprob: -8.024856567382812
    5. '               ' → logprob: -8.274856567382812
    6. '        ' → logprob: -8.774856567382812
    7. '		' → logprob: -8.899856567382812
    8. '      ' → logprob: -9.274856567382812
    9. '	break' → logprob: -9.274856567382812
    10. '	' → logprob: -10.149856567382812

Token 114: ''entrée' (ID: 115820)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.04961962252855301
    2. ''entrée' → logprob: -3.174619674682617
    3. ''' → logprob: -6.299619674682617
    4. 'es' → logprob: -6.674619674682617
    5. 'u' → logprob: -6.924619674682617
    6. ''ex' → logprob: -7.049619674682617
    7. 'entrée' → logprob: -8.299619674682617
    8. 'ex' → logprob: -8.799619674682617
    9. '   ' → logprob: -8.924619674682617
    10. ''é' → logprob: -8.924619674682617

Token 115: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.526047945022583
    2. '       ' → logprob: -0.901047945022583
    3. ' break' → logprob: -6.651047706604004
    4. '   ' → logprob: -7.901047706604004
    5. 'break' → logprob: -8.276047706604004
    6. '	break' → logprob: -8.401047706604004
    7. '               ' → logprob: -8.651047706604004
    8. '
' → logprob: -8.776047706604004
    9. '      ' → logprob: -9.776047706604004
    10. '.' → logprob: -9.776047706604004

Token 116: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0022481500636786222
    2. '       ' → logprob: -6.127248287200928
    3. '               ' → logprob: -10.75224781036377
    4. '          ' → logprob: -11.25224781036377
    5. ' break' → logprob: -11.37724781036377
    6. 'break' → logprob: -12.50224781036377
    7. '		' → logprob: -12.75224781036377
    8. '            ' → logprob: -12.75224781036377
    9. '   ' → logprob: -13.12724781036377
    10. '        ' → logprob: -13.25224781036377

Token 117: ' break' (ID: 2338)
  Prédit: 'break'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'break' (adapté à ' break') → logprob: -0.00014203863975126296
    2. ' break' → logprob: -9.000142097473145
    3. '       ' → logprob: -11.250142097473145
    4. 'return' → logprob: -12.250142097473145
    5. '	break' → logprob: -14.625142097473145
    6. '   ' → logprob: -15.625142097473145
    7. 'b' → logprob: -16.625141143798828
    8. 'br' → logprob: -16.875141143798828
    9. '           ' → logprob: -18.125141143798828
    10. 'Break' → logprob: -19.375141143798828

Token 118: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.010778267867863178
    2. '       ' → logprob: -5.010778427124023
    3. '        
' → logprob: -5.885778427124023
    4. '    
' → logprob: -7.510778427124023
    5. '<|end|>' → logprob: -8.260778427124023
    6. '  
' → logprob: -8.510778427124023
    7. ' 
' → logprob: -9.635778427124023
    8. '   ' → logprob: -10.510778427124023
    9. '   
' → logprob: -11.010778427124023
    10. '
' → logprob: -11.010778427124023

Token 119: '       ' (ID: 309)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.25381261110305786
    2. '       ' → logprob: -1.628812551498413
    3. '        
' → logprob: -3.753812551498413
    4. '    
' → logprob: -6.253812789916992
    5. '   ' → logprob: -7.253812789916992
    6. '
' → logprob: -7.753812789916992
    7. ' 
' → logprob: -8.003812789916992
    8. '  
' → logprob: -8.253812789916992
    9. '       
' → logprob: -9.003812789916992
    10. '      ' → logprob: -9.378812789916992

Token 120: ' change' (ID: 3343)
  Prédit: 'change'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'change' (adapté à ' change') → logprob: -0.06934244930744171
    2. ' change' → logprob: -3.5693423748016357
    3. 'reste' → logprob: -4.319342613220215
    4. ' rendu' → logprob: -4.569342613220215
    5. 'rest' → logprob: -5.069342613220215
    6. 'r' → logprob: -6.444342613220215
    7. '   ' → logprob: -6.444342613220215
    8. '       ' → logprob: -6.819342613220215
    9. 'mon' → logprob: -7.444342613220215
    10. 'C' → logprob: -7.819342613220215

Token 121: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.027021929621696472
    2. '=' → logprob: -3.652021884918213
    3. '_' → logprob: -8.152022361755371
    4. '_amount' → logprob: -8.277022361755371
    5. ' ' → logprob: -8.777022361755371
    6. ' ' → logprob: -12.277022361755371
    7. '	' → logprob: -12.402022361755371
    8. '＝' → logprob: -13.027022361755371
    9. 's' → logprob: -13.152022361755371
    10. 'amount' → logprob: -13.652022361755371

Token 122: ' B' (ID: 418)
  Prédit: ' B'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' B' → logprob: -0.11285712569952011
    2. 'B' → logprob: -2.2378571033477783
    3. ' ' → logprob: -10.3628568649292
    4. '	B' → logprob: -13.6128568649292
    5. '   ' → logprob: -13.9878568649292
    6. ' ' → logprob: -14.9878568649292
    7. ' (' → logprob: -15.2378568649292
    8. '  ' → logprob: -15.3628568649292
    9. '(B' → logprob: -16.050357818603516
    10. '```' → logprob: -17.300357818603516

Token 123: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.012558862566947937
    2. '-' → logprob: -4.387558937072754
    3. ' ' → logprob: -10.637558937072754
    4. '   ' → logprob: -10.887558937072754
    5. '-A' → logprob: -12.887558937072754
    6. ' ' → logprob: -13.387558937072754
    7. '  ' → logprob: -14.137558937072754
    8. '    ' → logprob: -14.887558937072754
    9. '　' → logprob: -15.262558937072754
    10. '<|end|>' → logprob: -15.887558937072754

Token 124: ' A' (ID: 355)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.0028065370861440897
    2. ' A' → logprob: -5.877806663513184
    3. '   ' → logprob: -14.377806663513184
    4. '	A' → logprob: -14.627806663513184
    5. ' ' → logprob: -15.002806663513184
    6. '  ' → logprob: -16.752805709838867
    7. '>A' → logprob: -16.752805709838867
    8. 'Ａ' → logprob: -16.877805709838867
    9. '<|end|>' → logprob: -17.877805709838867
    10. '       ' → logprob: -18.002805709838867

Token 125: ' ' (ID: 220)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.08987671136856079
    2. '       ' → logprob: -2.714876651763916
    3. '        
' → logprob: -4.714876651763916
    4. ' 
' → logprob: -6.464876651763916
    5. '  
' → logprob: -6.714876651763916
    6. ' coins' → logprob: -6.839876651763916
    7. '
' → logprob: -6.839876651763916
    8. '        ' → logprob: -6.964876651763916
    9. '   ' → logprob: -7.214876651763916
    10. ' tokens' → logprob: -7.589876651763916

Token 126: ' #' (ID: 1069)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.565438449382782
    2. '       ' → logprob: -0.940438449382782
    3. '        
' → logprob: -3.8154385089874268
    4. 'tokens' → logprob: -6.065438270568848
    5. ' pieces' → logprob: -6.440438270568848
    6. '        ' → logprob: -6.440438270568848
    7. ' coins' → logprob: -6.565438270568848
    8. ' tokens' → logprob: -6.690438270568848
    9. ' 
' → logprob: -6.815438270568848
    10. '#' → logprob: -6.815438270568848

Token 127: ' Calcul' (ID: 57243)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.1820218563079834
    2. '0' → logprob: -1.6820218563079834
    3. '       ' → logprob: -1.6820218563079834
    4. '1' → logprob: -2.0570218563079834
    5. ' #' → logprob: -2.9320218563079834
    6. '100' → logprob: -3.1820218563079834
    7. '#' → logprob: -3.9320218563079834
    8. '   ' → logprob: -4.4320220947265625
    9. '        ' → logprob: -4.8070220947265625
    10. ' change' → logprob: -5.1820220947265625

Token 128: ' de' (ID: 334)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 129: ' la' (ID: 557)
  Prédit: ' la'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' la' → logprob: -0.41395342350006104
    2. ' l' → logprob: -2.2889533042907715
    3. ' ' → logprob: -2.6639533042907715
    4. ' change' → logprob: -3.0389533042907715
    5. '<|end|>' → logprob: -3.2889533042907715
    6. ' the' → logprob: -3.9139533042907715
    7. 'change' → logprob: -4.0389533042907715
    8. ' le' → logprob: -4.1639533042907715
    9. 'the' → logprob: -5.1639533042907715
    10. '```' → logprob: -6.0389533042907715

Token 130: ' monnaie' (ID: 168963)
  Prédit: ' monnaie'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' monnaie' → logprob: -0.013578285463154316
    2. 'mon' → logprob: -4.638578414916992
    3. ' rendu' → logprob: -7.263578414916992
    4. ' somme' → logprob: -7.263578414916992
    5. 's' → logprob: -7.763578414916992
    6. 'r' → logprob: -8.263578414916992
    7. 'm' → logprob: -8.513578414916992
    8. ' ' → logprob: -8.513578414916992
    9. ' rendre' → logprob: -8.638578414916992
    10. ' monna' → logprob: -8.638578414916992

Token 131: ' à' (ID: 1221)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.7841655015945435
    2. '       ' → logprob: -0.7841655015945435
    3. '        
' → logprob: -2.909165382385254
    4. '  
' → logprob: -5.409165382385254
    5. ' 
' → logprob: -5.659165382385254
    6. '<|end|>' → logprob: -5.784165382385254
    7. '        ' → logprob: -5.909165382385254
    8. ' tokens' → logprob: -6.159165382385254
    9. 'tokens' → logprob: -6.159165382385254
    10. '
' → logprob: -6.659165382385254

Token 132: ' rendre' (ID: 44629)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.006195046007633209
    2. ' rendre' → logprob: -5.631195068359375
    3. 'rend' → logprob: -6.256195068359375
    4. 'don' → logprob: -8.506195068359375
    5. 'rem' → logprob: -9.131195068359375
    6. 'payer' → logprob: -9.506195068359375
    7. 'render' → logprob: -9.631195068359375
    8. '
' → logprob: -9.631195068359375
    9. '```' → logprob: -9.756195068359375
    10. ' r' → logprob: -10.506195068359375

Token 133: '

' (ID: 279)
  Prédit: 'coins'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'coins' → logprob: -0.8364629745483398
    2. '       ' → logprob: -1.3364629745483398
    3. ' coins' → logprob: -2.46146297454834
    4. 'pieces' → logprob: -2.46146297454834
    5. 'count' → logprob: -3.21146297454834
    6. ' pieces' → logprob: -4.08646297454834
    7. '        
' → logprob: -4.08646297454834
    8. '
' → logprob: -4.33646297454834
    9. 'counts' → logprob: -4.46146297454834
    10. 'tokens' → logprob: -5.08646297454834

Token 134: '       ' (ID: 309)
  Prédit: 'coins'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'coins' → logprob: -0.7364284992218018
    2. '       ' → logprob: -1.6114284992218018
    3. 'count' → logprob: -1.8614284992218018
    4. 'pieces' → logprob: -2.2364284992218018
    5. 'counts' → logprob: -3.9864284992218018
    6. 'num' → logprob: -4.861428260803223
    7. ' coins' → logprob: -4.986428260803223
    8. '        
' → logprob: -5.111428260803223
    9. '   ' → logprob: -5.361428260803223
    10. 'coin' → logprob: -5.361428260803223

Token 135: ' #' (ID: 1069)
  Prédit: 'coins'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'coins' → logprob: -0.3055714964866638
    2. 'count' → logprob: -1.5555715560913086
    3. 'pieces' → logprob: -3.1805715560913086
    4. 'counts' → logprob: -5.305571556091309
    5. 'num' → logprob: -5.805571556091309
    6. 'cnt' → logprob: -7.805571556091309
    7. 'c' → logprob: -8.055571556091309
    8. 'coin' → logprob: -8.180571556091309
    9. 'ans' → logprob: -8.430571556091309
    10. '#' (adapté à ' #') → logprob: -8.430571556091309

Token 136: ' On' (ID: 2160)
  Prédit: 'coins'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'coins' → logprob: -0.0892053171992302
    2. 'pieces' → logprob: -3.339205265045166
    3. ' coins' → logprob: -3.464205265045166
    4. 'count' → logprob: -5.214205265045166
    5. 'counts' → logprob: -5.464205265045166
    6. ' pieces' → logprob: -6.339205265045166
    7. '#' → logprob: -6.839205265045166
    8. 'num' → logprob: -6.964205265045166
    9. 'dp' → logprob: -7.089205265045166
    10. 'coin' → logprob: -7.214205265045166

Token 137: ' utilise' (ID: 70283)
  Prédit: ' coins'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' coins' → logprob: -1.2009789943695068
    2. '   ' → logprob: -2.200978994369507
    3. '       ' → logprob: -2.200978994369507
    4. ' dp' → logprob: -2.575978994369507
    5. ' pieces' → logprob: -3.075978994369507
    6. ' ' → logprob: -3.075978994369507
    7. ' #' → logprob: -3.325978994369507
    8. 'coins' → logprob: -3.700978994369507
    9. 'count' → logprob: -3.825978994369507
    10. ' counts' → logprob: -3.825978994369507

Token 138: ' une' (ID: 2463)
  Prédit: ' une'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' une' → logprob: -0.9814691543579102
    2. ' des' → logprob: -1.9814691543579102
    3. ' les' → logprob: -1.9814691543579102
    4. ' coins' → logprob: -2.23146915435791
    5. ' ' → logprob: -2.60646915435791
    6. 'coins' → logprob: -2.85646915435791
    7. '[]' → logprob: -3.98146915435791
    8. '100' → logprob: -4.10646915435791
    9. ' pieces' → logprob: -4.35646915435791
    10. 'des' → logprob: -4.98146915435791

Token 139: ' stratégie' (ID: 79899)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -1.4339998960494995
    2. '   ' → logprob: -1.8089998960494995
    3. ' [' → logprob: -2.559000015258789
    4. 'for' → logprob: -2.559000015258789
    5. 'def' → logprob: -2.684000015258789
    6. '[]' → logprob: -2.809000015258789
    7. ' for' → logprob: -3.434000015258789
    8. ' liste' → logprob: -3.809000015258789
    9. 's' → logprob: -3.934000015258789
    10. ' list' → logprob: -3.934000015258789

Token 140: ' gl' (ID: 2000)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.9362722635269165
    2. 'gre' → logprob: -0.9362722635269165
    3. ' greedy' → logprob: -2.061272144317627
    4. '   ' → logprob: -3.436272144317627
    5. 'gl' → logprob: -3.936272144317627
    6. ' gl' → logprob: -5.061272144317627
    7. ' de' → logprob: -5.311272144317627
    8. 'd' → logprob: -5.686272144317627
    9. 'de' → logprob: -5.811272144317627
    10. ':' → logprob: -5.811272144317627

Token 141: 'out' (ID: 468)
  Prédit: 'ob'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ob' → logprob: -0.08092052489519119
    2. 'obal' → logprob: -2.830920457839966
    3. 'ocale' → logprob: -4.455920696258545
    4. 'out' → logprob: -5.080920696258545
    5. 'o' → logprob: -8.205920219421387
    6. 'oble' → logprob: -8.580920219421387
    7. 'oba' → logprob: -9.080920219421387
    8. 'issante' → logprob: -9.205920219421387
    9. 'obals' → logprob: -10.705920219421387
    10. 'orale' → logprob: -11.205920219421387

Token 142: 'onne' (ID: 25335)
  Prédit: 'ot'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ot' → logprob: -0.1926133781671524
    2. 'ale' → logprob: -2.192613363265991
    3. 'e' → logprob: -3.192613363265991
    4. 'ote' → logprob: -4.69261360168457
    5. 'otte' → logprob: -5.19261360168457
    6. 'otine' → logprob: -6.31761360168457
    7. 'ante' → logprob: -6.81761360168457
    8. 'otide' → logprob: -7.31761360168457
    9. 'othe' → logprob: -7.56761360168457
    10. 'o' → logprob: -7.94261360168457

Token 143: ' car' (ID: 1669)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.014832140877842903
    2. ':' → logprob: -5.014832019805908
    3. '        
' → logprob: -6.264832019805908
    4. ' for' → logprob: -6.889832019805908
    5. ' :' → logprob: -6.889832019805908
    6. '        ' → logprob: -7.014832019805908
    7. ',' → logprob: -7.139832019805908
    8. ' pour' → logprob: -7.264832019805908
    9. '
' → logprob: -8.389832496643066
    10. 'for' → logprob: -8.389832496643066

Token 144: ' la' (ID: 557)
  Prédit: ' change'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' change' → logprob: -0.2257290482521057
    2. ' les' → logprob: -2.600728988647461
    3. 'change' → logprob: -2.600728988647461
    4. ' le' → logprob: -4.100728988647461
    5. ' ' → logprob: -4.225728988647461
    6. '100' → logprob: -4.475728988647461
    7. ' la' → logprob: -5.350728988647461
    8. '   ' → logprob: -6.725728988647461
    9. '	change' → logprob: -6.975728988647461
    10. ' c' → logprob: -7.350728988647461

Token 145: ' monnaie' (ID: 168963)
  Prédit: ' monnaie'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' monnaie' → logprob: -0.06836187094449997
    2. 'mon' → logprob: -3.443361759185791
    3. ' monna' → logprob: -4.318361759185791
    4. 'change' → logprob: -5.193361759185791
    5. ' change' → logprob: -6.318361759185791
    6. ' ' → logprob: -6.443361759185791
    7. 's' → logprob: -6.755861759185791
    8. ' quantité' → logprob: -7.255861759185791
    9. '100' → logprob: -7.318361759185791
    10. ' pièces' → logprob: -7.380861759185791

Token 146: ' est' (ID: 893)
  Prédit: ' disponible'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' disponible' → logprob: -0.8570692539215088
    2. ' rend' → logprob: -1.6070692539215088
    3. ' est' → logprob: -2.232069253921509
    4. 'available' → logprob: -3.232069253921509
    5. '100' → logprob: -3.607069253921509
    6. ' is' → logprob: -3.607069253921509
    7. 'est' → logprob: -3.857069253921509
    8. ' available' → logprob: -3.982069253921509
    9. ' rendu' → logprob: -4.73206901550293
    10. 'rend' → logprob: -5.10706901550293

Token 147: ' composée' (ID: 146865)
  Prédit: ' standard'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' standard' → logprob: -0.95685213804245
    2. ' toujours' → logprob: -1.8318521976470947
    3. 'standard' → logprob: -1.9568521976470947
    4. '[' → logprob: -2.5818521976470947
    5. ' composée' → logprob: -3.2068521976470947
    6. ' donnée' → logprob: -3.8318521976470947
    7. ' disponible' → logprob: -3.9568521976470947
    8. ' basée' → logprob: -4.206851959228516
    9. ' optim' → logprob: -4.456851959228516
    10. ' canonical' → logprob: -4.581851959228516

Token 148: '
' (ID: 198)
  Prédit: ' des'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' des' → logprob: -0.30850011110305786
    2. ' d' → logprob: -2.183500051498413
    3. ' de' → logprob: -2.183500051498413
    4. ' of' → logprob: -4.183500289916992
    5. '   ' → logprob: -5.183500289916992
    6. 'd' → logprob: -5.183500289916992
    7. 'des' → logprob: -5.308500289916992
    8. '       ' → logprob: -5.808500289916992
    9. 'de' → logprob: -6.058500289916992
    10. '    ' → logprob: -6.933500289916992

Token 149: '       ' (ID: 309)
  Prédit: ' des'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' des' → logprob: -0.14787259697914124
    2. '       ' → logprob: -2.7728726863861084
    3. ' de' → logprob: -3.0228726863861084
    4. '   ' → logprob: -4.397872447967529
    5. 'des' → logprob: -4.772872447967529
    6. ' of' → logprob: -6.772872447967529
    7. ' d' → logprob: -6.897872447967529
    8. '    ' → logprob: -7.022872447967529
    9. ' uniquement' → logprob: -7.272872447967529
    10. 'de' → logprob: -7.647872447967529

Token 150: ' #' (ID: 1069)
  Prédit: ' de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.6586584448814392
    2. ' des' → logprob: -0.7836584448814392
    3. '   ' → logprob: -5.158658504486084
    4. '    ' → logprob: -5.283658504486084
    5. 'de' → logprob: -5.533658504486084
    6. ' d' → logprob: -5.658658504486084
    7. ' of' → logprob: -6.283658504486084
    8. ' ' → logprob: -6.408658504486084
    9. 'des' → logprob: -6.533658504486084
    10. ' uniquement' → logprob: -7.408658504486084

Token 151: ' de' (ID: 334)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.5533681511878967
    2. ' des' → logprob: -1.803368091583252
    3. 'des' → logprob: -2.303368091583252
    4. ' de' → logprob: -2.553368091583252
    5. 'd' → logprob: -3.428368091583252
    6. 'de' → logprob: -3.803368091583252
    7. ' [' → logprob: -4.303368091583252
    8. ' d' → logprob: -5.178368091583252
    9. '100' → logprob: -6.678368091583252
    10. ' of' → logprob: -6.678368091583252

Token 152: ' billets' (ID: 146301)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.36639076471328735
    2. ' [' → logprob: -1.3663907051086426
    3. ' pièces' → logprob: -3.8663907051086426
    4. '100' → logprob: -4.491390705108643
    5. ' coins' → logprob: -5.241390705108643
    6. ' des' → logprob: -5.491390705108643
    7. 'coins' → logprob: -5.991390705108643
    8. '500' → logprob: -5.991390705108643
    9. ' pieces' → logprob: -6.491390705108643
    10. 'des' → logprob: -7.241390705108643

Token 153: '/pi' (ID: 178142)
  Prédit: ' et'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' et' → logprob: -0.0860414057970047
    2. ',' → logprob: -3.9610414505004883
    3. 'et' → logprob: -3.9610414505004883
    4. '   ' → logprob: -4.211041450500488
    5. ' de' → logprob: -4.336041450500488
    6. '    ' → logprob: -5.836041450500488
    7. '100' → logprob: -5.961041450500488
    8. 's' → logprob: -6.086041450500488
    9. ' and' → logprob: -6.336041450500488
    10. '[' → logprob: -6.836041450500488

Token 154: 'èces' (ID: 100354)
  Prédit: 'èces'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'èces' → logprob: -0.01057481300085783
    2. 'ec' → logprob: -5.635574817657471
    3. 'èce' → logprob: -5.635574817657471
    4. 'è' → logprob: -6.510574817657471
    5. '`' → logprob: -6.635574817657471
    6. '```' → logprob: -9.635574340820312
    7. 'c' → logprob: -9.635574340820312
    8. '#' → logprob: -9.635574340820312
    9. '' → logprob: -10.510574340820312
    10. 'e' → logprob: -10.635574340820312

Token 155: ' standard' (ID: 7024)
  Prédit: ' de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.8545779585838318
    2. '   ' → logprob: -0.9795779585838318
    3. '[' → logprob: -2.6045780181884766
    4. ' disponibles' → logprob: -3.1045780181884766
    5. ' [' → logprob: -3.8545780181884766
    6. '100' → logprob: -3.8545780181884766
    7. '       ' → logprob: -4.229578018188477
    8. 's' → logprob: -5.229578018188477
    9. 'de' → logprob: -5.479578018188477
    10. ' ' → logprob: -6.354578018188477

Token 156: ' et' (ID: 859)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.14358170330524445
    2. ':' → logprob: -2.5185816287994385
    3. ' :' → logprob: -3.3935816287994385
    4. '   ' → logprob: -4.518581867218018
    5. '.' → logprob: -6.768581867218018
    6. 's' → logprob: -7.018581867218018
    7. ',' → logprob: -7.018581867218018
    8. '        ' → logprob: -7.143581867218018
    9. '        
' → logprob: -7.518581867218018
    10. '100' → logprob: -7.643581867218018

Token 157: ' multiples' (ID: 70720)
  Prédit: ' les'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' les' → logprob: -1.6612502336502075
    2. ' des' → logprob: -2.036250114440918
    3. ' disponibles' → logprob: -2.786250114440918
    4. 'des' → logprob: -3.161250114440918
    5. 'les' → logprob: -3.411250114440918
    6. ' toujours' → logprob: -3.411250114440918
    7. '100' → logprob: -3.536250114440918
    8. ' leurs' → logprob: -3.661250114440918
    9. ' bien' → logprob: -3.661250114440918
    10. ' que' → logprob: -3.911250114440918

Token 158: ' de' (ID: 334)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2582017183303833
    2. '       ' → logprob: -2.1332015991210938
    3. ' de' → logprob: -2.8832015991210938
    4. '    ' → logprob: -4.383201599121094
    5. '  ' → logprob: -4.508201599121094
    6. 'de' → logprob: -4.883201599121094
    7. ' ' → logprob: -5.258201599121094
    8. '100' → logprob: -5.633201599121094
    9. ' of' → logprob: -6.633201599121094
    10. '    
' → logprob: -6.633201599121094

Token 159: ' ' (ID: 220)
  Prédit: '100'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '100' → logprob: -0.12003482133150101
    2. '500' → logprob: -2.74503493309021
    3. '5' → logprob: -3.62003493309021
    4. ' ' → logprob: -4.495034694671631
    5. '10' → logprob: -4.745034694671631
    6. '50' → logprob: -6.495034694671631
    7. '1' → logprob: -8.120035171508789
    8. 'mon' → logprob: -10.182535171508789
    9. '```' → logprob: -10.182535171508789
    10. '0' → logprob: -10.495035171508789

Token 160: '100' (ID: 1353)
  Prédit: '100'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '100' → logprob: -0.10835414379835129
    2. '500' → logprob: -2.733354091644287
    3. ' ' → logprob: -3.733354091644287
    4. '10' → logprob: -4.608354091644287
    5. '5' → logprob: -5.733354091644287
    6. '1' → logprob: -8.108354568481445
    7. '50' → logprob: -8.608354568481445
    8. '１００' → logprob: -10.858354568481445
    9. '  ' → logprob: -11.545854568481445
    10. '0' → logprob: -11.983354568481445

Token 161: '.
' (ID: 558)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.008107767440378666
    2. '   ' → logprob: -5.883107662200928
    3. '        
' → logprob: -6.133107662200928
    4. '
' → logprob: -7.133107662200928
    5. ':' → logprob: -7.258107662200928
    6. '      ' → logprob: -8.258108139038086
    7. '        ' → logprob: -8.758108139038086
    8. '    ' → logprob: -8.758108139038086
    9. ',' → logprob: -9.258108139038086
    10. '500' → logprob: -9.383108139038086

Token 162: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.021618200466036797
    2. '   ' → logprob: -5.021618366241455
    3. '        
' → logprob: -5.021618366241455
    4. 'count' → logprob: -5.771618366241455
    5. ' n' → logprob: -7.646618366241455
    6. '        ' → logprob: -7.646618366241455
    7. '    ' → logprob: -7.771618366241455
    8. '      ' → logprob: -7.896618366241455
    9. ' count' → logprob: -8.021617889404297
    10. 'coins' → logprob: -8.146617889404297

Token 163: ' #' (ID: 1069)
  Prédit: 'coins'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'coins' → logprob: -0.6518887877464294
    2. 'pieces' → logprob: -1.7768888473510742
    3. 'count' → logprob: -2.651888847351074
    4. '   ' → logprob: -3.151888847351074
    5. 'num' → logprob: -3.276888847351074
    6. 'n' → logprob: -3.276888847351074
    7. '       ' → logprob: -3.401888847351074
    8. ' coins' → logprob: -3.401888847351074
    9. ' pieces' → logprob: -3.901888847351074
    10. 'counts' → logprob: -4.901888847351074

Token 164: ' On' (ID: 2160)
  Prédit: 'coins'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'coins' → logprob: -0.9767088294029236
    2. ' coins' → logprob: -1.4767088890075684
    3. 'count' → logprob: -2.3517088890075684
    4. ' count' → logprob: -3.1017088890075684
    5. 'pieces' → logprob: -3.2267088890075684
    6. ' num' → logprob: -3.2267088890075684
    7. ' pieces' → logprob: -3.3517088890075684
    8. 'num' → logprob: -3.4767088890075684
    9. '   ' → logprob: -3.8517088890075684
    10. ' counts' → logprob: -4.226708889007568

Token 165: ' commence' (ID: 44755)
  Prédit: ' n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' n' → logprob: -1.4591751098632812
    2. ' pieces' → logprob: -1.4591751098632812
    3. ' coins' → logprob: -2.0841751098632812
    4. ' reste' → logprob: -2.3341751098632812
    5. 'pieces' → logprob: -2.9591751098632812
    6. '   ' → logprob: -3.2091751098632812
    7. ' ' → logprob: -3.2091751098632812
    8. '    ' → logprob: -3.7091751098632812
    9. 'coins' → logprob: -3.9591751098632812
    10. 'n' → logprob: -4.084175109863281

Token 166: ' par' (ID: 686)
  Prédit: ' par'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' par' → logprob: -0.8656788468360901
    2. 'par' → logprob: -0.8656788468360901
    3. '       ' → logprob: -1.9906787872314453
    4. '   ' → logprob: -4.740678787231445
    5. ' by' → logprob: -5.615678787231445
    6. '	par' → logprob: -6.240678787231445
    7. '_par' → logprob: -6.365678787231445
    8. ' ' → logprob: -6.740678787231445
    9. ' avec' → logprob: -7.240678787231445
    10. ',' → logprob: -7.490678787231445

Token 167: ' donner' (ID: 32394)
  Prédit: ' rendre'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' rendre' → logprob: -0.9276188015937805
    2. ' utiliser' → logprob: -1.0526187419891357
    3. ' les' → logprob: -2.8026187419891357
    4. '100' → logprob: -3.1776187419891357
    5. ' ' → logprob: -3.6776187419891357
    6. ' le' → logprob: -4.052618980407715
    7. ' des' → logprob: -4.302618980407715
    8. ' calcul' → logprob: -4.302618980407715
    9. ' la' → logprob: -4.677618980407715
    10. 'r' → logprob: -4.677618980407715

Token 168: ' le' (ID: 505)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.09033239632844925
    2. ' des' → logprob: -3.715332508087158
    3. '500' → logprob: -3.840332508087158
    4. '   ' → logprob: -4.215332508087158
    5. ' le' → logprob: -4.340332508087158
    6. '  ' → logprob: -5.590332508087158
    7. ' les' → logprob: -6.090332508087158
    8. '100' → logprob: -6.840332508087158
    9. '    ' → logprob: -6.965332508087158
    10. 'le' → logprob: -7.340332508087158

Token 169: ' maximum' (ID: 10562)
  Prédit: ' nombre'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' nombre' → logprob: -0.01847369410097599
    2. 'nombre' → logprob: -4.5184736251831055
    3. '500' → logprob: -6.0184736251831055
    4. ' nombres' → logprob: -6.2684736251831055
    5. ' plus' → logprob: -6.8934736251831055
    6. ' ' → logprob: -7.6434736251831055
    7. 'plus' → logprob: -7.7684736251831055
    8. 's' → logprob: -8.393473625183105
    9. ' maximum' → logprob: -9.143473625183105
    10. ' n' → logprob: -9.268473625183105

Token 170: ' de' (ID: 334)
  Prédit: ' possible'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' possible' → logprob: -0.18265271186828613
    2. ' de' → logprob: -2.432652711868286
    3. 'possible' → logprob: -2.932652711868286
    4. ' ' → logprob: -4.682652473449707
    5. '    ' → logprob: -5.307652473449707
    6. '100' → logprob: -5.432652473449707
    7. '   ' → logprob: -6.057652473449707
    8. ' possibles' → logprob: -6.682652473449707
    9. 'de' → logprob: -7.057652473449707
    10. ' d' → logprob: -7.057652473449707

Token 171: ' billets' (ID: 146301)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.08180397748947144
    2. '500' → logprob: -2.706804037094116
    3. '100' → logprob: -4.706803798675537
    4. '  ' → logprob: -7.081803798675537
    5. ' billets' → logprob: -7.331803798675537
    6. '5' → logprob: -7.581803798675537
    7. ' pieces' → logprob: -8.706804275512695
    8. ' pièces' → logprob: -8.956804275512695
    9. '   ' → logprob: -9.831804275512695
    10. '1' → logprob: -10.019304275512695

Token 172: ' ' (ID: 220)
  Prédit: ' de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.08952222019433975
    2. '100' → logprob: -3.214522123336792
    3. '   ' → logprob: -4.339522361755371
    4. '500' → logprob: -4.339522361755371
    5. ' ' → logprob: -4.589522361755371
    6. 'de' → logprob: -5.089522361755371
    7. '    ' → logprob: -6.839522361755371
    8. '  ' → logprob: -7.589522361755371
    9. ' ' → logprob: -7.589522361755371
    10. ' possible' → logprob: -8.339522361755371

Token 173: '100' (ID: 1353)
  Prédit: ' de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.07390236109495163
    2. 'de' → logprob: -2.6989023685455322
    3. '500' → logprob: -5.823902130126953
    4. '100' → logprob: -7.323902130126953
    5. ' ' → logprob: -8.573902130126953
    6. '   ' → logprob: -9.698902130126953
    7. 'd' → logprob: -10.573902130126953
    8. ' à' → logprob: -11.323902130126953
    9. '/' → logprob: -11.448902130126953
    10. ' possible' → logprob: -12.198902130126953

Token 174: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -3.464347173576243e-05
    2. '０' → logprob: -10.50003433227539
    3. '00' → logprob: -13.25003433227539
    4. '円' → logprob: -13.93753433227539
    5. '000' → logprob: -14.00003433227539
    6. ' ' → logprob: -14.37503433227539
    7. '০' → logprob: -14.50003433227539
    8. '०' → logprob: -14.56253433227539
    9. '۰' → logprob: -14.75003433227539
    10. '٠' → logprob: -14.87503433227539

Token 175: ' yen' (ID: 34890)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.4229711592197418
    2. '円' → logprob: -2.422971248626709
    3. ' yen' → logprob: -2.922971248626709
    4. '   ' → logprob: -2.922971248626709
    5. ' ,' → logprob: -3.047971248626709
    6. 'yen' → logprob: -3.422971248626709
    7. 's' → logprob: -4.047971248626709
    8. ' puis' → logprob: -5.297971248626709
    9. '札' → logprob: -5.297971248626709
    10. '       ' → logprob: -5.422971248626709

Token 176: ',
' (ID: 412)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.7184009552001953
    2. 's' → logprob: -1.0934009552001953
    3. ' ,' → logprob: -3.3434009552001953
    4. ' ' → logprob: -3.5934009552001953
    5. '100' → logprob: -3.8434009552001953
    6. '   ' → logprob: -4.343400955200195
    7. ' puis' → logprob: -4.780900955200195
    8. ' billets' → logprob: -4.905900955200195
    9. '0' → logprob: -5.280900955200195
    10. '札' → logprob: -5.405900955200195

Token 177: '       ' (ID: 309)
  Prédit: ' puis'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' puis' → logprob: -0.0045753768645226955
    2. ' ' → logprob: -6.629575252532959
    3. 'p' → logprob: -7.254575252532959
    4. '    ' → logprob: -7.504575252532959
    5. '       ' → logprob: -7.754575252532959
    6. 's' → logprob: -8.004575729370117
    7. '   ' → logprob: -8.504575729370117
    8. ' then' → logprob: -8.504575729370117
    9. ' ensuite' → logprob: -9.129575729370117
    10. '100' → logprob: -9.129575729370117

Token 178: ' #' (ID: 1069)
  Prédit: ' puis'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' puis' → logprob: -0.03093842603266239
    2. '       ' → logprob: -4.030938625335693
    3. '        ' → logprob: -5.780938625335693
    4. ' ' → logprob: -5.905938625335693
    5. ' ensuite' → logprob: -6.155938625335693
    6. '    ' → logprob: -6.280938625335693
    7. '   ' → logprob: -7.405938625335693
    8. ' then' → logprob: -7.655938625335693
    9. 'ens' → logprob: -7.905938625335693
    10. 'p' → logprob: -8.155938148498535

Token 179: ' puis' (ID: 18766)
  Prédit: ' change'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' change' → logprob: -0.9575781226158142
    2. ' puis' → logprob: -0.9575781226158142
    3. 'change' → logprob: -1.707578182220459
    4. ' then' → logprob: -3.832578182220459
    5. ' rest' → logprob: -4.707578182220459
    6. '       ' → logprob: -4.707578182220459
    7. ' reste' → logprob: -5.707578182220459
    8. 'rest' → logprob: -6.082578182220459
    9. 'reste' → logprob: -6.707578182220459
    10. ' ' → logprob: -7.207578182220459

Token 180: ' de' (ID: 334)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.7309985756874084
    2. ' change' → logprob: -1.7309985160827637
    3. 'change' → logprob: -2.3559985160827637
    4. ' le' → logprob: -2.9809985160827637
    5. '500' → logprob: -2.9809985160827637
    6. '100' → logprob: -3.1059985160827637
    7. '    ' → logprob: -4.230998516082764
    8. '  ' → logprob: -4.355998516082764
    9. ' les' → logprob: -4.605998516082764
    10. ' de' → logprob: -4.855998516082764

Token 181: ' pièces' (ID: 49165)
  Prédit: '500'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '500' → logprob: -0.6469520330429077
    2. ' ' → logprob: -0.8969520330429077
    3. ' pièces' → logprob: -3.2719521522521973
    4. ' pieces' → logprob: -3.8969521522521973
    5. '5' → logprob: -5.896952152252197
    6. 'pieces' → logprob: -5.896952152252197
    7. '  ' → logprob: -6.771952152252197
    8. ' billets' → logprob: -7.396952152252197
    9. ' coins' → logprob: -7.771952152252197
    10. ' cinq' → logprob: -8.021951675415039

Token 182: ' de' (ID: 334)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.42244747281074524
    2. ' de' → logprob: -1.5474474430084229
    3. '500' → logprob: -2.047447443008423
    4. ' ' → logprob: -6.922447681427002
    5. 'de' → logprob: -7.547447681427002
    6. '   ' → logprob: -7.922447681427002
    7. '  ' → logprob: -8.422447204589844
    8. '100' → logprob: -8.547447204589844
    9. '    ' → logprob: -9.047447204589844
    10. ' d' → logprob: -9.797447204589844

Token 183: ' ' (ID: 220)
  Prédit: '500'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '500' → logprob: -0.048613931983709335
    2. ' ' → logprob: -3.048614025115967
    3. '  ' → logprob: -10.923613548278809
    4. '   ' → logprob: -12.548613548278809
    5. '```' → logprob: -13.673613548278809
    6. '100' → logprob: -14.048613548278809
    7. '    ' → logprob: -14.173613548278809
    8. ' ' → logprob: -14.736113548278809
    9. '5' → logprob: -14.798613548278809
    10. '	' → logprob: -14.861113548278809

Token 184: '500' (ID: 3234)
  Prédit: '500'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '500' → logprob: -0.001709328847937286
    2. ' ' → logprob: -6.376709461212158
    3. '5' → logprob: -12.626708984375
    4. '  ' → logprob: -13.626708984375
    5. '100' → logprob: -14.251708984375
    6. '50' → logprob: -14.501708984375
    7. '５' → logprob: -15.314208984375
    8. ' five' → logprob: -15.501708984375
    9. '   ' → logprob: -15.689208984375
    10. '```' → logprob: -15.814208984375

Token 185: ' yen' (ID: 34890)
  Prédit: ' yen'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' yen' → logprob: -0.28606271743774414
    2. 'yen' → logprob: -1.9110627174377441
    3. ',' → logprob: -2.786062717437744
    4. ' ,' → logprob: -3.536062717437744
    5. '円' → logprob: -5.286062717437744
    6. ' ' → logprob: -6.536062717437744
    7. ' y' → logprob: -6.661062717437744
    8. ' 円' → logprob: -7.036062717437744
    9. 'en' → logprob: -8.536062240600586
    10. 'y' → logprob: -8.536062240600586

Token 186: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.010646060109138489
    2. '       ' → logprob: -5.135645866394043
    3. ' ,' → logprob: -5.385645866394043
    4. ',
' → logprob: -10.010645866394043
    5. ')' → logprob: -11.010645866394043
    6. '.' → logprob: -11.135645866394043
    7. '   ' → logprob: -11.385645866394043
    8. ' puis' → logprob: -12.135645866394043
    9. '),' → logprob: -13.010645866394043
    10. ' ' → logprob: -13.010645866394043

Token 187: ' puis' (ID: 18766)
  Prédit: ' puis'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' puis' → logprob: -0.02058509737253189
    2. '       ' → logprob: -4.145585060119629
    3. ' et' → logprob: -7.020585060119629
    4. 'et' → logprob: -7.020585060119629
    5. ',' → logprob: -7.520585060119629
    6. '    ' → logprob: -7.645585060119629
    7. '        
' → logprob: -8.395585060119629
    8. ' ' → logprob: -8.520585060119629
    9. '        ' → logprob: -8.520585060119629
    10. 'ens' → logprob: -8.645585060119629

Token 188: ' enfin' (ID: 50642)
  Prédit: ' de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.4919812083244324
    2. ' des' → logprob: -1.2419812679290771
    3. '100' → logprob: -2.866981267929077
    4. ' ' → logprob: -3.741981267929077
    5. 'de' → logprob: -4.616981029510498
    6. 'des' → logprob: -5.616981029510498
    7. '  ' → logprob: -6.866981029510498
    8. ' pièces' → logprob: -6.866981029510498
    9. ' ' → logprob: -7.116981029510498
    10. ' d' → logprob: -7.116981029510498

Token 189: ' de' (ID: 334)
  Prédit: ' de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.3113667666912079
    2. ' des' → logprob: -1.4363667964935303
    3. 'de' → logprob: -4.561366558074951
    4. ' ' → logprob: -4.811366558074951
    5. '100' → logprob: -4.936366558074951
    6. 'des' → logprob: -6.061366558074951
    7. ' pièces' → logprob: -6.936366558074951
    8. ' ' → logprob: -8.56136703491211
    9. ' pieces' → logprob: -9.18636703491211
    10. '  ' → logprob: -9.31136703491211

Token 190: ' pièces' (ID: 49165)
  Prédit: '100'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '100' → logprob: -0.9058623909950256
    2. ' ' → logprob: -1.0308623313903809
    3. ' pièces' → logprob: -1.5308623313903809
    4. ' pieces' → logprob: -3.905862331390381
    5. 'pieces' → logprob: -6.655862331390381
    6. '1' → logprob: -7.655862331390381
    7. '10' → logprob: -9.030862808227539
    8. ' pi' → logprob: -9.280862808227539
    9. ' des' → logprob: -9.405862808227539
    10. ' coins' → logprob: -9.530862808227539

Token 191: ' de' (ID: 334)
  Prédit: ' de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.0288567915558815
    2. '100' → logprob: -4.1538567543029785
    3. 'de' → logprob: -5.0288567543029785
    4. ' ' → logprob: -5.1538567543029785
    5. '    ' → logprob: -8.903857231140137
    6. '   ' → logprob: -8.903857231140137
    7. 's' → logprob: -9.903857231140137
    8. '  ' → logprob: -10.653857231140137
    9. ' ' → logprob: -11.028857231140137
    10. 'd' → logprob: -11.278857231140137

Token 192: ' ' (ID: 220)
  Prédit: '100'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '100' → logprob: -0.2519407570362091
    2. ' ' → logprob: -1.5019407272338867
    3. '1' → logprob: -12.126940727233887
    4. '１００' → logprob: -13.126940727233887
    5. '```' → logprob: -13.501940727233887
    6. '10' → logprob: -13.501940727233887
    7. ' ' → logprob: -14.751940727233887
    8. ' hundred' → logprob: -15.314440727233887
    9. '  ' → logprob: -15.314440727233887
    10. ':' → logprob: -16.439441680908203

Token 193: '100' (ID: 1353)
  Prédit: '100'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '100' → logprob: -0.004632807336747646
    2. ' ' → logprob: -5.379632949829102
    3. '1' → logprob: -11.879632949829102
    4. '10' → logprob: -13.004632949829102
    5. '１００' → logprob: -13.129632949829102
    6. '```' → logprob: -15.192132949829102
    7. '  ' → logprob: -15.692132949829102
    8. 's' → logprob: -16.1296329498291
    9. ' hundred' → logprob: -16.1296329498291
    10. ' ' → logprob: -16.3171329498291

Token 194: ' yen' (ID: 34890)
  Prédit: ' yen'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' yen' → logprob: -0.18048635125160217
    2. 'yen' → logprob: -1.8054863214492798
    3. '円' → logprob: -8.305486679077148
    4. '   ' → logprob: -8.930486679077148
    5. ' ' → logprob: -9.180486679077148
    6. ' y' → logprob: -9.305486679077148
    7. 'y' → logprob: -10.805486679077148
    8. '       ' → logprob: -11.055486679077148
    9. 'en' → logprob: -11.180486679077148
    10. ' 円' → logprob: -11.305486679077148

Token 195: '.

' (ID: 364)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.02312120608985424
    2. '
' → logprob: -4.523121356964111
    3. '        
' → logprob: -4.773121356964111
    4. ':' → logprob: -6.898121356964111
    5. ',' → logprob: -7.523121356964111
    6. '   ' → logprob: -8.148120880126953
    7. '.' → logprob: -8.273120880126953
    8. '        ' → logprob: -8.898120880126953
    9. '      ' → logprob: -8.898120880126953
    10. '       
' → logprob: -8.898120880126953

Token 196: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.012555914930999279
    2. '        
' → logprob: -5.137556076049805
    3. 'count' → logprob: -5.762556076049805
    4. 'n' → logprob: -6.887556076049805
    5. '   ' → logprob: -6.887556076049805
    6. '
' → logprob: -8.262556076049805
    7. '    
' → logprob: -8.887556076049805
    8. 'num' → logprob: -9.137556076049805
    9. '      ' → logprob: -9.387556076049805
    10. 'tokens' → logprob: -9.387556076049805

Token 197: ' num' (ID: 2269)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.897609531879425
    2. 'num' (adapté à ' num') → logprob: -1.1476094722747803
    3. 'n' → logprob: -2.3976094722747803
    4. 'pieces' → logprob: -2.7726094722747803
    5. 'coins' → logprob: -3.0226094722747803
    6. 'nb' → logprob: -4.147609710693359
    7. 'notes' → logprob: -4.522609710693359
    8. '   ' → logprob: -5.147609710693359
    9. 'result' → logprob: -5.147609710693359
    10. 'th' → logprob: -5.147609710693359

Token 198: '_' (ID: 62)
  Prédit: '_'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.0006440493743866682
    2. '100' → logprob: -7.375644207000732
    3. '_th' → logprob: -11.250643730163574
    4. '1' → logprob: -13.625643730163574
    5. '_m' → logprob: -13.750643730163574
    6. '_b' → logprob: -14.875643730163574
    7. ' ' → logprob: -15.000643730163574
    8. '_p' → logprob: -15.375643730163574
    9. '_s' → logprob: -15.500643730163574
    10. '_t' → logprob: -15.500643730163574

Token 199: '100' (ID: 1353)
  Prédit: '100'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '100' → logprob: -0.0010847324738278985
    2. 'th' → logprob: -7.376084804534912
    3. 'b' → logprob: -8.751084327697754
    4. '_' → logprob: -8.751084327697754
    5. '_th' → logprob: -10.126084327697754
    6. '千' → logprob: -11.001084327697754
    7. 'notes' → logprob: -11.626084327697754
    8. 'sen' → logprob: -11.626084327697754
    9. '1' → logprob: -11.876084327697754
    10. 's' → logprob: -11.876084327697754

Token 200: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -9.877503907773644e-05
    2. '_' → logprob: -10.375099182128906
    3. '000' → logprob: -10.625099182128906
    4. 's' → logprob: -10.875099182128906
    5. '00' → logprob: -11.375099182128906
    6. ' =' → logprob: -11.875099182128906
    7. ' ' → logprob: -12.875099182128906
    8. ',' → logprob: -14.812599182128906
    9. '０' → logprob: -14.937599182128906
    10. '  ' → logprob: -15.187599182128906

Token 201: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0037075618747621775
    2. '=' → logprob: -5.753707408905029
    3. ' ' → logprob: -8.253707885742188
    4. 's' → logprob: -9.128707885742188
    5. '_' → logprob: -9.628707885742188
    6. ',' → logprob: -10.753707885742188
    7. 'coins' → logprob: -10.878707885742188
    8. '	' → logprob: -11.003707885742188
    9. '   ' → logprob: -11.128707885742188
    10. '  ' → logprob: -11.753707885742188

Token 202: ' change' (ID: 3343)
  Prédit: ' change'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' change' → logprob: -0.47419002652168274
    2. 'change' → logprob: -0.9741899967193604
    3. '	change' → logprob: -9.224189758300781
    4. '   ' → logprob: -11.599189758300781
    5. '(change' → logprob: -12.849189758300781
    6. ' ' → logprob: -13.599189758300781
    7. 'chang' → logprob: -14.724189758300781
    8. ' ' → logprob: -15.099189758300781
    9. '	' → logprob: -16.22418975830078
    10. '_change' → logprob: -16.47418975830078

Token 203: ' //' (ID: 602)
  Prédit: ' //'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' //' → logprob: -4.751746746478602e-05
    2. '//' → logprob: -10.12504768371582
    3. ' ' → logprob: -12.00004768371582
    4. ' ' → logprob: -14.00004768371582
    5. '   ' → logprob: -16.12504768371582
    6. ' //
' → logprob: -16.37504768371582
    7. '       ' → logprob: -17.12504768371582
    8. '  ' → logprob: -17.37504768371582
    9. ')' → logprob: -17.50004768371582
    10. '	' → logprob: -17.50004768371582

Token 204: ' ' (ID: 220)
  Prédit: '100'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '100' → logprob: -0.0010332842357456684
    2. ' ' → logprob: -6.876033306121826
    3. '   ' → logprob: -14.876032829284668
    4. '  ' → logprob: -16.376033782958984
    5. '１００' → logprob: -17.001033782958984
    6. ' ' → logprob: -17.876033782958984
    7. '1' → logprob: -18.626033782958984
    8. '    ' → logprob: -19.626033782958984
    9. '	' → logprob: -19.751033782958984
    10. '```' → logprob: -19.751033782958984

Token 205: '100' (ID: 1353)
  Prédit: '100'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '100' → logprob: -1.0280383548888494e-06
    2. ' ' → logprob: -13.875000953674316
    3. '１００' → logprob: -17.250001907348633
    4. '   ' → logprob: -19.625001907348633
    5. '1' → logprob: -20.375001907348633
    6. '  ' → logprob: -20.750001907348633
    7. '```' → logprob: -21.750001907348633
    8. '10' → logprob: -23.250001907348633
    9. '[' → logprob: -23.312501907348633
    10. '0' → logprob: -23.750001907348633

Token 206: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: 0.0
    2. '
' → logprob: -17.375
    3. '000' → logprob: -18.125
    4. '０' → logprob: -18.5
    5. ' ' → logprob: -18.75
    6. '۰' → logprob: -19.25
    7. '   ' → logprob: -20.125
    8. '٠' → logprob: -20.25
    9. '       ' → logprob: -20.625
    10. '०' → logprob: -20.9375

Token 207: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.706429123878479
    2. '       ' → logprob: -0.706429123878479
    3. '<|end|>' → logprob: -5.0814290046691895
    4. '        
' → logprob: -6.0814290046691895
    5. 'num' → logprob: -6.4564290046691895
    6. '   ' → logprob: -7.4564290046691895
    7. '    
' → logprob: -7.7064290046691895
    8. '  
' → logprob: -7.7064290046691895
    9. '
' → logprob: -7.9564290046691895
    10. ')' → logprob: -8.331429481506348

Token 208: '       ' (ID: 309)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.08590709418058395
    2. '       ' → logprob: -3.210906982421875
    3. 'change' → logprob: -4.585906982421875
    4. '\n' → logprob: -5.085906982421875
    5. ' 
' → logprob: -5.585906982421875
    6. '<|end|>' → logprob: -5.835906982421875
    7. '  
' → logprob: -6.085906982421875
    8. '' → logprob: -6.210906982421875
    9. '    
' → logprob: -6.210906982421875
    10. 'num' → logprob: -6.335906982421875

Token 209: ' change' (ID: 3343)
  Prédit: 'change'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'change' (adapté à ' change') → logprob: -0.029756855219602585
    2. ' change' → logprob: -3.529756784439087
    3. 'rest' → logprob: -13.154756546020508
    4. '	change' → logprob: -13.529756546020508
    5. 'space' → logprob: -13.904756546020508
    6. '       ' → logprob: -15.029756546020508
    7. 'remaining' → logprob: -15.154756546020508
    8. '(change' → logprob: -15.279756546020508
    9. 'num' → logprob: -15.279756546020508
    10. '
' → logprob: -15.404756546020508

Token 210: ' %=' (ID: 117035)
  Prédit: ' %='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' %=' → logprob: -0.017855016514658928
    2. ' =' → logprob: -4.142855167388916
    3. '%' → logprob: -7.517855167388916
    4. ' -=' → logprob: -7.642855167388916
    5. '=' → logprob: -7.892855167388916
    6. ' %' → logprob: -8.517854690551758
    7. '%=' → logprob: -8.642854690551758
    8. ' ' → logprob: -10.642854690551758
    9. ' ' → logprob: -11.517854690551758
    10. '    ' → logprob: -12.392854690551758

Token 211: ' ' (ID: 220)
  Prédit: '100'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '100' → logprob: -0.0021855919621884823
    2. ' ' → logprob: -6.127185821533203
    3. '１００' → logprob: -15.377185821533203
    4. '   ' → logprob: -16.127185821533203
    5. '  ' → logprob: -17.314685821533203
    6. '```' → logprob: -17.627185821533203
    7. '1' → logprob: -17.689685821533203
    8. ' ' → logprob: -17.877185821533203
    9. '`' → logprob: -18.252185821533203
    10. '	' → logprob: -18.814685821533203

Token 212: '100' (ID: 1353)
  Prédit: '100'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '100' → logprob: -4.008129963040119e-06
    2. ' ' → logprob: -12.500003814697266
    3. '１００' → logprob: -16.125003814697266
    4. '1' → logprob: -16.125003814697266
    5. '   ' → logprob: -17.625003814697266
    6. '```' → logprob: -17.625003814697266
    7. '10' → logprob: -18.250003814697266
    8. '  ' → logprob: -18.625003814697266
    9. '000' → logprob: -19.687503814697266
    10. '
' → logprob: -19.875003814697266

Token 213: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -5.512236498361744e-07
    2. ' ' → logprob: -14.875000953674316
    3. '000' → logprob: -17.375
    4. '00' → logprob: -18.0
    5. ',' → logprob: -18.875
    6. '   ' → logprob: -19.0625
    7. '```' → logprob: -19.8125
    8. '100' → logprob: -19.875
    9. '       ' → logprob: -19.875
    10. '۰' → logprob: -20.0625

Token 214: '

' (ID: 279)
  Prédit: 'num'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'num' → logprob: -0.5453588962554932
    2. '       ' → logprob: -1.1703588962554932
    3. '
' → logprob: -2.545358896255493
    4. '        
' → logprob: -4.045358657836914
    5. '   ' → logprob: -5.295358657836914
    6. ' num' → logprob: -5.920358657836914
    7. '    
' → logprob: -6.170358657836914
    8. '  
' → logprob: -6.295358657836914
    9. '	num' → logprob: -7.545358657836914
    10. '
' → logprob: -7.920358657836914

Token 215: '       ' (ID: 309)
  Prédit: 'num'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'num' → logprob: -0.04783432185649872
    2. '       ' → logprob: -3.6728343963623047
    3. '   ' → logprob: -4.172834396362305
    4. '
' → logprob: -5.297834396362305
    5. ' num' → logprob: -7.672834396362305
    6. '        
' → logprob: -8.422834396362305
    7. '    
' → logprob: -9.422834396362305
    8. ' ' → logprob: -10.422834396362305
    9. 'n' → logprob: -10.922834396362305
    10. '  
' → logprob: -10.922834396362305

Token 216: ' num' (ID: 2269)
  Prédit: 'num'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'num' (adapté à ' num') → logprob: -6.704273118884885e-07
    2. ' num' → logprob: -14.500000953674316
    3. '500' → logprob: -16.5
    4. '   ' → logprob: -17.25
    5. '
' → logprob: -18.125
    6. '       ' → logprob: -19.125
    7. '	num' → logprob: -19.125
    8. '        
' → logprob: -20.25
    9. '    
' → logprob: -20.5
    10. 'nu' → logprob: -21.0

Token 217: '_' (ID: 62)
  Prédit: '_'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.00011594036914175376
    2. '500' → logprob: -9.125116348266602
    3. ' _' → logprob: -12.125116348266602
    4. ' ' → logprob: -14.250116348266602
    5. '=' → logprob: -15.375116348266602
    6. '5' → logprob: -15.750116348266602
    7. '	' → logprob: -15.875116348266602
    8. ' =' → logprob: -15.875116348266602
    9. '   ' → logprob: -16.5001163482666
    10. '```' → logprob: -17.3751163482666

Token 218: '500' (ID: 3234)
  Prédit: '500'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '500' → logprob: -1.4140441635390744e-05
    2. '5' → logprob: -11.500014305114746
    3. ' ' → logprob: -12.500014305114746
    4. '50' → logprob: -15.875014305114746
    5. 'five' → logprob: -18.18751335144043
    6. '```' → logprob: -18.50001335144043
    7. '  ' → logprob: -18.56251335144043
    8. '   ' → logprob: -18.68751335144043
    9. '501' → logprob: -18.68751335144043
    10. '٥' → logprob: -18.75001335144043

Token 219: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.029751529917120934
    2. '=' → logprob: -3.5297515392303467
    3. ' ' → logprob: -14.654751777648926
    4. ' ' → logprob: -14.904751777648926
    5. ',' → logprob: -16.27975082397461
    6. ' =
' → logprob: -17.27975082397461
    7. ')' → logprob: -17.27975082397461
    8. '	' → logprob: -17.65475082397461
    9. '＝' → logprob: -18.27975082397461
    10. ' =)' → logprob: -18.40475082397461

Token 220: ' change' (ID: 3343)
  Prédit: ' change'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' change' → logprob: -0.04858873412013054
    2. 'change' → logprob: -3.048588752746582
    3. ' ' → logprob: -14.673588752746582
    4. '	change' → logprob: -14.923588752746582
    5. '(change' → logprob: -14.923588752746582
    6. ' ' → logprob: -16.173587799072266
    7. '   ' → logprob: -16.423587799072266
    8. '.change' → logprob: -18.798587799072266
    9. 'ch' → logprob: -18.798587799072266
    10. '0' → logprob: -18.798587799072266

Token 221: ' //' (ID: 602)
  Prédit: ' //'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' //' → logprob: -0.02331721968948841
    2. '//' → logprob: -3.773317337036133
    3. '//=' → logprob: -9.648317337036133
    4. ' ' → logprob: -12.398317337036133
    5. ' ' → logprob: -13.523317337036133
    6. '=' → logprob: -13.773317337036133
    7. '#' → logprob: -15.148317337036133
    8. ' =' → logprob: -16.023317337036133
    9. ' //
' → logprob: -16.898317337036133
    10. ')' → logprob: -16.898317337036133

Token 222: ' ' (ID: 220)
  Prédit: '500'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '500' → logprob: -0.008639862760901451
    2. ' ' → logprob: -4.758639812469482
    3. '5' → logprob: -10.75864028930664
    4. '   ' → logprob: -13.13364028930664
    5. ' ' → logprob: -14.13364028930664
    6. '  ' → logprob: -14.50864028930664
    7. '50' → logprob: -15.38364028930664
    8. '```' → logprob: -15.63364028930664
    9. '	' → logprob: -16.00864028930664
    10. '`' → logprob: -16.07114028930664

Token 223: '500' (ID: 3234)
  Prédit: '500'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '500' → logprob: -9.253090865968261e-06
    2. ' ' → logprob: -11.750009536743164
    3. '5' → logprob: -13.625009536743164
    4. '   ' → logprob: -17.125009536743164
    5. '  ' → logprob: -17.625009536743164
    6. '50' → logprob: -17.750009536743164
    7. '```' → logprob: -19.000009536743164
    8. '`' → logprob: -20.125009536743164
    9. '501' → logprob: -20.312509536743164
    10. '
' → logprob: -20.312509536743164

Token 224: '
' (ID: 198)
  Prédit: 'change'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'change' → logprob: -0.4964740574359894
    2. '       ' → logprob: -1.121474027633667
    3. ' change' → logprob: -2.996474027633667
    4. '
' → logprob: -4.371474266052246
    5. '	change' → logprob: -6.871474266052246
    6. '   ' → logprob: -7.746474266052246
    7. '<|end|>' → logprob: -7.746474266052246
    8. '(change' → logprob: -8.121474266052246
    9. ' ' → logprob: -8.871474266052246
    10. '        
' → logprob: -9.371474266052246

Token 225: '       ' (ID: 309)
  Prédit: 'change'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'change' → logprob: -0.2762281596660614
    2. '       ' → logprob: -1.5262281894683838
    3. ' change' → logprob: -3.776228189468384
    4. '	change' → logprob: -7.276227951049805
    5. '(change' → logprob: -8.401227951049805
    6. '<|end|>' → logprob: -9.526227951049805
    7. '   ' → logprob: -10.276227951049805
    8. '
' → logprob: -11.276227951049805
    9. ' ' → logprob: -11.276227951049805
    10. '.change' → logprob: -11.901227951049805

Token 226: ' change' (ID: 3343)
  Prédit: 'change'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'change' (adapté à ' change') → logprob: -0.01818517968058586
    2. ' change' → logprob: -4.018185138702393
    3. '       ' → logprob: -10.39318561553955
    4. '	change' → logprob: -12.76818561553955
    5. '   ' → logprob: -14.01818561553955
    6. '
' → logprob: -15.01818561553955
    7. ' ' → logprob: -15.64318561553955
    8. '```' → logprob: -16.018184661865234
    9. '.change' → logprob: -16.643184661865234
    10. '(change' → logprob: -16.643184661865234

Token 227: ' %=' (ID: 117035)
  Prédit: '%='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '%=' → logprob: -0.16092178225517273
    2. ' %=' → logprob: -1.9109218120574951
    3. '%' → logprob: -7.285921573638916
    4. '=' → logprob: -11.785922050476074
    5. ' %' → logprob: -12.535922050476074
    6. ' ' → logprob: -13.910922050476074
    7. ')%' → logprob: -16.785921096801758
    8. '％' → logprob: -16.785921096801758
    9. '٪' → logprob: -16.910921096801758
    10. '	' → logprob: -17.535921096801758

Token 228: ' ' (ID: 220)
  Prédit: '500'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '500' → logprob: -0.0002798087371047586
    2. ' ' → logprob: -8.250279426574707
    3. '5' → logprob: -11.000279426574707
    4. '50' → logprob: -13.375279426574707
    5. '   ' → logprob: -16.000280380249023
    6. '  ' → logprob: -17.000280380249023
    7. '100' → logprob: -17.500280380249023
    8. ' ' → logprob: -18.000280380249023
    9. '501' → logprob: -18.125280380249023
    10. '    ' → logprob: -18.875280380249023

Token 229: '500' (ID: 3234)
  Prédit: '500'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '500' → logprob: -7.226628895296017e-06
    2. ' ' → logprob: -12.125007629394531
    3. '5' → logprob: -13.625007629394531
    4. '50' → logprob: -14.625007629394531
    5. '100' → logprob: -17.87500762939453
    6. '   ' → logprob: -19.25000762939453
    7. '501' → logprob: -19.50000762939453
    8. '  ' → logprob: -20.00000762939453
    9. '```' → logprob: -20.12500762939453
    10. '५०' → logprob: -20.37500762939453

Token 230: '

' (ID: 279)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7400429248809814
    2. 'num' → logprob: -0.7400429248809814
    3. '
' → logprob: -3.3650429248809814
    4. '        
' → logprob: -5.115042686462402
    5. '   ' → logprob: -6.365042686462402
    6. ' num' → logprob: -6.365042686462402
    7. '  
' → logprob: -7.240042686462402
    8. '    
' → logprob: -7.365042686462402
    9. '

' → logprob: -9.365042686462402
    10. ' 
' → logprob: -9.990042686462402

Token 231: '       ' (ID: 309)
  Prédit: 'num'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'num' → logprob: -0.0007119550718925893
    2. '       ' → logprob: -7.500711917877197
    3. ' num' → logprob: -9.250712394714355
    4. '   ' → logprob: -9.750712394714355
    5. ' ' → logprob: -13.625712394714355
    6. '	num' → logprob: -13.750712394714355
    7. '     ' → logprob: -14.250712394714355
    8. '        
' → logprob: -14.250712394714355
    9. '
' → logprob: -14.875712394714355
    10. '    ' → logprob: -15.375712394714355

Token 232: ' num' (ID: 2269)
  Prédit: 'num'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'num' (adapté à ' num') → logprob: -2.5776860184123507e-06
    2. ' num' → logprob: -13.25000286102295
    3. '100' → logprob: -14.37500286102295
    4. '   ' → logprob: -16.250001907348633
    5. '       ' → logprob: -17.875001907348633
    6. '
' → logprob: -18.875001907348633
    7. 'nu' → logprob: -19.125001907348633
    8. '500' → logprob: -20.000001907348633
    9. '	num' → logprob: -20.125001907348633
    10. 'n' → logprob: -20.250001907348633

Token 233: '_' (ID: 62)
  Prédit: '_'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -5.8961017202818766e-05
    2. '100' → logprob: -9.875059127807617
    3. ' _' → logprob: -12.000059127807617
    4. '```' → logprob: -14.375059127807617
    5. ' ' → logprob: -15.625059127807617
    6. '   ' → logprob: -15.750059127807617
    7. '=' → logprob: -16.625059127807617
    8. ' =' → logprob: -17.125059127807617
    9. '500' → logprob: -17.250059127807617
    10. '_num' → logprob: -17.375059127807617

Token 234: '100' (ID: 1353)
  Prédit: '100'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '100' → logprob: -1.6240566083070007e-06
    2. '1' → logprob: -13.750001907348633
    3. ' ' → logprob: -14.625001907348633
    4. '10' → logprob: -17.500001907348633
    5. '```' → logprob: -18.500001907348633
    6. '１００' → logprob: -18.625001907348633
    7. '   ' → logprob: -19.625001907348633
    8. 'hund' → logprob: -19.875001907348633
    9. '  ' → logprob: -20.375001907348633
    10. 'num' → logprob: -20.750001907348633

Token 235: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.10739953815937042
    2. ' =' → logprob: -2.3573994636535645
    3. '0' → logprob: -5.7323994636535645
    4. ' ' → logprob: -6.7323994636535645
    5. '100' → logprob: -6.7323994636535645
    6. '//=' → logprob: -7.6073994636535645
    7. '//' → logprob: -7.9823994636535645
    8. ' //' → logprob: -8.232399940490723
    9. '   ' → logprob: -9.232399940490723
    10. '#' → logprob: -9.482399940490723

Token 236: ' change' (ID: 3343)
  Prédit: ' change'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' change' → logprob: -0.6931481957435608
    2. 'change' → logprob: -0.6931481957435608
    3. '	change' → logprob: -14.818148612976074
    4. ' ' → logprob: -15.193148612976074
    5. '(change' → logprob: -15.443148612976074
    6. '   ' → logprob: -15.693148612976074
    7. '.change' → logprob: -18.693147659301758
    8. '_change' → logprob: -19.068147659301758
    9. '  ' → logprob: -19.443147659301758
    10. ' ' → logprob: -19.443147659301758

Token 237: ' //' (ID: 602)
  Prédit: ' //'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' //' → logprob: -0.06995699554681778
    2. '//' → logprob: -2.6949570178985596
    3. '//=' → logprob: -11.31995677947998
    4. ' ' → logprob: -12.56995677947998
    5. ' ' → logprob: -12.69495677947998
    6. '=' → logprob: -13.56995677947998
    7. '#' → logprob: -15.44495677947998
    8. ' //
' → logprob: -15.81995677947998
    9. '   ' → logprob: -16.694957733154297
    10. '```' → logprob: -17.194957733154297

Token 238: ' ' (ID: 220)
  Prédit: '100'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '100' → logprob: -0.0006272526225075126
    2. ' ' → logprob: -7.375627040863037
    3. '1' → logprob: -15.125627517700195
    4. '   ' → logprob: -15.625627517700195
    5. '10' → logprob: -16.125627517700195
    6. '  ' → logprob: -17.313127517700195
    7. '１００' → logprob: -17.375627517700195
    8. '
' → logprob: -17.438127517700195
    9. '```' → logprob: -17.625627517700195
    10. ' ' → logprob: -17.688127517700195

Token 239: '100' (ID: 1353)
  Prédit: '100'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '100' → logprob: -1.8624639324116288e-06
    2. ' ' → logprob: -13.375001907348633
    3. '1' → logprob: -16.000001907348633
    4. '10' → logprob: -16.500001907348633
    5. '１００' → logprob: -19.250001907348633
    6. '   ' → logprob: -19.500001907348633
    7. '```' → logprob: -19.875001907348633
    8. '  ' → logprob: -20.250001907348633
    9. '0' → logprob: -21.812501907348633
    10. '
' → logprob: -22.000001907348633

Token 240: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.13056208193302155
    2. 'print' → logprob: -2.1305620670318604
    3. ' print' → logprob: -6.5055623054504395
    4. '        
' → logprob: -7.2555623054504395
    5. '   ' → logprob: -7.7555623054504395
    6. '
' → logprob: -8.630561828613281
    7. '<|end|>' → logprob: -9.130561828613281
    8. '#' → logprob: -9.255561828613281
    9. '      ' → logprob: -9.255561828613281
    10. '.' → logprob: -9.505561828613281

Token 241: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6431279182434082
    2. 'print' → logprob: -0.7681279182434082
    3. ' print' → logprob: -5.643127918243408
    4. 'change' → logprob: -5.643127918243408
    5. '        ' → logprob: -6.768127918243408
    6. '        
' → logprob: -7.143127918243408
    7. ' change' → logprob: -7.893127918243408
    8. '   ' → logprob: -8.89312744140625
    9. '	print' → logprob: -9.01812744140625
    10. '      ' → logprob: -9.01812744140625

Token 242: ' change' (ID: 3343)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.23956087231636047
    2. 'change' (adapté à ' change') → logprob: -2.114560842514038
    3. ' print' → logprob: -2.739560842514038
    4. ' change' → logprob: -3.614560842514038
    5. '       ' → logprob: -7.239561080932617
    6. '	change' → logprob: -10.864561080932617
    7. '        ' → logprob: -11.239561080932617
    8. '	print' → logprob: -11.864561080932617
    9. '   ' → logprob: -11.864561080932617
    10. '#' → logprob: -11.989561080932617

Token 243: ' %=' (ID: 117035)
  Prédit: '%='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '%=' → logprob: -0.05614127218723297
    2. ' %=' → logprob: -3.1811413764953613
    3. '%' → logprob: -4.431141376495361
    4. '=' → logprob: -6.806141376495361
    5. ' %' → logprob: -10.056140899658203
    6. ' =' → logprob: -13.306140899658203
    7. ' ' → logprob: -14.306140899658203
    8. '％' → logprob: -14.556140899658203
    9. '-=' → logprob: -14.681140899658203
    10. '٪' → logprob: -14.806140899658203

Token 244: ' ' (ID: 220)
  Prédit: '100'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '100' → logprob: -9.088346359931165e-07
    2. ' ' → logprob: -14.000000953674316
    3. '１００' → logprob: -19.0
    4. '1' → logprob: -19.25
    5. '10' → logprob: -20.25
    6. '   ' → logprob: -20.625
    7. '
' → logprob: -20.875
    8. '```' → logprob: -21.125
    9. '0' → logprob: -21.875
    10. '  ' → logprob: -22.5

Token 245: '100' (ID: 1353)
  Prédit: '100'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '100' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -16.0
    3. '１００' → logprob: -20.625
    4. '1' → logprob: -21.25
    5. '0' → logprob: -23.25
    6. '10' → logprob: -23.625
    7. '   ' → logprob: -24.0
    8. ' hundred' → logprob: -24.875
    9. '```' → logprob: -24.875
    10. '
' → logprob: -25.0

Token 246: '

' (ID: 279)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.04991769418120384
    2. 'print' → logprob: -3.674917697906494
    3. '
' → logprob: -4.299917697906494
    4. '        
' → logprob: -4.799917697906494
    5. '   ' → logprob: -7.049917697906494
    6. '    
' → logprob: -7.799917697906494
    7. ' print' → logprob: -9.299917221069336
    8. '  
' → logprob: -9.799917221069336
    9. '       
' → logprob: -11.049917221069336
    10. '      
' → logprob: -11.299917221069336

Token 247: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.21479593217372894
    2. 'print' → logprob: -1.7147959470748901
    3. ' print' → logprob: -4.96479606628418
    4. '   ' → logprob: -5.21479606628418
    5. '        
' → logprob: -7.58979606628418
    6. '    
' → logprob: -8.46479606628418
    7. '
' → logprob: -9.71479606628418
    8. '	print' → logprob: -10.33979606628418
    9. 'total' → logprob: -10.58979606628418
    10. '  
' → logprob: -11.58979606628418

Token 248: ' #' (ID: 1069)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -3.619311974034645e-05
    2. '       ' → logprob: -11.125036239624023
    3. 'total' → logprob: -11.250036239624023
    4. ' print' → logprob: -11.750036239624023
    5. 'result' → logprob: -14.750036239624023
    6. '        
' → logprob: -16.500036239624023
    7. 'pr' → logprob: -17.250036239624023
    8. 'prin' → logprob: -17.375036239624023
    9. 'num' → logprob: -18.250036239624023
    10. '
' → logprob: -18.500036239624023

Token 249: ' change' (ID: 3343)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.014696131460368633
    2. ' print' → logprob: -4.26469612121582
    3. 'total' → logprob: -7.88969612121582
    4. '       ' → logprob: -9.38969612121582
    5. ' total' → logprob: -10.38969612121582
    6. 'result' → logprob: -10.38969612121582
    7. '   ' → logprob: -11.63969612121582
    8. 'num' → logprob: -14.26469612121582
    9. ' result' → logprob: -14.51469612121582
    10. 'prin' → logprob: -14.51469612121582

Token 250: ' doit' (ID: 21822)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.03645561262965202
    2. '==' → logprob: -3.5364556312561035
    3. ' =' → logprob: -5.7864556312561035
    4. '=' → logprob: -6.1614556312561035
    5. ' ' → logprob: -7.1614556312561035
    6. ' #' → logprob: -8.536455154418945
    7. ' +=' → logprob: -8.786455154418945
    8. 'print' → logprob: -9.036455154418945
    9. 's' → logprob: -9.786455154418945
    10. ' !=' → logprob: -10.411455154418945

Token 251: ' être' (ID: 9104)
  Prédit: ' être'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' être' → logprob: -0.6225250959396362
    2. 'être' → logprob: -1.4975250959396362
    3. '_' → logprob: -1.8725250959396362
    4. ' rester' → logprob: -3.497525215148926
    5. ' ==' → logprob: -4.247525215148926
    6. '=' → logprob: -4.747525215148926
    7. ' ' → logprob: -4.872525215148926
    8. ' etre' → logprob: -5.122525215148926
    9. ' toujours' → logprob: -5.872525215148926
    10. '==' → logprob: -5.997525215148926

Token 252: ' nul' (ID: 64435)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0001605115394340828
    2. ' ' → logprob: -8.750160217285156
    3. '=' → logprob: -14.125160217285156
    4. 'exact' → logprob: -15.000160217285156
    5. ' égal' → logprob: -15.250160217285156
    6. 'égal' → logprob: -15.875160217285156
    7. 'zero' → logprob: -16.000160217285156
    8. '_' → logprob: -16.500160217285156
    9. ' zéro' → logprob: -16.625160217285156
    10. '０' → logprob: -16.625160217285156

Token 253: ' à' (ID: 1221)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.322027325630188
    2. '
' → logprob: -2.3220272064208984
    3. ',' → logprob: -2.8220272064208984
    4. '<|end|>' → logprob: -3.1970272064208984
    5. '        
' → logprob: -3.5720272064208984
    6. '.' → logprob: -4.072027206420898
    7. ' ' → logprob: -5.072027206420898
    8. '#' → logprob: -5.197027206420898
    9. '        ' → logprob: -5.197027206420898
    10. ' if' → logprob: -5.947027206420898

Token 254: ' ce' (ID: 2357)
  Prédit: 'ce'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ce' → logprob: -0.10829628258943558
    2. 'la' → logprob: -3.7332963943481445
    3. 'this' → logprob: -3.7332963943481445
    4. ' ce' → logprob: -3.8582963943481445
    5. 'c' → logprob: -4.3582963943481445
    6. '0' → logprob: -4.7332963943481445
    7. ' ' → logprob: -5.4832963943481445
    8. ' la' → logprob: -5.7332963943481445
    9. '   ' → logprob: -5.8582963943481445
    10. ' this' → logprob: -7.8582963943481445

Token 255: ' stade' (ID: 113944)
  Prédit: 'point'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'point' → logprob: -0.05052434280514717
    2. ' point' → logprob: -3.3005242347717285
    3. ' stade' → logprob: -4.5505242347717285
    4. '0' → logprob: -6.6755242347717285
    5. 'this' → logprob: -8.550524711608887
    6. 'stage' → logprob: -9.050524711608887
    7. 'st' → logprob: -9.175524711608887
    8. 'Point' → logprob: -10.425524711608887
    9. '       ' → logprob: -11.300524711608887
    10. '100' → logprob: -11.300524711608887

Token 256: ' puisqu' (ID: 97464)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.01268857903778553
    2. '        
' → logprob: -5.137688636779785
    3. 'print' → logprob: -6.387688636779785
    4. '   ' → logprob: -6.512688636779785
    5. '
' → logprob: -6.637688636779785
    6. ',' → logprob: -7.762688636779785
    7. ' if' → logprob: -8.137688636779785
    8. '.' → logprob: -8.512688636779785
    9. '        ' → logprob: -8.512688636779785
    10. '    
' → logprob: -8.762688636779785

Token 257: ''on' (ID: 25812)
  Prédit: ''on'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''on' → logprob: -0.5645837783813477
    2. ''il' → logprob: -1.9395837783813477
    3. ' que' → logprob: -2.1895837783813477
    4. 'on' → logprob: -2.3145837783813477
    5. 'que' → logprob: -3.0645837783813477
    6. ' on' → logprob: -4.064583778381348
    7. '       ' → logprob: -6.314583778381348
    8. ''' → logprob: -6.314583778381348
    9. '’on' → logprob: -6.689583778381348
    10. '   ' → logprob: -6.814583778381348

Token 258: ' travaille' (ID: 92596)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.4534812867641449
    2. 'n' → logprob: -2.0784811973571777
    3. 'rend' → logprob: -2.3284811973571777
    4. 'r' → logprob: -2.9534811973571777
    5. 'ne' → logprob: -3.5784811973571777
    6. 'trav' → logprob: -3.9534811973571777
    7. 'util' → logprob: -4.453481197357178
    8. 'don' → logprob: -4.828481197357178
    9. 'g' → logprob: -5.203481197357178
    10. ' travaille' → logprob: -5.328481197357178

Token 259: ' en' (ID: 469)
  Prédit: 'avec'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'avec' → logprob: -0.7793679237365723
    2. ' avec' → logprob: -1.2793679237365723
    3. 'sur' → logprob: -1.5293679237365723
    4. ' uniquement' → logprob: -3.9043679237365723
    5. ' sur' → logprob: -4.404367923736572
    6. '   ' → logprob: -5.029367923736572
    7. 'uni' → logprob: -6.154367923736572
    8. ' with' → logprob: -6.779367923736572
    9. ' ' → logprob: -7.029367923736572
    10. '       ' → logprob: -7.154367923736572

Token 260: ' multiples' (ID: 70720)
  Prédit: 'multip'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'multip' → logprob: -0.21085788309574127
    2. 'mon' → logprob: -2.83585786819458
    3. 'ent' → logprob: -3.08585786819458
    4. 'unit' → logprob: -3.71085786819458
    5. 'cent' → logprob: -4.58585786819458
    6. '100' → logprob: -4.58585786819458
    7. 'nombre' → logprob: -5.21085786819458
    8. 'mont' → logprob: -5.46085786819458
    9. 'multiple' → logprob: -5.46085786819458
    10. 'val' → logprob: -5.58585786819458

Token 261: ' de' (ID: 334)
  Prédit: ' de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.3588474988937378
    2. 'de' → logprob: -1.2338474988937378
    3. '       ' → logprob: -5.108847618103027
    4. '   ' → logprob: -5.608847618103027
    5. 'd' → logprob: -7.983847618103027
    6. ' of' → logprob: -9.358847618103027
    7. '100' → logprob: -9.858847618103027
    8. ' ' → logprob: -10.358847618103027
    9. ' ' → logprob: -10.483847618103027
    10. ' d' → logprob: -10.733847618103027

Token 262: ' ' (ID: 220)
  Prédit: '100'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '100' → logprob: -0.0017037445213645697
    2. ' ' → logprob: -6.37670373916626
    3. '10' → logprob: -14.876704216003418
    4. ' ' → logprob: -15.501704216003418
    5. ' hundred' → logprob: -15.626704216003418
    6. 'cent' → logprob: -15.876704216003418
    7. 'hund' → logprob: -15.876704216003418
    8. '```' → logprob: -15.876704216003418
    9. '１００' → logprob: -16.2517032623291
    10. '   ' → logprob: -16.6267032623291

Token 263: '100' (ID: 1353)
  Prédit: '100'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '100' → logprob: -0.0010332842357456684
    2. ' ' → logprob: -6.876033306121826
    3. '10' → logprob: -15.251032829284668
    4. '1' → logprob: -16.876033782958984
    5. '```' → logprob: -17.126033782958984
    6. ' hundred' → logprob: -17.251033782958984
    7. ' ' → logprob: -17.376033782958984
    8. '   ' → logprob: -17.501033782958984
    9. '  ' → logprob: -17.626033782958984
    10. '１００' → logprob: -17.751033782958984

Token 264: '.

' (ID: 364)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.13048727810382843
    2. 'print' → logprob: -2.1304872035980225
    3. '        
' → logprob: -6.005487442016602
    4. ' print' → logprob: -8.005487442016602
    5. '   ' → logprob: -8.380487442016602
    6. '        ' → logprob: -9.255487442016602
    7. '
' → logprob: -9.505487442016602
    8. '    
' → logprob: -9.630487442016602
    9. '      ' → logprob: -10.005487442016602
    10. ',' → logprob: -10.380487442016602

Token 265: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.8939260244369507
    2. '   ' → logprob: -1.0189260244369507
    3. 'print' → logprob: -1.5189260244369507
    4. ' print' → logprob: -5.14392614364624
    5. '    
' → logprob: -5.64392614364624
    6. '        
' → logprob: -6.89392614364624
    7. '
' → logprob: -7.64392614364624
    8. '    ' → logprob: -10.268925666809082
    9. '	print' → logprob: -10.393925666809082
    10. '  
' → logprob: -10.518925666809082

Token 266: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.005628462415188551
    2. ' print' → logprob: -5.38062858581543
    3. 'total' → logprob: -7.50562858581543
    4. '       ' → logprob: -7.75562858581543
    5. 'result' → logprob: -11.25562858581543
    6. ' total' → logprob: -11.63062858581543
    7. '        
' → logprob: -12.38062858581543
    8. 'num' → logprob: -13.88062858581543
    9. '   ' → logprob: -14.88062858581543
    10. 'count' → logprob: -14.88062858581543

Token 267: '(num' (ID: 15828)
  Prédit: '(num'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(num' → logprob: -0.00046546570956707
    2. '(' → logprob: -8.125465393066406
    3. '(f' → logprob: -8.875465393066406
    4. 'num' → logprob: -10.625465393066406
    5. ' (' → logprob: -13.250465393066406
    6. 'f' → logprob: -13.750465393066406
    7. '(n' → logprob: -14.500465393066406
    8. '((' → logprob: -14.625465393066406
    9. ' num' → logprob: -14.625465393066406
    10. '()' → logprob: -14.875465393066406

Token 268: '_' (ID: 62)
  Prédit: '_'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -1.3425219549390022e-05
    2. ')_' → logprob: -11.87501335144043
    3. '100' → logprob: -12.50001335144043
    4. ' _' → logprob: -14.00001335144043
    5. ')' → logprob: -14.12501335144043
    6. '_)' → logprob: -14.62501335144043
    7. '_num' → logprob: -15.87501335144043
    8. '_
' → logprob: -16.37501335144043
    9. '```' → logprob: -16.50001335144043
    10. '_

' → logprob: -16.50001335144043

Token 269: '100' (ID: 1353)
  Prédit: '100'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '100' → logprob: -8.537868779967539e-06
    2. '1' → logprob: -12.000008583068848
    3. '10' → logprob: -13.625008583068848
    4. ' ' → logprob: -14.875008583068848
    5. '_' → logprob: -15.000008583068848
    6. '１００' → logprob: -15.125008583068848
    7. '000' → logprob: -16.68750762939453
    8. 'num' → logprob: -17.18750762939453
    9. '```' → logprob: -17.25000762939453
    10. 's' → logprob: -17.81250762939453

Token 270: ',' (ID: 11)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0005718595930375159
    2. ',' → logprob: -8.125572204589844
    3. '_' → logprob: -9.125572204589844
    4. ')' → logprob: -9.500572204589844
    5. '+' → logprob: -10.375572204589844
    6. ',num' → logprob: -10.750572204589844
    7. '   ' → logprob: -11.750572204589844
    8. ' +' → logprob: -12.250572204589844
    9. '
' → logprob: -12.375572204589844
    10. ' ' → logprob: -13.000572204589844

Token 271: ' num' (ID: 2269)
  Prédit: 'num'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'num' → logprob: -0.0004462812503334135
    2. ' num' → logprob: -7.750446319580078
    3. '500' → logprob: -11.625446319580078
    4. ',num' → logprob: -13.625446319580078
    5. '"' → logprob: -13.875446319580078
    6. '(num' → logprob: -14.125446319580078
    7. ' ' → logprob: -14.375446319580078
    8. '    ' → logprob: -14.625446319580078
    9. '     ' → logprob: -14.625446319580078
    10. 'nu' → logprob: -14.875446319580078

Token 272: '_' (ID: 62)
  Prédit: '_'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.0013453540159389377
    2. '500' → logprob: -6.626345157623291
    3. '5' → logprob: -11.37634563446045
    4. ',' → logprob: -13.50134563446045
    5. 'num' → logprob: -13.50134563446045
    6. '50' → logprob: -13.75134563446045
    7. ' ' → logprob: -13.75134563446045
    8. '_,' → logprob: -13.87634563446045
    9. ' _' → logprob: -14.12634563446045
    10. '0' → logprob: -15.25134563446045

Token 273: '500' (ID: 3234)
  Prédit: '500'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '500' → logprob: -8.137130498653278e-05
    2. '5' → logprob: -9.500081062316895
    3. '50' → logprob: -12.125081062316895
    4. '0' → logprob: -15.250081062316895
    5. ' ' → logprob: -15.250081062316895
    6. 'num' → logprob: -15.250081062316895
    7. '100' → logprob: -16.81258201599121
    8. '_' → logprob: -16.93758201599121
    9. '
' → logprob: -17.56258201599121
    10. '```' → logprob: -17.56258201599121

Token 274: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.04360843822360039
    2. ',num' → logprob: -3.1686084270477295
    3. ' ,' → logprob: -7.418608665466309
    4. ' num' → logprob: -12.418608665466309
    5. 'num' → logprob: -13.043608665466309
    6. ')' → logprob: -14.043608665466309
    7. ',n' → logprob: -14.293608665466309
    8. ',end' → logprob: -14.918608665466309
    9. ',
' → logprob: -15.293608665466309
    10. '[num' → logprob: -15.543608665466309

Token 275: ' num' (ID: 2269)
  Prédit: 'num'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'num' → logprob: -0.0010328111238777637
    2. ' num' → logprob: -6.876032829284668
    3. ',num' → logprob: -17.75103187561035
    4. '	num' → logprob: -18.00103187561035
    5. '(num' → logprob: -18.25103187561035
    6. 'nu' → logprob: -18.50103187561035
    7. ' ' → logprob: -18.87603187561035
    8. '[num' → logprob: -19.25103187561035
    9. '$num' → logprob: -19.50103187561035
    10. 'n' → logprob: -19.62603187561035

Token 276: '_' (ID: 62)
  Prédit: '_'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.00021295747137628496
    2. '0' → logprob: -8.500212669372559
    3. '100' → logprob: -12.000212669372559
    4. '_
' → logprob: -13.875212669372559
    5. ' _' → logprob: -14.250212669372559
    6. '_)' → logprob: -14.500212669372559
    7. ')_' → logprob: -15.500212669372559
    8. '-' → logprob: -15.625212669372559
    9. '_

' → logprob: -15.625212669372559
    10. '000' → logprob: -16.375213623046875

Token 277: '100' (ID: 1353)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00035095500061288476
    2. '100' → logprob: -8.000350952148438
    3. '000' → logprob: -11.500350952148438
    4. '00' → logprob: -12.625350952148438
    5. 'num' → logprob: -14.250350952148438
    6. '```' → logprob: -15.500350952148438
    7. ' ' → logprob: -15.625350952148438
    8. 'int' → logprob: -15.750350952148438
    9. ')' → logprob: -15.750350952148438
    10. 'k' → logprob: -16.375350952148438

Token 278: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.3152685761451721
    2. ')' → logprob: -1.3152685165405273
    3. ',' → logprob: -6.690268516540527
    4. '_' → logprob: -7.940268516540527
    5. ',num' → logprob: -9.065268516540527
    6. '_)' → logprob: -9.190268516540527
    7. '+' → logprob: -10.190268516540527
    8. ')
' → logprob: -10.815268516540527
    9. ',)' → logprob: -11.190268516540527
    10. '*num' → logprob: -11.190268516540527

Token 279: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.4736459888808895e-05
    2. ' )' → logprob: -11.250014305114746
    3. ',' → logprob: -14.625014305114746
    4. ')
' → logprob: -14.750014305114746
    5. ',)' → logprob: -14.875014305114746
    6. ')`' → logprob: -15.500014305114746
    7. ')}' → logprob: -16.500015258789062
    8. '))' → logprob: -16.750015258789062
    9. '`)' → logprob: -17.250015258789062
    10. '),' → logprob: -17.250015258789062

Token 280: 'if' (ID: 366)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 281: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.021436309441924095
    2. '__' → logprob: -4.0214362144470215
    3. '_' → logprob: -6.0214362144470215
    4. ' _' → logprob: -7.5214362144470215
    5. ' ' → logprob: -8.77143669128418
    6. ' main' → logprob: -9.89643669128418
    7. '_main' → logprob: -10.02143669128418
    8. ' ' → logprob: -10.64643669128418
    9. ' ___' → logprob: -11.27143669128418
    10. '___' → logprob: -11.64643669128418

Token 282: 'name' (ID: 897)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '__' → logprob: -0.016603630036115646
    2. ' __' → logprob: -4.141603469848633
    3. ' ==' → logprob: -7.891603469848633
    4. '_' → logprob: -9.141603469848633
    5. '==' → logprob: -10.766603469848633
    6. '[' → logprob: -11.516603469848633
    7. '__.__' → logprob: -11.516603469848633
    8. '__[' → logprob: -11.516603469848633
    9. '(__' → logprob: -12.016603469848633
    10. '__["' → logprob: -12.641603469848633

Token 283: '__' (ID: 771)
  Prédit: '__'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -3.810037742368877e-05
    2. '__.__' → logprob: -10.250038146972656
    3. '__.' → logprob: -13.875038146972656
    4. '==' → logprob: -14.750038146972656
    5. '__["' → logprob: -15.000038146972656
    6. '____' → logprob: -15.250038146972656
    7. '___' → logprob: -15.375038146972656
    8. '_' → logprob: -15.875038146972656
    9. '__
' → logprob: -15.875038146972656
    10. '__('' → logprob: -15.875038146972656

Token 284: ' ==' (ID: 951)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.004059048369526863
    2. '==' → logprob: -6.004058837890625
    3. ' ==' → logprob: -6.504058837890625
    4. '=="' → logprob: -10.129058837890625
    5. '__.__' → logprob: -10.879058837890625
    6. '___' → logprob: -11.379058837890625
    7. '_' → logprob: -12.254058837890625
    8. '.__' → logprob: -13.004058837890625
    9. '=='' → logprob: -13.379058837890625
    10. '__["' → logprob: -14.004058837890625

Token 285: ' "__' (ID: 27367)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.029831252992153168
    2. ''' → logprob: -3.5298311710357666
    3. ' "__' → logprob: -9.529830932617188
    4. '__' → logprob: -11.904830932617188
    5. ' '__' → logprob: -13.654830932617188
    6. '"user' → logprob: -16.404830932617188
    7. '"name' → logprob: -17.029830932617188
    8. '"_' → logprob: -18.029830932617188
    9. '("__' → logprob: -18.029830932617188
    10. ' "' → logprob: -18.529830932617188

Token 286: 'main' (ID: 7731)
  Prédit: 'main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.06257444620132446
    2. '__' → logprob: -2.8125743865966797
    3. 'name' → logprob: -7.43757438659668
    4. '"' → logprob: -11.56257438659668
    5. '_main' → logprob: -12.31257438659668
    6. '__":
' → logprob: -13.81257438659668
    7. '__
' → logprob: -14.68757438659668
    8. 'built' → logprob: -14.81257438659668
    9. '```' → logprob: -14.93757438659668
    10. ' main' → logprob: -15.31257438659668

Token 287: '__":
' (ID: 49892)
  Prédit: '__":
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__":
' → logprob: -0.3133809268474579
    2. '__' → logprob: -1.3133809566497803
    3. '__':
' → logprob: -9.68838119506836
    4. '_' → logprob: -10.56338119506836
    5. '__:' → logprob: -10.68838119506836
    6. '__["' → logprob: -12.06338119506836
    7. '__.' → logprob: -13.68838119506836
    8. '__("' → logprob: -14.56338119506836
    9. '__",' → logprob: -15.18838119506836
    10. '__.__' → logprob: -15.31338119506836

Token 288: '   ' (ID: 271)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.3611745834350586
    2. 'main' → logprob: -1.6111745834350586
    3. '   ' → logprob: -2.9861745834350586
    4. '	main' → logprob: -2.9861745834350586
    5. '_main' → logprob: -6.236174583435059
    6. ' ' → logprob: -8.986174583435059
    7. '(main' → logprob: -9.486174583435059
    8. '__' → logprob: -9.611174583435059
    9. '    
' → logprob: -9.736174583435059
    10. '   ' → logprob: -10.486174583435059

Token 289: ' main' (ID: 2758)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' (adapté à ' main') → logprob: -1.9361264946837764e-07
    2. ' main' → logprob: -16.25
    3. '	main' → logprob: -21.375
    4. '_main' → logprob: -24.875
    5. '.main' → logprob: -25.0
    6. '   ' → logprob: -25.0
    7. '(main' → logprob: -26.625
    8. 'Main' → logprob: -27.125
    9. '主' → logprob: -27.375
    10. 'mai' → logprob: -27.5

Token 290: '()' (ID: 416)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 288
Tokens correctement prédits (1ère position, stricte): 106
Tokens correctement prédits (1ère position, avec adaptation): 114
Tokens correctement prédits (top 10): 209
Précision stricte (1ère position): 36.81%
Précision adaptée (1ère position): 39.58%
Précision (top 10): 72.57%
================================================================================
