================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:04:49
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
import sys

def solve_program(lines):
    arrays = {}
    assigned = {}
    def eval_expr(expr):
        # expr is either a number or array access like name[expr]
        if expr.isdigit():
            return int(expr)
        else:
            # array access: name[expr]
            i = expr.find('[')
            name = expr[:i]
            inside = expr[i+1:-1]
            idx = eval_expr(inside)
            if name not in arrays:
                return None, 'undeclared'
            size = arrays[name]
            if idx < 0 or idx >= size:
                return None, 'index'
            if (name, idx) not in assigned:
                return None, 'unset'
            return assigned[(name, idx)], None

    line_no = 0
    for line in lines:
        line_no += 1
        line = line.strip()
        if not line:
            continue
        if '=' not in line:
            # Declaration: a[n]
            i1 = line.find('[')
            i2 = line.find(']')
            name = line[:i1]
            n = int(line[i1+1:i2])
            arrays[name] = n
        else:
            # Assignment: lhs=rhs
            lhs, rhs = line.split('=')
            lhs = lhs.strip()
            rhs = rhs.strip()
            # parse lhs: name[expr]
            i1 = lhs.find('[')
            i2 = lhs.find(']')
            lhs_name = lhs[:i1]
            lhs_expr = lhs[i1+1:i2]
            # eval lhs index
            idx, err = None, None
            if lhs_expr.isdigit():
                idx = int(lhs_expr)
            else:
                ret, err = eval_expr(lhs_expr)
                idx = ret
            if lhs_name not in arrays:
                return line_no
            size = arrays[lhs_name]
            if idx is None or idx < 0 or idx >= size:
                return line_no
            if err is not None:
                return line_no
            # eval rhs value
            if rhs.isdigit():
                val = int(rhs)
            else:
                val, err = eval_expr(rhs)
                if err is not None or val is None:
                    return line_no
            assigned[(lhs_name, idx)] = val
    return 0

def main():
    lines = []
    for line in sys.stdin:
        line=line.rstrip('\n')
        if line == '.':
            if lines:
                print(solve_program(lines))
                lines = []
            else:
                break
        else:
            lines.append(line)

if __name__ == "__main__":
    main()
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'import' (ID: 561)
  → Token d'amorce (pas de prédiction)

Token 1: ' sys' (ID: 12228)
  → Token d'amorce (pas de prédiction)

Token 2: '

' (ID: 279)
  → Token d'amorce (pas de prédiction)

Token 3: 'def' (ID: 1314)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.0673334077000618
    2. '\n' → logprob: -3.442333459854126
    3. 'import' → logprob: -3.817333459854126
    4. '<|end|>' → logprob: -5.942333221435547
    5. '\' → logprob: -6.317333221435547
    6. 'newline' → logprob: -6.692333221435547
    7. ',' → logprob: -6.942333221435547
    8. '' → logprob: -7.442333221435547
    9. '
' → logprob: -7.692333221435547
    10. '<|end|>' → logprob: -7.692333221435547

Token 4: ' solve' (ID: 17722)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.013927715830504894
    2. ' space' → logprob: -6.388927936553955
    3. ' main' → logprob: -6.388927936553955
    4. ' ' → logprob: -6.888927936553955
    5. '<|end|>' → logprob: -6.888927936553955
    6. ' process' → logprob: -7.013927936553955
    7. '  ' → logprob: -7.013927936553955
    8. ' a' → logprob: -7.263927936553955
    9. ' sys' → logprob: -7.513927936553955
    10. '_' → logprob: -7.763927936553955

Token 5: '_program' (ID: 58929)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.006341349333524704
    2. '():' → logprob: -6.381341457366943
    3. '(:' → logprob: -6.631341457366943
    4. ':' → logprob: -6.881341457366943
    5. '_' → logprob: -7.006341457366943
    6. '```' → logprob: -8.006340980529785
    7. '):' → logprob: -8.256340980529785
    8. '(":' → logprob: -8.881340980529785
    9. '(
' → logprob: -8.881340980529785
    10. ' (' → logprob: -9.881340980529785

Token 6: '(lines' (ID: 73839)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.015307592228055
    2. '():' → logprob: -5.390307426452637
    3. '(:' → logprob: -5.515307426452637
    4. '_' → logprob: -6.015307426452637
    5. '_name' → logprob: -6.890307426452637
    6. '```' → logprob: -7.265307426452637
    7. 'me' → logprob: -8.015307426452637
    8. '(_:' → logprob: -8.140307426452637
    9. '(_' → logprob: -8.265307426452637
    10. ':' → logprob: -8.515307426452637

Token 7: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0005818653153255582
    2. ':' → logprob: -8.000581741333008
    3. ')' → logprob: -8.875581741333008
    4. '[' → logprob: -9.750581741333008
    5. ',' → logprob: -11.375581741333008
    6. ']:' → logprob: -11.875581741333008
    7. '):
' → logprob: -12.375581741333008
    8. ' ):' → logprob: -12.625581741333008
    9. '[]):' → logprob: -12.750581741333008
    10. '   ' → logprob: -12.875581741333008

Token 8: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.12509839236736298
    2. ':' → logprob: -2.625098466873169
    3. '    ' → logprob: -3.375098466873169
    4. '    
' → logprob: -6.12509822845459
    5. '\' → logprob: -6.37509822845459
    6. '\n' → logprob: -6.62509822845459
    7. '```' → logprob: -6.62509822845459
    8. ' ' → logprob: -7.00009822845459
    9. ' for' → logprob: -7.12509822845459
    10. '
' → logprob: -7.50009822845459

Token 9: ' arrays' (ID: 38774)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4133569598197937
    2. ' lines' → logprob: -2.7883570194244385
    3. ' result' → logprob: -3.0383570194244385
    4. '    ' → logprob: -3.1633570194244385
    5. ' for' → logprob: -3.4133570194244385
    6. ' ' → logprob: -3.5383570194244385
    7. 'result' → logprob: -4.038356781005859
    8. ' n' → logprob: -4.038356781005859
    9. ' if' → logprob: -4.413356781005859
    10. 'n' → logprob: -4.538356781005859

Token 10: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0014784404775127769
    2. '=' → logprob: -6.876478672027588
    3. '[' → logprob: -8.50147819519043
    4. '[:]' → logprob: -9.75147819519043
    5. '_' → logprob: -10.00147819519043
    6. 's' → logprob: -10.00147819519043
    7. '   ' → logprob: -10.50147819519043
    8. '[]' → logprob: -10.50147819519043
    9. '=[]' → logprob: -11.62647819519043
    10. '.' → logprob: -11.75147819519043

Token 11: ' {}
' (ID: 11421)
  Prédit: ' []'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' []' → logprob: -0.03892693296074867
    2. '[]' → logprob: -3.288926839828491
    3. ' {}' → logprob: -7.16392707824707
    4. '{}' → logprob: -9.28892707824707
    5. ' ' → logprob: -11.78892707824707
    6. ' [' → logprob: -11.91392707824707
    7. '[' → logprob: -13.53892707824707
    8. ' [[]' → logprob: -13.66392707824707
    9. '   ' → logprob: -14.03892707824707
    10. '  ' → logprob: -15.66392707824707

Token 12: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.13149209320545197
    2. 'for' → logprob: -2.8814921379089355
    3. ' for' → logprob: -2.8814921379089355
    4. '    
' → logprob: -5.2564921379089355
    5. '
' → logprob: -6.3814921379089355
    6. ' ' → logprob: -7.0064921379089355
    7. '  ' → logprob: -7.3814921379089355
    8. '[' → logprob: -7.5064921379089355
    9. '\n' → logprob: -7.6314921379089355
    10. '    ' → logprob: -7.6314921379089355

Token 13: ' assigned' (ID: 21482)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.33164462447166443
    2. ' for' → logprob: -1.3316446542739868
    3. '   ' → logprob: -4.081644535064697
    4. ' ' → logprob: -7.956644535064697
    5. '\n' → logprob: -8.081645011901855
    6. '    
' → logprob: -8.706645011901855
    7. '
' → logprob: -8.956645011901855
    8. '	for' → logprob: -9.456645011901855
    9. '\' → logprob: -10.081645011901855
    10. 'newline' → logprob: -10.081645011901855

Token 14: ' =' (ID: 314)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.6396546363830566
    2. '_values' → logprob: -1.8896546363830566
    3. ' =' → logprob: -2.0146546363830566
    4. '_arrays' → logprob: -2.0146546363830566
    5. '_to' → logprob: -3.3896546363830566
    6. '_variables' → logprob: -5.389654636383057
    7. '_vars' → logprob: -5.514654636383057
    8. '[' → logprob: -6.014654636383057
    9. '=' → logprob: -6.389654636383057
    10. '_names' → logprob: -6.764654636383057

Token 15: ' {}
' (ID: 11421)
  Prédit: ' set'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' set' → logprob: -0.23270657658576965
    2. ' {}' → logprob: -2.1077065467834473
    3. '{}' → logprob: -2.9827065467834473
    4. 'set' → logprob: -3.6077065467834473
    5. ' ' → logprob: -5.107706546783447
    6. ' []' → logprob: -6.732706546783447
    7. ' True' → logprob: -8.107707023620605
    8. '   ' → logprob: -8.107707023620605
    9. '  ' → logprob: -8.607707023620605
    10. '[]' → logprob: -8.857707023620605

Token 16: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8546985387802124
    2. ' for' → logprob: -0.9796985387802124
    3. 'for' → logprob: -1.7296985387802124
    4. '\n' → logprob: -4.854698657989502
    5. '    
' → logprob: -5.479698657989502
    6. ' ' → logprob: -5.729698657989502
    7. '<|end|>' → logprob: -6.354698657989502
    8. '
' → logprob: -7.104698657989502
    9. '  ' → logprob: -7.479698657989502
    10. ':' → logprob: -7.604698657989502

Token 17: ' def' (ID: 1056)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.607533872127533
    2. ' for' → logprob: -1.2325339317321777
    3. '   ' → logprob: -1.8575339317321777
    4. ' ' → logprob: -5.732533931732178
    5. '    
' → logprob: -6.982533931732178
    6. 'n' → logprob: -7.482533931732178
    7. '
' → logprob: -7.607533931732178
    8. '  ' → logprob: -7.857533931732178
    9. '\n' → logprob: -7.982533931732178
    10. '```' → logprob: -7.982533931732178

Token 18: ' eval' (ID: 29383)
  Prédit: ' solve'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' solve' → logprob: -1.1727235317230225
    2. ' dfs' → logprob: -1.9227235317230225
    3. ' parse' → logprob: -2.0477235317230225
    4. ' inner' → logprob: -2.5477235317230225
    5. ' _' → logprob: -2.9227235317230225
    6. ' assign' → logprob: -3.2977235317230225
    7. ' process' → logprob: -3.2977235317230225
    8. ' calculate' → logprob: -3.4227235317230225
    9. ' evaluate' → logprob: -3.5477235317230225
    10. ' add' → logprob: -3.6727235317230225

Token 19: '_expr' (ID: 53654)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.7157576084136963
    2. '(' → logprob: -2.0907576084136963
    3. 'uate' → logprob: -2.2157576084136963
    4. '_expr' → logprob: -2.4657576084136963
    5. '_token' → logprob: -2.7157576084136963
    6. '_expression' → logprob: -3.3407576084136963
    7. '_array' → logprob: -4.215757369995117
    8. ' (' → logprob: -4.340757369995117
    9. 'uer' → logprob: -4.715757369995117
    10. 'uator' → logprob: -4.715757369995117

Token 20: '(expr' (ID: 78746)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.03477662056684494
    2. ' (' → logprob: -4.15977668762207
    3. '_' → logprob: -5.40977668762207
    4. '(token' → logprob: -5.90977668762207
    5. 'ession' → logprob: -6.78477668762207
    6. '_token' → logprob: -7.15977668762207
    7. '[' → logprob: -7.15977668762207
    8. 's' → logprob: -7.15977668762207
    9. 'uator' → logprob: -7.15977668762207
    10. '("("' → logprob: -7.40977668762207

Token 21: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.009372105821967125
    2. ',' → logprob: -5.384372234344482
    3. ' ):' → logprob: -5.759372234344482
    4. '):
' → logprob: -7.134372234344482
    5. ')' → logprob: -7.384372234344482
    6. ' ,' → logprob: -9.884371757507324
    7. '_tokens' → logprob: -11.009371757507324
    8. '   ' → logprob: -11.259371757507324
    9. ':' → logprob: -11.259371757507324
    10. 's' → logprob: -11.384371757507324

Token 22: '       ' (ID: 309)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.24952125549316406
    2. '    ' → logprob: -1.624521255493164
    3. '       ' → logprob: -4.749521255493164
    4. '        ' → logprob: -5.499521255493164
    5. '   ' → logprob: -6.374521255493164
    6. ' )' → logprob: -6.624521255493164
    7. '<|end|>' → logprob: -6.749521255493164
    8. '  ' → logprob: -6.874521255493164
    9. '     ' → logprob: -6.874521255493164
    10. '     
' → logprob: -7.124521255493164

Token 23: ' #' (ID: 1069)
  Prédit: ' tokens'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' tokens' → logprob: -0.6060023903846741
    2. 'tokens' → logprob: -1.4810023307800293
    3. '    ' → logprob: -2.8560023307800293
    4. ' ' → logprob: -3.1060023307800293
    5. '       ' → logprob: -3.2310023307800293
    6. '        ' → logprob: -3.7310023307800293
    7. ' if' → logprob: -4.106002330780029
    8. 'token' → logprob: -4.106002330780029
    9. ' token' → logprob: -5.481002330780029
    10. '   ' → logprob: -5.606002330780029

Token 24: ' expr' (ID: 30206)
  Prédit: ' tokens'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' tokens' → logprob: -0.2825692296028137
    2. 'tokens' → logprob: -1.532569169998169
    3. ' if' → logprob: -5.032569408416748
    4. '    ' → logprob: -5.282569408416748
    5. ' parts' → logprob: -5.782569408416748
    6. 'token' → logprob: -5.907569408416748
    7. '       ' → logprob: -6.032569408416748
    8. ' token' → logprob: -6.282569408416748
    9. '        ' → logprob: -6.407569408416748
    10. ' expr' → logprob: -6.532569408416748

Token 25: ' is' (ID: 382)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.04535816237330437
    2. '_tokens' → logprob: -3.420358180999756
    3. '=' → logprob: -5.045358180999756
    4. 'tokens' → logprob: -7.045358180999756
    5. '.strip' → logprob: -7.170358180999756
    6. ')' → logprob: -7.420358180999756
    7. '.split' → logprob: -7.795358180999756
    8. '_parts' → logprob: -7.920358180999756
    9. '_token' → logprob: -8.420357704162598
    10. ' tokens' → logprob: -8.545357704162598

Token 26: ' either' (ID: 4784)
  Prédit: ' a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.07088392972946167
    2. ' an' → logprob: -2.9458839893341064
    3. 'a' → logprob: -4.945883750915527
    4. ' either' → logprob: -5.695883750915527
    5. ' tokens' → logprob: -6.570883750915527
    6. 'tokens' → logprob: -7.070883750915527
    7. ' ' → logprob: -7.570883750915527
    8. ' not' → logprob: -8.195883750915527
    9. 'an' → logprob: -8.320883750915527
    10. ' token' → logprob: -8.445883750915527

Token 27: ' a' (ID: 261)
  Prédit: ' a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.16982749104499817
    2. ' an' → logprob: -1.9198274612426758
    3. 'a' → logprob: -4.794827461242676
    4. 'an' → logprob: -6.794827461242676
    5. ' ' → logprob: -9.544827461242676
    6. ' integer' → logprob: -10.669827461242676
    7. ' int' → logprob: -10.794827461242676
    8. 'int' → logprob: -11.794827461242676
    9. ' variable' → logprob: -12.044827461242676
    10. ' '' → logprob: -12.044827461242676

Token 28: ' number' (ID: 2086)
  Prédit: ' variable'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' variable' → logprob: -0.9434992074966431
    2. ' number' → logprob: -1.443499207496643
    3. 'number' → logprob: -1.443499207496643
    4. 'variable' → logprob: -2.8184990882873535
    5. 'digit' → logprob: -3.5684990882873535
    6. ' digit' → logprob: -4.0684990882873535
    7. 'single' → logprob: -5.0684990882873535
    8. ' single' → logprob: -5.3184990882873535
    9. 'string' → logprob: -5.8184990882873535
    10. ' literal' → logprob: -6.0684990882873535

Token 29: ' or' (ID: 503)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.23165996372699738
    2. ',' → logprob: -2.1066598892211914
    3. ' or' → logprob: -2.8566598892211914
    4. ' ,' → logprob: -4.106659889221191
    5. '    ' → logprob: -6.106659889221191
    6. '   ' → logprob: -6.106659889221191
    7. '  ' → logprob: -6.106659889221191
    8. ''' → logprob: -6.606659889221191
    9. ')' → logprob: -7.231659889221191
    10. ' '' → logprob: -7.981659889221191

Token 30: ' array' (ID: 2644)
  Prédit: ' a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.2567783296108246
    2. ' an' → logprob: -1.506778359413147
    3. ' ' → logprob: -5.881778240203857
    4. 'a' → logprob: -6.631778240203857
    5. ' variable' → logprob: -8.131778717041016
    6. ' arrays' → logprob: -8.756778717041016
    7. 'an' → logprob: -9.506778717041016
    8. ' array' → logprob: -9.756778717041016
    9. ' space' → logprob: -10.131778717041016
    10. '  ' → logprob: -10.506778717041016

Token 31: ' access' (ID: 3158)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.19089466333389282
    2. '_name' → logprob: -2.565894603729248
    3. '.' → logprob: -3.440894603729248
    4. 'name' → logprob: -3.690894603729248
    5. '_' → logprob: -4.190894603729248
    6. '[index' → logprob: -5.565894603729248
    7. '['' → logprob: -5.815894603729248
    8. ''' → logprob: -6.065894603729248
    9. 's' → logprob: -6.065894603729248
    10. '<|end|>' → logprob: -6.315894603729248

Token 32: ' like' (ID: 1299)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.2869955897331238
    2. '   ' → logprob: -2.0369956493377686
    3. ' or' → logprob: -3.6619956493377686
    4. ' (' → logprob: -3.9119956493377686
    5. ' ' → logprob: -4.0369954109191895
    6. '(' → logprob: -4.1619954109191895
    7. '       ' → logprob: -4.5369954109191895
    8. ',' → logprob: -5.0369954109191895
    9. ')' → logprob: -5.6619954109191895
    10. '  ' → logprob: -5.7869954109191895

Token 33: ' name' (ID: 1308)
  Prédit: ' array'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' array' → logprob: -0.627412736415863
    2. '"' → logprob: -2.377412796020508
    3. ' arr' → logprob: -2.627412796020508
    4. ' a' → logprob: -2.877412796020508
    5. ''' → logprob: -3.127412796020508
    6. 'array' → logprob: -3.127412796020508
    7. ' `' → logprob: -3.377412796020508
    8. ' Array' → logprob: -3.752412796020508
    9. ' ' → logprob: -4.127412796020508
    10. '`' → logprob: -4.127412796020508

Token 34: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.03303749859333038
    2. '['' → logprob: -4.2830376625061035
    3. ''' → logprob: -4.9080376625061035
    4. ' [' → logprob: -5.1580376625061035
    5. ' '['' → logprob: -5.7830376625061035
    6. '"' → logprob: -7.4080376625061035
    7. '["' → logprob: -7.7830376625061035
    8. '[
' → logprob: -7.7830376625061035
    9. '[index' → logprob: -9.033037185668945
    10. '[n' → logprob: -9.283037185668945

Token 35: 'expr' (ID: 21343)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.6761878132820129
    2. '<|end|>' → logprob: -1.1761877536773682
    3. ')' → logprob: -2.801187753677368
    4. ''' → logprob: -3.176187753677368
    5. '')' → logprob: -3.551187753677368
    6. '<|end|>' → logprob: -4.676187992095947
    7. 'index' → logprob: -5.051187992095947
    8. ' ' → logprob: -5.176187992095947
    9. '']' → logprob: -5.551187992095947
    10. '">' → logprob: -5.551187992095947

Token 36: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0012416596291586757
    2. ')]' → logprob: -8.001241683959961
    3. ' ]' → logprob: -8.251241683959961
    4. ')' → logprob: -8.501241683959961
    5. '])' → logprob: -8.876241683959961
    6. ']]' → logprob: -9.251241683959961
    7. '[' → logprob: -9.501241683959961
    8. '']' → logprob: -9.501241683959961
    9. 's' → logprob: -11.376241683959961
    10. '`]' → logprob: -11.751241683959961

Token 37: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.730256199836731
    2. '       ' → logprob: -1.230256199836731
    3. ')' → logprob: -2.1052560806274414
    4. ' ' → logprob: -3.6052560806274414
    5. '[' → logprob: -3.8552560806274414
    6. ':' → logprob: -3.9802560806274414
    7. '):' → logprob: -4.230256080627441
    8. '    ' → logprob: -4.730256080627441
    9. '  ' → logprob: -5.480256080627441
    10. ',' → logprob: -5.730256080627441

Token 38: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.55259770154953
    2. '       ' → logprob: -1.1775977611541748
    3. '   ' → logprob: -2.927597761154175
    4. ' tokens' → logprob: -4.427597522735596
    5. ' token' → logprob: -4.427597522735596
    6. 'token' → logprob: -4.677597522735596
    7. 'if' (adapté à ' if') → logprob: -4.802597522735596
    8. ' ' → logprob: -4.927597522735596
    9. '    ' → logprob: -5.052597522735596
    10. 'tokens' → logprob: -5.802597522735596

Token 39: ' expr' (ID: 30206)
  Prédit: ' expr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' expr' → logprob: -0.0018501047743484378
    2. 'expr' → logprob: -6.501850128173828
    3. ' ' → logprob: -8.251850128173828
    4. ' '' → logprob: -9.876850128173828
    5. '(expr' → logprob: -10.876850128173828
    6. '.expr' → logprob: -11.626850128173828
    7. ' ' → logprob: -12.626850128173828
    8. ' isinstance' → logprob: -13.251850128173828
    9. '  ' → logprob: -13.251850128173828
    10. '_expr' → logprob: -15.126850128173828

Token 40: '.is' (ID: 3109)
  Prédit: '.is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.is' → logprob: -0.3882550597190857
    2. '.' → logprob: -1.1382551193237305
    3. 'isdigit' → logprob: -7.1382551193237305
    4. ' .' → logprob: -7.7632551193237305
    5. '.strip' → logprob: -8.88825511932373
    6. '[' → logprob: -10.76325511932373
    7. '.startswith' → logprob: -14.01325511932373
    8. '=' → logprob: -14.26325511932373
    9. '   ' → logprob: -14.38825511932373
    10. ' is' → logprob: -14.38825511932373

Token 41: 'digit' (ID: 78327)
  Prédit: 'digit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'digit' → logprob: -8.537868779967539e-06
    2. 'numeric' → logprob: -12.250008583068848
    3. 'decimal' → logprob: -12.500008583068848
    4. '_digit' → logprob: -17.25000762939453
    5. ' digit' → logprob: -18.00000762939453
    6. 'al' → logprob: -18.50000762939453
    7. 'digits' → logprob: -18.87500762939453
    8. 'alpha' → logprob: -19.37500762939453
    9. 'digital' → logprob: -19.87500762939453
    10. 'dig' → logprob: -20.00000762939453

Token 42: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.07936228811740875
    2. '()' → logprob: -2.579362392425537
    3. '(' → logprob: -7.954362392425537
    4. '():
' → logprob: -9.204361915588379
    5. '()>' → logprob: -12.079361915588379
    6. ' ():' → logprob: -12.454361915588379
    7. '():

' → logprob: -12.704361915588379
    8. ' ()' → logprob: -13.329361915588379
    9. ':' → logprob: -13.454361915588379
    10. '()==' → logprob: -14.079361915588379

Token 43: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.4206024408340454
    2. '       ' → logprob: -1.7956024408340454
    3. ':' → logprob: -2.295602321624756
    4. ' return' → logprob: -3.545602321624756
    5. 'return' → logprob: -3.795602321624756
    6. ':return' → logprob: -4.170602321624756
    7. ' :' → logprob: -5.420602321624756
    8. ':
' → logprob: -6.295602321624756
    9. '():' → logprob: -6.795602321624756
    10. '        ' → logprob: -7.545602321624756

Token 44: ' return' (ID: 622)
  Prédit: ' return'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.70127272605896
    2. 'return' (adapté à ' return') → logprob: -1.07627272605896
    3. '           ' → logprob: -1.82627272605896
    4. '       ' → logprob: -6.576272964477539
    5. '   ' → logprob: -8.701272964477539
    6. ':return' → logprob: -9.076272964477539
    7. ' ' → logprob: -9.201272964477539
    8. '	return' → logprob: -9.201272964477539
    9. '               ' → logprob: -9.826272964477539
    10. ')return' → logprob: -10.451272964477539

Token 45: ' int' (ID: 677)
  Prédit: ' int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.474077433347702
    2. 'int' → logprob: -0.9740774631500244
    3. '(int' → logprob: -14.974077224731445
    4. '[int' → logprob: -16.099077224731445
    5. '<int' → logprob: -16.349077224731445
    6. '	int' → logprob: -18.474077224731445
    7. '=int' → logprob: -18.849077224731445
    8. ' ' → logprob: -19.474077224731445
    9. '   ' → logprob: -19.474077224731445
    10. ':int' → logprob: -19.599077224731445

Token 46: '(expr' (ID: 78746)
  Prédit: '(expr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(expr' → logprob: -0.0009122979827225208
    2. '(' → logprob: -7.000912189483643
    3. 'expr' → logprob: -15.0009126663208
    4. '(express' → logprob: -15.6259126663208
    5. '(EXPR' → logprob: -15.7509126663208
    6. '(expression' → logprob: -17.125911712646484
    7. ' (' → logprob: -17.625911712646484
    8. '(eval' → logprob: -17.625911712646484
    9. '(exc' → logprob: -18.750911712646484
    10. ')' → logprob: -18.875911712646484

Token 47: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0003202114312443882
    2. ' )' → logprob: -8.750320434570312
    3. ')
' → logprob: -9.000320434570312
    4. '())' → logprob: -11.250320434570312
    5. '       ' → logprob: -11.500320434570312
    6. ')return' → logprob: -11.875320434570312
    7. '   ' → logprob: -12.500320434570312
    8. '))' → logprob: -13.500320434570312
    9. '           ' → logprob: -14.125320434570312
    10. '()' → logprob: -14.625320434570312

Token 48: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0025680451653897762
    2. '   ' → logprob: -6.752568244934082
    3. '    ' → logprob: -7.877568244934082
    4. '<|end|>' → logprob: -8.002568244934082
    5. 'elif' → logprob: -8.752568244934082
    6. '      ' → logprob: -9.127568244934082
    7. '        ' → logprob: -9.127568244934082
    8. ')' → logprob: -9.127568244934082
    9. ' elif' → logprob: -9.377568244934082
    10. '	elif' → logprob: -11.002568244934082

Token 49: ' else' (ID: 1203)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.24258463084697723
    2. '[
' → logprob: -2.617584705352783
    3. 'else' (adapté à ' else') → logprob: -2.867584705352783
    4. ' else' → logprob: -3.242584705352783
    5. '   ' → logprob: -4.242584705352783
    6. 'elif' → logprob: -4.617584705352783
    7. ' elif' → logprob: -5.617584705352783
    8. ')' → logprob: -5.742584705352783
    9. '       ' → logprob: -5.867584705352783
    10. '.' → logprob: -6.242584705352783

Token 50: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.028364097699522972
    2. ':
' → logprob: -3.6533641815185547
    3. '[' → logprob: -6.403364181518555
    4. ' :' → logprob: -9.028364181518555
    5. '.' → logprob: -9.403364181518555
    6. ' :
' → logprob: -9.903364181518555
    7. '           ' → logprob: -10.528364181518555
    8. '   ' → logprob: -10.528364181518555
    9. ',' → logprob: -10.653364181518555
    10. ':

' → logprob: -11.528364181518555

Token 51: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.04353471100330353
    2. '       ' → logprob: -3.543534755706787
    3. 'name' → logprob: -5.293534755706787
    4. '[' → logprob: -6.293534755706787
    5. ' name' → logprob: -6.543534755706787
    6. '   ' → logprob: -6.543534755706787
    7. 'idx' → logprob: -7.668534755706787
    8. '_name' → logprob: -8.043534278869629
    9. '            
' → logprob: -8.043534278869629
    10. '               ' → logprob: -8.418534278869629

Token 52: ' #' (ID: 1069)
  Prédit: 'name'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'name' → logprob: -0.07768429070711136
    2. ' name' → logprob: -2.7026844024658203
    3. 'idx' → logprob: -6.20268440246582
    4. '           ' → logprob: -6.95268440246582
    5. '   ' → logprob: -7.20268440246582
    6. '       ' → logprob: -7.32768440246582
    7. 'arr' → logprob: -7.57768440246582
    8. 'n' → logprob: -7.70268440246582
    9. 'array' → logprob: -7.82768440246582
    10. ' idx' → logprob: -8.32768440246582

Token 53: ' array' (ID: 2644)
  Prédit: 'name'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'name' → logprob: -0.6917305588722229
    2. ' name' → logprob: -1.0667304992675781
    3. '           ' → logprob: -3.941730499267578
    4. ' idx' → logprob: -4.066730499267578
    5. ' parts' → logprob: -4.316730499267578
    6. ' for' → logprob: -4.566730499267578
    7. '   ' → logprob: -4.816730499267578
    8. ' ' → logprob: -4.816730499267578
    9. '       ' → logprob: -4.816730499267578
    10. ' n' → logprob: -4.941730499267578

Token 54: ' access' (ID: 3158)
  Prédit: '_name'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_name' → logprob: -0.560051679611206
    2. 'name' → logprob: -1.060051679611206
    3. '[' → logprob: -2.560051679611206
    4. ')' → logprob: -7.060051918029785
    5. 's' → logprob: -7.435051918029785
    6. 'Name' → logprob: -7.560051918029785
    7. ']' → logprob: -7.560051918029785
    8. '[
' → logprob: -7.560051918029785
    9. '_' → logprob: -7.685051918029785
    10. ',' → logprob: -7.810051918029785

Token 55: ':' (ID: 25)
  Prédit: 'name'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'name' → logprob: -0.5241184830665588
    2. '           ' → logprob: -1.524118423461914
    3. '[' → logprob: -2.149118423461914
    4. ']' → logprob: -3.899118423461914
    5. ')' → logprob: -4.024118423461914
    6. 'idx' → logprob: -4.774118423461914
    7. '[
' → logprob: -5.274118423461914
    8. '       ' → logprob: -5.649118423461914
    9. 'index' → logprob: -5.899118423461914
    10. ' name' → logprob: -6.274118423461914

Token 56: ' name' (ID: 1308)
  Prédit: 'name'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'name' → logprob: -0.13583804666996002
    2. ' name' → logprob: -2.760838031768799
    3. ' ' → logprob: -4.510838031768799
    4. '           ' → logprob: -4.635838031768799
    5. '       ' → logprob: -5.010838031768799
    6. '_name' → logprob: -5.385838031768799
    7. '   ' → logprob: -5.635838031768799
    8. '    ' → logprob: -5.760838031768799
    9. ' arrays' → logprob: -6.135838031768799
    10. '[' → logprob: -6.510838031768799

Token 57: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.004830718971788883
    2. ',' → logprob: -5.879830837249756
    3. '[
' → logprob: -7.254830837249756
    4. '_name' → logprob: -7.754830837249756
    5. '['' → logprob: -8.129830360412598
    6. ']' → logprob: -9.504830360412598
    7. 'name' → logprob: -9.629830360412598
    8. '_idx' → logprob: -9.754830360412598
    9. '[idx' → logprob: -10.129830360412598
    10. '[start' → logprob: -10.129830360412598

Token 58: 'expr' (ID: 21343)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 59: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.3053906261920929
    2. '.find' → logprob: -2.4303905963897705
    3. '.index' → logprob: -2.4303905963897705
    4. '])' → logprob: -3.5553905963897705
    5. ')' → logprob: -3.6803905963897705
    6. '[' → logprob: -3.8053905963897705
    7. 'find' → logprob: -5.93039083480835
    8. ')]' → logprob: -6.43039083480835
    9. '.split' → logprob: -6.80539083480835
    10. 'index' → logprob: -6.80539083480835

Token 60: '           ' (ID: 352)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.4651099741458893
    2. '[' → logprob: -1.840109944343567
    3. ']' → logprob: -1.965109944343567
    4. '           ' → logprob: -4.090109825134277
    5. 'idx' → logprob: -4.715109825134277
    6. '.split' → logprob: -4.840109825134277
    7. '   ' → logprob: -5.340109825134277
    8. '[
' → logprob: -5.840109825134277
    9. '       ' → logprob: -5.965109825134277
    10. 'index' → logprob: -6.090109825134277

Token 61: ' i' (ID: 575)
  Prédit: 'name'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'name' → logprob: -0.15588605403900146
    2. ' name' → logprob: -3.030886173248291
    3. 'n' → logprob: -3.280886173248291
    4. '[' → logprob: -3.905886173248291
    5. '           ' → logprob: -4.405886173248291
    6. 'idx' → logprob: -5.155886173248291
    7. '   ' → logprob: -5.655886173248291
    8. '       ' → logprob: -6.030886173248291
    9. ' n' → logprob: -6.280886173248291
    10. ' idx' → logprob: -6.655886173248291

Token 62: ' =' (ID: 314)
  Prédit: 'nd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nd' → logprob: -0.08444229513406754
    2. 'dx' → logprob: -3.084442377090454
    3. ' =' → logprob: -4.084442138671875
    4. 'f' → logprob: -4.834442138671875
    5. 'd' → logprob: -5.584442138671875
    6. '=' → logprob: -5.959442138671875
    7. 'x' → logprob: -6.459442138671875
    8. 's' → logprob: -7.334442138671875
    9. 'n' → logprob: -7.459442138671875
    10. 'm' → logprob: -8.209442138671875

Token 63: ' expr' (ID: 30206)
  Prédit: 'expr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'expr' → logprob: -0.3314507007598877
    2. ' expr' → logprob: -1.4564507007598877
    3. '0' → logprob: -3.2064507007598877
    4. ' ' → logprob: -4.831450462341309
    5. '1' → logprob: -7.581450462341309
    6. '(expr' → logprob: -10.206450462341309
    7. '.expr' → logprob: -11.456450462341309
    8. '_expr' → logprob: -12.581450462341309
    9. 'len' → logprob: -12.831450462341309
    10. '[' → logprob: -12.956450462341309

Token 64: '.find' (ID: 4231)
  Prédit: '.find'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.find' → logprob: -0.3148927688598633
    2. '.index' → logprob: -1.3148927688598633
    3. '.' → logprob: -6.439892768859863
    4. ' .' → logprob: -11.189892768859863
    5. '.findall' → logprob: -12.314892768859863
    6. '[' → logprob: -12.439892768859863
    7. '.Index' → logprob: -12.564892768859863
    8. 'find' → logprob: -12.939892768859863
    9. 'index' → logprob: -13.064892768859863
    10. '.r' → logprob: -14.564892768859863

Token 65: '('' (ID: 706)
  Prédit: '(''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('' → logprob: -0.04019014164805412
    2. '[' → logprob: -3.7901902198791504
    3. ''' → logprob: -4.91519021987915
    4. '(' → logprob: -5.16519021987915
    5. '['' → logprob: -6.16519021987915
    6. '("[' → logprob: -6.54019021987915
    7. '('[' → logprob: -8.915189743041992
    8. ''[' → logprob: -10.790189743041992
    9. ' '['' → logprob: -11.290189743041992
    10. '"[' → logprob: -11.415189743041992

Token 66: '['' (ID: 1181)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0011602196609601378
    2. ']' → logprob: -7.251160144805908
    3. '['' → logprob: -7.876160144805908
    4. ''' → logprob: -10.501160621643066
    5. '']' → logprob: -10.501160621643066
    6. '')' → logprob: -11.626160621643066
    7. '[
' → logprob: -13.376160621643066
    8. '[]' → logprob: -13.501160621643066
    9. ')' → logprob: -14.126160621643066
    10. ''[' → logprob: -14.251160621643066

Token 67: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.003160730004310608
    2. '1' → logprob: -7.1281609535217285
    3. ']' → logprob: -7.2531609535217285
    4. '])' → logprob: -8.37816047668457
    5. '')' → logprob: -8.50316047668457
    6. '<|end|>' → logprob: -8.50316047668457
    7. ')])' → logprob: -8.62816047668457
    8. '0' → logprob: -8.62816047668457
    9. '']' → logprob: -8.75316047668457
    10. ')+' → logprob: -8.87816047668457

Token 68: '           ' (ID: 352)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.32956233620643616
    2. ']' → logprob: -1.7045623064041138
    3. '0' → logprob: -3.3295624256134033
    4. '+' → logprob: -4.079562187194824
    5. '1' → logprob: -4.579562187194824
    6. '<|end|>' → logprob: -5.204562187194824
    7. ')
' → logprob: -5.329562187194824
    8. 'return' → logprob: -5.329562187194824
    9. ')+' → logprob: -5.829562187194824
    10. '   ' → logprob: -5.954562187194824

Token 69: ' name' (ID: 1308)
  Prédit: 'name'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'name' (adapté à ' name') → logprob: -0.006585112307220697
    2. ']' → logprob: -5.381585121154785
    3. ' name' → logprob: -7.256585121154785
    4. 'n' → logprob: -7.756585121154785
    5. '           ' → logprob: -8.381585121154785
    6. ')' → logprob: -8.756585121154785
    7. 'end' → logprob: -8.881585121154785
    8. '   ' → logprob: -9.131585121154785
    9. '       ' → logprob: -10.006585121154785
    10. 'array' → logprob: -10.506585121154785

Token 70: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5808905363082886
    2. '<|end|>' → logprob: -1.3308905363082886
    3. '=' → logprob: -2.580890655517578
    4. '[' → logprob: -3.080890655517578
    5. '<|end|>' → logprob: -3.580890655517578
    6. ']' → logprob: -3.955890655517578
    7. ' ' → logprob: -5.955890655517578
    8. ')' → logprob: -6.330890655517578
    9. '[:]' → logprob: -7.080890655517578
    10. '[
' → logprob: -7.955890655517578

Token 71: ' expr' (ID: 30206)
  Prédit: 'expr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'expr' → logprob: -0.20141421258449554
    2. ' expr' → logprob: -1.7014142274856567
    3. '(expr' → logprob: -14.201414108276367
    4. '.expr' → logprob: -16.326414108276367
    5. 'express' → logprob: -16.451414108276367
    6. '_expr' → logprob: -17.701414108276367
    7. ' ' → logprob: -18.076414108276367
    8. '   ' → logprob: -20.076414108276367
    9. 'expression' → logprob: -20.326414108276367
    10. '0' → logprob: -20.326414108276367

Token 72: '[:' (ID: 7808)
  Prédit: '[:'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[:' → logprob: -0.007715228013694286
    2. '[' → logprob: -4.882715225219727
    3. '[:]' → logprob: -9.382715225219727
    4. ':' → logprob: -11.882715225219727
    5. '[
' → logprob: -12.007715225219727
    6. '<|end|>' → logprob: -12.382715225219727
    7. '           ' → logprob: -13.757715225219727
    8. '[:-' → logprob: -13.757715225219727
    9. '][:' → logprob: -13.882715225219727
    10. '0' → logprob: -14.007715225219727

Token 73: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -5.512236498361744e-07
    2. ' i' → logprob: -14.625000953674316
    3. '	i' → logprob: -20.875
    4. '   ' → logprob: -20.875
    5. ' ' → logprob: -21.5
    6. ')i' → logprob: -21.5
    7. ''i' → logprob: -22.75
    8. '  ' → logprob: -23.0
    9. '```' → logprob: -23.25
    10. ']' → logprob: -23.5

Token 74: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.002959631150588393
    2. ']
' → logprob: -6.127959728240967
    3. ' ]' → logprob: -7.252959728240967
    4. ']

' → logprob: -11.377959251403809
    5. '<|end|>' → logprob: -11.377959251403809
    6. '+' → logprob: -12.002959251403809
    7. ']+' → logprob: -12.252959251403809
    8. ']>' → logprob: -12.502959251403809
    9. ' ]
' → logprob: -12.502959251403809
    10. ' ' → logprob: -12.627959251403809

Token 75: '           ' (ID: 352)
  Prédit: 'expr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'expr' → logprob: -0.9137763381004333
    2. 'idx' → logprob: -1.1637763977050781
    3. 'index' → logprob: -1.6637763977050781
    4. '           ' → logprob: -2.913776397705078
    5. 'inner' → logprob: -3.913776397705078
    6. 'start' → logprob: -4.413776397705078
    7. 'end' → logprob: -5.788776397705078
    8. 'pos' → logprob: -7.288776397705078
    9. ' expr' → logprob: -7.413776397705078
    10. 'rest' → logprob: -7.663776397705078

Token 76: ' inside' (ID: 6772)
  Prédit: 'idx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'idx' → logprob: -0.7103604674339294
    2. 'index' → logprob: -1.2103605270385742
    3. 'inner' → logprob: -1.9603605270385742
    4. 'end' → logprob: -3.460360527038574
    5. 'expr' → logprob: -3.960360527038574
    6. 'start' → logprob: -5.085360527038574
    7. '           ' → logprob: -5.710360527038574
    8. 'j' → logprob: -5.710360527038574
    9. 'inside' (adapté à ' inside') → logprob: -6.460360527038574
    10. 'pos' → logprob: -7.460360527038574

Token 77: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.10337332636117935
    2. ' =' → logprob: -2.7283732891082764
    3. '_expr' → logprob: -3.4783732891082764
    4. 'expr' → logprob: -6.7283735275268555
    5. '_idx' → logprob: -7.7283735275268555
    6. ']' → logprob: -9.103373527526855
    7. ')' → logprob: -9.478373527526855
    8. '=index' → logprob: -10.228373527526855
    9. ']=' → logprob: -10.603373527526855
    10. '=end' → logprob: -11.103373527526855

Token 78: ' expr' (ID: 30206)
  Prédit: 'expr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'expr' → logprob: -0.0017367053078487515
    2. ' expr' → logprob: -6.501736640930176
    3. 'eval' → logprob: -8.751736640930176
    4. '(expr' → logprob: -9.501736640930176
    5. '.expr' → logprob: -14.126736640930176
    6. ' eval' → logprob: -16.001737594604492
    7. 'express' → logprob: -16.126737594604492
    8. '_expr' → logprob: -16.376737594604492
    9. '(eval' → logprob: -16.626737594604492
    10. '   ' → logprob: -17.126737594604492

Token 79: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.06757165491580963
    2. 'expr' → logprob: -3.1925716400146484
    3. '[' → logprob: -4.067571640014648
    4. 'i' → logprob: -5.442571640014648
    5. '[len' → logprob: -6.442571640014648
    6. '.find' → logprob: -7.567571640014648
    7. '```' → logprob: -8.692571640014648
    8. '[e' → logprob: -8.942571640014648
    9. 'len' → logprob: -9.442571640014648
    10. '[
' → logprob: -9.692571640014648

Token 80: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.011173023842275143
    2. '1' → logprob: -4.636173248291016
    3. ' +' → logprob: -6.761173248291016
    4. '[' → logprob: -8.636173248291016
    5. ']' → logprob: -10.886173248291016
    6. ']+' → logprob: -11.011173248291016
    7. ' ' → logprob: -12.011173248291016
    8. '2' → logprob: -12.136173248291016
    9. '   ' → logprob: -12.136173248291016
    10. 'i' → logprob: -12.261173248291016

Token 81: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0025429665111005306
    2. '0' → logprob: -6.002542972564697
    3. 'len' → logprob: -10.627542495727539
    4. ' ' → logprob: -11.002542495727539
    5. '<|end|>' → logprob: -11.627542495727539
    6. ']' → logprob: -12.252542495727539
    7. 'expr' → logprob: -12.627542495727539
    8. '   ' → logprob: -13.127542495727539
    9. '2' → logprob: -13.752542495727539
    10. '```' → logprob: -13.877542495727539

Token 82: ':-' (ID: 20118)
  Prédit: ':-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':-' → logprob: -0.00921668205410242
    2. ':' → logprob: -4.759216785430908
    3. ':]' → logprob: -7.509216785430908
    4. ':].' → logprob: -10.63421630859375
    5. ' :' → logprob: -11.38421630859375
    6. ':i' → logprob: -11.50921630859375
    7. ':end' → logprob: -12.88421630859375
    8. ' :-' → logprob: -13.63421630859375
    9. ':j' → logprob: -13.63421630859375
    10. ']' → logprob: -14.38421630859375

Token 83: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.512236498361744e-07
    2. ' ' → logprob: -14.750000953674316
    3. ']' → logprob: -16.5
    4. '2' → logprob: -19.25
    5. '   ' → logprob: -19.5
    6. '１' → logprob: -20.375
    7. '  ' → logprob: -20.5
    8. ']]' → logprob: -21.25
    9. '']' → logprob: -22.0
    10. '

' → logprob: -22.5

Token 84: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.14562301337718964
    2. ']
' → logprob: -2.020622968673706
    3. ')' → logprob: -6.270623207092285
    4. ')
' → logprob: -7.145623207092285
    5. ' ]' → logprob: -9.520623207092285
    6. ']
' → logprob: -9.520623207092285
    7. '])' → logprob: -10.395623207092285
    8. '           ' → logprob: -10.770623207092285
    9. ' ]
' → logprob: -10.895623207092285
    10. ']

' → logprob: -11.520623207092285

Token 85: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.14625133574008942
    2. 'return' → logprob: -2.6462514400482178
    3. ' return' → logprob: -3.8962514400482178
    4. '       ' → logprob: -3.8962514400482178
    5. 'value' → logprob: -4.271251201629639
    6. '
' → logprob: -5.396251201629639
    7. ' value' → logprob: -5.771251201629639
    8. 'idx' → logprob: -7.271251201629639
    9. 'index' → logprob: -7.521251201629639
    10. 'val' → logprob: -7.771251201629639

Token 86: ' idx' (ID: 14016)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.8305495977401733
    2. 'val' → logprob: -1.5805495977401733
    3. ' return' → logprob: -1.9555495977401733
    4. 'value' → logprob: -2.705549716949463
    5. ' val' → logprob: -2.705549716949463
    6. 'idx' (adapté à ' idx') → logprob: -3.080549716949463
    7. 'index' → logprob: -4.455549716949463
    8. ' idx' → logprob: -4.705549716949463
    9. '           ' → logprob: -4.955549716949463
    10. ' value' → logprob: -5.205549716949463

Token 87: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.11301492899656296
    2. '=' → logprob: -2.2380149364471436
    3. '_val' → logprob: -9.238015174865723
    4. ')' → logprob: -10.488015174865723
    5. 'ex' → logprob: -10.613015174865723
    6. '_value' → logprob: -11.488015174865723
    7. ' ' → logprob: -11.613015174865723
    8. '   ' → logprob: -11.738015174865723
    9. '_' → logprob: -12.488015174865723
    10. ']' → logprob: -12.613015174865723

Token 88: ' eval' (ID: 29383)
  Prédit: 'eval'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'eval' → logprob: -0.3484678268432617
    2. ' eval' → logprob: -1.2234678268432617
    3. 'int' → logprob: -11.723467826843262
    4. '(eval' → logprob: -11.848467826843262
    5. '           ' → logprob: -12.598467826843262
    6. '    ' → logprob: -14.223467826843262
    7. '   ' → logprob: -14.223467826843262
    8. ' int' → logprob: -14.473467826843262
    9. 'evaluate' → logprob: -14.723467826843262
    10. '.eval' → logprob: -14.723467826843262

Token 89: '_expr' (ID: 53654)
  Prédit: '_expr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_expr' → logprob: -9.088346359931165e-07
    2. 'expr' → logprob: -14.750000953674316
    3. '_' → logprob: -15.625000953674316
    4. '_eval' → logprob: -15.875000953674316
    5. '_EXPR' → logprob: -16.375
    6. 'Expr' → logprob: -17.0
    7. '_exc' → logprob: -17.125
    8. '(expr' → logprob: -18.375
    9. '_obj' → logprob: -18.5
    10. '_elem' → logprob: -18.75

Token 90: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -1.5928495486150496e-05
    2. ' (' → logprob: -12.375016212463379
    3. '(ins' → logprob: -12.375016212463379
    4. '('' → logprob: -12.750016212463379
    5. '(in' → logprob: -13.625016212463379
    6. '("("' → logprob: -13.750016212463379
    7. '((' → logprob: -14.000016212463379
    8. '(
' → logprob: -14.500016212463379
    9. '(inner' → logprob: -14.750016212463379
    10. '(

' → logprob: -17.000015258789062

Token 91: 'inside' (ID: 79475)
  Prédit: 'inside'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inside' → logprob: -5.157039049663581e-05
    2. ' inside' → logprob: -9.875051498413086
    3. 'ins' → logprob: -18.625051498413086
    4. '(' → logprob: -19.375051498413086
    5. 'Inside' → logprob: -19.875051498413086
    6. ' ' → logprob: -19.875051498413086
    7. 'outside' → logprob: -19.875051498413086
    8. '_inside' → logprob: -20.125051498413086
    9. '   ' → logprob: -20.500051498413086
    10. ')' → logprob: -20.750051498413086

Token 92: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00020497082732617855
    2. ')
' → logprob: -8.500205039978027
    3. ' )' → logprob: -14.375205039978027
    4. ')return' → logprob: -14.750205039978027
    5. ')
' → logprob: -15.500205039978027
    6. '   ' → logprob: -16.12520408630371
    7. '           ' → logprob: -16.62520408630371
    8. '       ' → logprob: -16.62520408630371
    9. ')

' → logprob: -17.50020408630371
    10. '))' → logprob: -18.62520408630371

Token 93: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.02070140838623047
    2. '       ' → logprob: -4.1457014083862305
    3. '   ' → logprob: -6.5207014083862305
    4. 'return' → logprob: -6.6457014083862305
    5. ' return' → logprob: -7.3957014083862305
    6. '<|end|>' → logprob: -7.3957014083862305
    7. ')' → logprob: -8.02070140838623
    8. ' if' → logprob: -9.39570140838623
    9. '            
' → logprob: -10.02070140838623
    10. '[' → logprob: -10.27070140838623

Token 94: ' if' (ID: 538)
  Prédit: ' return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.7376289963722229
    2. 'return' → logprob: -0.9876289963722229
    3. '           ' → logprob: -1.9876289367675781
    4. '       ' → logprob: -5.112628936767578
    5. ']' → logprob: -6.237628936767578
    6. '   ' → logprob: -6.362628936767578
    7. ')' → logprob: -6.487628936767578
    8. '	return' → logprob: -8.112628936767578
    9. ')return' → logprob: -8.987628936767578
    10. ' ' → logprob: -9.362628936767578

Token 95: ' name' (ID: 1308)
  Prédit: 'name'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'name' → logprob: -0.08961127698421478
    2. ' name' → logprob: -2.464611291885376
    3. ' arrays' → logprob: -7.839611053466797
    4. 'assigned' → logprob: -8.714611053466797
    5. 'arrays' → logprob: -9.714611053466797
    6. ' assigned' → logprob: -10.339611053466797
    7. '           ' → logprob: -12.214611053466797
    8. ' ' → logprob: -12.714611053466797
    9. 'arr' → logprob: -13.214611053466797
    10. '	name' → logprob: -13.339611053466797

Token 96: ' not' (ID: 625)
  Prédit: ' not'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.1696336418390274
    2. ' in' → logprob: -2.794633626937866
    3. ']' → logprob: -3.044633626937866
    4. 'not' → logprob: -3.169633626937866
    5. 'in' → logprob: -5.544633865356445
    6. '][' → logprob: -7.044633865356445
    7. '[' → logprob: -7.794633865356445
    8. '<|end|>' → logprob: -11.294633865356445
    9. '	not' → logprob: -11.419633865356445
    10. ')' → logprob: -11.544633865356445

Token 97: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.008752484805881977
    2. ' arrays' → logprob: -4.883752346038818
    3. 'arrays' → logprob: -7.008752346038818
    4. 'in' → logprob: -9.008752822875977
    5. '<|end|>' → logprob: -9.633752822875977
    6. '_arrays' → logprob: -10.758752822875977
    7. ' or' → logprob: -11.258752822875977
    8. '<|end|>' → logprob: -12.383752822875977
    9. ')' → logprob: -12.508752822875977
    10. '[' → logprob: -13.133752822875977

Token 98: ' arrays' (ID: 38774)
  Prédit: 'arrays'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'arrays' → logprob: -0.08600892871618271
    2. ' arrays' → logprob: -2.5860090255737305
    3. 'assigned' → logprob: -4.9610090255737305
    4. ' assigned' → logprob: -9.58600902557373
    5. 'arr' → logprob: -11.58600902557373
    6. 'array' → logprob: -11.96100902557373
    7. 'assign' → logprob: -14.08600902557373
    8. '_arrays' → logprob: -14.33600902557373
    9. 'allocated' → logprob: -14.96100902557373
    10. '```' → logprob: -15.08600902557373

Token 99: ':
' (ID: 734)
  Prédit: ' or'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' or' → logprob: -0.28179502487182617
    2. ':' → logprob: -1.4067950248718262
    3. ':
' → logprob: -8.031795501708984
    4. ':return' → logprob: -9.031795501708984
    5. 'or' → logprob: -9.531795501708984
    6. ')' → logprob: -9.906795501708984
    7. '):' → logprob: -10.406795501708984
    8. '<|end|>' → logprob: -11.406795501708984
    9. '[' → logprob: -11.531795501708984
    10. ']' → logprob: -12.031795501708984

Token 100: '               ' (ID: 506)
  Prédit: ' or'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' or' → logprob: -0.33282336592674255
    2. '               ' → logprob: -1.332823395729065
    3. ':' → logprob: -4.457823276519775
    4. ':
' → logprob: -5.207823276519775
    5. '           ' → logprob: -6.957823276519775
    6. ':return' → logprob: -7.082823276519775
    7. ' return' → logprob: -9.082823753356934
    8. '       ' → logprob: -9.332823753356934
    9. 'return' → logprob: -9.707823753356934
    10. ')' → logprob: -10.207823753356934

Token 101: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.4068504273891449
    2. ' return' → logprob: -1.4068504571914673
    3. 'raise' → logprob: -2.9068503379821777
    4. '               ' → logprob: -3.9068503379821777
    5. ' raise' → logprob: -4.406850337982178
    6. '                   ' → logprob: -6.406850337982178
    7. 'print' → logprob: -7.906850337982178
    8. '           ' → logprob: -9.281850814819336
    9. '
' → logprob: -9.656850814819336
    10. ' print' → logprob: -9.781850814819336

Token 102: ' None' (ID: 4662)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0643572211265564
    2. ' ' → logprob: -3.189357280731201
    3. '-' → logprob: -4.564357280731201
    4. 'None' → logprob: -4.939357280731201
    5. ' None' → logprob: -5.814357280731201
    6. ' -' → logprob: -7.564357280731201
    7. '[]' → logprob: -11.814356803894043
    8. 'False' → logprob: -12.126856803894043
    9. 'float' → logprob: -12.189356803894043
    10. '1' → logprob: -12.376856803894043

Token 103: ',' (ID: 11)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.030131462961435318
    2. '            
' → logprob: -3.9051315784454346
    3. '
' → logprob: -4.7801313400268555
    4. '        
' → logprob: -8.030131340026855
    5. '    
' → logprob: -8.155131340026855
    6. '<|end|>' → logprob: -8.655131340026855
    7. '       ' → logprob: -9.655131340026855
    8. '           
' → logprob: -9.655131340026855
    9. ' 
' → logprob: -10.280131340026855
    10. '          ' → logprob: -10.655131340026855

Token 104: ' '' (ID: 461)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'False' → logprob: -1.0500421524047852
    2. ' None' → logprob: -1.3000421524047852
    3. 'None' → logprob: -1.3000421524047852
    4. ' False' → logprob: -2.550042152404785
    5. '0' → logprob: -4.050042152404785
    6. 'True' → logprob: -5.800042152404785
    7. '"' → logprob: -6.175042152404785
    8. ' True' → logprob: -6.300042152404785
    9. ' f' → logprob: -7.050042152404785
    10. ' ' → logprob: -7.175042152404785

Token 105: 'unde' (ID: 14171)
  Prédit: 'Error'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Error' → logprob: -1.3573685884475708
    2. 'None' → logprob: -1.7323685884475708
    3. 'Index' → logprob: -1.8573685884475708
    4. ''' → logprob: -2.2323684692382812
    5. ' None' → logprob: -2.7323684692382812
    6. 'undefined' → logprob: -3.3573684692382812
    7. 'Invalid' → logprob: -3.3573684692382812
    8. 'Undefined' → logprob: -3.4823684692382812
    9. 'error' → logprob: -3.7323684692382812
    10. '"' → logprob: -3.8573684692382812

Token 106: 'clared' (ID: 178262)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.028038078919053078
    2. 'clared' → logprob: -3.6530380249023438
    3. 'r' → logprob: -6.403038024902344
    4. 'fine' → logprob: -10.278038024902344
    5. 'FINED' → logprob: -10.778038024902344
    6. '' → logprob: -12.403038024902344
    7. 'efined' → logprob: -12.403038024902344
    8. '```' → logprob: -13.028038024902344
    9. ' fined' → logprob: -13.403038024902344
    10. 'fi' → logprob: -13.528038024902344

Token 107: ''
' (ID: 2207)
  Prédit: ' variable'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' variable' → logprob: -0.29157280921936035
    2. ''' → logprob: -2.1665728092193604
    3. '_variable' → logprob: -2.4165728092193604
    4. 'variable' → logprob: -3.4165728092193604
    5. ' identifier' → logprob: -5.291572570800781
    6. ' array' → logprob: -5.416572570800781
    7. 'identifier' → logprob: -6.541572570800781
    8. '_identifier' → logprob: -6.666572570800781
    9. '_array' → logprob: -6.916572570800781
    10. '-variable' → logprob: -7.041572570800781

Token 108: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -1.0828973054885864
    2. '
' → logprob: -1.3328973054885864
    3. '<|end|>' → logprob: -1.3328973054885864
    4. '       ' → logprob: -2.582897186279297
    5. '\n' → logprob: -3.832897186279297
    6. '            
' → logprob: -4.457897186279297
    7. '    
' → logprob: -5.332897186279297
    8. '        
' → logprob: -5.457897186279297
    9. '  
' → logprob: -5.582897186279297
    10. ' 
' → logprob: -5.707897186279297

Token 109: ' size' (ID: 2349)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.46752458810806274
    2. ' if' → logprob: -1.342524528503418
    3. 'if' → logprob: -3.092524528503418
    4. 'idx' → logprob: -4.342524528503418
    5. 'value' → logprob: -4.592524528503418
    6. 'index' → logprob: -4.592524528503418
    7. 'val' → logprob: -4.717524528503418
    8. ' val' → logprob: -4.842524528503418
    9. ' idx' → logprob: -5.592524528503418
    10. ' value' → logprob: -5.717524528503418

Token 110: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.14322920143604279
    2. '=' → logprob: -2.0182292461395264
    3. ',' → logprob: -8.143229484558105
    4. ' if' → logprob: -9.143229484558105
    5. ' ' → logprob: -9.518229484558105
    6. '<|end|>' → logprob: -10.643229484558105
    7. 'if' → logprob: -10.768229484558105
    8. '   ' → logprob: -11.893229484558105
    9. ')' → logprob: -12.268229484558105
    10. '<|end|>' → logprob: -12.643229484558105

Token 111: ' arrays' (ID: 38774)
  Prédit: ' arrays'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' arrays' → logprob: -0.20228047668933868
    2. 'arrays' → logprob: -1.7022805213928223
    3. 'len' → logprob: -7.202280521392822
    4. ' len' → logprob: -9.077280044555664
    5. 'arr' → logprob: -12.077280044555664
    6. 'array' → logprob: -13.827280044555664
    7. ' ' → logprob: -15.202280044555664
    8. '   ' → logprob: -15.577280044555664
    9. '_arrays' → logprob: -16.577280044555664
    10. '数组' → logprob: -16.889780044555664

Token 112: '[name' (ID: 23001)
  Prédit: '[name'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[name' → logprob: -4.4849443838757e-06
    2. '[' → logprob: -12.500004768371582
    3. 'name' → logprob: -14.875004768371582
    4. '.get' → logprob: -15.375004768371582
    5. ' [' → logprob: -16.625003814697266
    6. '[
' → logprob: -19.250003814697266
    7. '

' → logprob: -19.500003814697266
    8. '[size' → logprob: -19.500003814697266
    9. '{name' → logprob: -19.875003814697266
    10. '[email' → logprob: -20.500003814697266

Token 113: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.04116863012313843
    2. '[' → logprob: -3.666168689727783
    3. ']
' → logprob: -4.791168689727783
    4. '<|end|>' → logprob: -5.791168689727783
    5. '
' → logprob: -6.791168689727783
    6. ')' → logprob: -6.916168689727783
    7. '<|end|>' → logprob: -7.916168689727783
    8. '][' → logprob: -8.041168212890625
    9. ' ]' → logprob: -9.041168212890625
    10. 'def' → logprob: -9.166168212890625

Token 114: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.07015016674995422
    2. ' if' → logprob: -2.945150136947632
    3. 'if' → logprob: -4.195150375366211
    4. '       ' → logprob: -10.195150375366211
    5. '               ' → logprob: -11.570150375366211
    6. ' ' → logprob: -12.195150375366211
    7. '   ' → logprob: -12.320150375366211
    8. '	if' → logprob: -12.445150375366211
    9. '<|end|>' → logprob: -12.445150375366211
    10. '            
' → logprob: -12.820150375366211

Token 115: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.5950230360031128
    2. ' if' → logprob: -0.8450230360031128
    3. '           ' → logprob: -3.9700231552124023
    4. '   ' → logprob: -11.845023155212402
    5. '       ' → logprob: -11.970023155212402
    6. '
' → logprob: -11.970023155212402
    7. '```' → logprob: -12.845023155212402
    8. ' ' → logprob: -13.095023155212402
    9. 'If' → logprob: -13.595023155212402
    10. '	if' → logprob: -13.845023155212402

Token 116: ' idx' (ID: 14016)
  Prédit: ' idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' idx' → logprob: -0.5881051421165466
    2. 'idx' → logprob: -0.8381051421165466
    3. ' not' → logprob: -4.463105201721191
    4. 'not' → logprob: -7.963105201721191
    5. '0' → logprob: -9.338105201721191
    6. ' ' → logprob: -9.463105201721191
    7. '(idx' → logprob: -10.463105201721191
    8. 'index' → logprob: -11.838105201721191
    9. '	idx' → logprob: -11.838105201721191
    10. ' index' → logprob: -12.838105201721191

Token 117: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.3136676549911499
    2. '<' → logprob: -1.31366765499115
    3. ' >=' → logprob: -7.9386677742004395
    4. '>=' → logprob: -10.313667297363281
    5. '[' → logprob: -12.063667297363281
    6. ' is' → logprob: -12.438667297363281
    7. '<|end|>' → logprob: -13.063667297363281
    8. ' ' → logprob: -13.188667297363281
    9. '<int' → logprob: -14.063667297363281
    10. 'is' → logprob: -14.438667297363281

Token 118: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.03364615887403488
    2. ' ' → logprob: -3.4086461067199707
    3. ' ' → logprob: -16.158645629882812
    4. '<|end|>' → logprob: -16.158645629882812
    5. '1' → logprob: -16.596145629882812
    6. '  ' → logprob: -16.908645629882812
    7. ' or' → logprob: -16.971145629882812
    8. '۰' → logprob: -17.283645629882812
    9. '   ' → logprob: -17.471145629882812
    10. '```' → logprob: -18.096145629882812

Token 119: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00017982252757064998
    2. ' ' → logprob: -8.6251802444458
    3. '1' → logprob: -15.8751802444458
    4. '   ' → logprob: -18.000179290771484
    5. 'size' → logprob: -18.125179290771484
    6. '```' → logprob: -18.375179290771484
    7. '<|end|>' → logprob: -18.625179290771484
    8. '00' → logprob: -18.625179290771484
    9. '۰' → logprob: -18.812679290771484
    10. '
' → logprob: -19.250179290771484

Token 120: ' or' (ID: 503)
  Prédit: ' or'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' or' → logprob: -0.0006388116744346917
    2. 'or' → logprob: -7.375638961791992
    3. ' ' → logprob: -12.000638961791992
    4. '<|end|>' → logprob: -12.375638961791992
    5. '	or' → logprob: -13.250638961791992
    6. '<|end|>' → logprob: -17.375638961791992
    7. ' ' → logprob: -17.375638961791992
    8. ')' → logprob: -17.750638961791992
    9. '0' → logprob: -17.750638961791992
    10. ' and' → logprob: -18.750638961791992

Token 121: ' idx' (ID: 14016)
  Prédit: ' idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' idx' → logprob: -0.3132673501968384
    2. 'idx' → logprob: -1.3132673501968384
    3. '	idx' → logprob: -12.313267707824707
    4. '(idx' → logprob: -14.563267707824707
    5. '[idx' → logprob: -14.688267707824707
    6. '           ' → logprob: -17.18826675415039
    7. '.idx' → logprob: -17.18826675415039
    8. '_idx' → logprob: -17.31326675415039
    9. ' ' → logprob: -17.31326675415039
    10. 'index' → logprob: -17.43826675415039

Token 122: ' >=' (ID: 5064)
  Prédit: '>='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>=' → logprob: -0.005954752676188946
    2. ' >=' → logprob: -5.130954742431641
    3. ']>=' → logprob: -11.38095474243164
    4. '>' → logprob: -11.63095474243164
    5. ')>=' → logprob: -13.00595474243164
    6. '```' → logprob: -13.88095474243164
    7. '≥' → logprob: -14.63095474243164
    8. '[' → logprob: -15.13095474243164
    9. '0' → logprob: -15.13095474243164
    10. '==' → logprob: -15.25595474243164

Token 123: ' size' (ID: 2349)
  Prédit: ' size'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' size' → logprob: -0.47407740354537964
    2. 'size' → logprob: -0.9740774035453796
    3. ' arrays' → logprob: -15.974077224731445
    4. 'arrays' → logprob: -16.724077224731445
    5. 'sizes' → logprob: -17.099077224731445
    6. ' ' → logprob: -17.224077224731445
    7. '	size' → logprob: -17.224077224731445
    8. '(size' → logprob: -17.599077224731445
    9. '           ' → logprob: -18.224077224731445
    10. ' sizes' → logprob: -18.599077224731445

Token 124: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.18131671845912933
    2. ':
' → logprob: -1.8063167333602905
    3. ' or' → logprob: -7.18131685256958
    4. '       ' → logprob: -8.181316375732422
    5. ':return' → logprob: -8.181316375732422
    6. '           ' → logprob: -8.931316375732422
    7. ':

' → logprob: -9.806316375732422
    8. '<|end|>' → logprob: -11.431316375732422
    9. ',' → logprob: -11.806316375732422
    10. '   ' → logprob: -11.931316375732422

Token 125: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.18573902547359467
    2. 'return' → logprob: -1.9357390403747559
    3. ' return' → logprob: -3.685739040374756
    4. '           ' → logprob: -9.435738563537598
    5. '                   ' → logprob: -11.310738563537598
    6. '	return' → logprob: -11.935738563537598
    7. ':return' → logprob: -12.435738563537598
    8. '   ' → logprob: -12.935738563537598
    9. ',' → logprob: -12.935738563537598
    10. '
' → logprob: -13.185738563537598

Token 126: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.13719604909420013
    2. ' return' → logprob: -2.1371960639953613
    3. '               ' → logprob: -4.637196063995361
    4. '           ' → logprob: -8.137195587158203
    5. '                   ' → logprob: -8.637195587158203
    6. '
' → logprob: -10.262195587158203
    7. '   ' → logprob: -11.387195587158203
    8. ' ' → logprob: -12.762195587158203
    9. '	return' → logprob: -12.762195587158203
    10. 'None' → logprob: -12.762195587158203

Token 127: ' None' (ID: 4662)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -0.008724482730031013
    2. ' None' → logprob: -4.758724689483643
    3. '(None' → logprob: -9.258724212646484
    4. '0' → logprob: -12.383724212646484
    5. ',None' → logprob: -12.508724212646484
    6. ''' → logprob: -13.383724212646484
    7. '-' → logprob: -13.883724212646484
    8. 'False' → logprob: -14.383724212646484
    9. '   ' → logprob: -14.508724212646484
    10. '1' → logprob: -14.508724212646484

Token 128: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0004200674593448639
    2. ' ,' → logprob: -7.875420093536377
    3. '',' → logprob: -10.375419616699219
    4. ''' → logprob: -12.875419616699219
    5. ''s' → logprob: -12.875419616699219
    6. ' '' → logprob: -13.500419616699219
    7. ','' → logprob: -14.000419616699219
    8. '‌,' → logprob: -15.625419616699219
    9. ' ',' → logprob: -15.750419616699219
    10. ''t' → logprob: -16.00041961669922

Token 129: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.009647596627473831
    2. ' '' → logprob: -4.759647369384766
    3. ''ind' → logprob: -7.134647369384766
    4. ''il' → logprob: -10.634647369384766
    5. ' ' → logprob: -10.759647369384766
    6. '   ' → logprob: -11.009647369384766
    7. '"' → logprob: -11.009647369384766
    8. '`' → logprob: -11.134647369384766
    9. ''in' → logprob: -11.259647369384766
    10. ''un' → logprob: -11.259647369384766

Token 130: 'index' (ID: 2257)
  Prédit: 'out'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'out' → logprob: -0.052758220583200455
    2. 'index' → logprob: -3.55275821685791
    3. 'overflow' → logprob: -4.55275821685791
    4. ''' → logprob: -5.67775821685791
    5. 'seg' → logprob: -6.30275821685791
    6. 'invalid' → logprob: -6.67775821685791
    7. 'error' → logprob: -7.05275821685791
    8. 'bound' → logprob: -7.17775821685791
    9. 'o' → logprob: -7.17775821685791
    10. 'bounds' → logprob: -7.55275821685791

Token 131: ''
' (ID: 2207)
  Prédit: ' out'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' out' → logprob: -1.0211323499679565
    2. '_out' → logprob: -1.1461323499679565
    3. '_error' → logprob: -1.2711323499679565
    4. 'error' → logprob: -4.021132469177246
    5. 'out' → logprob: -4.646132469177246
    6. ' error' → logprob: -4.646132469177246
    7. '_' → logprob: -5.646132469177246
    8. 'Error' → logprob: -8.396132469177246
    9. ' ' → logprob: -9.521132469177246
    10. ' _' → logprob: -9.646132469177246

Token 132: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0034673791378736496
    2. '       ' → logprob: -6.378467559814453
    3. 'return' → logprob: -7.253467559814453
    4. ' return' → logprob: -7.503467559814453
    5. '            
' → logprob: -9.378467559814453
    6. '\n' → logprob: -9.503467559814453
    7. '<|end|>' → logprob: -9.503467559814453
    8. '
' → logprob: -9.628467559814453
    9. ' None' → logprob: -10.128467559814453
    10. ',' → logprob: -10.378467559814453

Token 133: ' if' (ID: 538)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.25456738471984863
    2. ' return' → logprob: -2.5045673847198486
    3. '           ' → logprob: -2.6295673847198486
    4. 'value' → logprob: -3.5045673847198486
    5. 'if' (adapté à ' if') → logprob: -4.0045671463012695
    6. ' if' → logprob: -4.5045671463012695
    7. ' value' → logprob: -5.2545671463012695
    8. 'val' → logprob: -5.6295671463012695
    9. ' val' → logprob: -7.0045671463012695
    10. '       ' → logprob: -7.3795671463012695

Token 134: ' (' (ID: 350)
  Prédit: ' name'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' name' → logprob: -0.5932003259658813
    2. 'name' → logprob: -0.8432003259658813
    3. ' not' → logprob: -5.468200206756592
    4. ' assigned' → logprob: -5.593200206756592
    5. ' (' → logprob: -5.843200206756592
    6. 'assigned' → logprob: -5.843200206756592
    7. '(name' → logprob: -6.843200206756592
    8. 'not' → logprob: -6.843200206756592
    9. '(' → logprob: -7.093200206756592
    10. '(not' → logprob: -9.09320068359375

Token 135: 'name' (ID: 897)
  Prédit: 'name'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'name' → logprob: -0.0036282234359532595
    2. ' name' → logprob: -5.628628253936768
    3. '(name' → logprob: -11.00362777709961
    4. ' (' → logprob: -11.75362777709961
    5. ')' → logprob: -14.12862777709961
    6. 'not' → logprob: -14.50362777709961
    7. ' ' → logprob: -14.87862777709961
    8. 'expr' → logprob: -14.87862777709961
    9. ',' → logprob: -15.12862777709961
    10. '(' → logprob: -15.12862777709961

Token 136: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.013644123449921608
    2. ' not' → logprob: -4.388644218444824
    3. ')' → logprob: -8.138644218444824
    4. ' ,' → logprob: -8.263644218444824
    5. '[' → logprob: -8.888644218444824
    6. ' in' → logprob: -9.013644218444824
    7. 'not' → logprob: -9.138644218444824
    8. ',get' → logprob: -10.138644218444824
    9. '.get' → logprob: -10.888644218444824
    10. '[idx' → logprob: -11.013644218444824

Token 137: ' idx' (ID: 14016)
  Prédit: 'idx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'idx' → logprob: -0.16023863852024078
    2. ' idx' → logprob: -1.9102386236190796
    3. ')' → logprob: -12.160238265991211
    4. '(idx' → logprob: -12.785238265991211
    5. '[idx' → logprob: -13.160238265991211
    6. '	idx' → logprob: -13.285238265991211
    7. ' ' → logprob: -13.535238265991211
    8. 'expr' → logprob: -14.660238265991211
    9. 'index' → logprob: -15.035238265991211
    10. '_idx' → logprob: -16.16023826599121

Token 138: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0004733294772449881
    2. ' not' → logprob: -8.750473022460938
    3. ' )' → logprob: -9.000473022460938
    4. ']' → logprob: -9.250473022460938
    5. 'not' → logprob: -9.500473022460938
    6. '   ' → logprob: -12.125473022460938
    7. '[' → logprob: -12.500473022460938
    8. '])' → logprob: -13.250473022460938
    9. '）' → logprob: -13.250473022460938
    10. ')]' → logprob: -13.500473022460938

Token 139: ' not' (ID: 625)
  Prédit: ' not'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.22648002207279205
    2. 'not' → logprob: -1.6014800071716309
    3. ' in' → logprob: -7.851480007171631
    4. 'in' → logprob: -8.101480484008789
    5. ']' → logprob: -8.226480484008789
    6. ')' → logprob: -9.351480484008789
    7. '[' → logprob: -11.601480484008789
    8. '	not' → logprob: -12.726480484008789
    9. ' ' → logprob: -12.851480484008789
    10. ',' → logprob: -14.226480484008789

Token 140: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.01473688893020153
    2. ' assigned' → logprob: -4.639736652374268
    3. 'in' → logprob: -5.514736652374268
    4. 'assigned' → logprob: -7.014736652374268
    5. ' ' → logprob: -11.639737129211426
    6. ',' → logprob: -11.639737129211426
    7. ')' → logprob: -11.889737129211426
    8. ' to' → logprob: -12.264737129211426
    9. '<|end|>' → logprob: -12.764737129211426
    10. '<|end|>' → logprob: -13.264737129211426

Token 141: ' assigned' (ID: 21482)
  Prédit: 'assigned'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'assigned' → logprob: -0.008617408573627472
    2. ' assigned' → logprob: -4.758617401123047
    3. 'arrays' → logprob: -14.258617401123047
    4. '   ' → logprob: -14.508617401123047
    5. ' arrays' → logprob: -14.758617401123047
    6. 'ass' → logprob: -15.133617401123047
    7. ' ' → logprob: -15.133617401123047
    8. 'assign' → logprob: -15.633617401123047
    9. 'allocated' → logprob: -16.258617401123047
    10. 'visited' → logprob: -16.258617401123047

Token 142: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.18339723348617554
    2. ' or' → logprob: -2.4333972930908203
    3. ':
' → logprob: -2.6833972930908203
    4. 'or' → logprob: -5.68339729309082
    5. '):' → logprob: -5.80839729309082
    6. ':return' → logprob: -6.18339729309082
    7. ')' → logprob: -6.43339729309082
    8. '):
' → logprob: -7.43339729309082
    9. '<|end|>' → logprob: -7.80839729309082
    10. '   ' → logprob: -9.43339729309082

Token 143: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.1211455762386322
    2. ':
' → logprob: -2.746145486831665
    3. ':' → logprob: -3.496145486831665
    4. '           ' → logprob: -5.246145725250244
    5. ':return' → logprob: -5.246145725250244
    6. ' return' → logprob: -5.746145725250244
    7. ' or' → logprob: -5.871145725250244
    8. 'return' → logprob: -6.746145725250244
    9. '):
' → logprob: -7.871145725250244
    10. ',' → logprob: -8.246145248413086

Token 144: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.0800141766667366
    2. ' return' → logprob: -2.580014228820801
    3. '               ' → logprob: -6.955014228820801
    4. '                   ' → logprob: -9.3300142288208
    5. 'None' → logprob: -10.4550142288208
    6. '	return' → logprob: -10.9550142288208
    7. '   ' → logprob: -11.4550142288208
    8. ' None' → logprob: -12.2050142288208
    9. '           ' → logprob: -12.3300142288208
    10. ',' → logprob: -12.4550142288208

Token 145: ' None' (ID: 4662)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -0.023396071046590805
    2. ' None' → logprob: -3.7733960151672363
    3. '(None' → logprob: -8.898396492004395
    4. ',None' → logprob: -12.398396492004395
    5. ''' → logprob: -13.148396492004395
    6. '   ' → logprob: -13.523396492004395
    7. ' ' → logprob: -13.773396492004395
    8. '
' → logprob: -14.148396492004395
    9. '_None' → logprob: -14.148396492004395
    10. '  ' → logprob: -14.273396492004395

Token 146: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0015671150758862495
    2. ' ,' → logprob: -6.5015668869018555
    3. '',' → logprob: -9.751566886901855
    4. ',None' → logprob: -13.126566886901855
    5. ''s' → logprob: -14.001566886901855
    6. ','' → logprob: -14.126566886901855
    7. ',
' → logprob: -14.501566886901855
    8. '`,' → logprob: -14.751566886901855
    9. 'None' → logprob: -15.001566886901855
    10. '_,' → logprob: -15.126566886901855

Token 147: ' '' (ID: 461)
  Prédit: ''un'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''un' → logprob: -0.025341521948575974
    2. ''' → logprob: -4.525341510772705
    3. ' '' → logprob: -4.775341510772705
    4. ''ind' → logprob: -6.525341510772705
    5. ''value' → logprob: -6.900341510772705
    6. ''access' → logprob: -7.525341510772705
    7. ''una' → logprob: -7.650341510772705
    8. ''ok' → logprob: -7.775341510772705
    9. ''une' → logprob: -8.525341987609863
    10. ''n' → logprob: -8.650341987609863

Token 148: 'unset' (ID: 87871)
  Prédit: 'un'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'un' → logprob: -0.16356970369815826
    2. ''' → logprob: -3.163569688796997
    3. 'undefined' → logprob: -3.538569688796997
    4. 'unde' → logprob: -3.913569688796997
    5. 'value' → logprob: -4.538569927215576
    6. 'seg' → logprob: -4.913569927215576
    7. 'error' → logprob: -5.163569927215576
    8. '"' → logprob: -5.288569927215576
    9. 'used' → logprob: -5.413569927215576
    10. 'out' → logprob: -5.788569927215576

Token 149: ''
' (ID: 2207)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.005278465338051319
    2. ''
' → logprob: -5.255278587341309
    3. ''

' → logprob: -11.630278587341309
    4. '')' → logprob: -12.130278587341309
    5. ''}' → logprob: -12.255278587341309
    6. ''
' → logprob: -12.380278587341309
    7. 'value' → logprob: -12.380278587341309
    8. ''value' → logprob: -12.505278587341309
    9. '"' → logprob: -12.630278587341309
    10. 'return' → logprob: -12.630278587341309

Token 150: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.029738569632172585
    2. 'return' → logprob: -3.654738664627075
    3. '       ' → logprob: -6.654738426208496
    4. ' return' → logprob: -6.904738426208496
    5. '
' → logprob: -7.154738426208496
    6. '            
' → logprob: -8.404738426208496
    7. '    
' → logprob: -10.404738426208496
    8. '        
' → logprob: -10.904738426208496
    9. '   ' → logprob: -11.154738426208496
    10. ',' → logprob: -11.154738426208496

Token 151: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.150578111410141
    2. '           ' → logprob: -2.025578022003174
    3. ' return' → logprob: -5.150578022003174
    4. '       ' → logprob: -6.275578022003174
    5. '
' → logprob: -9.150578498840332
    6. '   ' → logprob: -10.400578498840332
    7. '	return' → logprob: -10.400578498840332
    8. '            
' → logprob: -11.775578498840332
    9. 'value' → logprob: -12.025578498840332
    10. '               ' → logprob: -13.025578498840332

Token 152: ' assigned' (ID: 21482)
  Prédit: 'assigned'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'assigned' → logprob: -0.07905943691730499
    2. ' assigned' → logprob: -2.579059362411499
    3. '(' → logprob: -9.079059600830078
    4. ' (' → logprob: -10.329059600830078
    5. 'int' → logprob: -11.704059600830078
    6. '(int' → logprob: -12.704059600830078
    7. '0' → logprob: -13.329059600830078
    8. '('' → logprob: -13.454059600830078
    9. 'ass' → logprob: -13.704059600830078
    10. ' int' → logprob: -13.704059600830078

Token 153: '[(' (ID: 20542)
  Prédit: '[('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[(' → logprob: -0.11407343298196793
    2. '[name' → logprob: -2.2390735149383545
    3. '[' → logprob: -6.864073276519775
    4. '[[' → logprob: -9.739073753356934
    5. ',' → logprob: -10.489073753356934
    6. '(name' → logprob: -10.989073753356934
    7. '```' → logprob: -10.989073753356934
    8. '   ' → logprob: -11.239073753356934
    9. '[
' → logprob: -11.239073753356934
    10. 'name' → logprob: -11.364073753356934

Token 154: 'name' (ID: 897)
  Prédit: 'name'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'name' → logprob: -2.7610454708337784e-05
    2. ' name' → logprob: -10.500027656555176
    3. '(name' → logprob: -17.25002670288086
    4. ''name' → logprob: -17.62502670288086
    5. ' ' → logprob: -18.87502670288086
    6. '"name' → logprob: -19.12502670288086
    7. '	name' → logprob: -19.25002670288086
    8. '   ' → logprob: -19.50002670288086
    9. ',name' → logprob: -19.50002670288086
    10. ')' → logprob: -19.50002670288086

Token 155: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -7.016616291366518e-05
    2. ' ,' → logprob: -9.750070571899414
    3. ',index' → logprob: -11.750070571899414
    4. '‌,' → logprob: -14.500070571899414
    5. ',name' → logprob: -15.250070571899414
    6. ',key' → logprob: -15.250070571899414
    7. ',
' → logprob: -15.500070571899414
    8. '[idx' → logprob: -15.500070571899414
    9. ',i' → logprob: -15.750070571899414
    10. ',size' → logprob: -16.000070571899414

Token 156: ' idx' (ID: 14016)
  Prédit: 'idx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'idx' → logprob: -0.018150178715586662
    2. ' idx' → logprob: -4.018150329589844
    3. '	idx' → logprob: -16.393150329589844
    4. '[idx' → logprob: -16.643150329589844
    5. '(idx' → logprob: -17.143150329589844
    6. ' ' → logprob: -17.393150329589844
    7. '_idx' → logprob: -17.643150329589844
    8. ')' → logprob: -17.768150329589844
    9. 'index' → logprob: -18.143150329589844
    10. '
' → logprob: -18.268150329589844

Token 157: ')],' (ID: 60559)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.27683988213539124
    2. ')' → logprob: -1.7768398523330688
    3. '])' → logprob: -3.1518399715423584
    4. ']' → logprob: -3.5268399715423584
    5. '),' → logprob: -8.776840209960938
    6. '],' → logprob: -9.151840209960938
    7. ')])' → logprob: -9.401840209960938
    8. ')],' → logprob: -9.901840209960938
    9. ')
' → logprob: -10.901840209960938
    10. ')][' → logprob: -11.276840209960938

Token 158: ' None' (ID: 4662)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -0.0551488883793354
    2. ' None' → logprob: -2.9301488399505615
    3. '   ' → logprob: -8.93014907836914
    4. ''' → logprob: -10.05514907836914
    5. ' ' → logprob: -10.18014907836914
    6. '''' → logprob: -10.80514907836914
    7. '  ' → logprob: -11.43014907836914
    8. '"' → logprob: -12.68014907836914
    9. '(None' → logprob: -12.80514907836914
    10. '_None' → logprob: -12.93014907836914

Token 159: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 160: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8048726320266724
    2. '
' → logprob: -1.1798726320266724
    3. '       ' → logprob: -2.054872512817383
    4. '<|end|>' → logprob: -2.929872512817383
    5. '    
' → logprob: -3.304872512817383
    6. 'newline' → logprob: -4.929872512817383
    7. '\n' → logprob: -5.304872512817383
    8. '        
' → logprob: -5.554872512817383
    9. '  
' → logprob: -5.679872512817383
    10. ' 
' → logprob: -6.679872512817383

Token 161: ' line' (ID: 2543)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.21016915142536163
    2. '
' → logprob: -2.5851690769195557
    3. '    
' → logprob: -3.0851690769195557
    4. 'def' → logprob: -3.3351690769195557
    5. '<|end|>' → logprob: -4.585169315338135
    6. ' ' → logprob: -5.085169315338135
    7. 'newline' → logprob: -5.460169315338135
    8. '\n' → logprob: -6.085169315338135
    9. ' 
' → logprob: -6.210169315338135
    10. 'return' → logprob: -6.210169315338135

Token 162: '_no' (ID: 13575)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.017466288059949875
    2. ' =' → logprob: -4.142466068267822
    3. '=' → logprob: -6.767466068267822
    4. ' ' → logprob: -9.51746654510498
    5. '_number' → logprob: -9.76746654510498
    6. '_' → logprob: -10.01746654510498
    7. '_num' → logprob: -10.51746654510498
    8. '=line' → logprob: -11.26746654510498
    9. '_count' → logprob: -12.14246654510498
    10. ' s' → logprob: -12.14246654510498

Token 163: ' =' (ID: 314)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.9555732011795044
    2. ' =' → logprob: -0.9555732011795044
    3. '=' → logprob: -1.5805732011795044
    4. 't' → logprob: -3.830573081970215
    5. '_' → logprob: -6.330573081970215
    6. ' ' → logprob: -7.330573081970215
    7. ',' → logprob: -8.205573081970215
    8. '   ' → logprob: -9.330573081970215
    9. ' +=' → logprob: -9.455573081970215
    10. '  ' → logprob: -9.830573081970215

Token 164: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.004711595829576254
    2. ' ' → logprob: -5.379711627960205
    3. '1' → logprob: -9.504711151123047
    4. '   ' → logprob: -11.629711151123047
    5. 'len' → logprob: -12.504711151123047
    6. ' len' → logprob: -12.754711151123047
    7. '2' → logprob: -15.379711151123047
    8. 's' → logprob: -15.942211151123047
    9. '3' → logprob: -16.004711151123047
    10. '  ' → logprob: -16.067211151123047

Token 165: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.012866653501987457
    2. '1' → logprob: -4.387866497039795
    3. ' ' → logprob: -8.262866973876953
    4. 'len' → logprob: -9.512866973876953
    5. '2' → logprob: -11.637866973876953
    6. 'int' → logprob: -12.012866973876953
    7. '   ' → logprob: -12.887866973876953
    8. '3' → logprob: -13.137866973876953
    9. ' len' → logprob: -13.762866973876953
    10. '4' → logprob: -14.200366973876953

Token 166: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.6717061400413513
    2. '   ' → logprob: -1.046706199645996
    3. '    
' → logprob: -3.046706199645996
    4. 'for' → logprob: -3.796706199645996
    5. 'while' → logprob: -3.921706199645996
    6. ' for' → logprob: -4.046706199645996
    7. ' while' → logprob: -4.796706199645996
    8. '<|end|>' → logprob: -4.796706199645996
    9. '```' → logprob: -5.921706199645996
    10. '  
' → logprob: -5.921706199645996

Token 167: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.42390814423561096
    2. ' while' → logprob: -2.173908233642578
    3. ' for' → logprob: -2.423908233642578
    4. 'for' → logprob: -2.798908233642578
    5. 'while' → logprob: -2.798908233642578
    6. '<|end|>' → logprob: -4.548908233642578
    7. '
' → logprob: -5.298908233642578
    8. '```' → logprob: -6.423908233642578
    9. '	while' → logprob: -7.173908233642578
    10. '    
' → logprob: -7.298908233642578

Token 168: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.6279915571212769
    2. ' while' → logprob: -1.6279915571212769
    3. 'for' (adapté à ' for') → logprob: -1.6279915571212769
    4. 'while' → logprob: -2.6279916763305664
    5. '   ' → logprob: -6.877991676330566
    6. 'n' → logprob: -9.127991676330566
    7. '
' → logprob: -9.377991676330566
    8. ' line' → logprob: -9.877991676330566
    9. ' lines' → logprob: -10.002991676330566
    10. ' n' → logprob: -10.127991676330566

Token 169: ' line' (ID: 2543)
  Prédit: ' line'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' line' → logprob: -0.0002933942887466401
    2. 'line' → logprob: -8.250293731689453
    3. '	line' → logprob: -11.500293731689453
    4. ' _' → logprob: -11.625293731689453
    5. ' l' → logprob: -12.000293731689453
    6. '_' → logprob: -13.375293731689453
    7. ' lines' → logprob: -13.625293731689453
    8. ' ' → logprob: -13.750293731689453
    9. '(line' → logprob: -14.500293731689453
    10. '_line' → logprob: -14.500293731689453

Token 170: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.6375325918197632
    2. ' =' → logprob: -1.1375325918197632
    3. ':' → logprob: -2.3875327110290527
    4. 'in' → logprob: -4.387532711029053
    5. '   ' → logprob: -4.512532711029053
    6. '=' → logprob: -4.887532711029053
    7. '[' → logprob: -5.137532711029053
    8. ' :' → logprob: -5.512532711029053
    9. '[line' → logprob: -5.762532711029053
    10. ' +=' → logprob: -6.137532711029053

Token 171: ' lines' (ID: 8698)
  Prédit: ' lines'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' lines' → logprob: -0.281290203332901
    2. 'lines' → logprob: -1.4062901735305786
    3. ' sys' → logprob: -9.656290054321289
    4. '(lines' → logprob: -10.156290054321289
    5. '	lines' → logprob: -11.156290054321289
    6. 'sys' → logprob: -11.281290054321289
    7. '   ' → logprob: -12.031290054321289
    8. '_lines' → logprob: -13.656290054321289
    9. '```' → logprob: -14.281290054321289
    10. '.lines' → logprob: -14.531290054321289

Token 172: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0018159556202590466
    2. ':
' → logprob: -6.5018157958984375
    3. '       ' → logprob: -9.001815795898438
    4. '):' → logprob: -10.126815795898438
    5. '   ' → logprob: -10.376815795898438
    6. ',' → logprob: -10.501815795898438
    7. '.rstrip' → logprob: -10.876815795898438
    8. '.strip' → logprob: -11.126815795898438
    9. '[' → logprob: -11.751815795898438
    10. '.readline' → logprob: -12.001815795898438

Token 173: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.004574192222207785
    2. ' line' → logprob: -6.004574298858643
    3. '   ' → logprob: -6.629574298858643
    4. '    
' → logprob: -8.379573822021484
    5. '[line' → logprob: -8.879573822021484
    6. '#line' → logprob: -9.129573822021484
    7. '        
' → logprob: -9.129573822021484
    8. '(line' → logprob: -10.254573822021484
    9. '	line' → logprob: -10.379573822021484
    10. '```' → logprob: -10.879573822021484

Token 174: ' line' (ID: 2543)
  Prédit: ' line'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' line' → logprob: -0.04724402353167534
    2. '       ' → logprob: -3.547244071960449
    3. '   ' → logprob: -4.297244071960449
    4. 'line' (adapté à ' line') → logprob: -6.422244071960449
    5. ' parts' → logprob: -7.672244071960449
    6. '[line' → logprob: -7.672244071960449
    7. ' tokens' → logprob: -7.922244071960449
    8. '	line' → logprob: -8.29724407196045
    9. ' if' → logprob: -8.92224407196045
    10. '    ' → logprob: -9.17224407196045

Token 175: '_no' (ID: 13575)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.39551785588264465
    2. '=' → logprob: -1.1455178260803223
    3. '.strip' → logprob: -4.895517826080322
    4. '=line' → logprob: -7.520517826080322
    5. '_tokens' → logprob: -8.27051830291748
    6. '_strip' → logprob: -9.27051830291748
    7. '_no' → logprob: -9.52051830291748
    8. '.startswith' → logprob: -9.89551830291748
    9. '.rstrip' → logprob: -10.77051830291748
    10. 's' → logprob: -11.14551830291748

Token 176: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.0038273909594863653
    2. '+=' → logprob: -5.7538275718688965
    3. ' =' → logprob: -7.5038275718688965
    4. '+' → logprob: -9.878827095031738
    5. '=' → logprob: -10.753827095031738
    6. ' +' → logprob: -11.128827095031738
    7. ' ' → logprob: -11.878827095031738
    8. '    ' → logprob: -13.878827095031738
    9. ')' → logprob: -14.003827095031738
    10. '   ' → logprob: -14.378827095031738

Token 177: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0019289902411401272
    2. ' ' → logprob: -6.251928806304932
    3. '   ' → logprob: -14.87692928314209
    4. '```' → logprob: -18.626928329467773
    5. ' ' → logprob: -19.564428329467773
    6. ')' → logprob: -19.626928329467773
    7. '    ' → logprob: -19.751928329467773
    8. ' line' → logprob: -20.064428329467773
    9. ',' → logprob: -20.064428329467773
    10. '۱' → logprob: -20.314428329467773

Token 178: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.45848218582978e-06
    2. ' ' → logprob: -13.00000286102295
    3. '   ' → logprob: -16.750001907348633
    4. '```' → logprob: -18.375001907348633
    5. '
' → logprob: -19.125001907348633
    6. '１' → logprob: -20.187501907348633
    7. '`' → logprob: -20.187501907348633
    8. '۱' → logprob: -20.312501907348633
    9. 'def' → logprob: -20.562501907348633
    10. '0' → logprob: -20.687501907348633

Token 179: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.02911374345421791
    2. '<|end|>' → logprob: -4.40411376953125
    3. '   ' → logprob: -5.02911376953125
    4. '        
' → logprob: -5.15411376953125
    5. '    
' → logprob: -6.90411376953125
    6. '
' → logprob: -7.15411376953125
    7. '<|end|>' → logprob: -7.27911376953125
    8. '  
' → logprob: -7.52911376953125
    9. ',' → logprob: -7.90411376953125
    10. '#' → logprob: -9.40411376953125

Token 180: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.01797116920351982
    2. '   ' → logprob: -4.892971038818359
    3. '        
' → logprob: -5.392971038818359
    4. '<|end|>' → logprob: -5.517971038818359
    5. '    
' → logprob: -7.392971038818359
    6. ',' → logprob: -8.26797103881836
    7. '  
' → logprob: -8.26797103881836
    8. ' ' → logprob: -8.76797103881836
    9. '<|end|>' → logprob: -9.14297103881836
    10. '
' → logprob: -9.76797103881836

Token 181: ' line' (ID: 2543)
  Prédit: ' parts'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' parts' → logprob: -1.1408880949020386
    2. ' if' → logprob: -1.6408880949020386
    3. ' line' → logprob: -2.015888214111328
    4. ' tokens' → logprob: -2.515888214111328
    5. 'parts' → logprob: -2.765888214111328
    6. 'if' → logprob: -2.890888214111328
    7. 'tokens' → logprob: -2.890888214111328
    8. '       ' → logprob: -2.890888214111328
    9. 'line' (adapté à ' line') → logprob: -3.265888214111328
    10. 'try' → logprob: -6.515888214111328

Token 182: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5243644714355469
    2. ' =' → logprob: -0.8993644714355469
    3. '.strip' → logprob: -7.024364471435547
    4. '_tokens' → logprob: -8.649364471435547
    5. '_strip' → logprob: -9.274364471435547
    6. 'tokens' → logprob: -10.399364471435547
    7. '.' → logprob: -12.024364471435547
    8. '.startswith' → logprob: -12.149364471435547
    9. 'strip' → logprob: -12.149364471435547
    10. 's' → logprob: -12.274364471435547

Token 183: ' line' (ID: 2543)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'line' → logprob: -0.03804171830415726
    2. ' line' → logprob: -3.288041830062866
    3. '	line' → logprob: -16.163042068481445
    4. '=line' → logprob: -16.788042068481445
    5. '(line' → logprob: -16.913042068481445
    6. 'lines' → logprob: -17.413042068481445
    7. '[line' → logprob: -17.663042068481445
    8. '#line' → logprob: -17.788042068481445
    9. ' ' → logprob: -18.913042068481445
    10. '   ' → logprob: -19.913042068481445

Token 184: '.strip' (ID: 40613)
  Prédit: '.strip'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.strip' → logprob: -0.0013717879774048924
    2. '.rstrip' → logprob: -6.75137186050415
    3. '.' → logprob: -8.626371383666992
    4. 'strip' → logprob: -10.876371383666992
    5. ' .' → logprob: -13.376371383666992
    6. '.replace' → logprob: -14.126371383666992
    7. 'rstrip' → logprob: -14.626371383666992
    8. '.split' → logprob: -15.001371383666992
    9. ' strip' → logprob: -16.376371383666992
    10. '.readline' → logprob: -16.626371383666992

Token 185: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -2.3557529857498594e-05
    2. '()
' → logprob: -11.37502384185791
    3. '())' → logprob: -13.00002384185791
    4. '()

' → logprob: -13.37502384185791
    5. '()`' → logprob: -13.62502384185791
    6. '();' → logprob: -13.75002384185791
    7. '()]' → logprob: -14.12502384185791
    8. '().' → logprob: -14.12502384185791
    9. '()>' → logprob: -14.12502384185791
    10. '(' → logprob: -14.50002384185791

Token 186: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.006969920825213194
    2. ' if' → logprob: -5.631969928741455
    3. '<|end|>' → logprob: -5.881969928741455
    4. 'if' → logprob: -7.631969928741455
    5. '<|end|>' → logprob: -10.381969451904297
    6. ',' → logprob: -10.756969451904297
    7. '        
' → logprob: -10.756969451904297
    8. '
' → logprob: -12.631969451904297
    9. 'If' → logprob: -13.256969451904297
    10. ' ' → logprob: -13.256969451904297

Token 187: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.019615456461906433
    2. ' if' → logprob: -4.519615650177002
    3. '       ' → logprob: -4.769615650177002
    4. 'tokens' → logprob: -10.144615173339844
    5. 'parts' → logprob: -12.269615173339844
    6. '```' → logprob: -14.019615173339844
    7. ' tokens' → logprob: -14.269615173339844
    8. '#' → logprob: -14.769615173339844
    9. 'token' → logprob: -14.894615173339844
    10. '	if' → logprob: -15.019615173339844

Token 188: ' not' (ID: 625)
  Prédit: ' line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' line' → logprob: -0.0660947933793068
    2. ' not' → logprob: -3.0660948753356934
    3. 'line' → logprob: -4.066094875335693
    4. 'not' → logprob: -8.941094398498535
    5. ' ' → logprob: -9.816094398498535
    6. ' len' → logprob: -11.316094398498535
    7. 'len' → logprob: -12.816094398498535
    8. '	line' → logprob: -12.816094398498535
    9. '(line' → logprob: -13.191094398498535
    10. '#line' → logprob: -13.691094398498535

Token 189: ' line' (ID: 2543)
  Prédit: ' line'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' line' → logprob: -0.31326398253440857
    2. 'line' → logprob: -1.313264012336731
    3. '(line' → logprob: -14.188263893127441
    4. ' lines' → logprob: -14.313263893127441
    5. 'lines' → logprob: -14.563263893127441
    6. '	line' → logprob: -15.438263893127441
    7. ' ' → logprob: -16.063264846801758
    8. '#line' → logprob: -16.813264846801758
    9. 'eline' → logprob: -18.063264846801758
    10. '[line' → logprob: -18.313264846801758

Token 190: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.010813402011990547
    2. ':
' → logprob: -5.260813236236572
    3. ' or' → logprob: -5.510813236236572
    4. '.startswith' → logprob: -6.885813236236572
    5. ':return' → logprob: -9.01081371307373
    6. 'continue' → logprob: -9.38581371307373
    7. '<|end|>' → logprob: -9.38581371307373
    8. 'or' → logprob: -10.51081371307373
    9. ' continue' → logprob: -10.63581371307373
    10. '==' → logprob: -10.76081371307373

Token 191: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.007576696574687958
    2. ' continue' → logprob: -5.2575764656066895
    3. 'continue' → logprob: -6.3825764656066895
    4. ':' → logprob: -8.132576942443848
    5. '       ' → logprob: -8.507576942443848
    6. ' continues' → logprob: -10.257576942443848
    7. ',' → logprob: -10.507576942443848
    8. '   ' → logprob: -11.382576942443848
    9. ':
' → logprob: -11.382576942443848
    10. '_continue' → logprob: -11.382576942443848

Token 192: ' continue' (ID: 4901)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'continue' (adapté à ' continue') → logprob: -0.13831938803195953
    2. ' continue' → logprob: -2.138319492340088
    3. '           ' → logprob: -4.513319492340088
    4. '       ' → logprob: -8.13831901550293
    5. '	continue' → logprob: -10.26331901550293
    6. '               ' → logprob: -11.51331901550293
    7. '   ' → logprob: -11.51331901550293
    8. 'contin' → logprob: -11.76331901550293
    9. '_continue' → logprob: -12.76331901550293
    10. 'continu' → logprob: -13.01331901550293

Token 193: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0029047278221696615
    2. ' if' → logprob: -6.502904891967773
    3. 'if' → logprob: -6.627904891967773
    4. '        
' → logprob: -10.627904891967773
    5. '<|end|>' → logprob: -11.002904891967773
    6. '```' → logprob: -11.377904891967773
    7. ',' → logprob: -11.877904891967773
    8. '
' → logprob: -12.002904891967773
    9. '   ' → logprob: -12.877904891967773
    10. 'elif' → logprob: -13.127904891967773

Token 194: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0010072042932733893
    2. ' if' → logprob: -7.626007080078125
    3. 'if' → logprob: -8.626007080078125
    4. ',' → logprob: -9.376007080078125
    5. '<|end|>' → logprob: -9.501007080078125
    6. '        
' → logprob: -9.751007080078125
    7. '```' → logprob: -10.376007080078125
    8. '   ' → logprob: -10.626007080078125
    9. '           ' → logprob: -11.876007080078125
    10. 'elif' → logprob: -12.001007080078125

Token 195: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.9802180528640747
    2. '       ' → logprob: -1.2302180528640747
    3. 'parts' → logprob: -2.105217933654785
    4. 'tokens' → logprob: -2.105217933654785
    5. ' if' → logprob: -2.605217933654785
    6. ' parts' → logprob: -4.480217933654785
    7. ' tokens' → logprob: -5.730217933654785
    8. 'words' → logprob: -8.105217933654785
    9. 't' → logprob: -9.855217933654785
    10. 'try' → logprob: -10.605217933654785

Token 196: ' '='' (ID: 98780)
  Prédit: ' line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' line' → logprob: -0.03398890048265457
    2. 'line' → logprob: -3.4089889526367188
    3. ' lines' → logprob: -8.533988952636719
    4. ''' → logprob: -9.408988952636719
    5. ' '' → logprob: -10.533988952636719
    6. 'lines' → logprob: -11.033988952636719
    7. ' ' → logprob: -11.283988952636719
    8. '	line' → logprob: -13.533988952636719
    9. ' len' → logprob: -13.658988952636719
    10. '   ' → logprob: -13.908988952636719

Token 197: ' not' (ID: 625)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.37210649251937866
    2. ' '' → logprob: -1.6221065521240234
    3. ' in' → logprob: -2.3721065521240234
    4. ' ' → logprob: -3.9971065521240234
    5. '"' → logprob: -7.747106552124023
    6. ' not' → logprob: -8.747106552124023
    7. '  ' → logprob: -8.872106552124023
    8. '<|end|>' → logprob: -8.997106552124023
    9. ''in' → logprob: -9.122106552124023
    10. '<|end|>' → logprob: -9.247106552124023

Token 198: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.054230280220508575
    2. ' =' → logprob: -3.804230213165283
    3. '=' → logprob: -4.554230213165283
    4. ' ' → logprob: -4.679230213165283
    5. '<|end|>' → logprob: -5.429230213165283
    6. '<|end|>' → logprob: -5.929230213165283
    7. 'in' → logprob: -6.054230213165283
    8. ' )' → logprob: -8.554230690002441
    9. ')' → logprob: -8.804230690002441
    10. '_' → logprob: -9.054230690002441

Token 199: ' line' (ID: 2543)
  Prédit: ' line'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' line' → logprob: -0.2519305646419525
    2. 'line' → logprob: -1.501930594444275
    3. '	line' → logprob: -14.251930236816406
    4. '(line' → logprob: -14.751930236816406
    5. '=line' → logprob: -15.251930236816406
    6. '[line' → logprob: -15.876930236816406
    7. '#line' → logprob: -17.251930236816406
    8. ' ' → logprob: -18.251930236816406
    9. '_line' → logprob: -18.501930236816406
    10. ' code' → logprob: -18.876930236816406

Token 200: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0067770653404295444
    2. ':
' → logprob: -5.131777286529541
    3. ' :' → logprob: -7.506777286529541
    4. ' and' → logprob: -9.131776809692383
    5. ' or' → logprob: -9.381776809692383
    6. '       ' → logprob: -10.506776809692383
    7. ' :
' → logprob: -10.506776809692383
    8. ',' → logprob: -11.006776809692383
    9. '<|end|>' → logprob: -11.381776809692383
    10. '):' → logprob: -12.006776809692383

Token 201: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.09416183084249496
    2. ' continue' → logprob: -3.0941617488861084
    3. '<|end|>' → logprob: -3.3441617488861084
    4. ' ' → logprob: -6.0941619873046875
    5. '<|end|>' → logprob: -6.4691619873046875
    6. ':' → logprob: -6.4691619873046875
    7. '       ' → logprob: -6.5941619873046875
    8. ' continues' → logprob: -6.8441619873046875
    9. ',' → logprob: -7.5941619873046875
    10. 'continue' → logprob: -8.219161987304688

Token 202: ' #' (ID: 1069)
  Prédit: ' parts'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' parts' → logprob: -1.338018536567688
    2. '       ' → logprob: -1.713018536567688
    3. '#' (adapté à ' #') → logprob: -2.0880184173583984
    4. '           ' → logprob: -2.4630184173583984
    5. 'tokens' → logprob: -2.5880184173583984
    6. ' tokens' → logprob: -2.7130184173583984
    7. 'parts' → logprob: -3.0880184173583984
    8. ' arrays' → logprob: -3.0880184173583984
    9. ' continue' → logprob: -3.5880184173583984
    10. ' name' → logprob: -3.9630184173583984

Token 203: ' Declaration' (ID: 78572)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.06439780443906784
    2. 'name' → logprob: -3.9393978118896484
    3. '       ' → logprob: -4.564397811889648
    4. 'tokens' → logprob: -4.814397811889648
    5. ' arrays' → logprob: -5.439397811889648
    6. 'parts' → logprob: -5.814397811889648
    7. 'arrays' → logprob: -5.814397811889648
    8. ' #' → logprob: -6.189397811889648
    9. 'if' → logprob: -6.314397811889648
    10. ' name' → logprob: -6.439397811889648

Token 204: ':' (ID: 25)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.026779750362038612
    2. '<|end|>' → logprob: -4.401779651641846
    3. ' tokens' → logprob: -5.401779651641846
    4. ':' → logprob: -6.026779651641846
    5. 'tokens' → logprob: -6.651779651641846
    6. ',' → logprob: -6.651779651641846
    7. '<|end|>' → logprob: -7.151779651641846
    8. '        
' → logprob: -7.401779651641846
    9. '           ' → logprob: -7.401779651641846
    10. '
' → logprob: -8.401780128479004

Token 205: ' a' (ID: 261)
  Prédit: ' parts'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' parts' → logprob: -1.3249436616897583
    2. ' tokens' → logprob: -1.4499436616897583
    3. ' name' → logprob: -1.5749436616897583
    4. 'name' → logprob: -1.8249436616897583
    5. 'tokens' → logprob: -2.3249435424804688
    6. ' arrays' → logprob: -4.824943542480469
    7. '       ' → logprob: -4.949943542480469
    8. 'parts' → logprob: -4.949943542480469
    9. '           ' → logprob: -5.824943542480469
    10. 'arr' → logprob: -6.699943542480469

Token 206: '[n' (ID: 15433)
  Prédit: 'rray'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'rray' → logprob: -0.5760912895202637
    2. 'rr' → logprob: -0.9510912895202637
    3. ' =' → logprob: -4.201091289520264
    4. 'arrays' → logprob: -4.701091289520264
    5. ' ' → logprob: -4.826091289520264
    6. ' arrays' → logprob: -5.326091289520264
    7. 'r' → logprob: -5.826091289520264
    8. '[' → logprob: -5.826091289520264
    9. '_name' → logprob: -6.451091289520264
    10. '_arrays' → logprob: -6.451091289520264

Token 207: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.13667212426662445
    2. 'ame' → logprob: -2.636672019958496
    3. 'ames' → logprob: -3.136672019958496
    4. ')' → logprob: -5.636672019958496
    5. ']=' → logprob: -5.886672019958496
    6. ']:' → logprob: -6.386672019958496
    7. '[' → logprob: -6.511672019958496
    8. 'me' → logprob: -6.886672019958496
    9. 'am' → logprob: -7.386672019958496
    10. ']
' → logprob: -8.261672019958496

Token 208: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.009650901891291142
    2. '<|end|>' → logprob: -6.134650707244873
    3. ' tokens' → logprob: -6.509650707244873
    4. '           ' → logprob: -6.759650707244873
    5. ' parts' → logprob: -6.884650707244873
    6. '        ' → logprob: -7.384650707244873
    7. ',' → logprob: -7.884650707244873
    8. 'tokens' → logprob: -8.009651184082031
    9. ' ' → logprob: -8.134651184082031
    10. '[' → logprob: -8.134651184082031

Token 209: ' i' (ID: 575)
  Prédit: ' parts'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' parts' → logprob: -0.42851686477661133
    2. ' i' → logprob: -1.4285168647766113
    3. 'i' (adapté à ' i') → logprob: -2.8035168647766113
    4. 'parts' → logprob: -3.6785168647766113
    5. 'name' → logprob: -5.178516864776611
    6. ' name' → logprob: -5.428516864776611
    7. ' space' → logprob: -5.803516864776611
    8. 'space' → logprob: -6.053516864776611
    9. ' tokens' → logprob: -6.178516864776611
    10. ' j' → logprob: -6.928516864776611

Token 210: '1' (ID: 16)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.1212049350142479
    2. '=' → logprob: -2.2462048530578613
    3. 'f' → logprob: -4.996204853057861
    4. 'nd' → logprob: -6.496204853057861
    5. 's' → logprob: -10.49620532989502
    6. 'space' → logprob: -11.62120532989502
    7. '_' → logprob: -11.62120532989502
    8. 'nt' → logprob: -12.37120532989502
    9. ' ' → logprob: -12.37120532989502
    10. 'n' → logprob: -12.74620532989502

Token 211: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.1270032823085785
    2. '=' → logprob: -2.1270031929016113
    3. 'nd' → logprob: -10.12700366973877
    4. 'f' → logprob: -10.37700366973877
    5. 'space' → logprob: -14.50200366973877
    6. '=index' → logprob: -14.50200366973877
    7. 's' → logprob: -14.62700366973877
    8. ' ' → logprob: -14.62700366973877
    9. '=i' → logprob: -15.00200366973877
    10. '=int' → logprob: -15.50200366973877

Token 212: ' line' (ID: 2543)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'line' → logprob: -0.012524253688752651
    2. ' line' → logprob: -4.387524127960205
    3. '0' → logprob: -11.512524604797363
    4. '	line' → logprob: -13.512524604797363
    5. ' ' → logprob: -13.762524604797363
    6. '=line' → logprob: -14.137524604797363
    7. '[line' → logprob: -14.262524604797363
    8. '(line' → logprob: -14.762524604797363
    9. '1' → logprob: -15.762524604797363
    10. '#line' → logprob: -16.512523651123047

Token 213: '.find' (ID: 4231)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5283631086349487
    2. '=' → logprob: -0.9033631086349487
    3. '=find' → logprob: -6.778363227844238
    4. '('='' → logprob: -7.028363227844238
    5. ',' → logprob: -7.778363227844238
    6. '=index' → logprob: -7.903363227844238
    7. '.find' → logprob: -7.903363227844238
    8. '=line' → logprob: -8.028363227844238
    9. '_=' → logprob: -8.778363227844238
    10. '=_' → logprob: -8.903363227844238

Token 214: '('' (ID: 706)
  Prédit: '(''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('' → logprob: -0.010156338103115559
    2. ''' → logprob: -4.760156154632568
    3. '(' → logprob: -6.510156154632568
    4. '("[' → logprob: -10.885156631469727
    5. '[' → logprob: -11.135156631469727
    6. '['' → logprob: -11.260156631469727
    7. '('[' → logprob: -13.385156631469727
    8. ' '['' → logprob: -13.385156631469727
    9. '(
' → logprob: -14.135156631469727
    10. '"' → logprob: -14.760156631469727

Token 215: '['' (ID: 1181)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.002246365649625659
    2. '[' → logprob: -6.627246379852295
    3. '['' → logprob: -7.502246379852295
    4. '('' → logprob: -8.127245903015137
    5. '']' → logprob: -10.877245903015137
    6. ' '['' → logprob: -11.377245903015137
    7. 'a' → logprob: -11.752245903015137
    8. '')' → logprob: -11.877245903015137
    9. '"' → logprob: -12.127245903015137
    10. '(' → logprob: -12.127245903015137

Token 216: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.06256794929504395
    2. ')
' → logprob: -2.812567949295044
    3. ')+' → logprob: -8.062567710876465
    4. '+' → logprob: -9.312567710876465
    5. ')i' → logprob: -9.562567710876465
    6. '1' → logprob: -9.812567710876465
    7. ')

' → logprob: -11.062567710876465
    8. '0' → logprob: -11.187567710876465
    9. ']' → logprob: -12.062567710876465
    10. '   ' → logprob: -12.312567710876465

Token 217: '           ' (ID: 352)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.07080752402544022
    2. ' i' → logprob: -3.695807456970215
    3. '       ' → logprob: -4.195807456970215
    4. 'name' → logprob: -4.320807456970215
    5. '<|end|>' → logprob: -4.570807456970215
    6. '   ' → logprob: -6.570807456970215
    7. ')' → logprob: -6.945807456970215
    8. '           ' → logprob: -7.195807456970215
    9. '<|end|>' → logprob: -7.820807456970215
    10. ' name' → logprob: -8.320807456970215

Token 218: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' (adapté à ' i') → logprob: -0.0030888281762599945
    2. 'name' → logprob: -6.12808895111084
    3. '           ' → logprob: -7.25308895111084
    4. ' i' → logprob: -8.87808895111084
    5. 'size' → logprob: -10.75308895111084
    6. 'var' → logprob: -12.00308895111084
    7. '       ' → logprob: -12.00308895111084
    8. '   ' → logprob: -12.00308895111084
    9. 'n' → logprob: -12.12808895111084
    10. ')' → logprob: -13.25308895111084

Token 219: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0004961982485838234
    2. '1' → logprob: -8.500495910644531
    3. ']' → logprob: -9.125495910644531
    4. '=' → logprob: -9.375495910644531
    5. 'i' → logprob: -10.375495910644531
    6. ' =' → logprob: -10.875495910644531
    7. ' i' → logprob: -11.125495910644531
    8. ' ' → logprob: -11.500495910644531
    9. '=i' → logprob: -11.625495910644531
    10. '+' → logprob: -12.875495910644531

Token 220: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.4746457636356354
    2. '=' → logprob: -0.974645733833313
    3. '=line' → logprob: -7.474645614624023
    4. ' line' → logprob: -15.099645614624023
    5. '=
' → logprob: -15.099645614624023
    6. '(line' → logprob: -15.224645614624023
    7. 'line' → logprob: -16.099645614624023
    8. ' =
' → logprob: -16.099645614624023
    9. '[line' → logprob: -16.099645614624023
    10. ' ' → logprob: -16.974645614624023

Token 221: ' line' (ID: 2543)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'line' → logprob: -0.004078997299075127
    2. ' line' → logprob: -5.5040788650512695
    3. '(line' → logprob: -15.50407886505127
    4. '=line' → logprob: -16.004079818725586
    5. '	line' → logprob: -16.254079818725586
    6. '[line' → logprob: -16.629079818725586
    7. ')' → logprob: -16.879079818725586
    8. '_line' → logprob: -18.504079818725586
    9. 'len' → logprob: -18.879079818725586
    10. ' ' → logprob: -18.879079818725586

Token 222: '.find' (ID: 4231)
  Prédit: '.find'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.find' → logprob: -0.0956529900431633
    2. 'find' → logprob: -2.5956530570983887
    3. 'line' → logprob: -4.470653057098389
    4. '[line' → logprob: -6.095653057098389
    5. '(line' → logprob: -6.470653057098389
    6. '=line' → logprob: -7.345653057098389
    7. ' line' → logprob: -8.09565258026123
    8. '.' → logprob: -8.34565258026123
    9. ' find' → logprob: -9.22065258026123
    10. '.line' → logprob: -10.09565258026123

Token 223: '('' (ID: 706)
  Prédit: '(''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('' → logprob: -0.0007360121817328036
    2. '(' → logprob: -7.625736236572266
    3. ''' → logprob: -9.250736236572266
    4. '']' → logprob: -9.500736236572266
    5. '('[' → logprob: -9.625736236572266
    6. '(
' → logprob: -12.000736236572266
    7. ']' → logprob: -13.500736236572266
    8. '("[' → logprob: -14.125736236572266
    9. '[' → logprob: -14.250736236572266
    10. ''[' → logprob: -14.750736236572266

Token 224: ']')
' (ID: 145172)
  Prédit: '']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '']' → logprob: -0.1012067198753357
    2. ']' → logprob: -2.3512067794799805
    3. ')' → logprob: -7.4762067794799805
    4. '')' → logprob: -8.72620677947998
    5. ''])' → logprob: -8.85120677947998
    6. '])' → logprob: -10.10120677947998
    7. ' ']' → logprob: -10.60120677947998
    8. ''' → logprob: -10.72620677947998
    9. '"]' → logprob: -10.97620677947998
    10. ')]' → logprob: -11.97620677947998

Token 225: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.008795027621090412
    2. ' arrays' → logprob: -6.133795261383057
    3. '       ' → logprob: -6.508795261383057
    4. 'size' → logprob: -6.633795261383057
    5. ' size' → logprob: -6.883795261383057
    6. ',' → logprob: -7.383795261383057
    7. 'name' → logprob: -8.258794784545898
    8. '            
' → logprob: -8.258794784545898
    9. 'arrays' → logprob: -8.383794784545898
    10. ')' → logprob: -8.508794784545898

Token 226: ' name' (ID: 1308)
  Prédit: 'name'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'name' (adapté à ' name') → logprob: -0.16513116657733917
    2. ' name' → logprob: -2.165131092071533
    3. ' arrays' → logprob: -4.290131092071533
    4. 'size' → logprob: -4.665131092071533
    5. '           ' → logprob: -5.415131092071533
    6. ' size' → logprob: -5.415131092071533
    7. 'array' → logprob: -6.040131092071533
    8. 'arrays' → logprob: -6.290131092071533
    9. 'arr' → logprob: -7.540131092071533
    10. ' array' → logprob: -8.040131568908691

Token 227: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.014164448715746403
    2. '=' → logprob: -4.264164447784424
    3. ' ' → logprob: -14.764164924621582
    4. ',' → logprob: -15.764164924621582
    5. '=line' → logprob: -16.264163970947266
    6. '<|end|>' → logprob: -16.889163970947266
    7. 's' → logprob: -17.514163970947266
    8. ' =
' → logprob: -17.639163970947266
    9. ' =)' → logprob: -17.639163970947266
    10. '[' → logprob: -17.764163970947266

Token 228: ' line' (ID: 2543)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'line' → logprob: -0.3868730664253235
    2. ' line' → logprob: -1.1368730068206787
    3. '	line' → logprob: -14.011873245239258
    4. '=line' → logprob: -14.386873245239258
    5. '[line' → logprob: -14.636873245239258
    6. '#line' → logprob: -16.011873245239258
    7. '(line' → logprob: -16.136873245239258
    8. ',line' → logprob: -17.636873245239258
    9. ' ' → logprob: -19.636873245239258
    10. '_line' → logprob: -20.261873245239258

Token 229: '[:' (ID: 7808)
  Prédit: '[:'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[:' → logprob: -0.0005511255003511906
    2. '[' → logprob: -7.750551223754883
    3. '[line' → logprob: -9.250551223754883
    4. '[:-' → logprob: -11.875551223754883
    5. '=line' → logprob: -11.875551223754883
    6. '[
' → logprob: -12.625551223754883
    7. '[:]' → logprob: -12.875551223754883
    8. '#line' → logprob: -14.000551223754883
    9. '(line' → logprob: -14.625551223754883
    10. '           ' → logprob: -14.750551223754883

Token 230: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.00012070851516909897
    2. 'line' → logprob: -9.125121116638184
    3. ' i' → logprob: -11.375121116638184
    4. '   ' → logprob: -15.750121116638184
    5. ' line' → logprob: -17.750120162963867
    6. ']' → logprob: -17.875120162963867
    7. ' ' → logprob: -18.125120162963867
    8. '
' → logprob: -18.125120162963867
    9. '	i' → logprob: -18.125120162963867
    10. ')i' → logprob: -18.625120162963867

Token 231: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0019919206388294697
    2. '.find' → logprob: -6.3769917488098145
    3. 'find' → logprob: -8.751992225646973
    4. '2' → logprob: -10.751992225646973
    5. ']' → logprob: -11.001992225646973
    6. '[' → logprob: -11.126992225646973
    7. '```' → logprob: -11.376992225646973
    8. ' ' → logprob: -11.626992225646973
    9. 'i' → logprob: -12.126992225646973
    10. '.findall' → logprob: -12.189492225646973

Token 232: ']
' (ID: 1592)
  Prédit: '].'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '].' → logprob: -0.253475159406662
    2. ']' → logprob: -1.5034751892089844
    3. ']
' → logprob: -6.878475189208984
    4. '<|end|>' → logprob: -9.378475189208984
    5. ' ].' → logprob: -9.503475189208984
    6. '],' → logprob: -9.878475189208984
    7. '           ' → logprob: -10.003475189208984
    8. ' ]' → logprob: -10.128475189208984
    9. '       ' → logprob: -10.128475189208984
    10. '.strip' → logprob: -10.628475189208984

Token 233: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.8219773769378662
    2. '           ' → logprob: -1.5719773769378662
    3. '=' → logprob: -1.6969773769378662
    4. ' =' → logprob: -2.196977376937866
    5. ' arrays' → logprob: -3.946977376937866
    6. ',' → logprob: -4.946977615356445
    7. '   ' → logprob: -5.446977615356445
    8. '<|end|>' → logprob: -5.446977615356445
    9. 'tokens' → logprob: -5.571977615356445
    10. '.strip' → logprob: -5.821977615356445

Token 234: ' n' (ID: 297)
  Prédit: 'size'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'size' → logprob: -0.24151857197284698
    2. ' size' → logprob: -1.6165186166763306
    3. ' arrays' → logprob: -4.991518497467041
    4. 'arrays' → logprob: -5.116518497467041
    5. '           ' → logprob: -6.866518497467041
    6. 'length' → logprob: -6.991518497467041
    7. 'n' (adapté à ' n') → logprob: -7.866518497467041
    8. 'try' → logprob: -7.991518497467041
    9. 'sz' → logprob: -9.1165189743042
    10. ' n' → logprob: -9.4915189743042

Token 235: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.02328205481171608
    2. ' =' → logprob: -3.773282051086426
    3. '=int' → logprob: -10.398282051086426
    4. 'um' → logprob: -12.648282051086426
    5. ' ' → logprob: -13.523282051086426
    6. '_' → logprob: -14.773282051086426
    7. 'space' → logprob: -15.773282051086426
    8. ',' → logprob: -16.148283004760742
    9. 'umber' → logprob: -16.148283004760742
    10. 'ame' → logprob: -16.273283004760742

Token 236: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.0024758970830589533
    2. ' int' → logprob: -6.002475738525391
    3. '   ' → logprob: -16.00247573852539
    4. 'line' → logprob: -17.25247573852539
    5. '	int' → logprob: -17.37747573852539
    6. '  ' → logprob: -18.25247573852539
    7. '=int' → logprob: -18.25247573852539
    8. ' ' → logprob: -18.37747573852539
    9. '
' → logprob: -18.50247573852539
    10. '(int' → logprob: -19.00247573852539

Token 237: '(line' (ID: 18178)
  Prédit: '(line'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(line' → logprob: -1.2352385965641588e-05
    2. '(' → logprob: -11.750012397766113
    3. 'line' → logprob: -12.500012397766113
    4. ' (' → logprob: -14.875012397766113
    5. ' line' → logprob: -15.125012397766113
    6. '[line' → logprob: -16.500011444091797
    7. '=line' → logprob: -16.875011444091797
    8. '(
' → logprob: -18.375011444091797
    9. ',line' → logprob: -18.625011444091797
    10. '	line' → logprob: -19.250011444091797

Token 238: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -3.4285862057004124e-05
    2. 'i' → logprob: -11.37503433227539
    3. ')' → logprob: -12.12503433227539
    4. '[line' → logprob: -12.62503433227539
    5. '(i' → logprob: -12.75003433227539
    6. '[' → logprob: -12.87503433227539
    7. ')[' → logprob: -13.37503433227539
    8. '   ' → logprob: -13.87503433227539
    9. '```' → logprob: -13.87503433227539
    10. '[
' → logprob: -14.00003433227539

Token 239: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00220687803812325
    2. '2' → logprob: -6.127206802368164
    3. 'find' → logprob: -11.627206802368164
    4. '.find' → logprob: -12.252206802368164
    5. 'i' → logprob: -12.502206802368164
    6. ']' → logprob: -13.752206802368164
    7. ' i' → logprob: -14.314706802368164
    8. '```' → logprob: -14.627206802368164
    9. '
' → logprob: -15.314706802368164
    10. '+' → logprob: -15.377206802368164

Token 240: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0003312937042210251
    2. '1' → logprob: -8.875330924987793
    3. 'i' → logprob: -9.000330924987793
    4. ' +' → logprob: -9.875330924987793
    5. '+i' → logprob: -11.125330924987793
    6. ':i' → logprob: -14.125330924987793
    7. '+
' → logprob: -14.625330924987793
    8. ' i' → logprob: -15.625330924987793
    9. ' ' → logprob: -15.625330924987793
    10. '2' → logprob: -17.25033187866211

Token 241: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0012935701524838805
    2. '2' → logprob: -7.001293659210205
    3. '0' → logprob: -9.001293182373047
    4. ' ' → logprob: -9.001293182373047
    5. 'i' → logprob: -9.501293182373047
    6. ':' → logprob: -10.501293182373047
    7. 'line' → logprob: -12.126293182373047
    8. ']' → logprob: -12.251293182373047
    9. '3' → logprob: -12.626293182373047
    10. '```' → logprob: -12.626293182373047

Token 242: ':i' (ID: 34041)
  Prédit: ':i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':i' → logprob: -0.00125880294945091
    2. ':' → logprob: -6.751258850097656
    3. 'i' → logprob: -10.001258850097656
    4. ' :' → logprob: -10.626258850097656
    5. ']' → logprob: -12.376258850097656
    6. ':]' → logprob: -12.751258850097656
    7. ',i' → logprob: -13.001258850097656
    8. ' i' → logprob: -13.501258850097656
    9. ':].' → logprob: -13.501258850097656
    10. ':n' → logprob: -13.501258850097656

Token 243: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.00011558275582501665
    2. 'i' → logprob: -9.250115394592285
    3. '1' → logprob: -11.500115394592285
    4. ' ' → logprob: -12.750115394592285
    5. '
' → logprob: -13.000115394592285
    6. ']' → logprob: -13.500115394592285
    7. ' i' → logprob: -13.750115394592285
    8. '

' → logprob: -15.125115394592285
    9. '])' → logprob: -15.250115394592285
    10. '```' → logprob: -15.375115394592285

Token 244: '])
' (ID: 5169)
  Prédit: '])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '])' → logprob: -0.0010638902895152569
    2. '])
' → logprob: -6.876063823699951
    3. ' ])' → logprob: -11.00106430053711
    4. ']' → logprob: -12.25106430053711
    5. ')' → logprob: -12.62606430053711
    6. '].' → logprob: -12.75106430053711
    7. '])

' → logprob: -13.62606430053711
    8. '           ' → logprob: -14.62606430053711
    9. ']);' → logprob: -14.87606430053711
    10. ''])' → logprob: -15.00106430053711

Token 245: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.27771076560020447
    2. '       ' → logprob: -1.7777107954025269
    3. 'arrays' → logprob: -3.1527106761932373
    4. ' arrays' → logprob: -4.402710914611816
    5. '
' → logprob: -4.652710914611816
    6. '            
' → logprob: -5.777710914611816
    7. '   ' → logprob: -5.902710914611816
    8. '        
' → logprob: -6.527710914611816
    9. '    
' → logprob: -7.402710914611816
    10. '<|end|>' → logprob: -8.027710914611816

Token 246: ' arrays' (ID: 38774)
  Prédit: ' arrays'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' arrays' → logprob: -0.18058854341506958
    2. 'arrays' (adapté à ' arrays') → logprob: -1.8055884838104248
    3. 'if' → logprob: -8.180588722229004
    4. '           ' → logprob: -8.305588722229004
    5. ' if' → logprob: -8.555588722229004
    6. '   ' → logprob: -9.430588722229004
    7. '       ' → logprob: -11.305588722229004
    8. 'arr' → logprob: -12.055588722229004
    9. '_arrays' → logprob: -12.180588722229004
    10. '
' → logprob: -12.305588722229004

Token 247: '[name' (ID: 23001)
  Prédit: '[name'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[name' → logprob: -0.0001843485952122137
    2. '[' → logprob: -8.625184059143066
    3. '\[' → logprob: -13.000184059143066
    4. ' [' → logprob: -13.250184059143066
    5. '[line' → logprob: -14.250184059143066
    6. '[...]' → logprob: -17.125185012817383
    7. '```' → logprob: -17.875185012817383
    8. '[size' → logprob: -18.750185012817383
    9. '[#' → logprob: -19.000185012817383
    10. 'name' → logprob: -19.375185012817383

Token 248: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.00648040696978569
    2. '=' → logprob: -5.7564802169799805
    3. ']=' → logprob: -5.7564802169799805
    4. ' =' → logprob: -9.00648021697998
    5. ' ]' → logprob: -11.50648021697998
    6. ')' → logprob: -13.38148021697998
    7. '[' → logprob: -14.50648021697998
    8. '>' → logprob: -16.256481170654297
    9. ',' → logprob: -16.506481170654297
    10. ')=' → logprob: -16.506481170654297

Token 249: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.011048528365790844
    2. ' =' → logprob: -4.511048316955566
    3. '[' → logprob: -14.261048316955566
    4. ']=' → logprob: -17.136049270629883
    5. '=
' → logprob: -17.261049270629883
    6. '＝' → logprob: -18.136049270629883
    7. ']' → logprob: -18.261049270629883
    8. ')=' → logprob: -18.511049270629883
    9. '=

' → logprob: -18.511049270629883
    10. '=n' → logprob: -18.636049270629883

Token 250: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.1602243334054947
    2. ' n' → logprob: -1.9102243185043335
    3. '	n' → logprob: -15.785223960876465
    4. ' ' → logprob: -18.16022491455078
    5. ')n' → logprob: -19.16022491455078
    6. '_n' → logprob: -20.53522491455078
    7. ' ' → logprob: -20.66022491455078
    8. 'int' → logprob: -20.91022491455078
    9. '$n' → logprob: -21.28522491455078
    10. ',n' → logprob: -21.53522491455078

Token 251: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.5747964978218079
    2. '       ' → logprob: -1.324796438217163
    3. '
' → logprob: -2.324796438217163
    4. '<|end|>' → logprob: -2.824796438217163
    5. 'continue' → logprob: -4.949796676635742
    6. ' continue' → logprob: -6.324796676635742
    7. '<|end|>' → logprob: -6.324796676635742
    8. '	continue' → logprob: -6.699796676635742
    9. '   ' → logprob: -7.074796676635742
    10. '               ' → logprob: -7.699796676635742

Token 252: '       ' (ID: 309)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.33679381012916565
    2. '       ' → logprob: -1.3367937803268433
    3. 'continue' → logprob: -3.961793899536133
    4. ' continue' → logprob: -6.336793899536133
    5. '	continue' → logprob: -6.461793899536133
    6. '	       ' → logprob: -8.586793899536133
    7. '		' → logprob: -8.836793899536133
    8. '	' → logprob: -8.836793899536133
    9. '   ' → logprob: -9.211793899536133
    10. '<|end|>' → logprob: -9.586793899536133

Token 253: ' else' (ID: 1203)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.15764455497264862
    2. ' else' → logprob: -2.407644510269165
    3. 'else' (adapté à ' else') → logprob: -3.032644510269165
    4. ' elif' → logprob: -5.532644748687744
    5. 'elif' → logprob: -5.657644748687744
    6. '   ' → logprob: -9.407644271850586
    7. '	else' → logprob: -10.157644271850586
    8. '	elif' → logprob: -10.282644271850586
    9. '	' → logprob: -11.157644271850586
    10. '           ' → logprob: -11.532644271850586

Token 254: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.1079908162355423
    2. ' :' → logprob: -2.9829907417297363
    3. '           ' → logprob: -4.357990741729736
    4. ':
' → logprob: -4.482990741729736
    5. '       ' → logprob: -4.607990741729736
    6. ' :
' → logprob: -4.982990741729736
    7. '        ' → logprob: -5.107990741729736
    8. '<|end|>' → logprob: -6.607990741729736
    9. ' ' → logprob: -6.982990741729736
    10. '            ' → logprob: -8.107991218566895

Token 255: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.7563490867614746
    2. '        ' → logprob: -1.0063490867614746
    3. ' #' → logprob: -3.2563490867614746
    4. ' line' → logprob: -3.5063490867614746
    5. ' ' → logprob: -3.6313490867614746
    6. '       ' → logprob: -4.006349086761475
    7. '	       ' → logprob: -4.256349086761475
    8. ' ' → logprob: -5.381349086761475
    9. '            ' → logprob: -5.631349086761475
    10. ' 
' → logprob: -6.006349086761475

Token 256: ' #' (ID: 1069)
  Prédit: ' lhs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' lhs' → logprob: -0.5279399752616882
    2. ' parts' → logprob: -1.277940034866333
    3. ' left' → logprob: -2.277940034866333
    4. ' #' → logprob: -4.402939796447754
    5. 'lhs' → logprob: -5.652939796447754
    6. '           ' → logprob: -5.652939796447754
    7. 'parts' → logprob: -6.277939796447754
    8. ' tokens' → logprob: -6.402939796447754
    9. ' l' → logprob: -6.777939796447754
    10. ' var' → logprob: -6.902939796447754

Token 257: ' Assignment' (ID: 58240)
  Prédit: ' lhs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' lhs' → logprob: -0.8239738345146179
    2. ' left' → logprob: -1.0739738941192627
    3. ' parts' → logprob: -2.8239738941192627
    4. 'lhs' → logprob: -2.9489738941192627
    5. '#' → logprob: -3.3239738941192627
    6. 'left' → logprob: -3.3239738941192627
    7. ' #' → logprob: -4.073973655700684
    8. 'parts' → logprob: -5.073973655700684
    9. ' i' → logprob: -5.573973655700684
    10. '           ' → logprob: -5.823973655700684

Token 258: ':' (ID: 25)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.13243073225021362
    2. '       ' → logprob: -2.2574307918548584
    3. ' i' → logprob: -5.257430553436279
    4. ' =' → logprob: -6.382430553436279
    5. ' tokens' → logprob: -6.632430553436279
    6. ' 
' → logprob: -6.757430553436279
    7. ' parts' → logprob: -6.882430553436279
    8. ':' → logprob: -7.007430553436279
    9. ' line' → logprob: -7.132430553436279
    10. '            
' → logprob: -7.257430553436279

Token 259: ' lhs' (ID: 51302)
  Prédit: ' lhs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' lhs' → logprob: -0.75276780128479
    2. ' name' → logprob: -1.37776780128479
    3. ' left' → logprob: -1.75276780128479
    4. 'name' → logprob: -2.75276780128479
    5. 'lhs' → logprob: -4.002767562866211
    6. 'left' → logprob: -5.002767562866211
    7. '           ' → logprob: -5.377767562866211
    8. ' parts' → logprob: -5.627767562866211
    9. ' var' → logprob: -6.502767562866211
    10. ' lef' → logprob: -6.877767562866211

Token 260: '=' (ID: 28)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.009289316833019257
    2. ' ' → logprob: -6.009289264678955
    3. '_name' → logprob: -6.009289264678955
    4. '_' → logprob: -7.009289264678955
    5. ' ,' → logprob: -7.384289264678955
    6. '=' → logprob: -7.634289264678955
    7. '_token' → logprob: -7.884289264678955
    8. ',' → logprob: -8.384289741516113
    9. 'name' → logprob: -8.384289741516113
    10. '_tokens' → logprob: -8.509289741516113

Token 261: 'rhs' (ID: 66878)
  Prédit: 'lhs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lhs' → logprob: -1.238586664199829
    2. ' line' → logprob: -1.363586664199829
    3. 'line' → logprob: -1.738586664199829
    4. ' lhs' → logprob: -2.488586664199829
    5. 'expr' → logprob: -2.613586664199829
    6. 'rhs' → logprob: -2.738586664199829
    7. ' rhs' → logprob: -3.863586664199829
    8. ' expr' → logprob: -4.73858642578125
    9. 'split' → logprob: -5.86358642578125
    10. '_rhs' → logprob: -6.11358642578125

Token 262: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6738069653511047
    2. '           ' → logprob: -1.29880690574646
    3. '            
' → logprob: -2.79880690574646
    4. '        
' → logprob: -3.04880690574646
    5. ' 
' → logprob: -3.54880690574646
    6. '<|end|>' → logprob: -4.173807144165039
    7. '<|end|>' → logprob: -4.548807144165039
    8. '
' → logprob: -4.798807144165039
    9. ' =' → logprob: -4.923807144165039
    10. '  
' → logprob: -4.923807144165039

Token 263: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.3610599935054779
    2. '       ' → logprob: -1.8610600233078003
    3. ' 
' → logprob: -3.2360599040985107
    4. '            
' → logprob: -3.9860599040985107
    5. '<|end|>' → logprob: -4.23606014251709
    6. ' lhs' → logprob: -4.48606014251709
    7. ' line' → logprob: -4.48606014251709
    8. '[line' → logprob: -4.73606014251709
    9. '<|end|>' → logprob: -5.11106014251709
    10. ',' → logprob: -5.23606014251709

Token 264: ' lhs' (ID: 51302)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.4771988093852997
    2. ' lhs' → logprob: -1.102198839187622
    3. 'i' → logprob: -3.727198839187622
    4. 'lhs' (adapté à ' lhs') → logprob: -4.352198600769043
    5. ' space' → logprob: -5.102198600769043
    6. ' parts' → logprob: -6.352198600769043
    7. '           ' → logprob: -7.352198600769043
    8. 'space' → logprob: -7.602198600769043
    9. '       ' → logprob: -8.102198600769043
    10. ' l' → logprob: -8.977198600769043

Token 265: ',' (ID: 11)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.04124242439866066
    2. ',' → logprob: -3.9162423610687256
    3. '=' → logprob: -4.291242599487305
    4. ' ,' → logprob: -5.416242599487305
    5. '_' → logprob: -6.416242599487305
    6. '_space' → logprob: -8.291242599487305
    7. '_tokens' → logprob: -9.791242599487305
    8. '_,' → logprob: -10.166242599487305
    9. ')' → logprob: -10.291242599487305
    10. ' ' → logprob: -10.291242599487305

Token 266: ' rhs' (ID: 29564)
  Prédit: ' rhs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' rhs' → logprob: -0.5763304233551025
    2. 'rhs' → logprob: -0.8263304233551025
    3. '_rhs' → logprob: -7.951330184936523
    4. '(rhs' → logprob: -10.451330184936523
    5. 'rest' → logprob: -12.201330184936523
    6. '=' → logprob: -13.326330184936523
    7. ' rest' → logprob: -13.451330184936523
    8. ' RHS' → logprob: -14.451330184936523
    9. ' =' → logprob: -14.576330184936523
    10. 'r' → logprob: -15.451330184936523

Token 267: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.38687199354171753
    2. '=' → logprob: -1.1368720531463623
    3. '=line' → logprob: -14.011872291564941
    4. ' ' → logprob: -16.136871337890625
    5. ',' → logprob: -16.886871337890625
    6. '＝' → logprob: -18.136871337890625
    7. '_=' → logprob: -18.136871337890625
    8. ')' → logprob: -18.511871337890625
    9. ' ='' → logprob: -18.761871337890625
    10. ')=' → logprob: -18.761871337890625

Token 268: ' line' (ID: 2543)
  Prédit: ' line'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' line' → logprob: -0.2014261931180954
    2. 'line' → logprob: -1.7014261484146118
    3. '[line' → logprob: -11.57642650604248
    4. ' map' → logprob: -13.70142650604248
    5. '=line' → logprob: -13.82642650604248
    6. 'map' → logprob: -13.82642650604248
    7. '(line' → logprob: -15.32642650604248
    8. '	line' → logprob: -16.326425552368164
    9. ' [' → logprob: -17.451425552368164
    10. '[' → logprob: -17.576425552368164

Token 269: '.split' (ID: 10347)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5760030746459961
    2. ' =' → logprob: -0.8260030746459961
    3. '.split' → logprob: -10.201003074645996
    4. '=line' → logprob: -11.076003074645996
    5. '.strip' → logprob: -12.201003074645996
    6. '.' → logprob: -13.576003074645996
    7. 'split' → logprob: -13.701003074645996
    8. ',' → logprob: -13.951003074645996
    9. ')=' → logprob: -14.701003074645996
    10. '.=' → logprob: -15.326003074645996

Token 270: '('='' (ID: 190284)
  Prédit: '(''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('' → logprob: -0.0010721079306676984
    2. '('='' → logprob: -7.626071929931641
    3. '(' → logprob: -8.25107192993164
    4. ''' → logprob: -8.50107192993164
    5. '=' → logprob: -9.75107192993164
    6. '("="' → logprob: -10.25107192993164
    7. '"' → logprob: -11.50107192993164
    8. ''=' → logprob: -11.62607192993164
    9. '['' → logprob: -13.25107192993164
    10. '='' → logprob: -13.62607192993164

Token 271: ')
' (ID: 446)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.001487600733526051
    2. '1' → logprob: -6.626487731933594
    3. ' ,' → logprob: -9.626487731933594
    4. '=' → logprob: -10.001487731933594
    5. ')' → logprob: -10.751487731933594
    6. '2' → logprob: -12.001487731933594
    7. '<|end|>' → logprob: -12.251487731933594
    8. '(',',' → logprob: -12.751487731933594
    9. '('='' → logprob: -12.876487731933594
    10. '',' → logprob: -13.251487731933594

Token 272: '           ' (ID: 352)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.4356478750705719
    2. ' =' → logprob: -1.1856478452682495
    3. '       ' → logprob: -3.935647964477539
    4. '.strip' → logprob: -5.060647964477539
    5. '(lhs' → logprob: -5.810647964477539
    6. '<|end|>' → logprob: -5.810647964477539
    7. '[' → logprob: -6.060647964477539
    8. '=line' → logprob: -6.185647964477539
    9. ',' → logprob: -6.310647964477539
    10. '           ' → logprob: -6.560647964477539

Token 273: ' lhs' (ID: 51302)
  Prédit: ' lhs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' lhs' → logprob: -0.04328542202711105
    2. 'lhs' (adapté à ' lhs') → logprob: -3.168285369873047
    3. '           ' → logprob: -8.543285369873047
    4. '(lhs' → logprob: -10.168285369873047
    5. ' rhs' → logprob: -11.043285369873047
    6. '            ' → logprob: -11.793285369873047
    7. ' left' → logprob: -11.918285369873047
    8. 'rhs' → logprob: -12.543285369873047
    9. ' 
' → logprob: -12.543285369873047
    10. '            
' → logprob: -13.168285369873047

Token 274: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2519437372684479
    2. '=' → logprob: -1.5019437074661255
    3. '=line' → logprob: -11.751943588256836
    4. '=l' → logprob: -13.126943588256836
    5. '.strip' → logprob: -13.251943588256836
    6. ',' → logprob: -14.751943588256836
    7. '=cut' → logprob: -14.876943588256836
    8. '<|end|>' → logprob: -15.376943588256836
    9. '=L' → logprob: -15.626943588256836
    10. '＝' → logprob: -15.876943588256836

Token 275: ' lhs' (ID: 51302)
  Prédit: 'lhs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lhs' → logprob: -9.639096970204264e-05
    2. ' lhs' → logprob: -9.250096321105957
    3. '(lhs' → logprob: -15.250096321105957
    4. '   ' → logprob: -18.000097274780273
    5. 'rhs' → logprob: -18.750097274780273
    6. ' ' → logprob: -19.250097274780273
    7. 'left' → logprob: -20.625097274780273
    8. 'lh' → logprob: -20.750097274780273
    9. 'lst' → logprob: -21.250097274780273
    10. 'l' → logprob: -21.750097274780273

Token 276: '.strip' (ID: 40613)
  Prédit: '.strip'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.strip' → logprob: -0.00013727048644796014
    2. '.rstrip' → logprob: -9.000137329101562
    3. ' .' → logprob: -11.875137329101562
    4. '.' → logprob: -12.625137329101562
    5. 'strip' → logprob: -13.125137329101562
    6. '.trim' → logprob: -14.000137329101562
    7. '.replace' → logprob: -14.625137329101562
    8. '_strip' → logprob: -16.000137329101562
    9. ' strip' → logprob: -16.500137329101562
    10. 'rstrip' → logprob: -17.500137329101562

Token 277: '()
' (ID: 1234)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 278: '           ' (ID: 352)
  Prédit: 'lhs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lhs' → logprob: -0.5802810192108154
    2. 'rhs' → logprob: -1.2052810192108154
    3. '           ' → logprob: -2.3302810192108154
    4. ' rhs' → logprob: -4.0802812576293945
    5. ' lhs' → logprob: -4.4552812576293945
    6. '            ' → logprob: -5.7052812576293945
    7. '            
' → logprob: -5.8302812576293945
    8. ' if' → logprob: -6.4552812576293945
    9. '_rhs' → logprob: -6.4552812576293945
    10. 'if' → logprob: -6.5802812576293945

Token 279: ' rhs' (ID: 29564)
  Prédit: 'rhs'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rhs' (adapté à ' rhs') → logprob: -0.0033176883589476347
    2. 'value' → logprob: -6.128317832946777
    3. 'val' → logprob: -7.378317832946777
    4. '           ' → logprob: -8.753317832946777
    5. 'lhs' → logprob: -8.878317832946777
    6. ' rhs' → logprob: -9.253317832946777
    7. 'retval' → logprob: -10.503317832946777
    8. 'res' → logprob: -10.628317832946777
    9. 'result' → logprob: -10.878317832946777
    10. 'rv' → logprob: -11.503317832946777

Token 280: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.04863857850432396
    2. ' =' → logprob: -3.0486385822296143
    3. '.strip' → logprob: -10.048638343811035
    4. '=line' → logprob: -12.173638343811035
    5. '<|end|>' → logprob: -13.673638343811035
    6. '<|end|>' → logprob: -14.673638343811035
    7. ')' → logprob: -15.673638343811035
    8. '.' → logprob: -15.798638343811035
    9. '＝' → logprob: -16.29863929748535
    10. '.rstrip' → logprob: -16.54863929748535

Token 281: ' rhs' (ID: 29564)
  Prédit: 'rhs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rhs' → logprob: -0.018176862969994545
    2. ' rhs' → logprob: -4.018177032470703
    3. '(rhs' → logprob: -11.393177032470703
    4. 'lhs' → logprob: -12.018177032470703
    5. 'line' → logprob: -12.768177032470703
    6. '_rhs' → logprob: -12.768177032470703
    7. '   ' → logprob: -14.518177032470703
    8. ' ' → logprob: -14.518177032470703
    9. 'r' → logprob: -14.768177032470703
    10. 'rstrip' → logprob: -14.893177032470703

Token 282: '.strip' (ID: 40613)
  Prédit: '.strip'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.strip' → logprob: -0.014923986978828907
    2. '.' → logprob: -4.764924049377441
    3. 'strip' → logprob: -5.389924049377441
    4. ' .' → logprob: -7.264924049377441
    5. '=' → logprob: -8.139924049377441
    6. '_strip' → logprob: -8.639924049377441
    7. ' strip' → logprob: -8.764924049377441
    8. ' =' → logprob: -9.264924049377441
    9. '<|end|>' → logprob: -9.264924049377441
    10. '.rstrip' → logprob: -10.014924049377441

Token 283: '()
' (ID: 1234)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.06571654975414276
    2. '
' → logprob: -3.690716505050659
    3. '<|end|>' → logprob: -3.815716505050659
    4. '<|end|>' → logprob: -4.690716743469238
    5. '       ' → logprob: -6.190716743469238
    6. '            
' → logprob: -6.190716743469238
    7. ')' → logprob: -7.065716743469238
    8. ',' → logprob: -7.565716743469238
    9. '  
' → logprob: -7.940716743469238
    10. '    
' → logprob: -8.065716743469238

Token 284: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.048246756196022034
    2. '       ' → logprob: -3.5482468605041504
    3. ' if' → logprob: -4.92324686050415
    4. 'if' → logprob: -5.29824686050415
    5. 'token' → logprob: -6.67324686050415
    6. 'i' → logprob: -7.29824686050415
    7. 'idx' → logprob: -7.29824686050415
    8. '
' → logprob: -7.42324686050415
    9. '            
' → logprob: -7.67324686050415
    10. '<|end|>' → logprob: -7.67324686050415

Token 285: ' #' (ID: 1069)
  Prédit: 'val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'val' → logprob: -0.15403614938259125
    2. 'if' → logprob: -2.779036045074463
    3. 'value' → logprob: -3.154036045074463
    4. 'lhs' → logprob: -4.029036045074463
    5. 'rhs' → logprob: -4.529036045074463
    6. 'res' → logprob: -5.779036045074463
    7. 'r' → logprob: -6.529036045074463
    8. 'v' → logprob: -6.779036045074463
    9. '           ' → logprob: -7.029036045074463
    10. 'l' → logprob: -7.154036045074463

Token 286: ' parse' (ID: 8420)
  Prédit: 'val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'val' → logprob: -0.3126041889190674
    2. 'if' → logprob: -1.5626041889190674
    3. 'value' → logprob: -3.3126041889190674
    4. 'rhs' → logprob: -4.687603950500488
    5. 'res' → logprob: -5.437603950500488
    6. 'lhs' → logprob: -5.562603950500488
    7. 'v' → logprob: -6.562603950500488
    8. 'r' → logprob: -7.062603950500488
    9. '           ' → logprob: -7.062603950500488
    10. '#' → logprob: -7.812603950500488

Token 287: ' lhs' (ID: 51302)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.01988416351377964
    2. ' if' → logprob: -4.26988410949707
    3. 'i' → logprob: -6.01988410949707
    4. 'lhs' → logprob: -6.14488410949707
    5. 'value' → logprob: -8.39488410949707
    6. 'expr' → logprob: -9.01988410949707
    7. ' lhs' → logprob: -9.01988410949707
    8. '           ' → logprob: -9.14488410949707
    9. 'idx' → logprob: -9.26988410949707
    10. ' i' → logprob: -9.39488410949707

Token 288: ':' (ID: 25)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.31548476219177246
    2. 'i' → logprob: -1.4404847621917725
    3. ' if' → logprob: -4.065485000610352
    4. '           ' → logprob: -4.190485000610352
    5. ' i' → logprob: -7.315485000610352
    6. '       ' → logprob: -8.190485000610352
    7. 'idx' → logprob: -8.565485000610352
    8. '=' → logprob: -9.190485000610352
    9. 'name' → logprob: -9.440485000610352
    10. '_i' → logprob: -10.690485000610352

Token 289: ' name' (ID: 1308)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.07455955445766449
    2. 'if' → logprob: -2.824559450149536
    3. 'l' → logprob: -5.199559688568115
    4. 'name' → logprob: -6.074559688568115
    5. ' i' → logprob: -6.449559688568115
    6. 'j' → logprob: -7.074559688568115
    7. 'idx' → logprob: -7.324559688568115
    8. 'lhs' → logprob: -7.449559688568115
    9. ' if' → logprob: -7.949559688568115
    10. 'left' → logprob: -8.199559211730957

Token 290: '[' (ID: 58)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.7593534588813782
    2. '_idx' → logprob: -1.5093533992767334
    3. ',' → logprob: -2.2593533992767334
    4. '_i' → logprob: -2.3843533992767334
    5. ',i' → logprob: -3.5093533992767334
    6. ' i' → logprob: -3.6343533992767334
    7. 'idx' → logprob: -3.8843533992767334
    8. ' =' → logprob: -4.7593536376953125
    9. '[' → logprob: -5.0093536376953125
    10. '[i' → logprob: -5.7593536376953125

Token 291: 'expr' (ID: 21343)
  Prédit: 'lhs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'lhs' → logprob: -0.21871763467788696
    2. ')' → logprob: -2.343717575073242
    3. '<|end|>' → logprob: -3.343717575073242
    4. '(lhs' → logprob: -4.093717575073242
    5. 'rhs' → logprob: -4.218717575073242
    6. '0' → logprob: -4.468717575073242
    7. ' lhs' → logprob: -5.343717575073242
    8. '(rhs' → logprob: -5.468717575073242
    9. '<|end|>' → logprob: -6.093717575073242
    10. '')' → logprob: -6.093717575073242

Token 292: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.010153264738619328
    2. ')' → logprob: -5.635153293609619
    3. '[' → logprob: -6.385153293609619
    4. '']' → logprob: -6.635153293609619
    5. '.find' → logprob: -7.010153293609619
    6. ']=' → logprob: -7.885153293609619
    7. 'i' → logprob: -8.010152816772461
    8. ']
' → logprob: -8.135152816772461
    9. '[
' → logprob: -8.135152816772461
    10. ',' → logprob: -8.760152816772461

Token 293: '           ' (ID: 352)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.06852028518915176
    2. '           ' → logprob: -3.0685203075408936
    3. '       ' → logprob: -4.3185200691223145
    4. ' i' → logprob: -5.3185200691223145
    5. '_i' → logprob: -7.6935200691223145
    6. 'idx' → logprob: -8.443520545959473
    7. '   ' → logprob: -8.568520545959473
    8. '
' → logprob: -8.818520545959473
    9. '	i' → logprob: -9.068520545959473
    10. '        ' → logprob: -9.068520545959473

Token 294: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' (adapté à ' i') → logprob: -0.004141568206250668
    2. 'l' → logprob: -5.754141330718994
    3. ' i' → logprob: -7.254141330718994
    4. 'j' → logprob: -9.504141807556152
    5. 'idx' → logprob: -9.504141807556152
    6. 'lhs' → logprob: -9.629141807556152
    7. 'name' → logprob: -10.879141807556152
    8. '           ' → logprob: -12.504141807556152
    9. 'pos' → logprob: -12.629141807556152
    10. ' l' → logprob: -13.129141807556152

Token 295: '1' (ID: 16)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5188743472099304
    2. ' =' → logprob: -1.3938744068145752
    3. '1' → logprob: -2.018874406814575
    4. '[' → logprob: -3.893874406814575
    5. '_' → logprob: -6.018874168395996
    6. 's' → logprob: -8.268874168395996
    7. '0' → logprob: -8.518874168395996
    8. '(' → logprob: -8.518874168395996
    9. 'i' → logprob: -9.393874168395996
    10. '_=' → logprob: -9.393874168395996

Token 296: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.16023671627044678
    2. '=' → logprob: -1.9102367162704468
    3. '=line' → logprob: -11.535236358642578
    4. '=i' → logprob: -14.535236358642578
    5. '=find' → logprob: -14.785236358642578
    6. ' ' → logprob: -15.285236358642578
    7. '=index' → logprob: -15.285236358642578
    8. '=name' → logprob: -15.410236358642578
    9. '=int' → logprob: -15.535236358642578
    10. 's' → logprob: -15.910236358642578

Token 297: ' lhs' (ID: 51302)
  Prédit: 'lhs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lhs' → logprob: -0.0067208209075033665
    2. ' lhs' → logprob: -5.006721019744873
    3. '0' → logprob: -13.131720542907715
    4. '(lhs' → logprob: -13.256720542907715
    5. 'rhs' → logprob: -14.131720542907715
    6. 'l' → logprob: -14.506720542907715
    7. 'len' → logprob: -15.631720542907715
    8. 'lst' → logprob: -16.13172149658203
    9. '1' → logprob: -16.88172149658203
    10. 'lh' → logprob: -17.25672149658203

Token 298: '.find' (ID: 4231)
  Prédit: '.find'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.find' → logprob: -0.00602988013997674
    2. '.' → logprob: -5.756030082702637
    3. 'find' → logprob: -5.881030082702637
    4. '.findall' → logprob: -10.506030082702637
    5. '[' → logprob: -11.506030082702637
    6. ' .' → logprob: -11.881030082702637
    7. '=find' → logprob: -12.131030082702637
    8. ' find' → logprob: -13.381030082702637
    9. '=' → logprob: -14.006030082702637
    10. '_find' → logprob: -14.006030082702637

Token 299: '('' (ID: 706)
  Prédit: '(''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('' → logprob: -0.4233841001987457
    2. ''' → logprob: -1.1733840703964233
    3. '(' → logprob: -3.923384189605713
    4. '[' → logprob: -4.173384189605713
    5. '['' → logprob: -8.298383712768555
    6. ' '['' → logprob: -8.548383712768555
    7. '('[' → logprob: -9.423383712768555
    8. ''[' → logprob: -9.673383712768555
    9. '([' → logprob: -10.548383712768555
    10. '("[' → logprob: -11.173383712768555

Token 300: '['' (ID: 1181)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.20717135071754456
    2. ''' → logprob: -1.7071713209152222
    3. '['' → logprob: -5.207171440124512
    4. ''[' → logprob: -8.832171440124512
    5. '[
' → logprob: -9.582171440124512
    6. '')' → logprob: -10.332171440124512
    7. ' '['' → logprob: -12.832171440124512
    8. ')' → logprob: -13.082171440124512
    9. '']' → logprob: -13.082171440124512
    10. ' [' → logprob: -13.082171440124512

Token 301: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.01704682968556881
    2. ')
' → logprob: -4.267046928405762
    3. '<|end|>' → logprob: -6.892046928405762
    4. ')i' → logprob: -7.017046928405762
    5. '<|end|>' → logprob: -7.392046928405762
    6. '')' → logprob: -9.142046928405762
    7. ')return' → logprob: -10.142046928405762
    8. 'i' → logprob: -10.392046928405762
    9. ' )' → logprob: -10.892046928405762
    10. '   ' → logprob: -10.892046928405762

Token 302: '           ' (ID: 352)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.09469083696603775
    2. '           ' → logprob: -2.7196907997131348
    3. 'name' → logprob: -4.094690799713135
    4. ' i' → logprob: -5.094690799713135
    5. '       ' → logprob: -7.719690799713135
    6. '<|end|>' → logprob: -7.719690799713135
    7. '   ' → logprob: -7.969690799713135
    8. ' name' → logprob: -9.844691276550293
    9. '          ' → logprob: -9.969691276550293
    10. '               ' → logprob: -10.094691276550293

Token 303: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' (adapté à ' i') → logprob: -0.004274157807230949
    2. 'name' → logprob: -5.504274368286133
    3. 'lhs' → logprob: -9.129274368286133
    4. ' i' → logprob: -9.629274368286133
    5. '   ' → logprob: -12.004274368286133
    6. '1' → logprob: -12.754274368286133
    7. '           ' → logprob: -13.254274368286133
    8. '	i' → logprob: -13.254274368286133
    9. ' ' → logprob: -13.379274368286133
    10. ' name' → logprob: -14.129274368286133

Token 304: '2' (ID: 17)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.28169068694114685
    2. '2' → logprob: -1.4066907167434692
    3. '=' → logprob: -7.90669059753418
    4. ' =' → logprob: -9.90669059753418
    5. ' ' → logprob: -10.40669059753418
    6. 'x' → logprob: -10.65669059753418
    7. '=i' → logprob: -10.90669059753418
    8. '0' → logprob: -11.40669059753418
    9. '
' → logprob: -11.90669059753418
    10. 'i' → logprob: -12.28169059753418

Token 305: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2014806866645813
    2. '=' → logprob: -1.7014806270599365
    3. 'lhs' → logprob: -10.826480865478516
    4. '+' → logprob: -11.951480865478516
    5. ' lhs' → logprob: -11.951480865478516
    6. ')' → logprob: -11.951480865478516
    7. '(lhs' → logprob: -12.076480865478516
    8. '1' → logprob: -12.326480865478516
    9. '=i' → logprob: -12.826480865478516
    10. ']' → logprob: -12.826480865478516

Token 306: ' lhs' (ID: 51302)
  Prédit: 'lhs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lhs' → logprob: -0.06994732469320297
    2. ' lhs' → logprob: -2.6949472427368164
    3. '(lhs' → logprob: -11.944947242736816
    4. 'l' → logprob: -14.069947242736816
    5. 'lst' → logprob: -14.194947242736816
    6. 'left' → logprob: -14.194947242736816
    7. ')' → logprob: -14.569947242736816
    8. 'len' → logprob: -14.694947242736816
    9. ' ' → logprob: -14.944947242736816
    10. '   ' → logprob: -14.944947242736816

Token 307: '.find' (ID: 4231)
  Prédit: '.find'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.find' → logprob: -0.0020577155519276857
    2. 'lhs' → logprob: -6.7520575523376465
    3. '.' → logprob: -7.3770575523376465
    4. 'find' → logprob: -8.627058029174805
    5. '.findall' → logprob: -10.627058029174805
    6. '(lhs' → logprob: -10.752058029174805
    7. ' .' → logprob: -10.877058029174805
    8. '.index' → logprob: -11.752058029174805
    9. ' lhs' → logprob: -12.252058029174805
    10. '].' → logprob: -13.377058029174805

Token 308: '('' (ID: 706)
  Prédit: '']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '']' → logprob: -0.3182680904865265
    2. '('' → logprob: -1.568268060684204
    3. ''' → logprob: -2.943268060684204
    4. '(' → logprob: -4.818268299102783
    5. ']' → logprob: -6.318268299102783
    6. '[' → logprob: -6.693268299102783
    7. ''[' → logprob: -9.443267822265625
    8. 'lhs' → logprob: -9.568267822265625
    9. '(
' → logprob: -9.943267822265625
    10. '1' → logprob: -10.943267822265625

Token 309: ']')
' (ID: 145172)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.06981159001588821
    2. '']' → logprob: -2.8198115825653076
    3. '])' → logprob: -5.194811820983887
    4. ''])' → logprob: -6.319811820983887
    5. ')' → logprob: -7.819811820983887
    6. '')' → logprob: -9.944811820983887
    7. ''' → logprob: -12.069811820983887
    8. '[' → logprob: -12.819811820983887
    9. ']')
' → logprob: -13.444811820983887
    10. '])
' → logprob: -13.694811820983887

Token 310: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.025563033297657967
    2. 'name' → logprob: -4.1505632400512695
    3. 'i' → logprob: -5.5255632400512695
    4. 'lhs' → logprob: -6.4005632400512695
    5. 'idx' → logprob: -7.2755632400512695
    6. ')' → logprob: -7.2755632400512695
    7. ' i' → logprob: -7.9005632400512695
    8. ' name' → logprob: -7.9005632400512695
    9. '   ' → logprob: -8.52556324005127
    10. '	       ' → logprob: -8.65056324005127

Token 311: ' lhs' (ID: 51302)
  Prédit: 'name'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'name' → logprob: -0.00026646157493814826
    2. 'lhs' (adapté à ' lhs') → logprob: -8.375266075134277
    3. ' name' → logprob: -10.500266075134277
    4. '           ' → logprob: -11.875266075134277
    5. 'lname' → logprob: -14.125266075134277
    6. ' lhs' → logprob: -14.875266075134277
    7. 'left' → logprob: -15.750266075134277
    8. 'l' → logprob: -17.125267028808594
    9. '	name' → logprob: -17.250267028808594
    10. '   ' → logprob: -17.625267028808594

Token 312: '_name' (ID: 2483)
  Prédit: '_name'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_name' → logprob: -0.25245341658592224
    2. 'name' → logprob: -1.5024534463882446
    3. 'Name' → logprob: -8.377453804016113
    4. '=' → logprob: -8.752453804016113
    5. ' =' → logprob: -10.377453804016113
    6. '[' → logprob: -10.377453804016113
    7. '_' → logprob: -11.252453804016113
    8. ',' → logprob: -11.502453804016113
    9. '<|end|>' → logprob: -11.752453804016113
    10. ' name' → logprob: -11.877453804016113

Token 313: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.14292070269584656
    2. '=' → logprob: -2.017920732498169
    3. ' ' → logprob: -9.26792049407959
    4. '<|end|>' → logprob: -9.39292049407959
    5. '[' → logprob: -10.26792049407959
    6. ',' → logprob: -11.64292049407959
    7. ')' → logprob: -12.26792049407959
    8. '<|end|>' → logprob: -12.76792049407959
    9. '=line' → logprob: -13.14292049407959
    10. '		' → logprob: -13.89292049407959

Token 314: ' lhs' (ID: 51302)
  Prédit: 'lhs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lhs' → logprob: -0.038044821470975876
    2. ' lhs' → logprob: -3.2880449295043945
    3. '(lhs' → logprob: -12.663044929504395
    4. 'rhs' → logprob: -17.788043975830078
    5. 'l' → logprob: -18.163043975830078
    6. 'lname' → logprob: -18.163043975830078
    7. 'left' → logprob: -18.413043975830078
    8. ' ' → logprob: -18.663043975830078
    9. '   ' → logprob: -19.038043975830078
    10. 'lst' → logprob: -19.038043975830078

Token 315: '[:' (ID: 7808)
  Prédit: '[:'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[:' → logprob: -5.88418151892256e-05
    2. '[' → logprob: -10.000059127807617
    3. '[i' → logprob: -11.750059127807617
    4. '[:]' → logprob: -13.000059127807617
    5. '[
' → logprob: -13.375059127807617
    6. ' [:' → logprob: -13.750059127807617
    7. '[:-' → logprob: -15.875059127807617
    8. '[:,' → logprob: -16.250059127807617
    9. 'lhs' → logprob: -17.125059127807617
    10. '   ' → logprob: -17.250059127807617

Token 316: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -2.15310683415737e-05
    2. ' i' → logprob: -10.750021934509277
    3. '	i' → logprob: -16.75002098083496
    4. '1' → logprob: -18.75002098083496
    5. '   ' → logprob: -19.37502098083496
    6. '(i' → logprob: -21.12502098083496
    7. ' ' → logprob: -21.37502098083496
    8. '  ' → logprob: -21.75002098083496
    9. '```' → logprob: -22.50002098083496
    10. '=i' → logprob: -22.62502098083496

Token 317: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.816093228830141e-06
    2. '```' → logprob: -14.50000286102295
    3. 'find' → logprob: -14.62500286102295
    4. '2' → logprob: -14.62500286102295
    5. '[' → logprob: -15.18750286102295
    6. ' ' → logprob: -15.37500286102295
    7. '
' → logprob: -15.87500286102295
    8. 'i' → logprob: -16.250001907348633
    9. '``' → logprob: -16.500001907348633
    10. ']' → logprob: -16.500001907348633

Token 318: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.027958907186985016
    2. ']
' → logprob: -3.652958869934082
    3. '<|end|>' → logprob: -7.027958869934082
    4. '           ' → logprob: -7.902958869934082
    5. ' ]' → logprob: -9.277958869934082
    6. '].' → logprob: -9.902958869934082
    7. '],' → logprob: -10.277958869934082
    8. ')' → logprob: -10.402958869934082
    9. '<|end|>' → logprob: -10.402958869934082
    10. ']

' → logprob: -10.527958869934082

Token 319: '           ' (ID: 352)
  Prédit: 'lhs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lhs' → logprob: -0.009014677256345749
    2. ' lhs' → logprob: -5.13401460647583
    3. 'expr' → logprob: -6.75901460647583
    4. '           ' → logprob: -7.25901460647583
    5. 'inside' → logprob: -7.88401460647583
    6. '(lhs' → logprob: -8.259015083312988
    7. '   ' → logprob: -8.759015083312988
    8. 'idx' → logprob: -9.009015083312988
    9. '[' → logprob: -9.259015083312988
    10. 'inner' → logprob: -9.509015083312988

Token 320: ' lhs' (ID: 51302)
  Prédit: 'lhs'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lhs' (adapté à ' lhs') → logprob: -8.888114098226652e-05
    2. ' lhs' → logprob: -9.625088691711426
    3. 'inside' → logprob: -11.500088691711426
    4. 'expr' → logprob: -11.875088691711426
    5. 'rhs' → logprob: -13.250088691711426
    6. 'idx' → logprob: -13.375088691711426
    7. '(lhs' → logprob: -13.625088691711426
    8. 'i' → logprob: -15.125088691711426
    9. 'inner' → logprob: -15.250088691711426
    10. 'left' → logprob: -15.625088691711426

Token 321: '_expr' (ID: 53654)
  Prédit: '_expr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_expr' → logprob: -0.02328147180378437
    2. '_idx' → logprob: -4.523281574249268
    3. '_inside' → logprob: -4.898281574249268
    4. '_index' → logprob: -5.398281574249268
    5. '_start' → logprob: -9.52328109741211
    6. '_i' → logprob: -11.02328109741211
    7. '_inner' → logprob: -11.14828109741211
    8. 'expr' → logprob: -11.14828109741211
    9. '_' → logprob: -11.27328109741211
    10. '_indices' → logprob: -11.52328109741211

Token 322: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.069961778819561
    2. ' =' → logprob: -2.6949617862701416
    3. ')' → logprob: -11.319961547851562
    4. '<|end|>' → logprob: -12.694961547851562
    5. ' ' → logprob: -13.319961547851562
    6. ')=' → logprob: -13.819961547851562
    7. 's' → logprob: -13.819961547851562
    8. '=
' → logprob: -13.944961547851562
    9. '=line' → logprob: -13.944961547851562
    10. '<|end|>' → logprob: -14.319961547851562

Token 323: ' lhs' (ID: 51302)
  Prédit: 'lhs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lhs' → logprob: -0.0032024311367422342
    2. ' lhs' → logprob: -5.753202438354492
    3. '(lhs' → logprob: -10.628202438354492
    4. 'rhs' → logprob: -15.628202438354492
    5. '   ' → logprob: -16.378202438354492
    6. ' ' → logprob: -16.878202438354492
    7. 'left' → logprob: -17.378202438354492
    8. 'lst' → logprob: -17.378202438354492
    9. 'l' → logprob: -17.503202438354492
    10. '           ' → logprob: -18.378202438354492

Token 324: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.0024738742504268885
    2. '[' → logprob: -6.127473831176758
    3. 'i' → logprob: -8.252473831176758
    4. '[
' → logprob: -11.877473831176758
    5. 'find' → logprob: -12.377473831176758
    6. '[l' → logprob: -12.752473831176758
    7. '.find' → logprob: -13.127473831176758
    8. ''' → logprob: -13.127473831176758
    9. ' [' → logprob: -13.627473831176758
    10. ' i' → logprob: -13.752473831176758

Token 325: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00018268341955263168
    2. '+' → logprob: -9.00018310546875
    3. 'i' → logprob: -9.87518310546875
    4. '2' → logprob: -12.37518310546875
    5. ' ' → logprob: -13.62518310546875
    6. ' i' → logprob: -14.25018310546875
    7. ' +' → logprob: -14.62518310546875
    8. 'find' → logprob: -14.75018310546875
    9. '```' → logprob: -15.75018310546875
    10. '.find' → logprob: -16.00018310546875

Token 326: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0007320931763388216
    2. '1' → logprob: -7.250731945037842
    3. ' +' → logprob: -11.000732421875
    4. '[' → logprob: -12.375732421875
    5. '+[' → logprob: -15.125732421875
    6. 'i' → logprob: -15.375732421875
    7. '2' → logprob: -15.500732421875
    8. '0' → logprob: -15.750732421875
    9. '+i' → logprob: -15.750732421875
    10. ']+' → logprob: -15.875732421875

Token 327: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.45848218582978e-06
    2. ' ' → logprob: -13.25000286102295
    3. '2' → logprob: -14.25000286102295
    4. '0' → logprob: -17.250001907348633
    5. ']' → logprob: -17.625001907348633
    6. '-' → logprob: -17.625001907348633
    7. 'len' → logprob: -18.125001907348633
    8. '+' → logprob: -18.125001907348633
    9. '   ' → logprob: -18.625001907348633
    10. '```' → logprob: -19.500001907348633

Token 328: ':i' (ID: 34041)
  Prédit: ':i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':i' → logprob: -0.4877077639102936
    2. ':]' → logprob: -1.2377077341079712
    3. ':' → logprob: -2.3627078533172607
    4. ':].' → logprob: -7.737707614898682
    5. ']' → logprob: -8.11270809173584
    6. 'i' → logprob: -8.11270809173584
    7. ':l' → logprob: -8.23770809173584
    8. ':-' → logprob: -8.73770809173584
    9. 'lhs' → logprob: -8.98770809173584
    10. ':]
' → logprob: -9.73770809173584

Token 329: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.00014334988372866064
    2. 'i' → logprob: -9.125143051147461
    3. ']' → logprob: -10.500143051147461
    4. '-' → logprob: -12.375143051147461
    5. '1' → logprob: -13.500143051147461
    6. ' ' → logprob: -15.125143051147461
    7. '   ' → logprob: -15.250143051147461
    8. ']]' → logprob: -15.625143051147461
    9. '```' → logprob: -15.625143051147461
    10. 'lhs' → logprob: -16.62514305114746

Token 330: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -6.468279752880335e-05
    2. ']
' → logprob: -9.875064849853516
    3. ' ]' → logprob: -11.375064849853516
    4. ']

' → logprob: -14.625064849853516
    5. ']+' → logprob: -15.375064849853516
    6. '           ' → logprob: -15.375064849853516
    7. '']' → logprob: -15.625064849853516
    8. '   ' → logprob: -15.875064849853516
    9. '+' → logprob: -16.000064849853516
    10. '       ' → logprob: -16.125064849853516

Token 331: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.14986290037631989
    2. '
' → logprob: -2.1498630046844482
    3. 'idx' → logprob: -4.149862766265869
    4. 'lhs' → logprob: -6.399862766265869
    5. ' idx' → logprob: -6.649862766265869
    6. '            
' → logprob: -7.024862766265869
    7. '<|end|>' → logprob: -7.399862766265869
    8. '       ' → logprob: -7.524862766265869
    9. '    
' → logprob: -7.899862766265869
    10. ' lhs' → logprob: -8.399863243103027

Token 332: ' #' (ID: 1069)
  Prédit: 'lhs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'lhs' → logprob: -0.9521681070327759
    2. 'idx' → logprob: -1.0771681070327759
    3. ' lhs' → logprob: -1.7021681070327759
    4. ' idx' → logprob: -2.7021679878234863
    5. '           ' → logprob: -3.8271679878234863
    6. '
' → logprob: -6.827167987823486
    7. 'index' → logprob: -7.827167987823486
    8. '       ' → logprob: -9.327168464660645
    9. '            
' → logprob: -9.577168464660645
    10. ' 
' → logprob: -9.577168464660645

Token 333: ' eval' (ID: 29383)
  Prédit: 'lhs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'lhs' → logprob: -0.15129609405994415
    2. 'idx' → logprob: -2.0262961387634277
    3. 'val' → logprob: -5.151296138763428
    4. ' lhs' → logprob: -6.651296138763428
    5. 'value' → logprob: -7.276296138763428
    6. 'rhs' → logprob: -8.02629566192627
    7. 'index' → logprob: -8.65129566192627
    8. ' idx' → logprob: -8.65129566192627
    9. 'l' → logprob: -11.02629566192627
    10. ' val' → logprob: -11.02629566192627

Token 334: ' lhs' (ID: 51302)
  Prédit: 'idx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'idx' → logprob: -0.32042381167411804
    2. 'lhs' → logprob: -1.6954238414764404
    3. ' idx' → logprob: -2.8204238414764404
    4. ' lhs' → logprob: -4.070423603057861
    5. 'expr' → logprob: -5.445423603057861
    6. '_idx' → logprob: -5.570423603057861
    7. '           ' → logprob: -6.195423603057861
    8. 'rhs' → logprob: -6.570423603057861
    9. '_expr' → logprob: -7.195423603057861
    10. '_rhs' → logprob: -7.945423603057861

Token 335: ' index' (ID: 3472)
  Prédit: '_idx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_idx' → logprob: -0.04497909173369408
    2. 'idx' → logprob: -3.1699790954589844
    3. '_' → logprob: -7.169979095458984
    4. '_index' → logprob: -7.919979095458984
    5. ')' → logprob: -8.544979095458984
    6. ' =' → logprob: -9.169979095458984
    7. 'index' → logprob: -9.169979095458984
    8. '_expr' → logprob: -9.169979095458984
    9. '_val' → logprob: -9.419979095458984
    10. '_value' → logprob: -9.919979095458984

Token 336: '
' (ID: 198)
  Prédit: 'idx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'idx' → logprob: -0.3780990540981293
    2. '           ' → logprob: -1.7530990839004517
    3. ' idx' → logprob: -2.378098964691162
    4. 'lhs' → logprob: -3.378098964691162
    5. ',' → logprob: -5.378098964691162
    6. ' lhs' → logprob: -5.753098964691162
    7. '
' → logprob: -6.003098964691162
    8. ' =' → logprob: -6.253098964691162
    9. 'index' → logprob: -7.378098964691162
    10. '=' → logprob: -8.00309944152832

Token 337: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.33841800689697266
    2. 'idx' → logprob: -1.4634180068969727
    3. ' idx' → logprob: -3.3384180068969727
    4. '
' → logprob: -4.588418006896973
    5. ' =' → logprob: -5.963418006896973
    6. '            
' → logprob: -6.463418006896973
    7. '       ' → logprob: -6.713418006896973
    8. ')' → logprob: -7.588418006896973
    9. ',' → logprob: -7.713418006896973
    10. 'lhs' → logprob: -7.838418006896973

Token 338: ' idx' (ID: 14016)
  Prédit: 'idx'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'idx' (adapté à ' idx') → logprob: -0.7951126098632812
    2. 'lhs' → logprob: -0.7951126098632812
    3. ' idx' → logprob: -2.9201126098632812
    4. ' lhs' → logprob: -3.1701126098632812
    5. 'index' → logprob: -7.920112609863281
    6. 'left' → logprob: -8.420112609863281
    7. ' index' → logprob: -9.795112609863281
    8. 'l' → logprob: -9.795112609863281
    9. ' left' → logprob: -10.045112609863281
    10. 'i' → logprob: -10.045112609863281

Token 339: ',' (ID: 11)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.08793210983276367
    2. '=' → logprob: -2.5879321098327637
    3. ',' → logprob: -4.712932109832764
    4. ' ,' → logprob: -10.837932586669922
    5. '_val' → logprob: -13.712932586669922
    6. '    ' → logprob: -14.712932586669922
    7. '           ' → logprob: -15.462932586669922
    8. ')' → logprob: -15.712932586669922
    9. ',val' → logprob: -15.712932586669922
    10. ' ' → logprob: -15.837932586669922

Token 340: ' err' (ID: 2962)
  Prédit: ' err'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' err' → logprob: -0.4576234519481659
    2. 'err' → logprob: -1.5826234817504883
    3. ' error' → logprob: -2.4576234817504883
    4. 'error' → logprob: -2.5826234817504883
    5. ' idx' → logprob: -8.832623481750488
    6. ' lhs' → logprob: -8.957623481750488
    7. 'lhs' → logprob: -9.207623481750488
    8. 'idx' → logprob: -9.332623481750488
    9. 'errmsg' → logprob: -11.082623481750488
    10. '_err' → logprob: -11.207623481750488

Token 341: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2519350051879883
    2. '=' → logprob: -1.5019350051879883
    3. ',' → logprob: -12.126935005187988
    4. ')' → logprob: -15.501935005187988
    5. '<|end|>' → logprob: -16.126934051513672
    6. 's' → logprob: -16.376934051513672
    7. ' ' → logprob: -16.376934051513672
    8. '    ' → logprob: -17.251934051513672
    9. ' =)' → logprob: -17.626934051513672
    10. ')=' → logprob: -17.876934051513672

Token 342: ' None' (ID: 4662)
  Prédit: 'eval'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'eval' → logprob: -0.008615872822701931
    2. ' eval' → logprob: -4.758615970611572
    3. '(eval' → logprob: -13.883615493774414
    4. '   ' → logprob: -15.383615493774414
    5. '.eval' → logprob: -17.133615493774414
    6. '    ' → logprob: -17.508615493774414
    7. 'int' → logprob: -17.633615493774414
    8. '           ' → logprob: -17.758615493774414
    9. '_eval' → logprob: -17.883615493774414
    10. 'None' → logprob: -17.883615493774414

Token 343: ',' (ID: 11)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.14297226071357727
    2. '=' → logprob: -2.017972230911255
    3. ',' → logprob: -8.142971992492676
    4. '<|end|>' → logprob: -12.767971992492676
    5. ' ,' → logprob: -13.642971992492676
    6. ')' → logprob: -14.517971992492676
    7. ' ' → logprob: -14.767971992492676
    8. '=None' → logprob: -15.267971992492676
    9. '=line' → logprob: -15.642971992492676
    10. '=s' → logprob: -16.142972946166992

Token 344: ' None' (ID: 4662)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -0.3463895618915558
    2. 'eval' → logprob: -1.4713895320892334
    3. ' None' → logprob: -2.9713895320892334
    4. ' eval' → logprob: -4.4713897705078125
    5. '   ' → logprob: -8.221389770507812
    6. 'False' → logprob: -9.721389770507812
    7. '    ' → logprob: -10.846389770507812
    8. '           ' → logprob: -10.971389770507812
    9. '(eval' → logprob: -11.221389770507812
    10. 'none' → logprob: -11.533889770507812

Token 345: '
' (ID: 198)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5094309449195862
    2. '=' → logprob: -1.2594308853149414
    3. '           ' → logprob: -2.5094308853149414
    4. '
' → logprob: -4.384430885314941
    5. 'idx' → logprob: -4.509430885314941
    6. ' idx' → logprob: -5.634430885314941
    7. '<|end|>' → logprob: -6.509430885314941
    8. ' 
' → logprob: -6.884430885314941
    9. '            
' → logprob: -6.884430885314941
    10. '[idx' → logprob: -7.134430885314941

Token 346: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.4790339469909668
    2. 'idx' → logprob: -1.3540339469909668
    3. '
' → logprob: -2.479033946990967
    4. ' idx' → logprob: -3.979033946990967
    5. ',' → logprob: -5.104033946990967
    6. '[idx' → logprob: -5.104033946990967
    7. '(idx' → logprob: -5.479033946990967
    8. '            
' → logprob: -6.854033946990967
    9. ' 
' → logprob: -7.729033946990967
    10. '	idx' → logprob: -7.979033946990967

Token 347: ' if' (ID: 538)
  Prédit: 'idx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'idx' → logprob: -0.01760474592447281
    2. ' idx' → logprob: -4.392604827880859
    3. '           ' → logprob: -6.267604827880859
    4. '(idx' → logprob: -6.392604827880859
    5. '[idx' → logprob: -7.142604827880859
    6. 'try' → logprob: -7.517604827880859
    7. '
' → logprob: -9.14260482788086
    8. 'if' (adapté à ' if') → logprob: -10.76760482788086
    9. '            
' → logprob: -11.26760482788086
    10. ' (' → logprob: -11.51760482788086

Token 348: ' lhs' (ID: 51302)
  Prédit: 'lhs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lhs' → logprob: -0.10107149183750153
    2. ' lhs' → logprob: -2.47607159614563
    3. ''' → logprob: -4.726071357727051
    4. 'len' → logprob: -7.101071357727051
    5. 'rhs' → logprob: -7.351071357727051
    6. ' '['' → logprob: -7.851071357727051
    7. ' not' → logprob: -7.976071357727051
    8. '(lhs' → logprob: -8.10107135772705
    9. 'not' → logprob: -9.22607135772705
    10. ' len' → logprob: -9.35107135772705

Token 349: '_expr' (ID: 53654)
  Prédit: '_expr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_expr' → logprob: -0.04341430589556694
    2. '_name' → logprob: -3.168414354324341
    3. 'expr' → logprob: -9.793414115905762
    4. '[' → logprob: -10.168414115905762
    5. 'Expr' → logprob: -10.293414115905762
    6. 'name' → logprob: -10.418414115905762
    7. '_' → logprob: -10.543414115905762
    8. '_idx' → logprob: -10.543414115905762
    9. '==' → logprob: -10.668414115905762
    10. 'not' → logprob: -11.418414115905762

Token 350: '.is' (ID: 3109)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '==' → logprob: -0.8083422183990479
    2. '=' → logprob: -0.9333422183990479
    3. '!=' → logprob: -1.9333422183990479
    4. ':' → logprob: -5.058341979980469
    5. ' ==' → logprob: -5.683341979980469
    6. ' !=' → logprob: -7.058341979980469
    7. ' =' → logprob: -7.183341979980469
    8. '+=' → logprob: -7.558341979980469
    9. 'is' → logprob: -7.683341979980469
    10. ' not' → logprob: -7.683341979980469

Token 351: 'digit' (ID: 78327)
  Prédit: 'digit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'digit' → logprob: -1.1472419600977446e-06
    2. ' digit' → logprob: -14.625000953674316
    3. 'isdigit' → logprob: -15.500000953674316
    4. 'decimal' → logprob: -15.625000953674316
    5. 'alpha' → logprob: -16.125001907348633
    6. '_digit' → logprob: -16.625001907348633
    7. 'digits' → logprob: -17.000001907348633
    8. '-digit' → logprob: -17.375001907348633
    9. 'dig' → logprob: -18.375001907348633
    10. 'd' → logprob: -18.750001907348633

Token 352: '():
' (ID: 8595)
  Prédit: '():
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():
' → logprob: -0.2523353099822998
    2. '():' → logprob: -1.5023353099822998
    3. '()' → logprob: -7.877335548400879
    4. '():
' → logprob: -11.252335548400879
    5. '():

' → logprob: -12.377335548400879
    6. '()==' → logprob: -12.502335548400879
    7. ':' → logprob: -13.127335548400879
    8. '(' → logprob: -13.252335548400879
    9. ':
' → logprob: -14.502335548400879
    10. ' ():' → logprob: -14.877335548400879

Token 353: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.18630585074424744
    2. ' idx' → logprob: -2.1863057613372803
    3. 'idx' → logprob: -3.5613057613372803
    4. ' =' → logprob: -4.561305999755859
    5. '
' → logprob: -5.811305999755859
    6. '<|end|>' → logprob: -5.936305999755859
    7. '           ' → logprob: -6.186305999755859
    8. '                
' → logprob: -6.311305999755859
    9. '=' → logprob: -6.561305999755859
    10. ' 
' → logprob: -6.686305999755859

Token 354: ' idx' (ID: 14016)
  Prédit: 'idx'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'idx' (adapté à ' idx') → logprob: -0.5824215412139893
    2. ' idx' → logprob: -0.8324215412139893
    3. '               ' → logprob: -5.33242130279541
    4. '           ' → logprob: -6.45742130279541
    5. '	idx' → logprob: -10.95742130279541
    6. '```' → logprob: -10.95742130279541
    7. '[idx' → logprob: -11.58242130279541
    8. '                   ' → logprob: -12.83242130279541
    9. '   ' → logprob: -13.20742130279541
    10. '(idx' → logprob: -13.33242130279541

Token 355: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.127557173371315
    2. '=' → logprob: -2.1275572776794434
    3. ',' → logprob: -7.377557277679443
    4. '=int' → logprob: -12.627556800842285
    5. ' ,' → logprob: -14.627556800842285
    6. '=
' → logprob: -17.3775577545166
    7. ' ' → logprob: -17.3775577545166
    8. '=

' → logprob: -17.5025577545166
    9. ' =
' → logprob: -18.0025577545166
    10. '＝' → logprob: -18.2525577545166

Token 356: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.0002613358374219388
    2. ' int' → logprob: -8.250261306762695
    3. 'eval' → logprob: -19.625261306762695
    4. '<int' → logprob: -19.625261306762695
    5. '	int' → logprob: -20.125261306762695
    6. '   ' → logprob: -20.375261306762695
    7. '(int' → logprob: -20.875261306762695
    8. '[int' → logprob: -20.875261306762695
    9. '  ' → logprob: -21.875261306762695
    10. '=int' → logprob: -22.000261306762695

Token 357: '(lhs' (ID: 142432)
  Prédit: '(lhs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(lhs' → logprob: -0.00010092071170220152
    2. 'lhs' → logprob: -9.250101089477539
    3. '(' → logprob: -12.625101089477539
    4. '(rhs' → logprob: -14.500101089477539
    5. '(expr' → logprob: -15.375101089477539
    6. '(left' → logprob: -15.500101089477539
    7. ' lhs' → logprob: -15.500101089477539
    8. '(l' → logprob: -16.00010108947754
    9. ' (' → logprob: -16.37510108947754
    10. '('' → logprob: -16.75010108947754

Token 358: '_expr' (ID: 53654)
  Prédit: '_expr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_expr' → logprob: -1.306760805164231e-05
    2. 'expr' → logprob: -11.75001335144043
    3. 'Expr' → logprob: -12.62501335144043
    4. '_EXPR' → logprob: -14.50001335144043
    5. '[' → logprob: -14.75001335144043
    6. '[l' → logprob: -15.25001335144043
    7. '[_' → logprob: -15.37501335144043
    8. '_expression' → logprob: -16.00001335144043
    9. '[left' → logprob: -16.12501335144043
    10. '_idx' → logprob: -16.37501335144043

Token 359: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.02377307415008545
    2. '<|end|>' → logprob: -4.273773193359375
    3. '           ' → logprob: -5.523773193359375
    4. '<|end|>' → logprob: -6.023773193359375
    5. '               ' → logprob: -6.773773193359375
    6. ')
' → logprob: -6.898773193359375
    7. ',' → logprob: -8.773773193359375
    8. ' )' → logprob: -8.773773193359375
    9. '       ' → logprob: -9.023773193359375
    10. '),' → logprob: -9.273773193359375

Token 360: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.02408105693757534
    2. ' else' → logprob: -4.399081230163574
    3. 'else' → logprob: -4.524081230163574
    4. '               ' → logprob: -7.774081230163574
    5. 'elif' → logprob: -8.899081230163574
    6. ' elif' → logprob: -10.274081230163574
    7. '<|end|>' → logprob: -10.899081230163574
    8. '       ' → logprob: -11.274081230163574
    9. '          ' → logprob: -11.524081230163574
    10. '            ' → logprob: -12.274081230163574

Token 361: ' else' (ID: 1203)
  Prédit: ' else'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' else' → logprob: -0.49864843487739563
    2. 'else' (adapté à ' else') → logprob: -1.2486484050750732
    3. '           ' → logprob: -2.2486484050750732
    4. 'elif' → logprob: -9.498648643493652
    5. ' elif' → logprob: -9.623648643493652
    6. '       ' → logprob: -10.248648643493652
    7. '               ' → logprob: -11.123648643493652
    8. '            ' → logprob: -11.623648643493652
    9. '	else' → logprob: -12.373648643493652
    10. '          ' → logprob: -12.498648643493652

Token 362: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.883467972278595
    2. ':
' → logprob: -0.883467972278595
    3. '               ' → logprob: -2.13346791267395
    4. '           ' → logprob: -3.13346791267395
    5. ',' → logprob: -4.633468151092529
    6. '       ' → logprob: -8.133467674255371
    7. '{' → logprob: -8.508467674255371
    8. '   ' → logprob: -8.883467674255371
    9. '{
' → logprob: -8.883467674255371
    10. '                   ' → logprob: -9.008467674255371

Token 363: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.08573893457651138
    2. ' idx' → logprob: -3.2107388973236084
    3. 'idx' → logprob: -3.2107388973236084
    4. '           ' → logprob: -6.9607391357421875
    5. '   ' → logprob: -8.710739135742188
    6. ',' → logprob: -9.335739135742188
    7. ' _,' → logprob: -10.085739135742188
    8. '                   ' → logprob: -10.460739135742188
    9. '_,' → logprob: -10.460739135742188
    10. '              ' → logprob: -10.585739135742188

Token 364: ' ret' (ID: 2881)
  Prédit: 'idx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'idx' → logprob: -0.030039148405194283
    2. ' idx' → logprob: -3.655039072036743
    3. 'val' → logprob: -6.030039310455322
    4. '               ' → logprob: -7.655039310455322
    5. '           ' → logprob: -8.155038833618164
    6. 'value' → logprob: -8.655038833618164
    7. ' val' → logprob: -9.280038833618164
    8. 'res' → logprob: -9.405038833618164
    9. 'return' → logprob: -10.405038833618164
    10. 'result' → logprob: -10.655038833618164

Token 365: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0679379403591156
    2. 'urn' → logprob: -2.9429378509521484
    3. ' =' → logprob: -4.942937850952148
    4. ' ,' → logprob: -5.817937850952148
    5. '=' → logprob: -6.442937850952148
    6. '           ' → logprob: -8.192937850952148
    7. '       ' → logprob: -8.567937850952148
    8. 'val' → logprob: -8.942937850952148
    9. ',val' → logprob: -8.942937850952148
    10. '          ' → logprob: -9.192937850952148

Token 366: ' err' (ID: 2962)
  Prédit: 'err'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'err' → logprob: -0.17979511618614197
    2. ' err' → logprob: -1.8047951459884644
    3. 'error' → logprob: -10.054795265197754
    4. 'errmsg' → logprob: -12.679795265197754
    5. ' error' → logprob: -13.179795265197754
    6. 'errs' → logprob: -14.429795265197754
    7. '	err' → logprob: -15.304795265197754
    8. '   ' → logprob: -15.554795265197754
    9. '(err' → logprob: -15.679795265197754
    10. ' errmsg' → logprob: -15.929795265197754

Token 367: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.4740805923938751
    2. ' =' → logprob: -0.9740805625915527
    3. ',' → logprob: -12.599081039428711
    4. ' ' → logprob: -16.72408103942871
    5. ')' → logprob: -17.84908103942871
    6. '    ' → logprob: -17.97408103942871
    7. ' ' → logprob: -18.47408103942871
    8. '   ' → logprob: -18.47408103942871
    9. '<|end|>' → logprob: -18.47408103942871
    10. ')=' → logprob: -18.97408103942871

Token 368: ' eval' (ID: 29383)
  Prédit: 'eval'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'eval' → logprob: -0.0011705794604495168
    2. ' eval' → logprob: -6.751170635223389
    3. '   ' → logprob: -15.87617015838623
    4. '           ' → logprob: -15.87617015838623
    5. '(eval' → logprob: -16.626171112060547
    6. '.eval' → logprob: -18.876171112060547
    7. '=' → logprob: -19.126171112060547
    8. 'expr' → logprob: -19.126171112060547
    9. '       ' → logprob: -19.251171112060547
    10. 'evaluate' → logprob: -19.501171112060547

Token 369: '_expr' (ID: 53654)
  Prédit: '_expr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_expr' → logprob: -0.00010902655776590109
    2. '_' → logprob: -9.62510871887207
    3. 'expr' → logprob: -10.50010871887207
    4. '_rhs' → logprob: -11.25010871887207
    5. 'lhs' → logprob: -14.62510871887207
    6. 'Expr' → logprob: -14.87510871887207
    7. 'rhs' → logprob: -15.37510871887207
    8. '_EXPR' → logprob: -15.50010871887207
    9. ''_' → logprob: -15.62510871887207
    10. ' _' → logprob: -16.37510871887207

Token 370: '(lhs' (ID: 142432)
  Prédit: '(lhs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(lhs' → logprob: -0.002200571121647954
    2. '(' → logprob: -6.627200603485107
    3. '(rhs' → logprob: -7.127200603485107
    4. '('' → logprob: -10.00220012664795
    5. '(l' → logprob: -11.50220012664795
    6. 'lhs' → logprob: -12.25220012664795
    7. '(left' → logprob: -12.62720012664795
    8. '("("' → logprob: -12.62720012664795
    9. '(lst' → logprob: -14.50220012664795
    10. '(lua' → logprob: -14.62720012664795

Token 371: '_expr' (ID: 53654)
  Prédit: '_expr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_expr' → logprob: -0.05064413696527481
    2. '(lhs' → logprob: -3.0506441593170166
    3. '(expr' → logprob: -7.8006439208984375
    4. 'lhs' → logprob: -7.8006439208984375
    5. '(l' → logprob: -7.9256439208984375
    6. 'expr' → logprob: -8.175643920898438
    7. '(' → logprob: -8.175643920898438
    8. ')' → logprob: -9.300643920898438
    9. 'Expr' → logprob: -9.550643920898438
    10. '(rhs' → logprob: -10.050643920898438

Token 372: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.06734878569841385
    2. ')
' → logprob: -3.1923487186431885
    3. '           ' → logprob: -4.192348957061768
    4. '<|end|>' → logprob: -5.692348957061768
    5. '               ' → logprob: -6.317348957061768
    6. '
' → logprob: -6.567348957061768
    7. 'if' → logprob: -7.067348957061768
    8. ' if' → logprob: -7.192348957061768
    9. '<|end|>' → logprob: -8.31734848022461
    10. '       ' → logprob: -9.19234848022461

Token 373: '               ' (ID: 506)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.001136050675995648
    2. ' if' → logprob: -7.50113582611084
    3. 'if' → logprob: -7.87613582611084
    4. '<|end|>' → logprob: -8.87613582611084
    5. '               ' → logprob: -10.50113582611084
    6. '		' → logprob: -12.00113582611084
    7. '<|end|>' → logprob: -12.25113582611084
    8. '	       ' → logprob: -12.50113582611084
    9. '```' → logprob: -12.87613582611084
    10. ';if' → logprob: -12.87613582611084

Token 374: ' idx' (ID: 14016)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.1801031231880188
    2. '           ' → logprob: -1.930103063583374
    3. ' if' → logprob: -3.930103063583374
    4. '               ' → logprob: -10.555103302001953
    5. 'idx' (adapté à ' idx') → logprob: -11.180103302001953
    6. '   ' → logprob: -15.680103302001953
    7. '	if' → logprob: -15.805103302001953
    8. '          ' → logprob: -15.930103302001953
    9. '```' → logprob: -16.305103302001953
    10. '       ' → logprob: -16.430103302001953

Token 375: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.3868747651576996
    2. ' =' → logprob: -1.136874794960022
    3. ',' → logprob: -12.51187515258789
    4. '   ' → logprob: -17.26187515258789
    5. ' ,' → logprob: -18.01187515258789
    6. ' ' → logprob: -18.51187515258789
    7. '=
' → logprob: -18.63687515258789
    8. '    ' → logprob: -18.88687515258789
    9. ' =
' → logprob: -19.26187515258789
    10. '=}' → logprob: -19.51187515258789

Token 376: ' ret' (ID: 2881)
  Prédit: 'ret'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ret' → logprob: -0.00861468818038702
    2. ' ret' → logprob: -4.758614540100098
    3. 'int' → logprob: -17.133615493774414
    4. '(ret' → logprob: -17.383615493774414
    5. '	ret' → logprob: -18.258615493774414
    6. '0' → logprob: -19.633615493774414
    7. '$ret' → logprob: -19.633615493774414
    8. ' ' → logprob: -20.258615493774414
    9. 'rets' → logprob: -20.258615493774414
    10. ' int' → logprob: -20.508615493774414

Token 377: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 378: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.002892132615670562
    2. ' if' → logprob: -6.377892017364502
    3. 'if' → logprob: -6.752892017364502
    4. '<|end|>' → logprob: -11.62789249420166
    5. '               ' → logprob: -12.62789249420166
    6. '		' → logprob: -12.87789249420166
    7. '	       ' → logprob: -13.62789249420166
    8. '          ' → logprob: -13.87789249420166
    9. ',' → logprob: -14.00289249420166
    10. '       ' → logprob: -14.00289249420166

Token 379: ' if' (ID: 538)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.04190567880868912
    2. 'if' (adapté à ' if') → logprob: -3.541905641555786
    3. ' if' → logprob: -4.416905879974365
    4. '       ' → logprob: -13.041905403137207
    5. '```' → logprob: -13.416905403137207
    6. '		' → logprob: -13.916905403137207
    7. '<|end|>' → logprob: -14.041905403137207
    8. '
' → logprob: -14.041905403137207
    9. '            
' → logprob: -14.166905403137207
    10. '   ' → logprob: -14.541905403137207

Token 380: ' lhs' (ID: 51302)
  Prédit: ' err'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' err' → logprob: -0.12190534174442291
    2. 'err' → logprob: -2.2469053268432617
    3. ' arrays' → logprob: -5.621905326843262
    4. ' lhs' → logprob: -5.621905326843262
    5. ' idx' → logprob: -7.496905326843262
    6. 'lhs' → logprob: -7.621905326843262
    7. ' not' → logprob: -8.496905326843262
    8. ' name' → logprob: -8.996905326843262
    9. 'arrays' → logprob: -8.996905326843262
    10. 'idx' → logprob: -9.496905326843262

Token 381: '_name' (ID: 2483)
  Prédit: '_name'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_name' → logprob: -0.008014112710952759
    2. '_expr' → logprob: -5.00801420211792
    3. '_idx' → logprob: -7.50801420211792
    4. '_' → logprob: -8.758013725280762
    5. '_err' → logprob: -8.883013725280762
    6. ' ' → logprob: -9.508013725280762
    7. 'name' → logprob: -9.633013725280762
    8. ' not' → logprob: -10.633013725280762
    9. '_not' → logprob: -10.758013725280762
    10. 'expr' → logprob: -10.758013725280762

Token 382: ' not' (ID: 625)
  Prédit: ' not'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.0015421189600601792
    2. 'not' → logprob: -6.501542091369629
    3. ' in' → logprob: -10.626542091369629
    4. ' ==' → logprob: -11.626542091369629
    5. '[' → logprob: -13.376542091369629
    6. '	not' → logprob: -13.376542091369629
    7. ')' → logprob: -13.626542091369629
    8. '<|end|>' → logprob: -14.251542091369629
    9. ' ' → logprob: -14.626542091369629
    10. '_not' → logprob: -15.001542091369629

Token 383: ' in' (ID: 306)
  Prédit: ' arrays'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' arrays' → logprob: -0.08425865322351456
    2. 'arrays' → logprob: -2.834258556365967
    3. ' in' → logprob: -3.834258556365967
    4. 'in' → logprob: -8.334259033203125
    5. '_arrays' → logprob: -9.084259033203125
    6. ')' → logprob: -10.584259033203125
    7. '(arr' → logprob: -10.834259033203125
    8. ' ' → logprob: -12.209259033203125
    9. '[arr' → logprob: -12.459259033203125
    10. ' )' → logprob: -12.959259033203125

Token 384: ' arrays' (ID: 38774)
  Prédit: 'arrays'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'arrays' → logprob: -0.1269284337759018
    2. ' arrays' → logprob: -2.1269283294677734
    3. 'arr' → logprob: -15.876928329467773
    4. 'array' → logprob: -15.876928329467773
    5. '_arrays' → logprob: -16.376928329467773
    6. 'Arrays' → logprob: -18.626928329467773
    7. '```' → logprob: -20.001928329467773
    8. '-arr' → logprob: -20.626928329467773
    9. ' ' → logprob: -20.751928329467773
    10. '[arr' → logprob: -20.876928329467773

Token 385: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.2091328501701355
    2. ':
' → logprob: -1.8341329097747803
    3. ' or' → logprob: -3.8341329097747803
    4. '           ' → logprob: -5.834132671356201
    5. '               ' → logprob: -6.084132671356201
    6. '       ' → logprob: -6.334132671356201
    7. ' and' → logprob: -8.95913314819336
    8. ':return' → logprob: -9.83413314819336
    9. '<|end|>' → logprob: -10.20913314819336
    10. '):
' → logprob: -10.58413314819336

Token 386: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.00034833617974072695
    2. ' return' → logprob: -9.125348091125488
    3. '           ' → logprob: -9.750348091125488
    4. '                
' → logprob: -10.000348091125488
    5. ' continue' → logprob: -10.250348091125488
    6. '<|end|>' → logprob: -11.375348091125488
    7. '            
' → logprob: -11.750348091125488
    8. ':
' → logprob: -11.750348091125488
    9. '                       ' → logprob: -12.000348091125488
    10. '                   ' → logprob: -12.125348091125488

Token 387: ' return' (ID: 622)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.7927739024162292
    2. ' print' → logprob: -1.042773962020874
    3. '               ' → logprob: -1.792773962020874
    4. ' return' → logprob: -4.292773723602295
    5. 'return' (adapté à ' return') → logprob: -5.167773723602295
    6. ' continue' → logprob: -5.417773723602295
    7. 'continue' → logprob: -5.917773723602295
    8. '           ' → logprob: -6.792773723602295
    9. '                   ' → logprob: -8.792774200439453
    10. ' sys' → logprob: -9.042774200439453

Token 388: ' line' (ID: 2543)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''' → logprob: -0.6142883896827698
    2. 'None' → logprob: -1.239288330078125
    3. ' None' → logprob: -2.739288330078125
    4. '"' → logprob: -3.114288330078125
    5. ' '' → logprob: -3.489288330078125
    6. ''name' → logprob: -4.864288330078125
    7. ''l' → logprob: -5.364288330078125
    8. ''un' → logprob: -5.739288330078125
    9. ''f' → logprob: -5.989288330078125
    10. 'f' → logprob: -6.239288330078125

Token 389: '_no' (ID: 13575)
  Prédit: '[line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[line' → logprob: -1.1104323863983154
    2. '\n' → logprob: -1.4854323863983154
    3. '+' → logprob: -1.9854323863983154
    4. '"\' → logprob: -2.3604323863983154
    5. ''\' → logprob: -2.6104323863983154
    6. '
' → logprob: -3.3604323863983154
    7. ''' → logprob: -3.6104323863983154
    8. '_' → logprob: -4.1104326248168945
    9. '[' → logprob: -4.3604326248168945
    10. '[
' → logprob: -4.4854326248168945

Token 390: '
' (ID: 198)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.27813512086868286
    2. '<|end|>' → logprob: -1.528135061264038
    3. ' ,' → logprob: -5.028135299682617
    4. '
' → logprob: -5.278135299682617
    5. ',None' → logprob: -5.278135299682617
    6. '           ' → logprob: -6.278135299682617
    7. ',
' → logprob: -6.403135299682617
    8. '<|end|>' → logprob: -6.778135299682617
    9. '               ' → logprob: -6.903135299682617
    10. '       ' → logprob: -7.153135299682617

Token 391: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0151555510237813
    2. '            
' → logprob: -5.14015531539917
    3. '       ' → logprob: -5.76515531539917
    4. '
' → logprob: -6.01515531539917
    5. '    
' → logprob: -6.89015531539917
    6. '               ' → logprob: -7.14015531539917
    7. '        
' → logprob: -7.51515531539917
    8. '  
' → logprob: -8.140155792236328
    9. '```' → logprob: -9.140155792236328
    10. '\t' → logprob: -9.265155792236328

Token 392: ' size' (ID: 2349)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.03448459506034851
    2. ' if' → logprob: -3.909484624862671
    3. 'if' → logprob: -4.284484386444092
    4. '       ' → logprob: -9.78448486328125
    5. '   ' → logprob: -13.28448486328125
    6. '```' → logprob: -13.28448486328125
    7. '               ' → logprob: -13.40948486328125
    8. '            
' → logprob: -14.15948486328125
    9. '          ' → logprob: -14.53448486328125
    10. '	if' → logprob: -15.03448486328125

Token 393: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.13121822476387024
    2. '=' → logprob: -3.381218194961548
    3. '[name' → logprob: -4.006218433380127
    4. '<|end|>' → logprob: -4.006218433380127
    5. ' <' → logprob: -4.131218433380127
    6. '[size' → logprob: -4.631218433380127
    7. '=size' → logprob: -5.006218433380127
    8. ' <=' → logprob: -5.506218433380127
    9. '[' → logprob: -5.631218433380127
    10. ' >' → logprob: -6.506218433380127

Token 394: ' arrays' (ID: 38774)
  Prédit: 'arrays'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'arrays' → logprob: -0.07889000326395035
    2. ' arrays' → logprob: -2.578890085220337
    3. 'arr' → logprob: -15.828889846801758
    4. 'array' → logprob: -16.703889846801758
    5. '_arrays' → logprob: -18.203889846801758
    6. '   ' → logprob: -18.203889846801758
    7. 'Arrays' → logprob: -18.703889846801758
    8. '           ' → logprob: -19.453889846801758
    9. ' ' → logprob: -19.828889846801758
    10. '```' → logprob: -19.953889846801758

Token 395: '[l' (ID: 38286)
  Prédit: '[l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[l' → logprob: -6.034592388459714e-06
    2. '[' → logprob: -13.125005722045898
    3. '[left' → logprob: -13.125005722045898
    4. ',l' → logprob: -14.250005722045898
    5. 'lhs' → logprob: -14.625005722045898
    6. ' [' → logprob: -15.375005722045898
    7. '(lhs' → logprob: -15.625005722045898
    8. '   ' → logprob: -16.2500057220459
    9. '[
' → logprob: -16.6250057220459
    10. '```' → logprob: -16.7500057220459

Token 396: 'hs' (ID: 9467)
  Prédit: 'hs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'hs' → logprob: -0.003202312160283327
    2. 'lhs' → logprob: -5.753202438354492
    3. '(lhs' → logprob: -11.503202438354492
    4. 'eft' → logprob: -12.503202438354492
    5. ' lhs' → logprob: -12.628202438354492
    6. '[' → logprob: -12.753202438354492
    7. 'efs' → logprob: -13.628202438354492
    8. '[left' → logprob: -14.253202438354492
    9. 'HS' → logprob: -14.503202438354492
    10. '[l' → logprob: -14.753202438354492

Token 397: '_name' (ID: 2483)
  Prédit: '_name'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_name' → logprob: -1.0802738870552275e-05
    2. '[l' → logprob: -11.62501049041748
    3. ']' → logprob: -14.37501049041748
    4. '[left' → logprob: -15.00001049041748
    5. '_NAME' → logprob: -15.12501049041748
    6. '[' → logprob: -15.37501049041748
    7. 'name' → logprob: -16.000011444091797
    8. '```' → logprob: -16.875011444091797
    9. '[
' → logprob: -17.000011444091797
    10. 'lhs' → logprob: -17.250011444091797

Token 398: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.038498472422361374
    2. ']
' → logprob: -3.4134984016418457
    3. '           ' → logprob: -6.538498401641846
    4. '[' → logprob: -6.913498401641846
    5. '<|end|>' → logprob: -7.038498401641846
    6. '       ' → logprob: -7.788498401641846
    7. '[idx' → logprob: -8.038498878479004
    8. ' ]' → logprob: -8.663498878479004
    9. '
' → logprob: -9.163498878479004
    10. '[
' → logprob: -9.413498878479004

Token 399: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.001004943042062223
    2. ' if' → logprob: -7.751005172729492
    3. '```' → logprob: -7.876005172729492
    4. '<|end|>' → logprob: -9.751005172729492
    5. 'if' → logprob: -10.251005172729492
    6. '            
' → logprob: -10.626005172729492
    7. '		' → logprob: -11.001005172729492
    8. '            ' → logprob: -11.126005172729492
    9. '       ' → logprob: -11.251005172729492
    10. '          ' → logprob: -12.376005172729492

Token 400: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.5034931898117065
    2. '           ' → logprob: -1.5034931898117065
    3. 'if' (adapté à ' if') → logprob: -1.7534931898117065
    4. '	if' → logprob: -11.003493309020996
    5. '		' → logprob: -11.503493309020996
    6. '            ' → logprob: -11.878493309020996
    7. ' ' → logprob: -12.003493309020996
    8. '```' → logprob: -12.003493309020996
    9. '       ' → logprob: -12.378493309020996
    10. '            
' → logprob: -12.753493309020996

Token 401: ' idx' (ID: 14016)
  Prédit: ' idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' idx' → logprob: -0.5760267972946167
    2. 'idx' → logprob: -0.8260267972946167
    3. '(idx' → logprob: -9.576026916503906
    4. '           ' → logprob: -11.326026916503906
    5. '	idx' → logprob: -13.076026916503906
    6. ' (' → logprob: -13.701026916503906
    7. '   ' → logprob: -14.326026916503906
    8. ' ' → logprob: -14.451026916503906
    9. '               ' → logprob: -15.076026916503906
    10. ' not' → logprob: -15.201026916503906

Token 402: ' is' (ID: 382)
  Prédit: ' <'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.020543871447443962
    2. '<' → logprob: -3.8955438137054443
    3. ' ' → logprob: -14.020544052124023
    4. '<|end|>' → logprob: -14.770544052124023
    5. ' >=' → logprob: -14.895544052124023
    6. ')' → logprob: -16.145544052124023
    7. '   ' → logprob: -16.270544052124023
    8. '<int' → logprob: -16.395544052124023
    9. '[' → logprob: -16.645544052124023
    10. ' ' → logprob: -17.020544052124023

Token 403: ' None' (ID: 4662)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<' → logprob: -0.6432355046272278
    2. ' None' → logprob: -1.393235445022583
    3. ' <' → logprob: -1.768235445022583
    4. 'None' → logprob: -2.893235445022583
    5. '0' → logprob: -10.393235206604004
    6. ' ' → logprob: -10.518235206604004
    7. ' not' → logprob: -11.268235206604004
    8. '   ' → logprob: -12.018235206604004
    9. '<int' → logprob: -12.393235206604004
    10. '(None' → logprob: -12.643235206604004

Token 404: ' or' (ID: 503)
  Prédit: ' <'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.7116090059280396
    2. ' or' → logprob: -0.7116090059280396
    3. '<' → logprob: -4.08660888671875
    4. 'or' → logprob: -7.21160888671875
    5. '           ' → logprob: -7.96160888671875
    6. '<|end|>' → logprob: -8.83660888671875
    7. ' ' → logprob: -8.96160888671875
    8. '               ' → logprob: -10.21160888671875
    9. '            ' → logprob: -10.83660888671875
    10. '       ' → logprob: -11.08660888671875

Token 405: ' idx' (ID: 14016)
  Prédit: ' idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' idx' → logprob: -0.05545806884765625
    2. 'idx' → logprob: -2.9304580688476562
    3. ' (' → logprob: -8.180458068847656
    4. '(idx' → logprob: -8.180458068847656
    5. '(' → logprob: -12.430458068847656
    6. ' ' → logprob: -12.930458068847656
    7. '           ' → logprob: -13.055458068847656
    8. '	idx' → logprob: -13.430458068847656
    9. '   ' → logprob: -13.930458068847656
    10. '               ' → logprob: -14.180458068847656

Token 406: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.31326398253440857
    2. '<' → logprob: -1.313264012336731
    3. ' ' → logprob: -14.188263893127441
    4. ' >=' → logprob: -14.313263893127441
    5. '   ' → logprob: -15.313263893127441
    6. '<|end|>' → logprob: -15.438263893127441
    7. '[' → logprob: -15.938263893127441
    8. ')' → logprob: -16.188264846801758
    9. '<int' → logprob: -16.438264846801758
    10. '>=' → logprob: -16.438264846801758

Token 407: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.14267762005329132
    2. ' ' → logprob: -2.0176775455474854
    3. '=' → logprob: -13.392677307128906
    4. '1' → logprob: -15.642677307128906
    5. '   ' → logprob: -15.642677307128906
    6. '
' → logprob: -16.017677307128906
    7. '  ' → logprob: -16.142677307128906
    8. ' ' → logprob: -16.142677307128906
    9. ' =' → logprob: -16.517677307128906
    10. '>' → logprob: -16.830177307128906

Token 408: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -7.517272024415433e-05
    2. ' ' → logprob: -9.500075340270996
    3. '=' → logprob: -16.50007438659668
    4. '```' → logprob: -17.00007438659668
    5. '   ' → logprob: -17.25007438659668
    6. '
' → logprob: -17.50007438659668
    7. '>' → logprob: -19.12507438659668
    8. '1' → logprob: -19.93757438659668
    9. '       ' → logprob: -20.00007438659668
    10. 'size' → logprob: -20.00007438659668

Token 409: ' or' (ID: 503)
  Prédit: ' or'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' or' → logprob: -0.0012005893513560295
    2. 'or' → logprob: -6.7512006759643555
    3. '           ' → logprob: -10.626200675964355
    4. '               ' → logprob: -13.126200675964355
    5. '            ' → logprob: -13.376200675964355
    6. '	or' → logprob: -13.376200675964355
    7. ' ' → logprob: -14.751200675964355
    8. ' ' → logprob: -15.751200675964355
    9. '          ' → logprob: -16.25119972229004
    10. '              ' → logprob: -16.62619972229004

Token 410: ' idx' (ID: 14016)
  Prédit: ' idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' idx' → logprob: -0.4740777611732483
    2. 'idx' → logprob: -0.9740777611732483
    3. '	idx' → logprob: -14.974078178405762
    4. '           ' → logprob: -15.599078178405762
    5. '(idx' → logprob: -16.474077224731445
    6. '               ' → logprob: -16.724077224731445
    7. ' ' → logprob: -16.974077224731445
    8. '   ' → logprob: -17.474077224731445
    9. 'index' → logprob: -17.974077224731445
    10. '[idx' → logprob: -17.974077224731445

Token 411: ' >=' (ID: 5064)
  Prédit: '>='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>=' → logprob: -0.34859487414360046
    2. ' >=' → logprob: -1.2235949039459229
    3. '>' → logprob: -9.598594665527344
    4. 'size' → logprob: -10.598594665527344
    5. ' ' → logprob: -11.223594665527344
    6. ' or' → logprob: -11.348594665527344
    7. ']>=' → logprob: -11.348594665527344
    8. ')>=' → logprob: -11.848594665527344
    9. ' size' → logprob: -12.723594665527344
    10. '```' → logprob: -12.973594665527344

Token 412: ' size' (ID: 2349)
  Prédit: 'size'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'size' → logprob: -0.4740787148475647
    2. ' size' → logprob: -0.9740787148475647
    3. '   ' → logprob: -14.099079132080078
    4. ' ' → logprob: -14.849079132080078
    5. '	size' → logprob: -15.349079132080078
    6. '           ' → logprob: -15.724079132080078
    7. '       ' → logprob: -16.849079132080078
    8. '               ' → logprob: -17.224079132080078
    9. '(size' → logprob: -17.849079132080078
    10. ' ' → logprob: -17.849079132080078

Token 413: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.8474440574645996
    2. ':
' → logprob: -1.2224440574645996
    3. '               ' → logprob: -1.3474440574645996
    4. '           ' → logprob: -4.3474440574646
    5. ':return' → logprob: -6.2224440574646
    6. ' or' → logprob: -6.3474440574646
    7. '<|end|>' → logprob: -9.472444534301758
    8. '       ' → logprob: -9.722444534301758
    9. '              ' → logprob: -10.222444534301758
    10. ',' → logprob: -10.347444534301758

Token 414: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.010477842763066292
    2. ' return' → logprob: -4.6354780197143555
    3. 'return' → logprob: -7.7604780197143555
    4. '           ' → logprob: -8.260478019714355
    5. '   ' → logprob: -11.260478019714355
    6. '       ' → logprob: -11.635478019714355
    7. '<|end|>' → logprob: -12.260478019714355
    8. '                   ' → logprob: -12.635478019714355
    9. '	           ' → logprob: -13.760478019714355
    10. '```' → logprob: -13.885478019714355

Token 415: ' return' (ID: 622)
  Prédit: ' return'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.0642470121383667
    2. 'return' (adapté à ' return') → logprob: -2.8142471313476562
    3. '           ' → logprob: -6.689247131347656
    4. '               ' → logprob: -6.939247131347656
    5. '	return' → logprob: -10.689247131347656
    6. '   ' → logprob: -10.814247131347656
    7. '```' → logprob: -11.314247131347656
    8. ' ' → logprob: -13.814247131347656
    9. ' continue' → logprob: -13.939247131347656
    10. '	       ' → logprob: -13.939247131347656

Token 416: ' line' (ID: 2543)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'line' → logprob: -0.00317783304490149
    2. ' line' → logprob: -5.753177642822266
    3. '(line' → logprob: -16.878177642822266
    4. 'lin' → logprob: -18.628177642822266
    5. '[line' → logprob: -18.753177642822266
    6. '	line' → logprob: -19.128177642822266
    7. 'None' → logprob: -19.378177642822266
    8. '#line' → logprob: -19.628177642822266
    9. ' ' → logprob: -20.003177642822266
    10. '   ' → logprob: -20.253177642822266

Token 417: '_no' (ID: 13575)
  Prédit: '_no'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_no' → logprob: -9.014684110297821e-06
    2. 'No' → logprob: -12.125008583068848
    3. 'no' → logprob: -12.750008583068848
    4. '_n' → logprob: -14.875008583068848
    5. '_NO' → logprob: -17.000009536743164
    6. '_No' → logprob: -17.250009536743164
    7. '_' → logprob: -17.625009536743164
    8. ' no' → logprob: -18.375009536743164
    9. '_line' → logprob: -18.500009536743164
    10. ' No' → logprob: -18.500009536743164

Token 418: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0009250381262972951
    2. '<|end|>' → logprob: -7.250925064086914
    3. '```' → logprob: -9.375925064086914
    4. '            
' → logprob: -10.125925064086914
    5. '
' → logprob: -10.250925064086914
    6. '       ' → logprob: -11.250925064086914
    7. '		' → logprob: -11.750925064086914
    8. '               ' → logprob: -11.750925064086914
    9. '<|end|>' → logprob: -12.250925064086914
    10. ',' → logprob: -12.875925064086914

Token 419: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -5.371605948312208e-05
    2. '            
' → logprob: -11.000053405761719
    3. '       ' → logprob: -11.750053405761719
    4. '               ' → logprob: -11.875053405761719
    5. 'continue' → logprob: -12.250053405761719
    6. '<|end|>' → logprob: -12.750053405761719
    7. ' continue' → logprob: -12.875053405761719
    8. '```' → logprob: -12.875053405761719
    9. '		' → logprob: -13.375053405761719
    10. '
' → logprob: -13.375053405761719

Token 420: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.8201547265052795
    2. 'ret' → logprob: -1.0701546669006348
    3. '           ' → logprob: -2.0701546669006348
    4. 'val' → logprob: -2.5701546669006348
    5. 'value' → logprob: -4.570154666900635
    6. '#' → logprob: -7.820154666900635
    7. 'rhs' → logprob: -7.820154666900635
    8. ' if' → logprob: -7.945154666900635
    9. 'result' → logprob: -8.070155143737793
    10. '```' → logprob: -8.195155143737793

Token 421: ' err' (ID: 2962)
  Prédit: 'lhs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lhs' → logprob: -1.3416706323623657
    2. 'rhs' → logprob: -1.7166706323623657
    3. '(lhs' → logprob: -1.7166706323623657
    4. ' lhs' → logprob: -2.091670513153076
    5. ' rhs' → logprob: -2.841670513153076
    6. '(rhs' → logprob: -2.966670513153076
    7. ' (' → logprob: -3.216670513153076
    8. ' not' → logprob: -3.216670513153076
    9. 'err' → logprob: -3.966670513153076
    10. ' err' → logprob: -4.341670513153076

Token 422: ' is' (ID: 382)
  Prédit: ' is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.37202900648117065
    2. ':' → logprob: -1.2470290660858154
    3. ':
' → logprob: -4.247028827667236
    4. 'is' → logprob: -5.997028827667236
    5. ' !=' → logprob: -6.622028827667236
    6. ' ==' → logprob: -6.622028827667236
    7. ' :' → logprob: -6.997028827667236
    8. ' not' → logprob: -7.872028827667236
    9. ' ' → logprob: -7.997028827667236
    10. '   ' → logprob: -7.997028827667236

Token 423: ' not' (ID: 625)
  Prédit: 'not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'not' → logprob: -0.09080146998167038
    2. ' not' → logprob: -2.465801477432251
    3. 'None' → logprob: -7.090801239013672
    4. ''' → logprob: -7.215801239013672
    5. ''s' → logprob: -9.465801239013672
    6. 'n't' → logprob: -10.215801239013672
    7. '"' → logprob: -10.590801239013672
    8. '   ' → logprob: -10.715801239013672
    9. ''un' → logprob: -10.840801239013672
    10. 'Not' → logprob: -11.215801239013672

Token 424: ' None' (ID: 4662)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -0.001667207689024508
    2. ' None' → logprob: -6.626667022705078
    3. 'not' → logprob: -8.001667022705078
    4. '   ' → logprob: -12.751667022705078
    5. ' not' → logprob: -13.126667022705078
    6. 'none' → logprob: -14.126667022705078
    7. ''' → logprob: -16.001667022705078
    8. 'Not' → logprob: -16.126667022705078
    9. '_None' → logprob: -16.501667022705078
    10. '           ' → logprob: -16.501667022705078

Token 425: ':
' (ID: 734)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.43535882234573364
    2. ':' → logprob: -1.4353587627410889
    3. ':
' → logprob: -2.185358762741089
    4. ' or' → logprob: -6.935359001159668
    5. ':return' → logprob: -7.185359001159668
    6. '           ' → logprob: -7.685359001159668
    7. '<|end|>' → logprob: -9.560359001159668
    8. ':

' → logprob: -9.935359001159668
    9. ',' → logprob: -10.560359001159668
    10. ' and' → logprob: -10.685359001159668

Token 426: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.010582361370325089
    2. 'return' → logprob: -4.760582447052002
    3. ' return' → logprob: -6.635582447052002
    4. '           ' → logprob: -7.510582447052002
    5. '   ' → logprob: -9.635581970214844
    6. '       ' → logprob: -10.510581970214844
    7. ' ' → logprob: -11.760581970214844
    8. '              ' → logprob: -13.260581970214844
    9. '                   ' → logprob: -13.510581970214844
    10. '	return' → logprob: -14.510581970214844

Token 427: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.0238092802464962
    2. ' return' → logprob: -3.7738091945648193
    3. '               ' → logprob: -7.898809432983398
    4. '           ' → logprob: -8.648809432983398
    5. '   ' → logprob: -11.523809432983398
    6. '       ' → logprob: -12.773809432983398
    7. '	return' → logprob: -13.523809432983398
    8. ' ' → logprob: -13.648809432983398
    9. 'continue' → logprob: -14.523809432983398
    10. '```' → logprob: -15.023809432983398

Token 428: ' line' (ID: 2543)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'line' → logprob: -0.0031777136027812958
    2. ' line' → logprob: -5.753177642822266
    3. '(line' → logprob: -18.003177642822266
    4. '[line' → logprob: -18.378177642822266
    5. '   ' → logprob: -19.753177642822266
    6. '1' → logprob: -19.753177642822266
    7. '           ' → logprob: -20.003177642822266
    8. '	line' → logprob: -20.128177642822266
    9. '```' → logprob: -20.128177642822266
    10. 'idx' → logprob: -20.378177642822266

Token 429: '_no' (ID: 13575)
  Prédit: '_no'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_no' → logprob: -1.5332478142227046e-05
    2. 'No' → logprob: -11.250015258789062
    3. '_NO' → logprob: -14.250015258789062
    4. '_n' → logprob: -14.250015258789062
    5. '_No' → logprob: -15.000015258789062
    6. 'no' → logprob: -15.500015258789062
    7. ' _' → logprob: -16.375015258789062
    8. '_' → logprob: -16.875015258789062
    9. '_line' → logprob: -16.875015258789062
    10. '```' → logprob: -17.000015258789062

Token 430: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.008000391535460949
    2. '
' → logprob: -5.258000373840332
    3. '            
' → logprob: -6.883000373840332
    4. ',' → logprob: -7.383000373840332
    5. '       ' → logprob: -7.633000373840332
    6. '```' → logprob: -8.883000373840332
    7. '<|end|>' → logprob: -9.383000373840332
    8. '   ' → logprob: -10.008000373840332
    9. '        
' → logprob: -10.008000373840332
    10. '    
' → logprob: -10.133000373840332

Token 431: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0077477674931287766
    2. ' if' → logprob: -6.007747650146484
    3. ' ret' → logprob: -6.507747650146484
    4. '```' → logprob: -6.632747650146484
    5. '       ' → logprob: -6.757747650146484
    6. 'if' → logprob: -8.132747650146484
    7. 'ret' → logprob: -8.632747650146484
    8. '            
' → logprob: -9.382747650146484
    9. '
' → logprob: -9.382747650146484
    10. ' assigned' → logprob: -9.632747650146484

Token 432: ' #' (ID: 1069)
  Prédit: 'ret'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ret' → logprob: -0.10635880380868912
    2. 'val' → logprob: -2.856358766555786
    3. '           ' → logprob: -3.606358766555786
    4. 'rhs' → logprob: -4.731359004974365
    5. 'if' → logprob: -5.981359004974365
    6. 'value' → logprob: -6.231359004974365
    7. ' ret' → logprob: -6.231359004974365
    8. 'retval' → logprob: -8.106358528137207
    9. 'res' → logprob: -8.231358528137207
    10. 'r' → logprob: -9.106358528137207

Token 433: ' eval' (ID: 29383)
  Prédit: 'ret'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ret' → logprob: -0.09356024861335754
    2. 'val' → logprob: -2.718560218811035
    3. 'rhs' → logprob: -4.593560218811035
    4. ' ret' → logprob: -4.718560218811035
    5. 'value' → logprob: -6.593560218811035
    6. '           ' → logprob: -7.093560218811035
    7. 'res' → logprob: -7.093560218811035
    8. 'r' → logprob: -7.968560218811035
    9. 'if' → logprob: -8.218560218811035
    10. ' val' → logprob: -8.593560218811035

Token 434: ' rhs' (ID: 29564)
  Prédit: 'rhs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rhs' → logprob: -0.26907336711883545
    2. ' rhs' → logprob: -2.144073486328125
    3. '_rhs' → logprob: -3.019073486328125
    4. 'ret' → logprob: -3.019073486328125
    5. '_expr' → logprob: -4.394073486328125
    6. ' ret' → logprob: -5.019073486328125
    7. 'expr' → logprob: -8.144073486328125
    8. 'value' → logprob: -8.394073486328125
    9. 'retval' → logprob: -8.394073486328125
    10. '(rhs' → logprob: -8.394073486328125

Token 435: ' value' (ID: 1432)
  Prédit: 'ret'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ret' → logprob: -0.7135637998580933
    2. ' ret' → logprob: -1.3385637998580933
    3. '           ' → logprob: -2.338563919067383
    4. ' if' → logprob: -2.463563919067383
    5. ',' → logprob: -2.963563919067383
    6. 'if' → logprob: -4.463563919067383
    7. '_ret' → logprob: -7.588563919067383
    8. '       ' → logprob: -8.088563919067383
    9. 'tokens' → logprob: -8.088563919067383
    10. '$ret' → logprob: -8.088563919067383

Token 436: '
' (ID: 198)
  Prédit: 'ret'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ret' → logprob: -0.3404765725135803
    2. 'val' → logprob: -1.3404765129089355
    3. ' ret' → logprob: -4.7154765129089355
    4. '           ' → logprob: -4.7154765129089355
    5. 'value' → logprob: -5.7154765129089355
    6. ' val' → logprob: -5.9654765129089355
    7. ',' → logprob: -6.2154765129089355
    8. 'rhs' → logprob: -7.7154765129089355
    9. 'retval' → logprob: -8.340476989746094
    10. 'v' → logprob: -8.715476989746094

Token 437: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.7889285087585449
    2. 'ret' → logprob: -1.038928508758545
    3. ' ret' → logprob: -1.913928508758545
    4. 'val' → logprob: -3.538928508758545
    5. ' val' → logprob: -4.913928508758545
    6. 'value' → logprob: -5.163928508758545
    7. ' value' → logprob: -7.163928508758545
    8. ' if' → logprob: -8.038928985595703
    9. 'retval' → logprob: -8.288928985595703
    10. '       ' → logprob: -8.413928985595703

Token 438: ' if' (ID: 538)
  Prédit: 'val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'val' → logprob: -0.032001495361328125
    2. 'value' → logprob: -3.907001495361328
    3. 'ret' → logprob: -4.907001495361328
    4. 'rhs' → logprob: -5.532001495361328
    5. 'res' → logprob: -11.282001495361328
    6. ' val' → logprob: -11.782001495361328
    7. 'if' (adapté à ' if') → logprob: -11.782001495361328
    8. 'retval' → logprob: -12.032001495361328
    9. 'v' → logprob: -12.907001495361328
    10. 'rv' → logprob: -13.157001495361328

Token 439: ' rhs' (ID: 29564)
  Prédit: ' rhs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' rhs' → logprob: -0.22611933946609497
    2. 'rhs' → logprob: -1.6011192798614502
    3. ''' → logprob: -7.726119518280029
    4. '(rhs' → logprob: -8.976119041442871
    5. ' '='' → logprob: -9.601119041442871
    6. ' '('' → logprob: -11.226119041442871
    7. ' '"'' → logprob: -11.351119041442871
    8. ' lhs' → logprob: -11.351119041442871
    9. 'lhs' → logprob: -12.226119041442871
    10. ' ' → logprob: -12.351119041442871

Token 440: '.is' (ID: 3109)
  Prédit: '.is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.is' → logprob: -0.008008316159248352
    2. '.' → logprob: -5.0080084800720215
    3. 'isdigit' → logprob: -6.8830084800720215
    4. '.startswith' → logprob: -8.633008003234863
    5. '[' → logprob: -9.883008003234863
    6. ' .' → logprob: -11.258008003234863
    7. '.endswith' → logprob: -11.258008003234863
    8. '==' → logprob: -12.383008003234863
    9. '.strip' → logprob: -12.883008003234863
    10. ' ==' → logprob: -13.258008003234863

Token 441: 'digit' (ID: 78327)
  Prédit: 'digit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'digit' → logprob: -2.5107177862082608e-05
    2. 'alpha' → logprob: -10.750024795532227
    3. '_digit' → logprob: -12.750024795532227
    4. 'decimal' → logprob: -15.500024795532227
    5. ' digit' → logprob: -15.500024795532227
    6. 'isdigit' → logprob: -16.750024795532227
    7. 'print' → logprob: -17.250024795532227
    8. 'digits' → logprob: -17.375024795532227
    9. '-digit' → logprob: -17.500024795532227
    10. 'identifier' → logprob: -17.750024795532227

Token 442: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.18859906494617462
    2. '()' → logprob: -1.8135991096496582
    3. '():
' → logprob: -4.938599109649658
    4. '(' → logprob: -6.563599109649658
    5. '('' → logprob: -10.0635986328125
    6. ':' → logprob: -10.1885986328125
    7. '()[' → logprob: -10.3135986328125
    8. '():

' → logprob: -10.4385986328125
    9. ' ()' → logprob: -10.5635986328125
    10. ' ():' → logprob: -10.8135986328125

Token 443: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.006100135389715433
    2. ' value' → logprob: -5.756100177764893
    3. 'value' → logprob: -6.006100177764893
    4. '           ' → logprob: -8.631099700927734
    5. ',' → logprob: -9.756099700927734
    6. ' val' → logprob: -10.631099700927734
    7. '                   ' → logprob: -10.756099700927734
    8. ':' → logprob: -10.756099700927734
    9. 'val' → logprob: -10.881099700927734
    10. ',value' → logprob: -11.256099700927734

Token 444: ' val' (ID: 1459)
  Prédit: 'value'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'value' → logprob: -0.6696997880935669
    2. 'val' (adapté à ' val') → logprob: -0.9196997880935669
    3. ' val' → logprob: -2.9196996688842773
    4. ' value' → logprob: -3.4196996688842773
    5. '               ' → logprob: -6.669699668884277
    6. 'v' → logprob: -7.169699668884277
    7. 'ret' → logprob: -8.044699668884277
    8. 'int' → logprob: -9.294699668884277
    9. ' ret' → logprob: -9.419699668884277
    10. 'retval' → logprob: -9.419699668884277

Token 445: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.014165041036903858
    2. '=' → logprob: -4.264164924621582
    3. '=int' → logprob: -14.264164924621582
    4. '               ' → logprob: -14.514164924621582
    5. '           ' → logprob: -15.639164924621582
    6. ',' → logprob: -16.5141658782959
    7. ' ' → logprob: -16.5141658782959
    8. '                ' → logprob: -17.8891658782959
    9. ' ' → logprob: -18.1391658782959
    10. '   ' → logprob: -18.3891658782959

Token 446: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.00020354038861114532
    2. ' int' → logprob: -8.500203132629395
    3. '(int' → logprob: -20.37520408630371
    4. '[int' → logprob: -20.37520408630371
    5. '<int' → logprob: -20.62520408630371
    6. '               ' → logprob: -20.62520408630371
    7. '	int' → logprob: -21.25020408630371
    8. '=int' → logprob: -21.75020408630371
    9. '   ' → logprob: -22.50020408630371
    10. 'intval' → logprob: -22.62520408630371

Token 447: '(rhs' (ID: 137942)
  Prédit: '(rhs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(rhs' → logprob: -0.008618119172751904
    2. '(' → logprob: -4.758618354797363
    3. ' (' → logprob: -13.508618354797363
    4. 'rhs' → logprob: -13.883618354797363
    5. '(
' → logprob: -14.883618354797363
    6. ')' → logprob: -15.258618354797363
    7. '('' → logprob: -15.258618354797363
    8. '(rs' → logprob: -15.508618354797363
    9. ' rhs' → logprob: -16.133617401123047
    10. '(rv' → logprob: -16.633617401123047

Token 448: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0013840439496561885
    2. ' )' → logprob: -7.001384258270264
    3. ')
' → logprob: -7.876384258270264
    4. '[' → logprob: -10.126383781433105
    5. '           ' → logprob: -10.876383781433105
    6. '())' → logprob: -12.126383781433105
    7. '       ' → logprob: -12.251383781433105
    8. '<|end|>' → logprob: -12.251383781433105
    9. '')' → logprob: -12.876383781433105
    10. '               ' → logprob: -12.876383781433105

Token 449: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.009944374673068523
    2. 'else' → logprob: -4.759944438934326
    3. ' else' → logprob: -7.259944438934326
    4. '               ' → logprob: -8.009943962097168
    5. 'elif' → logprob: -8.634943962097168
    6. '<|end|>' → logprob: -9.634943962097168
    7. '       ' → logprob: -10.634943962097168
    8. '<|end|>' → logprob: -12.134943962097168
    9. '	       ' → logprob: -12.259943962097168
    10. ' elif' → logprob: -12.509943962097168

Token 450: ' else' (ID: 1203)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' (adapté à ' else') → logprob: -0.1047191172838211
    2. '           ' → logprob: -2.3547191619873047
    3. ' else' → logprob: -5.729719161987305
    4. 'elif' → logprob: -6.729719161987305
    5. '       ' → logprob: -9.979719161987305
    6. ' elif' → logprob: -12.354719161987305
    7. '   ' → logprob: -12.854719161987305
    8. '	else' → logprob: -13.229719161987305
    9. '          ' → logprob: -13.979719161987305
    10. '	       ' → logprob: -13.979719161987305

Token 451: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.5289888978004456
    2. ':' → logprob: -0.9039888978004456
    3. '               ' → logprob: -5.403988838195801
    4. '           ' → logprob: -6.903988838195801
    5. ',' → logprob: -9.0289888381958
    6. '):
' → logprob: -10.0289888381958
    7. '{
' → logprob: -10.2789888381958
    8. ' :
' → logprob: -10.5289888381958
    9. '              ' → logprob: -10.7789888381958
    10. '            ' → logprob: -10.9039888381958

Token 452: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.9962366223335266
    2. 'val' → logprob: -1.2462365627288818
    3. 'ret' → logprob: -1.4962365627288818
    4. ' ret' → logprob: -2.621236562728882
    5. '           ' → logprob: -3.496236562728882
    6. ' val' → logprob: -4.246236801147461
    7. '   ' → logprob: -8.121236801147461
    8. 'retval' → logprob: -8.246236801147461
    9. '       ' → logprob: -8.371236801147461
    10. '                   ' → logprob: -8.496236801147461

Token 453: ' val' (ID: 1459)
  Prédit: 'val'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'val' (adapté à ' val') → logprob: -0.3161618113517761
    2. 'ret' → logprob: -1.566161870956421
    3. ' ret' → logprob: -3.691161870956421
    4. ' val' → logprob: -3.816161870956421
    5. '               ' → logprob: -4.316161632537842
    6. '   ' → logprob: -7.191161632537842
    7. 'retval' → logprob: -7.941161632537842
    8. 'res' → logprob: -8.816162109375
    9. '           ' → logprob: -9.066162109375
    10. '	val' → logprob: -9.316162109375

Token 454: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.03756225109100342
    2. '_val' → logprob: -3.537562370300293
    3. ',val' → logprob: -5.287562370300293
    4. 'val' → logprob: -7.287562370300293
    5. ' =' → logprob: -7.537562370300293
    6. '_,' → logprob: -7.787562370300293
    7. '=' → logprob: -7.912562370300293
    8. '_ret' → logprob: -8.037562370300293
    9. ',_' → logprob: -8.787562370300293
    10. ' ,' → logprob: -8.912562370300293

Token 455: ' err' (ID: 2962)
  Prédit: 'err'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'err' → logprob: -0.07894840091466904
    2. ' err' → logprob: -2.578948497772217
    3. 'error' → logprob: -9.953948020935059
    4. ' error' → logprob: -12.203948020935059
    5. 'errmsg' → logprob: -13.078948020935059
    6. '_err' → logprob: -13.828948020935059
    7. 'errs' → logprob: -13.828948020935059
    8. '	err' → logprob: -14.453948020935059
    9. '=' → logprob: -15.578948020935059
    10. '_' → logprob: -15.703948020935059

Token 456: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.4098571240901947
    2. ' =' → logprob: -1.159857153892517
    3. ',' → logprob: -3.7848570346832275
    4. ' ,' → logprob: -11.659856796264648
    5. '   ' → logprob: -13.909856796264648
    6. ' ' → logprob: -14.909856796264648
    7. '    ' → logprob: -15.034856796264648
    8. ')' → logprob: -15.034856796264648
    9. '       ' → logprob: -15.534856796264648
    10. '        ' → logprob: -15.534856796264648

Token 457: ' eval' (ID: 29383)
  Prédit: 'eval'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'eval' → logprob: -0.008614808320999146
    2. ' eval' → logprob: -4.758615016937256
    3. '(eval' → logprob: -15.383614540100098
    4. '   ' → logprob: -17.133615493774414
    5. ' ' → logprob: -18.133615493774414
    6. 'evaluate' → logprob: -18.508615493774414
    7. '           ' → logprob: -18.758615493774414
    8. '_eval' → logprob: -18.883615493774414
    9. '.eval' → logprob: -18.883615493774414
    10. 'evalu' → logprob: -18.883615493774414

Token 458: '_expr' (ID: 53654)
  Prédit: '_expr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_expr' → logprob: -6.704273118884885e-07
    2. 'expr' → logprob: -14.625000953674316
    3. '_eval' → logprob: -16.25
    4. '_val' → logprob: -18.375
    5. '_rhs' → logprob: -18.875
    6. '_exp' → logprob: -19.625
    7. '(expr' → logprob: -19.875
    8. '_EXPR' → logprob: -20.0
    9. 'Expr' → logprob: -20.125
    10. '_obj' → logprob: -20.5

Token 459: '(rhs' (ID: 137942)
  Prédit: '(rhs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(rhs' → logprob: -1.8670179997570813e-05
    2. '(' → logprob: -11.000019073486328
    3. 'rhs' → logprob: -13.750019073486328
    4. '(lhs' → logprob: -15.000019073486328
    5. ' (' → logprob: -15.125019073486328
    6. '(rs' → logprob: -16.000019073486328
    7. '(
' → logprob: -17.500019073486328
    8. '(rv' → logprob: -17.500019073486328
    9. '(right' → logprob: -17.750019073486328
    10. '(expr' → logprob: -17.875019073486328

Token 460: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.01954801008105278
    2. '<|end|>' → logprob: -4.019547939300537
    3. '           ' → logprob: -7.394547939300537
    4. ')
' → logprob: -7.769547939300537
    5. '<|end|>' → logprob: -8.644548416137695
    6. '       ' → logprob: -9.519548416137695
    7. '               ' → logprob: -9.769548416137695
    8. '[' → logprob: -11.519548416137695
    9. '
' → logprob: -12.269548416137695
    10. ');' → logprob: -12.269548416137695

Token 461: '               ' (ID: 506)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0008354776655323803
    2. '               ' → logprob: -7.125835418701172
    3. 'if' → logprob: -11.250835418701172
    4. '       ' → logprob: -11.375835418701172
    5. ' if' → logprob: -13.250835418701172
    6. '                   ' → logprob: -13.375835418701172
    7. '<|end|>' → logprob: -13.625835418701172
    8. '   ' → logprob: -14.000835418701172
    9. '	       ' → logprob: -15.000835418701172
    10. '          ' → logprob: -15.375835418701172

Token 462: ' if' (ID: 538)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.28395235538482666
    2. 'if' (adapté à ' if') → logprob: -1.5339523553848267
    3. ' if' → logprob: -4.033952236175537
    4. '               ' → logprob: -4.283952236175537
    5. '       ' → logprob: -11.408952713012695
    6. '   ' → logprob: -12.158952713012695
    7. '                   ' → logprob: -12.658952713012695
    8. ' ' → logprob: -13.783952713012695
    9. '          ' → logprob: -14.283952713012695
    10. '            ' → logprob: -14.408952713012695

Token 463: ' err' (ID: 2962)
  Prédit: 'err'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'err' → logprob: -0.5763534307479858
    2. ' err' → logprob: -0.8263534307479858
    3. 'val' → logprob: -7.951353549957275
    4. ' val' → logprob: -10.451353073120117
    5. '           ' → logprob: -10.826353073120117
    6. ' ' → logprob: -12.576353073120117
    7. '   ' → logprob: -12.576353073120117
    8. '(err' → logprob: -13.826353073120117
    9. '    ' → logprob: -13.951353073120117
    10. '       ' → logprob: -14.201353073120117

Token 464: ' is' (ID: 382)
  Prédit: ' is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.004263007547706366
    2. 'is' → logprob: -5.504262924194336
    3. '<|end|>' → logprob: -9.754262924194336
    4. ':' → logprob: -10.004262924194336
    5. ' not' → logprob: -10.504262924194336
    6. ' ' → logprob: -11.254262924194336
    7. ')' → logprob: -11.254262924194336
    8. 'not' → logprob: -11.629262924194336
    9. '   ' → logprob: -12.379262924194336
    10. '<|end|>' → logprob: -12.629262924194336

Token 465: ' not' (ID: 625)
  Prédit: 'not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'not' → logprob: -0.07003624737262726
    2. ' not' → logprob: -2.6950361728668213
    3. '   ' → logprob: -10.695035934448242
    4. 'line' → logprob: -10.695035934448242
    5. ' ' → logprob: -11.320035934448242
    6. 'None' → logprob: -11.945035934448242
    7. '               ' → logprob: -12.320035934448242
    8. 'Not' → logprob: -12.320035934448242
    9. '           ' → logprob: -12.320035934448242
    10. 'n' → logprob: -12.695035934448242

Token 466: ' None' (ID: 4662)
  Prédit: 'not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'not' → logprob: -0.030813712626695633
    2. ' not' → logprob: -3.530813694000244
    3. 'None' → logprob: -6.905813694000244
    4. 'line' → logprob: -10.155814170837402
    5. 'Not' → logprob: -11.405814170837402
    6. ' None' → logprob: -12.655814170837402
    7. ' line' → logprob: -13.280814170837402
    8. ' ' → logprob: -13.405814170837402
    9. '   ' → logprob: -13.405814170837402
    10. '...' → logprob: -14.780814170837402

Token 467: ' or' (ID: 503)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.8192803263664246
    2. ':
' → logprob: -0.9442803263664246
    3. '               ' → logprob: -2.0692803859710693
    4. '                   ' → logprob: -3.5692803859710693
    5. '           ' → logprob: -4.44428014755249
    6. ':return' → logprob: -6.19428014755249
    7. ' or' → logprob: -7.19428014755249
    8. '                       ' → logprob: -8.069280624389648
    9. '   ' → logprob: -8.194280624389648
    10. ' and' → logprob: -8.569280624389648

Token 468: ' val' (ID: 1459)
  Prédit: 'val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'val' → logprob: -0.00020699729793705046
    2. ' val' → logprob: -8.50020694732666
    3. '           ' → logprob: -13.00020694732666
    4. 'idx' → logprob: -14.00020694732666
    5. '   ' → logprob: -15.25020694732666
    6. '       ' → logprob: -17.125207901000977
    7. '	val' → logprob: -17.375207901000977
    8. '          ' → logprob: -17.625207901000977
    9. '    ' → logprob: -17.750207901000977
    10. '  ' → logprob: -17.750207901000977

Token 469: ' is' (ID: 382)
  Prédit: ' is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.0052362410351634026
    2. 'is' → logprob: -5.2552361488342285
    3. ' None' → logprob: -13.380236625671387
    4. '==' → logprob: -14.505236625671387
    5. 'None' → logprob: -15.255236625671387
    6. ' ==' → logprob: -16.13023567199707
    7. '=None' → logprob: -18.25523567199707
    8. ' ' → logprob: -18.38023567199707
    9. '	is' → logprob: -18.38023567199707
    10. '   ' → logprob: -19.00523567199707

Token 470: ' None' (ID: 4662)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -0.00033546582562848926
    2. ' None' → logprob: -8.000335693359375
    3. '   ' → logprob: -19.000335693359375
    4. '               ' → logprob: -19.750335693359375
    5. '                   ' → logprob: -20.375335693359375
    6. '(None' → logprob: -20.750335693359375
    7. '=None' → logprob: -20.875335693359375
    8. '_None' → logprob: -20.875335693359375
    9. 'none' → logprob: -21.000335693359375
    10. '           ' → logprob: -21.000335693359375

Token 471: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -1.1394321918487549
    2. '               ' → logprob: -1.1394321918487549
    3. ':
' → logprob: -1.2644321918487549
    4. '                   ' → logprob: -2.639432191848755
    5. ':return' → logprob: -5.639431953430176
    6. '                       ' → logprob: -6.764431953430176
    7. '           ' → logprob: -6.889431953430176
    8. '):
' → logprob: -9.514431953430176
    9. ' or' → logprob: -9.639431953430176
    10. '   ' → logprob: -9.889431953430176

Token 472: '                   ' (ID: 699)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.17916786670684814
    2. '                   ' → logprob: -2.1791677474975586
    3. ' return' → logprob: -3.0541677474975586
    4. '           ' → logprob: -6.179167747497559
    5. 'return' → logprob: -6.929167747497559
    6. '   ' → logprob: -7.554167747497559
    7. '                ' → logprob: -10.304167747497559
    8. '                       ' → logprob: -10.304167747497559
    9. '       ' → logprob: -10.429167747497559
    10. ' ' → logprob: -11.304167747497559

Token 473: ' return' (ID: 622)
  Prédit: ' return'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.2056097686290741
    2. 'return' (adapté à ' return') → logprob: -1.7056097984313965
    3. '               ' → logprob: -5.9556097984313965
    4. '                       ' → logprob: -6.7056097984313965
    5. '                   ' → logprob: -8.330609321594238
    6. '   ' → logprob: -9.580609321594238
    7. '	return' → logprob: -10.830609321594238
    8. '           ' → logprob: -10.830609321594238
    9. '       ' → logprob: -11.080609321594238
    10. ' ' → logprob: -12.205609321594238

Token 474: ' line' (ID: 2543)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'line' → logprob: -0.00033546582562848926
    2. ' line' → logprob: -8.000335693359375
    3. '(line' → logprob: -17.875335693359375
    4. '[line' → logprob: -18.125335693359375
    5. '	line' → logprob: -19.875335693359375
    6. '   ' → logprob: -20.500335693359375
    7. '=line' → logprob: -20.750335693359375
    8. '#line' → logprob: -21.500335693359375
    9. '           ' → logprob: -22.500335693359375
    10. ',line' → logprob: -23.000335693359375

Token 475: '_no' (ID: 13575)
  Prédit: '_no'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_no' → logprob: -0.00021176543668843806
    2. 'no' → logprob: -8.500211715698242
    3. 'No' → logprob: -11.750211715698242
    4. '_NO' → logprob: -16.125211715698242
    5. '	no' → logprob: -17.000211715698242
    6. 'n' → logprob: -17.375211715698242
    7. ' no' → logprob: -17.625211715698242
    8. '`' → logprob: -17.750211715698242
    9. '_n' → logprob: -17.875211715698242
    10. '_No' → logprob: -18.000211715698242

Token 476: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -7.123899558791891e-05
    2. 'assigned' → logprob: -10.00007152557373
    3. '               ' → logprob: -10.75007152557373
    4. '       ' → logprob: -12.87507152557373
    5. '            
' → logprob: -14.75007152557373
    6. ' assigned' → logprob: -15.12507152557373
    7. '<|end|>' → logprob: -15.25007152557373
    8. '                   ' → logprob: -15.25007152557373
    9. ',' → logprob: -15.87507152557373
    10. '          ' → logprob: -16.000070571899414

Token 477: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00015431294741574675
    2. '       ' → logprob: -9.750154495239258
    3. 'assigned' → logprob: -10.375154495239258
    4. '               ' → logprob: -10.750154495239258
    5. '            
' → logprob: -10.750154495239258
    6. ' assigned' → logprob: -11.875154495239258
    7. '
' → logprob: -12.500154495239258
    8. '<|end|>' → logprob: -13.000154495239258
    9. '   ' → logprob: -13.250154495239258
    10. '		' → logprob: -13.625154495239258

Token 478: ' assigned' (ID: 21482)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.008466115221381187
    2. 'assigned' (adapté à ' assigned') → logprob: -4.8834662437438965
    3. ' assigned' → logprob: -7.1334662437438965
    4. '       ' → logprob: -10.758465766906738
    5. '               ' → logprob: -11.508465766906738
    6. '   ' → logprob: -11.508465766906738
    7. '		' → logprob: -11.508465766906738
    8. '	       ' → logprob: -12.008465766906738
    9. '            
' → logprob: -14.258465766906738
    10. '                   ' → logprob: -14.258465766906738

Token 479: '[(' (ID: 20542)
  Prédit: '[('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[(' → logprob: -3.531315314830863e-06
    2. '[' → logprob: -12.625003814697266
    3. '   ' → logprob: -17.125003814697266
    4. '[l' → logprob: -17.250003814697266
    5. '[((' → logprob: -18.250003814697266
    6. '[
' → logprob: -18.500003814697266
    7. ' [(' → logprob: -18.875003814697266
    8. '[...]' → logprob: -19.625003814697266
    9. '```' → logprob: -19.875003814697266
    10. '       ' → logprob: -20.625003814697266

Token 480: 'lhs' (ID: 80003)
  Prédit: 'lhs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lhs' → logprob: -8.304016228066757e-05
    2. ' lhs' → logprob: -9.500082969665527
    3. '(lhs' → logprob: -11.750082969665527
    4. 'lname' → logprob: -15.375082969665527
    5. '   ' → logprob: -17.000083923339844
    6. ' ' → logprob: -17.500083923339844
    7. 'lh' → logprob: -17.625083923339844
    8. 'rhs' → logprob: -18.375083923339844
    9. ')' → logprob: -19.250083923339844
    10. '  ' → logprob: -19.875083923339844

Token 481: '_name' (ID: 2483)
  Prédit: '_name'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_name' → logprob: -9.088346359931165e-07
    2. '_NAME' → logprob: -14.375000953674316
    3. ',' → logprob: -16.0
    4. 'name' → logprob: -16.0
    5. 'Name' → logprob: -16.75
    6. '```' → logprob: -18.125
    7. '[_' → logprob: -18.375
    8. '_Name' → logprob: -18.375
    9. '_,' → logprob: -18.375
    10. '_' → logprob: -18.5

Token 482: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00011021859245374799
    2. ' ,' → logprob: -9.375110626220703
    3. '[' → logprob: -11.375110626220703
    4. ',[' → logprob: -12.375110626220703
    5. ',
' → logprob: -12.500110626220703
    6. ',index' → logprob: -13.875110626220703
    7. '[idx' → logprob: -14.000110626220703
    8. '‌,' → logprob: -14.750110626220703
    9. '[
' → logprob: -15.250110626220703
    10. '',' → logprob: -15.250110626220703

Token 483: ' idx' (ID: 14016)
  Prédit: 'idx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'idx' → logprob: -0.10020667314529419
    2. ' idx' → logprob: -2.3502066135406494
    3. '	idx' → logprob: -17.22520637512207
    4. '(idx' → logprob: -17.60020637512207
    5. 'index' → logprob: -18.47520637512207
    6. '_idx' → logprob: -18.97520637512207
    7. '[idx' → logprob: -19.22520637512207
    8. ' ' → logprob: -19.22520637512207
    9. '   ' → logprob: -20.10020637512207
    10. 'Idx' → logprob: -20.35020637512207

Token 484: ')]' (ID: 15710)
  Prédit: ')]'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.008623555302619934
    2. ']' → logprob: -4.7586236000061035
    3. ')' → logprob: -12.133623123168945
    4. ']=' → logprob: -12.883623123168945
    5. ' ]' → logprob: -14.883623123168945
    6. ']]' → logprob: -15.758623123168945
    7. '])' → logprob: -15.883623123168945
    8. '=' → logprob: -16.008623123168945
    9. '   ' → logprob: -16.758623123168945
    10. ' )' → logprob: -17.133623123168945

Token 485: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6931473612785339
    2. ' =' → logprob: -0.6931473612785339
    3. ' ' → logprob: -16.693147659301758
    4. ')=' → logprob: -17.193147659301758
    5. ']=' → logprob: -17.943147659301758
    6. '.=' → logprob: -18.443147659301758
    7. ')' → logprob: -18.443147659301758
    8. '＝' → logprob: -18.568147659301758
    9. '   ' → logprob: -19.068147659301758
    10. ',' → logprob: -19.068147659301758

Token 486: ' val' (ID: 1459)
  Prédit: 'val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'val' → logprob: -0.006715370807796717
    2. ' val' → logprob: -5.006715297698975
    3. '	val' → logprob: -21.506715774536133
    4. '(val' → logprob: -24.381715774536133
    5. '_val' → logprob: -24.506715774536133
    6. '[val' → logprob: -24.881715774536133
    7. ',val' → logprob: -25.381715774536133
    8. 'Val' → logprob: -25.381715774536133
    9. 'value' → logprob: -26.006715774536133
    10. 'int' → logprob: -26.131715774536133

Token 487: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 488: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 489: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.4734562039375305
    2. '   ' → logprob: -1.0984561443328857
    3. '<|end|>' → logprob: -3.8484561443328857
    4. ' return' → logprob: -4.348456382751465
    5. '
' → logprob: -5.848456382751465
    6. '```' → logprob: -6.098456382751465
    7. 'None' → logprob: -6.598456382751465
    8. '	return' → logprob: -6.723456382751465
    9. ' ' → logprob: -7.848456382751465
    10. '#' → logprob: -8.223456382751465

Token 490: ' ' (ID: 220)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -0.6562323570251465
    2. '0' → logprob: -1.1562323570251465
    3. ' None' → logprob: -2.2812323570251465
    4. '"' → logprob: -3.1562323570251465
    5. ' ' → logprob: -4.4062323570251465
    6. ''' → logprob: -5.5312323570251465
    7. 'True' → logprob: -6.0312323570251465
    8. ' "' → logprob: -6.2812323570251465
    9. ' '' → logprob: -7.9062323570251465
    10. ' True' → logprob: -8.406232833862305

Token 491: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.2766530513763428
    2. '"' → logprob: -1.6516530513763428
    3. 'None' → logprob: -3.2766530513763428
    4. ''' → logprob: -4.776653289794922
    5. 'True' → logprob: -6.526653289794922
    6. ''ok' → logprob: -6.651653289794922
    7. 'assigned' → logprob: -7.901653289794922
    8. '{}' → logprob: -8.776653289794922
    9. '[]' → logprob: -9.276653289794922
    10. ' None' → logprob: -9.651653289794922

Token 492: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 493: 'def' (ID: 1314)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 494: ' main' (ID: 2758)
  Prédit: ' main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.00012130453251302242
    2. 'main' → logprob: -9.375121116638184
    3. ' solve' → logprob: -10.625121116638184
    4. '_main' → logprob: -12.250121116638184
    5. ' test' → logprob: -12.625121116638184
    6. ' solution' → logprob: -13.625121116638184
    7. ' sys' → logprob: -13.875121116638184
    8. ' run' → logprob: -14.125121116638184
    9. ' process' → logprob: -15.000121116638184
    10. ' __' → logprob: -15.625121116638184

Token 495: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.00015431294741574675
    2. '():
' → logprob: -9.250154495239258
    3. ' ():' → logprob: -10.875154495239258
    4. '()' → logprob: -11.375154495239258
    5. '(' → logprob: -11.500154495239258
    6. '()>' → logprob: -11.750154495239258
    7. '_' → logprob: -12.625154495239258
    8. '():
' → logprob: -13.000154495239258
    9. '()">' → logprob: -13.625154495239258
    10. '():

' → logprob: -14.375154495239258

Token 496: '   ' (ID: 271)
  Prédit: ' lines'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' lines' → logprob: -0.43250319361686707
    2. '   ' → logprob: -1.8075032234191895
    3. ' import' → logprob: -2.0575032234191895
    4. 'import' → logprob: -2.9325032234191895
    5. '	lines' → logprob: -6.3075032234191895
    6. '```' → logprob: -6.4325032234191895
    7. '(lines' → logprob: -6.8075032234191895
    8. ' input' → logprob: -7.8075032234191895
    9. 'lines' → logprob: -7.9325032234191895
    10. '	import' → logprob: -8.432502746582031

Token 497: ' lines' (ID: 8698)
  Prédit: ' import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' import' → logprob: -0.03878440707921982
    2. ' lines' → logprob: -3.6637845039367676
    3. 'import' → logprob: -4.413784503936768
    4. ' input' → logprob: -8.53878402709961
    5. ' n' → logprob: -10.66378402709961
    6. '   ' → logprob: -10.78878402709961
    7. ' for' → logprob: -11.03878402709961
    8. ' inputs' → logprob: -11.66378402709961
    9. '	import' → logprob: -11.78878402709961
    10. ' imports' → logprob: -12.16378402709961

Token 498: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5234968066215515
    2. '=' → logprob: -0.8984968066215515
    3. '   ' → logprob: -8.023496627807617
    4. '=sys' → logprob: -11.398496627807617
    5. '()' → logprob: -11.773496627807617
    6. '=[]' → logprob: -11.773496627807617
    7. '(' → logprob: -12.773496627807617
    8. '_' → logprob: -13.023496627807617
    9. 'import' → logprob: -13.023496627807617
    10. '=input' → logprob: -13.523496627807617

Token 499: ' []
' (ID: 8911)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sys' → logprob: -0.012559917755424976
    2. '[]' → logprob: -5.26255989074707
    3. ' sys' → logprob: -5.63755989074707
    4. '[' → logprob: -5.76255989074707
    5. '[]
' → logprob: -7.51255989074707
    6. ' [' → logprob: -10.76255989074707
    7. ' []' → logprob: -11.51255989074707
    8. '(sys' → logprob: -12.01255989074707
    9. '[s' → logprob: -13.01255989074707
    10. '	sys' → logprob: -13.26255989074707

Token 500: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.04372379928827286
    2. ' while' → logprob: -3.4187238216400146
    3. 'while' → logprob: -5.4187235832214355
    4. ' for' → logprob: -5.9187235832214355
    5. '
' → logprob: -6.5437235832214355
    6. '    
' → logprob: -7.1687235832214355
    7. 'import' → logprob: -8.293724060058594
    8. '	while' → logprob: -8.543724060058594
    9. 'for' → logprob: -9.418724060058594
    10. '<|end|>' → logprob: -9.793724060058594

Token 501: ' for' (ID: 395)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' → logprob: -1.1140424013137817
    2. 'for' (adapté à ' for') → logprob: -1.3640424013137817
    3. ' while' → logprob: -1.3640424013137817
    4. ' for' → logprob: -1.8640424013137817
    5. 'import' → logprob: -5.364042282104492
    6. '   ' → logprob: -8.114042282104492
    7. 'try' → logprob: -8.239042282104492
    8. ' import' → logprob: -8.864042282104492
    9. '
' → logprob: -10.114042282104492
    10. ' try' → logprob: -10.489042282104492

Token 502: ' line' (ID: 2543)
  Prédit: ' line'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' line' → logprob: -0.019910110160708427
    2. 'line' → logprob: -4.2699103355407715
    3. '_' → logprob: -5.5199103355407715
    4. ' _' → logprob: -6.3949103355407715
    5. ' l' → logprob: -10.269909858703613
    6. '_line' → logprob: -11.269909858703613
    7. 'l' → logprob: -12.769909858703613
    8. '	line' → logprob: -12.894909858703613
    9. ' ' → logprob: -14.894909858703613
    10. ' sys' → logprob: -15.644909858703613

Token 503: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0031818747520446777
    2. 'in' → logprob: -5.7531819343566895
    3. '	in' → logprob: -14.128181457519531
    4. 'import' → logprob: -14.253181457519531
    5. '_in' → logprob: -14.628181457519531
    6. '_' → logprob: -14.878181457519531
    7. 's' → logprob: -15.003181457519531
    8. 'In' → logprob: -15.253181457519531
    9. ' ' → logprob: -15.378181457519531
    10. '=' → logprob: -15.753181457519531

Token 504: ' sys' (ID: 12228)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sys' → logprob: -0.02975083328783512
    2. ' sys' → logprob: -3.5297508239746094
    3. '=sys' → logprob: -15.77975082397461
    4. '	sys' → logprob: -16.52975082397461
    5. '(sys' → logprob: -16.77975082397461
    6. 'stdin' → logprob: -18.27975082397461
    7. 'input' → logprob: -19.02975082397461
    8. 'import' → logprob: -20.77975082397461
    9. 'iter' → logprob: -20.77975082397461
    10. '```' → logprob: -20.90475082397461

Token 505: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -0.0005680450703948736
    2. 'stdin' → logprob: -7.50056791305542
    3. '(stdin' → logprob: -11.875568389892578
    4. '.readline' → logprob: -12.125568389892578
    5. ' stdin' → logprob: -13.500568389892578
    6. '.stdout' → logprob: -14.125568389892578
    7. '.argv' → logprob: -15.000568389892578
    8. '.' → logprob: -16.125568389892578
    9. '```' → logprob: -17.875568389892578
    10. '.readlines' → logprob: -18.250568389892578

Token 506: ':
' (ID: 734)
  Prédit: '.readline'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -0.18281793594360352
    2. ':' → logprob: -2.9328179359436035
    3. ' in' → logprob: -3.3078179359436035
    4. '.readlines' → logprob: -3.5578179359436035
    5. '   ' → logprob: -3.8078179359436035
    6. '       ' → logprob: -4.1828179359436035
    7. ':
' → logprob: -5.4328179359436035
    8. '.rstrip' → logprob: -5.8078179359436035
    9. '.' → logprob: -7.0578179359436035
    10. '.strip' → logprob: -7.3078179359436035

Token 507: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0008891870966181159
    2. ' lines' → logprob: -7.250889301300049
    3. '(lines' → logprob: -9.25088882446289
    4. '<|end|>' → logprob: -10.12588882446289
    5. '	lines' → logprob: -10.75088882446289
    6. '   ' → logprob: -11.50088882446289
    7. '#line' → logprob: -12.87588882446289
    8. '_lines' → logprob: -13.12588882446289
    9. '```' → logprob: -13.37588882446289
    10. ' line' → logprob: -13.87588882446289

Token 508: ' line' (ID: 2543)
  Prédit: ' lines'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' lines' → logprob: -0.03142683953046799
    2. '       ' → logprob: -3.5314269065856934
    3. ' if' → logprob: -7.156426906585693
    4. '	lines' → logprob: -8.031426429748535
    5. '   ' → logprob: -8.281426429748535
    6. ' line' → logprob: -8.781426429748535
    7. 'lines' → logprob: -9.031426429748535
    8. '(lines' → logprob: -10.281426429748535
    9. '_lines' → logprob: -12.906426429748535
    10. 'if' → logprob: -13.031426429748535

Token 509: '=line' (ID: 192488)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.20443889498710632
    2. '=line' → logprob: -2.0794389247894287
    3. '.rstrip' → logprob: -3.4544389247894287
    4. ' =' → logprob: -4.32943868637085
    5. 'rstrip' → logprob: -4.32943868637085
    6. '.strip' → logprob: -6.70443868637085
    7. 'strip' → logprob: -8.579439163208008
    8. '+=' → logprob: -8.704439163208008
    9. '.=' → logprob: -9.329439163208008
    10. '_strip' → logprob: -9.454439163208008

Token 510: '.rstrip' (ID: 161629)
  Prédit: '.rstrip'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.rstrip' → logprob: -0.10773900151252747
    2. '.strip' → logprob: -2.357738971710205
    3. 'rstrip' → logprob: -4.982738971710205
    4. 'strip' → logprob: -7.357738971710205
    5. '_strip' → logprob: -12.732739448547363
    6. '[:-' → logprob: -12.732739448547363
    7. '.' → logprob: -13.232739448547363
    8. ' strip' → logprob: -13.607739448547363
    9. '.readline' → logprob: -14.482739448547363
    10. '(strip' → logprob: -14.607739448547363

Token 511: '('\' (ID: 24345)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.17200681567192078
    2. '()
' → logprob: -2.297006845474243
    3. '('\' → logprob: -2.922006845474243
    4. '()\' → logprob: -5.672006607055664
    5. '()

' → logprob: -9.797006607055664
    6. ''\' → logprob: -9.922006607055664
    7. '()
' → logprob: -10.422006607055664
    8. '();' → logprob: -11.172006607055664
    9. '())' → logprob: -11.422006607055664
    10. '("\' → logprob: -11.797006607055664

Token 512: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.038050100207328796
    2. '\n' → logprob: -3.2880501747131348
    3. ''\' → logprob: -12.788049697875977
    4. ')\' → logprob: -13.663049697875977
    5. 'newline' → logprob: -13.913049697875977
    6. ')' → logprob: -14.038049697875977
    7. '\' → logprob: -14.163049697875977
    8. '('\' → logprob: -14.163049697875977
    9. '')' → logprob: -14.788049697875977
    10. ' \' → logprob: -15.163049697875977

Token 513: '')
' (ID: 2515)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.10211341083049774
    2. '')' → logprob: -2.3521134853363037
    3. ')
' → logprob: -6.602113246917725
    4. '')
' → logprob: -7.602113246917725
    5. '")' → logprob: -10.477113723754883
    6. ' )' → logprob: -12.102113723754883
    7. '   ' → logprob: -12.602113723754883
    8. ')\' → logprob: -12.727113723754883
    9. ''' → logprob: -13.977113723754883
    10. ')')
' → logprob: -13.977113723754883

Token 514: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0026088329032063484
    2. '   ' → logprob: -6.627608776092529
    3. ' lines' → logprob: -6.877608776092529
    4. ' if' → logprob: -8.752609252929688
    5. '(lines' → logprob: -9.877609252929688
    6. 'if' → logprob: -11.002609252929688
    7. '	lines' → logprob: -11.377609252929688
    8. '```' → logprob: -11.627609252929688
    9. 'lines' → logprob: -13.252609252929688
    10. '           ' → logprob: -13.502609252929688

Token 515: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -1.0560957193374634
    2. ' lines' → logprob: -1.0560957193374634
    3. 'if' (adapté à ' if') → logprob: -1.3060957193374634
    4. 'lines' → logprob: -3.806095600128174
    5. '   ' → logprob: -4.681095600128174
    6. '       ' → logprob: -6.806095600128174
    7. '```' → logprob: -7.556095600128174
    8. '	lines' → logprob: -8.556096076965332
    9. '(lines' → logprob: -8.806096076965332
    10. '``' → logprob: -11.556096076965332

Token 516: ' line' (ID: 2543)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'line' → logprob: -0.10523053258657455
    2. ' line' → logprob: -2.8552305698394775
    3. 'not' → logprob: -3.8552305698394775
    4. ' not' → logprob: -3.8552305698394775
    5. ' ' → logprob: -13.730230331420898
    6. '#line' → logprob: -13.855230331420898
    7. '	line' → logprob: -14.730230331420898
    8. '(line' → logprob: -15.605230331420898
    9. '   ' → logprob: -15.730230331420898
    10. 'len' → logprob: -16.1052303314209

Token 517: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.0053801992908120155
    2. ' ==' → logprob: -5.255380153656006
    3. '()==' → logprob: -9.255380630493164
    4. '=' → logprob: -11.005380630493164
    5. '==
' → logprob: -11.255380630493164
    6. '=='' → logprob: -11.630380630493164
    7. '===' → logprob: -12.630380630493164
    8. ')==' → logprob: -12.755380630493164
    9. '.strip' → logprob: -12.755380630493164
    10. ']==' → logprob: -13.380380630493164

Token 518: ' '.' (ID: 12662)
  Prédit: ''''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '''' → logprob: -0.11437948048114777
    2. ''' → logprob: -2.364379405975342
    3. '""' → logprob: -5.364379405975342
    4. '"' → logprob: -5.489379405975342
    5. '"":' → logprob: -5.489379405975342
    6. ''#' → logprob: -7.114379405975342
    7. '':' → logprob: -9.8643798828125
    8. ' '':
' → logprob: -9.8643798828125
    9. ''ex' → logprob: -9.9893798828125
    10. ''t' → logprob: -10.2393798828125

Token 519: '':
' (ID: 7669)
  Prédit: '':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '':' → logprob: -0.21080102026462555
    2. '':
' → logprob: -2.085801124572754
    3. '.' → logprob: -3.960801124572754
    4. ''):
' → logprob: -4.460801124572754
    5. 'end' → logprob: -4.835801124572754
    6. ''' → logprob: -4.960801124572754
    7. ''.' → logprob: -5.085801124572754
    8. ''):' → logprob: -5.460801124572754
    9. 'END' → logprob: -5.835801124572754
    10. 'exit' → logprob: -6.960801124572754

Token 520: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.34881916642189026
    2. '       ' → logprob: -1.2238191366195679
    3. '   ' → logprob: -8.2238187789917
    4. ' break' → logprob: -10.0988187789917
    5. 'break' → logprob: -11.2238187789917
    6. '<|end|>' → logprob: -11.4738187789917
    7. '	       ' → logprob: -12.0988187789917
    8. '	break' → logprob: -12.2238187789917
    9. '    ' → logprob: -12.2238187789917
    10. '          ' → logprob: -12.3488187789917

Token 521: ' if' (ID: 538)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.09407393634319305
    2. 'break' → logprob: -2.594074010848999
    3. ' break' → logprob: -4.21907377243042
    4. '	break' → logprob: -8.094074249267578
    5. '           ' → logprob: -10.219074249267578
    6. '   ' → logprob: -11.469074249267578
    7. '_break' → logprob: -12.969074249267578
    8. 'return' → logprob: -14.344074249267578
    9. '```' → logprob: -14.719074249267578
    10. '	' → logprob: -14.719074249267578

Token 522: ' lines' (ID: 8698)
  Prédit: 'not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'not' → logprob: -0.5387921333312988
    2. ' not' → logprob: -1.0387921333312988
    3. 'lines' → logprob: -2.788792133331299
    4. ' lines' → logprob: -7.163792133331299
    5. 'len' → logprob: -7.913792133331299
    6. 'solve' → logprob: -10.66379165649414
    7. ' len' → logprob: -12.28879165649414
    8. ' ' → logprob: -14.53879165649414
    9. 'line' → logprob: -15.03879165649414
    10. '	not' → logprob: -15.03879165649414

Token 523: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.9496236443519592
    2. '==' → logprob: -1.1996235847473145
    3. ':' → logprob: -1.3246235847473145
    4. '<|end|>' → logprob: -3.3246235847473145
    5. ' ==' → logprob: -5.4496235847473145
    6. '<|end|>' → logprob: -6.0746235847473145
    7. '):
' → logprob: -7.3246235847473145
    8. ')' → logprob: -7.8246235847473145
    9. ')==' → logprob: -7.9496235847473145
    10. '==
' → logprob: -8.699624061584473

Token 524: '               ' (ID: 506)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.49454188346862793
    2. '       ' → logprob: -0.9945418834686279
    3. '<|end|>' → logprob: -4.494542121887207
    4. '        
' → logprob: -5.994542121887207
    5. '<|end|>' → logprob: -6.369542121887207
    6. '
' → logprob: -6.994542121887207
    7. '	       ' → logprob: -7.619542121887207
    8. '            
' → logprob: -7.619542121887207
    9. '               ' → logprob: -7.744542121887207
    10. '```' → logprob: -7.869542121887207

Token 525: ' print' (ID: 2123)
  Prédit: ' result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' result' → logprob: -0.1733526587486267
    2. 'result' → logprob: -2.1733527183532715
    3. ' res' → logprob: -3.7983527183532715
    4. '       ' → logprob: -4.4233527183532715
    5. 'res' → logprob: -5.4233527183532715
    6. ' error' → logprob: -7.1733527183532715
    7. ' ret' → logprob: -7.6733527183532715
    8. ' line' → logprob: -7.7983527183532715
    9. ' lines' → logprob: -7.7983527183532715
    10. '```' → logprob: -7.9233527183532715

Token 526: '(s' (ID: 1858)
  Prédit: 'solve'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'solve' → logprob: -0.4750499129295349
    2. '(s' → logprob: -0.9750499129295349
    3. '(' → logprob: -7.72504997253418
    4. '0' → logprob: -7.72504997253418
    5. ' solve' → logprob: -9.47504997253418
    6. 's' → logprob: -12.60004997253418
    7. '```' → logprob: -12.60004997253418
    8. '(
' → logprob: -13.10004997253418
    9. '.solve' → logprob: -13.85004997253418
    10. ' (' → logprob: -14.10004997253418

Token 527: 'olve' (ID: 11460)
  Prédit: 'olve'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'olve' → logprob: -1.9385402993066236e-05
    2. 'solve' → logprob: -10.875019073486328
    3. '0' → logprob: -15.250019073486328
    4. 'OLVE' → logprob: -16.500019073486328
    5. 'ol' → logprob: -17.000019073486328
    6. 'ove' → logprob: -17.375019073486328
    7. 'olver' → logprob: -17.500019073486328
    8. '(' → logprob: -18.750019073486328
    9. 'olv' → logprob: -18.750019073486328
    10. ' solve' → logprob: -18.875019073486328

Token 528: '_program' (ID: 58929)
  Prédit: '_program'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_program' → logprob: -2.816093228830141e-06
    2. '_' → logprob: -13.50000286102295
    3. '_problem' → logprob: -13.75000286102295
    4. 'program' → logprob: -15.25000286102295
    5. '_PROGRAM' → logprob: -17.625001907348633
    6. ' _' → logprob: -17.750001907348633
    7. '_pro' → logprob: -17.750001907348633
    8. '```' → logprob: -17.875001907348633
    9. '_lines' → logprob: -19.250001907348633
    10. '
' → logprob: -19.250001907348633

Token 529: '(lines' (ID: 73839)
  Prédit: '(lines'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(lines' → logprob: -1.1472419600977446e-06
    2. '(' → logprob: -14.500000953674316
    3. ' (' → logprob: -14.875000953674316
    4. ')' → logprob: -16.500001907348633
    5. ')(' → logprob: -16.750001907348633
    6. '   ' → logprob: -17.875001907348633
    7. '(line' → logprob: -18.125001907348633
    8. '```' → logprob: -18.250001907348633
    9. '(rows' → logprob: -18.625001907348633
    10. '(strings' → logprob: -18.750001907348633

Token 530: '))
' (ID: 2210)
  Prédit: ')
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -1.0126253366470337
    2. ')' → logprob: -1.1376253366470337
    3. '(lines' → logprob: -1.3876253366470337
    4. '))
' → logprob: -3.387625217437744
    5. '))' → logprob: -4.262625217437744
    6. '())
' → logprob: -4.512625217437744
    7. '())' → logprob: -5.387625217437744
    8. '       ' → logprob: -6.762625217437744
    9. '               ' → logprob: -7.262625217437744
    10. '           ' → logprob: -7.637625217437744

Token 531: '               ' (ID: 506)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.47901052236557007
    2. '               ' → logprob: -0.9790105223655701
    3. '       ' → logprob: -5.479010581970215
    4. '                   ' → logprob: -8.229010581970215
    5. '<|end|>' → logprob: -8.479010581970215
    6. '```' → logprob: -8.979010581970215
    7. '
' → logprob: -10.229010581970215
    8. 'continue' → logprob: -10.479010581970215
    9. '                       ' → logprob: -11.229010581970215
    10. '()' → logprob: -11.729010581970215

Token 532: ' lines' (ID: 8698)
  Prédit: 'lines'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lines' (adapté à ' lines') → logprob: -0.011729520745575428
    2. ' lines' → logprob: -4.511729717254639
    3. '	lines' → logprob: -7.886729717254639
    4. '(lines' → logprob: -8.26172924041748
    5. '           ' → logprob: -10.76172924041748
    6. '               ' → logprob: -11.63672924041748
    7. '.lines' → logprob: -12.13672924041748
    8. '
' → logprob: -12.26172924041748
    9. '       ' → logprob: -12.51172924041748
    10. '   ' → logprob: -14.13672924041748

Token 533: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.05052865296602249
    2. '.clear' → logprob: -3.0505287647247314
    3. ' =' → logprob: -6.300528526306152
    4. '=[]' → logprob: -9.425528526306152
    5. '.=' → logprob: -11.800528526306152
    6. '[:]' → logprob: -12.300528526306152
    7. '.append' → logprob: -12.925528526306152
    8. '   ' → logprob: -13.300528526306152
    9. '.Clear' → logprob: -13.675528526306152
    10. 'clear' → logprob: -13.925528526306152

Token 534: ' []
' (ID: 8911)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.0004342453321442008
    2. '[]
' → logprob: -7.750434398651123
    3. ' []' → logprob: -13.000433921813965
    4. '[]}' → logprob: -14.375433921813965
    5. '[])' → logprob: -15.000433921813965
    6. '[]

' → logprob: -15.000433921813965
    7. '[]>' → logprob: -16.37543487548828
    8. '[' → logprob: -18.00043487548828
    9. '[]"' → logprob: -18.12543487548828
    10. '=[]' → logprob: -18.50043487548828

Token 535: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.20165306329727173
    2. '       ' → logprob: -1.701653003692627
    3. '               ' → logprob: -9.076653480529785
    4. 'continue' → logprob: -9.201653480529785
    5. 'else' → logprob: -11.576653480529785
    6. '   ' → logprob: -12.076653480529785
    7. ' continue' → logprob: -12.201653480529785
    8. '```' → logprob: -12.951653480529785
    9. ' else' → logprob: -14.326653480529785
    10. '
' → logprob: -14.576653480529785

Token 536: ' else' (ID: 1203)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2132239192724228
    2. 'continue' → logprob: -2.213223934173584
    3. '           ' → logprob: -2.963223934173584
    4. 'else' (adapté à ' else') → logprob: -3.588223934173584
    5. ' continue' → logprob: -5.963223934173584
    6. ' else' → logprob: -7.713223934173584
    7. '   ' → logprob: -8.713223457336426
    8. 'elif' → logprob: -8.713223457336426
    9. '	continue' → logprob: -11.213223457336426
    10. '```' → logprob: -11.463223457336426

Token 537: ':
' (ID: 734)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.02985265664756298
    2. '           ' → logprob: -3.9048526287078857
    3. ':
' → logprob: -5.029852867126465
    4. ':' → logprob: -6.529852867126465
    5. 'break' → logprob: -7.154852867126465
    6. 'continue' → logprob: -8.529852867126465
    7. '   ' → logprob: -9.904852867126465
    8. '       ' → logprob: -9.904852867126465
    9. ' break' → logprob: -9.904852867126465
    10. '              ' → logprob: -10.154852867126465

Token 538: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.3207518756389618
    2. '           ' → logprob: -1.3207519054412842
    3. 'break' → logprob: -5.820751667022705
    4. 'continue' → logprob: -6.070751667022705
    5. ' break' → logprob: -6.695751667022705
    6. ' continue' → logprob: -7.820751667022705
    7. '       ' → logprob: -8.445752143859863
    8. '```' → logprob: -8.820752143859863
    9. 'return' → logprob: -9.320752143859863
    10. '   ' → logprob: -9.570752143859863

Token 539: ' break' (ID: 2338)
  Prédit: 'break'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'break' (adapté à ' break') → logprob: -0.0017245612107217312
    2. 'return' → logprob: -6.751724720001221
    3. '               ' → logprob: -7.751724720001221
    4. ' break' → logprob: -9.001724243164062
    5. '           ' → logprob: -14.126724243164062
    6. '	break' → logprob: -15.751724243164062
    7. '                   ' → logprob: -16.626724243164062
    8. ' return' → logprob: -16.876724243164062
    9. '
' → logprob: -17.251724243164062
    10. '```' → logprob: -17.626724243164062

Token 540: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.167798399925232
    2. '       ' → logprob: -1.167798399925232
    3. '<|end|>' → logprob: -1.292798399925232
    4. '
' → logprob: -2.2927985191345215
    5. '<|end|>' → logprob: -7.2927985191345215
    6. '\n' → logprob: -7.4177985191345215
    7. '```' → logprob: -7.9177985191345215
    8. '    
' → logprob: -8.667798042297363
    9. '        
' → logprob: -8.917798042297363
    10. '...' → logprob: -9.042798042297363

Token 541: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0990113839507103
    2. '       ' → logprob: -2.8490114212036133
    3. '<|end|>' → logprob: -3.3490114212036133
    4. '
' → logprob: -8.349011421203613
    5. 'continue' → logprob: -8.724011421203613
    6. '```' → logprob: -8.849011421203613
    7. '    
' → logprob: -8.974011421203613
    8. '	continue' → logprob: -9.224011421203613
    9. '<|end|>' → logprob: -9.599011421203613
    10. '...' → logprob: -9.724011421203613

Token 542: ' else' (ID: 1203)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.11174679547548294
    2. 'else' (adapté à ' else') → logprob: -2.4867467880249023
    3. '   ' → logprob: -4.361746788024902
    4. ' else' → logprob: -4.986746788024902
    5. ' lines' → logprob: -6.236746788024902
    6. 'lines' → logprob: -6.986746788024902
    7. 'continue' → logprob: -10.736746788024902
    8. '<|end|>' → logprob: -10.736746788024902
    9. '```' → logprob: -11.736746788024902
    10. '           ' → logprob: -11.736746788024902

Token 543: ':
' (ID: 734)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.004616203252226114
    2. ':' → logprob: -5.6296162605285645
    3. ':
' → logprob: -7.8796162605285645
    4. ' lines' → logprob: -8.379615783691406
    5. '(lines' → logprob: -9.254615783691406
    6. '.append' → logprob: -9.629615783691406
    7. '          ' → logprob: -9.629615783691406
    8. '<|end|>' → logprob: -10.629615783691406
    9. '	       ' → logprob: -10.754615783691406
    10. '               ' → logprob: -11.504615783691406

Token 544: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.09737459570169449
    2. ' lines' → logprob: -3.097374677658081
    3. '   ' → logprob: -3.222374677658081
    4. '       ' → logprob: -5.722374439239502
    5. '	       ' → logprob: -5.722374439239502
    6. '	lines' → logprob: -7.222374439239502
    7. '```' → logprob: -8.84737491607666
    8. '	   ' → logprob: -8.84737491607666
    9. '(lines' → logprob: -10.22237491607666
    10. '    	   ' → logprob: -10.22237491607666

Token 545: ' lines' (ID: 8698)
  Prédit: ' lines'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' lines' → logprob: -0.5899880528450012
    2. 'lines' (adapté à ' lines') → logprob: -0.8399880528450012
    3. '   ' → logprob: -4.3399882316589355
    4. '	lines' → logprob: -7.3399882316589355
    5. '           ' → logprob: -8.464987754821777
    6. '       ' → logprob: -10.089987754821777
    7. '               ' → logprob: -12.214987754821777
    8. ' ' → logprob: -12.714987754821777
    9. '(lines' → logprob: -12.839987754821777
    10. '```' → logprob: -14.589987754821777

Token 546: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.0001737431448418647
    2. '.' → logprob: -9.125173568725586
    3. ' .' → logprob: -10.000173568725586
    4. '.extend' → logprob: -12.125173568725586
    5. '.app' → logprob: -12.250173568725586
    6. ' +=' → logprob: -12.500173568725586
    7. '.add' → logprob: -13.875173568725586
    8. 'append' → logprob: -14.500173568725586
    9. '+=' → logprob: -14.500173568725586
    10. '.setdefault' → logprob: -14.625173568725586

Token 547: '(line' (ID: 18178)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'line' → logprob: -0.005493903066962957
    2. '(line' → logprob: -5.255494117736816
    3. ' line' → logprob: -8.255494117736816
    4. '(' → logprob: -16.0054931640625
    5. '=line' → logprob: -16.7554931640625
    6. '[line' → logprob: -17.6304931640625
    7. '	line' → logprob: -17.7554931640625
    8. '#line' → logprob: -18.5054931640625
    9. ',line' → logprob: -19.8804931640625
    10. '_line' → logprob: -20.0054931640625

Token 548: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.008342461660504341
    2. '<|end|>' → logprob: -4.883342266082764
    3. '   ' → logprob: -7.508342266082764
    4. '<|end|>' → logprob: -9.633342742919922
    5. '       ' → logprob: -10.508342742919922
    6. ')
' → logprob: -10.633342742919922
    7. '')' → logprob: -10.758342742919922
    8. '")' → logprob: -11.383342742919922
    9. ')return' → logprob: -12.133342742919922
    10. '}' → logprob: -12.508342742919922

Token 549: 'if' (ID: 366)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.2579088807106018
    2. 'if' → logprob: -1.507908821105957
    3. '```' → logprob: -5.757908821105957
    4. '
' → logprob: -6.007908821105957
    5. ' if' → logprob: -9.257908821105957
    6. '   ' → logprob: -9.257908821105957
    7. ' main' → logprob: -9.757908821105957
    8. 'for' → logprob: -10.132908821105957
    9. 'print' → logprob: -10.632908821105957
    10. '(main' → logprob: -11.007908821105957

Token 550: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.07920371741056442
    2. '__' → logprob: -2.5792036056518555
    3. '_' → logprob: -8.454203605651855
    4. '_name' → logprob: -9.579203605651855
    5. ' ' → logprob: -11.329203605651855
    6. '___' → logprob: -12.079203605651855
    7. 'name' → logprob: -12.079203605651855
    8. ' _' → logprob: -12.829203605651855
    9. ' ' → logprob: -12.954203605651855
    10. 'Name' → logprob: -13.579203605651855

Token 551: 'name' (ID: 897)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.05617992952466011
    2. '==' → logprob: -3.306180000305176
    3. ' ==' → logprob: -4.056180000305176
    4. ' __' → logprob: -7.806180000305176
    5. '=="' → logprob: -9.181180000305176
    6. 'name' → logprob: -10.181180000305176
    7. 'if' → logprob: -10.681180000305176
    8. '```' → logprob: -11.056180000305176
    9. '_name' → logprob: -11.306180000305176
    10. '=='' → logprob: -11.306180000305176

Token 552: '__' (ID: 771)
  Prédit: '__'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.00034821697045117617
    2. '__.__' → logprob: -8.375348091125488
    3. '==' → logprob: -9.125348091125488
    4. '__.' → logprob: -12.625348091125488
    5. '```' → logprob: -13.500348091125488
    6. ' ==' → logprob: -13.625348091125488
    7. '=="' → logprob: -14.250348091125488
    8. '=='' → logprob: -14.750348091125488
    9. '"' → logprob: -14.875348091125488
    10. '___' → logprob: -15.125348091125488

Token 553: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.07969853281974792
    2. '__' → logprob: -3.3296985626220703
    3. ' ==' → logprob: -3.4546985626220703
    4. '=='' → logprob: -5.32969856262207
    5. '=="' → logprob: -5.45469856262207
    6. '=' → logprob: -10.45469856262207
    7. '==
' → logprob: -10.82969856262207
    8. '===' → logprob: -11.20469856262207
    9. '"' → logprob: -12.20469856262207
    10. '_' → logprob: -12.70469856262207

Token 554: ' "__' (ID: 27367)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.387009859085083
    2. ''' → logprob: -1.137009859085083
    3. '__' → logprob: -9.012009620666504
    4. ' "__' → logprob: -11.512009620666504
    5. ' '__' → logprob: -12.387009620666504
    6. '"user' → logprob: -14.512009620666504
    7. ''name' → logprob: -14.512009620666504
    8. ''user' → logprob: -14.887009620666504
    9. '"name' → logprob: -15.137009620666504
    10. ''"' → logprob: -15.262009620666504

Token 555: 'main' (ID: 7731)
  Prédit: 'main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.13828711211681366
    2. '__' → logprob: -2.13828706741333
    3. '"' → logprob: -4.76328706741333
    4. ''' → logprob: -6.63828706741333
    5. '__":
' → logprob: -7.38828706741333
    6. '```' → logprob: -8.513287544250488
    7. 'name' → logprob: -8.888287544250488
    8. '_main' → logprob: -8.888287544250488
    9. '__':
' → logprob: -9.638287544250488
    10. '('__' → logprob: -9.763287544250488

Token 556: '__":
' (ID: 49892)
  Prédit: '__":
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__":
' → logprob: -0.026552589610219002
    2. '__' → logprob: -3.776552677154541
    3. '__':
' → logprob: -6.151552677154541
    4. '__:' → logprob: -7.151552677154541
    5. '():
' → logprob: -8.401552200317383
    6. ':' → logprob: -9.276552200317383
    7. '_' → logprob: -10.901552200317383
    8. '__.' → logprob: -11.151552200317383
    9. '__["' → logprob: -11.651552200317383
    10. ':
' → logprob: -12.151552200317383

Token 557: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2618619501590729
    2. ' main' → logprob: -1.6368619203567505
    3. 'main' → logprob: -3.76186203956604
    4. '	main' → logprob: -4.386861801147461
    5. '   ' → logprob: -9.636861801147461
    6. '    
' → logprob: -11.386861801147461
    7. '_main' → logprob: -11.886861801147461
    8. '  ' → logprob: -12.136861801147461
    9. ' ' → logprob: -12.261861801147461
    10. ' ' → logprob: -12.386861801147461

Token 558: ' main' (ID: 2758)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' (adapté à ' main') → logprob: -0.0001246348983841017
    2. ' main' → logprob: -9.00012493133545
    3. '   ' → logprob: -14.00012493133545
    4. '	main' → logprob: -15.00012493133545
    5. '_main' → logprob: -21.000123977661133
    6. ' ' → logprob: -22.000123977661133
    7. '(main' → logprob: -22.750123977661133
    8. '.main' → logprob: -22.750123977661133
    9. '  ' → logprob: -22.875123977661133
    10. '    
' → logprob: -24.000123977661133

Token 559: '()' (ID: 416)
  Prédit: '()'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0014215452829375863
    2. '()
' → logprob: -7.5014214515686035
    3. '(' → logprob: -7.6264214515686035
    4. '<|end|>' → logprob: -8.501421928405762
    5. '
' → logprob: -9.001421928405762
    6. '();' → logprob: -11.251421928405762
    7. '()\' → logprob: -11.251421928405762
    8. '```' → logprob: -11.876421928405762
    9. '(
' → logprob: -12.376421928405762
    10. ' ()' → logprob: -12.751421928405762


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 557
Tokens correctement prédits (1ère position, stricte): 227
Tokens correctement prédits (1ère position, avec adaptation): 252
Tokens correctement prédits (top 10): 478
Précision stricte (1ère position): 40.75%
Précision adaptée (1ère position): 45.24%
Précision (top 10): 85.82%
================================================================================
