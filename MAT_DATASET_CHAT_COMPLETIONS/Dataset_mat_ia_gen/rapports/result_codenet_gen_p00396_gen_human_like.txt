================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 17:03:57
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
def grundy(w, b):
    # Based on analysis, the grundy number for each pile depends only on the parity of (b - w)
    return (b - w) % 2

def main():
    import sys
    input = sys.stdin.readline
    n = int(input())
    xor_sum = 0
    for _ in range(n):
        w, b = map(int, input().split())
        xor_sum ^= grundy(w, b)
    print(0 if xor_sum != 0 else 1)

if __name__ == "__main__":
    main()
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'def' (ID: 1314)
  → Token d'amorce (pas de prédiction)

Token 1: ' grund' (ID: 34475)
  → Token d'amorce (pas de prédiction)

Token 2: 'y' (ID: 88)
  → Token d'amorce (pas de prédiction)

Token 3: '(w' (ID: 7420)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.027838220819830894
    2. '_' → logprob: -3.6528382301330566
    3. '```' → logprob: -7.027838230133057
    4. ' (' → logprob: -8.902837753295898
    5. ' ' → logprob: -9.402837753295898
    6. '(
' → logprob: -9.777837753295898
    7. '<|end|>' → logprob: -9.902837753295898
    8. '(_' → logprob: -10.152837753295898
    9. ')' → logprob: -10.652837753295898
    10. '"' → logprob: -10.902837753295898

Token 4: ',' (ID: 11)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.2484721541404724
    2. '):' → logprob: -1.6234722137451172
    3. '[' → logprob: -4.248472213745117
    4. 'a' → logprob: -5.998472213745117
    5. '_' → logprob: -6.873472213745117
    6. ',' → logprob: -6.873472213745117
    7. 'e' → logprob: -6.998472213745117
    8. '[i' → logprob: -7.248472213745117
    9. 'i' → logprob: -7.373472213745117
    10. '[]):' → logprob: -7.748472213745117

Token 5: ' b' (ID: 287)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.9102381467819214
    2. 'h' → logprob: -1.4102381467819214
    3. 'k' → logprob: -2.035238265991211
    4. 's' → logprob: -2.910238265991211
    5. 'b' → logprob: -3.035238265991211
    6. 'l' → logprob: -3.660238265991211
    7. ' n' → logprob: -3.660238265991211
    8. 'v' → logprob: -4.285238265991211
    9. 'm' → logprob: -4.660238265991211
    10. ' h' → logprob: -4.785238265991211

Token 6: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0708003044128418
    2. ')' → logprob: -2.695800304412842
    3. ',' → logprob: -7.320800304412842
    4. '_' → logprob: -9.44580078125
    5. 's' → logprob: -10.44580078125
    6. ':' → logprob: -10.82080078125
    7. ''):' → logprob: -10.94580078125
    8. '):
' → logprob: -11.44580078125
    9. '=' → logprob: -12.19580078125
    10. '[' → logprob: -12.57080078125

Token 7: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.014764729887247086
    2. '   ' → logprob: -4.639764785766602
    3. '```' → logprob: -6.264764785766602
    4. ':
' → logprob: -7.139764785766602
    5. '():' → logprob: -7.514764785766602
    6. '':' → logprob: -7.889764785766602
    7. '":' → logprob: -8.014764785766602
    8. '(' → logprob: -8.139764785766602
    9. '`:' → logprob: -9.014764785766602
    10. '):' → logprob: -9.514764785766602

Token 8: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3130098879337311
    2. ':' → logprob: -1.8130098581314087
    3. '```' → logprob: -3.1880099773406982
    4. ' ' → logprob: -4.563009738922119
    5. '\' → logprob: -4.938009738922119
    6. '    ' → logprob: -5.063009738922119
    7. '_' → logprob: -5.188009738922119
    8. '       ' → logprob: -5.188009738922119
    9. '[' → logprob: -5.313009738922119
    10. '`' → logprob: -5.563009738922119

Token 9: ' Based' (ID: 27067)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.9417470693588257
    2. ' if' → logprob: -1.0667470693588257
    3. '   ' → logprob: -2.4417471885681152
    4. ' i' → logprob: -3.4417471885681152
    5. 'i' → logprob: -3.5667471885681152
    6. 'if' → logprob: -4.066747188568115
    7. 'r' → logprob: -4.191747188568115
    8. ' c' → logprob: -4.816747188568115
    9. 'n' → logprob: -4.941747188568115
    10. 'g' → logprob: -4.941747188568115

Token 10: ' on' (ID: 402)
  Prédit: ' on'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' on' → logprob: -0.03415711596608162
    2. '  ' → logprob: -4.6591572761535645
    3. ')' → logprob: -4.7841572761535645
    4. ' ' → logprob: -5.5341572761535645
    5. '_' → logprob: -5.6591572761535645
    6. 'on' → logprob: -5.9091572761535645
    7. '=' → logprob: -6.5341572761535645
    8. '[' → logprob: -6.7841572761535645
    9. '   ' → logprob: -7.1591572761535645
    10. ' =' → logprob: -7.1591572761535645

Token 11: ' analysis' (ID: 8450)
  Prédit: ' the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' the' → logprob: -0.6095567941665649
    2. '   ' → logprob: -2.1095566749572754
    3. ' w' → logprob: -2.1095566749572754
    4. 'the' → logprob: -2.2345566749572754
    5. ' a' → logprob: -4.109556674957275
    6. ' ' → logprob: -4.234556674957275
    7. ' "' → logprob: -4.859556674957275
    8. '"' → logprob: -4.859556674957275
    9. ' '' → logprob: -4.859556674957275
    10. ' `' → logprob: -5.484556674957275

Token 12: ',' (ID: 11)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.27037885785102844
    2. '[' → logprob: -2.770378828048706
    3. '   ' → logprob: -2.770378828048706
    4. '(' → logprob: -3.020378828048706
    5. '_' → logprob: -3.270378828048706
    6. ' :' → logprob: -5.395379066467285
    7. '```' → logprob: -5.395379066467285
    8. 'def' → logprob: -6.145379066467285
    9. ',' → logprob: -6.395379066467285
    10. '():' → logprob: -6.645379066467285

Token 13: ' the' (ID: 290)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.150762677192688
    2. '   ' → logprob: -3.0257625579833984
    3. ' if' → logprob: -3.1507625579833984
    4. ' return' → logprob: -4.150762557983398
    5. '    ' → logprob: -4.525762557983398
    6. '_' → logprob: -5.025762557983398
    7. ' :' → logprob: -5.775762557983398
    8. ' 
' → logprob: -6.525762557983398
    9. ' n' → logprob: -6.900762557983398
    10. '  ' → logprob: -6.900762557983398

Token 14: ' grund' (ID: 34475)
  Prédit: ' return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.944573163986206
    2. ' result' → logprob: -1.819573163986206
    3. ' grund' → logprob: -1.944573163986206
    4. ' if' → logprob: -2.194573163986206
    5. ' value' → logprob: -3.194573163986206
    6. ' ' → logprob: -3.944573163986206
    7. ' next' → logprob: -4.569573402404785
    8. ' code' → logprob: -4.694573402404785
    9. 'def' → logprob: -4.819573402404785
    10. ' def' → logprob: -4.819573402404785

Token 15: 'y' (ID: 88)
  Prédit: 'y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.0035855798050761223
    2. ' y' → logprob: -5.7535858154296875
    3. '_y' → logprob: -9.128585815429688
    4. '   ' → logprob: -9.753585815429688
    5. '(y' → logprob: -9.878585815429688
    6. ')' → logprob: -10.003585815429688
    7. 'y's' → logprob: -10.628585815429688
    8. '	y' → logprob: -10.753585815429688
    9. ' ' → logprob: -10.878585815429688
    10. ' value' → logprob: -11.128585815429688

Token 16: ' number' (ID: 2086)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.2246754914522171
    2. ' (' → logprob: -2.849675416946411
    3. '_' → logprob: -2.974675416946411
    4. ' ' → logprob: -3.349675416946411
    5. '(n' → logprob: -3.974675416946411
    6. '[' → logprob: -4.34967565536499
    7. '(w' → logprob: -4.34967565536499
    8. ')' → logprob: -5.72467565536499
    9. '   ' → logprob: -6.72467565536499
    10. ' is' → logprob: -6.72467565536499

Token 17: ' for' (ID: 395)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.8273607492446899
    2. ' for' → logprob: -1.32736074924469
    3. ' ' → logprob: -2.5773606300354004
    4. ' is' → logprob: -2.9523606300354004
    5. ' =' → logprob: -3.0773606300354004
    6. '_' → logprob: -3.4523606300354004
    7. '=' → logprob: -3.8273606300354004
    8. ' (' → logprob: -4.0773606300354
    9. '   ' → logprob: -4.2023606300354
    10. '(w' → logprob: -4.3273606300354

Token 18: ' each' (ID: 2454)
  Prédit: 'w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' → logprob: -0.8794654011726379
    2. ' w' → logprob: -0.8794654011726379
    3. ' the' → logprob: -2.504465341567993
    4. '(w' → logprob: -3.754465341567993
    5. ' (' → logprob: -4.129465579986572
    6. 'the' → logprob: -4.254465579986572
    7. ' b' → logprob: -5.129465579986572
    8. ' a' → logprob: -5.379465579986572
    9. 'b' → logprob: -5.379465579986572
    10. ' each' → logprob: -5.629465579986572

Token 19: ' pile' (ID: 39732)
  Prédit: ' pile'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' pile' → logprob: -1.3784602880477905
    2. ' position' → logprob: -2.50346040725708
    3. ' token' → logprob: -2.50346040725708
    4. '_' → logprob: -3.00346040725708
    5. ' state' → logprob: -3.00346040725708
    6. ' _' → logprob: -3.00346040725708
    7. ' coin' → logprob: -3.00346040725708
    8. ' move' → logprob: -3.75346040725708
    9. ' ' → logprob: -3.75346040725708
    10. '   ' → logprob: -3.87846040725708

Token 20: ' depends' (ID: 20102)
  Prédit: ' is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.5371403098106384
    2. '   ' → logprob: -1.4121403694152832
    3. '(' → logprob: -3.287140369415283
    4. '[' → logprob: -3.412140369415283
    5. ')' → logprob: -4.037140369415283
    6. ' ' → logprob: -4.287140369415283
    7. '_' → logprob: -4.537140369415283
    8. ' =' → logprob: -4.787140369415283
    9. '(s' → logprob: -4.787140369415283
    10. 's' → logprob: -4.912140369415283

Token 21: ' only' (ID: 1606)
  Prédit: ' on'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' on' → logprob: -0.005909596104174852
    2. 'on' → logprob: -6.005909442901611
    3. ' ' → logprob: -7.005909442901611
    4. '  ' → logprob: -7.005909442901611
    5. '   ' → logprob: -7.255909442901611
    6. '    ' → logprob: -8.13090991973877
    7. ' only' → logprob: -8.88090991973877
    8. ')' → logprob: -9.13090991973877
    9. '	on' → logprob: -9.50590991973877
    10. '=' → logprob: -9.63090991973877

Token 22: ' on' (ID: 402)
  Prédit: ' on'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' on' → logprob: -0.0207720585167408
    2. '   ' → logprob: -4.8957719802856445
    3. 'on' → logprob: -5.0207719802856445
    4. '```' → logprob: -5.8957719802856445
    5. '[' → logprob: -6.8957719802856445
    6. ')' → logprob: -6.8957719802856445
    7. '    ' → logprob: -8.270771980285645
    8. '=' → logprob: -8.520771980285645
    9. '	on' → logprob: -8.645771980285645
    10. '`' → logprob: -8.645771980285645

Token 23: ' the' (ID: 290)
  Prédit: ' the'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' the' → logprob: -0.4357939660549164
    2. ' its' → logprob: -1.3107939958572388
    3. ' w' → logprob: -3.185793876647949
    4. 'the' → logprob: -3.810793876647949
    5. 'w' → logprob: -4.185793876647949
    6. ' b' → logprob: -6.560793876647949
    7. ' their' → logprob: -6.685793876647949
    8. ' ' → logprob: -7.435793876647949
    9. 'its' → logprob: -7.435793876647949
    10. ' whether' → logprob: -8.56079387664795

Token 24: ' parity' (ID: 113181)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.0980532243847847
    2. ' w' → logprob: -3.473053216934204
    3. 'w' → logprob: -4.598053455352783
    4. ' number' → logprob: -5.223053455352783
    5. ' space' → logprob: -5.473053455352783
    6. ' length' → logprob: -5.473053455352783
    7. ' size' → logprob: -5.598053455352783
    8. '`' → logprob: -5.848053455352783
    9. 'b' → logprob: -5.973053455352783
    10. ' position' → logprob: -5.973053455352783

Token 25: ' of' (ID: 328)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.774863064289093
    2. ' of' → logprob: -1.1498630046844482
    3. ' ' → logprob: -2.6498630046844482
    4. '_' → logprob: -2.6498630046844482
    5. ')' → logprob: -3.2748630046844482
    6. ' (' → logprob: -4.149863243103027
    7. 's' → logprob: -4.774863243103027
    8. '   ' → logprob: -5.274863243103027
    9. '[' → logprob: -6.274863243103027
    10. 'of' → logprob: -6.399863243103027

Token 26: ' (' (ID: 350)
  Prédit: ' w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' w' → logprob: -0.6675388216972351
    2. 'w' → logprob: -1.1675388813018799
    3. 'b' → logprob: -2.41753888130188
    4. ' b' → logprob: -3.16753888130188
    5. ' the' → logprob: -3.29253888130188
    6. 'the' → logprob: -5.667538642883301
    7. ' both' → logprob: -6.167538642883301
    8. ' each' → logprob: -6.917538642883301
    9. ' (' → logprob: -8.6675386428833
    10. ' its' → logprob: -8.9175386428833

Token 27: 'b' (ID: 65)
  Prédit: 'w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' → logprob: -0.33013060688972473
    2. ' w' → logprob: -1.3301305770874023
    3. ' the' → logprob: -5.330130577087402
    4. 'b' → logprob: -5.455130577087402
    5. ' b' → logprob: -5.705130577087402
    6. ')' → logprob: -5.830130577087402
    7. 'the' → logprob: -7.705130577087402
    8. ' ' → logprob: -8.455130577087402
    9. ' both' → logprob: -8.705130577087402
    10. ' each' → logprob: -9.580130577087402

Token 28: ' -' (ID: 533)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.35958606004714966
    2. ' )' → logprob: -2.359586000442505
    3. ' +' → logprob: -2.484586000442505
    4. ' -' → logprob: -3.234586000442505
    5. ' %' → logprob: -3.484586000442505
    6. '+' → logprob: -3.734586000442505
    7. '%' → logprob: -4.234586238861084
    8. '-' → logprob: -4.484586238861084
    9. ')%' → logprob: -6.984586238861084
    10. ' ' → logprob: -7.234586238861084

Token 29: ' w' (ID: 286)
  Prédit: 'w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' → logprob: -0.026504293084144592
    2. ' w' → logprob: -3.6515042781829834
    3. '1' → logprob: -9.526504516601562
    4. 'b' → logprob: -10.276504516601562
    5. ' ' → logprob: -10.276504516601562
    6. '   ' → logprob: -10.401504516601562
    7. ')' → logprob: -11.776504516601562
    8. '2' → logprob: -12.526504516601562
    9. '  ' → logprob: -12.839004516601562
    10. ' b' → logprob: -12.964004516601562

Token 30: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.003265411127358675
    2. ' )' → logprob: -6.628265380859375
    3. '):' → logprob: -7.128265380859375
    4. ').' → logprob: -7.753265380859375
    5. '+' → logprob: -8.003265380859375
    6. ')`' → logprob: -10.128265380859375
    7. ' ' → logprob: -10.378265380859375
    8. ')
' → logprob: -10.503265380859375
    9. '))' → logprob: -10.628265380859375
    10. ' +' → logprob: -10.628265380859375

Token 31: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.014907775446772575
    2. ':
' → logprob: -4.6399078369140625
    3. '   ' → logprob: -5.8899078369140625
    4. '):' → logprob: -7.5149078369140625
    5. ')' → logprob: -7.7649078369140625
    6. ' :' → logprob: -8.014907836914062
    7. ' ' → logprob: -8.389907836914062
    8. ',' → logprob: -8.639907836914062
    9. '.' → logprob: -9.014907836914062
    10. ':return' → logprob: -9.264907836914062

Token 32: ' return' (ID: 622)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.08682820200920105
    2. '   ' → logprob: -2.8368282318115234
    3. ':
' → logprob: -4.336828231811523
    4. '\n' → logprob: -5.711828231811523
    5. ':return' → logprob: -6.836828231811523
    6. ' ' → logprob: -6.961828231811523
    7. '```' → logprob: -7.086828231811523
    8. '\' → logprob: -7.211828231811523
    9. ' return' → logprob: -7.211828231811523
    10. ' :' → logprob: -7.211828231811523

Token 33: ' (' (ID: 350)
  Prédit: ' ('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.2276749461889267
    2. '(b' → logprob: -1.727674961090088
    3. '0' → logprob: -3.977674961090088
    4. ' ' → logprob: -6.227674961090088
    5. '(w' → logprob: -6.602674961090088
    6. '(abs' → logprob: -6.727674961090088
    7. 'abs' → logprob: -7.102674961090088
    8. '((' → logprob: -7.477674961090088
    9. '1' → logprob: -7.727674961090088
    10. ' ((' → logprob: -8.10267448425293

Token 34: 'b' (ID: 65)
  Prédit: 'b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.000796523701865226
    2. '(b' → logprob: -7.500796318054199
    3. ' b' → logprob: -8.6257963180542
    4. 'w' → logprob: -10.1257963180542
    5. ' (' → logprob: -11.0007963180542
    6. '(w' → logprob: -12.6257963180542
    7. '   ' → logprob: -13.0007963180542
    8. '1' → logprob: -14.6257963180542
    9. '(' → logprob: -15.0007963180542
    10. 'abs' → logprob: -15.2507963180542

Token 35: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.31417497992515564
    2. '-' → logprob: -1.314175009727478
    3. ' ' → logprob: -7.064175128936768
    4. '   ' → logprob: -10.93917465209961
    5. '-w' → logprob: -11.18917465209961
    6. '  ' → logprob: -11.93917465209961
    7. '>' → logprob: -12.18917465209961
    8. ' ' → logprob: -12.31417465209961
    9. ')' → logprob: -12.81417465209961
    10. '    ' → logprob: -13.81417465209961

Token 36: ' w' (ID: 286)
  Prédit: 'w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' → logprob: -0.014164921827614307
    2. ' w' → logprob: -4.264164924621582
    3. '	w' → logprob: -13.639164924621582
    4. ' ' → logprob: -16.639163970947266
    5. ''w' → logprob: -17.639163970947266
    6. '_w' → logprob: -17.639163970947266
    7. '<|end|>' → logprob: -17.639163970947266
    8. '   ' → logprob: -18.014163970947266
    9. '<w' → logprob: -18.139163970947266
    10. '1' → logprob: -18.389163970947266

Token 37: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00018887832993641496
    2. ' )' → logprob: -8.625188827514648
    3. ')%' → logprob: -12.000188827514648
    4. '`)' → logprob: -13.625188827514648
    5. '%' → logprob: -14.750188827514648
    6. '))' → logprob: -15.250188827514648
    7. '```' → logprob: -15.250188827514648
    8. ' ' → logprob: -15.500188827514648
    9. '')' → logprob: -15.625188827514648
    10. '0' → logprob: -16.37518882751465

Token 38: ' %' (ID: 1851)
  Prédit: '%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '%' → logprob: -1.2944046258926392
    2. ')' → logprob: -1.2944046258926392
    3. ' %' → logprob: -1.4194046258926392
    4. ' ' → logprob: -1.6694046258926392
    5. '<|end|>' → logprob: -4.16940450668335
    6. ')%' → logprob: -6.16940450668335
    7. '  ' → logprob: -7.04440450668335
    8. '0' → logprob: -7.41940450668335
    9. ' &' → logprob: -7.66940450668335
    10. '```' → logprob: -8.169404983520508

Token 39: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.008653807453811169
    2. '3' → logprob: -4.75865364074707
    3. '4' → logprob: -10.50865364074707
    4. '1' → logprob: -12.88365364074707
    5. ' ' → logprob: -12.88365364074707
    6. '5' → logprob: -13.88365364074707
    7. '10' → logprob: -14.25865364074707
    8. '32' → logprob: -14.38365364074707
    9. '7' → logprob: -14.50865364074707
    10. '6' → logprob: -14.88365364074707

Token 40: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.04872100427746773
    2. '3' → logprob: -3.0487210750579834
    3. '4' → logprob: -9.173721313476562
    4. '5' → logprob: -11.923721313476562
    5. '7' → logprob: -12.173721313476562
    6. '10' → logprob: -12.798721313476562
    7. '1' → logprob: -13.173721313476562
    8. '6' → logprob: -13.798721313476562
    9. '32' → logprob: -13.798721313476562
    10. '```' → logprob: -13.798721313476562

Token 41: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.3138766884803772
    2. '<|end|>' → logprob: -1.4388766288757324
    3. '\n' → logprob: -4.438876628875732
    4. '+' → logprob: -5.188876628875732
    5. '\' → logprob: -5.688876628875732
    6. '```' → logprob: -6.063876628875732
    7. ')' → logprob: -6.063876628875732
    8. '

' → logprob: -6.563876628875732
    9. '<|end|>' → logprob: -6.563876628875732
    10. ' ' → logprob: -7.188876628875732

Token 42: 'def' (ID: 1314)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.8963597416877747
    2. '\n' → logprob: -1.5213596820831299
    3. ')' → logprob: -2.02135968208313
    4. '<|end|>' → logprob: -2.14635968208313
    5. '```' → logprob: -3.39635968208313
    6. '#' → logprob: -3.77135968208313
    7. '\' → logprob: -3.89635968208313
    8. ':' → logprob: -4.146359920501709
    9. '[' → logprob: -5.021359920501709
    10. '+' → logprob: -5.646359920501709

Token 43: ' main' (ID: 2758)
  Prédit: ' main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' main' → logprob: -1.0051920413970947
    2. ' grund' → logprob: -1.6301920413970947
    3. ' solve' → logprob: -2.1301920413970947
    4. ' calculate' → logprob: -2.3801920413970947
    5. ' max' → logprob: -3.1301920413970947
    6. ' play' → logprob: -3.6301920413970947
    7. ' solution' → logprob: -4.255191802978516
    8. ' game' → logprob: -4.380191802978516
    9. ' nim' → logprob: -4.505191802978516
    10. ' space' → logprob: -4.505191802978516

Token 44: '():
' (ID: 8595)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.005975127220153809
    2. '():' → logprob: -5.255975246429443
    3. '(:' → logprob: -8.005974769592285
    4. ':' → logprob: -9.005974769592285
    5. ' (' → logprob: -9.380974769592285
    6. '_' → logprob: -10.380974769592285
    7. '(
' → logprob: -10.755974769592285
    8. '(">' → logprob: -11.130974769592285
    9. '```' → logprob: -11.130974769592285
    10. '()' → logprob: -11.255974769592285

Token 45: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.008268686942756176
    2. '```' → logprob: -5.6332688331604
    3. ' input' → logprob: -7.1332688331604
    4. 'n' → logprob: -7.5082688331604
    5. '(n' → logprob: -7.6332688331604
    6. ' for' → logprob: -7.8832688331604
    7. ' n' → logprob: -8.258268356323242
    8. ':' → logprob: -8.258268356323242
    9. ' ' → logprob: -8.258268356323242
    10. ' w' → logprob: -8.258268356323242

Token 46: ' import' (ID: 1588)
  Prédit: ' n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.39411187171936035
    2. 'n' → logprob: -2.1441118717193604
    3. '   ' → logprob: -2.1441118717193604
    4. ' w' → logprob: -3.1441118717193604
    5. ' import' → logprob: -4.019111633300781
    6. ' input' → logprob: -5.144111633300781
    7. '```' → logprob: -5.144111633300781
    8. ' ```' → logprob: -5.894111633300781
    9. 'import' (adapté à ' import') → logprob: -6.269111633300781
    10. ' print' → logprob: -6.519111633300781

Token 47: ' sys' (ID: 12228)
  Prédit: ' sys'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sys' → logprob: -4.286852345103398e-05
    2. ' math' → logprob: -10.625042915344238
    3. ' ' → logprob: -11.375042915344238
    4. 'sys' → logprob: -12.375042915344238
    5. ' itertools' → logprob: -13.250042915344238
    6. ' ' → logprob: -14.375042915344238
    7. ' random' → logprob: -15.625042915344238
    8. '	sys' → logprob: -15.750042915344238
    9. ' functools' → logprob: -16.500041961669922
    10. ' collections' → logprob: -16.750041961669922

Token 48: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1977718025445938
    2. '
' → logprob: -2.3227717876434326
    3. '    
' → logprob: -2.9477717876434326
    4. 'data' → logprob: -4.822772026062012
    5. '```' → logprob: -5.572772026062012
    6. 'for' → logprob: -5.822772026062012
    7. 'input' → logprob: -5.947772026062012
    8. ' for' → logprob: -6.197772026062012
    9. '\n' → logprob: -6.447772026062012
    10. '[' → logprob: -6.822772026062012

Token 49: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2532161772251129
    2. '
' → logprob: -2.37821626663208
    3. 'data' → logprob: -3.12821626663208
    4. '    
' → logprob: -3.37821626663208
    5. 'input' → logprob: -3.87821626663208
    6. 'for' → logprob: -5.25321626663208
    7. 'n' → logprob: -5.62821626663208
    8. '```' → logprob: -5.75321626663208
    9. ' for' → logprob: -6.12821626663208
    10. '[' → logprob: -6.25321626663208

Token 50: ' input' (ID: 3422)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.0044524669647217
    2. 'data' → logprob: -1.6294524669647217
    3. 'input' (adapté à ' input') → logprob: -1.8794524669647217
    4. ' input' → logprob: -2.5044524669647217
    5. ' lines' → logprob: -2.7544524669647217
    6. ' for' → logprob: -3.0044524669647217
    7. ' data' → logprob: -3.2544524669647217
    8. 'for' → logprob: -3.7544524669647217
    9. 'n' → logprob: -4.129452705383301
    10. ' readline' → logprob: -5.254452705383301

Token 51: ' =' (ID: 314)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.21435336768627167
    2. '()' → logprob: -2.964353322982788
    3. '().' → logprob: -2.964353322982788
    4. '=' → logprob: -3.089353322982788
    5. '.readline' → logprob: -3.464353322982788
    6. ' =' → logprob: -4.714353561401367
    7. '.=' → logprob: -6.589353561401367
    8. '=sys' → logprob: -6.839353561401367
    9. '(' → logprob: -7.589353561401367
    10. '_data' → logprob: -7.839353561401367

Token 52: ' sys' (ID: 12228)
  Prédit: ' sys'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sys' → logprob: -0.07890564948320389
    2. 'sys' → logprob: -2.5789055824279785
    3. '=sys' → logprob: -11.703906059265137
    4. '	sys' → logprob: -11.828906059265137
    5. '(sys' → logprob: -15.453906059265137
    6. ' ' → logprob: -16.20390510559082
    7. '   ' → logprob: -18.57890510559082
    8. 'input' → logprob: -19.07890510559082
    9. ' ' → logprob: -19.20390510559082
    10. ' input' → logprob: -19.32890510559082

Token 53: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -0.00909371580928564
    2. '.readline' → logprob: -4.884093761444092
    3. '.' → logprob: -6.759093761444092
    4. '.stdout' → logprob: -8.259093284606934
    5. ' .' → logprob: -10.509093284606934
    6. 'stdin' → logprob: -10.884093284606934
    7. '.read' → logprob: -12.009093284606934
    8. '.std' → logprob: -12.259093284606934
    9. '.input' → logprob: -13.259093284606934
    10. '.setdefault' → logprob: -13.634093284606934

Token 54: '.readline' (ID: 74673)
  Prédit: '.readline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -8.566264295950532e-05
    2. '.read' → logprob: -10.250085830688477
    3. '.readlines' → logprob: -10.500085830688477
    4. '.' → logprob: -10.875085830688477
    5. '.buffer' → logprob: -12.625085830688477
    6. 'buffer' → logprob: -15.875085830688477
    7. ' .' → logprob: -16.000085830688477
    8. 'read' → logprob: -16.375085830688477
    9. ' readline' → logprob: -16.875085830688477
    10. '.reader' → logprob: -18.500085830688477

Token 55: '
' (ID: 198)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.8760250210762024
    2. '   ' → logprob: -1.0010249614715576
    3. '()
' → logprob: -1.8760249614715576
    4. '
' → logprob: -2.8760249614715576
    5. '    
' → logprob: -6.001025199890137
    6. '()

' → logprob: -6.376025199890137
    7. '()\' → logprob: -7.876025199890137
    8. '  
' → logprob: -7.876025199890137
    9. ' 
' → logprob: -8.251025199890137
    10. '().' → logprob: -8.626025199890137

Token 56: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.02056735008955002
    2. '    
' → logprob: -4.395567417144775
    3. '()' → logprob: -5.020567417144775
    4. '
' → logprob: -7.395567417144775
    5. '()
' → logprob: -8.270566940307617
    6. '(n' → logprob: -9.270566940307617
    7. 'def' → logprob: -9.395566940307617
    8. '  
' → logprob: -9.645566940307617
    9. '(' → logprob: -10.020566940307617
    10. '<|end|>' → logprob: -10.145566940307617

Token 57: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' (adapté à ' n') → logprob: -0.5082420706748962
    2. '   ' → logprob: -1.508242130279541
    3. ' n' → logprob: -1.758242130279541
    4. '    
' → logprob: -6.508242130279541
    5. '
' → logprob: -6.883242130279541
    6. ' 
' → logprob: -7.383242130279541
    7. '	n' → logprob: -8.508241653442383
    8. '(n' → logprob: -8.633241653442383
    9. '\n' → logprob: -8.633241653442383
    10. 't' → logprob: -8.883241653442383

Token 58: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.011345830745995045
    2. '=' → logprob: -4.761345863342285
    3. ' ' → logprob: -6.011345863342285
    4. ',' → logprob: -8.511345863342285
    5. '=int' → logprob: -9.886345863342285
    6. ' ,' → logprob: -11.511345863342285
    7. '    ' → logprob: -12.386345863342285
    8. ' =
' → logprob: -12.636345863342285
    9. '   ' → logprob: -13.136345863342285
    10. '  ' → logprob: -13.136345863342285

Token 59: ' int' (ID: 677)
  Prédit: ' int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.38688328862190247
    2. 'int' → logprob: -1.13688325881958
    3. '=int' → logprob: -12.136883735656738
    4. '(int' → logprob: -12.761883735656738
    5. '[int' → logprob: -13.636883735656738
    6. '<int' → logprob: -14.136883735656738
    7. ' ' → logprob: -14.886883735656738
    8. 'n' → logprob: -15.261883735656738
    9. ' n' → logprob: -15.261883735656738
    10. 'input' → logprob: -15.386883735656738

Token 60: '(input' (ID: 10054)
  Prédit: '(input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.018200866878032684
    2. '(' → logprob: -4.018200874328613
    3. 'input' → logprob: -10.768200874328613
    4. ' (' → logprob: -11.018200874328613
    5. '(sys' → logprob: -11.643200874328613
    6. '()' → logprob: -13.268200874328613
    7. '(
' → logprob: -13.768200874328613
    8. ' input' → logprob: -15.018200874328613
    9. ' ' → logprob: -15.393200874328613
    10. '=input' → logprob: -15.393200874328613

Token 61: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.06214447692036629
    2. '()' → logprob: -2.8121445178985596
    3. '().' → logprob: -9.31214427947998
    4. ')' → logprob: -10.06214427947998
    5. ' ())' → logprob: -10.93714427947998
    6. '())
' → logprob: -11.68714427947998
    7. '();)' → logprob: -12.43714427947998
    8. '(' → logprob: -12.68714427947998
    9. '()))' → logprob: -13.06214427947998
    10. '()
' → logprob: -13.18714427947998

Token 62: '   ' (ID: 271)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.48930421471595764
    2. '(' → logprob: -1.8643041849136353
    3. ')' → logprob: -3.114304304122925
    4. '\' → logprob: -3.364304304122925
    5. '(
' → logprob: -3.364304304122925
    6. '()
' → logprob: -3.489304304122925
    7. '
' → logprob: -3.614304304122925
    8. '   ' → logprob: -4.114304065704346
    9. '<|end|>' → logprob: -4.114304065704346
    10. '('\' → logprob: -5.739304065704346

Token 63: ' xor' (ID: 106402)
  Prédit: ' result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' result' → logprob: -1.5112202167510986
    2. 'result' → logprob: -1.5112202167510986
    3. ' grund' → logprob: -2.6362202167510986
    4. 'results' → logprob: -2.7612202167510986
    5. ' results' → logprob: -2.8862202167510986
    6. '   ' → logprob: -3.1362202167510986
    7. 'total' → logprob: -3.2612202167510986
    8. '    
' → logprob: -3.3862202167510986
    9. 'grund' → logprob: -3.3862202167510986
    10. ' total' → logprob: -3.6362202167510986

Token 64: '_sum' (ID: 29859)
  Prédit: '_sum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sum' → logprob: -0.4207576513290405
    2. '_val' → logprob: -1.5457576513290405
    3. '_value' → logprob: -2.54575777053833
    4. ' =' → logprob: -3.67075777053833
    5. '=' → logprob: -4.42075777053833
    6. '_' → logprob: -4.79575777053833
    7. '_total' → logprob: -5.79575777053833
    8. 'sum' → logprob: -6.79575777053833
    9. '_result' → logprob: -6.92075777053833
    10. 'val' → logprob: -7.79575777053833

Token 65: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.061969365924596786
    2. '=' → logprob: -2.81196928024292
    3. ' ' → logprob: -14.186969757080078
    4. 's' → logprob: -14.436969757080078
    5. '_' → logprob: -16.186969757080078
    6. ' ^=' → logprob: -16.686969757080078
    7. '<|end|>' → logprob: -16.686969757080078
    8. ',' → logprob: -17.061969757080078
    9. '   ' → logprob: -17.061969757080078
    10. '  ' → logprob: -17.311969757080078

Token 66: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.10020817816257477
    2. ' ' → logprob: -2.350208282470703
    3. '<|end|>' → logprob: -14.100208282470703
    4. '   ' → logprob: -15.225208282470703
    5. ' ' → logprob: -15.350208282470703
    6. '`' → logprob: -16.600208282470703
    7. '```' → logprob: -16.600208282470703
    8. ' `' → logprob: -17.600208282470703
    9. '۰' → logprob: -17.662708282470703
    10. '(' → logprob: -17.912708282470703

Token 67: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -3.531315314830863e-06
    2. ' ' → logprob: -12.625003814697266
    3. '   ' → logprob: -16.500003814697266
    4. '۰' → logprob: -18.750003814697266
    5. '```' → logprob: -19.062503814697266
    6. '０' → logprob: -19.437503814697266
    7. '(' → logprob: -19.812503814697266
    8. '  ' → logprob: -19.812503814697266
    9. 's' → logprob: -19.937503814697266
    10. '1' → logprob: -20.000003814697266

Token 68: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.1374647617340088
    2. '<|end|>' → logprob: -2.137464761734009
    3. '   ' → logprob: -5.13746452331543
    4. '<|end|>' → logprob: -6.26246452331543
    5. ' for' → logprob: -7.26246452331543
    6. ' 
' → logprob: -7.51246452331543
    7. '    
' → logprob: -7.63746452331543
    8. '  
' → logprob: -8.01246452331543
    9. 'for' → logprob: -8.01246452331543
    10. '
' → logprob: -9.88746452331543

Token 69: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.017966369166970253
    2. '<|end|>' → logprob: -4.267966270446777
    3. ' 
' → logprob: -6.517966270446777
    4. '   ' → logprob: -7.267966270446777
    5. '  
' → logprob: -7.642966270446777
    6. '
' → logprob: -8.017966270446777
    7. '<|end|>' → logprob: -8.642966270446777
    8. '    
' → logprob: -8.642966270446777
    9. ' for' → logprob: -9.017966270446777
    10. 'for' → logprob: -9.267966270446777

Token 70: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.06620078533887863
    2. ' for' → logprob: -2.8162007331848145
    3. '
' → logprob: -5.9412007331848145
    4. '   ' → logprob: -6.6912007331848145
    5. ' 
' → logprob: -9.066201210021973
    6. '    
' → logprob: -9.566201210021973
    7. '	for' → logprob: -9.691201210021973
    8. '<|end|>' → logprob: -9.816201210021973
    9. '```' → logprob: -10.566201210021973
    10. '\n' → logprob: -11.816201210021973

Token 71: ' _' (ID: 1175)
  Prédit: ' _'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' _' → logprob: -0.034571077674627304
    2. '_' → logprob: -3.9095711708068848
    3. ' ' → logprob: -4.284571170806885
    4. ' i' → logprob: -8.909570693969727
    5. ' range' → logprob: -11.659570693969727
    6. '  ' → logprob: -12.659570693969727
    7. ' ‌' → logprob: -13.659570693969727
    8. ' in' → logprob: -13.784570693969727
    9. ' ' → logprob: -14.159570693969727
    10. ' ▁' → logprob: -14.284570693969727

Token 72: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.17954501509666443
    2. 'in' → logprob: -2.6795449256896973
    3. 'range' → logprob: -2.9295449256896973
    4. ' range' → logprob: -3.5545449256896973
    5. '_' → logprob: -4.804544925689697
    6. '(' → logprob: -5.804544925689697
    7. ' ' → logprob: -7.304544925689697
    8. '(range' → logprob: -7.429544925689697
    9. 'n' → logprob: -7.929544925689697
    10. '()' → logprob: -8.429545402526855

Token 73: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.002499086782336235
    2. ' range' → logprob: -6.002499103546143
    3. '(range' → logprob: -11.127498626708984
    4. 'input' → logprob: -12.252498626708984
    5. '	range' → logprob: -13.252498626708984
    6. '```' → logprob: -14.877498626708984
    7. 'x' → logprob: -15.002498626708984
    8. 'in' → logprob: -15.002498626708984
    9. '(' → logprob: -15.502498626708984
    10. 'rang' → logprob: -15.877498626708984

Token 74: '(n' (ID: 2406)
  Prédit: ' ('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.7720772624015808
    2. '(' → logprob: -1.1470773220062256
    3. '(n' → logprob: -1.5220773220062256
    4. ' n' → logprob: -6.7720770835876465
    5. ' ' → logprob: -7.7720770835876465
    6. ')' → logprob: -8.397077560424805
    7. ' )' → logprob: -9.272077560424805
    8. ' (
' → logprob: -9.897077560424805
    9. '(
' → logprob: -9.897077560424805
    10. 'n' → logprob: -10.022077560424805

Token 75: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0012091610115021467
    2. ')' → logprob: -7.376209259033203
    3. ':' → logprob: -7.876209259033203
    4. '):
' → logprob: -8.626209259033203
    5. ' ):' → logprob: -10.876209259033203
    6. '   ' → logprob: -13.876209259033203
    7. '():' → logprob: -14.126209259033203
    8. ',' → logprob: -14.501209259033203
    9. ''):' → logprob: -14.751209259033203
    10. ' )' → logprob: -15.626209259033203

Token 76: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0010463856160640717
    2. ' w' → logprob: -7.626046180725098
    3. '<|end|>' → logprob: -8.501046180725098
    4. '   ' → logprob: -9.126046180725098
    5. ',' → logprob: -10.001046180725098
    6. '```' → logprob: -10.126046180725098
    7. ' ' → logprob: -10.376046180725098
    8. 'w' → logprob: -10.376046180725098
    9. '        
' → logprob: -10.876046180725098
    10. 'b' → logprob: -11.376046180725098

Token 77: ' w' (ID: 286)
  Prédit: 'w'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' (adapté à ' w') → logprob: -0.6936587691307068
    2. ' w' → logprob: -0.6936587691307068
    3. ' line' → logprob: -7.818658828735352
    4. '   ' → logprob: -10.443658828735352
    5. '       ' → logprob: -10.568658828735352
    6. 'line' → logprob: -11.443658828735352
    7. 'b' → logprob: -11.693658828735352
    8. 'W' → logprob: -11.818658828735352
    9. ' W' → logprob: -12.068658828735352
    10. '	w' → logprob: -12.568658828735352

Token 78: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.011756976135075092
    2. ',b' → logprob: -4.511756896972656
    3. ' ,' → logprob: -7.261756896972656
    4. 'b' → logprob: -12.261756896972656
    5. ' b' → logprob: -13.386756896972656
    6. '_,' → logprob: -15.511756896972656
    7. ',s' → logprob: -16.386756896972656
    8. ',a' → logprob: -16.511756896972656
    9. ',int' → logprob: -16.636756896972656
    10. ',n' → logprob: -16.886756896972656

Token 79: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.1002098023891449
    2. ' b' → logprob: -2.3502097129821777
    3. ' ' → logprob: -12.975210189819336
    4. '    ' → logprob: -15.975210189819336
    5. '	b' → logprob: -16.100210189819336
    6. ',b' → logprob: -16.100210189819336
    7. '<|end|>' → logprob: -16.225210189819336
    8. '   ' → logprob: -16.475210189819336
    9. ' ' → logprob: -16.725210189819336
    10. ' =' → logprob: -16.725210189819336

Token 80: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.523268461227417
    2. '=' → logprob: -0.898268461227417
    3. ')' → logprob: -9.023268699645996
    4. ',' → logprob: -11.148268699645996
    5. ')=' → logprob: -12.898268699645996
    6. '   ' → logprob: -13.398268699645996
    7. '=input' → logprob: -13.398268699645996
    8. '    ' → logprob: -13.898268699645996
    9. '<|end|>' → logprob: -14.023268699645996
    10. '=int' → logprob: -14.273268699645996

Token 81: ' map' (ID: 4014)
  Prédit: ' map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' map' → logprob: -0.0010350722586736083
    2. 'map' → logprob: -6.876035213470459
    3. ' ' → logprob: -13.7510347366333
    4. '	map' → logprob: -14.7510347366333
    5. ' list' → logprob: -15.0010347366333
    6. '    ' → logprob: -16.376035690307617
    7. ' ' → logprob: -16.376035690307617
    8. ' mapa' → logprob: -16.626035690307617
    9. ' [' → logprob: -16.751035690307617
    10. '(map' → logprob: -17.001035690307617

Token 82: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.004208989907056093
    2. '(' → logprob: -5.629209041595459
    3. '(lambda' → logprob: -7.879209041595459
    4. '(input' → logprob: -9.1292085647583
    5. '(str' → logprob: -9.3792085647583
    6. '(list' → logprob: -12.0042085647583
    7. '<|end|>' → logprob: -12.1292085647583
    8. '<int' → logprob: -12.2542085647583
    9. '[int' → logprob: -12.5042085647583
    10. ' (' → logprob: -12.6292085647583

Token 83: ',' (ID: 11)
  Prédit: ',input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',input' → logprob: -0.5683743357658386
    2. ',' → logprob: -1.3183743953704834
    3. '(input' → logprob: -1.8183743953704834
    4. 'input' → logprob: -5.943374156951904
    5. ')' → logprob: -7.443374156951904
    6. '(' → logprob: -8.193374633789062
    7. ' ,' → logprob: -9.568374633789062
    8. ' input' → logprob: -9.693374633789062
    9. '<input' → logprob: -10.818374633789062
    10. '[input' → logprob: -11.068374633789062

Token 84: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.31326669454574585
    2. ' input' → logprob: -1.3132667541503906
    3. ')' → logprob: -13.18826675415039
    4. '	input' → logprob: -13.81326675415039
    5. ',input' → logprob: -14.18826675415039
    6. '(input' → logprob: -14.68826675415039
    7. '=input' → logprob: -15.06326675415039
    8. '<input' → logprob: -15.81326675415039
    9. '[input' → logprob: -15.93826675415039
    10. '_input' → logprob: -16.06326675415039

Token 85: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -3.5954712075181305e-05
    2. '()' → logprob: -10.250036239624023
    3. '())' → logprob: -15.250036239624023
    4. ' ().' → logprob: -16.000036239624023
    5. '()
' → logprob: -16.750036239624023
    6. '(' → logprob: -16.875036239624023
    7. ')' → logprob: -17.125036239624023
    8. 'split' → logprob: -18.500036239624023
    9. '()))' → logprob: -19.375036239624023
    10. '.split' → logprob: -19.375036239624023

Token 86: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.0015165306394919753
    2. 'strip' → logprob: -6.501516342163086
    3. 'rstrip' → logprob: -11.251516342163086
    4. ')' → logprob: -14.376516342163086
    5. ' split' → logprob: -15.126516342163086
    6. 's' → logprob: -15.501516342163086
    7. '(split' → logprob: -15.751516342163086
    8. '().' → logprob: -17.126516342163086
    9. 'spl' → logprob: -18.126516342163086
    10. '()' → logprob: -18.126516342163086

Token 87: '())
' (ID: 4574)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.006814239080995321
    2. '))' → logprob: -5.131814002990723
    3. '())' → logprob: -7.381814002990723
    4. '()' → logprob: -8.381814002990723
    5. '(' → logprob: -11.381814002990723
    6. ' )' → logprob: -11.756814002990723
    7. ')))' → logprob: -12.381814002990723
    8. ')
' → logprob: -12.631814002990723
    9. ')`' → logprob: -13.006814002990723
    10. ')}' → logprob: -14.006814002990723

Token 88: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.09283653646707535
    2. '
' → logprob: -2.467836618423462
    3. '<|end|>' → logprob: -6.342836380004883
    4. '        
' → logprob: -7.217836380004883
    5. '   ' → logprob: -7.592836380004883
    6. ' 
' → logprob: -8.092836380004883
    7. '<|end|>' → logprob: -8.967836380004883
    8. '  
' → logprob: -9.217836380004883
    9. ' ' → logprob: -9.967836380004883
    10. 'xor' → logprob: -10.092836380004883

Token 89: ' xor' (ID: 106402)
  Prédit: 'xor'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'xor' (adapté à ' xor') → logprob: -0.0002867225557565689
    2. 'grund' → logprob: -8.750287055969238
    3. 'x' → logprob: -9.625287055969238
    4. '   ' → logprob: -10.500287055969238
    5. ' xor' → logprob: -10.875287055969238
    6. 'g' → logprob: -11.750287055969238
    7. 'gx' → logprob: -13.500287055969238
    8. '
' → logprob: -13.625287055969238
    9. 'gr' → logprob: -13.750287055969238
    10. '       ' → logprob: -14.125287055969238

Token 90: '_sum' (ID: 29859)
  Prédit: '_sum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sum' → logprob: -0.00021021578868385404
    2. '_' → logprob: -8.50020980834961
    3. ' _' → logprob: -13.12520980834961
    4. '_s' → logprob: -13.25020980834961
    5. 'sum' → logprob: -13.87520980834961
    6. '_val' → logprob: -14.37520980834961
    7. ')_' → logprob: -14.62520980834961
    8. '__' → logprob: -15.37520980834961
    9. '=_' → logprob: -16.62520980834961
    10. ')' → logprob: -16.75020980834961

Token 91: ' ^=' (ID: 79665)
  Prédit: ' ^='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ^=' → logprob: -0.0003347506280988455
    2. ' ^' → logprob: -8.625334739685059
    3. '^' → logprob: -8.875334739685059
    4. ' ' → logprob: -11.125334739685059
    5. ' ' → logprob: -15.125334739685059
    6. ' |=' → logprob: -16.250335693359375
    7. ' =' → logprob: -16.375335693359375
    8. ' xor' → logprob: -17.375335693359375
    9. '	' → logprob: -17.625335693359375
    10. ')' → logprob: -17.750335693359375

Token 92: ' grund' (ID: 34475)
  Prédit: 'grund'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'grund' → logprob: -0.01821456104516983
    2. ' grund' → logprob: -4.018214702606201
    3. ' ' → logprob: -11.268214225769043
    4. 'grond' → logprob: -11.768214225769043
    5. '   ' → logprob: -11.893214225769043
    6. 'ground' → logprob: -12.018214225769043
    7. ' ' → logprob: -12.143214225769043
    8. 'gr' → logprob: -12.643214225769043
    9. '(' → logprob: -13.268214225769043
    10. 'gry' → logprob: -13.330714225769043

Token 93: 'y' (ID: 88)
  Prédit: 'y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -1.7432603272027336e-06
    2. 'yw' → logprob: -14.500001907348633
    3. 'gy' → logprob: -15.125001907348633
    4. ' y' → logprob: -15.875001907348633
    5. '(y' → logprob: -15.875001907348633
    6. 'yb' → logprob: -16.125001907348633
    7. 'y's' → logprob: -16.500001907348633
    8. 'w' → logprob: -16.500001907348633
    9. '[y' → logprob: -16.625001907348633
    10. 'wy' → logprob: -17.375001907348633

Token 94: '(w' (ID: 7420)
  Prédit: '(w'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(w' → logprob: -0.0790679082274437
    2. '(' → logprob: -2.5790679454803467
    3. ' (' → logprob: -8.704068183898926
    4. '((' → logprob: -12.079068183898926
    5. '(
' → logprob: -13.079068183898926
    6. '(b' → logprob: -13.204068183898926
    7. '(s' → logprob: -14.454068183898926
    8. '(

' → logprob: -15.079068183898926
    9. '(wx' → logprob: -15.079068183898926
    10. '(W' → logprob: -15.454068183898926

Token 95: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.006045997142791748
    2. ',b' → logprob: -5.131045818328857
    3. ' ,' → logprob: -9.131046295166016
    4. ',w' → logprob: -12.631046295166016
    5. 'b' → logprob: -13.131046295166016
    6. ',
' → logprob: -14.506046295166016
    7. ' ' → logprob: -14.631046295166016
    8. ')' → logprob: -14.881046295166016
    9. '',' → logprob: -15.006046295166016
    10. '   ' → logprob: -15.006046295166016

Token 96: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.03804183006286621
    2. ' b' → logprob: -3.288041830062866
    3. ' ' → logprob: -15.288042068481445
    4. '   ' → logprob: -16.413042068481445
    5. '	b' → logprob: -17.413042068481445
    6. ')b' → logprob: -17.538042068481445
    7. '
' → logprob: -18.038042068481445
    8. '  ' → logprob: -18.538042068481445
    9. '    ' → logprob: -18.538042068481445
    10. ' 
' → logprob: -18.788042068481445

Token 97: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.3544423381972592e-05
    2. ')
' → logprob: -11.50001335144043
    3. '))' → logprob: -13.25001335144043
    4. ' )' → logprob: -13.75001335144043
    5. '   ' → logprob: -15.25001335144043
    6. ')`' → logprob: -16.37501335144043
    7. ')

' → logprob: -17.00001335144043
    8. '       ' → logprob: -17.00001335144043
    9. ')))' → logprob: -17.25001335144043
    10. '`)' → logprob: -17.87501335144043

Token 98: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.39550140500068665
    2. '   ' → logprob: -1.1455013751983643
    3. 'if' → logprob: -5.395501613616943
    4. ' if' → logprob: -6.020501613616943
    5. '    
' → logprob: -7.270501613616943
    6. 'print' → logprob: -7.770501613616943
    7. '```' → logprob: -8.020501136779785
    8. '  
' → logprob: -10.145501136779785
    9. '
' → logprob: -10.270501136779785
    10. '

' → logprob: -10.895501136779785

Token 99: ' print' (ID: 2123)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.6968738436698914
    2. '
' → logprob: -1.4468739032745361
    3. 'print' (adapté à ' print') → logprob: -2.196873903274536
    4. 'if' → logprob: -2.821873903274536
    5. '   ' → logprob: -2.821873903274536
    6. ' print' → logprob: -3.321873903274536
    7. ' 
' → logprob: -8.946873664855957
    8. '\n' → logprob: -9.696873664855957
    9. '```' → logprob: -10.071873664855957
    10. '
' → logprob: -10.196873664855957

Token 100: '(' (ID: 7)
  Prédit: '("'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '("' → logprob: -0.13644000887870789
    2. '(' → logprob: -2.6364400386810303
    3. '('' → logprob: -2.8864400386810303
    4. '((' → logprob: -9.51144027709961
    5. '(("' → logprob: -9.88644027709961
    6. '(('' → logprob: -11.13644027709961
    7. '()' → logprob: -12.76144027709961
    8. '(""' → logprob: -13.13644027709961
    9. '(()' → logprob: -13.26144027709961
    10. '(
' → logprob: -13.63644027709961

Token 101: '0' (ID: 15)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '"' → logprob: -0.10586684197187424
    2. '"A' → logprob: -2.9808669090270996
    3. ''' → logprob: -3.6058669090270996
    4. '"W' → logprob: -4.3558669090271
    5. ''A' → logprob: -4.8558669090271
    6. ''"' → logprob: -7.3558669090271
    7. ' "' → logprob: -8.855866432189941
    8. '"I' → logprob: -9.105866432189941
    9. '"'' → logprob: -9.230866432189941
    10. '("' → logprob: -9.355866432189941

Token 102: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.0001254693343071267
    2. 'if' → logprob: -9.000125885009766
    3. ')' → logprob: -13.375125885009766
    4. ' ' → logprob: -14.750125885009766
    5. '	if' → logprob: -16.125125885009766
    6. 'x' → logprob: -18.250125885009766
    7. ' i' → logprob: -18.625125885009766
    8. ' )' → logprob: -18.625125885009766
    9. '  ' → logprob: -19.000125885009766
    10. '   ' → logprob: -19.125125885009766

Token 103: ' xor' (ID: 106402)
  Prédit: ' xor'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' xor' → logprob: -0.04321042448282242
    2. 'xor' → logprob: -3.168210506439209
    3. ' not' → logprob: -8.91821002960205
    4. ' ' → logprob: -10.04321002960205
    5. ' x' → logprob: -11.54321002960205
    6. '(x' → logprob: -11.66821002960205
    7. 'not' → logprob: -12.29321002960205
    8. 'x' → logprob: -13.29321002960205
    9. ' (' → logprob: -13.54321002960205
    10. ' ' → logprob: -13.66821002960205

Token 104: '_sum' (ID: 29859)
  Prédit: '_sum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sum' → logprob: -2.4868770196917467e-05
    2. '_s' → logprob: -10.875024795532227
    3. '_' → logprob: -12.625024795532227
    4. 'sum' → logprob: -13.000024795532227
    5. ' _' → logprob: -15.500024795532227
    6. '__' → logprob: -16.875024795532227
    7. '_sym' → logprob: -17.375024795532227
    8. '_
' → logprob: -17.875024795532227
    9. ' sum' → logprob: -18.000024795532227
    10. 's' → logprob: -18.500024795532227

Token 105: ' !=' (ID: 1666)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.16314275562763214
    2. '==' → logprob: -1.9131428003311157
    3. ' else' → logprob: -5.913142681121826
    4. ' ' → logprob: -9.288143157958984
    5. 'else' → logprob: -9.288143157958984
    6. '=' → logprob: -11.038143157958984
    7. '0' → logprob: -12.288143157958984
    8. ')' → logprob: -12.913143157958984
    9. ' =' → logprob: -14.163143157958984
    10. ' ' → logprob: -14.663143157958984

Token 106: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.4740837514400482
    2. '0' → logprob: -0.9740837812423706
    3. ' ' → logprob: -12.84908390045166
    4. '<|end|>' → logprob: -12.84908390045166
    5. ' 
' → logprob: -14.66158390045166
    6. '  ' → logprob: -15.41158390045166
    7. '1' → logprob: -15.59908390045166
    8. '   ' → logprob: -15.84908390045166
    9. '```' → logprob: -16.099082946777344
    10. '    ' → logprob: -16.411582946777344

Token 107: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.009756323881447315
    2. ' ' → logprob: -4.634756088256836
    3. ' ' → logprob: -16.572256088256836
    4. '   ' → logprob: -17.134756088256836
    5. '1' → logprob: -17.384756088256836
    6. '  ' → logprob: -17.447256088256836
    7. '<|end|>' → logprob: -17.947256088256836
    8. '۰' → logprob: -18.072256088256836
    9. '```' → logprob: -18.134756088256836
    10. ')' → logprob: -18.447256088256836

Token 108: ' else' (ID: 1203)
  Prédit: ' else'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' else' → logprob: -0.0067170290276408195
    2. 'else' → logprob: -5.006717205047607
    3. ' ' → logprob: -13.38171672821045
    4. '	else' → logprob: -16.256717681884766
    5. ')' → logprob: -17.506717681884766
    6. '   ' → logprob: -18.131717681884766
    7. ' )' → logprob: -18.631717681884766
    8. '0' → logprob: -18.881717681884766
    9. '```' → logprob: -18.881717681884766
    10. '    ' → logprob: -19.131717681884766

Token 109: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00193149340339005
    2. ' ' → logprob: -6.251931667327881
    3. '   ' → logprob: -13.626931190490723
    4. '2' → logprob: -13.626931190490723
    5. '0' → logprob: -15.501931190490723
    6. '"' → logprob: -15.876931190490723
    7. '  ' → logprob: -16.62693214416504
    8. '
' → logprob: -16.75193214416504
    9. ' ' → logprob: -16.75193214416504
    10. '`' → logprob: -17.43943214416504

Token 110: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.093505099765025e-05
    2. ' ' → logprob: -11.000020980834961
    3. '2' → logprob: -12.500020980834961
    4. '-' → logprob: -15.375020980834961
    5. '0' → logprob: -17.12502098083496
    6. '(' → logprob: -17.43752098083496
    7. '   ' → logprob: -17.50002098083496
    8. '"' → logprob: -17.56252098083496
    9. '
' → logprob: -18.12502098083496
    10. '  ' → logprob: -18.31252098083496

Token 111: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -2.1008713702030946e-06
    2. ' )' → logprob: -13.375001907348633
    3. ')
' → logprob: -15.250001907348633
    4. ')`' → logprob: -16.250001907348633
    5. '))' → logprob: -16.625001907348633
    6. '`)' → logprob: -17.875001907348633
    7. ')}' → logprob: -18.375001907348633
    8. '())' → logprob: -18.625001907348633
    9. '）' → logprob: -18.875001907348633
    10. '),' → logprob: -20.250001907348633

Token 112: 'if' (ID: 366)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.8158427476882935
    2. '<|end|>' → logprob: -1.1908427476882935
    3. '
' → logprob: -2.065842628479004
    4. '\n' → logprob: -2.690842628479004
    5. ' ' → logprob: -3.190842628479004
    6. ' 
' → logprob: -5.315842628479004
    7. '```' → logprob: -5.565842628479004
    8. '#' → logprob: -6.190842628479004
    9. 'newline' → logprob: -6.565842628479004
    10. '  
' → logprob: -6.815842628479004

Token 113: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.00026658078422769904
    2. '__' → logprob: -8.250267028808594
    3. ' ' → logprob: -13.000267028808594
    4. ' _' → logprob: -13.250267028808594
    5. '_' → logprob: -14.000267028808594
    6. '_name' → logprob: -16.125267028808594
    7. ' ' → logprob: -16.250267028808594
    8. ' ‌' → logprob: -16.625267028808594
    9. ' ___' → logprob: -17.000267028808594
    10. ' ' → logprob: -17.375267028808594

Token 114: 'name' (ID: 897)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '__' → logprob: -0.7470148205757141
    2. ' ==' → logprob: -1.4970147609710693
    3. '.__' → logprob: -1.4970147609710693
    4. ' __' → logprob: -3.2470147609710693
    5. '==' → logprob: -3.7470147609710693
    6. '.' → logprob: -4.997014999389648
    7. ' .' → logprob: -5.497014999389648
    8. '.py' → logprob: -6.372014999389648
    9. '__.__' → logprob: -6.747014999389648
    10. '<|end|>' → logprob: -7.497014999389648

Token 115: '__' (ID: 771)
  Prédit: '__'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.00012809180771000683
    2. '__.__' → logprob: -9.125127792358398
    3. '==' → logprob: -11.500127792358398
    4. '_' → logprob: -12.875127792358398
    5. ' ==' → logprob: -13.125127792358398
    6. '__.' → logprob: -13.625127792358398
    7. '__["' → logprob: -13.750127792358398
    8. '__[' → logprob: -15.125127792358398
    9. '__":
' → logprob: -15.375127792358398
    10. ' __' → logprob: -15.500127792358398

Token 116: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.13604968786239624
    2. '==' → logprob: -2.386049747467041
    3. '__' → logprob: -3.761049747467041
    4. '.' → logprob: -5.011049747467041
    5. '.__' → logprob: -5.386049747467041
    6. '=="' → logprob: -8.886049270629883
    7. ' .' → logprob: -9.386049270629883
    8. '__.__' → logprob: -9.386049270629883
    9. '=' → logprob: -9.636049270629883
    10. '.startswith' → logprob: -10.011049270629883

Token 117: ' "__' (ID: 27367)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.5233228206634521
    2. '"' → logprob: -0.8983228206634521
    3. ' "' → logprob: -9.148323059082031
    4. ' '' → logprob: -9.398323059082031
    5. ' "__' → logprob: -12.273323059082031
    6. ' '__' → logprob: -12.898323059082031
    7. '__' → logprob: -13.523323059082031
    8. '"user' → logprob: -14.398323059082031
    9. ' ' → logprob: -15.148323059082031
    10. ''user' → logprob: -15.648323059082031

Token 118: 'main' (ID: 7731)
  Prédit: 'main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.18062099814414978
    2. '__' → logprob: -1.8056210279464722
    3. '"' → logprob: -7.930621147155762
    4. '_main' → logprob: -8.305621147155762
    5. ' "__' → logprob: -9.555621147155762
    6. '__":
' → logprob: -9.805621147155762
    7. 'name' → logprob: -10.180621147155762
    8. '___' → logprob: -10.805621147155762
    9. 'python' → logprob: -11.180621147155762
    10. 'py' → logprob: -11.180621147155762

Token 119: '__":
' (ID: 49892)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.6950932741165161
    2. '__":
' → logprob: -0.6950932741165161
    3. '__.' → logprob: -7.195093154907227
    4. '__:' → logprob: -7.195093154907227
    5. '__':
' → logprob: -8.445093154907227
    6. '__["' → logprob: -9.070093154907227
    7. '__.__' → logprob: -10.070093154907227
    8. '.__' → logprob: -10.695093154907227
    9. '__("' → logprob: -11.820093154907227
    10. '.' → logprob: -11.820093154907227

Token 120: '   ' (ID: 271)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.02040010318160057
    2. ' 
' → logprob: -5.145400047302246
    3. 'main' → logprob: -5.270400047302246
    4. '   ' → logprob: -5.645400047302246
    5. ' ' → logprob: -6.145400047302246
    6. '	main' → logprob: -6.520400047302246
    7. '    
' → logprob: -7.520400047302246
    8. '  
' → logprob: -7.895400047302246
    9. ' ' → logprob: -8.270400047302246
    10. ' __' → logprob: -8.645400047302246

Token 121: ' main' (ID: 2758)
  Prédit: ' main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.47409674525260925
    2. 'main' (adapté à ' main') → logprob: -0.9740967750549316
    3. '	main' → logprob: -10.849096298217773
    4. '   ' → logprob: -15.349096298217773
    5. '_main' → logprob: -16.849096298217773
    6. '(main' → logprob: -17.974096298217773
    7. '.main' → logprob: -18.224096298217773
    8. ' ' → logprob: -18.974096298217773
    9. 'maine' → logprob: -19.349096298217773
    10. ' ' → logprob: -19.724096298217773

Token 122: '()' (ID: 416)
  Prédit: '()'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.027465764433145523
    2. '(' → logprob: -3.7774658203125
    3. '()
' → logprob: -6.1524658203125
    4. '
' → logprob: -6.9024658203125
    5. '\n' → logprob: -8.0274658203125
    6. ')' → logprob: -8.2774658203125
    7. '<|end|>' → logprob: -8.9024658203125
    8. '(
' → logprob: -9.2774658203125
    9. '```' → logprob: -9.4024658203125
    10. '\' → logprob: -9.7774658203125


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 120
Tokens correctement prédits (1ère position, stricte): 53
Tokens correctement prédits (1ère position, avec adaptation): 57
Tokens correctement prédits (top 10): 102
Précision stricte (1ère position): 44.17%
Précision adaptée (1ère position): 47.50%
Précision (top 10): 85.00%
================================================================================
