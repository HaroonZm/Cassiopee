================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:13:16
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
import sys

input = sys.stdin.readline

def neighbors(x, y):
    return [(x-1,y),(x+1,y),(x,y-1),(x,y+1)]

while True:
    n = int(input())
    if n == 0:
        break

    heads = set()
    foots = set()
    for _ in range(n):
        x, y, d = input().split()
        x, y = int(x), int(y)
        if d == 'x':
            h = (x, y)
            f = (x+1, y)
        else:
            h = (x, y)
            f = (x, y+1)
        heads.add(h)
        foots.add(f)

    # Check if any foot adjacent to a head (other than his own)
    bad = False
    for f in foots:
        for nb in neighbors(*f):
            if nb in heads:
                if nb not in foots:
                    # nb is a head cell, f is foot of different futon
                    bad = True
                    break
        if bad:
            break

    print("No" if bad else "Yes")
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'import' (ID: 561)
  → Token d'amorce (pas de prédiction)

Token 1: ' sys' (ID: 12228)
  → Token d'amorce (pas de prédiction)

Token 2: '

' (ID: 279)
  → Token d'amorce (pas de prédiction)

Token 3: 'input' (ID: 2586)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.03585657849907875
    2. '\n' → logprob: -4.0358567237854
    3. 'import' → logprob: -4.7858567237854
    4. '<|end|>' → logprob: -5.2858567237854
    5. '\' → logprob: -7.0358567237854
    6. '<|end|>' → logprob: -7.5358567237854
    7. 'newline' → logprob: -7.9108567237854
    8. ',' → logprob: -8.160856246948242
    9. '[' → logprob: -8.285856246948242
    10. '' → logprob: -8.285856246948242

Token 4: ' =' (ID: 314)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.011367402039468288
    2. '.' → logprob: -4.511367321014404
    3. ')' → logprob: -9.261367797851562
    4. '()' → logprob: -9.886367797851562
    5. '[' → logprob: -10.261367797851562
    6. '_' → logprob: -10.386367797851562
    7. '(
' → logprob: -10.636367797851562
    8. ' (' → logprob: -10.636367797851562
    9. '(.)' → logprob: -11.511367797851562
    10. '('' → logprob: -12.011367797851562

Token 5: ' sys' (ID: 12228)
  Prédit: ' sys'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sys' → logprob: -0.10476001352071762
    2. 'sys' → logprob: -2.354759931564331
    3. ' input' → logprob: -5.97976016998291
    4. 'input' → logprob: -6.22976016998291
    5. ' ' → logprob: -10.97976016998291
    6. '(sys' → logprob: -11.22976016998291
    7. '	sys' → logprob: -12.10476016998291
    8. '=sys' → logprob: -12.10476016998291
    9. ' system' → logprob: -14.47976016998291
    10. '```' → logprob: -14.85476016998291

Token 6: '.stdin' (ID: 93480)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -8.363617962459102e-05
    2. '.stdin' → logprob: -10.625083923339844
    3. '.input' → logprob: -11.000083923339844
    4. '.import' → logprob: -11.625083923339844
    5. ' .' → logprob: -11.750083923339844
    6. '.readline' → logprob: -11.750083923339844
    7. '.`' → logprob: -12.250083923339844
    8. '[' → logprob: -13.500083923339844
    9. '.argv' → logprob: -13.625083923339844
    10. '.stdout' → logprob: -13.875083923339844

Token 7: '.readline' (ID: 74673)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.009866701439023018
    2. '.readline' → logprob: -4.759866714477539
    3. '.read' → logprob: -6.759866714477539
    4. ' .' → logprob: -11.009866714477539
    5. '[' → logprob: -11.384866714477539
    6. '.Read' → logprob: -11.509866714477539
    7. '```' → logprob: -11.509866714477539
    8. 'read' → logprob: -12.009866714477539
    9. '<|end|>' → logprob: -12.384866714477539
    10. '.\' → logprob: -12.759866714477539

Token 8: '

' (ID: 279)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.28634607791900635
    2. '(' → logprob: -1.4113460779190063
    3. '(
' → logprob: -6.411345958709717
    4. '()
' → logprob: -6.411345958709717
    5. '().' → logprob: -6.661345958709717
    6. '
' → logprob: -9.036346435546875
    7. '\' → logprob: -9.661346435546875
    8. '()\' → logprob: -9.661346435546875
    9. '\n' → logprob: -9.786346435546875
    10. '()

' → logprob: -9.911346435546875

Token 9: 'def' (ID: 1314)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.04984011873602867
    2. '(' → logprob: -3.049840211868286
    3. '().' → logprob: -6.799839973449707
    4. '()
' → logprob: -9.924839973449707
    5. '()

' → logprob: -10.924839973449707
    6. '()\' → logprob: -10.924839973449707
    7. 'def' → logprob: -11.924839973449707
    8. '(
' → logprob: -12.049839973449707
    9. '()`' → logprob: -12.174839973449707
    10. '#' → logprob: -12.174839973449707

Token 10: ' neighbors' (ID: 31655)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.008538693189620972
    2. ' space' → logprob: -5.258538722991943
    3. ' main' → logprob: -6.383538722991943
    4. ' my' → logprob: -8.008538246154785
    5. '_' → logprob: -8.383538246154785
    6. ' calculate' → logprob: -8.758538246154785
    7. ' foo' → logprob: -9.258538246154785
    8. ' add' → logprob: -9.383538246154785
    9. ' read' → logprob: -9.508538246154785
    10. ' process' → logprob: -9.758538246154785

Token 11: '(x' (ID: 4061)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0003156817110721022
    2. '():' → logprob: -9.75031566619873
    3. '(node' → logprob: -9.87531566619873
    4. '(:' → logprob: -10.12531566619873
    5. '(x' → logprob: -10.75031566619873
    6. '_' → logprob: -10.87531566619873
    7. ' (' → logprob: -10.87531566619873
    8. '(n' → logprob: -11.00031566619873
    9. '(user' → logprob: -11.75031566619873
    10. '(s' → logprob: -12.25031566619873

Token 12: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.001399283530190587
    2. '):' → logprob: -6.626399517059326
    3. ')' → logprob: -9.876399040222168
    4. ' ,' → logprob: -11.126399040222168
    5. ',y' → logprob: -12.751399040222168
    6. ',
' → logprob: -13.376399040222168
    7. ':' → logprob: -14.501399040222168
    8. ',n' → logprob: -14.626399040222168
    9. ',x' → logprob: -14.876399040222168
    10. ',a' → logprob: -15.501399040222168

Token 13: ' y' (ID: 342)
  Prédit: ' y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' y' → logprob: -0.16023559868335724
    2. 'y' → logprob: -1.9102356433868408
    3. '	y' → logprob: -11.660235404968262
    4. ' ' → logprob: -13.285235404968262
    5. '    ' → logprob: -14.785235404968262
    6. '   ' → logprob: -15.535235404968262
    7. ',' → logprob: -15.785235404968262
    8. ')y' → logprob: -16.035236358642578
    9. ',y' → logprob: -16.535236358642578
    10. ')' → logprob: -16.785236358642578

Token 14: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.07428248226642609
    2. ',' → logprob: -2.69928240776062
    3. ')' → logprob: -5.449282646179199
    4. ' ):' → logprob: -11.5742826461792
    5. ':' → logprob: -11.6992826461792
    6. '):
' → logprob: -12.1992826461792
    7. '),' → logprob: -12.3242826461792
    8. ''):' → logprob: -13.0742826461792
    9. ' ,' → logprob: -13.5742826461792
    10. ' ' → logprob: -14.0742826461792

Token 15: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.20435172319412231
    2. '   ' → logprob: -1.9543516635894775
    3. '):' → logprob: -3.4543516635894775
    4. ',' → logprob: -5.329351902008057
    5. '():' → logprob: -5.704351902008057
    6. '<|end|>' → logprob: -6.954351902008057
    7. '(' → logprob: -7.704351902008057
    8. ' :' → logprob: -8.329351425170898
    9. ':**' → logprob: -8.704351425170898
    10. '[' → logprob: -8.704351425170898

Token 16: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.003354401094838977
    2. ' for' → logprob: -7.128354549407959
    3. '    ' → logprob: -7.878354549407959
    4. ':' → logprob: -8.1283540725708
    5. '[]' → logprob: -8.1283540725708
    6. 'neighbors' → logprob: -8.1283540725708
    7. ' neighbors' → logprob: -8.2533540725708
    8. ' return' → logprob: -8.3783540725708
    9. '[' → logprob: -9.0033540725708
    10. 'return' (adapté à ' return') → logprob: -9.2533540725708

Token 17: ' [(' (ID: 43900)
  Prédit: '[('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[(' → logprob: -0.029768195003271103
    2. ' [(' → logprob: -4.279767990112305
    3. '[' → logprob: -4.904767990112305
    4. '[x' → logprob: -5.404767990112305
    5. '[
' → logprob: -6.029767990112305
    6. ' [' → logprob: -7.279767990112305
    7. ' [
' → logprob: -8.279767990112305
    8. '[]' → logprob: -8.529767990112305
    9. ' ' → logprob: -11.904767990112305
    10. '[((' → logprob: -12.029767990112305

Token 18: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -1.9146995327901095e-05
    2. '(x' → logprob: -11.000019073486328
    3. ' x' → logprob: -13.375019073486328
    4. '   ' → logprob: -14.125019073486328
    5. '	x' → logprob: -16.250019073486328
    6. ')x' → logprob: -17.250019073486328
    7. ',x' → logprob: -18.000019073486328
    8. ' (' → logprob: -19.000019073486328
    9. ''x' → logprob: -19.125019073486328
    10. '    ' → logprob: -19.625019073486328

Token 19: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.019848983734846115
    2. '+' → logprob: -4.019848823547363
    3. ' -' → logprob: -6.644848823547363
    4. ',' → logprob: -7.894848823547363
    5. ' +' → logprob: -10.894848823547363
    6. ' ' → logprob: -13.019848823547363
    7. '   ' → logprob: -14.019848823547363
    8. '1' → logprob: -14.269848823547363
    9. '-,' → logprob: -14.519848823547363
    10. '+,' → logprob: -14.519848823547363

Token 20: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.572941179503687e-05
    2. ' ' → logprob: -10.000045776367188
    3. ',' → logprob: -16.687545776367188
    4. '```' → logprob: -16.687545776367188
    5. '   ' → logprob: -17.500045776367188
    6. '<|end|>' → logprob: -17.687545776367188
    7. '-' → logprob: -18.187545776367188
    8. '১' → logprob: -18.562545776367188
    9. ')' → logprob: -18.562545776367188
    10. '0' → logprob: -18.687545776367188

Token 21: ',y' (ID: 16103)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -4.906711546937004e-05
    2. ',y' → logprob: -10.625048637390137
    3. ' ,' → logprob: -10.625048637390137
    4. ',
' → logprob: -16.125049591064453
    5. '   ' → logprob: -16.750049591064453
    6. 'y' → logprob: -16.750049591064453
    7. '‌,' → logprob: -17.000049591064453
    8. '```' → logprob: -17.375049591064453
    9. '`,' → logprob: -18.000049591064453
    10. '<|end|>' → logprob: -18.125049591064453

Token 22: '),(' (ID: 54876)
  Prédit: '),'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),' → logprob: -0.0147031769156456
    2. '),(' → logprob: -4.264703273773193
    3. ' ),' → logprob: -8.264702796936035
    4. '),
' → logprob: -8.514702796936035
    5. ')' → logprob: -9.889702796936035
    6. '),

' → logprob: -11.639702796936035
    7. ' ' → logprob: -11.764702796936035
    8. '   ' → logprob: -12.014702796936035
    9. ',' → logprob: -12.264702796936035
    10. ''),' → logprob: -13.639702796936035

Token 23: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.008692569099366665
    2. ' x' → logprob: -4.758692741394043
    3. 'y' → logprob: -9.633692741394043
    4. ' y' → logprob: -11.883692741394043
    5. ' ' → logprob: -12.383692741394043
    6. '	x' → logprob: -14.258692741394043
    7. '   ' → logprob: -14.883692741394043
    8. '    ' → logprob: -15.508692741394043
    9. ')x' → logprob: -15.883692741394043
    10. '  ' → logprob: -16.508691787719727

Token 24: '+' (ID: 10)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.21367910504341125
    2. '+' → logprob: -1.7136790752410889
    3. ',' → logprob: -4.838679313659668
    4. ',y' → logprob: -5.588679313659668
    5. ' ' → logprob: -7.838679313659668
    6. ' ,' → logprob: -10.463679313659668
    7. '   ' → logprob: -10.588679313659668
    8. ' +' → logprob: -10.838679313659668
    9. ' -' → logprob: -11.213679313659668
    10. ')' → logprob: -11.838679313659668

Token 25: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.13310004770755768
    2. 'y' → logprob: -2.1331000328063965
    3. '-' → logprob: -5.2581000328063965
    4. ',y' → logprob: -7.1331000328063965
    5. ',' → logprob: -9.883100509643555
    6. ' y' → logprob: -10.008100509643555
    7. ' ' → logprob: -10.258100509643555
    8. '0' → logprob: -11.133100509643555
    9. '```' → logprob: -13.383100509643555
    10. ' -' → logprob: -14.008100509643555

Token 26: ',y' (ID: 16103)
  Prédit: ',y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',y' → logprob: -0.005291157402098179
    2. ',' → logprob: -5.255290985107422
    3. ' ,' → logprob: -10.505290985107422
    4. ',x' → logprob: -11.380290985107422
    5. '),(' → logprob: -12.255290985107422
    6. ',user' → logprob: -12.505290985107422
    7. ',(' → logprob: -12.630290985107422
    8. '<|end|>' → logprob: -12.880290985107422
    9. ',n' → logprob: -14.130290985107422
    10. ',value' → logprob: -14.505290985107422

Token 27: '),(' (ID: 54876)
  Prédit: '),('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),(' → logprob: -0.01138260681182146
    2. '),' → logprob: -4.511382579803467
    3. ')' → logprob: -8.261383056640625
    4. ',(' → logprob: -10.011383056640625
    5. ',' → logprob: -10.886383056640625
    6. ' ),' → logprob: -11.886383056640625
    7. '),
' → logprob: -13.386383056640625
    8. ',y' → logprob: -13.511383056640625
    9. ' ' → logprob: -13.636383056640625
    10. '   ' → logprob: -14.386383056640625

Token 28: 'x' (ID: 87)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.051044199615716934
    2. 'x' → logprob: -3.051044225692749
    3. ' y' → logprob: -6.05104398727417
    4. '(y' → logprob: -10.426044464111328
    5. '(x' → logprob: -10.926044464111328
    6. ' x' → logprob: -11.176044464111328
    7. ' ' → logprob: -11.301044464111328
    8. '<|end|>' → logprob: -12.301044464111328
    9. ' (' → logprob: -12.676044464111328
    10. '   ' → logprob: -12.676044464111328

Token 29: ',y' (ID: 16103)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.6709455251693726
    2. ',' → logprob: -1.2959455251693726
    3. ',y' → logprob: -1.5459455251693726
    4. ')' → logprob: -7.420945644378662
    5. '),(' → logprob: -8.545945167541504
    6. '+' → logprob: -8.545945167541504
    7. ' ,' → logprob: -8.795945167541504
    8. ',j' → logprob: -9.045945167541504
    9. ',)' → logprob: -9.045945167541504
    10. ',(' → logprob: -9.420945167541504

Token 30: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -1.9623810658231378e-05
    2. '+' → logprob: -10.875020027160645
    3. ' -' → logprob: -15.000020027160645
    4. '-)' → logprob: -16.500019073486328
    5. '1' → logprob: -16.625019073486328
    6. ')' → logprob: -17.500019073486328
    7. ')]' → logprob: -19.125019073486328
    8. ' ' → logprob: -19.125019073486328
    9. '−' → logprob: -19.750019073486328
    10. '   ' → logprob: -20.125019073486328

Token 31: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -16.25
    3. ')' → logprob: -18.75
    4. '```' → logprob: -20.375
    5. '+' → logprob: -22.0
    6. '   ' → logprob: -22.125
    7. '１' → logprob: -22.25
    8. '১' → logprob: -22.375
    9. '),' → logprob: -22.375
    10. '۱' → logprob: -22.625

Token 32: '),(' (ID: 54876)
  Prédit: '),('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),(' → logprob: -0.007294843439012766
    2. '),' → logprob: -5.132294654846191
    3. ')' → logprob: -6.757294654846191
    4. ')]' → logprob: -8.757294654846191
    5. ',(' → logprob: -11.007294654846191
    6. ',' → logprob: -11.382294654846191
    7. ' ),' → logprob: -11.882294654846191
    8. ',y' → logprob: -12.007294654846191
    9. '),
' → logprob: -14.007294654846191
    10. ')}' → logprob: -14.382294654846191

Token 33: 'x' (ID: 87)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -4.4849443838757e-06
    2. ' y' → logprob: -12.375004768371582
    3. 'x' → logprob: -16.375003814697266
    4. ')y' → logprob: -17.875003814697266
    5. '	y' → logprob: -19.250003814697266
    6. ''y' → logprob: -20.000003814697266
    7. ' ' → logprob: -20.375003814697266
    8. '(y' → logprob: -21.000003814697266
    9. '```' → logprob: -21.000003814697266
    10. '   ' → logprob: -21.125003814697266

Token 34: ',y' (ID: 16103)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -3.054500666621607e-06
    2. ' +' → logprob: -13.37500286102295
    3. '<|end|>' → logprob: -14.37500286102295
    4. '+y' → logprob: -14.75000286102295
    5. ',' → logprob: -16.125003814697266
    6. '1' → logprob: -16.250003814697266
    7. '-' → logprob: -16.250003814697266
    8. ')' → logprob: -16.625003814697266
    9. ',y' → logprob: -16.875003814697266
    10. '+)' → logprob: -17.125003814697266

Token 35: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -1.9027791495318525e-05
    2. '-' → logprob: -11.500019073486328
    3. '1' → logprob: -12.125019073486328
    4. ' +' → logprob: -13.625019073486328
    5. '+)' → logprob: -13.750019073486328
    6. ')' → logprob: -14.000019073486328
    7. ')]' → logprob: -15.625019073486328
    8. '+
' → logprob: -17.625019073486328
    9. '2' → logprob: -18.375019073486328
    10. ' ' → logprob: -18.500019073486328

Token 36: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.816093228830141e-06
    2. '0' → logprob: -13.37500286102295
    3. ' ' → logprob: -14.12500286102295
    4. '+' → logprob: -15.00000286102295
    5. '```' → logprob: -16.750001907348633
    6. ')' → logprob: -17.000001907348633
    7. '-' → logprob: -18.125001907348633
    8. '2' → logprob: -18.250001907348633
    9. '   ' → logprob: -19.000001907348633
    10. '4' → logprob: -19.375001907348633

Token 37: ')]

' (ID: 56882)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.01860908977687359
    2. ')' → logprob: -4.018609046936035
    3. ']' → logprob: -7.768609046936035
    4. ')])' → logprob: -10.893609046936035
    5. ' )' → logprob: -11.268609046936035
    6. '])]' → logprob: -13.768609046936035
    7. ')],' → logprob: -14.143609046936035
    8. ')}' → logprob: -14.143609046936035
    9. '))' → logprob: -14.893609046936035
    10. '   ' → logprob: -15.018609046936035

Token 38: 'while' (ID: 7032)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.11819735169410706
    2. '
' → logprob: -2.243197441101074
    3. '```' → logprob: -6.243197441101074
    4. '<|end|>' → logprob: -6.743197441101074
    5. '\' → logprob: -7.118197441101074
    6. '

' → logprob: -7.368197441101074
    7. ':' → logprob: -8.743197441101074
    8. '\n' → logprob: -8.868197441101074
    9. '
' → logprob: -9.368197441101074
    10. 'for' → logprob: -9.743197441101074

Token 39: ' True' (ID: 6432)
  Prédit: ' True'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' True' → logprob: -0.011099820025265217
    2. 'True' → logprob: -4.511099815368652
    3. '(True' → logprob: -10.136099815368652
    4. ' input' → logprob: -11.886099815368652
    5. ' ' → logprob: -13.261099815368652
    6. ' not' → logprob: -13.511099815368652
    7. '1' → logprob: -14.386099815368652
    8. '=True' → logprob: -14.511099815368652
    9. ' len' → logprob: -15.261099815368652
    10. 'input' → logprob: -15.386099815368652

Token 40: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -2.558399319241289e-05
    2. ' :' → logprob: -11.500025749206543
    3. '):' → logprob: -12.250025749206543
    4. ':
' → logprob: -12.750025749206543
    5. ':**' → logprob: -12.875025749206543
    6. '():' → logprob: -13.000025749206543
    7. '   ' → logprob: -13.875025749206543
    8. ':def' → logprob: -15.375025749206543
    9. ',' → logprob: -15.625025749206543
    10. '':' → logprob: -15.750025749206543

Token 41: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.005982362665235996
    2. ' line' → logprob: -5.255982398986816
    3. 'line' → logprob: -7.380982398986816
    4. 'x' → logprob: -10.005982398986816
    5. 'try' → logprob: -10.505982398986816
    6. ' try' → logprob: -11.130982398986816
    7. 'n' → logprob: -11.755982398986816
    8. ' x' → logprob: -11.755982398986816
    9. '```' → logprob: -12.255982398986816
    10. '	line' → logprob: -12.380982398986816

Token 42: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' (adapté à ' n') → logprob: -0.7891218662261963
    2. ' line' → logprob: -1.4141218662261963
    3. 'line' → logprob: -2.0391218662261963
    4. ' n' → logprob: -2.9141218662261963
    5. 'try' → logprob: -3.5391218662261963
    6. '   ' → logprob: -3.9141218662261963
    7. 'N' → logprob: -4.039121627807617
    8. ' try' → logprob: -4.039121627807617
    9. 'x' → logprob: -5.039121627807617
    10. 'w' → logprob: -5.039121627807617

Token 43: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.06216004490852356
    2. '=' → logprob: -2.812160015106201
    3. '=int' → logprob: -9.06216049194336
    4. ' ' → logprob: -9.68716049194336
    5. '=input' → logprob: -11.68716049194336
    6. ',' → logprob: -13.18716049194336
    7. 'space' → logprob: -14.06216049194336
    8. '>' → logprob: -14.18716049194336
    9. '  ' → logprob: -14.56216049194336
    10. ' >' → logprob: -15.06216049194336

Token 44: ' int' (ID: 677)
  Prédit: ' int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.5760084390640259
    2. 'int' → logprob: -0.8260084390640259
    3. ' input' → logprob: -10.326008796691895
    4. 'input' → logprob: -10.951008796691895
    5. '=int' → logprob: -11.076008796691895
    6. ' ' → logprob: -13.326008796691895
    7. '(int' → logprob: -14.576008796691895
    8. '<int' → logprob: -14.951008796691895
    9. ' in' → logprob: -15.951008796691895
    10. '[int' → logprob: -16.076007843017578

Token 45: '(input' (ID: 10054)
  Prédit: '(input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.014288671314716339
    2. '(' → logprob: -4.264288902282715
    3. 'input' → logprob: -9.639288902282715
    4. '(sys' → logprob: -9.764288902282715
    5. ' (' → logprob: -13.264288902282715
    6. '()' → logprob: -15.389288902282715
    7. ' input' → logprob: -15.889288902282715
    8. '(
' → logprob: -16.1392879486084
    9. '(in' → logprob: -16.3892879486084
    10. '((' → logprob: -16.5142879486084

Token 46: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.03938191011548042
    2. '()' → logprob: -3.289381980895996
    3. '().' → logprob: -6.664381980895996
    4. ')' → logprob: -10.789381980895996
    5. '()))' → logprob: -10.914381980895996
    6. ' ())' → logprob: -11.164381980895996
    7. '();)' → logprob: -12.164381980895996
    8. '()
' → logprob: -13.539381980895996
    9. '())
' → logprob: -13.664381980895996
    10. '());' → logprob: -14.289381980895996

Token 47: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 48: ' if' (ID: 538)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 49: ' n' (ID: 297)
  Prédit: ' n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.06226208806037903
    2. ' not' → logprob: -2.8122620582580566
    3. 'n' → logprob: -8.187262535095215
    4. 'not' → logprob: -11.062262535095215
    5. '	n' → logprob: -15.562262535095215
    6. ' ' → logprob: -15.562262535095215
    7. ' ' → logprob: -15.687262535095215
    8. ' н' → logprob: -18.0622615814209
    9. '	not' → logprob: -18.0622615814209
    10. ' n't' → logprob: -18.3122615814209

Token 50: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.17992287874221802
    2. '==' → logprob: -1.8049228191375732
    3. ' <=' → logprob: -9.679923057556152
    4. '<=' → logprob: -9.804923057556152
    5. '=' → logprob: -11.054923057556152
    6. ')' → logprob: -11.179923057556152
    7. '<' → logprob: -11.679923057556152
    8. ' <' → logprob: -11.679923057556152
    9. '===' → logprob: -13.179923057556152
    10. ')==' → logprob: -13.179923057556152

Token 51: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.12692831456661224
    2. ' ' → logprob: -2.1269283294677734
    3. ' ' → logprob: -16.001928329467773
    4. '  ' → logprob: -16.501928329467773
    5. '   ' → logprob: -17.376928329467773
    6. ')' → logprob: -17.626928329467773
    7. '    ' → logprob: -18.376928329467773
    8. '_' → logprob: -18.876928329467773
    9. '۰' → logprob: -18.939428329467773
    10. '```' → logprob: -19.001928329467773

Token 52: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.004080658778548241
    2. ' ' → logprob: -5.504080772399902
    3. '-' → logprob: -14.004080772399902
    4. ')' → logprob: -14.379080772399902
    5. ' -' → logprob: -14.754080772399902
    6. '  ' → logprob: -16.254079818725586
    7. '1' → logprob: -16.379079818725586
    8. '    ' → logprob: -16.629079818725586
    9. '   ' → logprob: -16.754079818725586
    10. '```' → logprob: -17.629079818725586

Token 53: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.00039349604048766196
    2. ':
' → logprob: -7.875393390655518
    3. '   ' → logprob: -11.500393867492676
    4. ' :' → logprob: -14.000393867492676
    5. ':return' → logprob: -14.000393867492676
    6. '):' → logprob: -14.250393867492676
    7. '.' → logprob: -15.000393867492676
    8. '	break' → logprob: -16.50039291381836
    9. ')' → logprob: -16.50039291381836
    10. ' break' → logprob: -16.75039291381836

Token 54: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.11336345970630646
    2. '   ' → logprob: -2.23836350440979
    3. ' break' → logprob: -8.238363265991211
    4. '	break' → logprob: -8.988363265991211
    5. ' ' → logprob: -10.488363265991211
    6. '<|end|>' → logprob: -10.488363265991211
    7. 'break' → logprob: -10.988363265991211
    8. '     ' → logprob: -11.113363265991211
    9. '    ' → logprob: -11.363363265991211
    10. '  ' → logprob: -11.863363265991211

Token 55: ' break' (ID: 2338)
  Prédit: ' break'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' break' → logprob: -0.2772305905818939
    2. 'break' (adapté à ' break') → logprob: -1.5272306203842163
    3. '   ' → logprob: -3.9022305011749268
    4. '	break' → logprob: -5.777230739593506
    5. '       ' → logprob: -6.402230739593506
    6. '_break' → logprob: -11.277230262756348
    7. '
' → logprob: -12.402230262756348
    8. ' ' → logprob: -12.652230262756348
    9. '```' → logprob: -12.652230262756348
    10. '-break' → logprob: -12.777230262756348

Token 56: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 57: '   ' (ID: 271)
  Prédit: 'grid'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'grid' → logprob: -0.3112020790576935
    2. 'graph' → logprob: -2.061202049255371
    3. 'matrix' → logprob: -3.186202049255371
    4. 'visited' → logprob: -3.186202049255371
    5. ' grid' → logprob: -4.061202049255371
    6. '   ' → logprob: -4.436202049255371
    7. 'board' → logprob: -4.811202049255371
    8. ' graph' → logprob: -5.561202049255371
    9. ' visited' → logprob: -6.186202049255371
    10. 'field' → logprob: -6.311202049255371

Token 58: ' heads' (ID: 24696)
  Prédit: 'grid'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'grid' → logprob: -0.29674386978149414
    2. 'graph' → logprob: -2.296743869781494
    3. 'matrix' → logprob: -2.921743869781494
    4. 'board' → logprob: -3.046743869781494
    5. ' grid' → logprob: -4.046743869781494
    6. 'map' → logprob: -4.796743869781494
    7. '   ' → logprob: -5.671743869781494
    8. 'maze' → logprob: -5.671743869781494
    9. 'visited' → logprob: -5.671743869781494
    10. ' graph' → logprob: -5.796743869781494

Token 59: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.046336688101291656
    2. '=' → logprob: -3.1713366508483887
    3. ',' → logprob: -6.046336650848389
    4. '   ' → logprob: -7.546336650848389
    5. '_positions' → logprob: -9.171337127685547
    6. ')' → logprob: -9.296337127685547
    7. '[' → logprob: -9.921337127685547
    8. '=[]' → logprob: -10.046337127685547
    9. '_' → logprob: -10.546337127685547
    10. 's' → logprob: -10.671337127685547

Token 60: ' set' (ID: 920)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.044581856578588486
    2. ' []' → logprob: -3.669581890106201
    3. '[' → logprob: -4.919581890106201
    4. '{}' → logprob: -5.294581890106201
    5. '[int' → logprob: -6.419581890106201
    6. 'set' → logprob: -6.669581890106201
    7. '[n' → logprob: -6.794581890106201
    8. '[input' → logprob: -7.919581890106201
    9. ' [' → logprob: -8.044581413269043
    10. '[list' → logprob: -8.419581413269043

Token 61: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.001535216229967773
    2. '(' → logprob: -6.876535415649414
    3. '([(' → logprob: -8.126535415649414
    4. '((' → logprob: -9.626535415649414
    5. '([' → logprob: -9.876535415649414
    6. '([]' → logprob: -9.876535415649414
    7. '(input' → logprob: -11.501535415649414
    8. '()
' → logprob: -12.001535415649414
    9. ' ()' → logprob: -12.501535415649414
    10. '(map' → logprob: -12.751535415649414

Token 62: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6406513452529907
    2. '<|end|>' → logprob: -0.7656513452529907
    3. '    
' → logprob: -6.515651226043701
    4. '<|end|>' → logprob: -6.640651226043701
    5. '    ' → logprob: -6.765651226043701
    6. 'heads' → logprob: -7.015651226043701
    7. 'for' → logprob: -7.140651226043701
    8. ')' → logprob: -7.640651226043701
    9. '  ' → logprob: -7.890651226043701
    10. ' ' → logprob: -8.01565170288086

Token 63: ' foot' (ID: 6428)
  Prédit: 'tails'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'tails' → logprob: -0.45573192834854126
    2. 'for' → logprob: -1.2057318687438965
    3. 'body' → logprob: -4.2057318687438965
    4. ' for' → logprob: -4.5807318687438965
    5. 'tail' → logprob: -4.8307318687438965
    6. 'b' → logprob: -4.8307318687438965
    7. ' tails' → logprob: -5.4557318687438965
    8. 'snake' → logprob: -5.9557318687438965
    9. 'positions' → logprob: -6.3307318687438965
    10. 'heads' → logprob: -6.7057318687438965

Token 64: 's' (ID: 82)
  Prédit: 's'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.09351442754268646
    2. 'prints' → logprob: -2.4685144424438477
    3. 'print' → logprob: -6.468514442443848
    4. ' =' → logprob: -6.843514442443848
    5. 'steps' → logprob: -6.968514442443848
    6. '=' → logprob: -7.593514442443848
    7. 'ers' → logprob: -7.968514442443848
    8. 'positions' → logprob: -10.718514442443848
    9. 'paths' → logprob: -11.093514442443848
    10. '_positions' → logprob: -11.218514442443848

Token 65: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.07070989161729813
    2. '=' → logprob: -2.6957099437713623
    3. 's' → logprob: -7.820709705352783
    4. '<|end|>' → logprob: -8.445710182189941
    5. '   ' → logprob: -9.070710182189941
    6. ' ' → logprob: -11.195710182189941
    7. ')' → logprob: -12.070710182189941
    8. '=set' → logprob: -12.070710182189941
    9. '<|end|>' → logprob: -12.695710182189941
    10. '```' → logprob: -12.945710182189941

Token 66: ' set' (ID: 920)
  Prédit: 'set'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'set' → logprob: -0.04972602427005768
    2. ' set' → logprob: -3.0497260093688965
    3. '[]' → logprob: -7.4247260093688965
    4. ' []' → logprob: -8.549726486206055
    5. '{}' → logprob: -8.799726486206055
    6. '(set' → logprob: -9.424726486206055
    7. '{' → logprob: -10.299726486206055
    8. '=set' → logprob: -10.424726486206055
    9. '()' → logprob: -11.049726486206055
    10. ' ' → logprob: -11.924726486206055

Token 67: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0008174888207577169
    2. '(' → logprob: -7.12581729888916
    3. '()
' → logprob: -12.50081729888916
    4. '   ' → logprob: -13.25081729888916
    5. ' ()' → logprob: -13.62581729888916
    6. '())' → logprob: -13.75081729888916
    7. '()]' → logprob: -13.87581729888916
    8. '(),' → logprob: -14.37581729888916
    9. '()}' → logprob: -14.50081729888916
    10. '();' → logprob: -14.50081729888916

Token 68: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.054710861295461655
    2. '<|end|>' → logprob: -3.429710865020752
    3. '    
' → logprob: -4.929710865020752
    4. 'for' → logprob: -5.429710865020752
    5. ' for' → logprob: -5.554710865020752
    6. '
' → logprob: -5.804710865020752
    7. '    ' → logprob: -7.679710865020752
    8. '<|end|>' → logprob: -8.179710388183594
    9. '  ' → logprob: -8.679710388183594
    10. '```' → logprob: -8.679710388183594

Token 69: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.9177091717720032
    2. 'for' (adapté à ' for') → logprob: -1.0427091121673584
    3. '   ' → logprob: -1.4177091121673584
    4. 'positions' → logprob: -6.4177093505859375
    5. ' positions' → logprob: -7.0427093505859375
    6. 'cells' → logprob: -7.7927093505859375
    7. ' cells' → logprob: -8.167709350585938
    8. 'grid' → logprob: -8.292709350585938
    9. ' grid' → logprob: -8.667709350585938
    10. 'pairs' → logprob: -8.667709350585938

Token 70: ' _' (ID: 1175)
  Prédit: ' _'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' _' → logprob: -0.0015165306394919753
    2. '_' → logprob: -6.501516342163086
    3. ' i' → logprob: -11.751516342163086
    4. ' ' → logprob: -12.001516342163086
    5. ' ' → logprob: -16.001516342163086
    6. ' ‌' → logprob: -17.251516342163086
    7. ' __' → logprob: -17.626516342163086
    8. '_i' → logprob: -17.751516342163086
    9. ' range' → logprob: -18.001516342163086
    10. 'i' → logprob: -18.376516342163086

Token 71: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.42954039573669434
    2. 'in' → logprob: -1.0545403957366943
    3. 'range' → logprob: -7.554540634155273
    4. 'import' → logprob: -9.304540634155273
    5. ' ' → logprob: -9.679540634155273
    6. 'i' → logprob: -10.054540634155273
    7. '1' → logprob: -11.179540634155273
    8. '```' → logprob: -11.304540634155273
    9. '0' → logprob: -11.554540634155273
    10. ',' → logprob: -11.554540634155273

Token 72: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.003190309274941683
    2. ' range' → logprob: -5.753190517425537
    3. 'ran' → logprob: -12.878190040588379
    4. ' ' → logprob: -13.003190040588379
    5. '	range' → logprob: -13.253190040588379
    6. 'rang' → logprob: -13.503190040588379
    7. '(range' → logprob: -13.878190040588379
    8. 'r' → logprob: -13.878190040588379
    9. 'ange' → logprob: -14.253190040588379
    10. 'ra' → logprob: -14.878190040588379

Token 73: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.026044458150863647
    2. '(' → logprob: -4.4010443687438965
    3. ' (' → logprob: -4.4010443687438965
    4. ' n' → logprob: -6.7760443687438965
    5. 'n' → logprob: -10.526044845581055
    6. ' ' → logprob: -12.026044845581055
    7. '(range' → logprob: -13.276044845581055
    8. '(
' → logprob: -14.026044845581055
    9. ' range' → logprob: -14.401044845581055
    10. '	n' → logprob: -14.526044845581055

Token 74: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0013973800232633948
    2. ' ):' → logprob: -7.251397609710693
    3. '):
' → logprob: -7.376397609710693
    4. '   ' → logprob: -10.876397132873535
    5. ':' → logprob: -11.376397132873535
    6. ')' → logprob: -11.501397132873535
    7. '):
' → logprob: -11.751397132873535
    8. '*' → logprob: -12.001397132873535
    9. ' ' → logprob: -13.751397132873535
    10. '():' → logprob: -14.126397132873535

Token 75: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5995035171508789
    2. '   ' → logprob: -0.8495035171508789
    3. '<|end|>' → logprob: -4.349503517150879
    4. '    ' → logprob: -5.349503517150879
    5. ' ' → logprob: -6.599503517150879
    6. '    
' → logprob: -6.974503517150879
    7. '  ' → logprob: -7.099503517150879
    8. '	   ' → logprob: -7.724503517150879
    9. '      ' → logprob: -7.849503517150879
    10. '<|end|>' → logprob: -7.974503517150879

Token 76: ' x' (ID: 1215)
  Prédit: ' x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.07460226118564606
    2. 'x' (adapté à ' x') → logprob: -2.6996023654937744
    3. ' s' → logprob: -5.699602127075195
    4. ' r' → logprob: -8.449602127075195
    5. 's' → logprob: -8.949602127075195
    6. ' h' → logprob: -9.074602127075195
    7. ' line' → logprob: -9.074602127075195
    8. ' sx' → logprob: -9.574602127075195
    9. ' xi' → logprob: -9.824602127075195
    10. ' ' → logprob: -9.824602127075195

Token 77: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0014104703441262245
    2. ',y' → logprob: -6.626410484313965
    3. ' ,' → logprob: -9.501410484313965
    4. 'y' → logprob: -12.251410484313965
    5. '1' → logprob: -13.126410484313965
    6. ',int' → logprob: -14.876410484313965
    7. '_,' → logprob: -14.876410484313965
    8. '‌,' → logprob: -15.251410484313965
    9. ',n' → logprob: -15.501410484313965
    10. ' y' → logprob: -15.501410484313965

Token 78: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.38688546419143677
    2. ' y' → logprob: -1.136885404586792
    3. ' ' → logprob: -11.511885643005371
    4. '=' → logprob: -14.011885643005371
    5. '    ' → logprob: -14.011885643005371
    6. ' =' → logprob: -14.511885643005371
    7. '	y' → logprob: -14.511885643005371
    8. '   ' → logprob: -15.011885643005371
    9. '_' → logprob: -15.136885643005371
    10. '<|end|>' → logprob: -15.261885643005371

Token 79: ',' (ID: 11)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6932282447814941
    2. ' =' → logprob: -0.6932282447814941
    3. ',' → logprob: -9.568227767944336
    4. ')' → logprob: -12.693227767944336
    5. '<|end|>' → logprob: -13.068227767944336
    6. '=int' → logprob: -13.443227767944336
    7. ' ' → logprob: -13.443227767944336
    8. '=input' → logprob: -14.568227767944336
    9. '<|end|>' → logprob: -14.818227767944336
    10. '   ' → logprob: -14.943227767944336

Token 80: ' d' (ID: 272)
  Prédit: 'z'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'z' → logprob: -1.0426393747329712
    2. 't' → logprob: -1.5426393747329712
    3. 'c' → logprob: -2.2926392555236816
    4. 's' → logprob: -2.2926392555236816
    5. 'p' → logprob: -2.4176392555236816
    6. 'd' → logprob: -3.4176392555236816
    7. 'h' → logprob: -3.7926392555236816
    8. 'a' → logprob: -4.542639255523682
    9. '_=' → logprob: -4.542639255523682
    10. 'part' → logprob: -4.917639255523682

Token 81: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.16045117378234863
    2. '=' → logprob: -1.9104511737823486
    3. '<|end|>' → logprob: -9.41045093536377
    4. ',' → logprob: -10.28545093536377
    5. '=int' → logprob: -10.78545093536377
    6. 'irection' → logprob: -10.78545093536377
    7. '=input' → logprob: -10.78545093536377
    8. ' ' → logprob: -11.16045093536377
    9. ')' → logprob: -12.28545093536377
    10. '=line' → logprob: -12.66045093536377

Token 82: ' input' (ID: 3422)
  Prédit: ' map'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' map' → logprob: -0.6011338233947754
    2. ' input' → logprob: -1.2261338233947754
    3. 'input' → logprob: -2.4761338233947754
    4. 'map' → logprob: -2.6011338233947754
    5. ' ' → logprob: -9.351133346557617
    6. '	map' → logprob: -11.976133346557617
    7. ' ' → logprob: -12.226133346557617
    8. '  ' → logprob: -12.351133346557617
    9. '[input' → logprob: -12.351133346557617
    10. 'int' → logprob: -12.601133346557617

Token 83: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.003609578125178814
    2. '()' → logprob: -5.628609657287598
    3. ' ().' → logprob: -12.378609657287598
    4. '())' → logprob: -13.128609657287598
    5. '()
' → logprob: -13.628609657287598
    6. ' ()' → logprob: -14.253609657287598
    7. '(' → logprob: -14.753609657287598
    8. ')' → logprob: -15.003609657287598
    9. '()).' → logprob: -15.378609657287598
    10. '()

' → logprob: -15.503609657287598

Token 84: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.25342944264411926
    2. 'strip' → logprob: -1.5034294128417969
    3. 'rstrip' → logprob: -6.503429412841797
    4. ' split' → logprob: -14.753429412841797
    5. 'sp' → logprob: -15.253429412841797
    6. '(split' → logprob: -16.128429412841797
    7. 'spl' → logprob: -16.128429412841797
    8. 'rs' → logprob: -16.628429412841797
    9. '```' → logprob: -17.503429412841797
    10. ' strip' → logprob: -18.253429412841797

Token 85: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.006107370834797621
    2. '(' → logprob: -5.131107330322266
    3. '('' → logprob: -9.756107330322266
    4. '()
' → logprob: -10.131107330322266
    5. ')' → logprob: -10.881107330322266
    6. '(),' → logprob: -11.381107330322266
    7. ',' → logprob: -11.631107330322266
    8. '()\' → logprob: -12.131107330322266
    9. '())' → logprob: -12.131107330322266
    10. '();' → logprob: -12.256107330322266

Token 86: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 87: ' x' (ID: 1215)
  Prédit: ' x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.7008949518203735
    2. ' ' → logprob: -1.2008949518203735
    3. '<|end|>' → logprob: -1.8258949518203735
    4. 'x' (adapté à ' x') → logprob: -3.200894832611084
    5. '<|end|>' → logprob: -8.200895309448242
    6. ' 
' → logprob: -8.575895309448242
    7. '  ' → logprob: -8.950895309448242
    8. '    ' → logprob: -9.325895309448242
    9. ' ' → logprob: -9.575895309448242
    10. '        ' → logprob: -9.700895309448242

Token 88: ',' (ID: 11)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.4069846272468567
    2. '=' → logprob: -1.156984567642212
    3. ',' → logprob: -4.156984806060791
    4. '=int' → logprob: -5.531984806060791
    5. '<|end|>' → logprob: -8.406984329223633
    6. ')' → logprob: -10.406984329223633
    7. ' ,' → logprob: -11.781984329223633
    8. '<|end|>' → logprob: -12.031984329223633
    9. ' =
' → logprob: -12.156984329223633
    10. 'int' → logprob: -12.156984329223633

Token 89: ' y' (ID: 342)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.370465487241745
    2. ' ' → logprob: -1.4954655170440674
    3. '"' → logprob: -3.8704655170440674
    4. 'y' → logprob: -4.245465278625488
    5. ' int' → logprob: -4.245465278625488
    6. '=int' → logprob: -4.370465278625488
    7. ' y' → logprob: -4.870465278625488
    8. '<|end|>' → logprob: -5.370465278625488
    9. ' =' → logprob: -5.995465278625488
    10. '    ' → logprob: -6.120465278625488

Token 90: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.07001768052577972
    2. '=' → logprob: -2.6950175762176514
    3. '=int' → logprob: -9.57001781463623
    4. ',' → logprob: -11.94501781463623
    5. 'int' → logprob: -13.32001781463623
    6. ' ' → logprob: -13.94501781463623
    7. ' =
' → logprob: -14.19501781463623
    8. ')' → logprob: -14.32001781463623
    9. '<|end|>' → logprob: -14.32001781463623
    10. '   ' → logprob: -15.69501781463623

Token 91: ' int' (ID: 677)
  Prédit: ' int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.078916996717453
    2. 'int' → logprob: -2.5789170265197754
    3. ' map' → logprob: -10.578916549682617
    4. '[int' → logprob: -14.203916549682617
    5. 'map' → logprob: -14.703916549682617
    6. '=int' → logprob: -15.203916549682617
    7. '<int' → logprob: -15.703916549682617
    8. '(int' → logprob: -15.828916549682617
    9. ' ' → logprob: -15.953916549682617
    10. ' in' → logprob: -16.453916549682617

Token 92: '(x' (ID: 4061)
  Prédit: '(x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.0002613358374219388
    2. '(' → logprob: -8.250261306762695
    3. 'x' → logprob: -17.000261306762695
    4. '(
' → logprob: -17.375261306762695
    5. ' (' → logprob: -17.875261306762695
    6. '(y' → logprob: -19.250261306762695
    7. ' ' → logprob: -20.375261306762695
    8. '((' → logprob: -20.750261306762695
    9. '(`' → logprob: -21.625261306762695
    10. '(i' → logprob: -21.625261306762695

Token 93: '),' (ID: 936)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.3145711421966553
    2. '),' → logprob: -1.3145711421966553
    3. ')' → logprob: -6.814571380615234
    4. ',y' → logprob: -9.314571380615234
    5. ' ,' → logprob: -9.939571380615234
    6. ' ),' → logprob: -10.189571380615234
    7. ',),' → logprob: -10.939571380615234
    8. '),(' → logprob: -12.439571380615234
    9. ' ' → logprob: -12.564571380615234
    10. ',)' → logprob: -13.064571380615234

Token 94: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.00861456897109747
    2. ' int' → logprob: -4.758614540100098
    3. '<int' → logprob: -17.758615493774414
    4. '=int' → logprob: -17.758615493774414
    5. 'y' → logprob: -18.008615493774414
    6. '	int' → logprob: -18.258615493774414
    7. '[int' → logprob: -18.508615493774414
    8. '(int' → logprob: -18.508615493774414
    9. ' y' → logprob: -18.633615493774414
    10. ':int' → logprob: -18.758615493774414

Token 95: '(y' (ID: 14684)
  Prédit: '(y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(y' → logprob: -0.0006695479387417436
    2. 'y' → logprob: -7.625669479370117
    3. '(' → logprob: -8.625669479370117
    4. ')y' → logprob: -14.125669479370117
    5. ' y' → logprob: -14.875669479370117
    6. ')' → logprob: -14.875669479370117
    7. '	y' → logprob: -15.500669479370117
    8. '(x' → logprob: -16.250669479370117
    9. '```' → logprob: -16.500669479370117
    10. ' (' → logprob: -16.750669479370117

Token 96: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -7.636475493200123e-05
    2. ')
' → logprob: -10.125076293945312
    3. '<|end|>' → logprob: -10.500076293945312
    4. ' )' → logprob: -13.125076293945312
    5. ')

' → logprob: -13.375076293945312
    6. '<|end|>' → logprob: -13.500076293945312
    7. '),' → logprob: -14.125076293945312
    8. '))' → logprob: -14.125076293945312
    9. '-' → logprob: -15.250076293945312
    10. '+' → logprob: -15.750076293945312

Token 97: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.027433879673480988
    2. ' if' → logprob: -3.7774338722229004
    3. '<|end|>' → logprob: -6.6524338722229
    4. 'd' → logprob: -7.2774338722229
    5. 'if' → logprob: -7.6524338722229
    6. '   ' → logprob: -7.6524338722229
    7. '
' → logprob: -7.9024338722229
    8. ',' → logprob: -8.527434349060059
    9. ' d' → logprob: -8.652434349060059
    10. '        
' → logprob: -8.777434349060059

Token 98: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.28378111124038696
    2. 'if' (adapté à ' if') → logprob: -1.6587810516357422
    3. 'd' → logprob: -3.783781051635742
    4. ' d' → logprob: -4.408781051635742
    5. ' for' → logprob: -4.908781051635742
    6. '   ' → logprob: -5.033781051635742
    7. '       ' → logprob: -5.283781051635742
    8. 'for' → logprob: -6.408781051635742
    9. ' heads' → logprob: -7.533781051635742
    10. 'heads' → logprob: -9.158781051635742

Token 99: ' d' (ID: 272)
  Prédit: ' d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' d' → logprob: -0.01251271367073059
    2. 'd' → logprob: -4.387512683868408
    3. ' ' → logprob: -12.887513160705566
    4. '(d' → logprob: -15.762513160705566
    5. '	d' → logprob: -16.13751220703125
    6. '  ' → logprob: -16.63751220703125
    7. '    ' → logprob: -16.63751220703125
    8. '   ' → logprob: -16.76251220703125
    9. ' (' → logprob: -16.76251220703125
    10. ' ' → logprob: -17.13751220703125

Token 100: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.2017584890127182
    2. '==' → logprob: -1.7017585039138794
    3. '=='' → logprob: -8.57675838470459
    4. '=' → logprob: -10.07675838470459
    5. '=="' → logprob: -10.57675838470459
    6. '[' → logprob: -10.95175838470459
    7. ')' → logprob: -10.95175838470459
    8. ' =='' → logprob: -11.07675838470459
    9. ' ' → logprob: -11.45175838470459
    10. '===' → logprob: -11.82675838470459

Token 101: ' '' (ID: 461)
  Prédit: ''H'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''H' → logprob: -0.1986941546201706
    2. ''' → logprob: -2.4486942291259766
    3. '"H' → logprob: -2.8236942291259766
    4. 'H' → logprob: -4.198694229125977
    5. '"' → logprob: -5.323694229125977
    6. ' H' → logprob: -5.448694229125977
    7. ' '' → logprob: -5.823694229125977
    8. ''U' → logprob: -6.198694229125977
    9. ''h' → logprob: -6.698694229125977
    10. ''S' → logprob: -6.948694229125977

Token 102: 'x' (ID: 87)
  Prédit: 'H'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'H' → logprob: -0.1685827076435089
    2. 'h' → logprob: -2.0435826778411865
    3. ''' → logprob: -4.543582916259766
    4. 'F' → logprob: -5.668582916259766
    5. ''H' → logprob: -6.543582916259766
    6. 'L' → logprob: -6.918582916259766
    7. 'S' → logprob: -6.918582916259766
    8. '1' → logprob: -6.918582916259766
    9. 'U' → logprob: -7.043582916259766
    10. 'W' → logprob: -7.168582916259766

Token 103: '':
' (ID: 7669)
  Prédit: '':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '':' → logprob: -0.2802153527736664
    2. '':
' → logprob: -1.5302153825759888
    3. ''' → logprob: -3.655215263366699
    4. ':' → logprob: -7.530215263366699
    5. '1' → logprob: -8.6552152633667
    6. 'h' → logprob: -8.6552152633667
    7. '':
' → logprob: -8.6552152633667
    8. 'head' → logprob: -9.1552152633667
    9. ''s' → logprob: -9.2802152633667
    10. '-' → logprob: -9.4052152633667

Token 104: '           ' (ID: 352)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.006442157551646233
    2. ':
' → logprob: -5.131442070007324
    3. '   ' → logprob: -8.506442070007324
    4. ' heads' → logprob: -9.381442070007324
    5. 'heads' → logprob: -9.756442070007324
    6. '_heads' → logprob: -9.756442070007324
    7. '):' → logprob: -10.006442070007324
    8. '       ' → logprob: -11.006442070007324
    9. '):
' → logprob: -11.631442070007324
    10. '<|end|>' → logprob: -11.756442070007324

Token 105: ' h' (ID: 312)
  Prédit: ' heads'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' heads' → logprob: -0.33189937472343445
    2. 'heads' → logprob: -1.9568994045257568
    3. '           ' → logprob: -2.206899404525757
    4. '   ' → logprob: -3.831899404525757
    5. '
' → logprob: -5.706899166107178
    6. '               ' → logprob: -5.706899166107178
    7. ' for' → logprob: -7.706899166107178
    8. '       ' → logprob: -7.956899166107178
    9. 'for' → logprob: -8.331899642944336
    10. ':
' → logprob: -8.331899642944336

Token 106: ' =' (ID: 314)
  Prédit: 'ead'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ead' → logprob: -0.00479204161092639
    2. 'e' → logprob: -5.504792213439941
    3. 'heads' → logprob: -8.004792213439941
    4. 'ea' → logprob: -8.629792213439941
    5. '=' → logprob: -9.629792213439941
    6. ' =' → logprob: -9.754792213439941
    7. ' e' → logprob: -10.629792213439941
    8. '=e' → logprob: -11.379792213439941
    9. 's' → logprob: -11.629792213439941
    10. ',' → logprob: -11.629792213439941

Token 107: ' (' (ID: 350)
  Prédit: '(x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.5778046250343323
    2. ' (' → logprob: -0.8278046250343323
    3. '(' → logprob: -6.5778045654296875
    4. '(y' → logprob: -8.077804565429688
    5. ' ' → logprob: -9.952804565429688
    6. '   ' → logprob: -9.952804565429688
    7. 'x' → logprob: -10.202804565429688
    8. '  ' → logprob: -11.577804565429688
    9. ' x' → logprob: -11.952804565429688
    10. '(n' → logprob: -13.202804565429688

Token 108: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -8.2994620242971e-06
    2. ' x' → logprob: -11.875008583068848
    3. '(x' → logprob: -14.250008583068848
    4. ')x' → logprob: -14.500008583068848
    5. ',x' → logprob: -16.87500762939453
    6. ')' → logprob: -18.00000762939453
    7. '   ' → logprob: -18.00000762939453
    8. ',' → logprob: -18.12500762939453
    9. '           ' → logprob: -18.50000762939453
    10. '0' → logprob: -19.12500762939453

Token 109: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.10394316911697388
    2. '-' → logprob: -2.603943109512329
    3. ',y' → logprob: -4.228943347930908
    4. '+' → logprob: -5.103943347930908
    5. '   ' → logprob: -6.228943347930908
    6. ' -' → logprob: -6.603943347930908
    7. ' ,' → logprob: -8.35394287109375
    8. ' +' → logprob: -9.10394287109375
    9. '       ' → logprob: -9.22894287109375
    10. '    ' → logprob: -9.22894287109375

Token 110: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.001275353948585689
    2. ' y' → logprob: -6.751275539398193
    3. '   ' → logprob: -10.126275062561035
    4. '  ' → logprob: -11.126275062561035
    5. '    ' → logprob: -11.251275062561035
    6. ' ' → logprob: -11.251275062561035
    7. '0' → logprob: -11.376275062561035
    8. '-' → logprob: -13.376275062561035
    9. '1' → logprob: -13.376275062561035
    10. 'x' → logprob: -13.501275062561035

Token 111: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.14545586705207825
    2. ')
' → logprob: -2.270455837249756
    3. '-' → logprob: -3.520455837249756
    4. '+' → logprob: -6.145455837249756
    5. '   ' → logprob: -8.895456314086914
    6. ' -' → logprob: -9.770456314086914
    7. ' )' → logprob: -9.895456314086914
    8. ')

' → logprob: -10.145456314086914
    9. ' )
' → logprob: -10.770456314086914
    10. ')
' → logprob: -11.020456314086914

Token 112: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.13710209727287292
    2. '   ' → logprob: -2.7621021270751953
    3. '<|end|>' → logprob: -3.5121021270751953
    4. '       ' → logprob: -4.137102127075195
    5. 'heads' → logprob: -5.387102127075195
    6. '
' → logprob: -5.762102127075195
    7. 'f' → logprob: -6.262102127075195
    8. 's' → logprob: -6.387102127075195
    9. ' heads' → logprob: -6.762102127075195
    10. 'foot' → logprob: -7.012102127075195

Token 113: ' f' (ID: 285)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' (adapté à ' f') → logprob: -0.11235927045345306
    2. 't' → logprob: -3.7373592853546143
    3. ' heads' → logprob: -3.9873592853546143
    4. 'heads' → logprob: -3.9873592853546143
    5. ' f' → logprob: -4.112359046936035
    6. '           ' → logprob: -4.487359046936035
    7. 'fo' → logprob: -4.737359046936035
    8. '
' → logprob: -5.362359046936035
    9. '   ' → logprob: -6.362359046936035
    10. ' t' → logprob: -7.487359046936035

Token 114: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.05269376188516617
    2. '=' → logprob: -3.0526938438415527
    3. 'oot' → logprob: -5.552693843841553
    4. ' ' → logprob: -9.052693367004395
    5. 's' → logprob: -10.302693367004395
    6. 'o' → logprob: -10.552693367004395
    7. 't' → logprob: -11.052693367004395
    8. '   ' → logprob: -12.302693367004395
    9. ' =(' → logprob: -12.427693367004395
    10. 'ooter' → logprob: -12.927693367004395

Token 115: ' (' (ID: 350)
  Prédit: ' ('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.10022306442260742
    2. '(x' → logprob: -2.3502230644226074
    3. '(' → logprob: -11.100223541259766
    4. ' ' → logprob: -13.850223541259766
    5. '(y' → logprob: -16.100223541259766
    6. 'x' → logprob: -16.475223541259766
    7. '(n' → logprob: -16.975223541259766
    8. '  ' → logprob: -17.350223541259766
    9. '(nx' → logprob: -17.350223541259766
    10. ' None' → logprob: -17.475223541259766

Token 116: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.00036275613820180297
    2. '(x' → logprob: -8.625362396240234
    3. ' x' → logprob: -8.625362396240234
    4. ')x' → logprob: -14.125362396240234
    5. ' (' → logprob: -14.250362396240234
    6. '0' → logprob: -14.250362396240234
    7. '1' → logprob: -14.625362396240234
    8. ',' → logprob: -15.250362396240234
    9. '
' → logprob: -15.750362396240234
    10. ')' → logprob: -15.750362396240234

Token 117: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.4454505145549774
    2. ',' → logprob: -1.0704505443572998
    3. ' +' → logprob: -4.195450305938721
    4. ' ,' → logprob: -7.445450305938721
    5. '-' → logprob: -7.820450305938721
    6. ',y' → logprob: -8.070450782775879
    7. '   ' → logprob: -9.695450782775879
    8. '1' → logprob: -9.945450782775879
    9. ' ' → logprob: -10.570450782775879
    10. ',
' → logprob: -11.320450782775879

Token 118: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0008083211723715067
    2. '2' → logprob: -7.875808238983154
    3. ' ' → logprob: -8.375808715820312
    4. '0' → logprob: -9.000808715820312
    5. '4' → logprob: -10.500808715820312
    6. '3' → logprob: -11.000808715820312
    7. '   ' → logprob: -11.250808715820312
    8. '5' → logprob: -12.000808715820312
    9. '6' → logprob: -12.375808715820312
    10. '10' → logprob: -13.250808715820312

Token 119: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0023452038876712322
    2. ',y' → logprob: -6.127345085144043
    3. ' ,' → logprob: -8.752345085144043
    4. ',
' → logprob: -13.877345085144043
    5. 'y' → logprob: -14.752345085144043
    6. ')' → logprob: -16.12734603881836
    7. '1' → logprob: -16.50234603881836
    8. '0' → logprob: -16.62734603881836
    9. '   ' → logprob: -17.12734603881836
    10. ',x' → logprob: -17.25234603881836

Token 120: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.5759430527687073
    2. ' y' → logprob: -0.8259430527687073
    3. ',y' → logprob: -13.575942993164062
    4. '	y' → logprob: -14.075942993164062
    5. ',' → logprob: -14.325942993164062
    6. ' ' → logprob: -14.575942993164062
    7. '   ' → logprob: -15.700942993164062
    8. '    ' → logprob: -15.825942993164062
    9. ')y' → logprob: -16.200942993164062
    10. ')' → logprob: -17.325942993164062

Token 121: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.003609101288020611
    2. ')
' → logprob: -5.6286091804504395
    3. ')
' → logprob: -12.753608703613281
    4. ' )' → logprob: -13.003608703613281
    5. '       ' → logprob: -13.503608703613281
    6. ')

' → logprob: -13.753608703613281
    7. '           ' → logprob: -14.628608703613281
    8. '   ' → logprob: -15.253608703613281
    9. ',' → logprob: -15.628608703613281
    10. '),' → logprob: -16.12860870361328

Token 122: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.005628462415188551
    2. '   ' → logprob: -5.38062858581543
    3. '
' → logprob: -8.00562858581543
    4. ' heads' → logprob: -8.63062858581543
    5. 'else' → logprob: -8.75562858581543
    6. 'heads' → logprob: -8.75562858581543
    7. '<|end|>' → logprob: -10.00562858581543
    8. 'elif' → logprob: -10.13062858581543
    9. '           ' → logprob: -10.50562858581543
    10. ' else' → logprob: -10.75562858581543

Token 123: ' else' (ID: 1203)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' (adapté à ' else') → logprob: -0.04755394533276558
    2. ' else' → logprob: -3.5475540161132812
    3. '       ' → logprob: -4.047554016113281
    4. '   ' → logprob: -8.922554016113281
    5. 'elif' → logprob: -10.047554016113281
    6. '	else' → logprob: -13.297554016113281
    7. ' elif' → logprob: -14.047554016113281
    8. ')' → logprob: -14.172554016113281
    9. 'e' → logprob: -15.422554016113281
    10. '           ' → logprob: -16.04755401611328

Token 124: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0550466887652874
    2. ':
' → logprob: -2.930046796798706
    3. '           ' → logprob: -9.430047035217285
    4. '<|end|>' → logprob: -10.305047035217285
    5. ' :' → logprob: -11.305047035217285
    6. '       ' → logprob: -11.430047035217285
    7. '{' → logprob: -11.805047035217285
    8. ' :
' → logprob: -12.305047035217285
    9. '   ' → logprob: -12.430047035217285
    10. ':

' → logprob: -12.805047035217285

Token 125: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.16229712963104248
    2. '       ' → logprob: -3.037297248840332
    3. '   ' → logprob: -3.412297248840332
    4. 'h' → logprob: -4.162297248840332
    5. ' h' → logprob: -4.162297248840332
    6. ' (' → logprob: -5.287297248840332
    7. '<|end|>' → logprob: -5.287297248840332
    8. '
' → logprob: -5.412297248840332
    9. ' ' → logprob: -5.787297248840332
    10. '        ' → logprob: -6.037297248840332

Token 126: ' h' (ID: 312)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'h' (adapté à ' h') → logprob: -0.2525341510772705
    2. ' h' → logprob: -1.5025341510772705
    3. '           ' → logprob: -7.877533912658691
    4. '   ' → logprob: -9.002533912658691
    5. '
' → logprob: -9.877533912658691
    6. ' ' → logprob: -11.752533912658691
    7. '#' → logprob: -11.877533912658691
    8. 'f' → logprob: -12.377533912658691
    9. ' f' → logprob: -12.377533912658691
    10. '  ' → logprob: -12.377533912658691

Token 127: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5769174098968506
    2. '=' → logprob: -0.8269174098968506
    3. ',' → logprob: -6.95191764831543
    4. ' ' → logprob: -12.20191764831543
    5. ' ,' → logprob: -12.20191764831543
    6. ')' → logprob: -12.45191764831543
    7. '=(' → logprob: -12.82691764831543
    8. ' =(' → logprob: -13.32691764831543
    9. '<|end|>' → logprob: -13.57691764831543
    10. '(' → logprob: -15.57691764831543

Token 128: ' (' (ID: 350)
  Prédit: '(x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.007682700641453266
    2. ' (' → logprob: -4.882682800292969
    3. '(' → logprob: -9.507682800292969
    4. 'x' → logprob: -13.507682800292969
    5. '<|end|>' → logprob: -14.632682800292969
    6. '(y' → logprob: -15.882682800292969
    7. ' x' → logprob: -16.50768280029297
    8. ' ' → logprob: -16.75768280029297
    9. '   ' → logprob: -17.00768280029297
    10. '(s' → logprob: -17.63268280029297

Token 129: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -5.7292167184641585e-05
    2. ' x' → logprob: -10.125057220458984
    3. '(x' → logprob: -11.000057220458984
    4. ')x' → logprob: -15.750057220458984
    5. ',' → logprob: -16.625057220458984
    6. '{x' → logprob: -16.750057220458984
    7. '(' → logprob: -17.375057220458984
    8. ',x' → logprob: -17.375057220458984
    9. ' (' → logprob: -17.375057220458984
    10. '<|end|>' → logprob: -17.625057220458984

Token 130: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00033153212280012667
    2. ' ,' → logprob: -8.12533187866211
    3. ',y' → logprob: -11.00033187866211
    4. '+' → logprob: -11.62533187866211
    5. '   ' → logprob: -11.87533187866211
    6. ' ' → logprob: -13.50033187866211
    7. '-' → logprob: -14.50033187866211
    8. ',
' → logprob: -15.87533187866211
    9. '       ' → logprob: -15.87533187866211
    10. '  ' → logprob: -16.25033187866211

Token 131: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.023402594029903412
    2. ' y' → logprob: -3.773402690887451
    3. 'x' → logprob: -8.898402214050293
    4. '(y' → logprob: -11.773402214050293
    5. ' ' → logprob: -12.398402214050293
    6. '   ' → logprob: -13.148402214050293
    7. '+' → logprob: -13.273402214050293
    8. ',' → logprob: -14.023402214050293
    9. ' x' → logprob: -14.023402214050293
    10. ',y' → logprob: -14.023402214050293

Token 132: ')
' (ID: 446)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.022451283410191536
    2. ')' → logprob: -4.272451400756836
    3. ')
' → logprob: -5.147451400756836
    4. '-' → logprob: -6.272451400756836
    5. '+
' → logprob: -8.647451400756836
    6. ' +' → logprob: -9.022451400756836
    7. '           ' → logprob: -9.522451400756836
    8. '),' → logprob: -9.647451400756836
    9. ',' → logprob: -9.772451400756836
    10. '   ' → logprob: -10.897451400756836

Token 133: '           ' (ID: 352)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.19481031596660614
    2. '           ' → logprob: -1.8198102712631226
    3. '       ' → logprob: -5.069810390472412
    4. ' f' → logprob: -5.569810390472412
    5. '
' → logprob: -5.944810390472412
    6. '   ' → logprob: -6.944810390472412
    7. ',' → logprob: -7.069810390472412
    8. ',
' → logprob: -9.319809913635254
    9. '<|end|>' → logprob: -9.444809913635254
    10. '            
' → logprob: -9.694809913635254

Token 134: ' f' (ID: 285)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' (adapté à ' f') → logprob: -0.11292367428541183
    2. ' f' → logprob: -2.2379236221313477
    3. '           ' → logprob: -10.237923622131348
    4. ' (' → logprob: -10.987923622131348
    5. '
' → logprob: -11.362923622131348
    6. '(' → logprob: -11.362923622131348
    7. '   ' → logprob: -11.987923622131348
    8. ' ' → logprob: -12.112923622131348
    9. '       ' → logprob: -12.237923622131348
    10. '(f' → logprob: -13.112923622131348

Token 135: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.12693576514720917
    2. ' =' → logprob: -2.1269357204437256
    3. ')' → logprob: -13.001935958862305
    4. ',' → logprob: -13.251935958862305
    5. ' ' → logprob: -13.751935958862305
    6. '<|end|>' → logprob: -13.751935958862305
    7. ' (' → logprob: -15.126935958862305
    8. '=
' → logprob: -15.251935958862305
    9. '=(' → logprob: -15.376935958862305
    10. '=

' → logprob: -16.001935958862305

Token 136: ' (' (ID: 350)
  Prédit: '(x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.07917552441358566
    2. ' (' → logprob: -2.5791754722595215
    3. '(' → logprob: -8.20417594909668
    4. 'x' → logprob: -11.45417594909668
    5. ' x' → logprob: -13.95417594909668
    6. '```' → logprob: -16.07917594909668
    7. '<|end|>' → logprob: -16.20417594909668
    8. ',' → logprob: -16.20417594909668
    9. '(y' → logprob: -16.45417594909668
    10. ' ' → logprob: -16.45417594909668

Token 137: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.031475476920604706
    2. '(x' → logprob: -3.53147554397583
    3. ' x' → logprob: -6.53147554397583
    4. ' (' → logprob: -8.281475067138672
    5. '(' → logprob: -12.156475067138672
    6. ')' → logprob: -13.156475067138672
    7. ')x' → logprob: -13.281475067138672
    8. ',' → logprob: -13.406475067138672
    9. '{x' → logprob: -14.906475067138672
    10. '   ' → logprob: -15.031475067138672

Token 138: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.005631539970636368
    2. ' ,' → logprob: -5.255631446838379
    3. ',y' → logprob: -8.255631446838379
    4. ' ' → logprob: -9.505631446838379
    5. '   ' → logprob: -10.255631446838379
    6. '+' → logprob: -10.755631446838379
    7. '  ' → logprob: -13.255631446838379
    8. ',
' → logprob: -13.755631446838379
    9. '),' → logprob: -14.630631446838379
    10. '```' → logprob: -14.630631446838379

Token 139: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.04114357754588127
    2. ' y' → logprob: -3.5411436557769775
    3. '1' → logprob: -4.791143417358398
    4. '+' → logprob: -6.041143417358398
    5. 'x' → logprob: -7.541143417358398
    6. ')' → logprob: -9.916143417358398
    7. '(y' → logprob: -10.541143417358398
    8. ' ' → logprob: -10.666143417358398
    9. ')y' → logprob: -12.791143417358398
    10. '```' → logprob: -12.916143417358398

Token 140: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -2.8087270038668066e-05
    2. ' +' → logprob: -10.500027656555176
    3. '1' → logprob: -15.000027656555176
    4. '+
' → logprob: -16.500028610229492
    5. '+

' → logprob: -20.000028610229492
    6. '-' → logprob: -20.125028610229492
    7. '   ' → logprob: -20.375028610229492
    8. '+)' → logprob: -20.500028610229492
    9. '+x' → logprob: -20.750028610229492
    10. ')+' → logprob: -20.750028610229492

Token 141: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.630610641877865e-06
    2. ' ' → logprob: -12.000006675720215
    3. ')' → logprob: -15.875006675720215
    4. '```' → logprob: -16.1250057220459
    5. '   ' → logprob: -16.5000057220459
    6. '<|end|>' → logprob: -16.6250057220459
    7. '+' → logprob: -18.0000057220459
    8. '
' → logprob: -18.0000057220459
    9. 'f' → logprob: -18.8125057220459
    10. '  ' → logprob: -18.9375057220459

Token 142: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -6.396757089532912e-05
    2. ')
' → logprob: -9.7500638961792
    3. '       ' → logprob: -12.2500638961792
    4. ' )' → logprob: -14.5000638961792
    5. ')
' → logprob: -15.8750638961792
    6. ')

' → logprob: -16.000064849853516
    7. '   ' → logprob: -17.000064849853516
    8. ')return' → logprob: -17.000064849853516
    9. ')`' → logprob: -18.125064849853516
    10. '')' → logprob: -18.500064849853516

Token 143: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0649808794260025
    2. 'heads' → logprob: -2.814980983734131
    3. ' heads' → logprob: -6.814980983734131
    4. '   ' → logprob: -7.189980983734131
    5. '
' → logprob: -7.564980983734131
    6. '<|end|>' → logprob: -8.564980506896973
    7. '_heads' → logprob: -8.939980506896973
    8. 'head' → logprob: -9.439980506896973
    9. '        
' → logprob: -9.439980506896973
    10. '           ' → logprob: -10.189980506896973

Token 144: ' heads' (ID: 24696)
  Prédit: 'heads'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'heads' (adapté à ' heads') → logprob: -0.30672821402549744
    2. ' heads' → logprob: -1.9317282438278198
    3. '   ' → logprob: -2.6817281246185303
    4. '       ' → logprob: -3.0567281246185303
    5. '
' → logprob: -6.056728363037109
    6. 'head' → logprob: -7.681728363037109
    7. '```' → logprob: -7.931728363037109
    8. '_heads' → logprob: -8.55672836303711
    9. '    
' → logprob: -9.55672836303711
    10. 'Heads' → logprob: -9.80672836303711

Token 145: '.add' (ID: 1950)
  Prédit: '.add'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.add' → logprob: -6.704273118884885e-07
    2. '.' → logprob: -15.000000953674316
    3. '.update' → logprob: -15.375000953674316
    4. '.setdefault' → logprob: -17.125
    5. '.append' → logprob: -17.25
    6. 'add' → logprob: -18.125
    7. ' .' → logprob: -18.125
    8. '.Add' → logprob: -18.125
    9. ')add' → logprob: -19.125
    10. '.insert' → logprob: -20.125

Token 146: '(h' (ID: 8120)
  Prédit: '(h'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(h' → logprob: -1.2664456789934775e-06
    2. '(f' → logprob: -14.125000953674316
    3. '(' → logprob: -14.500000953674316
    4. '((' → logprob: -18.125001907348633
    5. '(head' → logprob: -19.375001907348633
    6. ' (' → logprob: -19.750001907348633
    7. '(hit' → logprob: -21.250001907348633
    8. '(ht' → logprob: -21.750001907348633
    9. 'h' → logprob: -22.000001907348633
    10. '(s' → logprob: -22.750001907348633

Token 147: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.018152983859181404
    2. ')
' → logprob: -4.018153190612793
    3. ')
' → logprob: -13.268153190612793
    4. ' )' → logprob: -14.268153190612793
    5. ')

' → logprob: -15.268153190612793
    6. ' )
' → logprob: -16.643152236938477
    7. '),' → logprob: -16.643152236938477
    8. ')}' → logprob: -16.768152236938477
    9. ')return' → logprob: -17.018152236938477
    10. '<|end|>' → logprob: -17.018152236938477

Token 148: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.09983852505683899
    2. 'fo' → logprob: -2.5998384952545166
    3. 'foot' → logprob: -3.9748384952545166
    4. ' foot' → logprob: -6.599838733673096
    5. ' fo' → logprob: -7.849838733673096
    6. '   ' → logprob: -9.849838256835938
    7. '        
' → logprob: -10.224838256835938
    8. '```' → logprob: -10.974838256835938
    9. '
' → logprob: -11.349838256835938
    10. '           ' → logprob: -11.474838256835938

Token 149: ' foot' (ID: 6428)
  Prédit: 'fo'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fo' → logprob: -0.0040093036368489265
    2. ' foot' → logprob: -5.879009246826172
    3. 'foot' (adapté à ' foot') → logprob: -6.754009246826172
    4. ' fo' → logprob: -10.879009246826172
    5. 'Foot' → logprob: -12.254009246826172
    6. '```' → logprob: -12.504009246826172
    7. '   ' → logprob: -13.129009246826172
    8. '.fo' → logprob: -13.754009246826172
    9. 'fol' → logprob: -14.129009246826172
    10. 'fe' → logprob: -14.129009246826172

Token 150: 's' (ID: 82)
  Prédit: 's'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -1.9361264946837764e-07
    2. ' s' → logprob: -16.75
    3. '<|end|>' → logprob: -19.125
    4. 't' → logprob: -20.25
    5. 'st' → logprob: -20.25
    6. ')s' → logprob: -20.625
    7. '(s' → logprob: -21.125
    8. 'с' → logprob: -21.125
    9. '<s' → logprob: -21.25
    10. '{s' → logprob: -21.3125

Token 151: '.add' (ID: 1950)
  Prédit: '.add'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.add' → logprob: -0.006725788116455078
    2. '.' → logprob: -5.006725788116455
    3. ' .' → logprob: -11.881725311279297
    4. '.setdefault' → logprob: -13.756725311279297
    5. ').' → logprob: -14.381725311279297
    6. '<|end|>' → logprob: -14.381725311279297
    7. 'add' → logprob: -14.506725311279297
    8. '.update' → logprob: -15.256725311279297
    9. '.append' → logprob: -15.881725311279297
    10. '.Add' → logprob: -16.381725311279297

Token 152: '(f' (ID: 1526)
  Prédit: '(f'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(f' → logprob: -1.9361264946837764e-07
    2. '(' → logprob: -16.25
    3. 'f' → logprob: -20.25
    4. '(
' → logprob: -21.625
    5. ' (' → logprob: -21.625
    6. '	f' → logprob: -22.125
    7. '((' → logprob: -22.75
    8. '(F' → logprob: -22.875
    9. '[f' → logprob: -24.875
    10. '<f' → logprob: -24.875

Token 153: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -2.1008713702030946e-06
    2. ')
' → logprob: -13.625001907348633
    3. ' )' → logprob: -14.250001907348633
    4. '())' → logprob: -16.500001907348633
    5. '   ' → logprob: -17.750001907348633
    6. ')

' → logprob: -17.875001907348633
    7. '}' → logprob: -17.875001907348633
    8. '<|end|>' → logprob: -18.125001907348633
    9. ')return' → logprob: -18.250001907348633
    10. '()' → logprob: -18.250001907348633

Token 154: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06659478694200516
    2. 'visited' → logprob: -3.0665948390960693
    3. '    
' → logprob: -5.06659460067749
    4. '
' → logprob: -5.94159460067749
    5. ' visited' → logprob: -6.31659460067749
    6. '```' → logprob: -6.44159460067749
    7. 'all' → logprob: -7.19159460067749
    8. 'occupied' → logprob: -7.81659460067749
    9. 'valid' → logprob: -7.94159460067749
    10. 'used' → logprob: -8.441595077514648

Token 155: ' #' (ID: 1069)
  Prédit: 'visited'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'visited' → logprob: -0.19010333716869354
    2. '   ' → logprob: -3.06510329246521
    3. 'all' → logprob: -3.69010329246521
    4. 'valid' → logprob: -4.065103530883789
    5. 'graph' → logprob: -4.565103530883789
    6. 'queue' → logprob: -4.690103530883789
    7. 'def' → logprob: -5.315103530883789
    8. 'possible' → logprob: -5.440103530883789
    9. 'connected' → logprob: -5.690103530883789
    10. ' visited' → logprob: -5.690103530883789

Token 156: ' Check' (ID: 6208)
  Prédit: 'visited'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'visited' → logprob: -0.3315597474575043
    2. ' visited' → logprob: -1.9565597772598267
    3. '#' → logprob: -4.581559658050537
    4. 'for' → logprob: -4.831559658050537
    5. 'dp' → logprob: -5.206559658050537
    6. ' #' → logprob: -5.331559658050537
    7. 'count' → logprob: -5.331559658050537
    8. 'def' → logprob: -5.331559658050537
    9. 'queue' → logprob: -5.331559658050537
    10. '   ' → logprob: -5.331559658050537

Token 157: ' if' (ID: 538)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3013729155063629
    2. ' if' → logprob: -1.5513728857040405
    3. ' for' → logprob: -3.42637300491333
    4. 'for' → logprob: -5.30137300491333
    5. ' all' → logprob: -5.42637300491333
    6. 'if' → logprob: -5.55137300491333
    7. 'all' → logprob: -7.05137300491333
    8. ' whether' → logprob: -8.051372528076172
    9. 'def' → logprob: -8.676372528076172
    10. ' heads' → logprob: -8.926372528076172

Token 158: ' any' (ID: 1062)
  Prédit: ' any'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' any' → logprob: -0.3842693269252777
    2. ' all' → logprob: -2.2592692375183105
    3. 'heads' → logprob: -2.5092692375183105
    4. ' heads' → logprob: -2.6342692375183105
    5. 'any' → logprob: -3.3842692375183105
    6. ' len' → logprob: -4.7592692375183105
    7. 'all' → logprob: -4.8842692375183105
    8. 'len' → logprob: -5.3842692375183105
    9. ' not' → logprob: -5.8842692375183105
    10. ' the' → logprob: -7.2592692375183105

Token 159: ' foot' (ID: 6428)
  Prédit: 'head'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'head' → logprob: -0.7306709885597229
    2. ' head' → logprob: -0.9806709885597229
    3. 'foot' → logprob: -2.855670928955078
    4. ' foot' → logprob: -2.980670928955078
    5. '(head' → logprob: -4.605670928955078
    6. ' of' → logprob: -4.730670928955078
    7. ' h' → logprob: -5.355670928955078
    8. 'h' → logprob: -6.230670928955078
    9. 'neighbor' → logprob: -7.105670928955078
    10. ' ' → logprob: -7.230670928955078

Token 160: ' adjacent' (ID: 39069)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.5170638561248779
    2. ' in' → logprob: -1.267063856124878
    3. 'in' → logprob: -2.517063856124878
    4. 'not' → logprob: -4.392064094543457
    5. ' not' → logprob: -4.767064094543457
    6. ' is' → logprob: -5.017064094543457
    7. 'is' → logprob: -5.142064094543457
    8. '   ' → logprob: -5.892064094543457
    9. 'print' → logprob: -6.142064094543457
    10. ' or' → logprob: -7.392064094543457

Token 161: ' to' (ID: 316)
  Prédit: ' to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' to' → logprob: -0.18058408796787262
    2. 'to' → logprob: -1.8055840730667114
    3. 's' → logprob: -7.180583953857422
    4. ')' → logprob: -11.430583953857422
    5. ' ' → logprob: -11.430583953857422
    6. '<|end|>' → logprob: -11.555583953857422
    7. '   ' → logprob: -11.930583953857422
    8. 'e' → logprob: -12.180583953857422
    9. '_to' → logprob: -12.430583953857422
    10. ' in' → logprob: -12.555583953857422

Token 162: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -1.1186569929122925
    2. 'head' → logprob: -1.6186569929122925
    3. ' a' → logprob: -1.8686569929122925
    4. 'any' → logprob: -2.243657112121582
    5. ' any' → logprob: -2.368657112121582
    6. 'heads' → logprob: -2.368657112121582
    7. ' heads' → logprob: -3.743657112121582
    8. ' head' → logprob: -6.118657112121582
    9. 'h' → logprob: -6.993657112121582
    10. '   ' → logprob: -8.743657112121582

Token 163: ' head' (ID: 3189)
  Prédit: 'head'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'head' → logprob: -0.04875030368566513
    2. ' head' → logprob: -3.048750400543213
    3. 'foot' → logprob: -8.923749923706055
    4. 'h' → logprob: -11.923749923706055
    5. ' foot' → logprob: -12.423749923706055
    6. 'heads' → logprob: -12.673749923706055
    7. '=head' → logprob: -12.923749923706055
    8. '	head' → logprob: -13.173749923706055
    9. ' ' → logprob: -13.298749923706055
    10. '.head' → logprob: -13.673749923706055

Token 164: ' (' (ID: 350)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0031837786082178354
    2. ' for' → logprob: -6.503183841705322
    3. ':' → logprob: -7.503183841705322
    4. 'for' → logprob: -8.003183364868164
    5. '    
' → logprob: -8.128183364868164
    6. '
' → logprob: -9.128183364868164
    7. ',' → logprob: -9.503183364868164
    8. '<|end|>' → logprob: -9.503183364868164
    9. ' is' → logprob: -10.128183364868164
    10. '  
' → logprob: -10.253183364868164

Token 165: 'other' (ID: 2141)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.06776338815689087
    2. ' )' → logprob: -3.067763328552246
    3. '   ' → logprob: -4.442763328552246
    4. ' in' → logprob: -6.942763328552246
    5. '):' → logprob: -7.192763328552246
    6. ' not' → logprob: -7.317763328552246
    7. ' and' → logprob: -7.442763328552246
    8. '#' → logprob: -7.442763328552246
    9. ' or' → logprob: -7.692763328552246
    10. '    ' → logprob: -7.942763328552246

Token 166: ' than' (ID: 1572)
  Prédit: ' than'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' than' → logprob: -0.03808062523603439
    2. 'than' → logprob: -3.2880806922912598
    3. '   ' → logprob: -10.788080215454102
    4. ')' → logprob: -11.288080215454102
    5. 'wise' → logprob: -12.538080215454102
    6. '_than' → logprob: -14.163080215454102
    7. ':' → logprob: -15.163080215454102
    8. '    ' → logprob: -15.413080215454102
    9. '):
' → logprob: -15.913080215454102
    10. '
' → logprob: -16.0380802154541

Token 167: ' his' (ID: 1232)
  Prédit: ' its'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' its' → logprob: -0.7632308602333069
    2. ' itself' → logprob: -1.263230800628662
    3. ' the' → logprob: -1.763230800628662
    4. 'the' → logprob: -3.388230800628662
    5. 'its' → logprob: -3.638230800628662
    6. ' their' → logprob: -5.138230800628662
    7. ' own' → logprob: -6.013230800628662
    8. '(' → logprob: -6.763230800628662
    9. 'their' → logprob: -6.763230800628662
    10. 'it' → logprob: -7.013230800628662

Token 168: ' own' (ID: 2316)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -1.309335470199585
    2. ' own' → logprob: -1.309335470199585
    3. ''s' → logprob: -1.684335470199585
    4. 's' → logprob: -1.934335470199585
    5. ')' → logprob: -2.809335470199585
    6. 'own' → logprob: -2.934335470199585
    7. 'elf' → logprob: -5.684335708618164
    8. '')' → logprob: -6.684335708618164
    9. ' head' → logprob: -6.684335708618164
    10. 'head' → logprob: -6.684335708618164

Token 169: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.2908882200717926
    2. '):' → logprob: -1.5408881902694702
    3. '):
' → logprob: -3.9158883094787598
    4. 's' → logprob: -5.41588830947876
    5. '):

' → logprob: -5.54088830947876
    6. ')
' → logprob: -6.29088830947876
    7. ' )' → logprob: -6.54088830947876
    8. 'head' → logprob: -6.79088830947876
    9. ''s' → logprob: -6.91588830947876
    10. ' head' → logprob: -7.41588830947876

Token 170: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.12336268275976181
    2. ' for' → logprob: -2.6233627796173096
    3. 'for' → logprob: -3.8733627796173096
    4. '
' → logprob: -4.1233625411987305
    5. '    
' → logprob: -5.4983625411987305
    6. ':' → logprob: -6.8733625411987305
    7. '  
' → logprob: -7.6233625411987305
    8. ':
' → logprob: -8.49836254119873
    9. '   
' → logprob: -8.99836254119873
    10. '<|end|>' → logprob: -9.24836254119873

Token 171: ' bad' (ID: 4790)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.007148433942347765
    2. ' for' → logprob: -5.257148265838623
    3. '    
' → logprob: -7.257148265838623
    4. 'for' → logprob: -7.882148265838623
    5. ' found' → logprob: -8.257148742675781
    6. ' conflict' → logprob: -8.382148742675781
    7. 'found' → logprob: -9.007148742675781
    8. ' is' → logprob: -9.632148742675781
    9. ' valid' → logprob: -10.007148742675781
    10. '
' → logprob: -10.382148742675781

Token 172: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.4591803252696991
    2. '_' → logprob: -1.7091803550720215
    3. ' =' → logprob: -1.7091803550720215
    4. '_neighbors' → logprob: -5.4591803550720215
    5. '_positions' → logprob: -7.4591803550720215
    6. '_found' → logprob: -7.7091803550720215
    7. '_pairs' → logprob: -8.334179878234863
    8. '_=' → logprob: -8.959179878234863
    9. '_adj' → logprob: -9.459179878234863
    10. '_heads' → logprob: -9.834179878234863

Token 173: ' False' (ID: 7983)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'False' → logprob: -0.0619727298617363
    2. ' False' → logprob: -2.8119726181030273
    3. 'set' → logprob: -12.936972618103027
    4. '   ' → logprob: -13.061972618103027
    5. 'True' → logprob: -15.061972618103027
    6. '0' → logprob: -16.311973571777344
    7. ' set' → logprob: -16.936973571777344
    8. ' True' → logprob: -17.186973571777344
    9. '(False' → logprob: -17.186973571777344
    10. ' ' → logprob: -17.686973571777344

Token 174: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.21147288382053375
    2. '   ' → logprob: -1.7114728689193726
    3. ' for' → logprob: -5.711472988128662
    4. '<|end|>' → logprob: -6.086472988128662
    5. '    
' → logprob: -6.461472988128662
    6. '  
' → logprob: -6.461472988128662
    7. 'for' → logprob: -6.961472988128662
    8. ' 
' → logprob: -9.461472511291504
    9. '<|end|>' → logprob: -9.586472511291504
    10. '
' → logprob: -9.586472511291504

Token 175: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3529176115989685
    2. '
' → logprob: -1.3529176712036133
    3. ' for' → logprob: -3.8529176712036133
    4. 'for' → logprob: -4.102917671203613
    5. '    
' → logprob: -7.352917671203613
    6. '<|end|>' → logprob: -8.227917671203613
    7. '  
' → logprob: -9.352917671203613
    8. '
' → logprob: -10.602917671203613
    9. '\n' → logprob: -10.602917671203613
    10. '	for' → logprob: -10.727917671203613

Token 176: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.3612922728061676
    2. ' for' → logprob: -1.2362922430038452
    3. '   ' → logprob: -4.361292362213135
    4. '	for' → logprob: -13.486291885375977
    5. '
' → logprob: -13.986291885375977
    6. '    
' → logprob: -14.611291885375977
    7. ' ' → logprob: -14.986291885375977
    8. '```' → logprob: -15.861291885375977
    9. '  ' → logprob: -16.361291885375977
    10. 'if' → logprob: -16.611291885375977

Token 177: ' f' (ID: 285)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'h' → logprob: -0.7305964827537537
    2. ' h' → logprob: -1.2305965423583984
    3. 'f' → logprob: -2.2305965423583984
    4. ' f' → logprob: -2.7305965423583984
    5. 'hx' → logprob: -4.105596542358398
    6. 'fx' → logprob: -4.730596542358398
    7. ' fx' → logprob: -5.105596542358398
    8. 'fh' → logprob: -5.605596542358398
    9. ' hx' → logprob: -5.980596542358398
    10. ' fh' → logprob: -6.105596542358398

Token 178: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.026602856814861298
    2. 'in' → logprob: -3.6516027450561523
    3. ' ' → logprob: -8.901602745056152
    4. ',' → logprob: -9.651602745056152
    5. 'x' → logprob: -10.401602745056152
    6. 's' → logprob: -11.401602745056152
    7. '_in' → logprob: -11.526602745056152
    8. '_' → logprob: -11.651602745056152
    9. 'adj' → logprob: -11.651602745056152
    10. '   ' → logprob: -11.776602745056152

Token 179: ' foot' (ID: 6428)
  Prédit: 'fo'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fo' → logprob: -0.12896457314491272
    2. 'foot' → logprob: -2.12896466255188
    3. ' foot' → logprob: -6.253964424133301
    4. '   ' → logprob: -10.0039644241333
    5. '  ' → logprob: -11.1289644241333
    6. 'head' → logprob: -11.2539644241333
    7. '```' → logprob: -12.2539644241333
    8. 'fe' → logprob: -12.3789644241333
    9. 'Foot' → logprob: -12.6289644241333
    10. 'heads' → logprob: -12.8789644241333

Token 180: 's' (ID: 82)
  Prédit: 's'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.00036275613820180297
    2. 'ots' → logprob: -8.750362396240234
    3. 'foot' → logprob: -9.500362396240234
    4. 'fo' → logprob: -9.500362396240234
    5. 'oot' → logprob: -12.000362396240234
    6. 'ot' → logprob: -12.000362396240234
    7. 'in' → logprob: -12.125362396240234
    8. 'o' → logprob: -12.625362396240234
    9. 'os' → logprob: -12.875362396240234
    10. '   ' → logprob: -13.000362396240234

Token 181: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.5026437044143677
    2. ' in' → logprob: -1.3776437044143677
    3. ',' → logprob: -2.127643585205078
    4. 'in' → logprob: -4.127643585205078
    5. '   ' → logprob: -5.252643585205078
    6. ':
' → logprob: -6.752643585205078
    7. ' :' → logprob: -7.877643585205078
    8. 's' → logprob: -8.502643585205078
    9. ' ' → logprob: -8.502643585205078
    10. ' ,' → logprob: -9.377643585205078

Token 182: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0021505001932382584
    2. ',' → logprob: -7.252150535583496
    3. ':' → logprob: -7.502150535583496
    4. ':
' → logprob: -8.127150535583496
    5. '<|end|>' → logprob: -8.252150535583496
    6. '        
' → logprob: -9.377150535583496
    7. '
' → logprob: -10.002150535583496
    8. ' for' → logprob: -10.252150535583496
    9. '):
' → logprob: -10.377150535583496
    10. ' if' → logprob: -10.752150535583496

Token 183: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.10190760344266891
    2. 'for' (adapté à ' for') → logprob: -2.35190749168396
    3. '       ' → logprob: -6.851907730102539
    4. ' if' → logprob: -7.976907730102539
    5. '   ' → logprob: -8.601907730102539
    6. 'if' → logprob: -9.726907730102539
    7. ' x' → logprob: -11.101907730102539
    8. 'x' → logprob: -11.726907730102539
    9. ' neighbors' → logprob: -11.726907730102539
    10. '	for' → logprob: -12.226907730102539

Token 184: ' nb' (ID: 28791)
  Prédit: 'nx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'nx' → logprob: -0.0011849920265376568
    2. 'hx' → logprob: -7.126184940338135
    3. 'n' → logprob: -8.751185417175293
    4. ' nx' → logprob: -9.001185417175293
    5. 'nh' → logprob: -9.751185417175293
    6. '(nx' → logprob: -11.126185417175293
    7. 'h' → logprob: -11.376185417175293
    8. 'hn' → logprob: -12.126185417175293
    9. 'nb' → logprob: -13.001185417175293
    10. 'dx' → logprob: -13.251185417175293

Token 185: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.17986473441123962
    2. 'in' → logprob: -1.804864764213562
    3. ' ' → logprob: -9.929864883422852
    4. ',' → logprob: -10.179864883422852
    5. 'n' → logprob: -11.554864883422852
    6. 'f' → logprob: -12.679864883422852
    7. '(' → logprob: -12.679864883422852
    8. 's' → logprob: -12.804864883422852
    9. ')' → logprob: -13.054864883422852
    10. 'e' → logprob: -13.429864883422852

Token 186: ' neighbors' (ID: 31655)
  Prédit: 'neighbors'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'neighbors' → logprob: -0.0019291093340143561
    2. ' neighbors' → logprob: -6.25192928314209
    3. 'ne' → logprob: -14.75192928314209
    4. '_neighbors' → logprob: -16.376928329467773
    5. '   ' → logprob: -16.751928329467773
    6. 'neighbor' → logprob: -16.876928329467773
    7. '(ne' → logprob: -17.626928329467773
    8. 'Neighbors' → logprob: -18.126928329467773
    9. ' ' → logprob: -18.376928329467773
    10. '[' → logprob: -19.001928329467773

Token 187: '(*' (ID: 9000)
  Prédit: '(*'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(*' → logprob: -0.16038183867931366
    2. '(f' → logprob: -1.91038179397583
    3. '(' → logprob: -8.785382270812988
    4. 'f' → logprob: -13.660382270812988
    5. '(*(' → logprob: -13.910382270812988
    6. ' (*' → logprob: -14.035382270812988
    7. ' (' → logprob: -15.035382270812988
    8. '
' → logprob: -15.160382270812988
    9. '(
' → logprob: -15.410382270812988
    10. '*f' → logprob: -15.660382270812988

Token 188: 'f' (ID: 69)
  Prédit: 'f'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -1.981667537620524e-06
    2. ' f' → logprob: -13.875001907348633
    3. '(f' → logprob: -14.125001907348633
    4. ')' → logprob: -15.750001907348633
    5. '   ' → logprob: -17.000001907348633
    6. '
' → logprob: -18.625001907348633
    7. '	f' → logprob: -18.750001907348633
    8. 'foot' → logprob: -18.875001907348633
    9. '```' → logprob: -20.125001907348633
    10. ' ' → logprob: -20.625001907348633

Token 189: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.31377965211868286
    2. '):
' → logprob: -1.313779592514038
    3. '       ' → logprob: -8.188779830932617
    4. '):
' → logprob: -8.688779830932617
    5. ')' → logprob: -10.438779830932617
    6. '   ' → logprob: -11.063779830932617
    7. ' ):' → logprob: -11.688779830932617
    8. '           ' → logprob: -11.813779830932617
    9. ':' → logprob: -12.813779830932617
    10. '):

' → logprob: -12.813779830932617

Token 190: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.026190096512436867
    2. ':' → logprob: -4.151190280914307
    3. '```' → logprob: -5.651190280914307
    4. ' if' → logprob: -5.901190280914307
    5. ':
' → logprob: -6.526190280914307
    6. '<|end|>' → logprob: -7.276190280914307
    7. '       ' → logprob: -7.401190280914307
    8. ',' → logprob: -8.401189804077148
    9. '   ' → logprob: -8.651189804077148
    10. '):
' → logprob: -8.901189804077148

Token 191: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.038435496389865875
    2. 'if' (adapté à ' if') → logprob: -3.288435459136963
    3. '           ' → logprob: -8.038435935974121
    4. '```' → logprob: -10.163435935974121
    5. '   ' → logprob: -10.913435935974121
    6. '       ' → logprob: -11.413435935974121
    7. 'If' → logprob: -13.788435935974121
    8. '	if' → logprob: -14.163435935974121
    9. '               ' → logprob: -14.413435935974121
    10. '
' → logprob: -14.663435935974121

Token 192: ' nb' (ID: 28791)
  Prédit: ' nb'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' nb' → logprob: -0.25298506021499634
    2. 'nb' → logprob: -1.5029850006103516
    3. '(nb' → logprob: -6.877985000610352
    4. '	nb' → logprob: -10.752985000610352
    5. '_nb' → logprob: -13.127985000610352
    6. '(' → logprob: -14.127985000610352
    7. ' (' → logprob: -14.502985000610352
    8. 'b' → logprob: -15.502985000610352
    9. ' ' → logprob: -16.12798500061035
    10. 'n' → logprob: -16.50298500061035

Token 193: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.25193706154823303
    2. 'in' → logprob: -1.5019370317459106
    3. ' ' → logprob: -12.251936912536621
    4. '<|end|>' → logprob: -13.751936912536621
    5. '!=' → logprob: -14.001936912536621
    6. ' !=' → logprob: -14.876936912536621
    7. '
' → logprob: -15.626936912536621
    8. ' not' → logprob: -15.626936912536621
    9. '	in' → logprob: -16.001937866210938
    10. ')' → logprob: -16.251937866210938

Token 194: ' heads' (ID: 24696)
  Prédit: 'heads'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'heads' → logprob: -0.005267434287816286
    2. ' heads' → logprob: -5.25526762008667
    3. 'head' → logprob: -10.380267143249512
    4. 'feet' → logprob: -13.630267143249512
    5. 'foot' → logprob: -14.755267143249512
    6. '   ' → logprob: -14.880267143249512
    7. 'Heads' → logprob: -15.005267143249512
    8. ' ' → logprob: -16.005268096923828
    9. '_heads' → logprob: -16.380268096923828
    10. 'headers' → logprob: -18.130268096923828

Token 195: ':
' (ID: 734)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.014169269241392612
    2. 'and' → logprob: -4.264169216156006
    3. '   ' → logprob: -13.139169692993164
    4. ' ' → logprob: -13.389169692993164
    5. '           ' → logprob: -13.389169692993164
    6. '       ' → logprob: -15.389169692993164
    7. '  ' → logprob: -16.264169692993164
    8. '    ' → logprob: -16.514169692993164
    9. '	and' → logprob: -16.514169692993164
    10. '        ' → logprob: -16.639169692993164

Token 196: '               ' (ID: 506)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.002986375242471695
    2. 'and' → logprob: -5.877986431121826
    3. '           ' → logprob: -8.752985954284668
    4. '               ' → logprob: -10.877985954284668
    5. ' ' → logprob: -13.877985954284668
    6. '       ' → logprob: -14.127985954284668
    7. '            ' → logprob: -14.127985954284668
    8. '   ' → logprob: -14.877985954284668
    9. '          ' → logprob: -15.002985954284668
    10. '<|end|>' → logprob: -15.252985954284668

Token 197: ' if' (ID: 538)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.012581352144479752
    2. '                   ' → logprob: -4.5125813484191895
    3. 'and' → logprob: -7.3875813484191895
    4. '               ' → logprob: -7.8875813484191895
    5. ' bad' → logprob: -8.262581825256348
    6. ' if' → logprob: -9.637581825256348
    7. '           ' → logprob: -9.637581825256348
    8. ' ' → logprob: -10.137581825256348
    9. '                ' → logprob: -10.887581825256348
    10. '   ' → logprob: -11.262581825256348

Token 198: ' nb' (ID: 28791)
  Prédit: ' nb'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' nb' → logprob: -0.14894558489322662
    2. 'nb' → logprob: -2.0239455699920654
    3. '(nb' → logprob: -5.2739458084106445
    4. '	nb' → logprob: -7.8989458084106445
    5. 'f' → logprob: -8.023945808410645
    6. '(' → logprob: -9.023945808410645
    7. ' f' → logprob: -9.023945808410645
    8. ' (' → logprob: -9.648945808410645
    9. ' not' → logprob: -10.023945808410645
    10. 'not' → logprob: -10.523945808410645

Token 199: ' not' (ID: 625)
  Prédit: ' not'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.2609884440898895
    2. '!=' → logprob: -1.760988473892212
    3. ' !=' → logprob: -3.010988473892212
    4. 'not' → logprob: -4.760988235473633
    5. '==' → logprob: -10.760988235473633
    6. ')!=' → logprob: -12.385988235473633
    7. '()!=' → logprob: -12.885988235473633
    8. ' ==' → logprob: -13.260988235473633
    9. ')' → logprob: -13.385988235473633
    10. '!=(' → logprob: -13.510988235473633

Token 200: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.49216824769973755
    2. 'in' → logprob: -0.9921682476997375
    3. '=' → logprob: -4.117168426513672
    4. '==' → logprob: -6.867168426513672
    5. ' =' → logprob: -8.617168426513672
    6. '<|end|>' → logprob: -9.242168426513672
    7. ')' → logprob: -9.867168426513672
    8. '_heads' → logprob: -10.117168426513672
    9. '           ' → logprob: -10.367168426513672
    10. '   ' → logprob: -10.367168426513672

Token 201: ' foot' (ID: 6428)
  Prédit: 'foot'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'foot' → logprob: -0.515897274017334
    2. ' foot' → logprob: -1.015897274017334
    3. 'fo' → logprob: -3.765897274017334
    4. '{' → logprob: -5.515897274017334
    5. ' feet' → logprob: -5.640897274017334
    6. 'heads' → logprob: -5.640897274017334
    7. ' heads' → logprob: -5.640897274017334
    8. 'feet' → logprob: -6.765897274017334
    9. ' fo' → logprob: -7.015897274017334
    10. 'f' → logprob: -8.515897750854492

Token 202: 's' (ID: 82)
  Prédit: 's'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -2.1008713702030946e-06
    2. 'f' → logprob: -13.875001907348633
    3. ' ' → logprob: -15.000001907348633
    4. 'to' → logprob: -16.000001907348633
    5. '   ' → logprob: -16.125001907348633
    6. '<|end|>' → logprob: -16.125001907348633
    7. ' s' → logprob: -16.500001907348633
    8. 'fo' → logprob: -16.875001907348633
    9. 'for' → logprob: -17.250001907348633
    10. '1' → logprob: -17.375001907348633

Token 203: ':
' (ID: 734)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.11416351795196533
    2. 'and' → logprob: -2.364163398742676
    3. ':' → logprob: -4.489163398742676
    4. '   ' → logprob: -7.114163398742676
    5. ' or' → logprob: -7.114163398742676
    6. ':
' → logprob: -7.739163398742676
    7. ' ' → logprob: -7.739163398742676
    8. 'or' → logprob: -9.864163398742676
    9. '  ' → logprob: -11.614163398742676
    10. ' :' → logprob: -11.614163398742676

Token 204: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.024451756849884987
    2. ' and' → logprob: -4.024451732635498
    3. '               ' → logprob: -5.899451732635498
    4. ':
' → logprob: -6.149451732635498
    5. '                  ' → logprob: -8.149452209472656
    6. ' or' → logprob: -8.274452209472656
    7. '           ' → logprob: -8.399452209472656
    8. ':' → logprob: -8.774452209472656
    9. 'and' → logprob: -9.274452209472656
    10. '
' → logprob: -9.399452209472656

Token 205: ' #' (ID: 1069)
  Prédit: ' bad'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' bad' → logprob: -0.30509036779403687
    2. 'bad' → logprob: -1.5550904273986816
    3. '
' → logprob: -3.8050904273986816
    4. '                   ' → logprob: -3.8050904273986816
    5. '                       ' → logprob: -5.805090427398682
    6. '               ' → logprob: -6.055090427398682
    7. '   ' → logprob: -6.805090427398682
    8. '           ' → logprob: -7.930090427398682
    9. '       ' → logprob: -9.805089950561523
    10. '_bad' → logprob: -9.805089950561523

Token 206: ' nb' (ID: 28791)
  Prédit: 'bad'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'bad' → logprob: -0.28890079259872437
    2. ' bad' → logprob: -1.4139008522033691
    3. '                   ' → logprob: -5.413900852203369
    4. '               ' → logprob: -6.413900852203369
    5. '           ' → logprob: -7.413900852203369
    6. '   ' → logprob: -7.788900852203369
    7. '                       ' → logprob: -7.913900852203369
    8. '
' → logprob: -9.413900375366211
    9. '       ' → logprob: -9.788900375366211
    10. 'break' → logprob: -10.913900375366211

Token 207: ' is' (ID: 382)
  Prédit: ' !='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' !=' → logprob: -0.26127150654792786
    2. '!=' → logprob: -2.0112714767456055
    3. ' in' → logprob: -2.8862714767456055
    4. ' ==' → logprob: -4.0112714767456055
    5. ' is' → logprob: -4.6362714767456055
    6. '==' → logprob: -4.8862714767456055
    7. ' not' → logprob: -5.6362714767456055
    8. ' ' → logprob: -7.5112714767456055
    9. 's' → logprob: -7.6362714767456055
    10. 'in' → logprob: -9.136271476745605

Token 208: ' a' (ID: 261)
  Prédit: ' not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.5446889400482178
    2. ' a' → logprob: -1.6696889400482178
    3. 'a' → logprob: -2.0446889400482178
    4. 'not' → logprob: -2.5446889400482178
    5. ' f' → logprob: -4.794689178466797
    6. ' in' → logprob: -5.794689178466797
    7. 'f' → logprob: -5.794689178466797
    8. 'h' → logprob: -5.919689178466797
    9. ' the' → logprob: -6.294689178466797
    10. ' an' → logprob: -6.544689178466797

Token 209: ' head' (ID: 3189)
  Prédit: ' head'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' head' → logprob: -0.31985604763031006
    2. 'head' → logprob: -1.31985604763031
    3. ' different' → logprob: -6.4448561668396
    4. 'foot' → logprob: -6.8198561668396
    5. ' foot' → logprob: -7.0698561668396
    6. 'different' → logprob: -7.3198561668396
    7. ' ' → logprob: -8.007355690002441
    8. 'h' → logprob: -8.132355690002441
    9. ''s' → logprob: -8.757355690002441
    10. '   ' → logprob: -8.944855690002441

Token 210: ' cell' (ID: 4206)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.21324028074741364
    2. '                   ' → logprob: -2.213240385055542
    3. '                       ' → logprob: -3.088240385055542
    4. 'and' → logprob: -3.463240385055542
    5. '               ' → logprob: -6.088240146636963
    6. ' or' → logprob: -7.838240146636963
    7. ',' → logprob: -7.963240146636963
    8. ':' → logprob: -7.963240146636963
    9. ' not' → logprob: -7.963240146636963
    10. '           ' → logprob: -8.088240623474121

Token 211: ',' (ID: 11)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.5663771033287048
    2. ' and' → logprob: -0.9413771033287048
    3. '                       ' → logprob: -3.6913771629333496
    4. '               ' → logprob: -4.69137716293335
    5. '
' → logprob: -6.31637716293335
    6. ',' → logprob: -6.31637716293335
    7. 'and' → logprob: -6.44137716293335
    8. ':' → logprob: -7.19137716293335
    9. '                    
' → logprob: -7.56637716293335
    10. '           ' → logprob: -8.066376686096191

Token 212: ' f' (ID: 285)
  Prédit: '                       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.6488807201385498
    2. ' bad' → logprob: -0.8988807201385498
    3. '                   ' → logprob: -3.02388072013855
    4. 'bad' → logprob: -4.398880958557129
    5. '               ' → logprob: -5.773880958557129
    6. ' and' → logprob: -6.273880958557129
    7. ' if' → logprob: -6.398880958557129
    8. '                           ' → logprob: -7.648880958557129
    9. '           ' → logprob: -8.023880958557129
    10. '       ' → logprob: -8.148880958557129

Token 213: ' is' (ID: 382)
  Prédit: ' !='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' !=' → logprob: -0.07857885956764221
    2. '!=' → logprob: -2.9535789489746094
    3. ' not' → logprob: -3.9535789489746094
    4. '                   ' → logprob: -6.453578948974609
    5. ' is' → logprob: -7.703578948974609
    6. ' ==' → logprob: -8.07857894897461
    7. '               ' → logprob: -8.07857894897461
    8. ' in' → logprob: -8.32857894897461
    9. ''s' → logprob: -8.32857894897461
    10. ' ' → logprob: -8.70357894897461

Token 214: ' foot' (ID: 6428)
  Prédit: ' not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.7145302295684814
    2. ' a' → logprob: -1.8395302295684814
    3. 'not' → logprob: -1.8395302295684814
    4. 'a' → logprob: -1.9645302295684814
    5. ' its' → logprob: -4.214529991149902
    6. ' the' → logprob: -5.089529991149902
    7. 'the' → logprob: -5.214529991149902
    8. 'foot' → logprob: -5.589529991149902
    9. ' in' → logprob: -5.839529991149902
    10. ''s' → logprob: -6.089529991149902

Token 215: ' of' (ID: 328)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.04634863883256912
    2. '                       ' → logprob: -4.171348571777344
    3. ',' → logprob: -4.296348571777344
    4. '                    
' → logprob: -5.421348571777344
    5. '               ' → logprob: -5.546348571777344
    6. ' and' → logprob: -5.921348571777344
    7. '                        
' → logprob: -7.046348571777344
    8. '           ' → logprob: -7.171348571777344
    9. '
' → logprob: -7.421348571777344
    10. '.' → logprob: -7.796348571777344

Token 216: ' different' (ID: 2647)
  Prédit: 'some'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'some' → logprob: -0.7119631767272949
    2. 'a' → logprob: -1.711963176727295
    3. 'another' → logprob: -2.086963176727295
    4. ' a' → logprob: -2.836963176727295
    5. ' some' → logprob: -3.211963176727295
    6. 'the' → logprob: -3.586963176727295
    7. ' another' → logprob: -3.961963176727295
    8. 'something' → logprob: -4.961963176727295
    9. ' the' → logprob: -4.961963176727295
    10. 'f' → logprob: -5.211963176727295

Token 217: ' fut' (ID: 4073)
  Prédit: 'snake'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'snake' → logprob: -1.617425799369812
    2. ' piece' → logprob: -2.7424259185791016
    3. 'piece' → logprob: -2.9924259185791016
    4. 'b' → logprob: -2.9924259185791016
    5. 'player' → logprob: -2.9924259185791016
    6. 'ship' → logprob: -3.2424259185791016
    7. ' domino' → logprob: -3.2424259185791016
    8. 'body' → logprob: -3.3674259185791016
    9. ' snake' → logprob: -3.3674259185791016
    10. ' player' → logprob: -3.6174259185791016

Token 218: 'on' (ID: 263)
  Prédit: 'ball'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ball' → logprob: -0.08307584375143051
    2. 's' → logprob: -3.583075761795044
    3. 'print' → logprob: -3.958075761795044
    4. 'bol' → logprob: -4.208076000213623
    5. 'b' → logprob: -4.708076000213623
    6. 'ure' → logprob: -5.958076000213623
    7. 'bad' → logprob: -6.208076000213623
    8. 'bal' → logprob: -7.208076000213623
    9. 'bot' → logprob: -7.583076000213623
    10. '   ' → logprob: -8.208075523376465

Token 219: '
' (ID: 198)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.08388800919055939
    2. '                       ' → logprob: -2.833888053894043
    3. '
' → logprob: -5.333888053894043
    4. '               ' → logprob: -5.458888053894043
    5. ':
' → logprob: -5.583888053894043
    6. ',' → logprob: -5.583888053894043
    7. '.' → logprob: -6.833888053894043
    8. '                    
' → logprob: -7.083888053894043
    9. ':' → logprob: -7.208888053894043
    10. '                        
' → logprob: -7.583888053894043

Token 220: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.0382472388446331
    2. '                       ' → logprob: -3.4132473468780518
    3. '               ' → logprob: -5.663247108459473
    4. '           ' → logprob: -7.788247108459473
    5. '                           ' → logprob: -7.913247108459473
    6. '
' → logprob: -8.788247108459473
    7. ' bad' → logprob: -10.288247108459473
    8. 'bad' → logprob: -10.288247108459473
    9. ',' → logprob: -10.413247108459473
    10. '                    
' → logprob: -10.663247108459473

Token 221: ' bad' (ID: 4790)
  Prédit: 'bad'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bad' (adapté à ' bad') → logprob: -0.12683707475662231
    2. ' bad' → logprob: -2.8768370151519775
    3. '                   ' → logprob: -3.0018370151519775
    4. '               ' → logprob: -4.876837253570557
    5. '                       ' → logprob: -5.501837253570557
    6. '
' → logprob: -7.376837253570557
    7. '           ' → logprob: -7.876837253570557
    8. '   ' → logprob: -8.126836776733398
    9. '                           ' → logprob: -10.126836776733398
    10. '       ' → logprob: -10.376836776733398

Token 222: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3132690191268921
    2. '=' → logprob: -1.313269019126892
    3. ' ' → logprob: -12.563268661499023
    4. '   ' → logprob: -13.063268661499023
    5. '    ' → logprob: -13.688268661499023
    6. '=True' → logprob: -15.688268661499023
    7. '  ' → logprob: -16.063268661499023
    8. ' |=' → logprob: -17.063268661499023
    9. '               ' → logprob: -17.313268661499023
    10. '                ' → logprob: -17.438268661499023

Token 223: ' True' (ID: 6432)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'True' → logprob: -0.001170225441455841
    2. ' True' → logprob: -6.7511701583862305
    3. '(True' → logprob: -18.126171112060547
    4. '   ' → logprob: -18.251171112060547
    5. '=True' → logprob: -18.501171112060547
    6. 'False' → logprob: -19.251171112060547
    7. '1' → logprob: -19.876171112060547
    8. 'true' → logprob: -20.251171112060547
    9. 'Tr' → logprob: -21.626171112060547
    10. ' ' → logprob: -22.501171112060547

Token 224: '
' (ID: 198)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.008204256184399128
    2. '<|end|>' → logprob: -5.758204460144043
    3. '               ' → logprob: -5.883204460144043
    4. '           ' → logprob: -7.258204460144043
    5. '                       ' → logprob: -8.258204460144043
    6. '       ' → logprob: -8.258204460144043
    7. '
' → logprob: -8.758204460144043
    8. '                           ' → logprob: -9.133204460144043
    9. '                  ' → logprob: -9.133204460144043
    10. '                ' → logprob: -9.258204460144043

Token 225: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.00180953333619982
    2. '               ' → logprob: -6.876809597015381
    3. '           ' → logprob: -8.001809120178223
    4. '       ' → logprob: -8.626809120178223
    5. '   ' → logprob: -9.001809120178223
    6. '                       ' → logprob: -10.001809120178223
    7. '    
' → logprob: -10.501809120178223
    8. '<|end|>' → logprob: -10.751809120178223
    9. '                    
' → logprob: -11.376809120178223
    10. 'break' → logprob: -11.876809120178223

Token 226: ' break' (ID: 2338)
  Prédit: 'break'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'break' (adapté à ' break') → logprob: -0.050363846123218536
    2. ' break' → logprob: -3.050363779067993
    3. '                   ' → logprob: -7.050364017486572
    4. '               ' → logprob: -8.175363540649414
    5. '       ' → logprob: -8.300363540649414
    6. '           ' → logprob: -8.425363540649414
    7. '   ' → logprob: -9.425363540649414
    8. '	break' → logprob: -9.675363540649414
    9. '                       ' → logprob: -11.925363540649414
    10. '
' → logprob: -13.175363540649414

Token 227: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3646654188632965
    2. '
' → logprob: -1.3646653890609741
    3. '<|end|>' → logprob: -3.9896655082702637
    4. '  
' → logprob: -4.989665508270264
    5. '           ' → logprob: -5.114665508270264
    6. '    
' → logprob: -5.114665508270264
    7. '   ' → logprob: -5.614665508270264
    8. '        
' → logprob: -5.989665508270264
    9. '    ' → logprob: -6.239665508270264
    10. '               ' → logprob: -6.864665508270264

Token 228: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.006982475984841585
    2. '           ' → logprob: -5.756982326507568
    3. '
' → logprob: -6.631982326507568
    4. '   ' → logprob: -7.006982326507568
    5. '<|end|>' → logprob: -7.881982326507568
    6. '               ' → logprob: -8.006982803344727
    7. '        ' → logprob: -8.381982803344727
    8. '  
' → logprob: -9.131982803344727
    9. '    ' → logprob: -9.381982803344727
    10. '        
' → logprob: -9.381982803344727

Token 229: ' if' (ID: 538)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.14511317014694214
    2. '       ' → logprob: -2.145113229751587
    3. '
' → logprob: -4.770112991333008
    4. ' ' → logprob: -5.520112991333008
    5. '    ' → logprob: -6.270112991333008
    6. '<|end|>' → logprob: -6.520112991333008
    7. '  ' → logprob: -7.520112991333008
    8. '           ' → logprob: -7.520112991333008
    9. '    
' → logprob: -7.770112991333008
    10. '     ' → logprob: -8.770112991333008

Token 230: ' bad' (ID: 4790)
  Prédit: ' bad'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' bad' → logprob: -0.00317783304490149
    2. 'bad' → logprob: -5.753177642822266
    3. ' ' → logprob: -16.128177642822266
    4. 'b' → logprob: -17.128177642822266
    5. '_bad' → logprob: -18.128177642822266
    6. ' ' → logprob: -18.378177642822266
    7. ' good' → logprob: -18.628177642822266
    8. ' b' → logprob: -20.253177642822266
    9. 'Bad' → logprob: -20.628177642822266
    10. '	b' → logprob: -20.878177642822266

Token 231: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.18961578607559204
    2. ':
' → logprob: -1.8146157264709473
    3. '           ' → logprob: -4.939615726470947
    4. '       ' → logprob: -6.064615726470947
    5. '   ' → logprob: -8.689616203308105
    6. '==' → logprob: -9.564616203308105
    7. '):
' → logprob: -10.814616203308105
    8. ':
' → logprob: -11.189616203308105
    9. ' ==' → logprob: -11.439616203308105
    10. '               ' → logprob: -11.564616203308105

Token 232: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.001234518364071846
    2. '       ' → logprob: -7.126234531402588
    3. ' break' → logprob: -8.12623405456543
    4. 'break' → logprob: -9.50123405456543
    5. '   ' → logprob: -10.12623405456543
    6. '               ' → logprob: -11.50123405456543
    7. '		' → logprob: -12.62623405456543
    8. '	break' → logprob: -14.00123405456543
    9. '```' → logprob: -14.12623405456543
    10. '	       ' → logprob: -14.12623405456543

Token 233: ' break' (ID: 2338)
  Prédit: 'break'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'break' (adapté à ' break') → logprob: -0.3273371458053589
    2. ' break' → logprob: -1.3273371458053589
    3. '           ' → logprob: -4.577337265014648
    4. '       ' → logprob: -6.202337265014648
    5. '   ' → logprob: -6.452337265014648
    6. '	break' → logprob: -9.577337265014648
    7. '               ' → logprob: -11.452337265014648
    8. '  ' → logprob: -12.077337265014648
    9. ' ' → logprob: -12.327337265014648
    10. '```' → logprob: -14.077337265014648

Token 234: '

' (ID: 279)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.38012292981147766
    2. '
' → logprob: -1.5051229000091553
    3. '<|end|>' → logprob: -2.6301229000091553
    4. '    
' → logprob: -4.505123138427734
    5. 'print' → logprob: -5.255123138427734
    6. 'if' → logprob: -5.755123138427734
    7. ' if' → logprob: -6.755123138427734
    8. '  
' → logprob: -7.630123138427734
    9. '<|end|>' → logprob: -8.630123138427734
    10. '        
' → logprob: -9.130123138427734

Token 235: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.040596574544906616
    2. 'print' → logprob: -3.2905964851379395
    3. 'if' → logprob: -6.0405964851379395
    4. '
' → logprob: -9.915596961975098
    5. '    
' → logprob: -10.040596961975098
    6. ' print' → logprob: -10.415596961975098
    7. ' if' → logprob: -10.415596961975098
    8. '```' → logprob: -11.165596961975098
    9. '<|end|>' → logprob: -13.540596961975098
    10. '        
' → logprob: -14.040596961975098

Token 236: ' print' (ID: 2123)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5647575259208679
    2. 'print' (adapté à ' print') → logprob: -1.3147575855255127
    3. 'if' → logprob: -1.8147575855255127
    4. ' if' → logprob: -9.564757347106934
    5. ' print' → logprob: -11.439757347106934
    6. '```' → logprob: -13.064757347106934
    7. '    
' → logprob: -13.439757347106934
    8. 'for' → logprob: -15.689757347106934
    9. 'else' → logprob: -15.814757347106934
    10. 'import' → logprob: -16.68975830078125

Token 237: '("' (ID: 568)
  Prédit: '("'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '("' → logprob: -0.003272541332989931
    2. '('' → logprob: -5.753272533416748
    3. '(' → logprob: -9.503273010253906
    4. '(b' → logprob: -11.503273010253906
    5. '(-' → logprob: -12.253273010253906
    6. '(not' → logprob: -13.003273010253906
    7. '(("' → logprob: -13.253273010253906
    8. ' ("' → logprob: -15.003273010253906
    9. '"' → logprob: -15.003273010253906
    10. '(""' → logprob: -15.378273010253906

Token 238: 'No' (ID: 3160)
  Prédit: 'YES'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'YES' → logprob: -1.2989532947540283
    2. 'NO' → logprob: -1.7989532947540283
    3. 'Yes' → logprob: -2.4239532947540283
    4. 'NG' → logprob: -2.5489532947540283
    5. 'No' → logprob: -2.6739532947540283
    6. 'COR' → logprob: -2.7989532947540283
    7. 'BAD' → logprob: -3.2989532947540283
    8. 'Bad' → logprob: -3.5489532947540283
    9. 'NA' → logprob: -3.5489532947540283
    10. 'Y' → logprob: -3.5489532947540283

Token 239: '"' (ID: 1)
  Prédit: '")'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '")' → logprob: -0.020955117419362068
    2. '"' → logprob: -5.0209550857543945
    3. ' problem' → logprob: -5.0209550857543945
    4. ' ")' → logprob: -5.6459550857543945
    5. ')' → logprob: -6.2709550857543945
    6. '\n' → logprob: -8.145955085754395
    7. ' Problem' → logprob: -8.395955085754395
    8. ' solution' → logprob: -8.520955085754395
    9. '!")' → logprob: -9.270955085754395
    10. 't' → logprob: -9.583455085754395

Token 240: ' if' (ID: 538)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.012292184866964817
    2. '")' → logprob: -5.012292385101318
    3. ' if' → logprob: -5.262292385101318
    4. 'if' → logprob: -8.13729190826416
    5. '"' → logprob: -9.63729190826416
    6. ')")' → logprob: -11.63729190826416
    7. ' )' → logprob: -12.51229190826416
    8. '')' → logprob: -13.38729190826416
    9. ',' → logprob: -13.76229190826416
    10. '!)' → logprob: -14.13729190826416

Token 241: ' bad' (ID: 4790)
  Prédit: ' bad'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' bad' → logprob: -4.644463479053229e-05
    2. 'bad' → logprob: -10.000046730041504
    3. ' not' → logprob: -13.875046730041504
    4. ' ' → logprob: -18.125045776367188
    5. ' ' → logprob: -18.125045776367188
    6. '_bad' → logprob: -19.000045776367188
    7. ' good' → logprob: -19.250045776367188
    8. '.bad' → logprob: -19.375045776367188
    9. '   ' → logprob: -20.125045776367188
    10. 'not' → logprob: -20.500045776367188

Token 242: ' else' (ID: 1203)
  Prédit: ' else'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' else' → logprob: -0.2519405782222748
    2. 'else' → logprob: -1.5019406080245972
    3. '==' → logprob: -12.376940727233887
    4. '   ' → logprob: -12.876940727233887
    5. ' ' → logprob: -13.001940727233887
    6. '	else' → logprob: -13.751940727233887
    7. '```' → logprob: -14.626940727233887
    8. ')' → logprob: -14.751940727233887
    9. '    ' → logprob: -15.501940727233887
    10. '  ' → logprob: -16.12693977355957

Token 243: ' "' (ID: 392)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.02355908788740635
    2. ' "' → logprob: -3.773559093475342
    3. '"No' → logprob: -8.523558616638184
    4. '   ' → logprob: -10.273558616638184
    5. '
' → logprob: -10.523558616638184
    6. ' ' → logprob: -10.898558616638184
    7. ''' → logprob: -11.523558616638184
    8. 'Yes' → logprob: -12.023558616638184
    9. ' Yes' → logprob: -12.398558616638184
    10. ')' → logprob: -12.398558616638184

Token 244: 'Yes' (ID: 13022)
  Prédit: 'Yes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Yes' → logprob: -0.0010393599513918161
    2. '"' → logprob: -6.876039505004883
    3. ' Yes' → logprob: -12.501039505004883
    4. 'YES' → logprob: -13.251039505004883
    5. 'Ye' → logprob: -14.501039505004883
    6. '“Yes' → logprob: -15.376039505004883
    7. 'yes' → logprob: -16.001039505004883
    8. 'No' → logprob: -16.376039505004883
    9. 'Ok' → logprob: -16.626039505004883
    10. 'OK' → logprob: -17.126039505004883

Token 245: '")' (ID: 1405)
  Prédit: '")'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '")' → logprob: -0.0061429147608578205
    2. ')' → logprob: -5.256143093109131
    3. ')")' → logprob: -7.006143093109131
    4. '")
' → logprob: -13.256142616271973
    5. '())' → logprob: -15.631142616271973
    6. ')"' → logprob: -15.881142616271973
    7. '!")' → logprob: -16.25614356994629
    8. '')' → logprob: -16.75614356994629
    9. '}")' → logprob: -16.75614356994629
    10. ')")
' → logprob: -17.13114356994629


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 243
Tokens correctement prédits (1ère position, stricte): 110
Tokens correctement prédits (1ère position, avec adaptation): 120
Tokens correctement prédits (top 10): 206
Précision stricte (1ère position): 45.27%
Précision adaptée (1ère position): 49.38%
Précision (top 10): 84.77%
================================================================================
